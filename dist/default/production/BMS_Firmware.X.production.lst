

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Mar 15 13:56:53 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1719
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	stringtext12,global,class=STRCODE,delta=2
    17                           	psect	stringtext13,global,class=STRCODE,delta=2
    18                           	psect	stringtext14,global,class=STRCODE,delta=2
    19                           	psect	stringtext15,global,class=STRCODE,delta=2
    20                           	psect	stringtext16,global,class=STRCODE,delta=2
    21                           	psect	stringtext17,global,class=STRCODE,delta=2
    22                           	psect	stringtext18,global,class=STRCODE,delta=2
    23                           	psect	stringtext19,global,class=STRCODE,delta=2
    24                           	psect	stringtext20,global,class=STRCODE,delta=2
    25                           	psect	stringtext21,global,class=STRCODE,delta=2
    26                           	psect	stringtext22,global,class=STRCODE,delta=2
    27                           	psect	stringtext23,global,class=STRCODE,delta=2
    28                           	psect	stringtext24,global,class=STRCODE,delta=2
    29                           	psect	stringtext25,global,class=STRCODE,delta=2
    30                           	psect	stringtext26,global,class=STRCODE,delta=2
    31                           	psect	stringtext27,global,class=STRCODE,delta=2
    32                           	psect	stringtext28,global,class=STRCODE,delta=2
    33                           	psect	stringtext29,global,class=STRCODE,delta=2
    34                           	psect	stringtext30,global,class=STRCODE,delta=2
    35                           	psect	stringtext31,global,class=STRCODE,delta=2
    36                           	psect	stringtext32,global,class=STRCODE,delta=2
    37                           	psect	stringtext33,global,class=STRCODE,delta=2
    38                           	psect	stringtext34,global,class=STRCODE,delta=2
    39                           	psect	stringtext35,global,class=STRCODE,delta=2
    40                           	psect	stringtext36,global,class=STRCODE,delta=2
    41                           	psect	stringtext37,global,class=STRCODE,delta=2
    42                           	psect	stringtext38,global,class=STRCODE,delta=2
    43                           	psect	stringtext39,global,class=STRCODE,delta=2
    44                           	psect	stringtext40,global,class=STRCODE,delta=2
    45                           	psect	stringtext41,global,class=STRCODE,delta=2
    46                           	psect	stringtext42,global,class=STRCODE,delta=2
    47                           	psect	stringtext43,global,class=STRCODE,delta=2
    48                           	psect	stringtext44,global,class=STRCODE,delta=2
    49                           	psect	stringtext45,global,class=STRCODE,delta=2
    50                           	psect	stringtext46,global,class=STRCODE,delta=2
    51                           	psect	stringtext47,global,class=STRCODE,delta=2
    52                           	psect	cinit,global,class=CODE,merge=1,delta=2
    53                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    54                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    55                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    56                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    57                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    58                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    59                           	psect	clrtext,global,class=CODE,delta=2
    60                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    61                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    62                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    63                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    64                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    65                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    66                           	psect	text1,local,class=CODE,merge=1,delta=2
    67                           	psect	text2,local,class=CODE,merge=1,delta=2
    68                           	psect	text3,local,class=CODE,merge=1,delta=2
    69                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    70                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    71                           	psect	text6,local,class=CODE,merge=1,delta=2
    72                           	psect	text7,local,class=CODE,merge=1,delta=2
    73                           	psect	text8,local,class=CODE,merge=1,delta=2
    74                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    75                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    76                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    77                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    78                           	psect	text13,local,class=CODE,merge=1,delta=2
    79                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    80                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    81                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    82                           	psect	text17,local,class=CODE,merge=1,delta=2
    83                           	psect	text18,local,class=CODE,merge=1,delta=2
    84                           	psect	text19,local,class=CODE,merge=1,delta=2
    85                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    86                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    87                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    88                           	psect	text23,local,class=CODE,merge=1,delta=2
    89                           	psect	text24,local,class=CODE,merge=1,delta=2
    90                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    91                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    92                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    93                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    94                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    95                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    96                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    97                           	psect	text32,local,class=CODE,merge=1,delta=2
    98                           	psect	text33,local,class=CODE,merge=1,delta=2
    99                           	psect	text34,local,class=CODE,merge=1,delta=2
   100                           	psect	text35,local,class=CODE,merge=1,delta=2
   101                           	psect	text36,local,class=CODE,merge=1,delta=2,group=1
   102                           	psect	text37,local,class=CODE,merge=1,delta=2
   103                           	psect	text38,local,class=CODE,merge=1,delta=2
   104                           	psect	text39,local,class=CODE,merge=1,delta=2
   105                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
   106                           	psect	text41,local,class=CODE,merge=1,delta=2
   107                           	psect	text42,local,class=CODE,merge=1,delta=2
   108                           	psect	text43,local,class=CODE,merge=1,delta=2
   109                           	psect	text44,local,class=CODE,merge=1,delta=2
   110                           	psect	text45,local,class=CODE,merge=1,delta=2
   111                           	psect	text46,local,class=CODE,merge=1,delta=2
   112                           	psect	text47,local,class=CODE,merge=1,delta=2
   113                           	psect	text48,local,class=CODE,merge=1,delta=2,group=1
   114                           	psect	text49,local,class=CODE,merge=1,delta=2
   115                           	psect	text50,local,class=CODE,merge=1,delta=2,group=2
   116                           	psect	text51,local,class=CODE,merge=1,delta=2,group=1
   117                           	psect	text52,local,class=CODE,merge=1,delta=2,group=1
   118                           	psect	text53,local,class=CODE,merge=1,delta=2
   119                           	psect	text54,local,class=CODE,merge=1,delta=2,group=1
   120                           	psect	text55,local,class=CODE,merge=1,delta=2,group=1
   121                           	psect	text56,local,class=CODE,merge=1,delta=2,group=1
   122                           	psect	text57,local,class=CODE,merge=1,delta=2,group=1
   123                           	psect	text58,local,class=CODE,merge=1,delta=2,group=1
   124                           	psect	text59,local,class=CODE,merge=1,delta=2,group=1
   125                           	psect	text60,local,class=CODE,merge=1,delta=2
   126                           	psect	text61,local,class=CODE,merge=1,delta=2
   127                           	psect	text62,local,class=CODE,merge=1,delta=2
   128                           	psect	text63,local,class=CODE,merge=1,delta=2
   129                           	psect	text64,local,class=CODE,merge=1,delta=2
   130                           	psect	text65,local,class=CODE,merge=1,delta=2
   131                           	psect	text66,local,class=CODE,merge=1,delta=2
   132                           	psect	text67,local,class=CODE,merge=1,delta=2
   133                           	psect	text68,local,class=CODE,merge=1,delta=2
   134                           	psect	text69,local,class=CODE,merge=1,delta=2
   135                           	psect	text70,local,class=CODE,merge=1,delta=2
   136                           	psect	text71,local,class=CODE,merge=1,delta=2
   137                           	psect	text72,local,class=CODE,merge=1,delta=2
   138                           	psect	text73,local,class=CODE,merge=1,delta=2
   139                           	psect	text74,local,class=CODE,merge=1,delta=2
   140                           	psect	text75,local,class=CODE,merge=1,delta=2
   141                           	psect	text76,local,class=CODE,merge=1,delta=2
   142                           	psect	text77,local,class=CODE,merge=1,delta=2
   143                           	psect	text78,local,class=CODE,merge=1,delta=2
   144                           	psect	text79,local,class=CODE,merge=1,delta=2,group=1
   145                           	psect	intentry,global,class=CODE,delta=2
   146                           	psect	text7_split_1,local,class=CODE,merge=1,delta=2
   147                           	psect	text7_split_2,local,class=CODE,merge=1,delta=2
   148                           	dabs	1,0xCA0,32
   149                           	dabs	1,0xC20,80
   150                           	dabs	1,0xBE1,15
   151                           	dabs	1,0x2771,0,_messageBuffer
   152                           	dabs	1,0x7E,2
   153  0000                     
   154                           ; Version 2.05
   155                           ; Generated 20/12/2018 GMT
   156                           ; 
   157                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   158                           ; All rights reserved.
   159                           ; 
   160                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   161                           ; 
   162                           ; Redistribution and use in source and binary forms, with or without modification, are
   163                           ; permitted provided that the following conditions are met:
   164                           ; 
   165                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   166                           ;        conditions and the following disclaimer.
   167                           ; 
   168                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   169                           ;        of conditions and the following disclaimer in the documentation and/or other
   170                           ;        materials provided with the distribution.
   171                           ; 
   172                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   173                           ;        software without specific prior written permission.
   174                           ; 
   175                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   176                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   177                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   178                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   179                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   180                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   181                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   182                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   183                           ; 
   184                           ; 
   185                           ; Code-generator required, PIC16F1719 Definitions
   186                           ; 
   187                           ; SFR Addresses
   188  0000                     	;# 
   189  0001                     	;# 
   190  0002                     	;# 
   191  0003                     	;# 
   192  0004                     	;# 
   193  0005                     	;# 
   194  0006                     	;# 
   195  0007                     	;# 
   196  0008                     	;# 
   197  0009                     	;# 
   198  000A                     	;# 
   199  000B                     	;# 
   200  000C                     	;# 
   201  000D                     	;# 
   202  000E                     	;# 
   203  000F                     	;# 
   204  0010                     	;# 
   205  0011                     	;# 
   206  0012                     	;# 
   207  0013                     	;# 
   208  0015                     	;# 
   209  0016                     	;# 
   210  0016                     	;# 
   211  0017                     	;# 
   212  0018                     	;# 
   213  0019                     	;# 
   214  001A                     	;# 
   215  001B                     	;# 
   216  001C                     	;# 
   217  008C                     	;# 
   218  008D                     	;# 
   219  008E                     	;# 
   220  008F                     	;# 
   221  0090                     	;# 
   222  0091                     	;# 
   223  0092                     	;# 
   224  0093                     	;# 
   225  0095                     	;# 
   226  0096                     	;# 
   227  0097                     	;# 
   228  0098                     	;# 
   229  0099                     	;# 
   230  009A                     	;# 
   231  009B                     	;# 
   232  009B                     	;# 
   233  009C                     	;# 
   234  009D                     	;# 
   235  009E                     	;# 
   236  009F                     	;# 
   237  010C                     	;# 
   238  010D                     	;# 
   239  010E                     	;# 
   240  010F                     	;# 
   241  0110                     	;# 
   242  0111                     	;# 
   243  0112                     	;# 
   244  0113                     	;# 
   245  0114                     	;# 
   246  0115                     	;# 
   247  0116                     	;# 
   248  0117                     	;# 
   249  0118                     	;# 
   250  0119                     	;# 
   251  011A                     	;# 
   252  011B                     	;# 
   253  011B                     	;# 
   254  011C                     	;# 
   255  018C                     	;# 
   256  018D                     	;# 
   257  018E                     	;# 
   258  018F                     	;# 
   259  0190                     	;# 
   260  0191                     	;# 
   261  0191                     	;# 
   262  0192                     	;# 
   263  0193                     	;# 
   264  0193                     	;# 
   265  0194                     	;# 
   266  0195                     	;# 
   267  0196                     	;# 
   268  0197                     	;# 
   269  0199                     	;# 
   270  0199                     	;# 
   271  0199                     	;# 
   272  019A                     	;# 
   273  019A                     	;# 
   274  019A                     	;# 
   275  019B                     	;# 
   276  019B                     	;# 
   277  019B                     	;# 
   278  019B                     	;# 
   279  019B                     	;# 
   280  019C                     	;# 
   281  019C                     	;# 
   282  019C                     	;# 
   283  019D                     	;# 
   284  019D                     	;# 
   285  019D                     	;# 
   286  019E                     	;# 
   287  019E                     	;# 
   288  019E                     	;# 
   289  019F                     	;# 
   290  019F                     	;# 
   291  019F                     	;# 
   292  019F                     	;# 
   293  019F                     	;# 
   294  020C                     	;# 
   295  020D                     	;# 
   296  020E                     	;# 
   297  020F                     	;# 
   298  0210                     	;# 
   299  0211                     	;# 
   300  0211                     	;# 
   301  0212                     	;# 
   302  0212                     	;# 
   303  0213                     	;# 
   304  0213                     	;# 
   305  0214                     	;# 
   306  0214                     	;# 
   307  0215                     	;# 
   308  0215                     	;# 
   309  0215                     	;# 
   310  0215                     	;# 
   311  0216                     	;# 
   312  0216                     	;# 
   313  0217                     	;# 
   314  0217                     	;# 
   315  028C                     	;# 
   316  028D                     	;# 
   317  028E                     	;# 
   318  028F                     	;# 
   319  0290                     	;# 
   320  0291                     	;# 
   321  0291                     	;# 
   322  0292                     	;# 
   323  0293                     	;# 
   324  0293                     	;# 
   325  0298                     	;# 
   326  0298                     	;# 
   327  0299                     	;# 
   328  029A                     	;# 
   329  029A                     	;# 
   330  029E                     	;# 
   331  030C                     	;# 
   332  030D                     	;# 
   333  030E                     	;# 
   334  030F                     	;# 
   335  0310                     	;# 
   336  038C                     	;# 
   337  038D                     	;# 
   338  038E                     	;# 
   339  038F                     	;# 
   340  0390                     	;# 
   341  0391                     	;# 
   342  0392                     	;# 
   343  0393                     	;# 
   344  0394                     	;# 
   345  0395                     	;# 
   346  0396                     	;# 
   347  0397                     	;# 
   348  0398                     	;# 
   349  0399                     	;# 
   350  039D                     	;# 
   351  039E                     	;# 
   352  039F                     	;# 
   353  0415                     	;# 
   354  0416                     	;# 
   355  0417                     	;# 
   356  041C                     	;# 
   357  041D                     	;# 
   358  041E                     	;# 
   359  0498                     	;# 
   360  0498                     	;# 
   361  0499                     	;# 
   362  049A                     	;# 
   363  049B                     	;# 
   364  049B                     	;# 
   365  049C                     	;# 
   366  049D                     	;# 
   367  049E                     	;# 
   368  049F                     	;# 
   369  0511                     	;# 
   370  0515                     	;# 
   371  0617                     	;# 
   372  0618                     	;# 
   373  0619                     	;# 
   374  0619                     	;# 
   375  061A                     	;# 
   376  061B                     	;# 
   377  061C                     	;# 
   378  061C                     	;# 
   379  0691                     	;# 
   380  0692                     	;# 
   381  0693                     	;# 
   382  0694                     	;# 
   383  0695                     	;# 
   384  0696                     	;# 
   385  0697                     	;# 
   386  0698                     	;# 
   387  0699                     	;# 
   388  069A                     	;# 
   389  069B                     	;# 
   390  069C                     	;# 
   391  069D                     	;# 
   392  069E                     	;# 
   393  069F                     	;# 
   394  0E0F                     	;# 
   395  0E10                     	;# 
   396  0E11                     	;# 
   397  0E12                     	;# 
   398  0E13                     	;# 
   399  0E14                     	;# 
   400  0E15                     	;# 
   401  0E17                     	;# 
   402  0E20                     	;# 
   403  0E21                     	;# 
   404  0E22                     	;# 
   405  0E24                     	;# 
   406  0E25                     	;# 
   407  0E28                     	;# 
   408  0E29                     	;# 
   409  0E2A                     	;# 
   410  0E2B                     	;# 
   411  0E90                     	;# 
   412  0E91                     	;# 
   413  0E92                     	;# 
   414  0E93                     	;# 
   415  0E94                     	;# 
   416  0E95                     	;# 
   417  0E96                     	;# 
   418  0E97                     	;# 
   419  0E98                     	;# 
   420  0E99                     	;# 
   421  0E9A                     	;# 
   422  0E9B                     	;# 
   423  0E9C                     	;# 
   424  0E9D                     	;# 
   425  0E9E                     	;# 
   426  0E9F                     	;# 
   427  0EA0                     	;# 
   428  0EA1                     	;# 
   429  0EA2                     	;# 
   430  0EA3                     	;# 
   431  0EA4                     	;# 
   432  0EA5                     	;# 
   433  0EA6                     	;# 
   434  0EA7                     	;# 
   435  0EA8                     	;# 
   436  0EA9                     	;# 
   437  0EAA                     	;# 
   438  0EAB                     	;# 
   439  0EAC                     	;# 
   440  0EAD                     	;# 
   441  0EAE                     	;# 
   442  0EAF                     	;# 
   443  0EB0                     	;# 
   444  0EB1                     	;# 
   445  0EB2                     	;# 
   446  0F0F                     	;# 
   447  0F10                     	;# 
   448  0F11                     	;# 
   449  0F12                     	;# 
   450  0F13                     	;# 
   451  0F14                     	;# 
   452  0F15                     	;# 
   453  0F16                     	;# 
   454  0F17                     	;# 
   455  0F18                     	;# 
   456  0F19                     	;# 
   457  0F1A                     	;# 
   458  0F1B                     	;# 
   459  0F1C                     	;# 
   460  0F1D                     	;# 
   461  0F1E                     	;# 
   462  0F1F                     	;# 
   463  0F20                     	;# 
   464  0F21                     	;# 
   465  0F22                     	;# 
   466  0F23                     	;# 
   467  0F24                     	;# 
   468  0F25                     	;# 
   469  0F26                     	;# 
   470  0F27                     	;# 
   471  0F28                     	;# 
   472  0F29                     	;# 
   473  0F2A                     	;# 
   474  0F2B                     	;# 
   475  0F2C                     	;# 
   476  0F2D                     	;# 
   477  0F2E                     	;# 
   478  0F2F                     	;# 
   479  0F30                     	;# 
   480  0F31                     	;# 
   481  0F32                     	;# 
   482  0F33                     	;# 
   483  0F34                     	;# 
   484  0F35                     	;# 
   485  0F36                     	;# 
   486  0F37                     	;# 
   487  0FE4                     	;# 
   488  0FE5                     	;# 
   489  0FE6                     	;# 
   490  0FE7                     	;# 
   491  0FE8                     	;# 
   492  0FE9                     	;# 
   493  0FEA                     	;# 
   494  0FEB                     	;# 
   495  0FED                     	;# 
   496  0FEE                     	;# 
   497  0FEF                     	;# 
   498  0000                     	;# 
   499  0001                     	;# 
   500  0002                     	;# 
   501  0003                     	;# 
   502  0004                     	;# 
   503  0005                     	;# 
   504  0006                     	;# 
   505  0007                     	;# 
   506  0008                     	;# 
   507  0009                     	;# 
   508  000A                     	;# 
   509  000B                     	;# 
   510  000C                     	;# 
   511  000D                     	;# 
   512  000E                     	;# 
   513  000F                     	;# 
   514  0010                     	;# 
   515  0011                     	;# 
   516  0012                     	;# 
   517  0013                     	;# 
   518  0015                     	;# 
   519  0016                     	;# 
   520  0016                     	;# 
   521  0017                     	;# 
   522  0018                     	;# 
   523  0019                     	;# 
   524  001A                     	;# 
   525  001B                     	;# 
   526  001C                     	;# 
   527  008C                     	;# 
   528  008D                     	;# 
   529  008E                     	;# 
   530  008F                     	;# 
   531  0090                     	;# 
   532  0091                     	;# 
   533  0092                     	;# 
   534  0093                     	;# 
   535  0095                     	;# 
   536  0096                     	;# 
   537  0097                     	;# 
   538  0098                     	;# 
   539  0099                     	;# 
   540  009A                     	;# 
   541  009B                     	;# 
   542  009B                     	;# 
   543  009C                     	;# 
   544  009D                     	;# 
   545  009E                     	;# 
   546  009F                     	;# 
   547  010C                     	;# 
   548  010D                     	;# 
   549  010E                     	;# 
   550  010F                     	;# 
   551  0110                     	;# 
   552  0111                     	;# 
   553  0112                     	;# 
   554  0113                     	;# 
   555  0114                     	;# 
   556  0115                     	;# 
   557  0116                     	;# 
   558  0117                     	;# 
   559  0118                     	;# 
   560  0119                     	;# 
   561  011A                     	;# 
   562  011B                     	;# 
   563  011B                     	;# 
   564  011C                     	;# 
   565  018C                     	;# 
   566  018D                     	;# 
   567  018E                     	;# 
   568  018F                     	;# 
   569  0190                     	;# 
   570  0191                     	;# 
   571  0191                     	;# 
   572  0192                     	;# 
   573  0193                     	;# 
   574  0193                     	;# 
   575  0194                     	;# 
   576  0195                     	;# 
   577  0196                     	;# 
   578  0197                     	;# 
   579  0199                     	;# 
   580  0199                     	;# 
   581  0199                     	;# 
   582  019A                     	;# 
   583  019A                     	;# 
   584  019A                     	;# 
   585  019B                     	;# 
   586  019B                     	;# 
   587  019B                     	;# 
   588  019B                     	;# 
   589  019B                     	;# 
   590  019C                     	;# 
   591  019C                     	;# 
   592  019C                     	;# 
   593  019D                     	;# 
   594  019D                     	;# 
   595  019D                     	;# 
   596  019E                     	;# 
   597  019E                     	;# 
   598  019E                     	;# 
   599  019F                     	;# 
   600  019F                     	;# 
   601  019F                     	;# 
   602  019F                     	;# 
   603  019F                     	;# 
   604  020C                     	;# 
   605  020D                     	;# 
   606  020E                     	;# 
   607  020F                     	;# 
   608  0210                     	;# 
   609  0211                     	;# 
   610  0211                     	;# 
   611  0212                     	;# 
   612  0212                     	;# 
   613  0213                     	;# 
   614  0213                     	;# 
   615  0214                     	;# 
   616  0214                     	;# 
   617  0215                     	;# 
   618  0215                     	;# 
   619  0215                     	;# 
   620  0215                     	;# 
   621  0216                     	;# 
   622  0216                     	;# 
   623  0217                     	;# 
   624  0217                     	;# 
   625  028C                     	;# 
   626  028D                     	;# 
   627  028E                     	;# 
   628  028F                     	;# 
   629  0290                     	;# 
   630  0291                     	;# 
   631  0291                     	;# 
   632  0292                     	;# 
   633  0293                     	;# 
   634  0293                     	;# 
   635  0298                     	;# 
   636  0298                     	;# 
   637  0299                     	;# 
   638  029A                     	;# 
   639  029A                     	;# 
   640  029E                     	;# 
   641  030C                     	;# 
   642  030D                     	;# 
   643  030E                     	;# 
   644  030F                     	;# 
   645  0310                     	;# 
   646  038C                     	;# 
   647  038D                     	;# 
   648  038E                     	;# 
   649  038F                     	;# 
   650  0390                     	;# 
   651  0391                     	;# 
   652  0392                     	;# 
   653  0393                     	;# 
   654  0394                     	;# 
   655  0395                     	;# 
   656  0396                     	;# 
   657  0397                     	;# 
   658  0398                     	;# 
   659  0399                     	;# 
   660  039D                     	;# 
   661  039E                     	;# 
   662  039F                     	;# 
   663  0415                     	;# 
   664  0416                     	;# 
   665  0417                     	;# 
   666  041C                     	;# 
   667  041D                     	;# 
   668  041E                     	;# 
   669  0498                     	;# 
   670  0498                     	;# 
   671  0499                     	;# 
   672  049A                     	;# 
   673  049B                     	;# 
   674  049B                     	;# 
   675  049C                     	;# 
   676  049D                     	;# 
   677  049E                     	;# 
   678  049F                     	;# 
   679  0511                     	;# 
   680  0515                     	;# 
   681  0617                     	;# 
   682  0618                     	;# 
   683  0619                     	;# 
   684  0619                     	;# 
   685  061A                     	;# 
   686  061B                     	;# 
   687  061C                     	;# 
   688  061C                     	;# 
   689  0691                     	;# 
   690  0692                     	;# 
   691  0693                     	;# 
   692  0694                     	;# 
   693  0695                     	;# 
   694  0696                     	;# 
   695  0697                     	;# 
   696  0698                     	;# 
   697  0699                     	;# 
   698  069A                     	;# 
   699  069B                     	;# 
   700  069C                     	;# 
   701  069D                     	;# 
   702  069E                     	;# 
   703  069F                     	;# 
   704  0E0F                     	;# 
   705  0E10                     	;# 
   706  0E11                     	;# 
   707  0E12                     	;# 
   708  0E13                     	;# 
   709  0E14                     	;# 
   710  0E15                     	;# 
   711  0E17                     	;# 
   712  0E20                     	;# 
   713  0E21                     	;# 
   714  0E22                     	;# 
   715  0E24                     	;# 
   716  0E25                     	;# 
   717  0E28                     	;# 
   718  0E29                     	;# 
   719  0E2A                     	;# 
   720  0E2B                     	;# 
   721  0E90                     	;# 
   722  0E91                     	;# 
   723  0E92                     	;# 
   724  0E93                     	;# 
   725  0E94                     	;# 
   726  0E95                     	;# 
   727  0E96                     	;# 
   728  0E97                     	;# 
   729  0E98                     	;# 
   730  0E99                     	;# 
   731  0E9A                     	;# 
   732  0E9B                     	;# 
   733  0E9C                     	;# 
   734  0E9D                     	;# 
   735  0E9E                     	;# 
   736  0E9F                     	;# 
   737  0EA0                     	;# 
   738  0EA1                     	;# 
   739  0EA2                     	;# 
   740  0EA3                     	;# 
   741  0EA4                     	;# 
   742  0EA5                     	;# 
   743  0EA6                     	;# 
   744  0EA7                     	;# 
   745  0EA8                     	;# 
   746  0EA9                     	;# 
   747  0EAA                     	;# 
   748  0EAB                     	;# 
   749  0EAC                     	;# 
   750  0EAD                     	;# 
   751  0EAE                     	;# 
   752  0EAF                     	;# 
   753  0EB0                     	;# 
   754  0EB1                     	;# 
   755  0EB2                     	;# 
   756  0F0F                     	;# 
   757  0F10                     	;# 
   758  0F11                     	;# 
   759  0F12                     	;# 
   760  0F13                     	;# 
   761  0F14                     	;# 
   762  0F15                     	;# 
   763  0F16                     	;# 
   764  0F17                     	;# 
   765  0F18                     	;# 
   766  0F19                     	;# 
   767  0F1A                     	;# 
   768  0F1B                     	;# 
   769  0F1C                     	;# 
   770  0F1D                     	;# 
   771  0F1E                     	;# 
   772  0F1F                     	;# 
   773  0F20                     	;# 
   774  0F21                     	;# 
   775  0F22                     	;# 
   776  0F23                     	;# 
   777  0F24                     	;# 
   778  0F25                     	;# 
   779  0F26                     	;# 
   780  0F27                     	;# 
   781  0F28                     	;# 
   782  0F29                     	;# 
   783  0F2A                     	;# 
   784  0F2B                     	;# 
   785  0F2C                     	;# 
   786  0F2D                     	;# 
   787  0F2E                     	;# 
   788  0F2F                     	;# 
   789  0F30                     	;# 
   790  0F31                     	;# 
   791  0F32                     	;# 
   792  0F33                     	;# 
   793  0F34                     	;# 
   794  0F35                     	;# 
   795  0F36                     	;# 
   796  0F37                     	;# 
   797  0FE4                     	;# 
   798  0FE5                     	;# 
   799  0FE6                     	;# 
   800  0FE7                     	;# 
   801  0FE8                     	;# 
   802  0FE9                     	;# 
   803  0FEA                     	;# 
   804  0FEB                     	;# 
   805  0FED                     	;# 
   806  0FEE                     	;# 
   807  0FEF                     	;# 
   808  0000                     	;# 
   809  0001                     	;# 
   810  0002                     	;# 
   811  0003                     	;# 
   812  0004                     	;# 
   813  0005                     	;# 
   814  0006                     	;# 
   815  0007                     	;# 
   816  0008                     	;# 
   817  0009                     	;# 
   818  000A                     	;# 
   819  000B                     	;# 
   820  000C                     	;# 
   821  000D                     	;# 
   822  000E                     	;# 
   823  000F                     	;# 
   824  0010                     	;# 
   825  0011                     	;# 
   826  0012                     	;# 
   827  0013                     	;# 
   828  0015                     	;# 
   829  0016                     	;# 
   830  0016                     	;# 
   831  0017                     	;# 
   832  0018                     	;# 
   833  0019                     	;# 
   834  001A                     	;# 
   835  001B                     	;# 
   836  001C                     	;# 
   837  008C                     	;# 
   838  008D                     	;# 
   839  008E                     	;# 
   840  008F                     	;# 
   841  0090                     	;# 
   842  0091                     	;# 
   843  0092                     	;# 
   844  0093                     	;# 
   845  0095                     	;# 
   846  0096                     	;# 
   847  0097                     	;# 
   848  0098                     	;# 
   849  0099                     	;# 
   850  009A                     	;# 
   851  009B                     	;# 
   852  009B                     	;# 
   853  009C                     	;# 
   854  009D                     	;# 
   855  009E                     	;# 
   856  009F                     	;# 
   857  010C                     	;# 
   858  010D                     	;# 
   859  010E                     	;# 
   860  010F                     	;# 
   861  0110                     	;# 
   862  0111                     	;# 
   863  0112                     	;# 
   864  0113                     	;# 
   865  0114                     	;# 
   866  0115                     	;# 
   867  0116                     	;# 
   868  0117                     	;# 
   869  0118                     	;# 
   870  0119                     	;# 
   871  011A                     	;# 
   872  011B                     	;# 
   873  011B                     	;# 
   874  011C                     	;# 
   875  018C                     	;# 
   876  018D                     	;# 
   877  018E                     	;# 
   878  018F                     	;# 
   879  0190                     	;# 
   880  0191                     	;# 
   881  0191                     	;# 
   882  0192                     	;# 
   883  0193                     	;# 
   884  0193                     	;# 
   885  0194                     	;# 
   886  0195                     	;# 
   887  0196                     	;# 
   888  0197                     	;# 
   889  0199                     	;# 
   890  0199                     	;# 
   891  0199                     	;# 
   892  019A                     	;# 
   893  019A                     	;# 
   894  019A                     	;# 
   895  019B                     	;# 
   896  019B                     	;# 
   897  019B                     	;# 
   898  019B                     	;# 
   899  019B                     	;# 
   900  019C                     	;# 
   901  019C                     	;# 
   902  019C                     	;# 
   903  019D                     	;# 
   904  019D                     	;# 
   905  019D                     	;# 
   906  019E                     	;# 
   907  019E                     	;# 
   908  019E                     	;# 
   909  019F                     	;# 
   910  019F                     	;# 
   911  019F                     	;# 
   912  019F                     	;# 
   913  019F                     	;# 
   914  020C                     	;# 
   915  020D                     	;# 
   916  020E                     	;# 
   917  020F                     	;# 
   918  0210                     	;# 
   919  0211                     	;# 
   920  0211                     	;# 
   921  0212                     	;# 
   922  0212                     	;# 
   923  0213                     	;# 
   924  0213                     	;# 
   925  0214                     	;# 
   926  0214                     	;# 
   927  0215                     	;# 
   928  0215                     	;# 
   929  0215                     	;# 
   930  0215                     	;# 
   931  0216                     	;# 
   932  0216                     	;# 
   933  0217                     	;# 
   934  0217                     	;# 
   935  028C                     	;# 
   936  028D                     	;# 
   937  028E                     	;# 
   938  028F                     	;# 
   939  0290                     	;# 
   940  0291                     	;# 
   941  0291                     	;# 
   942  0292                     	;# 
   943  0293                     	;# 
   944  0293                     	;# 
   945  0298                     	;# 
   946  0298                     	;# 
   947  0299                     	;# 
   948  029A                     	;# 
   949  029A                     	;# 
   950  029E                     	;# 
   951  030C                     	;# 
   952  030D                     	;# 
   953  030E                     	;# 
   954  030F                     	;# 
   955  0310                     	;# 
   956  038C                     	;# 
   957  038D                     	;# 
   958  038E                     	;# 
   959  038F                     	;# 
   960  0390                     	;# 
   961  0391                     	;# 
   962  0392                     	;# 
   963  0393                     	;# 
   964  0394                     	;# 
   965  0395                     	;# 
   966  0396                     	;# 
   967  0397                     	;# 
   968  0398                     	;# 
   969  0399                     	;# 
   970  039D                     	;# 
   971  039E                     	;# 
   972  039F                     	;# 
   973  0415                     	;# 
   974  0416                     	;# 
   975  0417                     	;# 
   976  041C                     	;# 
   977  041D                     	;# 
   978  041E                     	;# 
   979  0498                     	;# 
   980  0498                     	;# 
   981  0499                     	;# 
   982  049A                     	;# 
   983  049B                     	;# 
   984  049B                     	;# 
   985  049C                     	;# 
   986  049D                     	;# 
   987  049E                     	;# 
   988  049F                     	;# 
   989  0511                     	;# 
   990  0515                     	;# 
   991  0617                     	;# 
   992  0618                     	;# 
   993  0619                     	;# 
   994  0619                     	;# 
   995  061A                     	;# 
   996  061B                     	;# 
   997  061C                     	;# 
   998  061C                     	;# 
   999  0691                     	;# 
  1000  0692                     	;# 
  1001  0693                     	;# 
  1002  0694                     	;# 
  1003  0695                     	;# 
  1004  0696                     	;# 
  1005  0697                     	;# 
  1006  0698                     	;# 
  1007  0699                     	;# 
  1008  069A                     	;# 
  1009  069B                     	;# 
  1010  069C                     	;# 
  1011  069D                     	;# 
  1012  069E                     	;# 
  1013  069F                     	;# 
  1014  0E0F                     	;# 
  1015  0E10                     	;# 
  1016  0E11                     	;# 
  1017  0E12                     	;# 
  1018  0E13                     	;# 
  1019  0E14                     	;# 
  1020  0E15                     	;# 
  1021  0E17                     	;# 
  1022  0E20                     	;# 
  1023  0E21                     	;# 
  1024  0E22                     	;# 
  1025  0E24                     	;# 
  1026  0E25                     	;# 
  1027  0E28                     	;# 
  1028  0E29                     	;# 
  1029  0E2A                     	;# 
  1030  0E2B                     	;# 
  1031  0E90                     	;# 
  1032  0E91                     	;# 
  1033  0E92                     	;# 
  1034  0E93                     	;# 
  1035  0E94                     	;# 
  1036  0E95                     	;# 
  1037  0E96                     	;# 
  1038  0E97                     	;# 
  1039  0E98                     	;# 
  1040  0E99                     	;# 
  1041  0E9A                     	;# 
  1042  0E9B                     	;# 
  1043  0E9C                     	;# 
  1044  0E9D                     	;# 
  1045  0E9E                     	;# 
  1046  0E9F                     	;# 
  1047  0EA0                     	;# 
  1048  0EA1                     	;# 
  1049  0EA2                     	;# 
  1050  0EA3                     	;# 
  1051  0EA4                     	;# 
  1052  0EA5                     	;# 
  1053  0EA6                     	;# 
  1054  0EA7                     	;# 
  1055  0EA8                     	;# 
  1056  0EA9                     	;# 
  1057  0EAA                     	;# 
  1058  0EAB                     	;# 
  1059  0EAC                     	;# 
  1060  0EAD                     	;# 
  1061  0EAE                     	;# 
  1062  0EAF                     	;# 
  1063  0EB0                     	;# 
  1064  0EB1                     	;# 
  1065  0EB2                     	;# 
  1066  0F0F                     	;# 
  1067  0F10                     	;# 
  1068  0F11                     	;# 
  1069  0F12                     	;# 
  1070  0F13                     	;# 
  1071  0F14                     	;# 
  1072  0F15                     	;# 
  1073  0F16                     	;# 
  1074  0F17                     	;# 
  1075  0F18                     	;# 
  1076  0F19                     	;# 
  1077  0F1A                     	;# 
  1078  0F1B                     	;# 
  1079  0F1C                     	;# 
  1080  0F1D                     	;# 
  1081  0F1E                     	;# 
  1082  0F1F                     	;# 
  1083  0F20                     	;# 
  1084  0F21                     	;# 
  1085  0F22                     	;# 
  1086  0F23                     	;# 
  1087  0F24                     	;# 
  1088  0F25                     	;# 
  1089  0F26                     	;# 
  1090  0F27                     	;# 
  1091  0F28                     	;# 
  1092  0F29                     	;# 
  1093  0F2A                     	;# 
  1094  0F2B                     	;# 
  1095  0F2C                     	;# 
  1096  0F2D                     	;# 
  1097  0F2E                     	;# 
  1098  0F2F                     	;# 
  1099  0F30                     	;# 
  1100  0F31                     	;# 
  1101  0F32                     	;# 
  1102  0F33                     	;# 
  1103  0F34                     	;# 
  1104  0F35                     	;# 
  1105  0F36                     	;# 
  1106  0F37                     	;# 
  1107  0FE4                     	;# 
  1108  0FE5                     	;# 
  1109  0FE6                     	;# 
  1110  0FE7                     	;# 
  1111  0FE8                     	;# 
  1112  0FE9                     	;# 
  1113  0FEA                     	;# 
  1114  0FEB                     	;# 
  1115  0FED                     	;# 
  1116  0FEE                     	;# 
  1117  0FEF                     	;# 
  1118  0000                     	;# 
  1119  0001                     	;# 
  1120  0002                     	;# 
  1121  0003                     	;# 
  1122  0004                     	;# 
  1123  0005                     	;# 
  1124  0006                     	;# 
  1125  0007                     	;# 
  1126  0008                     	;# 
  1127  0009                     	;# 
  1128  000A                     	;# 
  1129  000B                     	;# 
  1130  000C                     	;# 
  1131  000D                     	;# 
  1132  000E                     	;# 
  1133  000F                     	;# 
  1134  0010                     	;# 
  1135  0011                     	;# 
  1136  0012                     	;# 
  1137  0013                     	;# 
  1138  0015                     	;# 
  1139  0016                     	;# 
  1140  0016                     	;# 
  1141  0017                     	;# 
  1142  0018                     	;# 
  1143  0019                     	;# 
  1144  001A                     	;# 
  1145  001B                     	;# 
  1146  001C                     	;# 
  1147  008C                     	;# 
  1148  008D                     	;# 
  1149  008E                     	;# 
  1150  008F                     	;# 
  1151  0090                     	;# 
  1152  0091                     	;# 
  1153  0092                     	;# 
  1154  0093                     	;# 
  1155  0095                     	;# 
  1156  0096                     	;# 
  1157  0097                     	;# 
  1158  0098                     	;# 
  1159  0099                     	;# 
  1160  009A                     	;# 
  1161  009B                     	;# 
  1162  009B                     	;# 
  1163  009C                     	;# 
  1164  009D                     	;# 
  1165  009E                     	;# 
  1166  009F                     	;# 
  1167  010C                     	;# 
  1168  010D                     	;# 
  1169  010E                     	;# 
  1170  010F                     	;# 
  1171  0110                     	;# 
  1172  0111                     	;# 
  1173  0112                     	;# 
  1174  0113                     	;# 
  1175  0114                     	;# 
  1176  0115                     	;# 
  1177  0116                     	;# 
  1178  0117                     	;# 
  1179  0118                     	;# 
  1180  0119                     	;# 
  1181  011A                     	;# 
  1182  011B                     	;# 
  1183  011B                     	;# 
  1184  011C                     	;# 
  1185  018C                     	;# 
  1186  018D                     	;# 
  1187  018E                     	;# 
  1188  018F                     	;# 
  1189  0190                     	;# 
  1190  0191                     	;# 
  1191  0191                     	;# 
  1192  0192                     	;# 
  1193  0193                     	;# 
  1194  0193                     	;# 
  1195  0194                     	;# 
  1196  0195                     	;# 
  1197  0196                     	;# 
  1198  0197                     	;# 
  1199  0199                     	;# 
  1200  0199                     	;# 
  1201  0199                     	;# 
  1202  019A                     	;# 
  1203  019A                     	;# 
  1204  019A                     	;# 
  1205  019B                     	;# 
  1206  019B                     	;# 
  1207  019B                     	;# 
  1208  019B                     	;# 
  1209  019B                     	;# 
  1210  019C                     	;# 
  1211  019C                     	;# 
  1212  019C                     	;# 
  1213  019D                     	;# 
  1214  019D                     	;# 
  1215  019D                     	;# 
  1216  019E                     	;# 
  1217  019E                     	;# 
  1218  019E                     	;# 
  1219  019F                     	;# 
  1220  019F                     	;# 
  1221  019F                     	;# 
  1222  019F                     	;# 
  1223  019F                     	;# 
  1224  020C                     	;# 
  1225  020D                     	;# 
  1226  020E                     	;# 
  1227  020F                     	;# 
  1228  0210                     	;# 
  1229  0211                     	;# 
  1230  0211                     	;# 
  1231  0212                     	;# 
  1232  0212                     	;# 
  1233  0213                     	;# 
  1234  0213                     	;# 
  1235  0214                     	;# 
  1236  0214                     	;# 
  1237  0215                     	;# 
  1238  0215                     	;# 
  1239  0215                     	;# 
  1240  0215                     	;# 
  1241  0216                     	;# 
  1242  0216                     	;# 
  1243  0217                     	;# 
  1244  0217                     	;# 
  1245  028C                     	;# 
  1246  028D                     	;# 
  1247  028E                     	;# 
  1248  028F                     	;# 
  1249  0290                     	;# 
  1250  0291                     	;# 
  1251  0291                     	;# 
  1252  0292                     	;# 
  1253  0293                     	;# 
  1254  0293                     	;# 
  1255  0298                     	;# 
  1256  0298                     	;# 
  1257  0299                     	;# 
  1258  029A                     	;# 
  1259  029A                     	;# 
  1260  029E                     	;# 
  1261  030C                     	;# 
  1262  030D                     	;# 
  1263  030E                     	;# 
  1264  030F                     	;# 
  1265  0310                     	;# 
  1266  038C                     	;# 
  1267  038D                     	;# 
  1268  038E                     	;# 
  1269  038F                     	;# 
  1270  0390                     	;# 
  1271  0391                     	;# 
  1272  0392                     	;# 
  1273  0393                     	;# 
  1274  0394                     	;# 
  1275  0395                     	;# 
  1276  0396                     	;# 
  1277  0397                     	;# 
  1278  0398                     	;# 
  1279  0399                     	;# 
  1280  039D                     	;# 
  1281  039E                     	;# 
  1282  039F                     	;# 
  1283  0415                     	;# 
  1284  0416                     	;# 
  1285  0417                     	;# 
  1286  041C                     	;# 
  1287  041D                     	;# 
  1288  041E                     	;# 
  1289  0498                     	;# 
  1290  0498                     	;# 
  1291  0499                     	;# 
  1292  049A                     	;# 
  1293  049B                     	;# 
  1294  049B                     	;# 
  1295  049C                     	;# 
  1296  049D                     	;# 
  1297  049E                     	;# 
  1298  049F                     	;# 
  1299  0511                     	;# 
  1300  0515                     	;# 
  1301  0617                     	;# 
  1302  0618                     	;# 
  1303  0619                     	;# 
  1304  0619                     	;# 
  1305  061A                     	;# 
  1306  061B                     	;# 
  1307  061C                     	;# 
  1308  061C                     	;# 
  1309  0691                     	;# 
  1310  0692                     	;# 
  1311  0693                     	;# 
  1312  0694                     	;# 
  1313  0695                     	;# 
  1314  0696                     	;# 
  1315  0697                     	;# 
  1316  0698                     	;# 
  1317  0699                     	;# 
  1318  069A                     	;# 
  1319  069B                     	;# 
  1320  069C                     	;# 
  1321  069D                     	;# 
  1322  069E                     	;# 
  1323  069F                     	;# 
  1324  0E0F                     	;# 
  1325  0E10                     	;# 
  1326  0E11                     	;# 
  1327  0E12                     	;# 
  1328  0E13                     	;# 
  1329  0E14                     	;# 
  1330  0E15                     	;# 
  1331  0E17                     	;# 
  1332  0E20                     	;# 
  1333  0E21                     	;# 
  1334  0E22                     	;# 
  1335  0E24                     	;# 
  1336  0E25                     	;# 
  1337  0E28                     	;# 
  1338  0E29                     	;# 
  1339  0E2A                     	;# 
  1340  0E2B                     	;# 
  1341  0E90                     	;# 
  1342  0E91                     	;# 
  1343  0E92                     	;# 
  1344  0E93                     	;# 
  1345  0E94                     	;# 
  1346  0E95                     	;# 
  1347  0E96                     	;# 
  1348  0E97                     	;# 
  1349  0E98                     	;# 
  1350  0E99                     	;# 
  1351  0E9A                     	;# 
  1352  0E9B                     	;# 
  1353  0E9C                     	;# 
  1354  0E9D                     	;# 
  1355  0E9E                     	;# 
  1356  0E9F                     	;# 
  1357  0EA0                     	;# 
  1358  0EA1                     	;# 
  1359  0EA2                     	;# 
  1360  0EA3                     	;# 
  1361  0EA4                     	;# 
  1362  0EA5                     	;# 
  1363  0EA6                     	;# 
  1364  0EA7                     	;# 
  1365  0EA8                     	;# 
  1366  0EA9                     	;# 
  1367  0EAA                     	;# 
  1368  0EAB                     	;# 
  1369  0EAC                     	;# 
  1370  0EAD                     	;# 
  1371  0EAE                     	;# 
  1372  0EAF                     	;# 
  1373  0EB0                     	;# 
  1374  0EB1                     	;# 
  1375  0EB2                     	;# 
  1376  0F0F                     	;# 
  1377  0F10                     	;# 
  1378  0F11                     	;# 
  1379  0F12                     	;# 
  1380  0F13                     	;# 
  1381  0F14                     	;# 
  1382  0F15                     	;# 
  1383  0F16                     	;# 
  1384  0F17                     	;# 
  1385  0F18                     	;# 
  1386  0F19                     	;# 
  1387  0F1A                     	;# 
  1388  0F1B                     	;# 
  1389  0F1C                     	;# 
  1390  0F1D                     	;# 
  1391  0F1E                     	;# 
  1392  0F1F                     	;# 
  1393  0F20                     	;# 
  1394  0F21                     	;# 
  1395  0F22                     	;# 
  1396  0F23                     	;# 
  1397  0F24                     	;# 
  1398  0F25                     	;# 
  1399  0F26                     	;# 
  1400  0F27                     	;# 
  1401  0F28                     	;# 
  1402  0F29                     	;# 
  1403  0F2A                     	;# 
  1404  0F2B                     	;# 
  1405  0F2C                     	;# 
  1406  0F2D                     	;# 
  1407  0F2E                     	;# 
  1408  0F2F                     	;# 
  1409  0F30                     	;# 
  1410  0F31                     	;# 
  1411  0F32                     	;# 
  1412  0F33                     	;# 
  1413  0F34                     	;# 
  1414  0F35                     	;# 
  1415  0F36                     	;# 
  1416  0F37                     	;# 
  1417  0FE4                     	;# 
  1418  0FE5                     	;# 
  1419  0FE6                     	;# 
  1420  0FE7                     	;# 
  1421  0FE8                     	;# 
  1422  0FE9                     	;# 
  1423  0FEA                     	;# 
  1424  0FEB                     	;# 
  1425  0FED                     	;# 
  1426  0FEE                     	;# 
  1427  0FEF                     	;# 
  1428  0000                     	;# 
  1429  0001                     	;# 
  1430  0002                     	;# 
  1431  0003                     	;# 
  1432  0004                     	;# 
  1433  0005                     	;# 
  1434  0006                     	;# 
  1435  0007                     	;# 
  1436  0008                     	;# 
  1437  0009                     	;# 
  1438  000A                     	;# 
  1439  000B                     	;# 
  1440  000C                     	;# 
  1441  000D                     	;# 
  1442  000E                     	;# 
  1443  000F                     	;# 
  1444  0010                     	;# 
  1445  0011                     	;# 
  1446  0012                     	;# 
  1447  0013                     	;# 
  1448  0015                     	;# 
  1449  0016                     	;# 
  1450  0016                     	;# 
  1451  0017                     	;# 
  1452  0018                     	;# 
  1453  0019                     	;# 
  1454  001A                     	;# 
  1455  001B                     	;# 
  1456  001C                     	;# 
  1457  008C                     	;# 
  1458  008D                     	;# 
  1459  008E                     	;# 
  1460  008F                     	;# 
  1461  0090                     	;# 
  1462  0091                     	;# 
  1463  0092                     	;# 
  1464  0093                     	;# 
  1465  0095                     	;# 
  1466  0096                     	;# 
  1467  0097                     	;# 
  1468  0098                     	;# 
  1469  0099                     	;# 
  1470  009A                     	;# 
  1471  009B                     	;# 
  1472  009B                     	;# 
  1473  009C                     	;# 
  1474  009D                     	;# 
  1475  009E                     	;# 
  1476  009F                     	;# 
  1477  010C                     	;# 
  1478  010D                     	;# 
  1479  010E                     	;# 
  1480  010F                     	;# 
  1481  0110                     	;# 
  1482  0111                     	;# 
  1483  0112                     	;# 
  1484  0113                     	;# 
  1485  0114                     	;# 
  1486  0115                     	;# 
  1487  0116                     	;# 
  1488  0117                     	;# 
  1489  0118                     	;# 
  1490  0119                     	;# 
  1491  011A                     	;# 
  1492  011B                     	;# 
  1493  011B                     	;# 
  1494  011C                     	;# 
  1495  018C                     	;# 
  1496  018D                     	;# 
  1497  018E                     	;# 
  1498  018F                     	;# 
  1499  0190                     	;# 
  1500  0191                     	;# 
  1501  0191                     	;# 
  1502  0192                     	;# 
  1503  0193                     	;# 
  1504  0193                     	;# 
  1505  0194                     	;# 
  1506  0195                     	;# 
  1507  0196                     	;# 
  1508  0197                     	;# 
  1509  0199                     	;# 
  1510  0199                     	;# 
  1511  0199                     	;# 
  1512  019A                     	;# 
  1513  019A                     	;# 
  1514  019A                     	;# 
  1515  019B                     	;# 
  1516  019B                     	;# 
  1517  019B                     	;# 
  1518  019B                     	;# 
  1519  019B                     	;# 
  1520  019C                     	;# 
  1521  019C                     	;# 
  1522  019C                     	;# 
  1523  019D                     	;# 
  1524  019D                     	;# 
  1525  019D                     	;# 
  1526  019E                     	;# 
  1527  019E                     	;# 
  1528  019E                     	;# 
  1529  019F                     	;# 
  1530  019F                     	;# 
  1531  019F                     	;# 
  1532  019F                     	;# 
  1533  019F                     	;# 
  1534  020C                     	;# 
  1535  020D                     	;# 
  1536  020E                     	;# 
  1537  020F                     	;# 
  1538  0210                     	;# 
  1539  0211                     	;# 
  1540  0211                     	;# 
  1541  0212                     	;# 
  1542  0212                     	;# 
  1543  0213                     	;# 
  1544  0213                     	;# 
  1545  0214                     	;# 
  1546  0214                     	;# 
  1547  0215                     	;# 
  1548  0215                     	;# 
  1549  0215                     	;# 
  1550  0215                     	;# 
  1551  0216                     	;# 
  1552  0216                     	;# 
  1553  0217                     	;# 
  1554  0217                     	;# 
  1555  028C                     	;# 
  1556  028D                     	;# 
  1557  028E                     	;# 
  1558  028F                     	;# 
  1559  0290                     	;# 
  1560  0291                     	;# 
  1561  0291                     	;# 
  1562  0292                     	;# 
  1563  0293                     	;# 
  1564  0293                     	;# 
  1565  0298                     	;# 
  1566  0298                     	;# 
  1567  0299                     	;# 
  1568  029A                     	;# 
  1569  029A                     	;# 
  1570  029E                     	;# 
  1571  030C                     	;# 
  1572  030D                     	;# 
  1573  030E                     	;# 
  1574  030F                     	;# 
  1575  0310                     	;# 
  1576  038C                     	;# 
  1577  038D                     	;# 
  1578  038E                     	;# 
  1579  038F                     	;# 
  1580  0390                     	;# 
  1581  0391                     	;# 
  1582  0392                     	;# 
  1583  0393                     	;# 
  1584  0394                     	;# 
  1585  0395                     	;# 
  1586  0396                     	;# 
  1587  0397                     	;# 
  1588  0398                     	;# 
  1589  0399                     	;# 
  1590  039D                     	;# 
  1591  039E                     	;# 
  1592  039F                     	;# 
  1593  0415                     	;# 
  1594  0416                     	;# 
  1595  0417                     	;# 
  1596  041C                     	;# 
  1597  041D                     	;# 
  1598  041E                     	;# 
  1599  0498                     	;# 
  1600  0498                     	;# 
  1601  0499                     	;# 
  1602  049A                     	;# 
  1603  049B                     	;# 
  1604  049B                     	;# 
  1605  049C                     	;# 
  1606  049D                     	;# 
  1607  049E                     	;# 
  1608  049F                     	;# 
  1609  0511                     	;# 
  1610  0515                     	;# 
  1611  0617                     	;# 
  1612  0618                     	;# 
  1613  0619                     	;# 
  1614  0619                     	;# 
  1615  061A                     	;# 
  1616  061B                     	;# 
  1617  061C                     	;# 
  1618  061C                     	;# 
  1619  0691                     	;# 
  1620  0692                     	;# 
  1621  0693                     	;# 
  1622  0694                     	;# 
  1623  0695                     	;# 
  1624  0696                     	;# 
  1625  0697                     	;# 
  1626  0698                     	;# 
  1627  0699                     	;# 
  1628  069A                     	;# 
  1629  069B                     	;# 
  1630  069C                     	;# 
  1631  069D                     	;# 
  1632  069E                     	;# 
  1633  069F                     	;# 
  1634  0E0F                     	;# 
  1635  0E10                     	;# 
  1636  0E11                     	;# 
  1637  0E12                     	;# 
  1638  0E13                     	;# 
  1639  0E14                     	;# 
  1640  0E15                     	;# 
  1641  0E17                     	;# 
  1642  0E20                     	;# 
  1643  0E21                     	;# 
  1644  0E22                     	;# 
  1645  0E24                     	;# 
  1646  0E25                     	;# 
  1647  0E28                     	;# 
  1648  0E29                     	;# 
  1649  0E2A                     	;# 
  1650  0E2B                     	;# 
  1651  0E90                     	;# 
  1652  0E91                     	;# 
  1653  0E92                     	;# 
  1654  0E93                     	;# 
  1655  0E94                     	;# 
  1656  0E95                     	;# 
  1657  0E96                     	;# 
  1658  0E97                     	;# 
  1659  0E98                     	;# 
  1660  0E99                     	;# 
  1661  0E9A                     	;# 
  1662  0E9B                     	;# 
  1663  0E9C                     	;# 
  1664  0E9D                     	;# 
  1665  0E9E                     	;# 
  1666  0E9F                     	;# 
  1667  0EA0                     	;# 
  1668  0EA1                     	;# 
  1669  0EA2                     	;# 
  1670  0EA3                     	;# 
  1671  0EA4                     	;# 
  1672  0EA5                     	;# 
  1673  0EA6                     	;# 
  1674  0EA7                     	;# 
  1675  0EA8                     	;# 
  1676  0EA9                     	;# 
  1677  0EAA                     	;# 
  1678  0EAB                     	;# 
  1679  0EAC                     	;# 
  1680  0EAD                     	;# 
  1681  0EAE                     	;# 
  1682  0EAF                     	;# 
  1683  0EB0                     	;# 
  1684  0EB1                     	;# 
  1685  0EB2                     	;# 
  1686  0F0F                     	;# 
  1687  0F10                     	;# 
  1688  0F11                     	;# 
  1689  0F12                     	;# 
  1690  0F13                     	;# 
  1691  0F14                     	;# 
  1692  0F15                     	;# 
  1693  0F16                     	;# 
  1694  0F17                     	;# 
  1695  0F18                     	;# 
  1696  0F19                     	;# 
  1697  0F1A                     	;# 
  1698  0F1B                     	;# 
  1699  0F1C                     	;# 
  1700  0F1D                     	;# 
  1701  0F1E                     	;# 
  1702  0F1F                     	;# 
  1703  0F20                     	;# 
  1704  0F21                     	;# 
  1705  0F22                     	;# 
  1706  0F23                     	;# 
  1707  0F24                     	;# 
  1708  0F25                     	;# 
  1709  0F26                     	;# 
  1710  0F27                     	;# 
  1711  0F28                     	;# 
  1712  0F29                     	;# 
  1713  0F2A                     	;# 
  1714  0F2B                     	;# 
  1715  0F2C                     	;# 
  1716  0F2D                     	;# 
  1717  0F2E                     	;# 
  1718  0F2F                     	;# 
  1719  0F30                     	;# 
  1720  0F31                     	;# 
  1721  0F32                     	;# 
  1722  0F33                     	;# 
  1723  0F34                     	;# 
  1724  0F35                     	;# 
  1725  0F36                     	;# 
  1726  0F37                     	;# 
  1727  0FE4                     	;# 
  1728  0FE5                     	;# 
  1729  0FE6                     	;# 
  1730  0FE7                     	;# 
  1731  0FE8                     	;# 
  1732  0FE9                     	;# 
  1733  0FEA                     	;# 
  1734  0FEB                     	;# 
  1735  0FED                     	;# 
  1736  0FEE                     	;# 
  1737  0FEF                     	;# 
  1738  0000                     	;# 
  1739  0001                     	;# 
  1740  0002                     	;# 
  1741  0003                     	;# 
  1742  0004                     	;# 
  1743  0005                     	;# 
  1744  0006                     	;# 
  1745  0007                     	;# 
  1746  0008                     	;# 
  1747  0009                     	;# 
  1748  000A                     	;# 
  1749  000B                     	;# 
  1750  000C                     	;# 
  1751  000D                     	;# 
  1752  000E                     	;# 
  1753  000F                     	;# 
  1754  0010                     	;# 
  1755  0011                     	;# 
  1756  0012                     	;# 
  1757  0013                     	;# 
  1758  0015                     	;# 
  1759  0016                     	;# 
  1760  0016                     	;# 
  1761  0017                     	;# 
  1762  0018                     	;# 
  1763  0019                     	;# 
  1764  001A                     	;# 
  1765  001B                     	;# 
  1766  001C                     	;# 
  1767  008C                     	;# 
  1768  008D                     	;# 
  1769  008E                     	;# 
  1770  008F                     	;# 
  1771  0090                     	;# 
  1772  0091                     	;# 
  1773  0092                     	;# 
  1774  0093                     	;# 
  1775  0095                     	;# 
  1776  0096                     	;# 
  1777  0097                     	;# 
  1778  0098                     	;# 
  1779  0099                     	;# 
  1780  009A                     	;# 
  1781  009B                     	;# 
  1782  009B                     	;# 
  1783  009C                     	;# 
  1784  009D                     	;# 
  1785  009E                     	;# 
  1786  009F                     	;# 
  1787  010C                     	;# 
  1788  010D                     	;# 
  1789  010E                     	;# 
  1790  010F                     	;# 
  1791  0110                     	;# 
  1792  0111                     	;# 
  1793  0112                     	;# 
  1794  0113                     	;# 
  1795  0114                     	;# 
  1796  0115                     	;# 
  1797  0116                     	;# 
  1798  0117                     	;# 
  1799  0118                     	;# 
  1800  0119                     	;# 
  1801  011A                     	;# 
  1802  011B                     	;# 
  1803  011B                     	;# 
  1804  011C                     	;# 
  1805  018C                     	;# 
  1806  018D                     	;# 
  1807  018E                     	;# 
  1808  018F                     	;# 
  1809  0190                     	;# 
  1810  0191                     	;# 
  1811  0191                     	;# 
  1812  0192                     	;# 
  1813  0193                     	;# 
  1814  0193                     	;# 
  1815  0194                     	;# 
  1816  0195                     	;# 
  1817  0196                     	;# 
  1818  0197                     	;# 
  1819  0199                     	;# 
  1820  0199                     	;# 
  1821  0199                     	;# 
  1822  019A                     	;# 
  1823  019A                     	;# 
  1824  019A                     	;# 
  1825  019B                     	;# 
  1826  019B                     	;# 
  1827  019B                     	;# 
  1828  019B                     	;# 
  1829  019B                     	;# 
  1830  019C                     	;# 
  1831  019C                     	;# 
  1832  019C                     	;# 
  1833  019D                     	;# 
  1834  019D                     	;# 
  1835  019D                     	;# 
  1836  019E                     	;# 
  1837  019E                     	;# 
  1838  019E                     	;# 
  1839  019F                     	;# 
  1840  019F                     	;# 
  1841  019F                     	;# 
  1842  019F                     	;# 
  1843  019F                     	;# 
  1844  020C                     	;# 
  1845  020D                     	;# 
  1846  020E                     	;# 
  1847  020F                     	;# 
  1848  0210                     	;# 
  1849  0211                     	;# 
  1850  0211                     	;# 
  1851  0212                     	;# 
  1852  0212                     	;# 
  1853  0213                     	;# 
  1854  0213                     	;# 
  1855  0214                     	;# 
  1856  0214                     	;# 
  1857  0215                     	;# 
  1858  0215                     	;# 
  1859  0215                     	;# 
  1860  0215                     	;# 
  1861  0216                     	;# 
  1862  0216                     	;# 
  1863  0217                     	;# 
  1864  0217                     	;# 
  1865  028C                     	;# 
  1866  028D                     	;# 
  1867  028E                     	;# 
  1868  028F                     	;# 
  1869  0290                     	;# 
  1870  0291                     	;# 
  1871  0291                     	;# 
  1872  0292                     	;# 
  1873  0293                     	;# 
  1874  0293                     	;# 
  1875  0298                     	;# 
  1876  0298                     	;# 
  1877  0299                     	;# 
  1878  029A                     	;# 
  1879  029A                     	;# 
  1880  029E                     	;# 
  1881  030C                     	;# 
  1882  030D                     	;# 
  1883  030E                     	;# 
  1884  030F                     	;# 
  1885  0310                     	;# 
  1886  038C                     	;# 
  1887  038D                     	;# 
  1888  038E                     	;# 
  1889  038F                     	;# 
  1890  0390                     	;# 
  1891  0391                     	;# 
  1892  0392                     	;# 
  1893  0393                     	;# 
  1894  0394                     	;# 
  1895  0395                     	;# 
  1896  0396                     	;# 
  1897  0397                     	;# 
  1898  0398                     	;# 
  1899  0399                     	;# 
  1900  039D                     	;# 
  1901  039E                     	;# 
  1902  039F                     	;# 
  1903  0415                     	;# 
  1904  0416                     	;# 
  1905  0417                     	;# 
  1906  041C                     	;# 
  1907  041D                     	;# 
  1908  041E                     	;# 
  1909  0498                     	;# 
  1910  0498                     	;# 
  1911  0499                     	;# 
  1912  049A                     	;# 
  1913  049B                     	;# 
  1914  049B                     	;# 
  1915  049C                     	;# 
  1916  049D                     	;# 
  1917  049E                     	;# 
  1918  049F                     	;# 
  1919  0511                     	;# 
  1920  0515                     	;# 
  1921  0617                     	;# 
  1922  0618                     	;# 
  1923  0619                     	;# 
  1924  0619                     	;# 
  1925  061A                     	;# 
  1926  061B                     	;# 
  1927  061C                     	;# 
  1928  061C                     	;# 
  1929  0691                     	;# 
  1930  0692                     	;# 
  1931  0693                     	;# 
  1932  0694                     	;# 
  1933  0695                     	;# 
  1934  0696                     	;# 
  1935  0697                     	;# 
  1936  0698                     	;# 
  1937  0699                     	;# 
  1938  069A                     	;# 
  1939  069B                     	;# 
  1940  069C                     	;# 
  1941  069D                     	;# 
  1942  069E                     	;# 
  1943  069F                     	;# 
  1944  0E0F                     	;# 
  1945  0E10                     	;# 
  1946  0E11                     	;# 
  1947  0E12                     	;# 
  1948  0E13                     	;# 
  1949  0E14                     	;# 
  1950  0E15                     	;# 
  1951  0E17                     	;# 
  1952  0E20                     	;# 
  1953  0E21                     	;# 
  1954  0E22                     	;# 
  1955  0E24                     	;# 
  1956  0E25                     	;# 
  1957  0E28                     	;# 
  1958  0E29                     	;# 
  1959  0E2A                     	;# 
  1960  0E2B                     	;# 
  1961  0E90                     	;# 
  1962  0E91                     	;# 
  1963  0E92                     	;# 
  1964  0E93                     	;# 
  1965  0E94                     	;# 
  1966  0E95                     	;# 
  1967  0E96                     	;# 
  1968  0E97                     	;# 
  1969  0E98                     	;# 
  1970  0E99                     	;# 
  1971  0E9A                     	;# 
  1972  0E9B                     	;# 
  1973  0E9C                     	;# 
  1974  0E9D                     	;# 
  1975  0E9E                     	;# 
  1976  0E9F                     	;# 
  1977  0EA0                     	;# 
  1978  0EA1                     	;# 
  1979  0EA2                     	;# 
  1980  0EA3                     	;# 
  1981  0EA4                     	;# 
  1982  0EA5                     	;# 
  1983  0EA6                     	;# 
  1984  0EA7                     	;# 
  1985  0EA8                     	;# 
  1986  0EA9                     	;# 
  1987  0EAA                     	;# 
  1988  0EAB                     	;# 
  1989  0EAC                     	;# 
  1990  0EAD                     	;# 
  1991  0EAE                     	;# 
  1992  0EAF                     	;# 
  1993  0EB0                     	;# 
  1994  0EB1                     	;# 
  1995  0EB2                     	;# 
  1996  0F0F                     	;# 
  1997  0F10                     	;# 
  1998  0F11                     	;# 
  1999  0F12                     	;# 
  2000  0F13                     	;# 
  2001  0F14                     	;# 
  2002  0F15                     	;# 
  2003  0F16                     	;# 
  2004  0F17                     	;# 
  2005  0F18                     	;# 
  2006  0F19                     	;# 
  2007  0F1A                     	;# 
  2008  0F1B                     	;# 
  2009  0F1C                     	;# 
  2010  0F1D                     	;# 
  2011  0F1E                     	;# 
  2012  0F1F                     	;# 
  2013  0F20                     	;# 
  2014  0F21                     	;# 
  2015  0F22                     	;# 
  2016  0F23                     	;# 
  2017  0F24                     	;# 
  2018  0F25                     	;# 
  2019  0F26                     	;# 
  2020  0F27                     	;# 
  2021  0F28                     	;# 
  2022  0F29                     	;# 
  2023  0F2A                     	;# 
  2024  0F2B                     	;# 
  2025  0F2C                     	;# 
  2026  0F2D                     	;# 
  2027  0F2E                     	;# 
  2028  0F2F                     	;# 
  2029  0F30                     	;# 
  2030  0F31                     	;# 
  2031  0F32                     	;# 
  2032  0F33                     	;# 
  2033  0F34                     	;# 
  2034  0F35                     	;# 
  2035  0F36                     	;# 
  2036  0F37                     	;# 
  2037  0FE4                     	;# 
  2038  0FE5                     	;# 
  2039  0FE6                     	;# 
  2040  0FE7                     	;# 
  2041  0FE8                     	;# 
  2042  0FE9                     	;# 
  2043  0FEA                     	;# 
  2044  0FEB                     	;# 
  2045  0FED                     	;# 
  2046  0FEE                     	;# 
  2047  0FEF                     	;# 
  2048  0000                     	;# 
  2049  0001                     	;# 
  2050  0002                     	;# 
  2051  0003                     	;# 
  2052  0004                     	;# 
  2053  0005                     	;# 
  2054  0006                     	;# 
  2055  0007                     	;# 
  2056  0008                     	;# 
  2057  0009                     	;# 
  2058  000A                     	;# 
  2059  000B                     	;# 
  2060  000C                     	;# 
  2061  000D                     	;# 
  2062  000E                     	;# 
  2063  000F                     	;# 
  2064  0010                     	;# 
  2065  0011                     	;# 
  2066  0012                     	;# 
  2067  0013                     	;# 
  2068  0015                     	;# 
  2069  0016                     	;# 
  2070  0016                     	;# 
  2071  0017                     	;# 
  2072  0018                     	;# 
  2073  0019                     	;# 
  2074  001A                     	;# 
  2075  001B                     	;# 
  2076  001C                     	;# 
  2077  008C                     	;# 
  2078  008D                     	;# 
  2079  008E                     	;# 
  2080  008F                     	;# 
  2081  0090                     	;# 
  2082  0091                     	;# 
  2083  0092                     	;# 
  2084  0093                     	;# 
  2085  0095                     	;# 
  2086  0096                     	;# 
  2087  0097                     	;# 
  2088  0098                     	;# 
  2089  0099                     	;# 
  2090  009A                     	;# 
  2091  009B                     	;# 
  2092  009B                     	;# 
  2093  009C                     	;# 
  2094  009D                     	;# 
  2095  009E                     	;# 
  2096  009F                     	;# 
  2097  010C                     	;# 
  2098  010D                     	;# 
  2099  010E                     	;# 
  2100  010F                     	;# 
  2101  0110                     	;# 
  2102  0111                     	;# 
  2103  0112                     	;# 
  2104  0113                     	;# 
  2105  0114                     	;# 
  2106  0115                     	;# 
  2107  0116                     	;# 
  2108  0117                     	;# 
  2109  0118                     	;# 
  2110  0119                     	;# 
  2111  011A                     	;# 
  2112  011B                     	;# 
  2113  011B                     	;# 
  2114  011C                     	;# 
  2115  018C                     	;# 
  2116  018D                     	;# 
  2117  018E                     	;# 
  2118  018F                     	;# 
  2119  0190                     	;# 
  2120  0191                     	;# 
  2121  0191                     	;# 
  2122  0192                     	;# 
  2123  0193                     	;# 
  2124  0193                     	;# 
  2125  0194                     	;# 
  2126  0195                     	;# 
  2127  0196                     	;# 
  2128  0197                     	;# 
  2129  0199                     	;# 
  2130  0199                     	;# 
  2131  0199                     	;# 
  2132  019A                     	;# 
  2133  019A                     	;# 
  2134  019A                     	;# 
  2135  019B                     	;# 
  2136  019B                     	;# 
  2137  019B                     	;# 
  2138  019B                     	;# 
  2139  019B                     	;# 
  2140  019C                     	;# 
  2141  019C                     	;# 
  2142  019C                     	;# 
  2143  019D                     	;# 
  2144  019D                     	;# 
  2145  019D                     	;# 
  2146  019E                     	;# 
  2147  019E                     	;# 
  2148  019E                     	;# 
  2149  019F                     	;# 
  2150  019F                     	;# 
  2151  019F                     	;# 
  2152  019F                     	;# 
  2153  019F                     	;# 
  2154  020C                     	;# 
  2155  020D                     	;# 
  2156  020E                     	;# 
  2157  020F                     	;# 
  2158  0210                     	;# 
  2159  0211                     	;# 
  2160  0211                     	;# 
  2161  0212                     	;# 
  2162  0212                     	;# 
  2163  0213                     	;# 
  2164  0213                     	;# 
  2165  0214                     	;# 
  2166  0214                     	;# 
  2167  0215                     	;# 
  2168  0215                     	;# 
  2169  0215                     	;# 
  2170  0215                     	;# 
  2171  0216                     	;# 
  2172  0216                     	;# 
  2173  0217                     	;# 
  2174  0217                     	;# 
  2175  028C                     	;# 
  2176  028D                     	;# 
  2177  028E                     	;# 
  2178  028F                     	;# 
  2179  0290                     	;# 
  2180  0291                     	;# 
  2181  0291                     	;# 
  2182  0292                     	;# 
  2183  0293                     	;# 
  2184  0293                     	;# 
  2185  0298                     	;# 
  2186  0298                     	;# 
  2187  0299                     	;# 
  2188  029A                     	;# 
  2189  029A                     	;# 
  2190  029E                     	;# 
  2191  030C                     	;# 
  2192  030D                     	;# 
  2193  030E                     	;# 
  2194  030F                     	;# 
  2195  0310                     	;# 
  2196  038C                     	;# 
  2197  038D                     	;# 
  2198  038E                     	;# 
  2199  038F                     	;# 
  2200  0390                     	;# 
  2201  0391                     	;# 
  2202  0392                     	;# 
  2203  0393                     	;# 
  2204  0394                     	;# 
  2205  0395                     	;# 
  2206  0396                     	;# 
  2207  0397                     	;# 
  2208  0398                     	;# 
  2209  0399                     	;# 
  2210  039D                     	;# 
  2211  039E                     	;# 
  2212  039F                     	;# 
  2213  0415                     	;# 
  2214  0416                     	;# 
  2215  0417                     	;# 
  2216  041C                     	;# 
  2217  041D                     	;# 
  2218  041E                     	;# 
  2219  0498                     	;# 
  2220  0498                     	;# 
  2221  0499                     	;# 
  2222  049A                     	;# 
  2223  049B                     	;# 
  2224  049B                     	;# 
  2225  049C                     	;# 
  2226  049D                     	;# 
  2227  049E                     	;# 
  2228  049F                     	;# 
  2229  0511                     	;# 
  2230  0515                     	;# 
  2231  0617                     	;# 
  2232  0618                     	;# 
  2233  0619                     	;# 
  2234  0619                     	;# 
  2235  061A                     	;# 
  2236  061B                     	;# 
  2237  061C                     	;# 
  2238  061C                     	;# 
  2239  0691                     	;# 
  2240  0692                     	;# 
  2241  0693                     	;# 
  2242  0694                     	;# 
  2243  0695                     	;# 
  2244  0696                     	;# 
  2245  0697                     	;# 
  2246  0698                     	;# 
  2247  0699                     	;# 
  2248  069A                     	;# 
  2249  069B                     	;# 
  2250  069C                     	;# 
  2251  069D                     	;# 
  2252  069E                     	;# 
  2253  069F                     	;# 
  2254  0E0F                     	;# 
  2255  0E10                     	;# 
  2256  0E11                     	;# 
  2257  0E12                     	;# 
  2258  0E13                     	;# 
  2259  0E14                     	;# 
  2260  0E15                     	;# 
  2261  0E17                     	;# 
  2262  0E20                     	;# 
  2263  0E21                     	;# 
  2264  0E22                     	;# 
  2265  0E24                     	;# 
  2266  0E25                     	;# 
  2267  0E28                     	;# 
  2268  0E29                     	;# 
  2269  0E2A                     	;# 
  2270  0E2B                     	;# 
  2271  0E90                     	;# 
  2272  0E91                     	;# 
  2273  0E92                     	;# 
  2274  0E93                     	;# 
  2275  0E94                     	;# 
  2276  0E95                     	;# 
  2277  0E96                     	;# 
  2278  0E97                     	;# 
  2279  0E98                     	;# 
  2280  0E99                     	;# 
  2281  0E9A                     	;# 
  2282  0E9B                     	;# 
  2283  0E9C                     	;# 
  2284  0E9D                     	;# 
  2285  0E9E                     	;# 
  2286  0E9F                     	;# 
  2287  0EA0                     	;# 
  2288  0EA1                     	;# 
  2289  0EA2                     	;# 
  2290  0EA3                     	;# 
  2291  0EA4                     	;# 
  2292  0EA5                     	;# 
  2293  0EA6                     	;# 
  2294  0EA7                     	;# 
  2295  0EA8                     	;# 
  2296  0EA9                     	;# 
  2297  0EAA                     	;# 
  2298  0EAB                     	;# 
  2299  0EAC                     	;# 
  2300  0EAD                     	;# 
  2301  0EAE                     	;# 
  2302  0EAF                     	;# 
  2303  0EB0                     	;# 
  2304  0EB1                     	;# 
  2305  0EB2                     	;# 
  2306  0F0F                     	;# 
  2307  0F10                     	;# 
  2308  0F11                     	;# 
  2309  0F12                     	;# 
  2310  0F13                     	;# 
  2311  0F14                     	;# 
  2312  0F15                     	;# 
  2313  0F16                     	;# 
  2314  0F17                     	;# 
  2315  0F18                     	;# 
  2316  0F19                     	;# 
  2317  0F1A                     	;# 
  2318  0F1B                     	;# 
  2319  0F1C                     	;# 
  2320  0F1D                     	;# 
  2321  0F1E                     	;# 
  2322  0F1F                     	;# 
  2323  0F20                     	;# 
  2324  0F21                     	;# 
  2325  0F22                     	;# 
  2326  0F23                     	;# 
  2327  0F24                     	;# 
  2328  0F25                     	;# 
  2329  0F26                     	;# 
  2330  0F27                     	;# 
  2331  0F28                     	;# 
  2332  0F29                     	;# 
  2333  0F2A                     	;# 
  2334  0F2B                     	;# 
  2335  0F2C                     	;# 
  2336  0F2D                     	;# 
  2337  0F2E                     	;# 
  2338  0F2F                     	;# 
  2339  0F30                     	;# 
  2340  0F31                     	;# 
  2341  0F32                     	;# 
  2342  0F33                     	;# 
  2343  0F34                     	;# 
  2344  0F35                     	;# 
  2345  0F36                     	;# 
  2346  0F37                     	;# 
  2347  0FE4                     	;# 
  2348  0FE5                     	;# 
  2349  0FE6                     	;# 
  2350  0FE7                     	;# 
  2351  0FE8                     	;# 
  2352  0FE9                     	;# 
  2353  0FEA                     	;# 
  2354  0FEB                     	;# 
  2355  0FED                     	;# 
  2356  0FEE                     	;# 
  2357  0FEF                     	;_messageBuffer
  2358                           
  2359                           	psect	idataBANK3
  2360  1800                     __pidataBANK3:	
  2361                           
  2362                           ;initializer for stoa@F1152
  2363  1800  3428               	retlw	40
  2364  1801  346E               	retlw	110
  2365  1802  3475               	retlw	117
  2366  1803  346C               	retlw	108
  2367  1804  346C               	retlw	108
  2368  1805  3429               	retlw	41
  2369  1806  3400               	retlw	0
  2370                           
  2371                           ;initializer for _thermistorBetaValue
  2372  1807  346B               	retlw	107
  2373  1808  340D               	retlw	13
  2374                           
  2375                           	psect	stringtext1
  2376  3000                     __pstringtext1:	
  2377  3000                     _lookupTableSamsung_SOC:	
  2378  3000  3464               	retlw	100
  2379  3001  3400               	retlw	0
  2380  3002  3462               	retlw	98
  2381  3003  3400               	retlw	0
  2382  3004  3460               	retlw	96
  2383  3005  3400               	retlw	0
  2384  3006  345D               	retlw	93
  2385  3007  3400               	retlw	0
  2386  3008  345B               	retlw	91
  2387  3009  3400               	retlw	0
  2388  300A  3457               	retlw	87
  2389  300B  3400               	retlw	0
  2390  300C  3454               	retlw	84
  2391  300D  3400               	retlw	0
  2392  300E  3452               	retlw	82
  2393  300F  3400               	retlw	0
  2394  3010  3450               	retlw	80
  2395  3011  3400               	retlw	0
  2396  3012  344E               	retlw	78
  2397  3013  3400               	retlw	0
  2398  3014  344C               	retlw	76
  2399  3015  3400               	retlw	0
  2400  3016  3449               	retlw	73
  2401  3017  3400               	retlw	0
  2402  3018  3447               	retlw	71
  2403  3019  3400               	retlw	0
  2404  301A  3445               	retlw	69
  2405  301B  3400               	retlw	0
  2406  301C  3443               	retlw	67
  2407  301D  3400               	retlw	0
  2408  301E  3440               	retlw	64
  2409  301F  3400               	retlw	0
  2410  3020  343E               	retlw	62
  2411  3021  3400               	retlw	0
  2412  3022  343C               	retlw	60
  2413  3023  3400               	retlw	0
  2414  3024  343A               	retlw	58
  2415  3025  3400               	retlw	0
  2416  3026  3438               	retlw	56
  2417  3027  3400               	retlw	0
  2418  3028  3435               	retlw	53
  2419  3029  3400               	retlw	0
  2420  302A  3433               	retlw	51
  2421  302B  3400               	retlw	0
  2422  302C  3431               	retlw	49
  2423  302D  3400               	retlw	0
  2424  302E  342F               	retlw	47
  2425  302F  3400               	retlw	0
  2426  3030  342C               	retlw	44
  2427  3031  3400               	retlw	0
  2428  3032  342A               	retlw	42
  2429  3033  3400               	retlw	0
  2430  3034  3428               	retlw	40
  2431  3035  3400               	retlw	0
  2432  3036  3426               	retlw	38
  2433  3037  3400               	retlw	0
  2434  3038  3424               	retlw	36
  2435  3039  3400               	retlw	0
  2436  303A  3421               	retlw	33
  2437  303B  3400               	retlw	0
  2438  303C  341F               	retlw	31
  2439  303D  3400               	retlw	0
  2440  303E  341D               	retlw	29
  2441  303F  3400               	retlw	0
  2442  3040  341B               	retlw	27
  2443  3041  3400               	retlw	0
  2444  3042  3418               	retlw	24
  2445  3043  3400               	retlw	0
  2446  3044  3416               	retlw	22
  2447  3045  3400               	retlw	0
  2448  3046  3414               	retlw	20
  2449  3047  3400               	retlw	0
  2450  3048  3412               	retlw	18
  2451  3049  3400               	retlw	0
  2452  304A  3410               	retlw	16
  2453  304B  3400               	retlw	0
  2454  304C  340D               	retlw	13
  2455  304D  3400               	retlw	0
  2456  304E  340B               	retlw	11
  2457  304F  3400               	retlw	0
  2458  3050  3409               	retlw	9
  2459  3051  3400               	retlw	0
  2460  3052  3407               	retlw	7
  2461  3053  3400               	retlw	0
  2462  3054  3404               	retlw	4
  2463  3055  3400               	retlw	0
  2464  3056  3402               	retlw	2
  2465  3057  3400               	retlw	0
  2466  3058  3400               	retlw	0
  2467  3059  3400               	retlw	0
  2468  305A  3400               	retlw	0
  2469  305B  3400               	retlw	0
  2470  305C                     __end_of_lookupTableSamsung_SOC:	
  2471                           
  2472                           	psect	stringtext2
  2473  305C                     __pstringtext2:	
  2474  305C                     _lookupTableSamsung_voltage:	
  2475  305C  3451               	retlw	81
  2476  305D  3410               	retlw	16
  2477  305E  345B               	retlw	91
  2478  305F  340F               	retlw	15
  2479  3060  341F               	retlw	31
  2480  3061  340F               	retlw	15
  2481  3062  340F               	retlw	15
  2482  3063  340F               	retlw	15
  2483  3064  340A               	retlw	10
  2484  3065  340F               	retlw	15
  2485  3066  3406               	retlw	6
  2486  3067  340F               	retlw	15
  2487  3068  3405               	retlw	5
  2488  3069  340F               	retlw	15
  2489  306A  3403               	retlw	3
  2490  306B  340F               	retlw	15
  2491  306C  3401               	retlw	1
  2492  306D  340F               	retlw	15
  2493  306E  3400               	retlw	0
  2494  306F  340F               	retlw	15
  2495  3070  34FE               	retlw	254
  2496  3071  340E               	retlw	14
  2497  3072  34FC               	retlw	252
  2498  3073  340E               	retlw	14
  2499  3074  34FA               	retlw	250
  2500  3075  340E               	retlw	14
  2501  3076  34F8               	retlw	248
  2502  3077  340E               	retlw	14
  2503  3078  34F6               	retlw	246
  2504  3079  340E               	retlw	14
  2505  307A  34F3               	retlw	243
  2506  307B  340E               	retlw	14
  2507  307C  34F1               	retlw	241
  2508  307D  340E               	retlw	14
  2509  307E  34EE               	retlw	238
  2510  307F  340E               	retlw	14
  2511  3080  34EB               	retlw	235
  2512  3081  340E               	retlw	14
  2513  3082  34E8               	retlw	232
  2514  3083  340E               	retlw	14
  2515  3084  34E5               	retlw	229
  2516  3085  340E               	retlw	14
  2517  3086  34E1               	retlw	225
  2518  3087  340E               	retlw	14
  2519  3088  34DD               	retlw	221
  2520  3089  340E               	retlw	14
  2521  308A  34D9               	retlw	217
  2522  308B  340E               	retlw	14
  2523  308C  34D4               	retlw	212
  2524  308D  340E               	retlw	14
  2525  308E  34CF               	retlw	207
  2526  308F  340E               	retlw	14
  2527  3090  34C9               	retlw	201
  2528  3091  340E               	retlw	14
  2529  3092  34C3               	retlw	195
  2530  3093  340E               	retlw	14
  2531  3094  34BB               	retlw	187
  2532  3095  340E               	retlw	14
  2533  3096  34B4               	retlw	180
  2534  3097  340E               	retlw	14
  2535  3098  34AB               	retlw	171
  2536  3099  340E               	retlw	14
  2537  309A  34A0               	retlw	160
  2538  309B  340E               	retlw	14
  2539  309C  3495               	retlw	149
  2540  309D  340E               	retlw	14
  2541  309E  3487               	retlw	135
  2542  309F  340E               	retlw	14
  2543  30A0  3477               	retlw	119
  2544  30A1  340E               	retlw	14
  2545  30A2  3464               	retlw	100
  2546  30A3  340E               	retlw	14
  2547  30A4  344D               	retlw	77
  2548  30A5  340E               	retlw	14
  2549  30A6  3431               	retlw	49
  2550  30A7  340E               	retlw	14
  2551  30A8  340D               	retlw	13
  2552  30A9  340E               	retlw	14
  2553  30AA  34DE               	retlw	222
  2554  30AB  340D               	retlw	13
  2555  30AC  349F               	retlw	159
  2556  30AD  340D               	retlw	13
  2557  30AE  3443               	retlw	67
  2558  30AF  340D               	retlw	13
  2559  30B0  34B3               	retlw	179
  2560  30B1  340C               	retlw	12
  2561  30B2  34B1               	retlw	177
  2562  30B3  340B               	retlw	11
  2563  30B4  345E               	retlw	94
  2564  30B5  3409               	retlw	9
  2565  30B6  3400               	retlw	0
  2566  30B7  3400               	retlw	0
  2567  30B8                     __end_of_lookupTableSamsung_voltage:	
  2568                           
  2569                           	psect	stringtext3
  2570  3897                     __pstringtext3:	
  2571  3897                     _OCD_threshold_setting:	
  2572  3897  3411               	retlw	17
  2573  3898  3400               	retlw	0
  2574  3899  3416               	retlw	22
  2575  389A  3400               	retlw	0
  2576  389B  341C               	retlw	28
  2577  389C  3400               	retlw	0
  2578  389D  3421               	retlw	33
  2579  389E  3400               	retlw	0
  2580  389F  3427               	retlw	39
  2581  38A0  3400               	retlw	0
  2582  38A1  342C               	retlw	44
  2583  38A2  3400               	retlw	0
  2584  38A3  3432               	retlw	50
  2585  38A4  3400               	retlw	0
  2586  38A5  3438               	retlw	56
  2587  38A6  3400               	retlw	0
  2588  38A7  343D               	retlw	61
  2589  38A8  3400               	retlw	0
  2590  38A9  3443               	retlw	67
  2591  38AA  3400               	retlw	0
  2592  38AB  3448               	retlw	72
  2593  38AC  3400               	retlw	0
  2594  38AD  344E               	retlw	78
  2595  38AE  3400               	retlw	0
  2596  38AF  3453               	retlw	83
  2597  38B0  3400               	retlw	0
  2598  38B1  3459               	retlw	89
  2599  38B2  3400               	retlw	0
  2600  38B3  345E               	retlw	94
  2601  38B4  3400               	retlw	0
  2602  38B5  3464               	retlw	100
  2603  38B6  3400               	retlw	0
  2604  38B7                     __end_of_OCD_threshold_setting:	
  2605                           
  2606                           	psect	stringtext4
  2607  39CB                     __pstringtext4:	
  2608  39CB                     _OCD_delay_setting:	
  2609  39CB  3408               	retlw	8
  2610  39CC  3400               	retlw	0
  2611  39CD  3414               	retlw	20
  2612  39CE  3400               	retlw	0
  2613  39CF  3428               	retlw	40
  2614  39D0  3400               	retlw	0
  2615  39D1  3450               	retlw	80
  2616  39D2  3400               	retlw	0
  2617  39D3  34A0               	retlw	160
  2618  39D4  3400               	retlw	0
  2619  39D5  3440               	retlw	64
  2620  39D6  3401               	retlw	1
  2621  39D7  3480               	retlw	128
  2622  39D8  3402               	retlw	2
  2623  39D9  3400               	retlw	0
  2624  39DA  3405               	retlw	5
  2625  39DB                     __end_of_OCD_delay_setting:	
  2626                           
  2627                           	psect	stringtext5
  2628  39DB                     __pstringtext5:	
  2629  39DB                     _SCD_threshold_setting:	
  2630  39DB  342C               	retlw	44
  2631  39DC  3400               	retlw	0
  2632  39DD  3443               	retlw	67
  2633  39DE  3400               	retlw	0
  2634  39DF  3459               	retlw	89
  2635  39E0  3400               	retlw	0
  2636  39E1  346F               	retlw	111
  2637  39E2  3400               	retlw	0
  2638  39E3  3485               	retlw	133
  2639  39E4  3400               	retlw	0
  2640  39E5  349B               	retlw	155
  2641  39E6  3400               	retlw	0
  2642  39E7  34B2               	retlw	178
  2643  39E8  3400               	retlw	0
  2644  39E9  34C8               	retlw	200
  2645  39EA  3400               	retlw	0
  2646  39EB                     __end_of_SCD_threshold_setting:	
  2647                           
  2648                           	psect	stringtext6
  2649  3A09                     __pstringtext6:	
  2650  3A09                     _OV_delay_setting:	
  2651  3A09  3401               	retlw	1
  2652  3A0A  3400               	retlw	0
  2653  3A0B  3402               	retlw	2
  2654  3A0C  3400               	retlw	0
  2655  3A0D  3404               	retlw	4
  2656  3A0E  3400               	retlw	0
  2657  3A0F  3408               	retlw	8
  2658  3A10  3400               	retlw	0
  2659  3A11                     __end_of_OV_delay_setting:	
  2660                           
  2661                           	psect	stringtext7
  2662  3A11                     __pstringtext7:	
  2663  3A11                     _UV_delay_setting:	
  2664  3A11  3401               	retlw	1
  2665  3A12  3400               	retlw	0
  2666  3A13  3404               	retlw	4
  2667  3A14  3400               	retlw	0
  2668  3A15  3408               	retlw	8
  2669  3A16  3400               	retlw	0
  2670  3A17  3410               	retlw	16
  2671  3A18  3400               	retlw	0
  2672  3A19                     __end_of_UV_delay_setting:	
  2673                           
  2674                           	psect	stringtext8
  2675  3A19                     __pstringtext8:	
  2676  3A19                     _SCD_delay_setting:	
  2677  3A19  3446               	retlw	70
  2678  3A1A  3400               	retlw	0
  2679  3A1B  3464               	retlw	100
  2680  3A1C  3400               	retlw	0
  2681  3A1D  34C8               	retlw	200
  2682  3A1E  3400               	retlw	0
  2683  3A1F  3490               	retlw	144
  2684  3A20  3401               	retlw	1
  2685  3A21                     __end_of_SCD_delay_setting:	
  2686                           
  2687                           	psect	stringtext9
  2688  3A21                     __pstringtext9:	
  2689  3A21                     _Lg4:	
  2690  3A21  3426               	retlw	38
  2691  3A22  349E               	retlw	158
  2692  3A23  3478               	retlw	120
  2693  3A24  343E               	retlw	62
  2694  3A25                     __end_of_Lg4:	
  2695                           
  2696                           	psect	stringtext10
  2697  3A25                     __pstringtext10:	
  2698  3A25                     _Lg3:	
  2699  3A25  34EE               	retlw	238
  2700  3A26  34E9               	retlw	233
  2701  3A27  3491               	retlw	145
  2702  3A28  343E               	retlw	62
  2703  3A29                     __end_of_Lg3:	
  2704                           
  2705                           	psect	stringtext11
  2706  3A29                     __pstringtext11:	
  2707  3A29                     _Lg2:	
  2708  3A29  3413               	retlw	19
  2709  3A2A  34CE               	retlw	206
  2710  3A2B  34CC               	retlw	204
  2711  3A2C  343E               	retlw	62
  2712  3A2D                     __end_of_Lg2:	
  2713                           
  2714                           	psect	stringtext12
  2715  3A2D                     __pstringtext12:	
  2716  3A2D                     _Lg1:	
  2717  3A2D  34AA               	retlw	170
  2718  3A2E  34AA               	retlw	170
  2719  3A2F  342A               	retlw	42
  2720  3A30  343F               	retlw	63
  2721  3A31                     __end_of_Lg1:	
  2722                           
  2723                           	psect	stringtext13
  2724  3A31                     __pstringtext13:	
  2725  3A31                     _ln2_lo:	
  2726  3A31  34D1               	retlw	209
  2727  3A32  34F7               	retlw	247
  2728  3A33  3417               	retlw	23
  2729  3A34  3437               	retlw	55
  2730  3A35                     __end_of_ln2_lo:	
  2731                           
  2732                           	psect	stringtext14
  2733  3A35                     __pstringtext14:	
  2734  3A35                     _ln2_hi:	
  2735  3A35  3480               	retlw	128
  2736  3A36  3471               	retlw	113
  2737  3A37  3431               	retlw	49
  2738  3A38  343F               	retlw	63
  2739  3A39                     __end_of_ln2_hi:	
  2740                           
  2741                           	psect	stringtext15
  2742  3800                     __pstringtext15:	
  2743  3800                     _ATmega328_address:	
  2744  3800  3402               	retlw	2
  2745  3801  3400               	retlw	0
  2746  3802                     __end_of_ATmega328_address:	
  2747  0016                     _TMR1	set	22
  2748  0003                     _STATUSbits	set	3
  2749  000B                     _INTCONbits	set	11
  2750  0018                     _T1CONbits	set	24
  2751  0011                     _PIR1bits	set	17
  2752  0097                     _WDTCONbits	set	151
  2753  0090                     _TRISEbits	set	144
  2754  008C                     _TRISAbits	set	140
  2755  008E                     _TRISCbits	set	142
  2756  008D                     _TRISBbits	set	141
  2757  0091                     _PIE1bits	set	145
  2758  0476                     _TRISC6	set	1142
  2759  0477                     _TRISC7	set	1143
  2760  04CF                     _SPLLEN	set	1231
  2761  04CE                     _IRCF3	set	1230
  2762  04CD                     _IRCF2	set	1229
  2763  04CC                     _IRCF1	set	1228
  2764  04CB                     _IRCF0	set	1227
  2765  04C9                     _SCS1	set	1225
  2766  04C8                     _SCS0	set	1224
  2767  0110                     _LATEbits	set	272
  2768  010C                     _LATAbits	set	268
  2769  019A                     _TX1REG	set	410
  2770  0199                     _RC1REG	set	409
  2771  019D                     _RC1STAbits	set	413
  2772  019B                     _SPBRG	set	411
  2773  018E                     _ANSELCbits	set	398
  2774  018D                     _ANSELBbits	set	397
  2775  0CF5                     _TXEN	set	3317
  2776  0CEC                     _CREN	set	3308
  2777  0CEF                     _SPEN	set	3311
  2778  0CF4                     _SYNC	set	3316
  2779  0CF2                     _BRGH	set	3314
  2780  0216                     _SSPCON2bits	set	534
  2781  0211                     _SSPBUF	set	529
  2782  0212                     _SSPADD	set	530
  2783  0215                     _SSPCONbits	set	533
  2784  0E24                     _RXPPSbits	set	3620
  2785  0E20                     _SSPCLKPPSbits	set	3616
  2786  0E21                     _SSPDATPPSbits	set	3617
  2787  0E0F                     _PPSLOCKbits	set	3599
  2788  0E0F                     _PPSLOCK	set	3599
  2789  0E9A                     _RB2PPSbits	set	3738
  2790  0EA5                     _RC5PPSbits	set	3749
  2791  0EA4                     _RC4PPSbits	set	3748
  2792  3802                     STR_2:	
  2793  3802  3443               	retlw	67	;'C'
  2794  3803  3465               	retlw	101	;'e'
  2795  3804  346C               	retlw	108	;'l'
  2796  3805  346C               	retlw	108	;'l'
  2797  3806  3420               	retlw	32	;' '
  2798  3807  3462               	retlw	98	;'b'
  2799  3808  3461               	retlw	97	;'a'
  2800  3809  3474               	retlw	116	;'t'
  2801  380A  3474               	retlw	116	;'t'
  2802  380B  343A               	retlw	58	;':'
  2803  380C  3420               	retlw	32	;' '
  2804  380D  3425               	retlw	37	;'%'
  2805  380E  3469               	retlw	105	;'i'
  2806  380F  3420               	retlw	32	;' '
  2807  3810  342C               	retlw	44	;','
  2808  3811  3425               	retlw	37	;'%'
  2809  3812  3464               	retlw	100	;'d'
  2810  3813  342C               	retlw	44	;','
  2811  3814  3420               	retlw	32	;' '
  2812  3815  3425               	retlw	37	;'%'
  2813  3816  3464               	retlw	100	;'d'
  2814  3817  3420               	retlw	32	;' '
  2815  3818  342C               	retlw	44	;','
  2816  3819  3420               	retlw	32	;' '
  2817  381A  3425               	retlw	37	;'%'
  2818  381B  3464               	retlw	100	;'d'
  2819  381C  342C               	retlw	44	;','
  2820  381D  3420               	retlw	32	;' '
  2821  381E  3425               	retlw	37	;'%'
  2822  381F  3464               	retlw	100	;'d'
  2823  3820  342C               	retlw	44	;','
  2824  3821  3420               	retlw	32	;' '
  2825  3822  3425               	retlw	37	;'%'
  2826  3823  3464               	retlw	100	;'d'
  2827  3824  3420               	retlw	32	;' '
  2828  3825  3442               	retlw	66	;'B'
  2829  3826  3461               	retlw	97	;'a'
  2830  3827  3474               	retlw	116	;'t'
  2831  3828  3474               	retlw	116	;'t'
  2832  3829  3420               	retlw	32	;' '
  2833  382A  3443               	retlw	67	;'C'
  2834  382B  3475               	retlw	117	;'u'
  2835  382C  3472               	retlw	114	;'r'
  2836  382D  3472               	retlw	114	;'r'
  2837  382E  343A               	retlw	58	;':'
  2838  382F  3420               	retlw	32	;' '
  2839  3830  3425               	retlw	37	;'%'
  2840  3831  3469               	retlw	105	;'i'
  2841  3832  3420               	retlw	32	;' '
  2842  3833  3454               	retlw	84	;'T'
  2843  3834  3465               	retlw	101	;'e'
  2844  3835  346D               	retlw	109	;'m'
  2845  3836  3470               	retlw	112	;'p'
  2846  3837  343A               	retlw	58	;':'
  2847  3838  3420               	retlw	32	;' '
  2848  3839  3425               	retlw	37	;'%'
  2849  383A  3469               	retlw	105	;'i'
  2850  383B  3420               	retlw	32	;' '
  2851  383C  3443               	retlw	67	;'C'
  2852  383D  3454               	retlw	84	;'T'
  2853  383E  3452               	retlw	82	;'R'
  2854  383F  344C               	retlw	76	;'L'
  2855  3840  3432               	retlw	50	;'2'
  2856  3841  343A               	retlw	58	;':'
  2857  3842  3420               	retlw	32	;' '
  2858  3843  3425               	retlw	37	;'%'
  2859  3844  3469               	retlw	105	;'i'
  2860  3845  3420               	retlw	32	;' '
  2861  3846  340A               	retlw	10
  2862  3847  340D               	retlw	13
  2863  3848  3400               	retlw	0
  2864                           
  2865                           	psect	stringtext16
  2866  3849                     __pstringtext16:	
  2867  3849                     STR_1:	
  2868  3849  3457               	retlw	87	;'W'
  2869  384A  3441               	retlw	65	;'A'
  2870  384B  3454               	retlw	84	;'T'
  2871  384C  3443               	retlw	67	;'C'
  2872  384D  3448               	retlw	72	;'H'
  2873  384E  3444               	retlw	68	;'D'
  2874  384F  344F               	retlw	79	;'O'
  2875  3850  3447               	retlw	71	;'G'
  2876  3851  3420               	retlw	32	;' '
  2877  3852  344E               	retlw	78	;'N'
  2878  3853  344F               	retlw	79	;'O'
  2879  3854  3454               	retlw	84	;'T'
  2880  3855  3420               	retlw	32	;' '
  2881  3856  344B               	retlw	75	;'K'
  2882  3857  3449               	retlw	73	;'I'
  2883  3858  3443               	retlw	67	;'C'
  2884  3859  344B               	retlw	75	;'K'
  2885  385A  3445               	retlw	69	;'E'
  2886  385B  3444               	retlw	68	;'D'
  2887  385C  343A               	retlw	58	;':'
  2888  385D  3420               	retlw	32	;' '
  2889  385E  3441               	retlw	65	;'A'
  2890  385F  3446               	retlw	70	;'F'
  2891  3860  3445               	retlw	69	;'E'
  2892  3861  3420               	retlw	32	;' '
  2893  3862  3463               	retlw	99	;'c'
  2894  3863  346F               	retlw	111	;'o'
  2895  3864  346D               	retlw	109	;'m'
  2896  3865  346D               	retlw	109	;'m'
  2897  3866  3473               	retlw	115	;'s'
  2898  3867  3420               	retlw	32	;' '
  2899  3868  3465               	retlw	101	;'e'
  2900  3869  3472               	retlw	114	;'r'
  2901  386A  3472               	retlw	114	;'r'
  2902  386B  346F               	retlw	111	;'o'
  2903  386C  3472               	retlw	114	;'r'
  2904  386D  3420               	retlw	32	;' '
  2905  386E  340A               	retlw	10
  2906  386F  340D               	retlw	13
  2907  3870  3400               	retlw	0
  2908                           
  2909                           	psect	stringtext17
  2910  3871                     __pstringtext17:	
  2911  3871                     STR_10:	
  2912  3871  3450               	retlw	80	;'P'
  2913  3872  3472               	retlw	114	;'r'
  2914  3873  3469               	retlw	105	;'i'
  2915  3874  346E               	retlw	110	;'n'
  2916  3875  3474               	retlw	116	;'t'
  2917  3876  3469               	retlw	105	;'i'
  2918  3877  346E               	retlw	110	;'n'
  2919  3878  3467               	retlw	103	;'g'
  2920  3879  3420               	retlw	32	;' '
  2921  387A  346F               	retlw	111	;'o'
  2922  387B  3475               	retlw	117	;'u'
  2923  387C  3474               	retlw	116	;'t'
  2924  387D  3420               	retlw	32	;' '
  2925  387E  3441               	retlw	65	;'A'
  2926  387F  3446               	retlw	70	;'F'
  2927  3880  3445               	retlw	69	;'E'
  2928  3881  3420               	retlw	32	;' '
  2929  3882  3472               	retlw	114	;'r'
  2930  3883  3465               	retlw	101	;'e'
  2931  3884  3467               	retlw	103	;'g'
  2932  3885  3469               	retlw	105	;'i'
  2933  3886  3473               	retlw	115	;'s'
  2934  3887  3474               	retlw	116	;'t'
  2935  3888  3465               	retlw	101	;'e'
  2936  3889  3472               	retlw	114	;'r'
  2937  388A  3420               	retlw	32	;' '
  2938  388B  3476               	retlw	118	;'v'
  2939  388C  3461               	retlw	97	;'a'
  2940  388D  346C               	retlw	108	;'l'
  2941  388E  3475               	retlw	117	;'u'
  2942  388F  3465               	retlw	101	;'e'
  2943  3890  3473               	retlw	115	;'s'
  2944  3891  342E               	retlw	46	;'.'
  2945  3892  342E               	retlw	46	;'.'
  2946  3893  342E               	retlw	46	;'.'
  2947  3894  340A               	retlw	10
  2948  3895  340D               	retlw	13
  2949  3896  3400               	retlw	0
  2950                           
  2951                           	psect	stringtext18
  2952  38B7                     __pstringtext18:	
  2953  38B7                     STR_8:	
  2954  38B7  3463               	retlw	99	;'c'
  2955  38B8  3465               	retlw	101	;'e'
  2956  38B9  346C               	retlw	108	;'l'
  2957  38BA  346C               	retlw	108	;'l'
  2958  38BB  3420               	retlw	32	;' '
  2959  38BC  3470               	retlw	112	;'p'
  2960  38BD  3472               	retlw	114	;'r'
  2961  38BE  3465               	retlw	101	;'e'
  2962  38BF  3464               	retlw	100	;'d'
  2963  38C0  3469               	retlw	105	;'i'
  2964  38C1  3463               	retlw	99	;'c'
  2965  38C2  3474               	retlw	116	;'t'
  2966  38C3  3465               	retlw	101	;'e'
  2967  38C4  3464               	retlw	100	;'d'
  2968  38C5  3420               	retlw	32	;' '
  2969  38C6  3453               	retlw	83	;'S'
  2970  38C7  344F               	retlw	79	;'O'
  2971  38C8  3443               	retlw	67	;'C'
  2972  38C9  343A               	retlw	58	;':'
  2973  38CA  3420               	retlw	32	;' '
  2974  38CB  3425               	retlw	37	;'%'
  2975  38CC  3464               	retlw	100	;'d'
  2976  38CD  3420               	retlw	32	;' '
  2977  38CE  3425               	retlw	37	;'%'
  2978  38CF  3464               	retlw	100	;'d'
  2979  38D0  3420               	retlw	32	;' '
  2980  38D1  3425               	retlw	37	;'%'
  2981  38D2  3464               	retlw	100	;'d'
  2982  38D3  3420               	retlw	32	;' '
  2983  38D4  340A               	retlw	10
  2984  38D5  340D               	retlw	13
  2985  38D6  3400               	retlw	0
  2986                           
  2987                           	psect	stringtext19
  2988  38D7                     __pstringtext19:	
  2989  38D7                     STR_14:	
  2990  38D7  3430               	retlw	48	;'0'
  2991  38D8  3478               	retlw	120	;'x'
  2992  38D9  3430               	retlw	48	;'0'
  2993  38DA  3434               	retlw	52	;'4'
  2994  38DB  3420               	retlw	32	;' '
  2995  38DC  3453               	retlw	83	;'S'
  2996  38DD  3459               	retlw	89	;'Y'
  2997  38DE  3453               	retlw	83	;'S'
  2998  38DF  345F               	retlw	95	;'_'
  2999  38E0  3443               	retlw	67	;'C'
  3000  38E1  3454               	retlw	84	;'T'
  3001  38E2  3452               	retlw	82	;'R'
  3002  38E3  344C               	retlw	76	;'L'
  3003  38E4  3431               	retlw	49	;'1'
  3004  38E5  343A               	retlw	58	;':'
  3005  38E6  3420               	retlw	32	;' '
  3006  38E7  3425               	retlw	37	;'%'
  3007  38E8  3469               	retlw	105	;'i'
  3008  38E9  3420               	retlw	32	;' '
  3009  38EA  340A               	retlw	10
  3010  38EB  340D               	retlw	13
  3011  38EC  3400               	retlw	0
  3012                           
  3013                           	psect	stringtext20
  3014  38ED                     __pstringtext20:	
  3015  38ED                     STR_3:	
  3016  38ED  3430               	retlw	48	;'0'
  3017  38EE  3478               	retlw	120	;'x'
  3018  38EF  3430               	retlw	48	;'0'
  3019  38F0  3435               	retlw	53	;'5'
  3020  38F1  3420               	retlw	32	;' '
  3021  38F2  3453               	retlw	83	;'S'
  3022  38F3  3459               	retlw	89	;'Y'
  3023  38F4  3453               	retlw	83	;'S'
  3024  38F5  345F               	retlw	95	;'_'
  3025  38F6  3443               	retlw	67	;'C'
  3026  38F7  3454               	retlw	84	;'T'
  3027  38F8  3452               	retlw	82	;'R'
  3028  38F9  344C               	retlw	76	;'L'
  3029  38FA  3432               	retlw	50	;'2'
  3030  38FB  343A               	retlw	58	;':'
  3031  38FC  3420               	retlw	32	;' '
  3032  38FD  3425               	retlw	37	;'%'
  3033  38FE  3469               	retlw	105	;'i'
  3034  38FF  3420               	retlw	32	;' '
  3035  3900  340A               	retlw	10
  3036  3901  340D               	retlw	13
  3037  3902  3400               	retlw	0
  3038                           
  3039                           	psect	stringtext21
  3040  3903                     __pstringtext21:	
  3041  3903                     STR_13:	
  3042  3903  3430               	retlw	48	;'0'
  3043  3904  3478               	retlw	120	;'x'
  3044  3905  3430               	retlw	48	;'0'
  3045  3906  3431               	retlw	49	;'1'
  3046  3907  3420               	retlw	32	;' '
  3047  3908  3443               	retlw	67	;'C'
  3048  3909  3445               	retlw	69	;'E'
  3049  390A  344C               	retlw	76	;'L'
  3050  390B  344C               	retlw	76	;'L'
  3051  390C  3442               	retlw	66	;'B'
  3052  390D  3441               	retlw	65	;'A'
  3053  390E  344C               	retlw	76	;'L'
  3054  390F  3431               	retlw	49	;'1'
  3055  3910  343A               	retlw	58	;':'
  3056  3911  3420               	retlw	32	;' '
  3057  3912  3425               	retlw	37	;'%'
  3058  3913  3469               	retlw	105	;'i'
  3059  3914  3420               	retlw	32	;' '
  3060  3915  340A               	retlw	10
  3061  3916  340D               	retlw	13
  3062  3917  3400               	retlw	0
  3063                           
  3064                           	psect	stringtext22
  3065  3918                     __pstringtext22:	
  3066  3918                     STR_5:	
  3067  3918  3430               	retlw	48	;'0'
  3068  3919  3478               	retlw	120	;'x'
  3069  391A  3430               	retlw	48	;'0'
  3070  391B  3436               	retlw	54	;'6'
  3071  391C  3420               	retlw	32	;' '
  3072  391D  3450               	retlw	80	;'P'
  3073  391E  3452               	retlw	82	;'R'
  3074  391F  344F               	retlw	79	;'O'
  3075  3920  3454               	retlw	84	;'T'
  3076  3921  3445               	retlw	69	;'E'
  3077  3922  3443               	retlw	67	;'C'
  3078  3923  3454               	retlw	84	;'T'
  3079  3924  3431               	retlw	49	;'1'
  3080  3925  343A               	retlw	58	;':'
  3081  3926  3420               	retlw	32	;' '
  3082  3927  3425               	retlw	37	;'%'
  3083  3928  3469               	retlw	105	;'i'
  3084  3929  3420               	retlw	32	;' '
  3085  392A  340A               	retlw	10
  3086  392B  340D               	retlw	13
  3087  392C  3400               	retlw	0
  3088                           
  3089                           	psect	stringtext23
  3090  392D                     __pstringtext23:	
  3091  392D                     STR_6:	
  3092  392D  3430               	retlw	48	;'0'
  3093  392E  3478               	retlw	120	;'x'
  3094  392F  3430               	retlw	48	;'0'
  3095  3930  3437               	retlw	55	;'7'
  3096  3931  3420               	retlw	32	;' '
  3097  3932  3450               	retlw	80	;'P'
  3098  3933  3452               	retlw	82	;'R'
  3099  3934  344F               	retlw	79	;'O'
  3100  3935  3454               	retlw	84	;'T'
  3101  3936  3445               	retlw	69	;'E'
  3102  3937  3443               	retlw	67	;'C'
  3103  3938  3454               	retlw	84	;'T'
  3104  3939  3432               	retlw	50	;'2'
  3105  393A  343A               	retlw	58	;':'
  3106  393B  3420               	retlw	32	;' '
  3107  393C  3425               	retlw	37	;'%'
  3108  393D  3469               	retlw	105	;'i'
  3109  393E  3420               	retlw	32	;' '
  3110  393F  340A               	retlw	10
  3111  3940  340D               	retlw	13
  3112  3941  3400               	retlw	0
  3113                           
  3114                           	psect	stringtext24
  3115  3942                     __pstringtext24:	
  3116  3942                     STR_18:	
  3117  3942  3430               	retlw	48	;'0'
  3118  3943  3478               	retlw	120	;'x'
  3119  3944  3430               	retlw	48	;'0'
  3120  3945  3438               	retlw	56	;'8'
  3121  3946  3420               	retlw	32	;' '
  3122  3947  3450               	retlw	80	;'P'
  3123  3948  3452               	retlw	82	;'R'
  3124  3949  344F               	retlw	79	;'O'
  3125  394A  3454               	retlw	84	;'T'
  3126  394B  3445               	retlw	69	;'E'
  3127  394C  3443               	retlw	67	;'C'
  3128  394D  3454               	retlw	84	;'T'
  3129  394E  3433               	retlw	51	;'3'
  3130  394F  343A               	retlw	58	;':'
  3131  3950  3420               	retlw	32	;' '
  3132  3951  3425               	retlw	37	;'%'
  3133  3952  3469               	retlw	105	;'i'
  3134  3953  3420               	retlw	32	;' '
  3135  3954  340A               	retlw	10
  3136  3955  340D               	retlw	13
  3137  3956  3400               	retlw	0
  3138                           
  3139                           	psect	stringtext25
  3140  3957                     __pstringtext25:	
  3141  3957                     STR_4:	
  3142  3957  3430               	retlw	48	;'0'
  3143  3958  3478               	retlw	120	;'x'
  3144  3959  3430               	retlw	48	;'0'
  3145  395A  3430               	retlw	48	;'0'
  3146  395B  3420               	retlw	32	;' '
  3147  395C  3453               	retlw	83	;'S'
  3148  395D  3459               	retlw	89	;'Y'
  3149  395E  3453               	retlw	83	;'S'
  3150  395F  345F               	retlw	95	;'_'
  3151  3960  3453               	retlw	83	;'S'
  3152  3961  3454               	retlw	84	;'T'
  3153  3962  3441               	retlw	65	;'A'
  3154  3963  3454               	retlw	84	;'T'
  3155  3964  343A               	retlw	58	;':'
  3156  3965  3420               	retlw	32	;' '
  3157  3966  3425               	retlw	37	;'%'
  3158  3967  3469               	retlw	105	;'i'
  3159  3968  3420               	retlw	32	;' '
  3160  3969  340A               	retlw	10
  3161  396A  340D               	retlw	13
  3162  396B  3400               	retlw	0
  3163                           
  3164                           	psect	stringtext26
  3165  396C                     __pstringtext26:	
  3166  396C                     STR_19:	
  3167  396C  3430               	retlw	48	;'0'
  3168  396D  3478               	retlw	120	;'x'
  3169  396E  3430               	retlw	48	;'0'
  3170  396F  3439               	retlw	57	;'9'
  3171  3970  3420               	retlw	32	;' '
  3172  3971  344F               	retlw	79	;'O'
  3173  3972  3456               	retlw	86	;'V'
  3174  3973  345F               	retlw	95	;'_'
  3175  3974  3454               	retlw	84	;'T'
  3176  3975  3452               	retlw	82	;'R'
  3177  3976  3449               	retlw	73	;'I'
  3178  3977  3450               	retlw	80	;'P'
  3179  3978  343A               	retlw	58	;':'
  3180  3979  3420               	retlw	32	;' '
  3181  397A  3425               	retlw	37	;'%'
  3182  397B  3469               	retlw	105	;'i'
  3183  397C  3420               	retlw	32	;' '
  3184  397D  340A               	retlw	10
  3185  397E  340D               	retlw	13
  3186  397F  3400               	retlw	0
  3187                           
  3188                           	psect	stringtext27
  3189  3980                     __pstringtext27:	
  3190  3980                     STR_20:	
  3191  3980  3430               	retlw	48	;'0'
  3192  3981  3478               	retlw	120	;'x'
  3193  3982  3430               	retlw	48	;'0'
  3194  3983  3441               	retlw	65	;'A'
  3195  3984  3420               	retlw	32	;' '
  3196  3985  3455               	retlw	85	;'U'
  3197  3986  3456               	retlw	86	;'V'
  3198  3987  345F               	retlw	95	;'_'
  3199  3988  3454               	retlw	84	;'T'
  3200  3989  3452               	retlw	82	;'R'
  3201  398A  3449               	retlw	73	;'I'
  3202  398B  3450               	retlw	80	;'P'
  3203  398C  343A               	retlw	58	;':'
  3204  398D  3420               	retlw	32	;' '
  3205  398E  3425               	retlw	37	;'%'
  3206  398F  3469               	retlw	105	;'i'
  3207  3990  3420               	retlw	32	;' '
  3208  3991  340A               	retlw	10
  3209  3992  340D               	retlw	13
  3210  3993  3400               	retlw	0
  3211                           
  3212                           	psect	stringtext28
  3213  3994                     __pstringtext28:	
  3214  3994                     STR_21:	
  3215  3994  3430               	retlw	48	;'0'
  3216  3995  3478               	retlw	120	;'x'
  3217  3996  3430               	retlw	48	;'0'
  3218  3997  3442               	retlw	66	;'B'
  3219  3998  3420               	retlw	32	;' '
  3220  3999  3443               	retlw	67	;'C'
  3221  399A  3443               	retlw	67	;'C'
  3222  399B  345F               	retlw	95	;'_'
  3223  399C  3443               	retlw	67	;'C'
  3224  399D  3446               	retlw	70	;'F'
  3225  399E  3447               	retlw	71	;'G'
  3226  399F  343A               	retlw	58	;':'
  3227  39A0  3420               	retlw	32	;' '
  3228  39A1  3425               	retlw	37	;'%'
  3229  39A2  3469               	retlw	105	;'i'
  3230  39A3  3420               	retlw	32	;' '
  3231  39A4  340A               	retlw	10
  3232  39A5  340D               	retlw	13
  3233  39A6  3400               	retlw	0
  3234                           
  3235                           	psect	stringtext29
  3236  39A7                     __pstringtext29:	
  3237  39A7                     STR_22:	
  3238  39A7  3430               	retlw	48	;'0'
  3239  39A8  3478               	retlw	120	;'x'
  3240  39A9  3433               	retlw	51	;'3'
  3241  39AA  3432               	retlw	50	;'2'
  3242  39AB  3420               	retlw	32	;' '
  3243  39AC  3443               	retlw	67	;'C'
  3244  39AD  3443               	retlw	67	;'C'
  3245  39AE  345F               	retlw	95	;'_'
  3246  39AF  3448               	retlw	72	;'H'
  3247  39B0  3449               	retlw	73	;'I'
  3248  39B1  343A               	retlw	58	;':'
  3249  39B2  3420               	retlw	32	;' '
  3250  39B3  3425               	retlw	37	;'%'
  3251  39B4  3469               	retlw	105	;'i'
  3252  39B5  3420               	retlw	32	;' '
  3253  39B6  340A               	retlw	10
  3254  39B7  340D               	retlw	13
  3255  39B8  3400               	retlw	0
  3256                           
  3257                           	psect	stringtext30
  3258  39B9                     __pstringtext30:	
  3259  39B9                     STR_23:	
  3260  39B9  3430               	retlw	48	;'0'
  3261  39BA  3478               	retlw	120	;'x'
  3262  39BB  3433               	retlw	51	;'3'
  3263  39BC  3433               	retlw	51	;'3'
  3264  39BD  3420               	retlw	32	;' '
  3265  39BE  3443               	retlw	67	;'C'
  3266  39BF  3443               	retlw	67	;'C'
  3267  39C0  345F               	retlw	95	;'_'
  3268  39C1  344C               	retlw	76	;'L'
  3269  39C2  344F               	retlw	79	;'O'
  3270  39C3  343A               	retlw	58	;':'
  3271  39C4  3420               	retlw	32	;' '
  3272  39C5  3425               	retlw	37	;'%'
  3273  39C6  3469               	retlw	105	;'i'
  3274  39C7  3420               	retlw	32	;' '
  3275  39C8  340A               	retlw	10
  3276  39C9  340D               	retlw	13
  3277  39CA  3400               	retlw	0
  3278                           
  3279                           	psect	stringtext31
  3280  39EB                     __pstringtext31:	
  3281  39EB                     STR_7:	
  3282  39EB  3443               	retlw	67	;'C'
  3283  39EC  3475               	retlw	117	;'u'
  3284  39ED  3472               	retlw	114	;'r'
  3285  39EE  3472               	retlw	114	;'r'
  3286  39EF  3465               	retlw	101	;'e'
  3287  39F0  346E               	retlw	110	;'n'
  3288  39F1  3474               	retlw	116	;'t'
  3289  39F2  343A               	retlw	58	;':'
  3290  39F3  3420               	retlw	32	;' '
  3291  39F4  3425               	retlw	37	;'%'
  3292  39F5  3464               	retlw	100	;'d'
  3293  39F6  3420               	retlw	32	;' '
  3294  39F7  340A               	retlw	10
  3295  39F8  340D               	retlw	13
  3296  39F9  3400               	retlw	0
  3297                           
  3298                           	psect	stringtext32
  3299  39FA                     __pstringtext32:	
  3300  39FA                     STR_9:	
  3301  39FA  3454               	retlw	84	;'T'
  3302  39FB  3465               	retlw	101	;'e'
  3303  39FC  346D               	retlw	109	;'m'
  3304  39FD  3470               	retlw	112	;'p'
  3305  39FE  343A               	retlw	58	;':'
  3306  39FF  3420               	retlw	32	;' '
  3307  3A00  3425               	retlw	37	;'%'
  3308  3A01  3464               	retlw	100	;'d'
  3309  3A02  3420               	retlw	32	;' '
  3310  3A03  3465               	retlw	101	;'e'
  3311  3A04  342D               	retlw	45	;'-'
  3312  3A05  3432               	retlw	50	;'2'
  3313  3A06  340A               	retlw	10
  3314  3A07  340D               	retlw	13
  3315  3A08  3400               	retlw	0
  3316                           
  3317                           	psect	stringtext33
  3318  3A39                     __pstringtext33:	
  3319  3A39                     STR_101:	
  3320  3A39  3468               	retlw	104	;'h'
  3321  3A3A  3468               	retlw	104	;'h'
  3322  3A3B  3458               	retlw	88	;'X'
  3323  3A3C  3400               	retlw	0
  3324                           
  3325                           	psect	stringtext34
  3326  3A3D                     __pstringtext34:	
  3327  3A3D                     STR_25:	
  3328  3A3D  3468               	retlw	104	;'h'
  3329  3A3E  3468               	retlw	104	;'h'
  3330  3A3F  3464               	retlw	100	;'d'
  3331  3A40  3400               	retlw	0
  3332                           
  3333                           	psect	stringtext35
  3334  3A41                     __pstringtext35:	
  3335  3A41                     STR_29:	
  3336  3A41  3468               	retlw	104	;'h'
  3337  3A42  3468               	retlw	104	;'h'
  3338  3A43  3469               	retlw	105	;'i'
  3339  3A44  3400               	retlw	0
  3340                           
  3341                           	psect	stringtext36
  3342  3A45                     __pstringtext36:	
  3343  3A45                     STR_67:	
  3344  3A45  3468               	retlw	104	;'h'
  3345  3A46  3468               	retlw	104	;'h'
  3346  3A47  346E               	retlw	110	;'n'
  3347  3A48  3400               	retlw	0
  3348                           
  3349                           	psect	stringtext37
  3350  3A49                     __pstringtext37:	
  3351  3A49                     STR_52:	
  3352  3A49  3468               	retlw	104	;'h'
  3353  3A4A  3468               	retlw	104	;'h'
  3354  3A4B  346F               	retlw	111	;'o'
  3355  3A4C  3400               	retlw	0
  3356                           
  3357                           	psect	stringtext38
  3358  3A4D                     __pstringtext38:	
  3359  3A4D                     STR_82:	
  3360  3A4D  3468               	retlw	104	;'h'
  3361  3A4E  3468               	retlw	104	;'h'
  3362  3A4F  3475               	retlw	117	;'u'
  3363  3A50  3400               	retlw	0
  3364                           
  3365                           	psect	stringtext39
  3366  3A51                     __pstringtext39:	
  3367  3A51                     STR_97:	
  3368  3A51  3468               	retlw	104	;'h'
  3369  3A52  3468               	retlw	104	;'h'
  3370  3A53  3478               	retlw	120	;'x'
  3371  3A54  3400               	retlw	0
  3372                           
  3373                           	psect	stringtext40
  3374  3A55                     __pstringtext40:	
  3375  3A55                     STR_119:	
  3376  3A55  347A               	retlw	122	;'z'
  3377  3A56  3458               	retlw	88	;'X'
  3378  3A57  3400               	retlw	0
  3379                           
  3380                           	psect	stringtext41
  3381  3A58                     __pstringtext41:	
  3382  3A58                     STR_43:	
  3383  3A58  347A               	retlw	122	;'z'
  3384  3A59  3464               	retlw	100	;'d'
  3385  3A5A  3400               	retlw	0
  3386                           
  3387                           	psect	stringtext42
  3388  3A5B                     __pstringtext42:	
  3389  3A5B                     STR_47:	
  3390  3A5B  347A               	retlw	122	;'z'
  3391  3A5C  3469               	retlw	105	;'i'
  3392  3A5D  3400               	retlw	0
  3393                           
  3394                           	psect	stringtext43
  3395  3A5E                     __pstringtext43:	
  3396  3A5E                     STR_77:	
  3397  3A5E  347A               	retlw	122	;'z'
  3398  3A5F  346E               	retlw	110	;'n'
  3399  3A60  3400               	retlw	0
  3400                           
  3401                           	psect	stringtext44
  3402  3A61                     __pstringtext44:	
  3403  3A61                     STR_62:	
  3404  3A61  347A               	retlw	122	;'z'
  3405  3A62  346F               	retlw	111	;'o'
  3406  3A63  3400               	retlw	0
  3407                           
  3408                           	psect	stringtext45
  3409  3A64                     __pstringtext45:	
  3410  3A64                     STR_92:	
  3411  3A64  347A               	retlw	122	;'z'
  3412  3A65  3475               	retlw	117	;'u'
  3413  3A66  3400               	retlw	0
  3414                           
  3415                           	psect	stringtext46
  3416  3A67                     __pstringtext46:	
  3417  3A67                     STR_115:	
  3418  3A67  347A               	retlw	122	;'z'
  3419  3A68  3478               	retlw	120	;'x'
  3420  3A69  3400               	retlw	0
  3421                           
  3422                           	psect	stringtext47
  3423  0000                     __pstringtext47:	
  3424  39F7                     
  3425                           ; #config settings
  3426  0000                     
  3427                           	psect	cinit
  3428  0020                     start_initialization:	
  3429  0020                     __initialization:		;BIGRAM
  3430                           
  3431                           ; Initialize objects allocated to BANK3
  3432  0020  3000               	movlw	low __pidataBANK3
  3433  0021  0084               	movwf	4
  3434  0022  3098               	movlw	(high __pidataBANK3)| (0+128)
  3435  0023  0085               	movwf	5
  3436  0024  0023               	movlb	3	; select bank3
  3437  0025  0012               	moviw fsr0++
  3438  0026  00DD               	movwf	__pdataBANK3& (0+127)
  3439  0027  0012               	moviw fsr0++
  3440  0028  00DE               	movwf	(__pdataBANK3+1)& (0+127)
  3441  0029  0012               	moviw fsr0++
  3442  002A  00DF               	movwf	(__pdataBANK3+2)& (0+127)
  3443  002B  0012               	moviw fsr0++
  3444  002C  00E0               	movwf	(__pdataBANK3+3)& (0+127)
  3445  002D  0012               	moviw fsr0++
  3446  002E  00E1               	movwf	(__pdataBANK3+4)& (0+127)
  3447  002F  0012               	moviw fsr0++
  3448  0030  00E2               	movwf	(__pdataBANK3+5)& (0+127)
  3449  0031  0012               	moviw fsr0++
  3450  0032  00E3               	movwf	(__pdataBANK3+6)& (0+127)
  3451  0033  0012               	moviw fsr0++
  3452  0034  00E4               	movwf	(__pdataBANK3+7)& (0+127)
  3453  0035  0012               	moviw fsr0++
  3454  0036  00E5               	movwf	(__pdataBANK3+8)& (0+127)
  3455                           
  3456                           ; Clear objects allocated to BIGRAM
  3457  0037  3071               	movlw	low (0+10097)
  3458  0038  0084               	movwf	4
  3459  0039  3027               	movlw	high (0+10097)
  3460  003A  0085               	movwf	5
  3461  003B  307F               	movlw	127
  3462  003C  00FE               	movwf	btemp
  3463  003D  3000               	movlw	0
  3464  003E  00FF               	movwf	btemp+1
  3465  003F  31B3  2347  3180   	fcall	clear_ram0
  3466                           
  3467                           ; Clear objects allocated to COMMON
  3468  0042  01FC               	clrf	__pbssCOMMON& (0+127)
  3469                           
  3470                           ; Clear objects allocated to BANK1
  3471  0043  0021               	movlb	1	; select bank1
  3472  0044  01EF               	clrf	__pbssBANK1& (0+127)
  3473                           
  3474                           ; Clear objects allocated to BANK2
  3475  0045  3065               	movlw	low __pbssBANK2
  3476  0046  0084               	movwf	4
  3477  0047  3001               	movlw	high __pbssBANK2
  3478  0048  0085               	movwf	5
  3479  0049  300A               	movlw	10
  3480  004A  00FE               	movwf	btemp
  3481  004B  3000               	movlw	0
  3482  004C  00FF               	movwf	btemp+1
  3483  004D  31B3  2347  3180   	fcall	clear_ram0
  3484                           
  3485                           ; Clear objects allocated to BANK3
  3486  0050  30A0               	movlw	low __pbssBANK3
  3487  0051  0084               	movwf	4
  3488  0052  3001               	movlw	high __pbssBANK3
  3489  0053  0085               	movwf	5
  3490  0054  303D               	movlw	61
  3491  0055  00FE               	movwf	btemp
  3492  0056  3000               	movlw	0
  3493  0057  00FF               	movwf	btemp+1
  3494  0058  31B3  2347  3180   	fcall	clear_ram0
  3495                           
  3496                           ; Clear objects allocated to BANK4
  3497  005B  3020               	movlw	low __pbssBANK4
  3498  005C  0084               	movwf	4
  3499  005D  3002               	movlw	high __pbssBANK4
  3500  005E  0085               	movwf	5
  3501  005F  3020               	movlw	32
  3502  0060  00FE               	movwf	btemp
  3503  0061  3000               	movlw	0
  3504  0062  00FF               	movwf	btemp+1
  3505  0063  31B3  2347         	fcall	clear_ram0
  3506  0065                     end_of_initialization:	
  3507                           ;End of C runtime variable initialization code
  3508                           
  3509  0065                     __end_of__initialization:	
  3510  0065  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3511  0066  0020               	movlb	0
  3512  0067  31B5  2DBA         	ljmp	_main	;jump to C main() function
  3513                           
  3514                           	psect	bssCOMMON
  3515  007C                     __pbssCOMMON:	
  3516  007C                     _toggleColor:	
  3517  007C                     	ds	1
  3518                           
  3519                           	psect	bssBANK1
  3520  00EF                     __pbssBANK1:	
  3521  00EF                     _protect1:	
  3522  00EF                     	ds	1
  3523                           
  3524                           	psect	bssBANK2
  3525  0165                     __pbssBANK2:	
  3526  0165                     _width:	
  3527  0165                     	ds	2
  3528  0167                     _prec:	
  3529  0167                     	ds	2
  3530  0169                     _flags:	
  3531  0169                     	ds	2
  3532  016B                     _adcOffset:	
  3533  016B                     	ds	2
  3534  016D                     _adcGain:	
  3535  016D                     	ds	2
  3536                           
  3537                           	psect	bssBANK3
  3538  01A0                     __pbssBANK3:	
  3539  01A0                     _cellSOC:	
  3540  01A0                     	ds	10
  3541  01AA                     _cellVoltages:	
  3542  01AA                     	ds	10
  3543  01B4                     logf@F469:	
  3544  01B4                     	ds	4
  3545  01B8                     _shuntResistorValue_mOhm:	
  3546  01B8                     	ds	4
  3547  01BC                     _temperatureThermistor:	
  3548  01BC                     	ds	4
  3549  01C0                     _batCurrent:	
  3550  01C0                     	ds	4
  3551  01C4                     _batVoltage:	
  3552  01C4                     	ds	4
  3553  01C8                     _errno:	
  3554  01C8                     	ds	2
  3555  01CA                     _nout:	
  3556  01CA                     	ds	2
  3557  01CC                     _minCellVoltage:	
  3558  01CC                     	ds	2
  3559  01CE                     _maxCellVoltage:	
  3560  01CE                     	ds	2
  3561  01D0                     _maxCellTempDischarge:	
  3562  01D0                     	ds	2
  3563  01D2                     _maxCellTempCharge:	
  3564  01D2                     	ds	2
  3565  01D4                     _minCellTempDischarge:	
  3566  01D4                     	ds	2
  3567  01D6                     _minCellTempCharge:	
  3568  01D6                     	ds	2
  3569  01D8                     myIsr@count:	
  3570  01D8                     	ds	1
  3571  01D9                     _tmr1_flag:	
  3572  01D9                     	ds	1
  3573  01DA                     _protect3:	
  3574  01DA                     	ds	1
  3575  01DB                     _protect2:	
  3576  01DB                     	ds	1
  3577  01DC                     _currState:	
  3578  01DC                     	ds	1
  3579                           
  3580                           	psect	dataBANK3
  3581  01DD                     __pdataBANK3:	
  3582  01DD                     stoa@F1152:	
  3583  01DD                     	ds	7
  3584  01E4                     _thermistorBetaValue:	
  3585  01E4                     	ds	2
  3586                           
  3587                           	psect	bssBANK4
  3588  0220                     __pbssBANK4:	
  3589  0220                     _dbuf:	
  3590  0220                     	ds	32
  3591                           
  3592                           	psect	clrtext
  3593  3347                     clear_ram0:	
  3594                           ;	Called with FSR0 containing the base address, and
  3595                           ;	btemp/btemp+1 has the size to clear
  3596                           
  3597  3347  0064               	clrwdt	;clear the watchdog before getting into this loop
  3598  3348                     clrloop0:	
  3599  3348  0180               	clrf	0	;clear RAM location pointed to by FSR
  3600  3349  3101               	addfsr 0,1
  3601  334A  3001               	movlw	1
  3602  334B  02FE               	subwf	126,f
  3603  334C  3000               	movlw	0
  3604  334D  3BFF               	subwfb	127,f
  3605  334E  087F               	movf	127,w
  3606  334F  047E               	iorwf	126,w
  3607  3350  1903               	btfsc	3,2
  3608  3351  3400               	retlw	0	;all done for this memory range, return
  3609  3352  2B48               	goto	clrloop0	;have we reached the end yet?
  3610                           
  3611                           	psect	cstackBANK3
  3612  01E6                     __pcstackBANK3:	
  3613  01E6                     ??_main:	
  3614                           
  3615                           ; 1 bytes @ 0x0
  3616  01E6                     	ds	2
  3617                           
  3618                           	psect	cstackBANK2
  3619  0120                     __pcstackBANK2:	
  3620  0120                     logf@R:	
  3621                           
  3622                           ; 4 bytes @ 0x0
  3623  0120                     	ds	4
  3624  0124                     logf@t1:	
  3625                           
  3626                           ; 4 bytes @ 0x4
  3627  0124                     	ds	4
  3628  0128                     logf@t2:	
  3629                           
  3630                           ; 4 bytes @ 0x8
  3631  0128                     	ds	4
  3632  012C                     _logf$2091:	
  3633                           
  3634                           ; 4 bytes @ 0xC
  3635  012C                     	ds	4
  3636  0130                     _logf$2092:	
  3637                           
  3638                           ; 4 bytes @ 0x10
  3639  0130                     	ds	4
  3640  0134                     _logf$2093:	
  3641                           
  3642                           ; 4 bytes @ 0x14
  3643  0134                     	ds	4
  3644  0138                     _logf$2094:	
  3645                           
  3646                           ; 4 bytes @ 0x18
  3647  0138                     	ds	4
  3648  013C                     logf@k:	
  3649                           
  3650                           ; 2 bytes @ 0x1C
  3651  013C                     	ds	2
  3652  013E                     logf@hfsq:	
  3653                           
  3654                           ; 4 bytes @ 0x1E
  3655  013E                     	ds	4
  3656  0142                     logf@dk:	
  3657                           
  3658                           ; 4 bytes @ 0x22
  3659  0142                     	ds	4
  3660  0146                     logf@s:	
  3661                           
  3662                           ; 4 bytes @ 0x26
  3663  0146                     	ds	4
  3664  014A                     logf@z:	
  3665                           
  3666                           ; 4 bytes @ 0x2A
  3667  014A                     	ds	4
  3668  014E                     logf@w:	
  3669                           
  3670                           ; 4 bytes @ 0x2E
  3671  014E                     	ds	4
  3672  0152                     _logf$2090:	
  3673                           
  3674                           ; 4 bytes @ 0x32
  3675  0152                     	ds	4
  3676  0156                     logf@u:	
  3677                           
  3678                           ; 4 bytes @ 0x36
  3679  0156                     	ds	4
  3680  015A                     logf@f:	
  3681                           
  3682                           ; 4 bytes @ 0x3A
  3683  015A                     	ds	4
  3684  015E                     logf@ix:	
  3685                           
  3686                           ; 4 bytes @ 0x3E
  3687  015E                     	ds	4
  3688  0162                     ??_statemachine:	
  3689                           
  3690                           ; 1 bytes @ 0x42
  3691  0162                     	ds	2
  3692  0164                     statemachine@success:	
  3693                           
  3694                           ; 1 bytes @ 0x44
  3695  0164                     	ds	1
  3696                           
  3697                           	psect	cstackBANK1
  3698  00A0                     __pcstackBANK1:	
  3699  00A0                     ?___flsub:	
  3700  00A0                     vfpfcnvrt@cp:	
  3701                           ; 4 bytes @ 0x0
  3702                           
  3703  00A0                     setShortCircuitProtection@scaler:	
  3704                           ; 2 bytes @ 0x0
  3705                           
  3706  00A0                     setOverCurrentDischargeProtection@scaler:	
  3707                           ; 4 bytes @ 0x0
  3708                           
  3709  00A0                     ___flsub@a:	
  3710                           ; 4 bytes @ 0x0
  3711                           
  3712                           
  3713                           ; 4 bytes @ 0x0
  3714  00A0                     	ds	2
  3715  00A2                     vfpfcnvrt@done:	
  3716                           
  3717                           ; 2 bytes @ 0x2
  3718  00A2                     	ds	2
  3719  00A4                     _vfpfcnvrt$1300:	
  3720  00A4                     ___flsub@b:	
  3721                           ; 2 bytes @ 0x4
  3722                           
  3723  00A4                     _setShortCircuitProtection$2076:	
  3724                           ; 4 bytes @ 0x4
  3725                           
  3726  00A4                     _setOverCurrentDischargeProtection$2077:	
  3727                           ; 4 bytes @ 0x4
  3728                           
  3729                           
  3730                           ; 4 bytes @ 0x4
  3731  00A4                     	ds	2
  3732  00A6                     _vfpfcnvrt$1301:	
  3733                           
  3734                           ; 2 bytes @ 0x6
  3735  00A6                     	ds	2
  3736  00A8                     ?_logf:	
  3737  00A8                     ?___fltol:	
  3738                           ; 4 bytes @ 0x8
  3739                           
  3740  00A8                     setShortCircuitProtection@i:	
  3741                           ; 4 bytes @ 0x8
  3742                           
  3743  00A8                     setOverCurrentDischargeProtection@i:	
  3744                           ; 2 bytes @ 0x8
  3745                           
  3746  00A8                     ___fltol@f1:	
  3747                           ; 2 bytes @ 0x8
  3748                           
  3749  00A8                     logf@x:	
  3750                           ; 4 bytes @ 0x8
  3751                           
  3752  00A8                     vfpfcnvrt@ll:	
  3753                           ; 4 bytes @ 0x8
  3754                           
  3755                           
  3756                           ; 8 bytes @ 0x8
  3757  00A8                     	ds	2
  3758  00AA                     setShortCircuitProtection@i_966:	
  3759  00AA                     setOverCurrentDischargeProtection@i_975:	
  3760                           ; 2 bytes @ 0xA
  3761                           
  3762                           
  3763                           ; 2 bytes @ 0xA
  3764  00AA                     	ds	2
  3765  00AC                     ??_logf:	
  3766  00AC                     ??___fltol:	
  3767                           ; 1 bytes @ 0xC
  3768                           
  3769                           
  3770                           ; 1 bytes @ 0xC
  3771  00AC                     	ds	4
  3772  00B0                     vfpfcnvrt@vp:	
  3773                           
  3774                           ; 2 bytes @ 0x10
  3775  00B0                     	ds	1
  3776  00B1                     ??_updateVoltages:	
  3777  00B1                     ??_updateCurrent:	
  3778                           ; 1 bytes @ 0x11
  3779                           
  3780                           
  3781                           ; 1 bytes @ 0x11
  3782  00B1                     	ds	1
  3783  00B2                     vfpfcnvrt@c:	
  3784                           
  3785                           ; 1 bytes @ 0x12
  3786  00B2                     	ds	1
  3787  00B3                     vfpfcnvrt@llu:	
  3788                           
  3789                           ; 8 bytes @ 0x13
  3790  00B3                     	ds	1
  3791  00B4                     ??_updateTemperatures:	
  3792  00B4                     _updateVoltages$2078:	
  3793                           ; 1 bytes @ 0x14
  3794                           
  3795                           
  3796                           ; 4 bytes @ 0x14
  3797  00B4                     	ds	1
  3798  00B5                     updateCurrent@adcVal:	
  3799                           
  3800                           ; 2 bytes @ 0x15
  3801  00B5                     	ds	2
  3802  00B7                     _updateTemperatures$2079:	
  3803                           
  3804                           ; 4 bytes @ 0x17
  3805  00B7                     	ds	1
  3806  00B8                     updateVoltages@adcVal:	
  3807                           
  3808                           ; 4 bytes @ 0x18
  3809  00B8                     	ds	3
  3810  00BB                     ?_vsnprintf:	
  3811  00BB                     vsnprintf@s:	
  3812                           ; 2 bytes @ 0x1B
  3813                           
  3814  00BB                     _updateTemperatures$2080:	
  3815                           ; 2 bytes @ 0x1B
  3816                           
  3817                           
  3818                           ; 4 bytes @ 0x1B
  3819  00BB                     	ds	2
  3820  00BD                     vsnprintf@n:	
  3821                           
  3822                           ; 2 bytes @ 0x1D
  3823  00BD                     	ds	2
  3824  00BF                     vsnprintf@fmt:	
  3825  00BF                     _updateTemperatures$2081:	
  3826                           ; 2 bytes @ 0x1F
  3827                           
  3828                           
  3829                           ; 4 bytes @ 0x1F
  3830  00BF                     	ds	2
  3831  00C1                     vsnprintf@ap:	
  3832                           
  3833                           ; 1 bytes @ 0x21
  3834  00C1                     	ds	1
  3835  00C2                     _vsnprintf$1872:	
  3836                           
  3837                           ; 2 bytes @ 0x22
  3838  00C2                     	ds	1
  3839  00C3                     _updateTemperatures$2082:	
  3840                           
  3841                           ; 4 bytes @ 0x23
  3842  00C3                     	ds	1
  3843  00C4                     vsnprintf@cnt:	
  3844                           
  3845                           ; 2 bytes @ 0x24
  3846  00C4                     	ds	2
  3847  00C6                     vsnprintf@f:	
  3848                           
  3849                           ; 6 bytes @ 0x26
  3850  00C6                     	ds	1
  3851  00C7                     _updateTemperatures$2083:	
  3852                           
  3853                           ; 4 bytes @ 0x27
  3854  00C7                     	ds	4
  3855  00CB                     _updateTemperatures$2084:	
  3856                           
  3857                           ; 4 bytes @ 0x2B
  3858  00CB                     	ds	1
  3859  00CC                     ?_snprintf:	
  3860  00CC                     snprintf@s:	
  3861                           ; 2 bytes @ 0x2C
  3862                           
  3863                           
  3864                           ; 2 bytes @ 0x2C
  3865  00CC                     	ds	2
  3866  00CE                     snprintf@n:	
  3867                           
  3868                           ; 2 bytes @ 0x2E
  3869  00CE                     	ds	1
  3870  00CF                     _updateTemperatures$2085:	
  3871                           
  3872                           ; 4 bytes @ 0x2F
  3873  00CF                     	ds	1
  3874  00D0                     snprintf@fmt:	
  3875                           
  3876                           ; 2 bytes @ 0x30
  3877  00D0                     	ds	3
  3878  00D3                     _updateTemperatures$2086:	
  3879                           
  3880                           ; 4 bytes @ 0x33
  3881  00D3                     	ds	4
  3882  00D7                     _updateTemperatures$2087:	
  3883                           
  3884                           ; 4 bytes @ 0x37
  3885  00D7                     	ds	4
  3886  00DB                     _updateTemperatures$2088:	
  3887                           
  3888                           ; 4 bytes @ 0x3B
  3889  00DB                     	ds	4
  3890  00DF                     _updateTemperatures$2089:	
  3891                           
  3892                           ; 4 bytes @ 0x3F
  3893  00DF                     	ds	4
  3894  00E3                     updateTemperatures@tmp:	
  3895                           
  3896                           ; 4 bytes @ 0x43
  3897  00E3                     	ds	4
  3898  00E7                     updateTemperatures@adcVal:	
  3899                           
  3900                           ; 2 bytes @ 0x47
  3901  00E7                     	ds	2
  3902  00E9                     updateTemperatures@vtsx:	
  3903                           
  3904                           ; 2 bytes @ 0x49
  3905  00E9                     	ds	2
  3906  00EB                     updateTemperatures@rts:	
  3907                           
  3908                           ; 4 bytes @ 0x4B
  3909  00EB                     	ds	4
  3910                           
  3911                           	psect	cstackCOMMON
  3912  0070                     __pcstackCOMMON:	
  3913  0070                     ?_initClock:	
  3914  0070                     ?_init_GPIO:	
  3915                           ; 1 bytes @ 0x0
  3916                           
  3917  0070                     ?_initWDT:	
  3918                           ; 1 bytes @ 0x0
  3919                           
  3920  0070                     ?_init_I2C:	
  3921                           ; 1 bytes @ 0x0
  3922                           
  3923  0070                     ?_init_TMR1:	
  3924                           ; 1 bytes @ 0x0
  3925                           
  3926  0070                     ?_init_RGB:	
  3927                           ; 1 bytes @ 0x0
  3928                           
  3929  0070                     ?_watchdog_timeout_shutdown:	
  3930                           ; 1 bytes @ 0x0
  3931                           
  3932  0070                     ?_statemachine:	
  3933                           ; 1 bytes @ 0x0
  3934                           
  3935  0070                     ?_RGB_AWAIT_AFE_CONN:	
  3936                           ; 1 bytes @ 0x0
  3937                           
  3938  0070                     ?_init_AFE:	
  3939                           ; 1 bytes @ 0x0
  3940                           
  3941  0070                     ?_AFE_UPDATE:	
  3942                           ; 1 bytes @ 0x0
  3943                           
  3944  0070                     ?_printcellParameters:	
  3945                           ; 1 bytes @ 0x0
  3946                           
  3947  0070                     ?_internal_16:	
  3948                           ; 1 bytes @ 0x0
  3949                           
  3950  0070                     ?_updateVoltages:	
  3951                           ; 1 bytes @ 0x0
  3952                           
  3953  0070                     ?_calibrate_BATTSOC:	
  3954                           ; 1 bytes @ 0x0
  3955                           
  3956  0070                     ?_updateCurrent:	
  3957                           ; 1 bytes @ 0x0
  3958                           
  3959  0070                     ?_updateTemperatures:	
  3960                           ; 1 bytes @ 0x0
  3961                           
  3962  0070                     ?_putch:	
  3963                           ; 1 bytes @ 0x0
  3964                           
  3965  0070                     ?_myIsr:	
  3966                           ; 1 bytes @ 0x0
  3967                           
  3968  0070                     ??_myIsr:	
  3969                           ; 1 bytes @ 0x0
  3970                           
  3971  0070                     ?_main:	
  3972                           ; 1 bytes @ 0x0
  3973                           
  3974  0070                     ?_EUSART_Write:	
  3975                           ; 1 bytes @ 0x0
  3976                           
  3977  0070                     ?_send_I2C_startBit:	
  3978                           ; 1 bytes @ 0x0
  3979                           
  3980  0070                     ?_send_I2C_stopBit:	
  3981                           ; 1 bytes @ 0x0
  3982                           
  3983  0070                     ?_send_I2C_NACK:	
  3984                           ; 1 bytes @ 0x0
  3985                           
  3986  0070                     putch@c:	
  3987                           ; 1 bytes @ 0x0
  3988                           
  3989                           
  3990                           ; 1 bytes @ 0x0
  3991  0070                     	ds	1
  3992  0071                     ??_initClock:	
  3993  0071                     ??_init_GPIO:	
  3994                           ; 1 bytes @ 0x1
  3995                           
  3996  0071                     ??_initWDT:	
  3997                           ; 1 bytes @ 0x1
  3998                           
  3999  0071                     ??_init_I2C:	
  4000                           ; 1 bytes @ 0x1
  4001                           
  4002  0071                     ??_init_TMR1:	
  4003                           ; 1 bytes @ 0x1
  4004                           
  4005  0071                     ??_init_RGB:	
  4006                           ; 1 bytes @ 0x1
  4007                           
  4008  0071                     ?_RGB_color:	
  4009                           ; 1 bytes @ 0x1
  4010                           
  4011  0071                     ??_internal_16:	
  4012                           ; 1 bytes @ 0x1
  4013                           
  4014  0071                     ?_setShuntResistorValue:	
  4015                           ; 1 bytes @ 0x1
  4016                           
  4017  0071                     ??_calibrate_BATTSOC:	
  4018                           ; 1 bytes @ 0x1
  4019                           
  4020  0071                     ??_putch:	
  4021                           ; 1 bytes @ 0x1
  4022                           
  4023  0071                     ??_EUSART_Write:	
  4024                           ; 1 bytes @ 0x1
  4025                           
  4026  0071                     ?_send_I2C_data:	
  4027                           ; 1 bytes @ 0x1
  4028                           
  4029  0071                     ?_send_I2C_controlByte:	
  4030                           ; 1 bytes @ 0x1
  4031                           
  4032  0071                     ??_send_I2C_startBit:	
  4033                           ; 1 bytes @ 0x1
  4034                           
  4035  0071                     ??_send_I2C_stopBit:	
  4036                           ; 1 bytes @ 0x1
  4037                           
  4038  0071                     ??_send_I2C_NACK:	
  4039                           ; 1 bytes @ 0x1
  4040                           
  4041  0071                     ??___aodiv:	
  4042                           ; 1 bytes @ 0x1
  4043                           
  4044  0071                     ??___aomod:	
  4045                           ; 1 bytes @ 0x1
  4046                           
  4047  0071                     ??___lodiv:	
  4048                           ; 1 bytes @ 0x1
  4049                           
  4050  0071                     ??___lomod:	
  4051                           ; 1 bytes @ 0x1
  4052                           
  4053  0071                     ?_fputc:	
  4054                           ; 1 bytes @ 0x1
  4055                           
  4056  0071                     ?_strlen:	
  4057                           ; 2 bytes @ 0x1
  4058                           
  4059  0071                     ?_isupper:	
  4060                           ; 2 bytes @ 0x1
  4061                           
  4062  0071                     ?_isalpha:	
  4063                           ; 2 bytes @ 0x1
  4064                           
  4065  0071                     ?_isdigit:	
  4066                           ; 2 bytes @ 0x1
  4067                           
  4068  0071                     ?_strncmp:	
  4069                           ; 2 bytes @ 0x1
  4070                           
  4071  0071                     ?__Umul8_16:	
  4072                           ; 2 bytes @ 0x1
  4073                           
  4074  0071                     ?_isspace:	
  4075                           ; 2 bytes @ 0x1
  4076                           
  4077  0071                     ?_islower:	
  4078                           ; 2 bytes @ 0x1
  4079                           
  4080  0071                     ?_read_I2C_data:	
  4081                           ; 2 bytes @ 0x1
  4082                           
  4083  0071                     ?___wmul:	
  4084                           ; 2 bytes @ 0x1
  4085                           
  4086  0071                     ?___lmul:	
  4087                           ; 2 bytes @ 0x1
  4088                           
  4089  0071                     ?___xxtofl:	
  4090                           ; 4 bytes @ 0x1
  4091                           
  4092  0071                     EUSART_Write@txData:	
  4093                           ; 4 bytes @ 0x1
  4094                           
  4095  0071                     __Umul8_16@multiplicand:	
  4096                           ; 1 bytes @ 0x1
  4097                           
  4098  0071                     send_I2C_data@databyte:	
  4099                           ; 1 bytes @ 0x1
  4100                           
  4101  0071                     send_I2C_controlByte@BlockAddress:	
  4102                           ; 2 bytes @ 0x1
  4103                           
  4104  0071                     RGB_color@color:	
  4105                           ; 2 bytes @ 0x1
  4106                           
  4107  0071                     ___wmul@multiplier:	
  4108                           ; 2 bytes @ 0x1
  4109                           
  4110  0071                     isalpha@c:	
  4111                           ; 2 bytes @ 0x1
  4112                           
  4113  0071                     isdigit@c:	
  4114                           ; 2 bytes @ 0x1
  4115                           
  4116  0071                     isspace@c:	
  4117                           ; 2 bytes @ 0x1
  4118                           
  4119  0071                     isupper@c:	
  4120                           ; 2 bytes @ 0x1
  4121                           
  4122  0071                     fputc@c:	
  4123                           ; 2 bytes @ 0x1
  4124                           
  4125  0071                     strlen@s:	
  4126                           ; 2 bytes @ 0x1
  4127                           
  4128  0071                     strncmp@_l:	
  4129                           ; 2 bytes @ 0x1
  4130                           
  4131  0071                     islower@c:	
  4132                           ; 2 bytes @ 0x1
  4133                           
  4134  0071                     setShuntResistorValue@res_mOhm:	
  4135                           ; 2 bytes @ 0x1
  4136                           
  4137  0071                     ___lmul@multiplier:	
  4138                           ; 4 bytes @ 0x1
  4139                           
  4140  0071                     ___xxtofl@val:	
  4141                           ; 4 bytes @ 0x1
  4142                           
  4143                           
  4144                           ; 4 bytes @ 0x1
  4145  0071                     	ds	1
  4146  0072                     ?_EUSART_Write_Text:	
  4147  0072                     ___aodiv@counter:	
  4148                           ; 1 bytes @ 0x2
  4149                           
  4150  0072                     ___aomod@counter:	
  4151                           ; 1 bytes @ 0x2
  4152                           
  4153  0072                     ___lomod@counter:	
  4154                           ; 1 bytes @ 0x2
  4155                           
  4156  0072                     EUSART_Write_Text@text:	
  4157                           ; 1 bytes @ 0x2
  4158                           
  4159  0072                     ___lodiv@quotient:	
  4160                           ; 2 bytes @ 0x2
  4161                           
  4162                           
  4163                           ; 8 bytes @ 0x2
  4164  0072                     	ds	1
  4165  0073                     ??_watchdog_timeout_shutdown:	
  4166  0073                     ??_RGB_AWAIT_AFE_CONN:	
  4167                           ; 1 bytes @ 0x3
  4168                           
  4169  0073                     ??_RGB_color:	
  4170                           ; 1 bytes @ 0x3
  4171                           
  4172  0073                     ??_strlen:	
  4173                           ; 1 bytes @ 0x3
  4174                           
  4175  0073                     ??_isupper:	
  4176                           ; 1 bytes @ 0x3
  4177                           
  4178  0073                     ??_isalpha:	
  4179                           ; 1 bytes @ 0x3
  4180                           
  4181  0073                     ??_isdigit:	
  4182                           ; 1 bytes @ 0x3
  4183                           
  4184  0073                     ??__Umul8_16:	
  4185                           ; 1 bytes @ 0x3
  4186                           
  4187  0073                     ??_isspace:	
  4188                           ; 1 bytes @ 0x3
  4189                           
  4190  0073                     ??_islower:	
  4191                           ; 1 bytes @ 0x3
  4192                           
  4193  0073                     ??_send_I2C_data:	
  4194                           ; 1 bytes @ 0x3
  4195                           
  4196  0073                     ??_read_I2C_data:	
  4197                           ; 1 bytes @ 0x3
  4198                           
  4199  0073                     ___aodiv@sign:	
  4200                           ; 1 bytes @ 0x3
  4201                           
  4202  0073                     ___aomod@sign:	
  4203                           ; 1 bytes @ 0x3
  4204                           
  4205  0073                     send_I2C_controlByte@RW_bit:	
  4206                           ; 1 bytes @ 0x3
  4207                           
  4208  0073                     ___wmul@multiplicand:	
  4209                           ; 2 bytes @ 0x3
  4210                           
  4211  0073                     fputc@fp:	
  4212                           ; 2 bytes @ 0x3
  4213                           
  4214  0073                     strlen@a:	
  4215                           ; 2 bytes @ 0x3
  4216                           
  4217  0073                     strncmp@_r:	
  4218                           ; 2 bytes @ 0x3
  4219                           
  4220                           
  4221                           ; 2 bytes @ 0x3
  4222  0073                     	ds	1
  4223  0074                     ??_EUSART_Write_Text:	
  4224  0074                     ?_abs:	
  4225                           ; 1 bytes @ 0x4
  4226                           
  4227  0074                     abs@a:	
  4228                           ; 2 bytes @ 0x4
  4229                           
  4230  0074                     ___aodiv@quotient:	
  4231                           ; 2 bytes @ 0x4
  4232                           
  4233                           
  4234                           ; 8 bytes @ 0x4
  4235  0074                     	ds	1
  4236  0075                     ??_setShuntResistorValue:	
  4237  0075                     ??_fputc:	
  4238                           ; 1 bytes @ 0x5
  4239                           
  4240  0075                     ??_send_I2C_controlByte:	
  4241                           ; 1 bytes @ 0x5
  4242                           
  4243  0075                     ?_I2C_writeRegister:	
  4244                           ; 1 bytes @ 0x5
  4245                           
  4246  0075                     ??___wmul:	
  4247                           ; 1 bytes @ 0x5
  4248                           
  4249  0075                     ??___xxtofl:	
  4250                           ; 1 bytes @ 0x5
  4251                           
  4252  0075                     ?_readRegister:	
  4253                           ; 1 bytes @ 0x5
  4254                           
  4255  0075                     _isspace$1727:	
  4256                           ; 2 bytes @ 0x5
  4257                           
  4258  0075                     EUSART_Write_Text@i:	
  4259                           ; 1 bytes @ 0x5
  4260                           
  4261  0075                     I2C_writeRegister@slaveAddress:	
  4262                           ; 2 bytes @ 0x5
  4263                           
  4264  0075                     readRegister@slaveAddress:	
  4265                           ; 2 bytes @ 0x5
  4266                           
  4267  0075                     ___wmul@product:	
  4268                           ; 2 bytes @ 0x5
  4269                           
  4270  0075                     strncmp@n:	
  4271                           ; 2 bytes @ 0x5
  4272                           
  4273  0075                     __Umul8_16@product:	
  4274                           ; 2 bytes @ 0x5
  4275                           
  4276  0075                     ___lmul@multiplicand:	
  4277                           ; 2 bytes @ 0x5
  4278                           
  4279                           
  4280                           ; 4 bytes @ 0x5
  4281  0075                     	ds	1
  4282  0076                     ??_abs:	
  4283  0076                     calibrate_BATTSOC@i:	
  4284                           ; 1 bytes @ 0x6
  4285                           
  4286                           
  4287                           ; 2 bytes @ 0x6
  4288  0076                     	ds	1
  4289  0077                     ??_setTemperatureLimitsint:	
  4290  0077                     ??_strncmp:	
  4291                           ; 1 bytes @ 0x7
  4292                           
  4293  0077                     ?_toupper:	
  4294                           ; 1 bytes @ 0x7
  4295                           
  4296  0077                     ?_atoi:	
  4297                           ; 2 bytes @ 0x7
  4298                           
  4299  0077                     I2C_writeRegister@regAddress:	
  4300                           ; 2 bytes @ 0x7
  4301                           
  4302  0077                     readRegister@regAddress:	
  4303                           ; 2 bytes @ 0x7
  4304                           
  4305  0077                     atoi@s:	
  4306                           ; 2 bytes @ 0x7
  4307                           
  4308  0077                     toupper@c:	
  4309                           ; 2 bytes @ 0x7
  4310                           
  4311  0077                     __Umul8_16@word_mpld:	
  4312                           ; 2 bytes @ 0x7
  4313                           
  4314                           
  4315                           ; 2 bytes @ 0x7
  4316  0077                     	ds	1
  4317  0078                     calibrate_BATTSOC@j:	
  4318  0078                     strncmp@l:	
  4319                           ; 2 bytes @ 0x8
  4320                           
  4321                           
  4322                           ; 2 bytes @ 0x8
  4323  0078                     	ds	1
  4324  0079                     ??_readRegister:	
  4325  0079                     ??___lmul:	
  4326                           ; 1 bytes @ 0x9
  4327                           
  4328  0079                     ??___aldiv:	
  4329                           ; 1 bytes @ 0x9
  4330                           
  4331  0079                     __Umul8_16@multiplier:	
  4332                           ; 1 bytes @ 0x9
  4333                           
  4334  0079                     I2C_writeRegister@data:	
  4335                           ; 1 bytes @ 0x9
  4336                           
  4337  0079                     readRegister@recievedData:	
  4338                           ; 2 bytes @ 0x9
  4339                           
  4340  0079                     _toupper$1835:	
  4341                           ; 2 bytes @ 0x9
  4342                           
  4343                           
  4344                           ; 2 bytes @ 0x9
  4345  0079                     	ds	1
  4346  007A                     ??_stoa:	
  4347  007A                     ??___flneg:	
  4348                           ; 1 bytes @ 0xA
  4349                           
  4350  007A                     ??___flsub:	
  4351                           ; 1 bytes @ 0xA
  4352                           
  4353  007A                     ?_fputs:	
  4354                           ; 1 bytes @ 0xA
  4355                           
  4356  007A                     ___fltol@sign1:	
  4357                           ; 2 bytes @ 0xA
  4358                           
  4359  007A                     ___lodiv@counter:	
  4360                           ; 1 bytes @ 0xA
  4361                           
  4362  007A                     EUSART_Initialize@x:	
  4363                           ; 1 bytes @ 0xA
  4364                           
  4365  007A                     fputs@fp:	
  4366                           ; 2 bytes @ 0xA
  4367                           
  4368  007A                     strncmp@r:	
  4369                           ; 2 bytes @ 0xA
  4370                           
  4371                           
  4372                           ; 2 bytes @ 0xA
  4373  007A                     	ds	1
  4374  007B                     ??_init_AFE:	
  4375  007B                     ??_I2C_writeRegister:	
  4376                           ; 1 bytes @ 0xB
  4377                           
  4378  007B                     enableDischarging@sys_ctrl2:	
  4379                           ; 1 bytes @ 0xB
  4380                           
  4381  007B                     enableCharging@sys_ctrl2:	
  4382                           ; 1 bytes @ 0xB
  4383                           
  4384  007B                     ___fltol@exp1:	
  4385                           ; 1 bytes @ 0xB
  4386                           
  4387                           
  4388                           ; 1 bytes @ 0xB
  4389  007B                     	ds	1
  4390  007C                     ??_AFE_UPDATE:	
  4391  007C                     ??_printcellParameters:	
  4392                           ; 1 bytes @ 0xC
  4393                           
  4394                           
  4395                           	psect	cstackBANK0
  4396  0020                     __pcstackBANK0:	
  4397                           ; 1 bytes @ 0xC
  4398                           
  4399  0020                     ?_setTemperatureLimitsint:	
  4400  0020                     ?_enableDischarging:	
  4401                           ; 1 bytes @ 0x0
  4402                           
  4403  0020                     ?_enableCharging:	
  4404                           ; 1 bytes @ 0x0
  4405                           
  4406  0020                     ??_fputs:	
  4407                           ; 1 bytes @ 0x0
  4408                           
  4409  0020                     ??_toupper:	
  4410                           ; 1 bytes @ 0x0
  4411                           
  4412  0020                     ??_atoi:	
  4413                           ; 1 bytes @ 0x0
  4414                           
  4415  0020                     ?_beginAFEcommunication:	
  4416                           ; 1 bytes @ 0x0
  4417                           
  4418  0020                     ?_stoa:	
  4419                           ; 2 bytes @ 0x0
  4420                           
  4421  0020                     ?___aodiv:	
  4422                           ; 2 bytes @ 0x0
  4423                           
  4424  0020                     ?___aomod:	
  4425                           ; 8 bytes @ 0x0
  4426                           
  4427  0020                     ?___lodiv:	
  4428                           ; 8 bytes @ 0x0
  4429                           
  4430  0020                     ?___lomod:	
  4431                           ; 8 bytes @ 0x0
  4432                           
  4433  0020                     ___xxtofl@sign:	
  4434                           ; 8 bytes @ 0x0
  4435                           
  4436  0020                     setTemperatureLimitsint@minDischarge_degC:	
  4437                           ; 1 bytes @ 0x0
  4438                           
  4439  0020                     enableDischarging@enable:	
  4440                           ; 2 bytes @ 0x0
  4441                           
  4442  0020                     enableCharging@enable:	
  4443                           ; 2 bytes @ 0x0
  4444                           
  4445  0020                     stoa@fp:	
  4446                           ; 2 bytes @ 0x0
  4447                           
  4448  0020                     ___lmul@product:	
  4449                           ; 2 bytes @ 0x0
  4450                           
  4451  0020                     ___aodiv@divisor:	
  4452                           ; 4 bytes @ 0x0
  4453                           
  4454  0020                     ___aomod@divisor:	
  4455                           ; 8 bytes @ 0x0
  4456                           
  4457  0020                     ___lodiv@divisor:	
  4458                           ; 8 bytes @ 0x0
  4459                           
  4460  0020                     ___lomod@divisor:	
  4461                           ; 8 bytes @ 0x0
  4462                           
  4463                           
  4464                           ; 8 bytes @ 0x0
  4465  0020                     	ds	1
  4466  0021                     ___xxtofl@exp:	
  4467                           
  4468                           ; 1 bytes @ 0x1
  4469  0021                     	ds	1
  4470  0022                     ??_beginAFEcommunication:	
  4471  0022                     ??_enableDischarging:	
  4472                           ; 1 bytes @ 0x2
  4473                           
  4474  0022                     ??_enableCharging:	
  4475                           ; 1 bytes @ 0x2
  4476                           
  4477  0022                     fputs@c:	
  4478                           ; 1 bytes @ 0x2
  4479                           
  4480  0022                     setTemperatureLimitsint@maxDischarge_degC:	
  4481                           ; 1 bytes @ 0x2
  4482                           
  4483  0022                     stoa@s:	
  4484                           ; 2 bytes @ 0x2
  4485                           
  4486  0022                     ___xxtofl@arg:	
  4487                           ; 2 bytes @ 0x2
  4488                           
  4489                           
  4490                           ; 4 bytes @ 0x2
  4491  0022                     	ds	1
  4492  0023                     fputs@i:	
  4493                           
  4494                           ; 2 bytes @ 0x3
  4495  0023                     	ds	1
  4496  0024                     ?___aldiv:	
  4497  0024                     setTemperatureLimitsint@minCharge_degC:	
  4498                           ; 4 bytes @ 0x4
  4499                           
  4500  0024                     atoi@neg:	
  4501                           ; 2 bytes @ 0x4
  4502                           
  4503  0024                     ___aldiv@divisor:	
  4504                           ; 2 bytes @ 0x4
  4505                           
  4506  0024                     stoa@nuls:	
  4507                           ; 4 bytes @ 0x4
  4508                           
  4509                           
  4510                           ; 7 bytes @ 0x4
  4511  0024                     	ds	1
  4512  0025                     fputs@s:	
  4513                           
  4514                           ; 1 bytes @ 0x5
  4515  0025                     	ds	1
  4516  0026                     ?_pad:	
  4517  0026                     ?___flmul:	
  4518                           ; 2 bytes @ 0x6
  4519                           
  4520  0026                     setTemperatureLimitsint@maxCharge_degC:	
  4521                           ; 4 bytes @ 0x6
  4522                           
  4523  0026                     pad@fp:	
  4524                           ; 2 bytes @ 0x6
  4525                           
  4526  0026                     _atoi$1700:	
  4527                           ; 2 bytes @ 0x6
  4528                           
  4529  0026                     ___flmul@b:	
  4530                           ; 2 bytes @ 0x6
  4531                           
  4532                           
  4533                           ; 4 bytes @ 0x6
  4534  0026                     	ds	2
  4535  0028                     pad@buf:	
  4536  0028                     _atoi$1702:	
  4537                           ; 1 bytes @ 0x8
  4538                           
  4539  0028                     ___aldiv@dividend:	
  4540                           ; 2 bytes @ 0x8
  4541                           
  4542  0028                     ___aodiv@dividend:	
  4543                           ; 4 bytes @ 0x8
  4544                           
  4545  0028                     ___aomod@dividend:	
  4546                           ; 8 bytes @ 0x8
  4547                           
  4548  0028                     ___lodiv@dividend:	
  4549                           ; 8 bytes @ 0x8
  4550                           
  4551  0028                     ___lomod@dividend:	
  4552                           ; 8 bytes @ 0x8
  4553                           
  4554                           
  4555                           ; 8 bytes @ 0x8
  4556  0028                     	ds	1
  4557  0029                     pad@p:	
  4558                           
  4559                           ; 2 bytes @ 0x9
  4560  0029                     	ds	1
  4561  002A                     _atoi$1701:	
  4562  002A                     ___flmul@a:	
  4563                           ; 1 bytes @ 0xA
  4564                           
  4565                           
  4566                           ; 4 bytes @ 0xA
  4567  002A                     	ds	1
  4568  002B                     ??_pad:	
  4569  002B                     beginAFEcommunication@commSuccess:	
  4570                           ; 1 bytes @ 0xB
  4571                           
  4572  002B                     stoa@i:	
  4573                           ; 2 bytes @ 0xB
  4574                           
  4575  002B                     atoi@n:	
  4576                           ; 2 bytes @ 0xB
  4577                           
  4578                           
  4579                           ; 2 bytes @ 0xB
  4580  002B                     	ds	1
  4581  002C                     ___aldiv@counter:	
  4582  002C                     pad@i:	
  4583                           ; 1 bytes @ 0xC
  4584                           
  4585                           
  4586                           ; 2 bytes @ 0xC
  4587  002C                     	ds	1
  4588  002D                     ___aldiv@sign:	
  4589  002D                     beginAFEcommunication@i:	
  4590                           ; 1 bytes @ 0xD
  4591                           
  4592  002D                     stoa@w:	
  4593                           ; 2 bytes @ 0xD
  4594                           
  4595                           
  4596                           ; 2 bytes @ 0xD
  4597  002D                     	ds	1
  4598  002E                     ??___flmul:	
  4599  002E                     pad@w:	
  4600                           ; 1 bytes @ 0xE
  4601                           
  4602  002E                     ___aldiv@quotient:	
  4603                           ; 2 bytes @ 0xE
  4604                           
  4605                           
  4606                           ; 4 bytes @ 0xE
  4607  002E                     	ds	1
  4608  002F                     stoa@cp:	
  4609                           
  4610                           ; 2 bytes @ 0xF
  4611  002F                     	ds	1
  4612  0030                     ?_ctoa:	
  4613  0030                     ?_dtoa:	
  4614                           ; 2 bytes @ 0x10
  4615                           
  4616  0030                     ?_otoa:	
  4617                           ; 2 bytes @ 0x10
  4618                           
  4619  0030                     ?_utoa:	
  4620                           ; 2 bytes @ 0x10
  4621                           
  4622  0030                     ?_xtoa:	
  4623                           ; 2 bytes @ 0x10
  4624                           
  4625  0030                     ctoa@fp:	
  4626                           ; 2 bytes @ 0x10
  4627                           
  4628  0030                     dtoa@fp:	
  4629                           ; 2 bytes @ 0x10
  4630                           
  4631  0030                     otoa@fp:	
  4632                           ; 2 bytes @ 0x10
  4633                           
  4634  0030                     utoa@fp:	
  4635                           ; 2 bytes @ 0x10
  4636                           
  4637  0030                     xtoa@fp:	
  4638                           ; 2 bytes @ 0x10
  4639                           
  4640                           
  4641                           ; 2 bytes @ 0x10
  4642  0030                     	ds	1
  4643  0031                     stoa@p:	
  4644                           
  4645                           ; 2 bytes @ 0x11
  4646  0031                     	ds	1
  4647  0032                     ?_EUSART_Initialize:	
  4648  0032                     ?_setCellUndervoltageProtection:	
  4649                           ; 1 bytes @ 0x12
  4650                           
  4651  0032                     ?_setCellOvervoltageProtection:	
  4652                           ; 1 bytes @ 0x12
  4653                           
  4654  0032                     ctoa@c:	
  4655                           ; 1 bytes @ 0x12
  4656                           
  4657  0032                     setCellUndervoltageProtection@voltage_mV:	
  4658                           ; 1 bytes @ 0x12
  4659                           
  4660  0032                     setCellOvervoltageProtection@voltage_mV:	
  4661                           ; 2 bytes @ 0x12
  4662                           
  4663  0032                     EUSART_Initialize@baudrate:	
  4664                           ; 2 bytes @ 0x12
  4665                           
  4666  0032                     dtoa@d:	
  4667                           ; 4 bytes @ 0x12
  4668                           
  4669  0032                     otoa@d:	
  4670                           ; 8 bytes @ 0x12
  4671                           
  4672  0032                     utoa@d:	
  4673                           ; 8 bytes @ 0x12
  4674                           
  4675  0032                     xtoa@d:	
  4676                           ; 8 bytes @ 0x12
  4677                           
  4678                           
  4679                           ; 8 bytes @ 0x12
  4680  0032                     	ds	1
  4681  0033                     ??_ctoa:	
  4682  0033                     ___flmul@sign:	
  4683                           ; 1 bytes @ 0x13
  4684                           
  4685  0033                     stoa@l:	
  4686                           ; 1 bytes @ 0x13
  4687                           
  4688                           
  4689                           ; 2 bytes @ 0x13
  4690  0033                     	ds	1
  4691  0034                     ___flmul@aexp:	
  4692  0034                     setCellUndervoltageProtection@delay_s:	
  4693                           ; 1 bytes @ 0x14
  4694                           
  4695  0034                     setCellOvervoltageProtection@delay_s:	
  4696                           ; 2 bytes @ 0x14
  4697                           
  4698  0034                     ctoa@w:	
  4699                           ; 2 bytes @ 0x14
  4700                           
  4701                           
  4702                           ; 2 bytes @ 0x14
  4703  0034                     	ds	1
  4704  0035                     ___flmul@grs:	
  4705                           
  4706                           ; 4 bytes @ 0x15
  4707  0035                     	ds	1
  4708  0036                     ??_EUSART_Initialize:	
  4709  0036                     ??_setCellUndervoltageProtection:	
  4710                           ; 1 bytes @ 0x16
  4711                           
  4712  0036                     ??_setCellOvervoltageProtection:	
  4713                           ; 1 bytes @ 0x16
  4714                           
  4715                           
  4716                           ; 1 bytes @ 0x16
  4717  0036                     	ds	3
  4718  0039                     ___flmul@bexp:	
  4719                           
  4720                           ; 1 bytes @ 0x19
  4721  0039                     	ds	1
  4722  003A                     ??_dtoa:	
  4723  003A                     ??_otoa:	
  4724                           ; 1 bytes @ 0x1A
  4725                           
  4726  003A                     ??_utoa:	
  4727                           ; 1 bytes @ 0x1A
  4728                           
  4729  003A                     xtoa@x:	
  4730                           ; 1 bytes @ 0x1A
  4731                           
  4732  003A                     ___flmul@prod:	
  4733                           ; 1 bytes @ 0x1A
  4734                           
  4735                           
  4736                           ; 4 bytes @ 0x1A
  4737  003A                     	ds	1
  4738  003B                     ??_xtoa:	
  4739  003B                     utoa@p:	
  4740                           ; 1 bytes @ 0x1B
  4741                           
  4742                           
  4743                           ; 2 bytes @ 0x1B
  4744  003B                     	ds	2
  4745  003D                     _dtoa$1249:	
  4746  003D                     utoa@w:	
  4747                           ; 2 bytes @ 0x1D
  4748                           
  4749                           
  4750                           ; 2 bytes @ 0x1D
  4751  003D                     	ds	1
  4752  003E                     ___flmul@temp:	
  4753                           
  4754                           ; 2 bytes @ 0x1E
  4755  003E                     	ds	1
  4756  003F                     dtoa@p:	
  4757  003F                     utoa@n:	
  4758                           ; 2 bytes @ 0x1F
  4759                           
  4760                           
  4761                           ; 8 bytes @ 0x1F
  4762  003F                     	ds	1
  4763  0040                     ?___fldiv:	
  4764  0040                     ___fldiv@a:	
  4765                           ; 4 bytes @ 0x20
  4766                           
  4767                           
  4768                           ; 4 bytes @ 0x20
  4769  0040                     	ds	1
  4770  0041                     dtoa@w:	
  4771                           
  4772                           ; 2 bytes @ 0x21
  4773  0041                     	ds	1
  4774  0042                     otoa@p:	
  4775                           
  4776                           ; 2 bytes @ 0x22
  4777  0042                     	ds	1
  4778  0043                     dtoa@s:	
  4779  0043                     _xtoa$1285:	
  4780                           ; 2 bytes @ 0x23
  4781                           
  4782                           
  4783                           ; 2 bytes @ 0x23
  4784  0043                     	ds	1
  4785  0044                     setCellUndervoltageProtection@uv_trip:	
  4786  0044                     setCellOvervoltageProtection@ov_trip:	
  4787                           ; 1 bytes @ 0x24
  4788                           
  4789  0044                     otoa@t:	
  4790                           ; 1 bytes @ 0x24
  4791                           
  4792  0044                     ___fldiv@b:	
  4793                           ; 2 bytes @ 0x24
  4794                           
  4795                           
  4796                           ; 4 bytes @ 0x24
  4797  0044                     	ds	1
  4798  0045                     setCellUndervoltageProtection@i:	
  4799  0045                     setCellOvervoltageProtection@i:	
  4800                           ; 2 bytes @ 0x25
  4801                           
  4802  0045                     _xtoa$1286:	
  4803                           ; 2 bytes @ 0x25
  4804                           
  4805  0045                     dtoa@n:	
  4806                           ; 2 bytes @ 0x25
  4807                           
  4808                           
  4809                           ; 8 bytes @ 0x25
  4810  0045                     	ds	1
  4811  0046                     otoa@w:	
  4812                           
  4813                           ; 2 bytes @ 0x26
  4814  0046                     	ds	1
  4815  0047                     utoa@i:	
  4816  0047                     xtoa@p:	
  4817                           ; 2 bytes @ 0x27
  4818                           
  4819                           
  4820                           ; 2 bytes @ 0x27
  4821  0047                     	ds	1
  4822  0048                     ??___fldiv:	
  4823  0048                     otoa@n:	
  4824                           ; 1 bytes @ 0x28
  4825                           
  4826                           
  4827                           ; 8 bytes @ 0x28
  4828  0048                     	ds	1
  4829  0049                     xtoa@w:	
  4830                           
  4831                           ; 2 bytes @ 0x29
  4832  0049                     	ds	2
  4833  004B                     xtoa@n:	
  4834                           
  4835                           ; 8 bytes @ 0x2B
  4836  004B                     	ds	2
  4837  004D                     dtoa@i:	
  4838  004D                     ___fldiv@rem:	
  4839                           ; 2 bytes @ 0x2D
  4840                           
  4841                           
  4842                           ; 4 bytes @ 0x2D
  4843  004D                     	ds	3
  4844  0050                     otoa@i:	
  4845                           
  4846                           ; 2 bytes @ 0x30
  4847  0050                     	ds	1
  4848  0051                     ___fldiv@sign:	
  4849                           
  4850                           ; 1 bytes @ 0x31
  4851  0051                     	ds	1
  4852  0052                     ___fldiv@new_exp:	
  4853                           
  4854                           ; 2 bytes @ 0x32
  4855  0052                     	ds	1
  4856  0053                     xtoa@i:	
  4857                           
  4858                           ; 2 bytes @ 0x33
  4859  0053                     	ds	1
  4860  0054                     ___fldiv@grs:	
  4861                           
  4862                           ; 4 bytes @ 0x34
  4863  0054                     	ds	1
  4864  0055                     xtoa@c:	
  4865                           
  4866                           ; 2 bytes @ 0x35
  4867  0055                     	ds	2
  4868  0057                     ?_vfpfcnvrt:	
  4869  0057                     vfpfcnvrt@fp:	
  4870                           ; 2 bytes @ 0x37
  4871                           
  4872                           
  4873                           ; 2 bytes @ 0x37
  4874  0057                     	ds	1
  4875  0058                     ___fldiv@bexp:	
  4876                           
  4877                           ; 1 bytes @ 0x38
  4878  0058                     	ds	1
  4879  0059                     vfpfcnvrt@fmt:	
  4880  0059                     ___fldiv@aexp:	
  4881                           ; 1 bytes @ 0x39
  4882                           
  4883                           
  4884                           ; 1 bytes @ 0x39
  4885  0059                     	ds	1
  4886  005A                     ?___flge:	
  4887  005A                     ?___flneg:	
  4888                           ; 1 bit 
  4889                           
  4890  005A                     ?___fladd:	
  4891                           ; 4 bytes @ 0x3A
  4892                           
  4893  005A                     vfpfcnvrt@ap:	
  4894                           ; 4 bytes @ 0x3A
  4895                           
  4896  005A                     ___flge@ff1:	
  4897                           ; 1 bytes @ 0x3A
  4898                           
  4899  005A                     ___flneg@f1:	
  4900                           ; 4 bytes @ 0x3A
  4901                           
  4902  005A                     ___fladd@b:	
  4903                           ; 4 bytes @ 0x3A
  4904                           
  4905                           
  4906                           ; 4 bytes @ 0x3A
  4907  005A                     	ds	1
  4908  005B                     ??_vfpfcnvrt:	
  4909                           
  4910                           ; 1 bytes @ 0x3B
  4911  005B                     	ds	3
  4912  005E                     ___flge@ff2:	
  4913  005E                     ___fladd@a:	
  4914                           ; 4 bytes @ 0x3E
  4915                           
  4916                           
  4917                           ; 4 bytes @ 0x3E
  4918  005E                     	ds	3
  4919  0061                     ?_vfprintf:	
  4920  0061                     vfprintf@fp:	
  4921                           ; 2 bytes @ 0x41
  4922                           
  4923                           
  4924                           ; 2 bytes @ 0x41
  4925  0061                     	ds	1
  4926  0062                     ??___flge:	
  4927  0062                     ??___fladd:	
  4928                           ; 1 bytes @ 0x42
  4929                           
  4930                           
  4931                           ; 1 bytes @ 0x42
  4932  0062                     	ds	1
  4933  0063                     vfprintf@fmt:	
  4934                           
  4935                           ; 2 bytes @ 0x43
  4936  0063                     	ds	2
  4937  0065                     vfprintf@ap:	
  4938                           
  4939                           ; 1 bytes @ 0x45
  4940  0065                     	ds	1
  4941  0066                     ?_setShortCircuitProtection:	
  4942  0066                     ?_setOverCurrentDischargeProtection:	
  4943                           ; 1 bytes @ 0x46
  4944                           
  4945  0066                     ??_vfprintf:	
  4946                           ; 1 bytes @ 0x46
  4947                           
  4948  0066                     setShortCircuitProtection@current_mA:	
  4949                           ; 1 bytes @ 0x46
  4950                           
  4951  0066                     setOverCurrentDischargeProtection@current_mA:	
  4952                           ; 4 bytes @ 0x46
  4953                           
  4954                           
  4955                           ; 4 bytes @ 0x46
  4956  0066                     	ds	2
  4957  0068                     vfprintf@cfmt:	
  4958                           
  4959                           ; 2 bytes @ 0x48
  4960  0068                     	ds	2
  4961  006A                     ??_vsnprintf:	
  4962  006A                     ___fladd@signs:	
  4963                           ; 1 bytes @ 0x4A
  4964                           
  4965  006A                     setShortCircuitProtection@delay_us:	
  4966                           ; 1 bytes @ 0x4A
  4967                           
  4968  006A                     setOverCurrentDischargeProtection@delay_ms:	
  4969                           ; 2 bytes @ 0x4A
  4970                           
  4971                           
  4972                           ; 2 bytes @ 0x4A
  4973  006A                     	ds	1
  4974  006B                     ___fladd@aexp:	
  4975                           
  4976                           ; 1 bytes @ 0x4B
  4977  006B                     	ds	1
  4978  006C                     ??_snprintf:	
  4979  006C                     ??_setShortCircuitProtection:	
  4980                           ; 1 bytes @ 0x4C
  4981                           
  4982  006C                     ??_setOverCurrentDischargeProtection:	
  4983                           ; 1 bytes @ 0x4C
  4984                           
  4985  006C                     ___fladd@bexp:	
  4986                           ; 1 bytes @ 0x4C
  4987                           
  4988                           
  4989                           ; 1 bytes @ 0x4C
  4990  006C                     	ds	1
  4991  006D                     ___fladd@grs:	
  4992                           
  4993                           ; 1 bytes @ 0x4D
  4994  006D                     	ds	2
  4995  006F                     snprintf@ap:	
  4996                           
  4997                           ; 1 bytes @ 0x4F
  4998  006F                     	ds	1
  4999                           
  5000                           	psect	maintext
  5001  35BA                     __pmaintext:	
  5002 ;;
  5003 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  5004 ;;
  5005 ;; *************** function _main *****************
  5006 ;; Defined at:
  5007 ;;		line 72 in file "main.c"
  5008 ;; Parameters:    Size  Location     Type
  5009 ;;		None
  5010 ;; Auto vars:     Size  Location     Type
  5011 ;;		None
  5012 ;; Return value:  Size  Location     Type
  5013 ;;                  1    wreg      void 
  5014 ;; Registers used:
  5015 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5016 ;; Tracked objects:
  5017 ;;		On entry : B1F/0
  5018 ;;		On exit  : 0/0
  5019 ;;		Unchanged: 0/0
  5020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5023 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5024 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5025 ;;Total ram usage:        2 bytes
  5026 ;; Hardware stack levels required when called:   12
  5027 ;; This function calls:
  5028 ;;		_EUSART_Initialize
  5029 ;;		_initClock
  5030 ;;		_initWDT
  5031 ;;		_init_GPIO
  5032 ;;		_init_I2C
  5033 ;;		_init_RGB
  5034 ;;		_init_TMR1
  5035 ;;		_statemachine
  5036 ;;		_watchdog_timeout_shutdown
  5037 ;; This function is called by:
  5038 ;;		Startup code after reset
  5039 ;; This function uses a non-reentrant model
  5040 ;;
  5041                           
  5042                           
  5043                           ;psect for function _main
  5044  35BA                     _main:	
  5045                           
  5046                           ;main.c: 75:     initClock();
  5047                           
  5048                           ;incstack = 0
  5049                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5050  35BA  31A0  2000  31B5   	fcall	_initClock
  5051                           
  5052                           ;main.c: 76:     init_GPIO();
  5053  35BD  3188  2008  31B5   	fcall	_init_GPIO
  5054                           
  5055                           ;main.c: 77:     initWDT();
  5056  35C0  31B2  22ED  31B5   	fcall	_initWDT
  5057                           
  5058                           ;main.c: 78:     init_I2C();
  5059  35C3  31B3  2353  31B5   	fcall	_init_I2C
  5060                           
  5061                           ;main.c: 79:     EUSART_Initialize(9600);
  5062  35C6  3000               	movlw	0
  5063  35C7  0020               	movlb	0	; select bank0
  5064  35C8  00B5               	movwf	EUSART_Initialize@baudrate+3
  5065  35C9  3000               	movlw	0
  5066  35CA  00B4               	movwf	EUSART_Initialize@baudrate+2
  5067  35CB  3025               	movlw	37
  5068  35CC  00B3               	movwf	EUSART_Initialize@baudrate+1
  5069  35CD  3080               	movlw	128
  5070  35CE  00B2               	movwf	EUSART_Initialize@baudrate
  5071  35CF  31AC  2445  31B5   	fcall	_EUSART_Initialize
  5072                           
  5073                           ;main.c: 80:     init_TMR1();
  5074  35D2  31B3  233C  31B5   	fcall	_init_TMR1
  5075                           
  5076                           ;main.c: 81:     init_RGB();
  5077  35D5  3187  27FB  31B5   	fcall	_init_RGB
  5078                           
  5079                           ;main.c: 84:     watchdog_timeout_shutdown();
  5080  35D8  31B4  2426  31B5   	fcall	_watchdog_timeout_shutdown
  5081  35DB                     l8611:	
  5082                           
  5083                           ;main.c: 88:         statemachine();
  5084  35DB  31A9  2136  31B5   	fcall	_statemachine
  5085                           
  5086                           ;main.c: 90:         _delay((unsigned long)((1000)*(16000000/4000.0)));
  5087  35DE  3015               	movlw	21
  5088  35DF  0023               	movlb	3	; select bank3
  5089  35E0  00E7               	movwf	(??_main^(0+384)+1)
  5090  35E1  304B               	movlw	75
  5091  35E2  00E6               	movwf	??_main^(0+384)
  5092  35E3  30BE               	movlw	190
  5093  35E4                     u11617:	
  5094  35E4  0B89               	decfsz	9,f
  5095  35E5  2DE4               	goto	u11617
  5096  35E6  0BE6               	decfsz	??_main^(0+384),f
  5097  35E7  2DE4               	goto	u11617
  5098  35E8  0BE7               	decfsz	(??_main^(0+384)+1),f
  5099  35E9  2DE4               	goto	u11617
  5100  35EA  0000               	nop
  5101  35EB  2DDB               	goto	l8611
  5102  35EC                     __end_of_main:	
  5103                           
  5104                           	psect	text1
  5105  3426                     __ptext1:	
  5106 ;; *************** function _watchdog_timeout_shutdown *****************
  5107 ;; Defined at:
  5108 ;;		line 3 in file "algorithms.c"
  5109 ;; Parameters:    Size  Location     Type
  5110 ;;		None
  5111 ;; Auto vars:     Size  Location     Type
  5112 ;;		None
  5113 ;; Return value:  Size  Location     Type
  5114 ;;                  1    wreg      void 
  5115 ;; Registers used:
  5116 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5117 ;; Tracked objects:
  5118 ;;		On entry : 0/0
  5119 ;;		On exit  : 0/0
  5120 ;;		Unchanged: 0/0
  5121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5124 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5125 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5126 ;;Total ram usage:        2 bytes
  5127 ;; Hardware stack levels used:    1
  5128 ;; Hardware stack levels required when called:    2
  5129 ;; This function calls:
  5130 ;;		_RGB_color
  5131 ;; This function is called by:
  5132 ;;		_main
  5133 ;; This function uses a non-reentrant model
  5134 ;;
  5135                           
  5136                           
  5137                           ;psect for function _watchdog_timeout_shutdown
  5138  3426                     _watchdog_timeout_shutdown:	
  5139                           
  5140                           ;algorithms.c: 5:     if (!STATUSbits.nTO) {
  5141                           
  5142                           ;incstack = 0
  5143                           ; Regs used in _watchdog_timeout_shutdown: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5144  3426  0020               	movlb	0	; select bank0
  5145  3427  1A03               	btfsc	3,4	;volatile
  5146  3428  0008               	return
  5147                           
  5148                           ;algorithms.c: 6:         RGB_color(0);
  5149  3429  3000               	movlw	0
  5150  342A  00F1               	movwf	RGB_color@color
  5151  342B  00F2               	movwf	RGB_color@color+1
  5152  342C  31B4  24B7  31B4   	fcall	_RGB_color
  5153                           
  5154                           ;algorithms.c: 7:          _delay((unsigned long)((2000)*(16000000/4000.0)));
  5155  342F  3029               	movlw	41
  5156  3430  00F4               	movwf	??_watchdog_timeout_shutdown+1
  5157  3431  3096               	movlw	150
  5158  3432  00F3               	movwf	??_watchdog_timeout_shutdown
  5159  3433  307F               	movlw	127
  5160  3434                     u11627:	
  5161  3434  0B89               	decfsz	9,f
  5162  3435  2C34               	goto	u11627
  5163  3436  0BF3               	decfsz	??_watchdog_timeout_shutdown,f
  5164  3437  2C34               	goto	u11627
  5165  3438  0BF4               	decfsz	??_watchdog_timeout_shutdown+1,f
  5166  3439  2C34               	goto	u11627
  5167  343A  0000               	nop
  5168                           
  5169                           ;algorithms.c: 8:          currState = 3;
  5170  343B  3003               	movlw	3
  5171  343C  00F3               	movwf	??_watchdog_timeout_shutdown
  5172  343D  0873               	movf	??_watchdog_timeout_shutdown,w
  5173  343E  0023               	movlb	3	; select bank3
  5174  343F  00DC               	movwf	_currState^(0+384)
  5175  3440  0008               	return
  5176  3441                     __end_of_watchdog_timeout_shutdown:	
  5177                           
  5178                           	psect	text2
  5179  2936                     __ptext2:	
  5180 ;; *************** function _statemachine *****************
  5181 ;; Defined at:
  5182 ;;		line 96 in file "main.c"
  5183 ;; Parameters:    Size  Location     Type
  5184 ;;		None
  5185 ;; Auto vars:     Size  Location     Type
  5186 ;;  success         1   68[BANK2 ] unsigned char 
  5187 ;; Return value:  Size  Location     Type
  5188 ;;                  1    wreg      void 
  5189 ;; Registers used:
  5190 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5191 ;; Tracked objects:
  5192 ;;		On entry : 0/0
  5193 ;;		On exit  : 0/0
  5194 ;;		Unchanged: 0/0
  5195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5197 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5198 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5199 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5200 ;;Total ram usage:        3 bytes
  5201 ;; Hardware stack levels used:    1
  5202 ;; Hardware stack levels required when called:   11
  5203 ;; This function calls:
  5204 ;;		_AFE_UPDATE
  5205 ;;		_EUSART_Write_Text
  5206 ;;		_RGB_AWAIT_AFE_CONN
  5207 ;;		_RGB_color
  5208 ;;		_beginAFEcommunication
  5209 ;;		_init_AFE
  5210 ;;		_printcellParameters
  5211 ;;		_snprintf
  5212 ;; This function is called by:
  5213 ;;		_main
  5214 ;; This function uses a non-reentrant model
  5215 ;;
  5216                           
  5217                           
  5218                           ;psect for function _statemachine
  5219  2936                     _statemachine:	
  5220                           
  5221                           ;main.c: 98:     switch (currState) {
  5222                           
  5223                           ;incstack = 0
  5224                           ; Regs used in _statemachine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5225  2936  2994               	goto	l8587
  5226  2937                     l8555:	
  5227                           
  5228                           ;main.c: 101:             if (tmr1_flag) {
  5229  2937  0023               	movlb	3	; select bank3
  5230  2938  0859               	movf	_tmr1_flag^(0+384),w	;volatile
  5231  2939  1903               	btfsc	3,2
  5232  293A  0008               	return
  5233                           
  5234                           ;main.c: 102:                 tmr1_flag = 0;
  5235  293B  01D9               	clrf	_tmr1_flag^(0+384)	;volatile
  5236                           
  5237                           ;main.c: 103:                 RGB_AWAIT_AFE_CONN();
  5238  293C  31B4  24D8  31A9   	fcall	_RGB_AWAIT_AFE_CONN
  5239                           
  5240                           ;main.c: 104:                 uint8_t success = beginAFEcommunication();
  5241  293F  31AC  24EE  31A9   	fcall	_beginAFEcommunication
  5242  2942  0020               	movlb	0	; select bank0
  5243  2943  0820               	movf	?_beginAFEcommunication,w
  5244  2944  0022               	movlb	2	; select bank2
  5245  2945  00E2               	movwf	??_statemachine^(0+256)
  5246  2946  0862               	movf	??_statemachine^(0+256),w
  5247  2947  00E4               	movwf	statemachine@success^(0+256)
  5248                           
  5249                           ;main.c: 109:                 if (success) {
  5250  2948  0864               	movf	statemachine@success^(0+256),w
  5251  2949  1903               	btfsc	3,2
  5252  294A  0008               	return
  5253                           
  5254                           ;main.c: 110:                     T1CONbits.TMR1ON = 0;
  5255  294B  0020               	movlb	0	; select bank0
  5256  294C  1018               	bcf	24,0	;volatile
  5257                           
  5258                           ;main.c: 111:                     PIE1bits.TMR1IE = 0;
  5259  294D  0021               	movlb	1	; select bank1
  5260  294E  1011               	bcf	17,0	;volatile
  5261                           
  5262                           ;main.c: 112:                     RGB_color(0);
  5263  294F  3000               	movlw	0
  5264  2950  00F1               	movwf	RGB_color@color
  5265  2951  00F2               	movwf	RGB_color@color+1
  5266  2952  31B4  24B7         	fcall	_RGB_color
  5267                           
  5268                           ;main.c: 113:                     tmr1_flag = 0;
  5269  2954  0023               	movlb	3	; select bank3
  5270  2955  01D9               	clrf	_tmr1_flag^(0+384)	;volatile
  5271                           
  5272                           ;main.c: 126:                     currState = 1;
  5273  2956  01DC               	clrf	_currState^(0+384)
  5274  2957  0ADC               	incf	_currState^(0+384),f
  5275  2958  0008               	return
  5276  2959                     l8573:	
  5277                           
  5278                           ;main.c: 135:             init_AFE();
  5279  2959  31A8  2011  31A9   	fcall	_init_AFE
  5280                           
  5281                           ;main.c: 154:             RGB_color(1);
  5282  295C  3001               	movlw	1
  5283  295D  00F1               	movwf	RGB_color@color
  5284  295E  3000               	movlw	0
  5285  295F  00F2               	movwf	RGB_color@color+1
  5286  2960  31B4  24B7         	fcall	_RGB_color
  5287                           
  5288                           ;main.c: 155:             currState = 2;
  5289  2962  3002               	movlw	2
  5290  2963  0022               	movlb	2	; select bank2
  5291  2964  00E2               	movwf	??_statemachine^(0+256)
  5292  2965  0862               	movf	??_statemachine^(0+256),w
  5293  2966  0023               	movlb	3	; select bank3
  5294  2967  00DC               	movwf	_currState^(0+384)
  5295                           
  5296                           ;main.c: 156:             break;
  5297  2968  0008               	return
  5298  2969                     l8577:	
  5299                           
  5300                           ;main.c: 160:             AFE_UPDATE();
  5301  2969  31B4  24FA  31A9   	fcall	_AFE_UPDATE
  5302  296C  0064               	clrwdt	;# 
  5303                           
  5304                           ;main.c: 164:             printcellParameters();
  5305  296D  319C  24C5  31A9   	fcall	_printcellParameters
  5306                           
  5307                           ;main.c: 166:             _delay((unsigned long)((5000)*(16000000/4000.0)));
  5308  2970  3066               	movlw	102
  5309  2971  0022               	movlb	2	; select bank2
  5310  2972  00E3               	movwf	(??_statemachine^(0+256)+1)
  5311  2973  3076               	movlw	118
  5312  2974  00E2               	movwf	??_statemachine^(0+256)
  5313  2975  30C1               	movlw	193
  5314  2976                     u11637:	
  5315  2976  0B89               	decfsz	9,f
  5316  2977  2976               	goto	u11637
  5317  2978  0BE2               	decfsz	??_statemachine^(0+256),f
  5318  2979  2976               	goto	u11637
  5319  297A  0BE3               	decfsz	(??_statemachine^(0+256)+1),f
  5320  297B  2976               	goto	u11637
  5321                           
  5322                           ;main.c: 168:             break;
  5323  297C  0008               	return
  5324  297D                     l8581:	
  5325                           
  5326                           ;main.c: 172:              snprintf(messageBuffer, 127, "WATCHDOG NOT KICKED: AFE comms 
      +                          error \n\r");
  5327  297D  3071               	movlw	113
  5328  297E  0021               	movlb	1	; select bank1
  5329  297F  00CC               	movwf	snprintf@s^(0+128)
  5330  2980  3027               	movlw	39
  5331  2981  00CD               	movwf	(snprintf@s^(0+128)+1)
  5332  2982  307F               	movlw	127
  5333  2983  00CE               	movwf	snprintf@n^(0+128)
  5334  2984  3000               	movlw	0
  5335  2985  00CF               	movwf	(snprintf@n^(0+128)+1)
  5336  2986  3049               	movlw	low (STR_1| (0+32768))
  5337  2987  00D0               	movwf	snprintf@fmt^(0+128)
  5338  2988  30B8               	movlw	high (STR_1| (0+32768))
  5339  2989  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5340  298A  31B4  240B  31A9   	fcall	_snprintf
  5341                           
  5342                           ;main.c: 173:              EUSART_Write_Text(messageBuffer);
  5343  298D  3071               	movlw	113
  5344  298E  00F2               	movwf	EUSART_Write_Text@text
  5345  298F  3027               	movlw	39
  5346  2990  00F3               	movwf	EUSART_Write_Text@text+1
  5347  2991  31B3  23D6         	fcall	_EUSART_Write_Text
  5348                           
  5349                           ;main.c: 174:             break;
  5350  2993  0008               	return
  5351  2994                     l8587:	
  5352  2994  0023               	movlb	3	; select bank3
  5353  2995  085C               	movf	_currState^(0+384),w
  5354  2996  0022               	movlb	2	; select bank2
  5355  2997  00E2               	movwf	??_statemachine^(0+256)
  5356  2998  01E3               	clrf	(??_statemachine^(0+256)+1)
  5357                           
  5358                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5359                           ; Switch size 1, requested type "simple"
  5360                           ; Number of cases is 1, Range of values is 0 to 0
  5361                           ; switch strategies available:
  5362                           ; Name         Instructions Cycles
  5363                           ; simple_byte            4     3 (average)
  5364                           ; direct_byte            8     6 (fixed)
  5365                           ; jumptable            260     6 (fixed)
  5366                           ;	Chosen strategy is simple_byte
  5367  2999  0863               	movf	(??_statemachine+1)^(0+256),w
  5368  299A  3A00               	xorlw	0	; case 0
  5369  299B  1903               	skipnz
  5370  299C  299E               	goto	l8779
  5371  299D  29AC               	goto	l170
  5372  299E                     l8779:	
  5373                           
  5374                           ; Switch size 1, requested type "simple"
  5375                           ; Number of cases is 4, Range of values is 0 to 3
  5376                           ; switch strategies available:
  5377                           ; Name         Instructions Cycles
  5378                           ; simple_byte           13     7 (average)
  5379                           ; direct_byte           14     6 (fixed)
  5380                           ; jumptable            260     6 (fixed)
  5381                           ;	Chosen strategy is simple_byte
  5382  299E  0862               	movf	??_statemachine^(0+256),w
  5383  299F  3A00               	xorlw	0	; case 0
  5384  29A0  1903               	skipnz
  5385  29A1  2937               	goto	l8555
  5386  29A2  3A01               	xorlw	1	; case 1
  5387  29A3  1903               	skipnz
  5388  29A4  2959               	goto	l8573
  5389  29A5  3A03               	xorlw	3	; case 2
  5390  29A6  1903               	skipnz
  5391  29A7  2969               	goto	l8577
  5392  29A8  3A01               	xorlw	1	; case 3
  5393  29A9  1903               	skipnz
  5394  29AA  297D               	goto	l8581
  5395  29AB  29AC               	goto	l170
  5396  29AC                     l170:	
  5397  29AC  0008               	return
  5398  29AD                     __end_of_statemachine:	
  5399                           
  5400                           	psect	text3
  5401  1CC5                     __ptext3:	
  5402 ;; *************** function _printcellParameters *****************
  5403 ;; Defined at:
  5404 ;;		line 321 in file "BQ76920.c"
  5405 ;; Parameters:    Size  Location     Type
  5406 ;;		None
  5407 ;; Auto vars:     Size  Location     Type
  5408 ;;		None
  5409 ;; Return value:  Size  Location     Type
  5410 ;;                  1    wreg      void 
  5411 ;; Registers used:
  5412 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5413 ;; Tracked objects:
  5414 ;;		On entry : 0/0
  5415 ;;		On exit  : 0/0
  5416 ;;		Unchanged: 0/0
  5417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5422 ;;Total ram usage:        0 bytes
  5423 ;; Hardware stack levels used:    1
  5424 ;; Hardware stack levels required when called:   10
  5425 ;; This function calls:
  5426 ;;		_EUSART_Write_Text
  5427 ;;		_readRegister
  5428 ;;		_snprintf
  5429 ;; This function is called by:
  5430 ;;		_statemachine
  5431 ;; This function uses a non-reentrant model
  5432 ;;
  5433                           
  5434                           
  5435                           ;psect for function _printcellParameters
  5436  1CC5                     _printcellParameters:	
  5437                           
  5438                           ;BQ76920.c: 322:     snprintf(messageBuffer, 127, "Cell batt: %i ,%d, %d , %d, %d, %d Ba
      +                          tt Curr: %i Temp: %i CTRL2: %i \n\r", batVoltage,cellVoltages[0],cellVoltages[1],cellVol
      +                          tages[2],cellVoltages[3],cellVoltages[4], batCurrent, temperatureThermistor,readRegister
      +                          (0x18, 0x05));
  5439                           
  5440                           ;incstack = 0
  5441                           ; Regs used in _printcellParameters: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5442  1CC5  3071               	movlw	113
  5443  1CC6  0021               	movlb	1	; select bank1
  5444  1CC7  00CC               	movwf	snprintf@s^(0+128)
  5445  1CC8  3027               	movlw	39
  5446  1CC9  00CD               	movwf	(snprintf@s^(0+128)+1)
  5447  1CCA  307F               	movlw	127
  5448  1CCB  00CE               	movwf	snprintf@n^(0+128)
  5449  1CCC  3000               	movlw	0
  5450  1CCD  00CF               	movwf	(snprintf@n^(0+128)+1)
  5451  1CCE  3002               	movlw	low (STR_2| (0+32768))
  5452  1CCF  00D0               	movwf	snprintf@fmt^(0+128)
  5453  1CD0  30B8               	movlw	high (STR_2| (0+32768))
  5454  1CD1  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5455  1CD2  0023               	movlb	3	; select bank3
  5456  1CD3  0847               	movf	(_batVoltage+3)^(0+384),w
  5457  1CD4  0021               	movlb	1	; select bank1
  5458  1CD5  00D5               	movwf	((?_snprintf+3)^(0+128)+6)
  5459  1CD6  0023               	movlb	3	; select bank3
  5460  1CD7  0846               	movf	(_batVoltage+2)^(0+384),w
  5461  1CD8  0021               	movlb	1	; select bank1
  5462  1CD9  00D4               	movwf	((?_snprintf+2)^(0+128)+6)
  5463  1CDA  0023               	movlb	3	; select bank3
  5464  1CDB  0845               	movf	(_batVoltage+1)^(0+384),w
  5465  1CDC  0021               	movlb	1	; select bank1
  5466  1CDD  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5467  1CDE  0023               	movlb	3	; select bank3
  5468  1CDF  0844               	movf	_batVoltage^(0+384),w
  5469  1CE0  0021               	movlb	1	; select bank1
  5470  1CE1  00D2               	movwf	(?_snprintf^(0+128)+6)
  5471  1CE2  0023               	movlb	3	; select bank3
  5472  1CE3  082B               	movf	(_cellVoltages+1)^(0+384),w
  5473  1CE4  0021               	movlb	1	; select bank1
  5474  1CE5  00D7               	movwf	((?_snprintf+1)^(0+128)+10)
  5475  1CE6  0023               	movlb	3	; select bank3
  5476  1CE7  082A               	movf	_cellVoltages^(0+384),w
  5477  1CE8  0021               	movlb	1	; select bank1
  5478  1CE9  00D6               	movwf	(?_snprintf^(0+128)+10)
  5479  1CEA  0023               	movlb	3	; select bank3
  5480  1CEB  082D               	movf	((_cellVoltages+1)^(0+384)+2),w
  5481  1CEC  0021               	movlb	1	; select bank1
  5482  1CED  00D9               	movwf	((?_snprintf+1)^(0+128)+12)
  5483  1CEE  0023               	movlb	3	; select bank3
  5484  1CEF  082C               	movf	(_cellVoltages^(0+384)+2),w
  5485  1CF0  0021               	movlb	1	; select bank1
  5486  1CF1  00D8               	movwf	(?_snprintf^(0+128)+12)
  5487  1CF2  0023               	movlb	3	; select bank3
  5488  1CF3  082F               	movf	((_cellVoltages+1)^(0+384)+4),w
  5489  1CF4  0021               	movlb	1	; select bank1
  5490  1CF5  00DB               	movwf	((?_snprintf+1)^(0+128)+14)
  5491  1CF6  0023               	movlb	3	; select bank3
  5492  1CF7  082E               	movf	(_cellVoltages^(0+384)+4),w
  5493  1CF8  0021               	movlb	1	; select bank1
  5494  1CF9  00DA               	movwf	(?_snprintf^(0+128)+14)
  5495  1CFA  0023               	movlb	3	; select bank3
  5496  1CFB  0831               	movf	((_cellVoltages+1)^(0+384)+6),w
  5497  1CFC  0021               	movlb	1	; select bank1
  5498  1CFD  00DD               	movwf	((?_snprintf+1)^(0+128)+16)
  5499  1CFE  0023               	movlb	3	; select bank3
  5500  1CFF  0830               	movf	(_cellVoltages^(0+384)+6),w
  5501  1D00  0021               	movlb	1	; select bank1
  5502  1D01  00DC               	movwf	(?_snprintf^(0+128)+16)
  5503  1D02  0023               	movlb	3	; select bank3
  5504  1D03  0833               	movf	((_cellVoltages+1)^(0+384)+8),w
  5505  1D04  0021               	movlb	1	; select bank1
  5506  1D05  00DF               	movwf	((?_snprintf+1)^(0+128)+18)
  5507  1D06  0023               	movlb	3	; select bank3
  5508  1D07  0832               	movf	(_cellVoltages^(0+384)+8),w
  5509  1D08  0021               	movlb	1	; select bank1
  5510  1D09  00DE               	movwf	(?_snprintf^(0+128)+18)
  5511  1D0A  0023               	movlb	3	; select bank3
  5512  1D0B  0843               	movf	(_batCurrent+3)^(0+384),w
  5513  1D0C  0021               	movlb	1	; select bank1
  5514  1D0D  00E3               	movwf	((?_snprintf+3)^(0+128)+20)
  5515  1D0E  0023               	movlb	3	; select bank3
  5516  1D0F  0842               	movf	(_batCurrent+2)^(0+384),w
  5517  1D10  0021               	movlb	1	; select bank1
  5518  1D11  00E2               	movwf	((?_snprintf+2)^(0+128)+20)
  5519  1D12  0023               	movlb	3	; select bank3
  5520  1D13  0841               	movf	(_batCurrent+1)^(0+384),w
  5521  1D14  0021               	movlb	1	; select bank1
  5522  1D15  00E1               	movwf	((?_snprintf+1)^(0+128)+20)
  5523  1D16  0023               	movlb	3	; select bank3
  5524  1D17  0840               	movf	_batCurrent^(0+384),w
  5525  1D18  0021               	movlb	1	; select bank1
  5526  1D19  00E0               	movwf	(?_snprintf^(0+128)+20)
  5527  1D1A  0023               	movlb	3	; select bank3
  5528  1D1B  083F               	movf	(_temperatureThermistor+3)^(0+384),w
  5529  1D1C  0021               	movlb	1	; select bank1
  5530  1D1D  00E7               	movwf	((?_snprintf+3)^(0+128)+24)
  5531  1D1E  0023               	movlb	3	; select bank3
  5532  1D1F  083E               	movf	(_temperatureThermistor+2)^(0+384),w
  5533  1D20  0021               	movlb	1	; select bank1
  5534  1D21  00E6               	movwf	((?_snprintf+2)^(0+128)+24)
  5535  1D22  0023               	movlb	3	; select bank3
  5536  1D23  083D               	movf	(_temperatureThermistor+1)^(0+384),w
  5537  1D24  0021               	movlb	1	; select bank1
  5538  1D25  00E5               	movwf	((?_snprintf+1)^(0+128)+24)
  5539  1D26  0023               	movlb	3	; select bank3
  5540  1D27  083C               	movf	_temperatureThermistor^(0+384),w
  5541  1D28  0021               	movlb	1	; select bank1
  5542  1D29  00E4               	movwf	(?_snprintf^(0+128)+24)
  5543  1D2A  3018               	movlw	24
  5544  1D2B  00F5               	movwf	readRegister@slaveAddress
  5545  1D2C  3000               	movlw	0
  5546  1D2D  00F6               	movwf	readRegister@slaveAddress+1
  5547  1D2E  3005               	movlw	5
  5548  1D2F  00F7               	movwf	readRegister@regAddress
  5549  1D30  3000               	movlw	0
  5550  1D31  00F8               	movwf	readRegister@regAddress+1
  5551  1D32  31B6  2621  319C   	fcall	_readRegister
  5552  1D35  0876               	movf	?_readRegister+1,w
  5553  1D36  0021               	movlb	1	; select bank1
  5554  1D37  00E9               	movwf	((?_snprintf+1)^(0+128)+28)
  5555  1D38  0875               	movf	?_readRegister,w
  5556  1D39  00E8               	movwf	(?_snprintf^(0+128)+28)
  5557  1D3A  31B4  240B  319C   	fcall	_snprintf
  5558                           
  5559                           ;BQ76920.c: 323:     EUSART_Write_Text(messageBuffer);
  5560  1D3D  3071               	movlw	113
  5561  1D3E  00F2               	movwf	EUSART_Write_Text@text
  5562  1D3F  3027               	movlw	39
  5563  1D40  00F3               	movwf	EUSART_Write_Text@text+1
  5564  1D41  31B3  23D6  319C   	fcall	_EUSART_Write_Text
  5565                           
  5566                           ;BQ76920.c: 324:     snprintf(messageBuffer, 127, "0x05 SYS_CTRL2: %i \n\r", readRegiste
      +                          r(0x18, 0x05));
  5567  1D44  3071               	movlw	113
  5568  1D45  0021               	movlb	1	; select bank1
  5569  1D46  00CC               	movwf	snprintf@s^(0+128)
  5570  1D47  3027               	movlw	39
  5571  1D48  00CD               	movwf	(snprintf@s^(0+128)+1)
  5572  1D49  307F               	movlw	127
  5573  1D4A  00CE               	movwf	snprintf@n^(0+128)
  5574  1D4B  3000               	movlw	0
  5575  1D4C  00CF               	movwf	(snprintf@n^(0+128)+1)
  5576  1D4D  30ED               	movlw	low (STR_3| (0+32768))
  5577  1D4E  00D0               	movwf	snprintf@fmt^(0+128)
  5578  1D4F  30B8               	movlw	high (STR_3| (0+32768))
  5579  1D50  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5580  1D51  3018               	movlw	24
  5581  1D52  00F5               	movwf	readRegister@slaveAddress
  5582  1D53  3000               	movlw	0
  5583  1D54  00F6               	movwf	readRegister@slaveAddress+1
  5584  1D55  3005               	movlw	5
  5585  1D56  00F7               	movwf	readRegister@regAddress
  5586  1D57  3000               	movlw	0
  5587  1D58  00F8               	movwf	readRegister@regAddress+1
  5588  1D59  31B6  2621  319C   	fcall	_readRegister
  5589  1D5C  0876               	movf	?_readRegister+1,w
  5590  1D5D  0021               	movlb	1	; select bank1
  5591  1D5E  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5592  1D5F  0875               	movf	?_readRegister,w
  5593  1D60  00D2               	movwf	(?_snprintf^(0+128)+6)
  5594  1D61  31B4  240B  319C   	fcall	_snprintf
  5595                           
  5596                           ;BQ76920.c: 325:     EUSART_Write_Text(messageBuffer);
  5597  1D64  3071               	movlw	113
  5598  1D65  00F2               	movwf	EUSART_Write_Text@text
  5599  1D66  3027               	movlw	39
  5600  1D67  00F3               	movwf	EUSART_Write_Text@text+1
  5601  1D68  31B3  23D6  319C   	fcall	_EUSART_Write_Text
  5602                           
  5603                           ;BQ76920.c: 326:     snprintf(messageBuffer, 127, "0x00 SYS_STAT: %i \n\r", readRegister
      +                          (0x18, 0x00));
  5604  1D6B  3071               	movlw	113
  5605  1D6C  0021               	movlb	1	; select bank1
  5606  1D6D  00CC               	movwf	snprintf@s^(0+128)
  5607  1D6E  3027               	movlw	39
  5608  1D6F  00CD               	movwf	(snprintf@s^(0+128)+1)
  5609  1D70  307F               	movlw	127
  5610  1D71  00CE               	movwf	snprintf@n^(0+128)
  5611  1D72  3000               	movlw	0
  5612  1D73  00CF               	movwf	(snprintf@n^(0+128)+1)
  5613  1D74  3057               	movlw	low (STR_4| (0+32768))
  5614  1D75  00D0               	movwf	snprintf@fmt^(0+128)
  5615  1D76  30B9               	movlw	high (STR_4| (0+32768))
  5616  1D77  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5617  1D78  3018               	movlw	24
  5618  1D79  00F5               	movwf	readRegister@slaveAddress
  5619  1D7A  3000               	movlw	0
  5620  1D7B  00F6               	movwf	readRegister@slaveAddress+1
  5621  1D7C  3000               	movlw	0
  5622  1D7D  00F7               	movwf	readRegister@regAddress
  5623  1D7E  00F8               	movwf	readRegister@regAddress+1
  5624  1D7F  31B6  2621  319C   	fcall	_readRegister
  5625  1D82  0876               	movf	?_readRegister+1,w
  5626  1D83  0021               	movlb	1	; select bank1
  5627  1D84  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5628  1D85  0875               	movf	?_readRegister,w
  5629  1D86  00D2               	movwf	(?_snprintf^(0+128)+6)
  5630  1D87  31B4  240B  319C   	fcall	_snprintf
  5631                           
  5632                           ;BQ76920.c: 327:     EUSART_Write_Text(messageBuffer);
  5633  1D8A  3071               	movlw	113
  5634  1D8B  00F2               	movwf	EUSART_Write_Text@text
  5635  1D8C  3027               	movlw	39
  5636  1D8D  00F3               	movwf	EUSART_Write_Text@text+1
  5637  1D8E  31B3  23D6  319C   	fcall	_EUSART_Write_Text
  5638                           
  5639                           ;BQ76920.c: 328:     snprintf(messageBuffer, 127, "0x06 PROTECT1: %i \n\r", readRegister
      +                          (0x18, 0x06));
  5640  1D91  3071               	movlw	113
  5641  1D92  0021               	movlb	1	; select bank1
  5642  1D93  00CC               	movwf	snprintf@s^(0+128)
  5643  1D94  3027               	movlw	39
  5644  1D95  00CD               	movwf	(snprintf@s^(0+128)+1)
  5645  1D96  307F               	movlw	127
  5646  1D97  00CE               	movwf	snprintf@n^(0+128)
  5647  1D98  3000               	movlw	0
  5648  1D99  00CF               	movwf	(snprintf@n^(0+128)+1)
  5649  1D9A  3018               	movlw	low (STR_5| (0+32768))
  5650  1D9B  00D0               	movwf	snprintf@fmt^(0+128)
  5651  1D9C  30B9               	movlw	high (STR_5| (0+32768))
  5652  1D9D  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5653  1D9E  3018               	movlw	24
  5654  1D9F  00F5               	movwf	readRegister@slaveAddress
  5655  1DA0  3000               	movlw	0
  5656  1DA1  00F6               	movwf	readRegister@slaveAddress+1
  5657  1DA2  3006               	movlw	6
  5658  1DA3  00F7               	movwf	readRegister@regAddress
  5659  1DA4  3000               	movlw	0
  5660  1DA5  00F8               	movwf	readRegister@regAddress+1
  5661  1DA6  31B6  2621  319C   	fcall	_readRegister
  5662  1DA9  0876               	movf	?_readRegister+1,w
  5663  1DAA  0021               	movlb	1	; select bank1
  5664  1DAB  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5665  1DAC  0875               	movf	?_readRegister,w
  5666  1DAD  00D2               	movwf	(?_snprintf^(0+128)+6)
  5667  1DAE  31B4  240B  319C   	fcall	_snprintf
  5668                           
  5669                           ;BQ76920.c: 329:     EUSART_Write_Text(messageBuffer);
  5670  1DB1  3071               	movlw	113
  5671  1DB2  00F2               	movwf	EUSART_Write_Text@text
  5672  1DB3  3027               	movlw	39
  5673  1DB4  00F3               	movwf	EUSART_Write_Text@text+1
  5674  1DB5  31B3  23D6  319C   	fcall	_EUSART_Write_Text
  5675                           
  5676                           ;BQ76920.c: 330:     snprintf(messageBuffer, 127, "0x07 PROTECT2: %i \n\r", readRegister
      +                          (0x18, 0x07));
  5677  1DB8  3071               	movlw	113
  5678  1DB9  0021               	movlb	1	; select bank1
  5679  1DBA  00CC               	movwf	snprintf@s^(0+128)
  5680  1DBB  3027               	movlw	39
  5681  1DBC  00CD               	movwf	(snprintf@s^(0+128)+1)
  5682  1DBD  307F               	movlw	127
  5683  1DBE  00CE               	movwf	snprintf@n^(0+128)
  5684  1DBF  3000               	movlw	0
  5685  1DC0  00CF               	movwf	(snprintf@n^(0+128)+1)
  5686  1DC1  302D               	movlw	low (STR_6| (0+32768))
  5687  1DC2  00D0               	movwf	snprintf@fmt^(0+128)
  5688  1DC3  30B9               	movlw	high (STR_6| (0+32768))
  5689  1DC4  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5690  1DC5  3018               	movlw	24
  5691  1DC6  00F5               	movwf	readRegister@slaveAddress
  5692  1DC7  3000               	movlw	0
  5693  1DC8  00F6               	movwf	readRegister@slaveAddress+1
  5694  1DC9  3007               	movlw	7
  5695  1DCA  00F7               	movwf	readRegister@regAddress
  5696  1DCB  3000               	movlw	0
  5697  1DCC  00F8               	movwf	readRegister@regAddress+1
  5698  1DCD  31B6  2621  319C   	fcall	_readRegister
  5699  1DD0  0876               	movf	?_readRegister+1,w
  5700  1DD1  0021               	movlb	1	; select bank1
  5701  1DD2  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5702  1DD3  0875               	movf	?_readRegister,w
  5703  1DD4  00D2               	movwf	(?_snprintf^(0+128)+6)
  5704  1DD5  31B4  240B  319C   	fcall	_snprintf
  5705                           
  5706                           ;BQ76920.c: 331:     EUSART_Write_Text(messageBuffer);
  5707  1DD8  3071               	movlw	113
  5708  1DD9  00F2               	movwf	EUSART_Write_Text@text
  5709  1DDA  3027               	movlw	39
  5710  1DDB  00F3               	movwf	EUSART_Write_Text@text+1
  5711  1DDC  31B3  23D6  319C   	fcall	_EUSART_Write_Text
  5712                           
  5713                           ;BQ76920.c: 332:     snprintf(messageBuffer, 127, "Current: %d \n\r", batCurrent);
  5714  1DDF  3071               	movlw	113
  5715  1DE0  0021               	movlb	1	; select bank1
  5716  1DE1  00CC               	movwf	snprintf@s^(0+128)
  5717  1DE2  3027               	movlw	39
  5718  1DE3  00CD               	movwf	(snprintf@s^(0+128)+1)
  5719  1DE4  307F               	movlw	127
  5720  1DE5  00CE               	movwf	snprintf@n^(0+128)
  5721  1DE6  3000               	movlw	0
  5722  1DE7  00CF               	movwf	(snprintf@n^(0+128)+1)
  5723  1DE8  30EB               	movlw	low (STR_7| (0+32768))
  5724  1DE9  00D0               	movwf	snprintf@fmt^(0+128)
  5725  1DEA  30B9               	movlw	high (STR_7| (0+32768))
  5726  1DEB  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5727  1DEC  0023               	movlb	3	; select bank3
  5728  1DED  0843               	movf	(_batCurrent+3)^(0+384),w
  5729  1DEE  0021               	movlb	1	; select bank1
  5730  1DEF  00D5               	movwf	((?_snprintf+3)^(0+128)+6)
  5731  1DF0  0023               	movlb	3	; select bank3
  5732  1DF1  0842               	movf	(_batCurrent+2)^(0+384),w
  5733  1DF2  0021               	movlb	1	; select bank1
  5734  1DF3  00D4               	movwf	((?_snprintf+2)^(0+128)+6)
  5735  1DF4  0023               	movlb	3	; select bank3
  5736  1DF5  0841               	movf	(_batCurrent+1)^(0+384),w
  5737  1DF6  0021               	movlb	1	; select bank1
  5738  1DF7  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5739  1DF8  0023               	movlb	3	; select bank3
  5740  1DF9  0840               	movf	_batCurrent^(0+384),w
  5741  1DFA  0021               	movlb	1	; select bank1
  5742  1DFB  00D2               	movwf	(?_snprintf^(0+128)+6)
  5743  1DFC  31B4  240B  319C   	fcall	_snprintf
  5744                           
  5745                           ;BQ76920.c: 333:     EUSART_Write_Text(messageBuffer);
  5746  1DFF  3071               	movlw	113
  5747  1E00  00F2               	movwf	EUSART_Write_Text@text
  5748  1E01  3027               	movlw	39
  5749  1E02  00F3               	movwf	EUSART_Write_Text@text+1
  5750  1E03  31B3  23D6  319C   	fcall	_EUSART_Write_Text
  5751                           
  5752                           ;BQ76920.c: 334:     snprintf(messageBuffer, 127, "cell predicted SOC: %d %d %d \n\r", c
      +                          ellSOC[0], cellSOC[1], cellSOC[2] );
  5753  1E06  3071               	movlw	113
  5754  1E07  0021               	movlb	1	; select bank1
  5755  1E08  00CC               	movwf	snprintf@s^(0+128)
  5756  1E09  3027               	movlw	39
  5757  1E0A  00CD               	movwf	(snprintf@s^(0+128)+1)
  5758  1E0B  307F               	movlw	127
  5759  1E0C  00CE               	movwf	snprintf@n^(0+128)
  5760  1E0D  3000               	movlw	0
  5761  1E0E  00CF               	movwf	(snprintf@n^(0+128)+1)
  5762  1E0F  30B7               	movlw	low (STR_8| (0+32768))
  5763  1E10  00D0               	movwf	snprintf@fmt^(0+128)
  5764  1E11  30B8               	movlw	high (STR_8| (0+32768))
  5765  1E12  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5766  1E13  0023               	movlb	3	; select bank3
  5767  1E14  0821               	movf	(_cellSOC+1)^(0+384),w
  5768  1E15  0021               	movlb	1	; select bank1
  5769  1E16  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5770  1E17  0023               	movlb	3	; select bank3
  5771  1E18  0820               	movf	_cellSOC^(0+384),w
  5772  1E19  0021               	movlb	1	; select bank1
  5773  1E1A  00D2               	movwf	(?_snprintf^(0+128)+6)
  5774  1E1B  0023               	movlb	3	; select bank3
  5775  1E1C  0823               	movf	((_cellSOC+1)^(0+384)+2),w
  5776  1E1D  0021               	movlb	1	; select bank1
  5777  1E1E  00D5               	movwf	((?_snprintf+1)^(0+128)+8)
  5778  1E1F  0023               	movlb	3	; select bank3
  5779  1E20  0822               	movf	(_cellSOC^(0+384)+2),w
  5780  1E21  0021               	movlb	1	; select bank1
  5781  1E22  00D4               	movwf	(?_snprintf^(0+128)+8)
  5782  1E23  0023               	movlb	3	; select bank3
  5783  1E24  0825               	movf	((_cellSOC+1)^(0+384)+4),w
  5784  1E25  0021               	movlb	1	; select bank1
  5785  1E26  00D7               	movwf	((?_snprintf+1)^(0+128)+10)
  5786  1E27  0023               	movlb	3	; select bank3
  5787  1E28  0824               	movf	(_cellSOC^(0+384)+4),w
  5788  1E29  0021               	movlb	1	; select bank1
  5789  1E2A  00D6               	movwf	(?_snprintf^(0+128)+10)
  5790  1E2B  31B4  240B  319C   	fcall	_snprintf
  5791                           
  5792                           ;BQ76920.c: 335:     EUSART_Write_Text(messageBuffer);
  5793  1E2E  3071               	movlw	113
  5794  1E2F  00F2               	movwf	EUSART_Write_Text@text
  5795  1E30  3027               	movlw	39
  5796  1E31  00F3               	movwf	EUSART_Write_Text@text+1
  5797  1E32  31B3  23D6  319C   	fcall	_EUSART_Write_Text
  5798                           
  5799                           ;BQ76920.c: 336:     snprintf(messageBuffer, 127, "Temp: %d e-2\n\r", temperatureThermis
      +                          tor);
  5800  1E35  3071               	movlw	113
  5801  1E36  0021               	movlb	1	; select bank1
  5802  1E37  00CC               	movwf	snprintf@s^(0+128)
  5803  1E38  3027               	movlw	39
  5804  1E39  00CD               	movwf	(snprintf@s^(0+128)+1)
  5805  1E3A  307F               	movlw	127
  5806  1E3B  00CE               	movwf	snprintf@n^(0+128)
  5807  1E3C  3000               	movlw	0
  5808  1E3D  00CF               	movwf	(snprintf@n^(0+128)+1)
  5809  1E3E  30FA               	movlw	low (STR_9| (0+32768))
  5810  1E3F  00D0               	movwf	snprintf@fmt^(0+128)
  5811  1E40  30B9               	movlw	high (STR_9| (0+32768))
  5812  1E41  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5813  1E42  0023               	movlb	3	; select bank3
  5814  1E43  083F               	movf	(_temperatureThermistor+3)^(0+384),w
  5815  1E44  0021               	movlb	1	; select bank1
  5816  1E45  00D5               	movwf	((?_snprintf+3)^(0+128)+6)
  5817  1E46  0023               	movlb	3	; select bank3
  5818  1E47  083E               	movf	(_temperatureThermistor+2)^(0+384),w
  5819  1E48  0021               	movlb	1	; select bank1
  5820  1E49  00D4               	movwf	((?_snprintf+2)^(0+128)+6)
  5821  1E4A  0023               	movlb	3	; select bank3
  5822  1E4B  083D               	movf	(_temperatureThermistor+1)^(0+384),w
  5823  1E4C  0021               	movlb	1	; select bank1
  5824  1E4D  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5825  1E4E  0023               	movlb	3	; select bank3
  5826  1E4F  083C               	movf	_temperatureThermistor^(0+384),w
  5827  1E50  0021               	movlb	1	; select bank1
  5828  1E51  00D2               	movwf	(?_snprintf^(0+128)+6)
  5829  1E52  31B4  240B  319C   	fcall	_snprintf
  5830                           
  5831                           ;BQ76920.c: 337:     EUSART_Write_Text(messageBuffer);
  5832  1E55  3071               	movlw	113
  5833  1E56  00F2               	movwf	EUSART_Write_Text@text
  5834  1E57  3027               	movlw	39
  5835  1E58  00F3               	movwf	EUSART_Write_Text@text+1
  5836  1E59  31B3  23D6         	fcall	_EUSART_Write_Text
  5837  1E5B  0008               	return
  5838  1E5C                     __end_of_printcellParameters:	
  5839                           
  5840                           	psect	text4
  5841  340B                     __ptext4:	
  5842 ;; *************** function _snprintf *****************
  5843 ;; Defined at:
  5844 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\snprintf.c"
  5845 ;; Parameters:    Size  Location     Type
  5846 ;;  s               2   44[BANK1 ] PTR unsigned char 
  5847 ;;		 -> messageBuffer(127), 
  5848 ;;  n               2   46[BANK1 ] unsigned int 
  5849 ;;  fmt             2   48[BANK1 ] PTR const unsigned char 
  5850 ;;		 -> STR_23(18), STR_22(18), STR_21(19), STR_20(20), 
  5851 ;;		 -> STR_19(20), STR_18(21), STR_17(21), STR_16(21), 
  5852 ;;		 -> STR_15(22), STR_14(22), STR_13(21), STR_12(21), 
  5853 ;;		 -> STR_9(15), STR_8(32), STR_7(15), STR_6(21), 
  5854 ;;		 -> STR_5(21), STR_4(21), STR_3(22), STR_2(71), 
  5855 ;;		 -> STR_1(40), 
  5856 ;; Auto vars:     Size  Location     Type
  5857 ;;  ret             2    0        int 
  5858 ;;  ap              1   79[BANK0 ] PTR void [1]
  5859 ;;		 -> ?_snprintf(2), 
  5860 ;; Return value:  Size  Location     Type
  5861 ;;                  2   44[BANK1 ] int 
  5862 ;; Registers used:
  5863 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5864 ;; Tracked objects:
  5865 ;;		On entry : 0/0
  5866 ;;		On exit  : 0/0
  5867 ;;		Unchanged: 0/0
  5868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5869 ;;      Params:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5870 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5871 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5872 ;;      Totals:         0       4      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5873 ;;Total ram usage:       34 bytes
  5874 ;; Hardware stack levels used:    1
  5875 ;; Hardware stack levels required when called:    9
  5876 ;; This function calls:
  5877 ;;		_vsnprintf
  5878 ;; This function is called by:
  5879 ;;		_statemachine
  5880 ;;		_printcellParameters
  5881 ;;		_printotAFERegisters
  5882 ;; This function uses a non-reentrant model
  5883 ;;
  5884                           
  5885                           
  5886                           ;psect for function _snprintf
  5887  340B                     _snprintf:	
  5888                           
  5889                           ;incstack = 0
  5890                           ; Regs used in _snprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5891  340B  30D2               	movlw	(low ((?_snprintf| 0+6)))& (0+255)
  5892  340C  0020               	movlb	0	; select bank0
  5893  340D  00EC               	movwf	??_snprintf
  5894  340E  086C               	movf	??_snprintf,w
  5895  340F  00EF               	movwf	snprintf@ap
  5896  3410  0021               	movlb	1	; select bank1
  5897  3411  084D               	movf	(snprintf@s+1)^(0+128),w
  5898  3412  00BC               	movwf	(vsnprintf@s+1)^(0+128)
  5899  3413  084C               	movf	snprintf@s^(0+128),w
  5900  3414  00BB               	movwf	vsnprintf@s^(0+128)
  5901  3415  084F               	movf	(snprintf@n+1)^(0+128),w
  5902  3416  00BE               	movwf	(vsnprintf@n+1)^(0+128)
  5903  3417  084E               	movf	snprintf@n^(0+128),w
  5904  3418  00BD               	movwf	vsnprintf@n^(0+128)
  5905  3419  0851               	movf	(snprintf@fmt+1)^(0+128),w
  5906  341A  00C0               	movwf	(vsnprintf@fmt+1)^(0+128)
  5907  341B  0850               	movf	snprintf@fmt^(0+128),w
  5908  341C  00BF               	movwf	vsnprintf@fmt^(0+128)
  5909  341D  306F               	movlw	(low (snprintf@ap| 0))& (0+255)
  5910  341E  0020               	movlb	0	; select bank0
  5911  341F  00EC               	movwf	??_snprintf
  5912  3420  086C               	movf	??_snprintf,w
  5913  3421  0021               	movlb	1	; select bank1
  5914  3422  00C1               	movwf	vsnprintf@ap^(0+128)
  5915  3423  31AA  22A5         	fcall	_vsnprintf
  5916  3425  0008               	return
  5917  3426                     __end_of_snprintf:	
  5918                           
  5919                           	psect	text5
  5920  2AA5                     __ptext5:	
  5921 ;; *************** function _vsnprintf *****************
  5922 ;; Defined at:
  5923 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_vsnprintf.c"
  5924 ;; Parameters:    Size  Location     Type
  5925 ;;  s               2   27[BANK1 ] PTR unsigned char 
  5926 ;;		 -> messageBuffer(127), 
  5927 ;;  n               2   29[BANK1 ] unsigned int 
  5928 ;;  fmt             2   31[BANK1 ] PTR const unsigned char 
  5929 ;;		 -> STR_23(18), STR_22(18), STR_21(19), STR_20(20), 
  5930 ;;		 -> STR_19(20), STR_18(21), STR_17(21), STR_16(21), 
  5931 ;;		 -> STR_15(22), STR_14(22), STR_13(21), STR_12(21), 
  5932 ;;		 -> STR_9(15), STR_8(32), STR_7(15), STR_6(21), 
  5933 ;;		 -> STR_5(21), STR_4(21), STR_3(22), STR_2(71), 
  5934 ;;		 -> STR_1(40), 
  5935 ;;  ap              1   33[BANK1 ] PTR PTR void 
  5936 ;;		 -> snprintf@ap(1), 
  5937 ;; Auto vars:     Size  Location     Type
  5938 ;;  f               6   38[BANK1 ] struct _IO_FILE
  5939 ;;  cnt             2   36[BANK1 ] int 
  5940 ;; Return value:  Size  Location     Type
  5941 ;;                  2   27[BANK1 ] int 
  5942 ;; Registers used:
  5943 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5944 ;; Tracked objects:
  5945 ;;		On entry : 0/0
  5946 ;;		On exit  : 0/0
  5947 ;;		Unchanged: 0/0
  5948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5949 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5950 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5951 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5952 ;;      Totals:         0       2      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5953 ;;Total ram usage:       19 bytes
  5954 ;; Hardware stack levels used:    1
  5955 ;; Hardware stack levels required when called:    8
  5956 ;; This function calls:
  5957 ;;		_vfprintf
  5958 ;; This function is called by:
  5959 ;;		_snprintf
  5960 ;; This function uses a non-reentrant model
  5961 ;;
  5962                           
  5963                           
  5964                           ;psect for function _vsnprintf
  5965  2AA5                     _vsnprintf:	
  5966                           
  5967                           ;incstack = 0
  5968                           ; Regs used in _vsnprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5969  2AA5  3080               	movlw	128
  5970  2AA6  0021               	movlb	1	; select bank1
  5971  2AA7  023E               	subwf	(vsnprintf@n+1)^(0+128),w
  5972  2AA8  3000               	movlw	0
  5973  2AA9  1903               	skipnz
  5974  2AAA  023D               	subwf	vsnprintf@n^(0+128),w
  5975  2AAB  1C03               	skipc
  5976  2AAC  2AB8               	goto	l8133
  5977  2AAD  304B               	movlw	75
  5978  2AAE  0023               	movlb	3	; select bank3
  5979  2AAF  00C8               	movwf	_errno^(0+384)
  5980  2AB0  3000               	movlw	0
  5981  2AB1  00C9               	movwf	(_errno^(0+384)+1)
  5982  2AB2  30FF               	movlw	255
  5983  2AB3  0021               	movlb	1	; select bank1
  5984  2AB4  00BB               	movwf	?_vsnprintf^(0+128)
  5985  2AB5  30FF               	movlw	255
  5986  2AB6  00BC               	movwf	(?_vsnprintf^(0+128)+1)
  5987  2AB7  0008               	return
  5988  2AB8                     l8133:	
  5989  2AB8  083C               	movf	(vsnprintf@s+1)^(0+128),w
  5990  2AB9  00C7               	movwf	(vsnprintf@f+1)^(0+128)
  5991  2ABA  083B               	movf	vsnprintf@s^(0+128),w
  5992  2ABB  00C6               	movwf	vsnprintf@f^(0+128)
  5993  2ABC  3000               	movlw	0
  5994  2ABD  023E               	subwf	(vsnprintf@n+1)^(0+128),w
  5995  2ABE  3002               	movlw	2
  5996  2ABF  1903               	skipnz
  5997  2AC0  023D               	subwf	vsnprintf@n^(0+128),w
  5998  2AC1  1C03               	skipc
  5999  2AC2  2ACC               	goto	l8139
  6000  2AC3  083D               	movf	vsnprintf@n^(0+128),w
  6001  2AC4  3EFF               	addlw	255
  6002  2AC5  00CA               	movwf	(vsnprintf@f^(0+128)+4)
  6003  2AC6  30FF               	movlw	255
  6004  2AC7  3D3E               	addwfc	(vsnprintf@n+1)^(0+128),w
  6005  2AC8  00CB               	movwf	((vsnprintf@f+1)^(0+128)+4)
  6006  2AC9  01C8               	clrf	(vsnprintf@f^(0+128)+2)
  6007  2ACA  01C9               	clrf	((vsnprintf@f+1)^(0+128)+2)
  6008  2ACB  2AD4               	goto	l8141
  6009  2ACC                     l8139:	
  6010  2ACC  3001               	movlw	1
  6011  2ACD  00CA               	movwf	(vsnprintf@f^(0+128)+4)
  6012  2ACE  3000               	movlw	0
  6013  2ACF  00CB               	movwf	(vsnprintf@f^(0+128)+5)
  6014  2AD0  3001               	movlw	1
  6015  2AD1  00C8               	movwf	(vsnprintf@f^(0+128)+2)
  6016  2AD2  3000               	movlw	0
  6017  2AD3  00C9               	movwf	(vsnprintf@f^(0+128)+3)
  6018  2AD4                     l8141:	
  6019  2AD4  30C6               	movlw	low vsnprintf@f
  6020  2AD5  0020               	movlb	0	; select bank0
  6021  2AD6  00E1               	movwf	vfprintf@fp
  6022  2AD7  3000               	movlw	high vsnprintf@f
  6023  2AD8  00E2               	movwf	vfprintf@fp+1
  6024  2AD9  0021               	movlb	1	; select bank1
  6025  2ADA  0840               	movf	(vsnprintf@fmt+1)^(0+128),w
  6026  2ADB  0020               	movlb	0	; select bank0
  6027  2ADC  00E4               	movwf	vfprintf@fmt+1
  6028  2ADD  0021               	movlb	1	; select bank1
  6029  2ADE  083F               	movf	vsnprintf@fmt^(0+128),w
  6030  2ADF  0020               	movlb	0	; select bank0
  6031  2AE0  00E3               	movwf	vfprintf@fmt
  6032  2AE1  0021               	movlb	1	; select bank1
  6033  2AE2  0841               	movf	vsnprintf@ap^(0+128),w
  6034  2AE3  0020               	movlb	0	; select bank0
  6035  2AE4  00EA               	movwf	??_vsnprintf
  6036  2AE5  086A               	movf	??_vsnprintf,w
  6037  2AE6  00E5               	movwf	vfprintf@ap
  6038  2AE7  31B5  2557  31AA   	fcall	_vfprintf
  6039  2AEA  0020               	movlb	0	; select bank0
  6040  2AEB  0862               	movf	?_vfprintf+1,w
  6041  2AEC  0021               	movlb	1	; select bank1
  6042  2AED  00C5               	movwf	(vsnprintf@cnt+1)^(0+128)
  6043  2AEE  0020               	movlb	0	; select bank0
  6044  2AEF  0861               	movf	?_vfprintf,w
  6045  2AF0  0021               	movlb	1	; select bank1
  6046  2AF1  00C4               	movwf	vsnprintf@cnt^(0+128)
  6047  2AF2  083D               	movf	vsnprintf@n^(0+128),w
  6048  2AF3  043E               	iorwf	(vsnprintf@n+1)^(0+128),w
  6049  2AF4  1D03               	btfss	3,2
  6050  2AF5  1BC5               	btfsc	(vsnprintf@cnt+1)^(0+128),7
  6051  2AF6  2B1D               	goto	l8155
  6052  2AF7  083D               	movf	vsnprintf@n^(0+128),w
  6053  2AF8  3EFF               	addlw	255
  6054  2AF9  0020               	movlb	0	; select bank0
  6055  2AFA  00EA               	movwf	??_vsnprintf
  6056  2AFB  30FF               	movlw	255
  6057  2AFC  0021               	movlb	1	; select bank1
  6058  2AFD  3D3E               	addwfc	(vsnprintf@n+1)^(0+128),w
  6059  2AFE  0020               	movlb	0	; select bank0
  6060  2AFF  00EB               	movwf	??_vsnprintf+1
  6061  2B00  086B               	movf	??_vsnprintf+1,w
  6062  2B01  0021               	movlb	1	; select bank1
  6063  2B02  0245               	subwf	(vsnprintf@cnt+1)^(0+128),w
  6064  2B03  1D03               	skipz
  6065  2B04  2B09               	goto	u11205
  6066  2B05  0020               	movlb	0	; select bank0
  6067  2B06  086A               	movf	??_vsnprintf,w
  6068  2B07  0021               	movlb	1	; select bank1
  6069  2B08  0244               	subwf	vsnprintf@cnt^(0+128),w
  6070  2B09                     u11205:	
  6071  2B09  1C03               	skipc
  6072  2B0A  2B12               	goto	l8151
  6073  2B0B  083D               	movf	vsnprintf@n^(0+128),w
  6074  2B0C  3EFF               	addlw	255
  6075  2B0D  00C2               	movwf	_vsnprintf$1872^(0+128)
  6076  2B0E  30FF               	movlw	255
  6077  2B0F  3D3E               	addwfc	(vsnprintf@n+1)^(0+128),w
  6078  2B10  00C3               	movwf	(_vsnprintf$1872+1)^(0+128)
  6079  2B11  2B16               	goto	l8153
  6080  2B12                     l8151:	
  6081  2B12  0845               	movf	(vsnprintf@cnt+1)^(0+128),w
  6082  2B13  00C3               	movwf	(_vsnprintf$1872+1)^(0+128)
  6083  2B14  0844               	movf	vsnprintf@cnt^(0+128),w
  6084  2B15  00C2               	movwf	_vsnprintf$1872^(0+128)
  6085  2B16                     l8153:	
  6086  2B16  0842               	movf	_vsnprintf$1872^(0+128),w
  6087  2B17  073B               	addwf	vsnprintf@s^(0+128),w
  6088  2B18  0086               	movwf	6
  6089  2B19  0843               	movf	(_vsnprintf$1872+1)^(0+128),w
  6090  2B1A  3D3C               	addwfc	(vsnprintf@s+1)^(0+128),w
  6091  2B1B  0087               	movwf	7
  6092  2B1C  0181               	clrf	1
  6093  2B1D                     l8155:	
  6094  2B1D  0845               	movf	(vsnprintf@cnt+1)^(0+128),w
  6095  2B1E  00BC               	movwf	(?_vsnprintf+1)^(0+128)
  6096  2B1F  0844               	movf	vsnprintf@cnt^(0+128),w
  6097  2B20  00BB               	movwf	?_vsnprintf^(0+128)
  6098  2B21  0008               	return
  6099  2B22                     __end_of_vsnprintf:	
  6100                           
  6101                           	psect	text6
  6102  3557                     __ptext6:	
  6103 ;; *************** function _vfprintf *****************
  6104 ;; Defined at:
  6105 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6106 ;; Parameters:    Size  Location     Type
  6107 ;;  fp              2   65[BANK0 ] PTR struct _IO_FILE
  6108 ;;		 -> vsnprintf@f(6), 
  6109 ;;  fmt             2   67[BANK0 ] PTR const unsigned char 
  6110 ;;		 -> STR_23(18), STR_22(18), STR_21(19), STR_20(20), 
  6111 ;;		 -> STR_19(20), STR_18(21), STR_17(21), STR_16(21), 
  6112 ;;		 -> STR_15(22), STR_14(22), STR_13(21), STR_12(21), 
  6113 ;;		 -> STR_9(15), STR_8(32), STR_7(15), STR_6(21), 
  6114 ;;		 -> STR_5(21), STR_4(21), STR_3(22), STR_2(71), 
  6115 ;;		 -> STR_1(40), 
  6116 ;;  ap              1   69[BANK0 ] PTR PTR void 
  6117 ;;		 -> snprintf@ap(1), 
  6118 ;; Auto vars:     Size  Location     Type
  6119 ;;  cfmt            2   72[BANK0 ] PTR unsigned char 
  6120 ;;		 -> STR_23(18), STR_22(18), STR_21(19), STR_20(20), 
  6121 ;;		 -> STR_19(20), STR_18(21), STR_17(21), STR_16(21), 
  6122 ;;		 -> STR_15(22), STR_14(22), STR_13(21), STR_12(21), 
  6123 ;;		 -> STR_9(15), STR_8(32), STR_7(15), STR_6(21), 
  6124 ;;		 -> STR_5(21), STR_4(21), STR_3(22), STR_2(71), 
  6125 ;;		 -> STR_1(40), 
  6126 ;; Return value:  Size  Location     Type
  6127 ;;                  2   65[BANK0 ] int 
  6128 ;; Registers used:
  6129 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6130 ;; Tracked objects:
  6131 ;;		On entry : 0/0
  6132 ;;		On exit  : 0/0
  6133 ;;		Unchanged: 0/0
  6134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6135 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6136 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6137 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6138 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6139 ;;Total ram usage:        9 bytes
  6140 ;; Hardware stack levels used:    1
  6141 ;; Hardware stack levels required when called:    7
  6142 ;; This function calls:
  6143 ;;		_vfpfcnvrt
  6144 ;; This function is called by:
  6145 ;;		_vsnprintf
  6146 ;; This function uses a non-reentrant model
  6147 ;;
  6148                           
  6149                           
  6150                           ;psect for function _vfprintf
  6151  3557                     _vfprintf:	
  6152                           
  6153                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  6154                           
  6155                           ;incstack = 0
  6156                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6157  3557  0020               	movlb	0	; select bank0
  6158  3558  0864               	movf	vfprintf@fmt+1,w
  6159  3559  00E9               	movwf	vfprintf@cfmt+1
  6160  355A  0863               	movf	vfprintf@fmt,w
  6161  355B  00E8               	movwf	vfprintf@cfmt
  6162                           
  6163                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  6164  355C  0023               	movlb	3	; select bank3
  6165  355D  01CA               	clrf	_nout^(0+384)
  6166  355E  01CB               	clrf	(_nout+1)^(0+384)
  6167  355F                     l7555:	
  6168                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  6169                           
  6170                           
  6171                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  6172  355F  0020               	movlb	0	; select bank0
  6173  3560  0868               	movf	vfprintf@cfmt,w
  6174  3561  0084               	movwf	4
  6175  3562  0869               	movf	vfprintf@cfmt+1,w
  6176  3563  0085               	movwf	5
  6177  3564  0012               	moviw fsr0++
  6178  3565  1903               	btfsc	3,2
  6179  3566  2D7F               	goto	l7557
  6180                           
  6181                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  6182  3567  0862               	movf	vfprintf@fp+1,w
  6183  3568  00D8               	movwf	vfpfcnvrt@fp+1
  6184  3569  0861               	movf	vfprintf@fp,w
  6185  356A  00D7               	movwf	vfpfcnvrt@fp
  6186  356B  3068               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  6187  356C  00E6               	movwf	??_vfprintf
  6188  356D  0866               	movf	??_vfprintf,w
  6189  356E  00D9               	movwf	vfpfcnvrt@fmt
  6190  356F  0865               	movf	vfprintf@ap,w
  6191  3570  00E7               	movwf	??_vfprintf+1
  6192  3571  0867               	movf	??_vfprintf+1,w
  6193  3572  00DA               	movwf	vfpfcnvrt@ap
  6194  3573  319E  265C  31B5   	fcall	_vfpfcnvrt
  6195  3576  0020               	movlb	0	; select bank0
  6196  3577  0857               	movf	?_vfpfcnvrt,w
  6197  3578  0023               	movlb	3	; select bank3
  6198  3579  07CA               	addwf	_nout^(0+384),f
  6199  357A  0020               	movlb	0	; select bank0
  6200  357B  0858               	movf	?_vfpfcnvrt+1,w
  6201  357C  0023               	movlb	3	; select bank3
  6202  357D  3DCB               	addwfc	(_nout+1)^(0+384),f
  6203  357E  2D5F               	goto	l7555
  6204  357F                     l7557:	
  6205                           
  6206                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  6207  357F  0023               	movlb	3	; select bank3
  6208  3580  084B               	movf	(_nout+1)^(0+384),w
  6209  3581  0020               	movlb	0	; select bank0
  6210  3582  00E2               	movwf	?_vfprintf+1
  6211  3583  0023               	movlb	3	; select bank3
  6212  3584  084A               	movf	_nout^(0+384),w
  6213  3585  0020               	movlb	0	; select bank0
  6214  3586  00E1               	movwf	?_vfprintf
  6215  3587  0008               	return
  6216  3588                     __end_of_vfprintf:	
  6217                           
  6218                           	psect	text7
  6219  1E5C                     __ptext7:	
  6220 ;; *************** function _vfpfcnvrt *****************
  6221 ;; Defined at:
  6222 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6223 ;; Parameters:    Size  Location     Type
  6224 ;;  fp              2   55[BANK0 ] PTR struct _IO_FILE
  6225 ;;		 -> vsnprintf@f(6), 
  6226 ;;  fmt             1   57[BANK0 ] PTR PTR unsigned char 
  6227 ;;		 -> vfprintf@cfmt(2), 
  6228 ;;  ap              1   58[BANK0 ] PTR PTR void 
  6229 ;;		 -> snprintf@ap(1), 
  6230 ;; Auto vars:     Size  Location     Type
  6231 ;;  llu             8   19[BANK1 ] unsigned long long 
  6232 ;;  ll              8    8[BANK1 ] long long 
  6233 ;;  f               4    0        long long 
  6234 ;;  ct              3    0        unsigned char [3]
  6235 ;;  vp              2   16[BANK1 ] PTR void 
  6236 ;;		 -> ?_snprintf(2), sp__logf(4), adcGain(2), 
  6237 ;;  done            2    2[BANK1 ] int 
  6238 ;;  cp              2    0[BANK1 ] PTR unsigned char 
  6239 ;;		 -> ?_snprintf(2), sp__logf(4), adcGain(2), 
  6240 ;;  i               2    0        int 
  6241 ;;  c               1   18[BANK1 ] unsigned char 
  6242 ;; Return value:  Size  Location     Type
  6243 ;;                  2   55[BANK0 ] int 
  6244 ;; Registers used:
  6245 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6246 ;; Tracked objects:
  6247 ;;		On entry : 0/0
  6248 ;;		On exit  : 0/0
  6249 ;;		Unchanged: 0/0
  6250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6251 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6252 ;;      Locals:         0       0      27       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6253 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6254 ;;      Totals:         0      10      27       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6255 ;;Total ram usage:       37 bytes
  6256 ;; Hardware stack levels used:    1
  6257 ;; Hardware stack levels required when called:    6
  6258 ;; This function calls:
  6259 ;;		_atoi
  6260 ;;		_ctoa
  6261 ;;		_dtoa
  6262 ;;		_fputc
  6263 ;;		_isdigit
  6264 ;;		_otoa
  6265 ;;		_stoa
  6266 ;;		_strncmp
  6267 ;;		_utoa
  6268 ;;		_xtoa
  6269 ;; This function is called by:
  6270 ;;		_vfprintf
  6271 ;; This function uses a non-reentrant model
  6272 ;;
  6273                           
  6274                           
  6275                           ;psect for function _vfpfcnvrt
  6276  1E5C                     _vfpfcnvrt:	
  6277                           
  6278                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  6279                           
  6280                           ;incstack = 0
  6281                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6282  1E5C  0020               	movlb	0	; select bank0
  6283  1E5D  0859               	movf	vfpfcnvrt@fmt,w
  6284  1E5E  0086               	movwf	6
  6285  1E5F  0187               	clrf	7
  6286  1E60  3F40               	moviw [0]fsr1
  6287  1E61  00DB               	movwf	??_vfpfcnvrt
  6288  1E62  3F41               	moviw [1]fsr1
  6289  1E63  00DC               	movwf	??_vfpfcnvrt+1
  6290  1E64  085B               	movf	??_vfpfcnvrt,w
  6291  1E65  0084               	movwf	4
  6292  1E66  085C               	movf	??_vfpfcnvrt+1,w
  6293  1E67  0085               	movwf	5
  6294  1E68  0012               	moviw fsr0++
  6295  1E69  3A25               	xorlw	37
  6296  1E6A  1D03               	btfss	3,2
  6297  1E6B  2FFE               	goto	L7
  6298                           
  6299                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  6300  1E6C  0859               	movf	vfpfcnvrt@fmt,w
  6301  1E6D  0086               	movwf	6
  6302  1E6E  0187               	clrf	7
  6303  1E6F  3001               	movlw	1
  6304  1E70  0781               	addwf	1,f
  6305  1E71  3141               	addfsr 1,1
  6306  1E72  1803               	skipnc
  6307  1E73  0A81               	incf	1,f
  6308                           
  6309                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  6310  1E74  0022               	movlb	2	; select bank2
  6311  1E75  01E5               	clrf	_width^(0+256)
  6312  1E76  01E6               	clrf	(_width+1)^(0+256)
  6313  1E77  01E9               	clrf	_flags^(0+256)
  6314  1E78  01EA               	clrf	(_flags+1)^(0+256)
  6315                           
  6316                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  6317  1E79  30FF               	movlw	255
  6318  1E7A  00E7               	movwf	_prec^(0+256)
  6319  1E7B  30FF               	movlw	255
  6320  1E7C  00E8               	movwf	(_prec^(0+256)+1)
  6321                           
  6322                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  6323  1E7D  0021               	movlb	1	; select bank1
  6324  1E7E  01A2               	clrf	vfpfcnvrt@done^(0+128)
  6325  1E7F  01A3               	clrf	(vfpfcnvrt@done+1)^(0+128)
  6326                           
  6327                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  6328  1E80  2E9E               	goto	l6983
  6329  1E81                     l847:	
  6330                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 691:       
      +                                    case '-' :
  6331                           
  6332                           
  6333                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  6334  1E81  0022               	movlb	2	; select bank2
  6335  1E82  1469               	bsf	_flags^(0+256),0
  6336  1E83                     l6967:	
  6337                           
  6338                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  6339  1E83  0020               	movlb	0	; select bank0
  6340  1E84  0859               	movf	vfpfcnvrt@fmt,w
  6341  1E85  0086               	movwf	6
  6342  1E86  0187               	clrf	7
  6343  1E87  3001               	movlw	1
  6344  1E88  0781               	addwf	1,f
  6345  1E89  3141               	addfsr 1,1
  6346  1E8A  1803               	skipnc
  6347  1E8B  0A81               	incf	1,f
  6348                           
  6349                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  6350  1E8C  2E9E               	goto	l6983
  6351  1E8D                     l849:	
  6352                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 695:       
      +                                    case '0' :
  6353                           
  6354                           
  6355                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  6356  1E8D  0022               	movlb	2	; select bank2
  6357  1E8E  14E9               	bsf	_flags^(0+256),1
  6358  1E8F  2E83               	goto	l6967
  6359  1E90                     l850:	
  6360                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 699:       
      +                                    case '+' :
  6361                           
  6362                           
  6363                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  6364  1E90  0022               	movlb	2	; select bank2
  6365  1E91  1569               	bsf	_flags^(0+256),2
  6366  1E92  2E83               	goto	l6967
  6367  1E93                     l851:	
  6368                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 703:       
      +                                    case ' ' :
  6369                           
  6370                           
  6371                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  6372  1E93  0022               	movlb	2	; select bank2
  6373  1E94  15E9               	bsf	_flags^(0+256),3
  6374  1E95  2E83               	goto	l6967
  6375  1E96                     l852:	
  6376                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 707:       
      +                                    case '#' :
  6377                           
  6378                           
  6379                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  6380  1E96  0022               	movlb	2	; select bank2
  6381  1E97  1669               	bsf	_flags^(0+256),4
  6382  1E98  2E83               	goto	l6967
  6383  1E99                     l6977:	
  6384                           
  6385                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  6386  1E99  3001               	movlw	1
  6387  1E9A  0021               	movlb	1	; select bank1
  6388  1E9B  00A2               	movwf	vfpfcnvrt@done^(0+128)
  6389  1E9C  3000               	movlw	0
  6390  1E9D  00A3               	movwf	(vfpfcnvrt@done^(0+128)+1)
  6391  1E9E                     l6983:	
  6392                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  6393                           
  6394                           
  6395                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  6396  1E9E  0021               	movlb	1	; select bank1
  6397  1E9F  0822               	movf	vfpfcnvrt@done^(0+128),w
  6398  1EA0  0423               	iorwf	(vfpfcnvrt@done+1)^(0+128),w
  6399  1EA1  1D03               	btfss	3,2
  6400  1EA2  2EC9               	goto	l854
  6401  1EA3  0020               	movlb	0	; select bank0
  6402  1EA4  0859               	movf	vfpfcnvrt@fmt,w
  6403  1EA5  0086               	movwf	6
  6404  1EA6  0187               	clrf	7
  6405  1EA7  3F40               	moviw [0]fsr1
  6406  1EA8  00DB               	movwf	??_vfpfcnvrt
  6407  1EA9  3F41               	moviw [1]fsr1
  6408  1EAA  00DC               	movwf	??_vfpfcnvrt+1
  6409  1EAB  085B               	movf	??_vfpfcnvrt,w
  6410  1EAC  0084               	movwf	4
  6411  1EAD  085C               	movf	??_vfpfcnvrt+1,w
  6412  1EAE  0085               	movwf	5
  6413  1EAF  0800               	movf	0,w	;code access
  6414  1EB0  00DD               	movwf	??_vfpfcnvrt+2
  6415  1EB1  01DE               	clrf	??_vfpfcnvrt+3
  6416                           
  6417                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6418                           ; Switch size 1, requested type "simple"
  6419                           ; Number of cases is 1, Range of values is 0 to 0
  6420                           ; switch strategies available:
  6421                           ; Name         Instructions Cycles
  6422                           ; simple_byte            4     3 (average)
  6423                           ; direct_byte            8     6 (fixed)
  6424                           ; jumptable            260     6 (fixed)
  6425                           ;	Chosen strategy is simple_byte
  6426  1EB2  085E               	movf	??_vfpfcnvrt+3,w
  6427  1EB3  3A00               	xorlw	0	; case 0
  6428  1EB4  1903               	skipnz
  6429  1EB5  2EB7               	goto	l8781
  6430  1EB6  2E99               	goto	l6977
  6431  1EB7                     l8781:	
  6432                           
  6433                           ; Switch size 1, requested type "simple"
  6434                           ; Number of cases is 5, Range of values is 32 to 48
  6435                           ; switch strategies available:
  6436                           ; Name         Instructions Cycles
  6437                           ; simple_byte           16     9 (average)
  6438                           ; direct_byte           43     9 (fixed)
  6439                           ; jumptable            263     9 (fixed)
  6440                           ;	Chosen strategy is simple_byte
  6441  1EB7  085D               	movf	??_vfpfcnvrt+2,w
  6442  1EB8  3A20               	xorlw	32	; case 32
  6443  1EB9  1903               	skipnz
  6444  1EBA  2E93               	goto	l851
  6445  1EBB  3A03               	xorlw	3	; case 35
  6446  1EBC  1903               	skipnz
  6447  1EBD  2E96               	goto	l852
  6448  1EBE  3A08               	xorlw	8	; case 43
  6449  1EBF  1903               	skipnz
  6450  1EC0  2E90               	goto	l850
  6451  1EC1  3A06               	xorlw	6	; case 45
  6452  1EC2  1903               	skipnz
  6453  1EC3  2E81               	goto	l847
  6454  1EC4  3A1D               	xorlw	29	; case 48
  6455  1EC5  1903               	skipnz
  6456  1EC6  2E8D               	goto	l849
  6457  1EC7  2E99               	goto	l6977
  6458  1EC8  2E9E               	goto	l6983
  6459  1EC9                     l854:	
  6460                           
  6461                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  6462  1EC9  0022               	movlb	2	; select bank2
  6463  1ECA  1C69               	btfss	_flags^(0+256),0
  6464  1ECB  2ED0               	goto	l6987
  6465                           
  6466                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  6467  1ECC  30FD               	movlw	253
  6468  1ECD  05E9               	andwf	_flags^(0+256),f
  6469  1ECE  30FF               	movlw	255
  6470  1ECF  05EA               	andwf	(_flags+1)^(0+256),f
  6471  1ED0                     l6987:	
  6472                           
  6473                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  6474  1ED0  0020               	movlb	0	; select bank0
  6475  1ED1  0859               	movf	vfpfcnvrt@fmt,w
  6476  1ED2  0086               	movwf	6
  6477  1ED3  0187               	clrf	7
  6478  1ED4  3F40               	moviw [0]fsr1
  6479  1ED5  00DB               	movwf	??_vfpfcnvrt
  6480  1ED6  3F41               	moviw [1]fsr1
  6481  1ED7  00DC               	movwf	??_vfpfcnvrt+1
  6482  1ED8  085B               	movf	??_vfpfcnvrt,w
  6483  1ED9  0084               	movwf	4
  6484  1EDA  085C               	movf	??_vfpfcnvrt+1,w
  6485  1EDB  0085               	movwf	5
  6486  1EDC  0012               	moviw fsr0++
  6487  1EDD  3A2A               	xorlw	42
  6488  1EDE  1D03               	btfss	3,2
  6489  1EDF  2EFE               	goto	l6999
  6490                           
  6491                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  6492  1EE0  0859               	movf	vfpfcnvrt@fmt,w
  6493  1EE1  0086               	movwf	6
  6494  1EE2  0187               	clrf	7
  6495  1EE3  3001               	movlw	1
  6496  1EE4  0781               	addwf	1,f
  6497  1EE5  3141               	addfsr 1,1
  6498  1EE6  1803               	skipnc
  6499  1EE7  0A81               	incf	1,f
  6500                           
  6501                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  6502  1EE8  085A               	movf	vfpfcnvrt@ap,w
  6503  1EE9  0086               	movwf	6
  6504  1EEA  0187               	clrf	7
  6505  1EEB  0801               	movf	1,w
  6506  1EEC  0084               	movwf	4
  6507  1EED  0185               	clrf	5
  6508  1EEE  3002               	movlw	2
  6509  1EEF  0781               	addwf	1,f
  6510  1EF0  3F00               	moviw [0]fsr0
  6511  1EF1  0022               	movlb	2	; select bank2
  6512  1EF2  00E5               	movwf	_width^(0+256)
  6513  1EF3  3F01               	moviw [1]fsr0
  6514  1EF4  00E6               	movwf	(_width+1)^(0+256)
  6515                           
  6516                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  6517  1EF5  1FE6               	btfss	(_width+1)^(0+256),7
  6518  1EF6  2F41               	goto	l7009
  6519                           
  6520                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  6521  1EF7  1469               	bsf	_flags^(0+256),0
  6522                           
  6523                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  6524  1EF8  09E5               	comf	_width^(0+256),f
  6525  1EF9  09E6               	comf	(_width+1)^(0+256),f
  6526  1EFA  0AE5               	incf	_width^(0+256),f
  6527  1EFB  1903               	skipnz
  6528  1EFC  0AE6               	incf	(_width+1)^(0+256),f
  6529  1EFD  2F41               	goto	l7009
  6530  1EFE                     l6999:	
  6531                           
  6532                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  6533  1EFE  0859               	movf	vfpfcnvrt@fmt,w
  6534  1EFF  0086               	movwf	6
  6535  1F00  0187               	clrf	7
  6536  1F01  3F40               	moviw [0]fsr1
  6537  1F02  00F7               	movwf	atoi@s
  6538  1F03  3F41               	moviw [1]fsr1
  6539  1F04  00F8               	movwf	atoi@s+1
  6540  1F05  31AB  23A4  319E   	fcall	_atoi
  6541  1F08  0878               	movf	?_atoi+1,w
  6542  1F09  0022               	movlb	2	; select bank2
  6543  1F0A  00E6               	movwf	(_width+1)^(0+256)
  6544  1F0B  0877               	movf	?_atoi,w
  6545  1F0C  00E5               	movwf	_width^(0+256)
  6546                           
  6547                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6548  1F0D  2F17               	goto	l7003
  6549  1F0E                     l7001:	
  6550                           
  6551                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  6552  1F0E  0020               	movlb	0	; select bank0
  6553  1F0F  0859               	movf	vfpfcnvrt@fmt,w
  6554  1F10  0086               	movwf	6
  6555  1F11  0187               	clrf	7
  6556  1F12  3001               	movlw	1
  6557  1F13  0781               	addwf	1,f
  6558  1F14  3141               	addfsr 1,1
  6559  1F15  1803               	skipnc
  6560  1F16  0A81               	incf	1,f
  6561  1F17                     l7003:	
  6562  1F17  0020               	movlb	0	; select bank0
  6563  1F18  0859               	movf	vfpfcnvrt@fmt,w
  6564  1F19  0086               	movwf	6
  6565  1F1A  0187               	clrf	7
  6566  1F1B  3F40               	moviw [0]fsr1
  6567  1F1C  00DB               	movwf	??_vfpfcnvrt
  6568  1F1D  3F41               	moviw [1]fsr1
  6569  1F1E  00DC               	movwf	??_vfpfcnvrt+1
  6570  1F1F  085B               	movf	??_vfpfcnvrt,w
  6571  1F20  0084               	movwf	4
  6572  1F21  085C               	movf	??_vfpfcnvrt+1,w
  6573  1F22  0085               	movwf	5
  6574  1F23  0800               	movf	0,w	;code access
  6575  1F24  3ED0               	addlw	208
  6576  1F25  00DD               	movwf	??_vfpfcnvrt+2
  6577  1F26  30FF               	movlw	255
  6578  1F27  1803               	skipnc
  6579  1F28  3000               	movlw	0
  6580  1F29  00DE               	movwf	??_vfpfcnvrt+3
  6581  1F2A  3000               	movlw	0
  6582  1F2B  025E               	subwf	??_vfpfcnvrt+3,w
  6583  1F2C  300A               	movlw	10
  6584  1F2D  1903               	skipnz
  6585  1F2E  025D               	subwf	??_vfpfcnvrt+2,w
  6586  1F2F  1803               	btfsc	3,0
  6587  1F30  2F33               	goto	u9130
  6588  1F31  3001               	movlw	1
  6589  1F32  2F34               	goto	u9140
  6590  1F33                     u9130:	
  6591  1F33  3000               	movlw	0
  6592  1F34                     u9140:	
  6593  1F34  00DF               	movwf	??_vfpfcnvrt+4
  6594  1F35  01E0               	clrf	??_vfpfcnvrt+5
  6595  1F36  085F               	movf	??_vfpfcnvrt+4,w
  6596  1F37  0021               	movlb	1	; select bank1
  6597  1F38  00A4               	movwf	_vfpfcnvrt$1300^(0+128)
  6598  1F39  0020               	movlb	0	; select bank0
  6599  1F3A  0860               	movf	??_vfpfcnvrt+5,w
  6600  1F3B  0021               	movlb	1	; select bank1
  6601  1F3C  00A5               	movwf	(_vfpfcnvrt$1300+1)^(0+128)
  6602  1F3D  0824               	movf	_vfpfcnvrt$1300^(0+128),w
  6603  1F3E  0425               	iorwf	(_vfpfcnvrt$1300+1)^(0+128),w
  6604  1F3F  1D03               	btfss	3,2
  6605  1F40  2F0E               	goto	l7001
  6606  1F41                     l7009:	
  6607                           
  6608                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  6609  1F41  0020               	movlb	0	; select bank0
  6610  1F42  0859               	movf	vfpfcnvrt@fmt,w
  6611  1F43  0086               	movwf	6
  6612  1F44  0187               	clrf	7
  6613  1F45  3F40               	moviw [0]fsr1
  6614  1F46  00DB               	movwf	??_vfpfcnvrt
  6615  1F47  3F41               	moviw [1]fsr1
  6616  1F48  00DC               	movwf	??_vfpfcnvrt+1
  6617  1F49  085B               	movf	??_vfpfcnvrt,w
  6618  1F4A  0084               	movwf	4
  6619  1F4B  085C               	movf	??_vfpfcnvrt+1,w
  6620  1F4C  0085               	movwf	5
  6621  1F4D  0012               	moviw fsr0++
  6622  1F4E  3A2E               	xorlw	46
  6623  1F4F  1D03               	btfss	3,2
  6624  1F50  2FC5               	goto	l7031
  6625                           
  6626                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  6627  1F51  0022               	movlb	2	; select bank2
  6628  1F52  01E7               	clrf	_prec^(0+256)
  6629  1F53  01E8               	clrf	(_prec+1)^(0+256)
  6630                           
  6631                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  6632  1F54  0020               	movlb	0	; select bank0
  6633  1F55  0859               	movf	vfpfcnvrt@fmt,w
  6634  1F56  0086               	movwf	6
  6635  1F57  0187               	clrf	7
  6636  1F58  3001               	movlw	1
  6637  1F59  0781               	addwf	1,f
  6638  1F5A  3141               	addfsr 1,1
  6639  1F5B  1803               	skipnc
  6640  1F5C  0A81               	incf	1,f
  6641                           
  6642                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  6643  1F5D  0859               	movf	vfpfcnvrt@fmt,w
  6644  1F5E  0086               	movwf	6
  6645  1F5F  0187               	clrf	7
  6646  1F60  3F40               	moviw [0]fsr1
  6647  1F61  00DB               	movwf	??_vfpfcnvrt
  6648  1F62  3F41               	moviw [1]fsr1
  6649  1F63  00DC               	movwf	??_vfpfcnvrt+1
  6650  1F64  085B               	movf	??_vfpfcnvrt,w
  6651  1F65  0084               	movwf	4
  6652  1F66  085C               	movf	??_vfpfcnvrt+1,w
  6653  1F67  0085               	movwf	5
  6654  1F68  0012               	moviw fsr0++
  6655  1F69  3A2A               	xorlw	42
  6656  1F6A  1D03               	btfss	3,2
  6657  1F6B  2F82               	goto	l7021
  6658                           
  6659                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  6660  1F6C  0859               	movf	vfpfcnvrt@fmt,w
  6661  1F6D  0086               	movwf	6
  6662  1F6E  0187               	clrf	7
  6663  1F6F  3001               	movlw	1
  6664  1F70  0781               	addwf	1,f
  6665  1F71  3141               	addfsr 1,1
  6666  1F72  1803               	skipnc
  6667  1F73  0A81               	incf	1,f
  6668                           
  6669                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  6670  1F74  085A               	movf	vfpfcnvrt@ap,w
  6671  1F75  0086               	movwf	6
  6672  1F76  0187               	clrf	7
  6673  1F77  0801               	movf	1,w
  6674  1F78  0084               	movwf	4
  6675  1F79  0185               	clrf	5
  6676  1F7A  3002               	movlw	2
  6677  1F7B  0781               	addwf	1,f
  6678  1F7C  3F00               	moviw [0]fsr0
  6679  1F7D  0022               	movlb	2	; select bank2
  6680  1F7E  00E7               	movwf	_prec^(0+256)
  6681  1F7F  3F01               	moviw [1]fsr0
  6682  1F80  00E8               	movwf	(_prec+1)^(0+256)
  6683                           
  6684                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  6685  1F81  2FC5               	goto	l7031
  6686  1F82                     l7021:	
  6687                           
  6688                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  6689  1F82  0859               	movf	vfpfcnvrt@fmt,w
  6690  1F83  0086               	movwf	6
  6691  1F84  0187               	clrf	7
  6692  1F85  3F40               	moviw [0]fsr1
  6693  1F86  00F7               	movwf	atoi@s
  6694  1F87  3F41               	moviw [1]fsr1
  6695  1F88  00F8               	movwf	atoi@s+1
  6696  1F89  31AB  23A4  319E   	fcall	_atoi
  6697  1F8C  0878               	movf	?_atoi+1,w
  6698  1F8D  0022               	movlb	2	; select bank2
  6699  1F8E  00E8               	movwf	(_prec+1)^(0+256)
  6700  1F8F  0877               	movf	?_atoi,w
  6701  1F90  00E7               	movwf	_prec^(0+256)
  6702                           
  6703                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6704  1F91  2F9B               	goto	l7025
  6705  1F92                     l7023:	
  6706                           
  6707                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  6708  1F92  0020               	movlb	0	; select bank0
  6709  1F93  0859               	movf	vfpfcnvrt@fmt,w
  6710  1F94  0086               	movwf	6
  6711  1F95  0187               	clrf	7
  6712  1F96  3001               	movlw	1
  6713  1F97  0781               	addwf	1,f
  6714  1F98  3141               	addfsr 1,1
  6715  1F99  1803               	skipnc
  6716  1F9A  0A81               	incf	1,f
  6717  1F9B                     l7025:	
  6718  1F9B  0020               	movlb	0	; select bank0
  6719  1F9C  0859               	movf	vfpfcnvrt@fmt,w
  6720  1F9D  0086               	movwf	6
  6721  1F9E  0187               	clrf	7
  6722  1F9F  3F40               	moviw [0]fsr1
  6723  1FA0  00DB               	movwf	??_vfpfcnvrt
  6724  1FA1  3F41               	moviw [1]fsr1
  6725  1FA2  00DC               	movwf	??_vfpfcnvrt+1
  6726  1FA3  085B               	movf	??_vfpfcnvrt,w
  6727  1FA4  0084               	movwf	4
  6728  1FA5  085C               	movf	??_vfpfcnvrt+1,w
  6729  1FA6  0085               	movwf	5
  6730  1FA7  0800               	movf	0,w	;code access
  6731  1FA8  3ED0               	addlw	208
  6732  1FA9  00DD               	movwf	??_vfpfcnvrt+2
  6733  1FAA  30FF               	movlw	255
  6734  1FAB  1803               	skipnc
  6735  1FAC  3000               	movlw	0
  6736  1FAD  00DE               	movwf	??_vfpfcnvrt+3
  6737  1FAE  3000               	movlw	0
  6738  1FAF  025E               	subwf	??_vfpfcnvrt+3,w
  6739  1FB0  300A               	movlw	10
  6740  1FB1  1903               	skipnz
  6741  1FB2  025D               	subwf	??_vfpfcnvrt+2,w
  6742  1FB3  1803               	btfsc	3,0
  6743  1FB4  2FB7               	goto	u9180
  6744  1FB5  3001               	movlw	1
  6745  1FB6  2FB8               	goto	u9190
  6746  1FB7                     u9180:	
  6747  1FB7  3000               	movlw	0
  6748  1FB8                     u9190:	
  6749  1FB8  00DF               	movwf	??_vfpfcnvrt+4
  6750  1FB9  01E0               	clrf	??_vfpfcnvrt+5
  6751  1FBA  085F               	movf	??_vfpfcnvrt+4,w
  6752  1FBB  0021               	movlb	1	; select bank1
  6753  1FBC  00A6               	movwf	_vfpfcnvrt$1301^(0+128)
  6754  1FBD  0020               	movlb	0	; select bank0
  6755  1FBE  0860               	movf	??_vfpfcnvrt+5,w
  6756  1FBF  0021               	movlb	1	; select bank1
  6757  1FC0  00A7               	movwf	(_vfpfcnvrt$1301+1)^(0+128)
  6758  1FC1  0826               	movf	_vfpfcnvrt$1301^(0+128),w
  6759  1FC2  0427               	iorwf	(_vfpfcnvrt$1301+1)^(0+128),w
  6760  1FC3  1D03               	btfss	3,2
  6761  1FC4  2F92               	goto	l7023
  6762  1FC5                     l7031:	
  6763                           
  6764                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  6765  1FC5  0020               	movlb	0	; select bank0
  6766  1FC6  0859               	movf	vfpfcnvrt@fmt,w
  6767  1FC7  0086               	movwf	6
  6768  1FC8  0187               	clrf	7
  6769  1FC9  3F40               	moviw [0]fsr1
  6770  1FCA  00DB               	movwf	??_vfpfcnvrt
  6771  1FCB  3F41               	moviw [1]fsr1
  6772  1FCC  00DC               	movwf	??_vfpfcnvrt+1
  6773  1FCD  085B               	movf	??_vfpfcnvrt,w
  6774  1FCE  0084               	movwf	4
  6775  1FCF  085C               	movf	??_vfpfcnvrt+1,w
  6776  1FD0  0085               	movwf	5
  6777  1FD1  0012               	moviw fsr0++
  6778  1FD2  3A63               	xorlw	99
  6779  1FD3  31A4  1D03         	btfss	3,2
  6780  1FD5  2CE0               	goto	l7041
  6781                           
  6782                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  6783  1FD6  0859               	movf	vfpfcnvrt@fmt,w
  6784  1FD7  0086               	movwf	6
  6785  1FD8  0187               	clrf	7
  6786  1FD9  3001               	movlw	1
  6787  1FDA  0781               	addwf	1,f
  6788  1FDB  3141               	addfsr 1,1
  6789  1FDC  1803               	skipnc
  6790  1FDD  0A81               	incf	1,f
  6791                           
  6792                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6793  1FDE  085A               	movf	vfpfcnvrt@ap,w
  6794  1FDF  0086               	movwf	6
  6795  1FE0  0187               	clrf	7
  6796  1FE1  0801               	movf	1,w
  6797  1FE2  0084               	movwf	4
  6798  1FE3  0185               	clrf	5
  6799  1FE4  3002               	movlw	2
  6800  1FE5  0781               	addwf	1,f
  6801  1FE6  0800               	movf	0,w
  6802  1FE7  00DB               	movwf	??_vfpfcnvrt
  6803  1FE8  085B               	movf	??_vfpfcnvrt,w
  6804  1FE9  0021               	movlb	1	; select bank1
  6805  1FEA  00B2               	movwf	vfpfcnvrt@c^(0+128)
  6806                           
  6807                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  6808  1FEB  0020               	movlb	0	; select bank0
  6809  1FEC  0858               	movf	vfpfcnvrt@fp+1,w
  6810  1FED  00B1               	movwf	ctoa@fp+1
  6811  1FEE  0857               	movf	vfpfcnvrt@fp,w
  6812  1FEF  00B0               	movwf	ctoa@fp
  6813  1FF0  0021               	movlb	1	; select bank1
  6814  1FF1  0832               	movf	vfpfcnvrt@c^(0+128),w
  6815  1FF2  0020               	movlb	0	; select bank0
  6816  1FF3  00DB               	movwf	??_vfpfcnvrt
  6817  1FF4  085B               	movf	??_vfpfcnvrt,w
  6818  1FF5  00B2               	movwf	ctoa@c
  6819  1FF6  31B5  2526         	fcall	_ctoa
  6820  1FF8  0020               	movlb	0	; select bank0
  6821  1FF9  0831               	movf	?_ctoa+1,w
  6822  1FFA  00D8               	movwf	?_vfpfcnvrt+1
  6823  1FFB  0830               	movf	?_ctoa,w
  6824  1FFC  00D7               	movwf	?_vfpfcnvrt
  6825  1FFD  0008               	return
  6826  1FFE                     L7:	
  6827  1FFE                     L6:	
  6828  1FFE  318F  2FDD         	ljmp	l7309
  6829                           
  6830                           	psect	text8
  6831  19F2                     __ptext8:	
  6832 ;; *************** function _xtoa *****************
  6833 ;; Defined at:
  6834 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6835 ;; Parameters:    Size  Location     Type
  6836 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  6837 ;;		 -> vsnprintf@f(6), 
  6838 ;;  d               8   18[BANK0 ] unsigned long long 
  6839 ;;  x               1   26[BANK0 ] unsigned char 
  6840 ;; Auto vars:     Size  Location     Type
  6841 ;;  n               8   43[BANK0 ] unsigned long long 
  6842 ;;  c               2   53[BANK0 ] int 
  6843 ;;  i               2   51[BANK0 ] int 
  6844 ;;  w               2   41[BANK0 ] int 
  6845 ;;  p               2   39[BANK0 ] int 
  6846 ;; Return value:  Size  Location     Type
  6847 ;;                  2   16[BANK0 ] int 
  6848 ;; Registers used:
  6849 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6850 ;; Tracked objects:
  6851 ;;		On entry : 0/0
  6852 ;;		On exit  : 0/0
  6853 ;;		Unchanged: 0/0
  6854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6855 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6856 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6857 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6858 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6859 ;;Total ram usage:       39 bytes
  6860 ;; Hardware stack levels used:    1
  6861 ;; Hardware stack levels required when called:    5
  6862 ;; This function calls:
  6863 ;;		_isalpha
  6864 ;;		_isupper
  6865 ;;		_pad
  6866 ;;		_toupper
  6867 ;; This function is called by:
  6868 ;;		_vfpfcnvrt
  6869 ;; This function uses a non-reentrant model
  6870 ;;
  6871                           
  6872                           
  6873                           ;psect for function _xtoa
  6874  19F2                     _xtoa:	
  6875                           
  6876                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  6877                           
  6878                           ;incstack = 0
  6879                           ; Regs used in _xtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6880  19F2  0022               	movlb	2	; select bank2
  6881  19F3  1BE8               	btfsc	(_prec+1)^(0+256),7
  6882  19F4  29F9               	goto	l813
  6883                           
  6884                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  6885  19F5  30FD               	movlw	253
  6886  19F6  05E9               	andwf	_flags^(0+256),f
  6887  19F7  30FF               	movlw	255
  6888  19F8  05EA               	andwf	(_flags+1)^(0+256),f
  6889  19F9                     l813:	
  6890                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 631:     }
  6891                           
  6892                           
  6893                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  6894  19F9  0868               	movf	(_prec+1)^(0+256),w
  6895  19FA  3A80               	xorlw	128
  6896  19FB  0020               	movlb	0	; select bank0
  6897  19FC  00BB               	movwf	??_xtoa
  6898  19FD  3080               	movlw	128
  6899  19FE  023B               	subwf	??_xtoa,w
  6900  19FF  1D03               	skipz
  6901  1A00  2A04               	goto	u8805
  6902  1A01  3001               	movlw	1
  6903  1A02  0022               	movlb	2	; select bank2
  6904  1A03  0267               	subwf	_prec^(0+256),w
  6905  1A04                     u8805:	
  6906  1A04  1803               	skipnc
  6907  1A05  2A0C               	goto	l6831
  6908  1A06  3001               	movlw	1
  6909  1A07  0020               	movlb	0	; select bank0
  6910  1A08  00C7               	movwf	xtoa@p
  6911  1A09  3000               	movlw	0
  6912  1A0A  00C8               	movwf	xtoa@p+1
  6913  1A0B  2A14               	goto	l817
  6914  1A0C                     l6831:	
  6915  1A0C  0022               	movlb	2	; select bank2
  6916  1A0D  0868               	movf	(_prec+1)^(0+256),w
  6917  1A0E  0020               	movlb	0	; select bank0
  6918  1A0F  00C8               	movwf	xtoa@p+1
  6919  1A10  0022               	movlb	2	; select bank2
  6920  1A11  0867               	movf	_prec^(0+256),w
  6921  1A12  0020               	movlb	0	; select bank0
  6922  1A13  00C7               	movwf	xtoa@p
  6923  1A14                     l817:	
  6924                           
  6925                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  6926  1A14  0022               	movlb	2	; select bank2
  6927  1A15  0866               	movf	(_width+1)^(0+256),w
  6928  1A16  0020               	movlb	0	; select bank0
  6929  1A17  00CA               	movwf	xtoa@w+1
  6930  1A18  0022               	movlb	2	; select bank2
  6931  1A19  0865               	movf	_width^(0+256),w
  6932  1A1A  0020               	movlb	0	; select bank0
  6933  1A1B  00C9               	movwf	xtoa@w
  6934                           
  6935                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  6936  1A1C  0022               	movlb	2	; select bank2
  6937  1A1D  1E69               	btfss	_flags^(0+256),4
  6938  1A1E  2A24               	goto	l6837
  6939                           
  6940                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  6941  1A1F  30FE               	movlw	254
  6942  1A20  0020               	movlb	0	; select bank0
  6943  1A21  07C9               	addwf	xtoa@w,f
  6944  1A22  30FF               	movlw	255
  6945  1A23  3DCA               	addwfc	xtoa@w+1,f
  6946  1A24                     l6837:	
  6947                           
  6948                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  6949  1A24  0020               	movlb	0	; select bank0
  6950  1A25  0832               	movf	xtoa@d,w
  6951  1A26  00CB               	movwf	xtoa@n
  6952  1A27  0833               	movf	xtoa@d+1,w
  6953  1A28  00CC               	movwf	xtoa@n+1
  6954  1A29  0834               	movf	xtoa@d+2,w
  6955  1A2A  00CD               	movwf	xtoa@n+2
  6956  1A2B  0835               	movf	xtoa@d+3,w
  6957  1A2C  00CE               	movwf	xtoa@n+3
  6958  1A2D  0836               	movf	xtoa@d+4,w
  6959  1A2E  00CF               	movwf	xtoa@n+4
  6960  1A2F  0837               	movf	xtoa@d+5,w
  6961  1A30  00D0               	movwf	xtoa@n+5
  6962  1A31  0838               	movf	xtoa@d+6,w
  6963  1A32  00D1               	movwf	xtoa@n+6
  6964  1A33  0839               	movf	xtoa@d+7,w
  6965  1A34  00D2               	movwf	xtoa@n+7
  6966                           
  6967                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  6968  1A35  301F               	movlw	31
  6969  1A36  00D3               	movwf	xtoa@i
  6970  1A37  3000               	movlw	0
  6971  1A38  00D4               	movwf	xtoa@i+1
  6972                           
  6973                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  6974  1A39  0024               	movlb	4	; select bank4
  6975  1A3A  01BF               	clrf	(_dbuf^(0+512)+31)
  6976                           
  6977                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6978  1A3B  2AE6               	goto	l6869
  6979  1A3C                     l6841:	
  6980                           
  6981                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  6982  1A3C  30FF               	movlw	255
  6983  1A3D  0020               	movlb	0	; select bank0
  6984  1A3E  07D3               	addwf	xtoa@i,f
  6985  1A3F  30FF               	movlw	255
  6986  1A40  3DD4               	addwfc	xtoa@i+1,f
  6987                           
  6988                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  6989  1A41  300F               	movlw	15
  6990  1A42  054B               	andwf	xtoa@n,w
  6991  1A43  00D5               	movwf	xtoa@c
  6992  1A44  3000               	movlw	0
  6993  1A45  054C               	andwf	xtoa@n+1,w
  6994  1A46  00D6               	movwf	xtoa@c+1
  6995                           
  6996                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  6997  1A47  0856               	movf	xtoa@c+1,w
  6998  1A48  3A80               	xorlw	128
  6999  1A49  00BB               	movwf	??_xtoa
  7000  1A4A  3080               	movlw	128
  7001  1A4B  023B               	subwf	??_xtoa,w
  7002  1A4C  1D03               	skipz
  7003  1A4D  2A50               	goto	u8825
  7004  1A4E  300A               	movlw	10
  7005  1A4F  0255               	subwf	xtoa@c,w
  7006  1A50                     u8825:	
  7007  1A50  1C03               	skipc
  7008  1A51  2A56               	goto	l6845
  7009  1A52  0020               	movlb	0	; select bank0
  7010  1A53  0855               	movf	xtoa@c,w
  7011  1A54  3E57               	addlw	87
  7012  1A55  2A59               	goto	L1
  7013  1A56                     l6845:	
  7014  1A56  0020               	movlb	0	; select bank0
  7015  1A57  0855               	movf	xtoa@c,w
  7016  1A58  3E30               	addlw	48
  7017  1A59                     L1:	
  7018  1A59  00D5               	movwf	xtoa@c
  7019  1A5A  3000               	movlw	0
  7020  1A5B  3D56               	addwfc	xtoa@c+1,w
  7021  1A5C  00D6               	movwf	xtoa@c+1
  7022  1A5D  083A               	movf	xtoa@x,w
  7023  1A5E  3EBF               	addlw	191
  7024  1A5F  00BB               	movwf	??_xtoa
  7025  1A60  30FF               	movlw	255
  7026  1A61  1803               	skipnc
  7027  1A62  3000               	movlw	0
  7028  1A63  00BC               	movwf	??_xtoa+1
  7029  1A64  3000               	movlw	0
  7030  1A65  023C               	subwf	??_xtoa+1,w
  7031  1A66  301A               	movlw	26
  7032  1A67  1903               	skipnz
  7033  1A68  023B               	subwf	??_xtoa,w
  7034  1A69  1803               	btfsc	3,0
  7035  1A6A  2A6D               	goto	u8830
  7036  1A6B  3001               	movlw	1
  7037  1A6C  2A6E               	goto	u8840
  7038  1A6D                     u8830:	
  7039  1A6D  3000               	movlw	0
  7040  1A6E                     u8840:	
  7041  1A6E  00BD               	movwf	??_xtoa+2
  7042  1A6F  01BE               	clrf	??_xtoa+3
  7043  1A70  083D               	movf	??_xtoa+2,w
  7044  1A71  00C3               	movwf	_xtoa$1285
  7045  1A72  083E               	movf	??_xtoa+3,w
  7046  1A73  00C4               	movwf	_xtoa$1285+1
  7047  1A74  0843               	movf	_xtoa$1285,w
  7048  1A75  0444               	iorwf	_xtoa$1285+1,w
  7049  1A76  1903               	btfsc	3,2
  7050  1A77  2AA4               	goto	l6861
  7051  1A78  3020               	movlw	32
  7052  1A79  0455               	iorwf	xtoa@c,w
  7053  1A7A  00BB               	movwf	??_xtoa
  7054  1A7B  3000               	movlw	0
  7055  1A7C  0456               	iorwf	xtoa@c+1,w
  7056  1A7D  00BC               	movwf	??_xtoa+1
  7057  1A7E  083B               	movf	??_xtoa,w
  7058  1A7F  3E9F               	addlw	159
  7059  1A80  00BD               	movwf	??_xtoa+2
  7060  1A81  30FF               	movlw	255
  7061  1A82  3D3C               	addwfc	??_xtoa+1,w
  7062  1A83  00BE               	movwf	??_xtoa+3
  7063  1A84  3000               	movlw	0
  7064  1A85  023E               	subwf	??_xtoa+3,w
  7065  1A86  301A               	movlw	26
  7066  1A87  1903               	skipnz
  7067  1A88  023D               	subwf	??_xtoa+2,w
  7068  1A89  1803               	btfsc	3,0
  7069  1A8A  2A8D               	goto	u8860
  7070  1A8B  3001               	movlw	1
  7071  1A8C  2A8E               	goto	u8870
  7072  1A8D                     u8860:	
  7073  1A8D  3000               	movlw	0
  7074  1A8E                     u8870:	
  7075  1A8E  00BF               	movwf	??_xtoa+4
  7076  1A8F  01C0               	clrf	??_xtoa+5
  7077  1A90  083F               	movf	??_xtoa+4,w
  7078  1A91  00C5               	movwf	_xtoa$1286
  7079  1A92  0840               	movf	??_xtoa+5,w
  7080  1A93  00C6               	movwf	_xtoa$1286+1
  7081  1A94  0845               	movf	_xtoa$1286,w
  7082  1A95  0446               	iorwf	_xtoa$1286+1,w
  7083  1A96  1903               	btfsc	3,2
  7084  1A97  2AA4               	goto	l6861
  7085                           
  7086                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  7087  1A98  0856               	movf	xtoa@c+1,w
  7088  1A99  00F8               	movwf	toupper@c+1
  7089  1A9A  0855               	movf	xtoa@c,w
  7090  1A9B  00F7               	movwf	toupper@c
  7091  1A9C  3190  2001  3199   	fcall	_toupper
  7092  1A9F  0878               	movf	?_toupper+1,w
  7093  1AA0  0020               	movlb	0	; select bank0
  7094  1AA1  00D6               	movwf	xtoa@c+1
  7095  1AA2  0877               	movf	?_toupper,w
  7096  1AA3  00D5               	movwf	xtoa@c
  7097  1AA4                     l6861:	
  7098                           
  7099                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  7100  1AA4  0855               	movf	xtoa@c,w
  7101  1AA5  00BB               	movwf	??_xtoa
  7102  1AA6  0853               	movf	xtoa@i,w
  7103  1AA7  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7104  1AA8  0086               	movwf	6
  7105  1AA9  3002               	movlw	2	; select bank4/5
  7106  1AAA  0087               	movwf	7
  7107  1AAB  083B               	movf	??_xtoa,w
  7108  1AAC  0081               	movwf	1
  7109                           
  7110                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  7111  1AAD  30FF               	movlw	255
  7112  1AAE  07C7               	addwf	xtoa@p,f
  7113  1AAF  30FF               	movlw	255
  7114  1AB0  3DC8               	addwfc	xtoa@p+1,f
  7115                           
  7116                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  7117  1AB1  30FF               	movlw	255
  7118  1AB2  07C9               	addwf	xtoa@w,f
  7119  1AB3  30FF               	movlw	255
  7120  1AB4  3DCA               	addwfc	xtoa@w+1,f
  7121                           
  7122                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  7123  1AB5  304B               	movlw	low xtoa@n
  7124  1AB6  0086               	movwf	6
  7125  1AB7  3000               	movlw	high xtoa@n
  7126  1AB8  0087               	movwf	7
  7127  1AB9  3F40               	moviw [0]fsr1
  7128  1ABA  00BB               	movwf	??_xtoa
  7129  1ABB  3F41               	moviw [1]fsr1
  7130  1ABC  00BC               	movwf	??_xtoa+1
  7131  1ABD  3F42               	moviw [2]fsr1
  7132  1ABE  00BD               	movwf	??_xtoa+2
  7133  1ABF  3F43               	moviw [3]fsr1
  7134  1AC0  00BE               	movwf	??_xtoa+3
  7135  1AC1  3F44               	moviw [4]fsr1
  7136  1AC2  00BF               	movwf	??_xtoa+4
  7137  1AC3  3F45               	moviw [5]fsr1
  7138  1AC4  00C0               	movwf	??_xtoa+5
  7139  1AC5  3F46               	moviw [6]fsr1
  7140  1AC6  00C1               	movwf	??_xtoa+6
  7141  1AC7  3F47               	moviw [7]fsr1
  7142  1AC8  00C2               	movwf	??_xtoa+7
  7143  1AC9  3004               	movlw	4
  7144  1ACA                     u8895:	
  7145  1ACA  0020               	movlb	0	; select bank0
  7146  1ACB  36C2               	lsrf	??_xtoa+7,f
  7147  1ACC  0CC1               	rrf	??_xtoa+6,f
  7148  1ACD  0CC0               	rrf	??_xtoa+5,f
  7149  1ACE  0CBF               	rrf	??_xtoa+4,f
  7150  1ACF  0CBE               	rrf	??_xtoa+3,f
  7151  1AD0  0CBD               	rrf	??_xtoa+2,f
  7152  1AD1  0CBC               	rrf	??_xtoa+1,f
  7153  1AD2  0CBB               	rrf	??_xtoa,f
  7154  1AD3  0B89               	decfsz	9,f
  7155  1AD4  2ACA               	goto	u8895
  7156  1AD5  0020               	movlb	0	; select bank0
  7157  1AD6  0842               	movf	??_xtoa+7,w
  7158  1AD7  00D2               	movwf	xtoa@n+7
  7159  1AD8  0841               	movf	??_xtoa+6,w
  7160  1AD9  00D1               	movwf	xtoa@n+6
  7161  1ADA  0840               	movf	??_xtoa+5,w
  7162  1ADB  00D0               	movwf	xtoa@n+5
  7163  1ADC  083F               	movf	??_xtoa+4,w
  7164  1ADD  00CF               	movwf	xtoa@n+4
  7165  1ADE  083E               	movf	??_xtoa+3,w
  7166  1ADF  00CE               	movwf	xtoa@n+3
  7167  1AE0  083D               	movf	??_xtoa+2,w
  7168  1AE1  00CD               	movwf	xtoa@n+2
  7169  1AE2  083C               	movf	??_xtoa+1,w
  7170  1AE3  00CC               	movwf	xtoa@n+1
  7171  1AE4  083B               	movf	??_xtoa,w
  7172  1AE5  00CB               	movwf	xtoa@n
  7173  1AE6                     l6869:	
  7174                           
  7175                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7176  1AE6  0020               	movlb	0	; select bank0
  7177  1AE7  0854               	movf	xtoa@i+1,w
  7178  1AE8  3A80               	xorlw	128
  7179  1AE9  00BB               	movwf	??_xtoa
  7180  1AEA  3080               	movlw	128
  7181  1AEB  023B               	subwf	??_xtoa,w
  7182  1AEC  1D03               	skipz
  7183  1AED  2AF0               	goto	u8905
  7184  1AEE  3002               	movlw	2
  7185  1AEF  0253               	subwf	xtoa@i,w
  7186  1AF0                     u8905:	
  7187  1AF0  1C03               	skipc
  7188  1AF1  2B17               	goto	l838
  7189  1AF2  0020               	movlb	0	; select bank0
  7190  1AF3  084B               	movf	xtoa@n,w
  7191  1AF4  044C               	iorwf	xtoa@n+1,w
  7192  1AF5  044D               	iorwf	xtoa@n+2,w
  7193  1AF6  044E               	iorwf	xtoa@n+3,w
  7194  1AF7  044F               	iorwf	xtoa@n+4,w
  7195  1AF8  0450               	iorwf	xtoa@n+5,w
  7196  1AF9  0451               	iorwf	xtoa@n+6,w
  7197  1AFA  0452               	iorwf	xtoa@n+7,w
  7198  1AFB  1D03               	skipz
  7199  1AFC  2A3C               	goto	l6841
  7200  1AFD  0848               	movf	xtoa@p+1,w
  7201  1AFE  3A80               	xorlw	128
  7202  1AFF  00BB               	movwf	??_xtoa
  7203  1B00  3080               	movlw	128
  7204  1B01  023B               	subwf	??_xtoa,w
  7205  1B02  1D03               	skipz
  7206  1B03  2B06               	goto	u8925
  7207  1B04  3001               	movlw	1
  7208  1B05  0247               	subwf	xtoa@p,w
  7209  1B06                     u8925:	
  7210  1B06  1803               	skipnc
  7211  1B07  2A3C               	goto	l6841
  7212  1B08  0020               	movlb	0	; select bank0
  7213  1B09  084A               	movf	xtoa@w+1,w
  7214  1B0A  3A80               	xorlw	128
  7215  1B0B  00BB               	movwf	??_xtoa
  7216  1B0C  3080               	movlw	128
  7217  1B0D  023B               	subwf	??_xtoa,w
  7218  1B0E  1D03               	skipz
  7219  1B0F  2B12               	goto	u8935
  7220  1B10  3001               	movlw	1
  7221  1B11  0249               	subwf	xtoa@w,w
  7222  1B12                     u8935:	
  7223  1B12  1C03               	skipc
  7224  1B13  2B17               	goto	l838
  7225  1B14  0022               	movlb	2	; select bank2
  7226  1B15  18E9               	btfsc	_flags^(0+256),1
  7227  1B16  2A3C               	goto	l6841
  7228  1B17                     l838:	
  7229                           
  7230                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  7231  1B17  0022               	movlb	2	; select bank2
  7232  1B18  1E69               	btfss	_flags^(0+256),4
  7233  1B19  2B35               	goto	l6885
  7234                           
  7235                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  7236  1B1A  30FF               	movlw	255
  7237  1B1B  0020               	movlb	0	; select bank0
  7238  1B1C  07D3               	addwf	xtoa@i,f
  7239  1B1D  30FF               	movlw	255
  7240  1B1E  3DD4               	addwfc	xtoa@i+1,f
  7241                           
  7242                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  7243  1B1F  083A               	movf	xtoa@x,w
  7244  1B20  00BB               	movwf	??_xtoa
  7245  1B21  0853               	movf	xtoa@i,w
  7246  1B22  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7247  1B23  0086               	movwf	6
  7248  1B24  3002               	movlw	2	; select bank4/5
  7249  1B25  0087               	movwf	7
  7250  1B26  083B               	movf	??_xtoa,w
  7251  1B27  0081               	movwf	1
  7252                           
  7253                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  7254  1B28  30FF               	movlw	255
  7255  1B29  07D3               	addwf	xtoa@i,f
  7256  1B2A  30FF               	movlw	255
  7257  1B2B  3DD4               	addwfc	xtoa@i+1,f
  7258                           
  7259                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  7260  1B2C  3030               	movlw	48
  7261  1B2D  00BB               	movwf	??_xtoa
  7262  1B2E  0853               	movf	xtoa@i,w
  7263  1B2F  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7264  1B30  0086               	movwf	6
  7265  1B31  3002               	movlw	2	; select bank4/5
  7266  1B32  0087               	movwf	7
  7267  1B33  083B               	movf	??_xtoa,w
  7268  1B34  0081               	movwf	1
  7269  1B35                     l6885:	
  7270                           
  7271                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  7272  1B35  0020               	movlb	0	; select bank0
  7273  1B36  0831               	movf	xtoa@fp+1,w
  7274  1B37  00A7               	movwf	pad@fp+1
  7275  1B38  0830               	movf	xtoa@fp,w
  7276  1B39  00A6               	movwf	pad@fp
  7277  1B3A  0853               	movf	xtoa@i,w
  7278  1B3B  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7279  1B3C  00BB               	movwf	??_xtoa
  7280  1B3D  083B               	movf	??_xtoa,w
  7281  1B3E  00A8               	movwf	pad@buf
  7282  1B3F  084A               	movf	xtoa@w+1,w
  7283  1B40  00AA               	movwf	pad@p+1
  7284  1B41  0849               	movf	xtoa@w,w
  7285  1B42  00A9               	movwf	pad@p
  7286  1B43  31B7  2709         	fcall	_pad
  7287  1B45  0020               	movlb	0	; select bank0
  7288  1B46  0827               	movf	?_pad+1,w
  7289  1B47  00B1               	movwf	?_xtoa+1
  7290  1B48  0826               	movf	?_pad,w
  7291  1B49  00B0               	movwf	?_xtoa
  7292  1B4A  0008               	return
  7293  1B4B                     __end_of_xtoa:	
  7294                           
  7295                           	psect	text9
  7296  1001                     __ptext9:	
  7297 ;; *************** function _toupper *****************
  7298 ;; Defined at:
  7299 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  7300 ;; Parameters:    Size  Location     Type
  7301 ;;  c               2    7[COMMON] int 
  7302 ;; Auto vars:     Size  Location     Type
  7303 ;;		None
  7304 ;; Return value:  Size  Location     Type
  7305 ;;                  2    7[COMMON] int 
  7306 ;; Registers used:
  7307 ;;		wreg, status,2, status,0
  7308 ;; Tracked objects:
  7309 ;;		On entry : 0/0
  7310 ;;		On exit  : 0/0
  7311 ;;		Unchanged: 0/0
  7312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7313 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7314 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7315 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7316 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7317 ;;Total ram usage:        8 bytes
  7318 ;; Hardware stack levels used:    1
  7319 ;; Hardware stack levels required when called:    2
  7320 ;; This function calls:
  7321 ;;		_islower
  7322 ;; This function is called by:
  7323 ;;		_xtoa
  7324 ;; This function uses a non-reentrant model
  7325 ;;
  7326                           
  7327                           
  7328                           ;psect for function _toupper
  7329  1001                     _toupper:	
  7330                           
  7331                           ;incstack = 0
  7332                           ; Regs used in _toupper: [wreg+status,2+status,0]
  7333  1001  0877               	movf	toupper@c,w
  7334  1002  3E9F               	addlw	159
  7335  1003  0020               	movlb	0	; select bank0
  7336  1004  00A0               	movwf	??_toupper
  7337  1005  30FF               	movlw	255
  7338  1006  3D78               	addwfc	toupper@c+1,w
  7339  1007  00A1               	movwf	??_toupper+1
  7340  1008  3000               	movlw	0
  7341  1009  0221               	subwf	??_toupper+1,w
  7342  100A  301A               	movlw	26
  7343  100B  1903               	skipnz
  7344  100C  0220               	subwf	??_toupper,w
  7345  100D  1803               	btfsc	3,0
  7346  100E  2811               	goto	u7950
  7347  100F  3001               	movlw	1
  7348  1010  2812               	goto	u7960
  7349  1011                     u7950:	
  7350  1011  3000               	movlw	0
  7351  1012                     u7960:	
  7352  1012  00A2               	movwf	??_toupper+2
  7353  1013  01A3               	clrf	??_toupper+3
  7354  1014  0822               	movf	??_toupper+2,w
  7355  1015  00F9               	movwf	_toupper$1835
  7356  1016  0823               	movf	??_toupper+3,w
  7357  1017  00FA               	movwf	_toupper$1835+1
  7358  1018  0879               	movf	_toupper$1835,w
  7359  1019  047A               	iorwf	_toupper$1835+1,w
  7360  101A  1903               	btfsc	3,2
  7361  101B  0008               	return
  7362  101C  305F               	movlw	95
  7363  101D  0577               	andwf	toupper@c,w
  7364  101E  00F7               	movwf	?_toupper
  7365  101F  3000               	movlw	0
  7366  1020  0578               	andwf	toupper@c+1,w
  7367  1021  00F8               	movwf	?_toupper+1
  7368  1022  0008               	return
  7369  1023                     __end_of_toupper:	
  7370                           
  7371                           	psect	text10
  7372  33BF                     __ptext10:	
  7373 ;; *************** function _islower *****************
  7374 ;; Defined at:
  7375 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  7376 ;; Parameters:    Size  Location     Type
  7377 ;;  c               2    1[COMMON] int 
  7378 ;; Auto vars:     Size  Location     Type
  7379 ;;		None
  7380 ;; Return value:  Size  Location     Type
  7381 ;;                  2    1[COMMON] int 
  7382 ;; Registers used:
  7383 ;;		wreg, status,2, status,0
  7384 ;; Tracked objects:
  7385 ;;		On entry : 0/0
  7386 ;;		On exit  : 0/0
  7387 ;;		Unchanged: 0/0
  7388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7389 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7391 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7392 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7393 ;;Total ram usage:        6 bytes
  7394 ;; Hardware stack levels used:    1
  7395 ;; Hardware stack levels required when called:    1
  7396 ;; This function calls:
  7397 ;;		Nothing
  7398 ;; This function is called by:
  7399 ;;		_toupper
  7400 ;; This function uses a non-reentrant model
  7401 ;;
  7402                           
  7403                           
  7404                           ;psect for function _islower
  7405  33BF                     _islower:	
  7406                           
  7407                           ;incstack = 0
  7408                           ; Regs used in _islower: [wreg+status,2+status,0]
  7409  33BF  0871               	movf	islower@c,w
  7410  33C0  3E9F               	addlw	159
  7411  33C1  00F3               	movwf	??_islower
  7412  33C2  30FF               	movlw	255
  7413  33C3  3D72               	addwfc	islower@c+1,w
  7414  33C4  00F4               	movwf	??_islower+1
  7415  33C5  3000               	movlw	0
  7416  33C6  0274               	subwf	??_islower+1,w
  7417  33C7  301A               	movlw	26
  7418  33C8  1903               	skipnz
  7419  33C9  0273               	subwf	??_islower,w
  7420  33CA  1803               	btfsc	3,0
  7421  33CB  2BCE               	goto	u7840
  7422  33CC  3001               	movlw	1
  7423  33CD  2BCF               	goto	u7850
  7424  33CE                     u7840:	
  7425  33CE  3000               	movlw	0
  7426  33CF                     u7850:	
  7427  33CF  00F5               	movwf	??_islower+2
  7428  33D0  01F6               	clrf	??_islower+3
  7429  33D1  0875               	movf	??_islower+2,w
  7430  33D2  00F1               	movwf	?_islower
  7431  33D3  0876               	movf	??_islower+3,w
  7432  33D4  00F2               	movwf	?_islower+1
  7433  33D5  0008               	return
  7434  33D6                     __end_of_islower:	
  7435                           
  7436                           	psect	text11
  7437  33A8                     __ptext11:	
  7438 ;; *************** function _isupper *****************
  7439 ;; Defined at:
  7440 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  7441 ;; Parameters:    Size  Location     Type
  7442 ;;  c               2    1[COMMON] int 
  7443 ;; Auto vars:     Size  Location     Type
  7444 ;;		None
  7445 ;; Return value:  Size  Location     Type
  7446 ;;                  2    1[COMMON] int 
  7447 ;; Registers used:
  7448 ;;		wreg, status,2, status,0
  7449 ;; Tracked objects:
  7450 ;;		On entry : 0/0
  7451 ;;		On exit  : 0/0
  7452 ;;		Unchanged: 0/0
  7453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7454 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7456 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7457 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7458 ;;Total ram usage:        6 bytes
  7459 ;; Hardware stack levels used:    1
  7460 ;; Hardware stack levels required when called:    1
  7461 ;; This function calls:
  7462 ;;		Nothing
  7463 ;; This function is called by:
  7464 ;;		_xtoa
  7465 ;; This function uses a non-reentrant model
  7466 ;;
  7467                           
  7468                           
  7469                           ;psect for function _isupper
  7470  33A8                     _isupper:	
  7471                           
  7472                           ;incstack = 0
  7473                           ; Regs used in _isupper: [wreg+status,2+status,0]
  7474  33A8  0871               	movf	isupper@c,w
  7475  33A9  3EBF               	addlw	191
  7476  33AA  00F3               	movwf	??_isupper
  7477  33AB  30FF               	movlw	255
  7478  33AC  3D72               	addwfc	isupper@c+1,w
  7479  33AD  00F4               	movwf	??_isupper+1
  7480  33AE  3000               	movlw	0
  7481  33AF  0274               	subwf	??_isupper+1,w
  7482  33B0  301A               	movlw	26
  7483  33B1  1903               	skipnz
  7484  33B2  0273               	subwf	??_isupper,w
  7485  33B3  1803               	btfsc	3,0
  7486  33B4  2BB7               	goto	u7910
  7487  33B5  3001               	movlw	1
  7488  33B6  2BB8               	goto	u7920
  7489  33B7                     u7910:	
  7490  33B7  3000               	movlw	0
  7491  33B8                     u7920:	
  7492  33B8  00F5               	movwf	??_isupper+2
  7493  33B9  01F6               	clrf	??_isupper+3
  7494  33BA  0875               	movf	??_isupper+2,w
  7495  33BB  00F1               	movwf	?_isupper
  7496  33BC  0876               	movf	??_isupper+3,w
  7497  33BD  00F2               	movwf	?_isupper+1
  7498  33BE  0008               	return
  7499  33BF                     __end_of_isupper:	
  7500                           
  7501                           	psect	text12
  7502  345D                     __ptext12:	
  7503 ;; *************** function _isalpha *****************
  7504 ;; Defined at:
  7505 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  7506 ;; Parameters:    Size  Location     Type
  7507 ;;  c               2    1[COMMON] int 
  7508 ;; Auto vars:     Size  Location     Type
  7509 ;;		None
  7510 ;; Return value:  Size  Location     Type
  7511 ;;                  2    1[COMMON] int 
  7512 ;; Registers used:
  7513 ;;		wreg, status,2, status,0
  7514 ;; Tracked objects:
  7515 ;;		On entry : 0/0
  7516 ;;		On exit  : 0/0
  7517 ;;		Unchanged: 0/0
  7518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7519 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7521 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7522 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7523 ;;Total ram usage:        8 bytes
  7524 ;; Hardware stack levels used:    1
  7525 ;; Hardware stack levels required when called:    1
  7526 ;; This function calls:
  7527 ;;		Nothing
  7528 ;; This function is called by:
  7529 ;;		_xtoa
  7530 ;; This function uses a non-reentrant model
  7531 ;;
  7532                           
  7533                           
  7534                           ;psect for function _isalpha
  7535  345D                     _isalpha:	
  7536                           
  7537                           ;incstack = 0
  7538                           ; Regs used in _isalpha: [wreg+status,2+status,0]
  7539  345D  3020               	movlw	32
  7540  345E  0471               	iorwf	isalpha@c,w
  7541  345F  00F3               	movwf	??_isalpha
  7542  3460  3000               	movlw	0
  7543  3461  0472               	iorwf	isalpha@c+1,w
  7544  3462  00F4               	movwf	??_isalpha+1
  7545  3463  0873               	movf	??_isalpha,w
  7546  3464  3E9F               	addlw	159
  7547  3465  00F5               	movwf	??_isalpha+2
  7548  3466  30FF               	movlw	255
  7549  3467  3D74               	addwfc	??_isalpha+1,w
  7550  3468  00F6               	movwf	??_isalpha+3
  7551  3469  3000               	movlw	0
  7552  346A  0276               	subwf	??_isalpha+3,w
  7553  346B  301A               	movlw	26
  7554  346C  1903               	skipnz
  7555  346D  0275               	subwf	??_isalpha+2,w
  7556  346E  1803               	btfsc	3,0
  7557  346F  2C72               	goto	u7930
  7558  3470  3001               	movlw	1
  7559  3471  2C73               	goto	u7940
  7560  3472                     u7930:	
  7561  3472  3000               	movlw	0
  7562  3473                     u7940:	
  7563  3473  00F7               	movwf	??_isalpha+4
  7564  3474  01F8               	clrf	??_isalpha+5
  7565  3475  0877               	movf	??_isalpha+4,w
  7566  3476  00F1               	movwf	?_isalpha
  7567  3477  0878               	movf	??_isalpha+5,w
  7568  3478  00F2               	movwf	?_isalpha+1
  7569  3479  0008               	return
  7570  347A                     __end_of_isalpha:	
  7571                           
  7572                           	psect	text13
  7573  221B                     __ptext13:	
  7574 ;; *************** function _utoa *****************
  7575 ;; Defined at:
  7576 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7577 ;; Parameters:    Size  Location     Type
  7578 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  7579 ;;		 -> vsnprintf@f(6), 
  7580 ;;  d               8   18[BANK0 ] unsigned long long 
  7581 ;; Auto vars:     Size  Location     Type
  7582 ;;  n               8   31[BANK0 ] unsigned long long 
  7583 ;;  i               2   39[BANK0 ] int 
  7584 ;;  w               2   29[BANK0 ] int 
  7585 ;;  p               2   27[BANK0 ] int 
  7586 ;; Return value:  Size  Location     Type
  7587 ;;                  2   16[BANK0 ] int 
  7588 ;; Registers used:
  7589 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7590 ;; Tracked objects:
  7591 ;;		On entry : 0/0
  7592 ;;		On exit  : 0/0
  7593 ;;		Unchanged: 0/0
  7594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7595 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7596 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7597 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7598 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7599 ;;Total ram usage:       25 bytes
  7600 ;; Hardware stack levels used:    1
  7601 ;; Hardware stack levels required when called:    5
  7602 ;; This function calls:
  7603 ;;		___lodiv
  7604 ;;		___lomod
  7605 ;;		_pad
  7606 ;; This function is called by:
  7607 ;;		_vfpfcnvrt
  7608 ;; This function uses a non-reentrant model
  7609 ;;
  7610                           
  7611                           
  7612                           ;psect for function _utoa
  7613  221B                     _utoa:	
  7614                           
  7615                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  7616                           
  7617                           ;incstack = 0
  7618                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7619  221B  0022               	movlb	2	; select bank2
  7620  221C  1BE8               	btfsc	(_prec+1)^(0+256),7
  7621  221D  2A22               	goto	l798
  7622                           
  7623                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  7624  221E  30FD               	movlw	253
  7625  221F  05E9               	andwf	_flags^(0+256),f
  7626  2220  30FF               	movlw	255
  7627  2221  05EA               	andwf	(_flags+1)^(0+256),f
  7628  2222                     l798:	
  7629                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 601:     }
  7630                           
  7631                           
  7632                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  7633  2222  0868               	movf	(_prec+1)^(0+256),w
  7634  2223  3A80               	xorlw	128
  7635  2224  0020               	movlb	0	; select bank0
  7636  2225  00BA               	movwf	??_utoa
  7637  2226  3080               	movlw	128
  7638  2227  023A               	subwf	??_utoa,w
  7639  2228  1D03               	skipz
  7640  2229  2A2D               	goto	u8735
  7641  222A  3001               	movlw	1
  7642  222B  0022               	movlb	2	; select bank2
  7643  222C  0267               	subwf	_prec^(0+256),w
  7644  222D                     u8735:	
  7645  222D  1803               	skipnc
  7646  222E  2A35               	goto	l6795
  7647  222F  3001               	movlw	1
  7648  2230  0020               	movlb	0	; select bank0
  7649  2231  00BB               	movwf	utoa@p
  7650  2232  3000               	movlw	0
  7651  2233  00BC               	movwf	utoa@p+1
  7652  2234  2A3D               	goto	l802
  7653  2235                     l6795:	
  7654  2235  0022               	movlb	2	; select bank2
  7655  2236  0868               	movf	(_prec+1)^(0+256),w
  7656  2237  0020               	movlb	0	; select bank0
  7657  2238  00BC               	movwf	utoa@p+1
  7658  2239  0022               	movlb	2	; select bank2
  7659  223A  0867               	movf	_prec^(0+256),w
  7660  223B  0020               	movlb	0	; select bank0
  7661  223C  00BB               	movwf	utoa@p
  7662  223D                     l802:	
  7663                           
  7664                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  7665  223D  0022               	movlb	2	; select bank2
  7666  223E  0866               	movf	(_width+1)^(0+256),w
  7667  223F  0020               	movlb	0	; select bank0
  7668  2240  00BE               	movwf	utoa@w+1
  7669  2241  0022               	movlb	2	; select bank2
  7670  2242  0865               	movf	_width^(0+256),w
  7671  2243  0020               	movlb	0	; select bank0
  7672  2244  00BD               	movwf	utoa@w
  7673                           
  7674                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  7675  2245  0832               	movf	utoa@d,w
  7676  2246  00BF               	movwf	utoa@n
  7677  2247  0833               	movf	utoa@d+1,w
  7678  2248  00C0               	movwf	utoa@n+1
  7679  2249  0834               	movf	utoa@d+2,w
  7680  224A  00C1               	movwf	utoa@n+2
  7681  224B  0835               	movf	utoa@d+3,w
  7682  224C  00C2               	movwf	utoa@n+3
  7683  224D  0836               	movf	utoa@d+4,w
  7684  224E  00C3               	movwf	utoa@n+4
  7685  224F  0837               	movf	utoa@d+5,w
  7686  2250  00C4               	movwf	utoa@n+5
  7687  2251  0838               	movf	utoa@d+6,w
  7688  2252  00C5               	movwf	utoa@n+6
  7689  2253  0839               	movf	utoa@d+7,w
  7690  2254  00C6               	movwf	utoa@n+7
  7691                           
  7692                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  7693  2255  301F               	movlw	31
  7694  2256  00C7               	movwf	utoa@i
  7695  2257  3000               	movlw	0
  7696  2258  00C8               	movwf	utoa@i+1
  7697                           
  7698                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  7699  2259  0024               	movlb	4	; select bank4
  7700  225A  01BF               	clrf	(_dbuf^(0+512)+31)
  7701                           
  7702                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7703  225B  2AE1               	goto	l6811
  7704  225C                     l6813:	
  7705  225C  083F               	movf	utoa@n,w
  7706  225D  0440               	iorwf	utoa@n+1,w
  7707  225E  0441               	iorwf	utoa@n+2,w
  7708  225F  0442               	iorwf	utoa@n+3,w
  7709  2260  0443               	iorwf	utoa@n+4,w
  7710  2261  0444               	iorwf	utoa@n+5,w
  7711  2262  0445               	iorwf	utoa@n+6,w
  7712  2263  0446               	iorwf	utoa@n+7,w
  7713  2264  1D03               	skipz
  7714  2265  2A80               	goto	l6801
  7715  2266  083C               	movf	utoa@p+1,w
  7716  2267  3A80               	xorlw	128
  7717  2268  00BA               	movwf	??_utoa
  7718  2269  3080               	movlw	128
  7719  226A  023A               	subwf	??_utoa,w
  7720  226B  1D03               	skipz
  7721  226C  2A6F               	goto	u8765
  7722  226D  3001               	movlw	1
  7723  226E  023B               	subwf	utoa@p,w
  7724  226F                     u8765:	
  7725  226F  1803               	skipnc
  7726  2270  2A80               	goto	l6801
  7727  2271  0020               	movlb	0	; select bank0
  7728  2272  083E               	movf	utoa@w+1,w
  7729  2273  3A80               	xorlw	128
  7730  2274  00BA               	movwf	??_utoa
  7731  2275  3080               	movlw	128
  7732  2276  023A               	subwf	??_utoa,w
  7733  2277  1D03               	skipz
  7734  2278  2A7B               	goto	u8775
  7735  2279  3001               	movlw	1
  7736  227A  023D               	subwf	utoa@w,w
  7737  227B                     u8775:	
  7738  227B  1C03               	skipc
  7739  227C  2AE6               	goto	l6821
  7740  227D  0022               	movlb	2	; select bank2
  7741  227E  1CE9               	btfss	_flags^(0+256),1
  7742  227F  2AE6               	goto	l6821
  7743  2280                     l6801:	
  7744                           
  7745                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  7746  2280  30FF               	movlw	255
  7747  2281  0020               	movlb	0	; select bank0
  7748  2282  07C7               	addwf	utoa@i,f
  7749  2283  30FF               	movlw	255
  7750  2284  3DC8               	addwfc	utoa@i+1,f
  7751                           
  7752                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  7753  2285  300A               	movlw	10
  7754  2286  00A0               	movwf	___lomod@divisor
  7755  2287  01A1               	clrf	___lomod@divisor+1
  7756  2288  01A2               	clrf	___lomod@divisor+2
  7757  2289  01A3               	clrf	___lomod@divisor+3
  7758  228A  01A4               	clrf	___lomod@divisor+4
  7759  228B  01A5               	clrf	___lomod@divisor+5
  7760  228C  01A6               	clrf	___lomod@divisor+6
  7761  228D  01A7               	clrf	___lomod@divisor+7
  7762  228E  083F               	movf	utoa@n,w
  7763  228F  00A8               	movwf	___lomod@dividend
  7764  2290  0840               	movf	utoa@n+1,w
  7765  2291  00A9               	movwf	___lomod@dividend+1
  7766  2292  0841               	movf	utoa@n+2,w
  7767  2293  00AA               	movwf	___lomod@dividend+2
  7768  2294  0842               	movf	utoa@n+3,w
  7769  2295  00AB               	movwf	___lomod@dividend+3
  7770  2296  0843               	movf	utoa@n+4,w
  7771  2297  00AC               	movwf	___lomod@dividend+4
  7772  2298  0844               	movf	utoa@n+5,w
  7773  2299  00AD               	movwf	___lomod@dividend+5
  7774  229A  0845               	movf	utoa@n+6,w
  7775  229B  00AE               	movwf	___lomod@dividend+6
  7776  229C  0846               	movf	utoa@n+7,w
  7777  229D  00AF               	movwf	___lomod@dividend+7
  7778  229E  31A8  20CD  31A2   	fcall	___lomod
  7779  22A1  0020               	movlb	0	; select bank0
  7780  22A2  0820               	movf	?___lomod,w
  7781  22A3  3E30               	addlw	48
  7782  22A4  00BA               	movwf	??_utoa
  7783  22A5  0847               	movf	utoa@i,w
  7784  22A6  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7785  22A7  0086               	movwf	6
  7786  22A8  3002               	movlw	2	; select bank4/5
  7787  22A9  0087               	movwf	7
  7788  22AA  083A               	movf	??_utoa,w
  7789  22AB  0081               	movwf	1
  7790                           
  7791                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  7792  22AC  30FF               	movlw	255
  7793  22AD  07BB               	addwf	utoa@p,f
  7794  22AE  30FF               	movlw	255
  7795  22AF  3DBC               	addwfc	utoa@p+1,f
  7796                           
  7797                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  7798  22B0  30FF               	movlw	255
  7799  22B1  07BD               	addwf	utoa@w,f
  7800  22B2  30FF               	movlw	255
  7801  22B3  3DBE               	addwfc	utoa@w+1,f
  7802                           
  7803                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  7804  22B4  300A               	movlw	10
  7805  22B5  00A0               	movwf	___lodiv@divisor
  7806  22B6  01A1               	clrf	___lodiv@divisor+1
  7807  22B7  01A2               	clrf	___lodiv@divisor+2
  7808  22B8  01A3               	clrf	___lodiv@divisor+3
  7809  22B9  01A4               	clrf	___lodiv@divisor+4
  7810  22BA  01A5               	clrf	___lodiv@divisor+5
  7811  22BB  01A6               	clrf	___lodiv@divisor+6
  7812  22BC  01A7               	clrf	___lodiv@divisor+7
  7813  22BD  083F               	movf	utoa@n,w
  7814  22BE  00A8               	movwf	___lodiv@dividend
  7815  22BF  0840               	movf	utoa@n+1,w
  7816  22C0  00A9               	movwf	___lodiv@dividend+1
  7817  22C1  0841               	movf	utoa@n+2,w
  7818  22C2  00AA               	movwf	___lodiv@dividend+2
  7819  22C3  0842               	movf	utoa@n+3,w
  7820  22C4  00AB               	movwf	___lodiv@dividend+3
  7821  22C5  0843               	movf	utoa@n+4,w
  7822  22C6  00AC               	movwf	___lodiv@dividend+4
  7823  22C7  0844               	movf	utoa@n+5,w
  7824  22C8  00AD               	movwf	___lodiv@dividend+5
  7825  22C9  0845               	movf	utoa@n+6,w
  7826  22CA  00AE               	movwf	___lodiv@dividend+6
  7827  22CB  0846               	movf	utoa@n+7,w
  7828  22CC  00AF               	movwf	___lodiv@dividend+7
  7829  22CD  31AA  2229  31A2   	fcall	___lodiv
  7830  22D0  0020               	movlb	0	; select bank0
  7831  22D1  0820               	movf	?___lodiv,w
  7832  22D2  00BF               	movwf	utoa@n
  7833  22D3  0821               	movf	?___lodiv+1,w
  7834  22D4  00C0               	movwf	utoa@n+1
  7835  22D5  0822               	movf	?___lodiv+2,w
  7836  22D6  00C1               	movwf	utoa@n+2
  7837  22D7  0823               	movf	?___lodiv+3,w
  7838  22D8  00C2               	movwf	utoa@n+3
  7839  22D9  0824               	movf	?___lodiv+4,w
  7840  22DA  00C3               	movwf	utoa@n+4
  7841  22DB  0825               	movf	?___lodiv+5,w
  7842  22DC  00C4               	movwf	utoa@n+5
  7843  22DD  0826               	movf	?___lodiv+6,w
  7844  22DE  00C5               	movwf	utoa@n+6
  7845  22DF  0827               	movf	?___lodiv+7,w
  7846  22E0  00C6               	movwf	utoa@n+7
  7847  22E1                     l6811:	
  7848                           
  7849                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7850  22E1  0020               	movlb	0	; select bank0
  7851  22E2  0847               	movf	utoa@i,w
  7852  22E3  0448               	iorwf	utoa@i+1,w
  7853  22E4  1D03               	btfss	3,2
  7854  22E5  2A5C               	goto	l6813
  7855  22E6                     l6821:	
  7856                           
  7857                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  7858  22E6  0020               	movlb	0	; select bank0
  7859  22E7  0831               	movf	utoa@fp+1,w
  7860  22E8  00A7               	movwf	pad@fp+1
  7861  22E9  0830               	movf	utoa@fp,w
  7862  22EA  00A6               	movwf	pad@fp
  7863  22EB  0847               	movf	utoa@i,w
  7864  22EC  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7865  22ED  00BA               	movwf	??_utoa
  7866  22EE  083A               	movf	??_utoa,w
  7867  22EF  00A8               	movwf	pad@buf
  7868  22F0  083E               	movf	utoa@w+1,w
  7869  22F1  00AA               	movwf	pad@p+1
  7870  22F2  083D               	movf	utoa@w,w
  7871  22F3  00A9               	movwf	pad@p
  7872  22F4  31B7  2709         	fcall	_pad
  7873  22F6  0020               	movlb	0	; select bank0
  7874  22F7  0827               	movf	?_pad+1,w
  7875  22F8  00B1               	movwf	?_utoa+1
  7876  22F9  0826               	movf	?_pad,w
  7877  22FA  00B0               	movwf	?_utoa
  7878  22FB  0008               	return
  7879  22FC                     __end_of_utoa:	
  7880                           
  7881                           	psect	text14
  7882  28CD                     __ptext14:	
  7883 ;; *************** function ___lomod *****************
  7884 ;; Defined at:
  7885 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lomod.c"
  7886 ;; Parameters:    Size  Location     Type
  7887 ;;  divisor         8    0[BANK0 ] unsigned long long 
  7888 ;;  dividend        8    8[BANK0 ] unsigned long long 
  7889 ;; Auto vars:     Size  Location     Type
  7890 ;;  counter         1    2[COMMON] unsigned char 
  7891 ;; Return value:  Size  Location     Type
  7892 ;;                  8    0[BANK0 ] unsigned long long 
  7893 ;; Registers used:
  7894 ;;		wreg, status,2, status,0
  7895 ;; Tracked objects:
  7896 ;;		On entry : 0/0
  7897 ;;		On exit  : 0/0
  7898 ;;		Unchanged: 0/0
  7899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7900 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7901 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7902 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7903 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7904 ;;Total ram usage:       18 bytes
  7905 ;; Hardware stack levels used:    1
  7906 ;; Hardware stack levels required when called:    1
  7907 ;; This function calls:
  7908 ;;		Nothing
  7909 ;; This function is called by:
  7910 ;;		_utoa
  7911 ;; This function uses a non-reentrant model
  7912 ;;
  7913                           
  7914                           
  7915                           ;psect for function ___lomod
  7916  28CD                     ___lomod:	
  7917                           
  7918                           ;incstack = 0
  7919                           ; Regs used in ___lomod: [wreg+status,2+status,0]
  7920  28CD  0020               	movlb	0	; select bank0
  7921  28CE  0820               	movf	___lomod@divisor,w
  7922  28CF  0421               	iorwf	___lomod@divisor+1,w
  7923  28D0  0422               	iorwf	___lomod@divisor+2,w
  7924  28D1  0423               	iorwf	___lomod@divisor+3,w
  7925  28D2  0424               	iorwf	___lomod@divisor+4,w
  7926  28D3  0425               	iorwf	___lomod@divisor+5,w
  7927  28D4  0426               	iorwf	___lomod@divisor+6,w
  7928  28D5  0427               	iorwf	___lomod@divisor+7,w
  7929  28D6  1903               	skipnz
  7930  28D7  2925               	goto	l1169
  7931  28D8  01F2               	clrf	___lomod@counter
  7932  28D9  0AF2               	incf	___lomod@counter,f
  7933  28DA                     l6603:	
  7934  28DA  1BA7               	btfsc	___lomod@divisor+7,7
  7935  28DB  28E9               	goto	l6605
  7936  28DC  35A0               	lslf	___lomod@divisor,f
  7937  28DD  0DA1               	rlf	___lomod@divisor+1,f
  7938  28DE  0DA2               	rlf	___lomod@divisor+2,f
  7939  28DF  0DA3               	rlf	___lomod@divisor+3,f
  7940  28E0  0DA4               	rlf	___lomod@divisor+4,f
  7941  28E1  0DA5               	rlf	___lomod@divisor+5,f
  7942  28E2  0DA6               	rlf	___lomod@divisor+6,f
  7943  28E3  0DA7               	rlf	___lomod@divisor+7,f
  7944  28E4  3001               	movlw	1
  7945  28E5  00F1               	movwf	??___lomod
  7946  28E6  0871               	movf	??___lomod,w
  7947  28E7  07F2               	addwf	___lomod@counter,f
  7948  28E8  28DA               	goto	l6603
  7949  28E9                     l6605:	
  7950  28E9  0827               	movf	___lomod@divisor+7,w
  7951  28EA  022F               	subwf	___lomod@dividend+7,w
  7952  28EB  1D03               	skipz
  7953  28EC  2907               	goto	u8325
  7954  28ED  0826               	movf	___lomod@divisor+6,w
  7955  28EE  022E               	subwf	___lomod@dividend+6,w
  7956  28EF  1D03               	skipz
  7957  28F0  2907               	goto	u8325
  7958  28F1  0825               	movf	___lomod@divisor+5,w
  7959  28F2  022D               	subwf	___lomod@dividend+5,w
  7960  28F3  1D03               	skipz
  7961  28F4  2907               	goto	u8325
  7962  28F5  0824               	movf	___lomod@divisor+4,w
  7963  28F6  022C               	subwf	___lomod@dividend+4,w
  7964  28F7  1D03               	skipz
  7965  28F8  2907               	goto	u8325
  7966  28F9  0823               	movf	___lomod@divisor+3,w
  7967  28FA  022B               	subwf	___lomod@dividend+3,w
  7968  28FB  1D03               	skipz
  7969  28FC  2907               	goto	u8325
  7970  28FD  0822               	movf	___lomod@divisor+2,w
  7971  28FE  022A               	subwf	___lomod@dividend+2,w
  7972  28FF  1D03               	skipz
  7973  2900  2907               	goto	u8325
  7974  2901  0821               	movf	___lomod@divisor+1,w
  7975  2902  0229               	subwf	___lomod@dividend+1,w
  7976  2903  1D03               	skipz
  7977  2904  2907               	goto	u8325
  7978  2905  0820               	movf	___lomod@divisor,w
  7979  2906  0228               	subwf	___lomod@dividend,w
  7980  2907                     u8325:	
  7981  2907  1C03               	skipc
  7982  2908  2919               	goto	l6609
  7983  2909  0820               	movf	___lomod@divisor,w
  7984  290A  02A8               	subwf	___lomod@dividend,f
  7985  290B  0821               	movf	___lomod@divisor+1,w
  7986  290C  3BA9               	subwfb	___lomod@dividend+1,f
  7987  290D  0822               	movf	___lomod@divisor+2,w
  7988  290E  3BAA               	subwfb	___lomod@dividend+2,f
  7989  290F  0823               	movf	___lomod@divisor+3,w
  7990  2910  3BAB               	subwfb	___lomod@dividend+3,f
  7991  2911  0824               	movf	___lomod@divisor+4,w
  7992  2912  3BAC               	subwfb	___lomod@dividend+4,f
  7993  2913  0825               	movf	___lomod@divisor+5,w
  7994  2914  3BAD               	subwfb	___lomod@dividend+5,f
  7995  2915  0826               	movf	___lomod@divisor+6,w
  7996  2916  3BAE               	subwfb	___lomod@dividend+6,f
  7997  2917  0827               	movf	___lomod@divisor+7,w
  7998  2918  3BAF               	subwfb	___lomod@dividend+7,f
  7999  2919                     l6609:	
  8000  2919  36A7               	lsrf	___lomod@divisor+7,f
  8001  291A  0CA6               	rrf	___lomod@divisor+6,f
  8002  291B  0CA5               	rrf	___lomod@divisor+5,f
  8003  291C  0CA4               	rrf	___lomod@divisor+4,f
  8004  291D  0CA3               	rrf	___lomod@divisor+3,f
  8005  291E  0CA2               	rrf	___lomod@divisor+2,f
  8006  291F  0CA1               	rrf	___lomod@divisor+1,f
  8007  2920  0CA0               	rrf	___lomod@divisor,f
  8008  2921  3001               	movlw	1
  8009  2922  02F2               	subwf	___lomod@counter,f
  8010  2923  1D03               	btfss	3,2
  8011  2924  28E9               	goto	l6605
  8012  2925                     l1169:	
  8013  2925  0828               	movf	___lomod@dividend,w
  8014  2926  00A0               	movwf	?___lomod
  8015  2927  0829               	movf	___lomod@dividend+1,w
  8016  2928  00A1               	movwf	?___lomod+1
  8017  2929  082A               	movf	___lomod@dividend+2,w
  8018  292A  00A2               	movwf	?___lomod+2
  8019  292B  082B               	movf	___lomod@dividend+3,w
  8020  292C  00A3               	movwf	?___lomod+3
  8021  292D  082C               	movf	___lomod@dividend+4,w
  8022  292E  00A4               	movwf	?___lomod+4
  8023  292F  082D               	movf	___lomod@dividend+5,w
  8024  2930  00A5               	movwf	?___lomod+5
  8025  2931  082E               	movf	___lomod@dividend+6,w
  8026  2932  00A6               	movwf	?___lomod+6
  8027  2933  082F               	movf	___lomod@dividend+7,w
  8028  2934  00A7               	movwf	?___lomod+7
  8029  2935  0008               	return
  8030  2936                     __end_of___lomod:	
  8031                           
  8032                           	psect	text15
  8033  2A29                     __ptext15:	
  8034 ;; *************** function ___lodiv *****************
  8035 ;; Defined at:
  8036 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lodiv.c"
  8037 ;; Parameters:    Size  Location     Type
  8038 ;;  divisor         8    0[BANK0 ] unsigned long long 
  8039 ;;  dividend        8    8[BANK0 ] unsigned long long 
  8040 ;; Auto vars:     Size  Location     Type
  8041 ;;  quotient        8    2[COMMON] unsigned long long 
  8042 ;;  counter         1   10[COMMON] unsigned char 
  8043 ;; Return value:  Size  Location     Type
  8044 ;;                  8    0[BANK0 ] unsigned long long 
  8045 ;; Registers used:
  8046 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8047 ;; Tracked objects:
  8048 ;;		On entry : 0/0
  8049 ;;		On exit  : 0/0
  8050 ;;		Unchanged: 0/0
  8051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8052 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8053 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8054 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8055 ;;      Totals:        10      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8056 ;;Total ram usage:       26 bytes
  8057 ;; Hardware stack levels used:    1
  8058 ;; Hardware stack levels required when called:    1
  8059 ;; This function calls:
  8060 ;;		Nothing
  8061 ;; This function is called by:
  8062 ;;		_utoa
  8063 ;; This function uses a non-reentrant model
  8064 ;;
  8065                           
  8066                           
  8067                           ;psect for function ___lodiv
  8068  2A29                     ___lodiv:	
  8069                           
  8070                           ;incstack = 0
  8071                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  8072  2A29  3072               	movlw	low ___lodiv@quotient
  8073  2A2A  0086               	movwf	6
  8074  2A2B  3000               	movlw	high ___lodiv@quotient
  8075  2A2C  0087               	movwf	7
  8076  2A2D  3008               	movlw	8
  8077  2A2E  00F1               	movwf	??___lodiv
  8078  2A2F  3000               	movlw	0
  8079  2A30                     u8250:	
  8080  2A30  001E               	movwi fsr1++
  8081  2A31  0BF1               	decfsz	??___lodiv,f
  8082  2A32  2A30               	goto	u8250
  8083  2A33  0020               	movlb	0	; select bank0
  8084  2A34  0820               	movf	___lodiv@divisor,w
  8085  2A35  0421               	iorwf	___lodiv@divisor+1,w
  8086  2A36  0422               	iorwf	___lodiv@divisor+2,w
  8087  2A37  0423               	iorwf	___lodiv@divisor+3,w
  8088  2A38  0424               	iorwf	___lodiv@divisor+4,w
  8089  2A39  0425               	iorwf	___lodiv@divisor+5,w
  8090  2A3A  0426               	iorwf	___lodiv@divisor+6,w
  8091  2A3B  0427               	iorwf	___lodiv@divisor+7,w
  8092  2A3C  1903               	skipnz
  8093  2A3D  2A94               	goto	l1159
  8094  2A3E  01FA               	clrf	___lodiv@counter
  8095  2A3F  0AFA               	incf	___lodiv@counter,f
  8096  2A40                     l6583:	
  8097  2A40  1BA7               	btfsc	___lodiv@divisor+7,7
  8098  2A41  2A4F               	goto	l6585
  8099  2A42  35A0               	lslf	___lodiv@divisor,f
  8100  2A43  0DA1               	rlf	___lodiv@divisor+1,f
  8101  2A44  0DA2               	rlf	___lodiv@divisor+2,f
  8102  2A45  0DA3               	rlf	___lodiv@divisor+3,f
  8103  2A46  0DA4               	rlf	___lodiv@divisor+4,f
  8104  2A47  0DA5               	rlf	___lodiv@divisor+5,f
  8105  2A48  0DA6               	rlf	___lodiv@divisor+6,f
  8106  2A49  0DA7               	rlf	___lodiv@divisor+7,f
  8107  2A4A  3001               	movlw	1
  8108  2A4B  00F1               	movwf	??___lodiv
  8109  2A4C  0871               	movf	??___lodiv,w
  8110  2A4D  07FA               	addwf	___lodiv@counter,f
  8111  2A4E  2A40               	goto	l6583
  8112  2A4F                     l6585:	
  8113  2A4F  35F2               	lslf	___lodiv@quotient,f
  8114  2A50  0DF3               	rlf	___lodiv@quotient+1,f
  8115  2A51  0DF4               	rlf	___lodiv@quotient+2,f
  8116  2A52  0DF5               	rlf	___lodiv@quotient+3,f
  8117  2A53  0DF6               	rlf	___lodiv@quotient+4,f
  8118  2A54  0DF7               	rlf	___lodiv@quotient+5,f
  8119  2A55  0DF8               	rlf	___lodiv@quotient+6,f
  8120  2A56  0DF9               	rlf	___lodiv@quotient+7,f
  8121  2A57  0827               	movf	___lodiv@divisor+7,w
  8122  2A58  022F               	subwf	___lodiv@dividend+7,w
  8123  2A59  1D03               	skipz
  8124  2A5A  2A75               	goto	u8285
  8125  2A5B  0826               	movf	___lodiv@divisor+6,w
  8126  2A5C  022E               	subwf	___lodiv@dividend+6,w
  8127  2A5D  1D03               	skipz
  8128  2A5E  2A75               	goto	u8285
  8129  2A5F  0825               	movf	___lodiv@divisor+5,w
  8130  2A60  022D               	subwf	___lodiv@dividend+5,w
  8131  2A61  1D03               	skipz
  8132  2A62  2A75               	goto	u8285
  8133  2A63  0824               	movf	___lodiv@divisor+4,w
  8134  2A64  022C               	subwf	___lodiv@dividend+4,w
  8135  2A65  1D03               	skipz
  8136  2A66  2A75               	goto	u8285
  8137  2A67  0823               	movf	___lodiv@divisor+3,w
  8138  2A68  022B               	subwf	___lodiv@dividend+3,w
  8139  2A69  1D03               	skipz
  8140  2A6A  2A75               	goto	u8285
  8141  2A6B  0822               	movf	___lodiv@divisor+2,w
  8142  2A6C  022A               	subwf	___lodiv@dividend+2,w
  8143  2A6D  1D03               	skipz
  8144  2A6E  2A75               	goto	u8285
  8145  2A6F  0821               	movf	___lodiv@divisor+1,w
  8146  2A70  0229               	subwf	___lodiv@dividend+1,w
  8147  2A71  1D03               	skipz
  8148  2A72  2A75               	goto	u8285
  8149  2A73  0820               	movf	___lodiv@divisor,w
  8150  2A74  0228               	subwf	___lodiv@dividend,w
  8151  2A75                     u8285:	
  8152  2A75  1C03               	skipc
  8153  2A76  2A88               	goto	l6593
  8154  2A77  0820               	movf	___lodiv@divisor,w
  8155  2A78  02A8               	subwf	___lodiv@dividend,f
  8156  2A79  0821               	movf	___lodiv@divisor+1,w
  8157  2A7A  3BA9               	subwfb	___lodiv@dividend+1,f
  8158  2A7B  0822               	movf	___lodiv@divisor+2,w
  8159  2A7C  3BAA               	subwfb	___lodiv@dividend+2,f
  8160  2A7D  0823               	movf	___lodiv@divisor+3,w
  8161  2A7E  3BAB               	subwfb	___lodiv@dividend+3,f
  8162  2A7F  0824               	movf	___lodiv@divisor+4,w
  8163  2A80  3BAC               	subwfb	___lodiv@dividend+4,f
  8164  2A81  0825               	movf	___lodiv@divisor+5,w
  8165  2A82  3BAD               	subwfb	___lodiv@dividend+5,f
  8166  2A83  0826               	movf	___lodiv@divisor+6,w
  8167  2A84  3BAE               	subwfb	___lodiv@dividend+6,f
  8168  2A85  0827               	movf	___lodiv@divisor+7,w
  8169  2A86  3BAF               	subwfb	___lodiv@dividend+7,f
  8170  2A87  1472               	bsf	___lodiv@quotient,0
  8171  2A88                     l6593:	
  8172  2A88  36A7               	lsrf	___lodiv@divisor+7,f
  8173  2A89  0CA6               	rrf	___lodiv@divisor+6,f
  8174  2A8A  0CA5               	rrf	___lodiv@divisor+5,f
  8175  2A8B  0CA4               	rrf	___lodiv@divisor+4,f
  8176  2A8C  0CA3               	rrf	___lodiv@divisor+3,f
  8177  2A8D  0CA2               	rrf	___lodiv@divisor+2,f
  8178  2A8E  0CA1               	rrf	___lodiv@divisor+1,f
  8179  2A8F  0CA0               	rrf	___lodiv@divisor,f
  8180  2A90  3001               	movlw	1
  8181  2A91  02FA               	subwf	___lodiv@counter,f
  8182  2A92  1D03               	btfss	3,2
  8183  2A93  2A4F               	goto	l6585
  8184  2A94                     l1159:	
  8185  2A94  0872               	movf	___lodiv@quotient,w
  8186  2A95  00A0               	movwf	?___lodiv
  8187  2A96  0873               	movf	___lodiv@quotient+1,w
  8188  2A97  00A1               	movwf	?___lodiv+1
  8189  2A98  0874               	movf	___lodiv@quotient+2,w
  8190  2A99  00A2               	movwf	?___lodiv+2
  8191  2A9A  0875               	movf	___lodiv@quotient+3,w
  8192  2A9B  00A3               	movwf	?___lodiv+3
  8193  2A9C  0876               	movf	___lodiv@quotient+4,w
  8194  2A9D  00A4               	movwf	?___lodiv+4
  8195  2A9E  0877               	movf	___lodiv@quotient+5,w
  8196  2A9F  00A5               	movwf	?___lodiv+5
  8197  2AA0  0878               	movf	___lodiv@quotient+6,w
  8198  2AA1  00A6               	movwf	?___lodiv+6
  8199  2AA2  0879               	movf	___lodiv@quotient+7,w
  8200  2AA3  00A7               	movwf	?___lodiv+7
  8201  2AA4  0008               	return
  8202  2AA5                     __end_of___lodiv:	
  8203                           
  8204                           	psect	text16
  8205  375A                     __ptext16:	
  8206 ;; *************** function _strncmp *****************
  8207 ;; Defined at:
  8208 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  8209 ;; Parameters:    Size  Location     Type
  8210 ;;  _l              2    1[COMMON] PTR const unsigned char 
  8211 ;;		 -> STR_23(18), STR_22(18), STR_21(19), STR_20(20), 
  8212 ;;		 -> STR_19(20), STR_18(21), STR_17(21), STR_16(21), 
  8213 ;;		 -> STR_15(22), STR_14(22), STR_13(21), STR_12(21), 
  8214 ;;		 -> STR_9(15), STR_8(32), STR_7(15), STR_6(21), 
  8215 ;;		 -> STR_5(21), STR_4(21), STR_3(22), STR_2(71), 
  8216 ;;		 -> STR_1(40), 
  8217 ;;  _r              2    3[COMMON] PTR const unsigned char 
  8218 ;;		 -> STR_121(3), STR_117(3), STR_112(3), STR_108(3), 
  8219 ;;		 -> STR_103(4), STR_99(4), STR_94(3), STR_89(3), 
  8220 ;;		 -> STR_84(4), STR_79(3), STR_74(3), STR_69(4), 
  8221 ;;		 -> STR_64(3), STR_59(3), STR_54(4), STR_49(3), 
  8222 ;;		 -> STR_45(3), STR_40(3), STR_36(3), STR_31(4), 
  8223 ;;		 -> STR_27(4), 
  8224 ;;  n               2    5[COMMON] unsigned int 
  8225 ;; Auto vars:     Size  Location     Type
  8226 ;;  r               2   10[COMMON] PTR const unsigned char 
  8227 ;;		 -> STR_121(3), STR_117(3), STR_112(3), STR_108(3), 
  8228 ;;		 -> STR_103(4), STR_99(4), STR_94(3), STR_89(3), 
  8229 ;;		 -> STR_84(4), STR_79(3), STR_74(3), STR_69(4), 
  8230 ;;		 -> STR_64(3), STR_59(3), STR_54(4), STR_49(3), 
  8231 ;;		 -> STR_45(3), STR_40(3), STR_36(3), STR_31(4), 
  8232 ;;		 -> STR_27(4), 
  8233 ;;  l               2    8[COMMON] PTR const unsigned char 
  8234 ;;		 -> STR_23(18), STR_22(18), STR_21(19), STR_20(20), 
  8235 ;;		 -> STR_19(20), STR_18(21), STR_17(21), STR_16(21), 
  8236 ;;		 -> STR_15(22), STR_14(22), STR_13(21), STR_12(21), 
  8237 ;;		 -> STR_9(15), STR_8(32), STR_7(15), STR_6(21), 
  8238 ;;		 -> STR_5(21), STR_4(21), STR_3(22), STR_2(71), 
  8239 ;;		 -> STR_1(40), 
  8240 ;; Return value:  Size  Location     Type
  8241 ;;                  2    1[COMMON] int 
  8242 ;; Registers used:
  8243 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  8244 ;; Tracked objects:
  8245 ;;		On entry : 0/0
  8246 ;;		On exit  : 0/0
  8247 ;;		Unchanged: 0/0
  8248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8249 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8250 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8251 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8252 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8253 ;;Total ram usage:       11 bytes
  8254 ;; Hardware stack levels used:    1
  8255 ;; Hardware stack levels required when called:    1
  8256 ;; This function calls:
  8257 ;;		Nothing
  8258 ;; This function is called by:
  8259 ;;		_vfpfcnvrt
  8260 ;; This function uses a non-reentrant model
  8261 ;;
  8262                           
  8263                           
  8264                           ;psect for function _strncmp
  8265  375A                     _strncmp:	
  8266                           
  8267                           ;incstack = 0
  8268                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  8269  375A  0872               	movf	strncmp@_l+1,w
  8270  375B  00F9               	movwf	strncmp@l+1
  8271  375C  0871               	movf	strncmp@_l,w
  8272  375D  00F8               	movwf	strncmp@l
  8273  375E  0874               	movf	strncmp@_r+1,w
  8274  375F  00FB               	movwf	strncmp@r+1
  8275  3760  0873               	movf	strncmp@_r,w
  8276  3761  00FA               	movwf	strncmp@r
  8277  3762  3001               	movlw	1
  8278  3763  02F5               	subwf	strncmp@n,f
  8279  3764  3000               	movlw	0
  8280  3765  3BF6               	subwfb	strncmp@n+1,f
  8281  3766  0A75               	incf	strncmp@n,w
  8282  3767  1D03               	skipz
  8283  3768  2F94               	goto	l6945
  8284  3769  0A76               	incf	strncmp@n+1,w
  8285  376A  1D03               	btfss	3,2
  8286  376B  2F94               	goto	l6945
  8287  376C  01F1               	clrf	?_strncmp
  8288  376D  01F2               	clrf	?_strncmp+1
  8289  376E  0008               	return
  8290  376F                     l6947:	
  8291  376F  087A               	movf	strncmp@r,w
  8292  3770  0084               	movwf	4
  8293  3771  087B               	movf	strncmp@r+1,w
  8294  3772  0085               	movwf	5
  8295  3773  0012               	moviw fsr0++
  8296  3774  1903               	btfsc	3,2
  8297  3775  2F9B               	goto	l6953
  8298  3776  0875               	movf	strncmp@n,w
  8299  3777  0476               	iorwf	strncmp@n+1,w
  8300  3778  1903               	btfsc	3,2
  8301  3779  2F9B               	goto	l6953
  8302  377A  087A               	movf	strncmp@r,w
  8303  377B  0084               	movwf	4
  8304  377C  087B               	movf	strncmp@r+1,w
  8305  377D  0085               	movwf	5
  8306  377E  0800               	movf	0,w	;code access
  8307  377F  00F7               	movwf	??_strncmp
  8308  3780  0878               	movf	strncmp@l,w
  8309  3781  0084               	movwf	4
  8310  3782  0879               	movf	strncmp@l+1,w
  8311  3783  0085               	movwf	5
  8312  3784  0800               	movf	0,w	;code access
  8313  3785  0677               	xorwf	??_strncmp,w
  8314  3786  1D03               	btfss	3,2
  8315  3787  2F9B               	goto	l6953
  8316  3788  3001               	movlw	1
  8317  3789  07F8               	addwf	strncmp@l,f
  8318  378A  3000               	movlw	0
  8319  378B  3DF9               	addwfc	strncmp@l+1,f
  8320  378C  3001               	movlw	1
  8321  378D  07FA               	addwf	strncmp@r,f
  8322  378E  3000               	movlw	0
  8323  378F  3DFB               	addwfc	strncmp@r+1,f
  8324  3790  3001               	movlw	1
  8325  3791  02F5               	subwf	strncmp@n,f
  8326  3792  3000               	movlw	0
  8327  3793  3BF6               	subwfb	strncmp@n+1,f
  8328  3794                     l6945:	
  8329  3794  0878               	movf	strncmp@l,w
  8330  3795  0084               	movwf	4
  8331  3796  0879               	movf	strncmp@l+1,w
  8332  3797  0085               	movwf	5
  8333  3798  0012               	moviw fsr0++
  8334  3799  1D03               	btfss	3,2
  8335  379A  2F6F               	goto	l6947
  8336  379B                     l6953:	
  8337  379B  0878               	movf	strncmp@l,w
  8338  379C  0084               	movwf	4
  8339  379D  0879               	movf	strncmp@l+1,w
  8340  379E  0085               	movwf	5
  8341  379F  0800               	movf	0,w	;code access
  8342  37A0  00F7               	movwf	??_strncmp
  8343  37A1  087A               	movf	strncmp@r,w
  8344  37A2  0084               	movwf	4
  8345  37A3  087B               	movf	strncmp@r+1,w
  8346  37A4  0085               	movwf	5
  8347  37A5  0800               	movf	0,w	;code access
  8348  37A6  0277               	subwf	??_strncmp,w
  8349  37A7  00F1               	movwf	?_strncmp
  8350  37A8  01F2               	clrf	?_strncmp+1
  8351  37A9  1C03               	skipc
  8352  37AA  03F2               	decf	?_strncmp+1,f
  8353  37AB  0008               	return
  8354  37AC                     __end_of_strncmp:	
  8355                           
  8356                           	psect	text17
  8357  2E66                     __ptext17:	
  8358 ;; *************** function _stoa *****************
  8359 ;; Defined at:
  8360 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8361 ;; Parameters:    Size  Location     Type
  8362 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  8363 ;;		 -> vsnprintf@f(6), 
  8364 ;;  s               2    2[BANK0 ] PTR unsigned char 
  8365 ;;		 -> ?_snprintf(2), sp__logf(4), adcGain(2), 
  8366 ;; Auto vars:     Size  Location     Type
  8367 ;;  nuls            7    4[BANK0 ] unsigned char [7]
  8368 ;;  l               2   19[BANK0 ] int 
  8369 ;;  p               2   17[BANK0 ] int 
  8370 ;;  cp              2   15[BANK0 ] PTR unsigned char 
  8371 ;;		 -> ?_snprintf(2), stoa@nuls(7), sp__logf(4), adcGain(2), 
  8372 ;;  w               2   13[BANK0 ] int 
  8373 ;;  i               2   11[BANK0 ] int 
  8374 ;; Return value:  Size  Location     Type
  8375 ;;                  2    0[BANK0 ] int 
  8376 ;; Registers used:
  8377 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8378 ;; Tracked objects:
  8379 ;;		On entry : 0/0
  8380 ;;		On exit  : 0/0
  8381 ;;		Unchanged: 0/0
  8382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8383 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8384 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8385 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8386 ;;      Totals:         2      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8387 ;;Total ram usage:       23 bytes
  8388 ;; Hardware stack levels used:    1
  8389 ;; Hardware stack levels required when called:    3
  8390 ;; This function calls:
  8391 ;;		_fputc
  8392 ;;		_strlen
  8393 ;; This function is called by:
  8394 ;;		_vfpfcnvrt
  8395 ;; This function uses a non-reentrant model
  8396 ;;
  8397                           
  8398                           
  8399                           ;psect for function _stoa
  8400  2E66                     _stoa:	
  8401                           
  8402                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  8403                           
  8404                           ;incstack = 0
  8405                           ; Regs used in _stoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8406  2E66  30DD               	movlw	low stoa@F1152
  8407  2E67  0086               	movwf	6
  8408  2E68  3001               	movlw	high stoa@F1152
  8409  2E69  0087               	movwf	7
  8410  2E6A  3024               	movlw	low stoa@nuls
  8411  2E6B  0084               	movwf	4
  8412  2E6C  3000               	movlw	high stoa@nuls
  8413  2E6D  0085               	movwf	5
  8414  2E6E  3007               	movlw	7
  8415  2E6F  00FA               	movwf	??_stoa
  8416  2E70                     u8630:	
  8417  2E70  0016               	moviw fsr1++
  8418  2E71  001A               	movwi fsr0++
  8419  2E72  0BFA               	decfsz	??_stoa,f
  8420  2E73  2E70               	goto	u8630
  8421                           
  8422                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  8423  2E74  0020               	movlb	0	; select bank0
  8424  2E75  0823               	movf	stoa@s+1,w
  8425  2E76  00B0               	movwf	stoa@cp+1
  8426  2E77  0822               	movf	stoa@s,w
  8427  2E78  00AF               	movwf	stoa@cp
  8428                           
  8429                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  8430  2E79  082F               	movf	stoa@cp,w
  8431  2E7A  0430               	iorwf	stoa@cp+1,w
  8432  2E7B  1D03               	btfss	3,2
  8433  2E7C  2E81               	goto	l6747
  8434                           
  8435                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  8436  2E7D  3024               	movlw	low stoa@nuls
  8437  2E7E  00AF               	movwf	stoa@cp
  8438  2E7F  3000               	movlw	high stoa@nuls
  8439  2E80  00B0               	movwf	stoa@cp+1
  8440  2E81                     l6747:	
  8441                           
  8442                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  8443  2E81  0830               	movf	stoa@cp+1,w
  8444  2E82  00F2               	movwf	strlen@s+1
  8445  2E83  082F               	movf	stoa@cp,w
  8446  2E84  00F1               	movwf	strlen@s
  8447  2E85  31B3  237A  31AE   	fcall	_strlen
  8448  2E88  0872               	movf	?_strlen+1,w
  8449  2E89  0020               	movlb	0	; select bank0
  8450  2E8A  00B4               	movwf	stoa@l+1
  8451  2E8B  0871               	movf	?_strlen,w
  8452  2E8C  00B3               	movwf	stoa@l
  8453                           
  8454                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  8455  2E8D  0022               	movlb	2	; select bank2
  8456  2E8E  0868               	movf	(_prec+1)^(0+256),w
  8457  2E8F  0020               	movlb	0	; select bank0
  8458  2E90  00B2               	movwf	stoa@p+1
  8459  2E91  0022               	movlb	2	; select bank2
  8460  2E92  0867               	movf	_prec^(0+256),w
  8461  2E93  0020               	movlb	0	; select bank0
  8462  2E94  00B1               	movwf	stoa@p
  8463                           
  8464                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  8465  2E95  1BB2               	btfsc	stoa@p+1,7
  8466  2E96  2EA8               	goto	l781
  8467  2E97  0832               	movf	stoa@p+1,w
  8468  2E98  3A80               	xorlw	128
  8469  2E99  00FA               	movwf	??_stoa
  8470  2E9A  0834               	movf	stoa@l+1,w
  8471  2E9B  3A80               	xorlw	128
  8472  2E9C  027A               	subwf	??_stoa,w
  8473  2E9D  1D03               	skipz
  8474  2E9E  2EA1               	goto	u8665
  8475  2E9F  0833               	movf	stoa@l,w
  8476  2EA0  0231               	subwf	stoa@p,w
  8477  2EA1                     u8665:	
  8478  2EA1  1803               	btfsc	3,0
  8479  2EA2  2EA8               	goto	l781
  8480  2EA3  0020               	movlb	0	; select bank0
  8481  2EA4  0832               	movf	stoa@p+1,w
  8482  2EA5  00B4               	movwf	stoa@l+1
  8483  2EA6  0831               	movf	stoa@p,w
  8484  2EA7  00B3               	movwf	stoa@l
  8485  2EA8                     l781:	
  8486                           
  8487                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  8488  2EA8  0020               	movlb	0	; select bank0
  8489  2EA9  0834               	movf	stoa@l+1,w
  8490  2EAA  00B2               	movwf	stoa@p+1
  8491  2EAB  0833               	movf	stoa@l,w
  8492  2EAC  00B1               	movwf	stoa@p
  8493                           
  8494                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  8495  2EAD  0022               	movlb	2	; select bank2
  8496  2EAE  0866               	movf	(_width+1)^(0+256),w
  8497  2EAF  0020               	movlb	0	; select bank0
  8498  2EB0  00AE               	movwf	stoa@w+1
  8499  2EB1  0022               	movlb	2	; select bank2
  8500  2EB2  0865               	movf	_width^(0+256),w
  8501  2EB3  0020               	movlb	0	; select bank0
  8502  2EB4  00AD               	movwf	stoa@w
  8503                           
  8504                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  8505  2EB5  0022               	movlb	2	; select bank2
  8506  2EB6  1C69               	btfss	_flags^(0+256),0
  8507  2EB7  2ECA               	goto	l6765
  8508  2EB8  2ED7               	goto	l6767
  8509  2EB9                     l6761:	
  8510                           
  8511                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  8512  2EB9  3020               	movlw	32
  8513  2EBA  00F1               	movwf	fputc@c
  8514  2EBB  3000               	movlw	0
  8515  2EBC  00F2               	movwf	fputc@c+1
  8516  2EBD  0020               	movlb	0	; select bank0
  8517  2EBE  0821               	movf	stoa@fp+1,w
  8518  2EBF  00F4               	movwf	fputc@fp+1
  8519  2EC0  0820               	movf	stoa@fp,w
  8520  2EC1  00F3               	movwf	fputc@fp
  8521  2EC2  31B7  27AC  31AE   	fcall	_fputc
  8522                           
  8523                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  8524  2EC5  3001               	movlw	1
  8525  2EC6  0020               	movlb	0	; select bank0
  8526  2EC7  07B3               	addwf	stoa@l,f
  8527  2EC8  3000               	movlw	0
  8528  2EC9  3DB4               	addwfc	stoa@l+1,f
  8529  2ECA                     l6765:	
  8530                           
  8531                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  8532  2ECA  0020               	movlb	0	; select bank0
  8533  2ECB  0834               	movf	stoa@l+1,w
  8534  2ECC  3A80               	xorlw	128
  8535  2ECD  00FA               	movwf	??_stoa
  8536  2ECE  082E               	movf	stoa@w+1,w
  8537  2ECF  3A80               	xorlw	128
  8538  2ED0  027A               	subwf	??_stoa,w
  8539  2ED1  1D03               	skipz
  8540  2ED2  2ED5               	goto	u8685
  8541  2ED3  082D               	movf	stoa@w,w
  8542  2ED4  0233               	subwf	stoa@l,w
  8543  2ED5                     u8685:	
  8544  2ED5  1C03               	skipc
  8545  2ED6  2EB9               	goto	l6761
  8546  2ED7                     l6767:	
  8547                           
  8548                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  8549  2ED7  0020               	movlb	0	; select bank0
  8550  2ED8  01AB               	clrf	stoa@i
  8551  2ED9  01AC               	clrf	stoa@i+1
  8552  2EDA                     l6775:	
  8553                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8554                           
  8555                           
  8556                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8557  2EDA  082C               	movf	stoa@i+1,w
  8558  2EDB  3A80               	xorlw	128
  8559  2EDC  00FA               	movwf	??_stoa
  8560  2EDD  0832               	movf	stoa@p+1,w
  8561  2EDE  3A80               	xorlw	128
  8562  2EDF  027A               	subwf	??_stoa,w
  8563  2EE0  1D03               	skipz
  8564  2EE1  2EE4               	goto	u8695
  8565  2EE2  0831               	movf	stoa@p,w
  8566  2EE3  022B               	subwf	stoa@i,w
  8567  2EE4                     u8695:	
  8568  2EE4  1803               	btfsc	3,0
  8569  2EE5  2F03               	goto	l790
  8570                           
  8571                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  8572  2EE6  0020               	movlb	0	; select bank0
  8573  2EE7  082F               	movf	stoa@cp,w
  8574  2EE8  0086               	movwf	6
  8575  2EE9  0830               	movf	stoa@cp+1,w
  8576  2EEA  0087               	movwf	7
  8577  2EEB  0801               	movf	1,w
  8578  2EEC  00FA               	movwf	??_stoa
  8579  2EED  01FB               	clrf	??_stoa+1
  8580  2EEE  087A               	movf	??_stoa,w
  8581  2EEF  00F1               	movwf	fputc@c
  8582  2EF0  087B               	movf	??_stoa+1,w
  8583  2EF1  00F2               	movwf	fputc@c+1
  8584  2EF2  0821               	movf	stoa@fp+1,w
  8585  2EF3  00F4               	movwf	fputc@fp+1
  8586  2EF4  0820               	movf	stoa@fp,w
  8587  2EF5  00F3               	movwf	fputc@fp
  8588  2EF6  31B7  27AC  31AE   	fcall	_fputc
  8589                           
  8590                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  8591  2EF9  3001               	movlw	1
  8592  2EFA  0020               	movlb	0	; select bank0
  8593  2EFB  07AF               	addwf	stoa@cp,f
  8594  2EFC  3000               	movlw	0
  8595  2EFD  3DB0               	addwfc	stoa@cp+1,f
  8596                           
  8597                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  8598  2EFE  3001               	movlw	1
  8599  2EFF  07AB               	addwf	stoa@i,f
  8600  2F00  3000               	movlw	0
  8601  2F01  3DAC               	addwfc	stoa@i+1,f
  8602  2F02  2EDA               	goto	l6775
  8603  2F03                     l790:	
  8604                           
  8605                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  8606  2F03  0022               	movlb	2	; select bank2
  8607  2F04  1869               	btfsc	_flags^(0+256),0
  8608  2F05  2F18               	goto	l6783
  8609  2F06  2F25               	goto	l6785
  8610  2F07                     l6779:	
  8611                           
  8612                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  8613  2F07  3020               	movlw	32
  8614  2F08  00F1               	movwf	fputc@c
  8615  2F09  3000               	movlw	0
  8616  2F0A  00F2               	movwf	fputc@c+1
  8617  2F0B  0020               	movlb	0	; select bank0
  8618  2F0C  0821               	movf	stoa@fp+1,w
  8619  2F0D  00F4               	movwf	fputc@fp+1
  8620  2F0E  0820               	movf	stoa@fp,w
  8621  2F0F  00F3               	movwf	fputc@fp
  8622  2F10  31B7  27AC  31AE   	fcall	_fputc
  8623                           
  8624                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  8625  2F13  3001               	movlw	1
  8626  2F14  0020               	movlb	0	; select bank0
  8627  2F15  07B3               	addwf	stoa@l,f
  8628  2F16  3000               	movlw	0
  8629  2F17  3DB4               	addwfc	stoa@l+1,f
  8630  2F18                     l6783:	
  8631                           
  8632                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  8633  2F18  0020               	movlb	0	; select bank0
  8634  2F19  0834               	movf	stoa@l+1,w
  8635  2F1A  3A80               	xorlw	128
  8636  2F1B  00FA               	movwf	??_stoa
  8637  2F1C  082E               	movf	stoa@w+1,w
  8638  2F1D  3A80               	xorlw	128
  8639  2F1E  027A               	subwf	??_stoa,w
  8640  2F1F  1D03               	skipz
  8641  2F20  2F23               	goto	u8715
  8642  2F21  082D               	movf	stoa@w,w
  8643  2F22  0233               	subwf	stoa@l,w
  8644  2F23                     u8715:	
  8645  2F23  1C03               	skipc
  8646  2F24  2F07               	goto	l6779
  8647  2F25                     l6785:	
  8648                           
  8649                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  8650  2F25  0020               	movlb	0	; select bank0
  8651  2F26  0834               	movf	stoa@l+1,w
  8652  2F27  00A1               	movwf	?_stoa+1
  8653  2F28  0833               	movf	stoa@l,w
  8654  2F29  00A0               	movwf	?_stoa
  8655  2F2A  0008               	return
  8656  2F2B                     __end_of_stoa:	
  8657                           
  8658                           	psect	text18
  8659  22FC                     __ptext18:	
  8660 ;; *************** function _otoa *****************
  8661 ;; Defined at:
  8662 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8663 ;; Parameters:    Size  Location     Type
  8664 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  8665 ;;		 -> vsnprintf@f(6), 
  8666 ;;  d               8   18[BANK0 ] unsigned long long 
  8667 ;; Auto vars:     Size  Location     Type
  8668 ;;  n               8   40[BANK0 ] unsigned long long 
  8669 ;;  i               2   48[BANK0 ] int 
  8670 ;;  w               2   38[BANK0 ] int 
  8671 ;;  t               2   36[BANK0 ] int 
  8672 ;;  p               2   34[BANK0 ] int 
  8673 ;; Return value:  Size  Location     Type
  8674 ;;                  2   16[BANK0 ] int 
  8675 ;; Registers used:
  8676 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8677 ;; Tracked objects:
  8678 ;;		On entry : 0/0
  8679 ;;		On exit  : 0/0
  8680 ;;		Unchanged: 0/0
  8681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8682 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8683 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8684 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8685 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8686 ;;Total ram usage:       34 bytes
  8687 ;; Hardware stack levels used:    1
  8688 ;; Hardware stack levels required when called:    5
  8689 ;; This function calls:
  8690 ;;		_pad
  8691 ;; This function is called by:
  8692 ;;		_vfpfcnvrt
  8693 ;; This function uses a non-reentrant model
  8694 ;;
  8695                           
  8696                           
  8697                           ;psect for function _otoa
  8698  22FC                     _otoa:	
  8699                           
  8700                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  8701                           
  8702                           ;incstack = 0
  8703                           ; Regs used in _otoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8704  22FC  0022               	movlb	2	; select bank2
  8705  22FD  1BE8               	btfsc	(_prec+1)^(0+256),7
  8706  22FE  2B03               	goto	l759
  8707                           
  8708                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
  8709  22FF  30FD               	movlw	253
  8710  2300  05E9               	andwf	_flags^(0+256),f
  8711  2301  30FF               	movlw	255
  8712  2302  05EA               	andwf	(_flags+1)^(0+256),f
  8713  2303                     l759:	
  8714                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 515:     }
  8715                           
  8716                           
  8717                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
  8718  2303  0868               	movf	(_prec+1)^(0+256),w
  8719  2304  3A80               	xorlw	128
  8720  2305  0020               	movlb	0	; select bank0
  8721  2306  00BA               	movwf	??_otoa
  8722  2307  3080               	movlw	128
  8723  2308  023A               	subwf	??_otoa,w
  8724  2309  1D03               	skipz
  8725  230A  2B0E               	goto	u8545
  8726  230B  3001               	movlw	1
  8727  230C  0022               	movlb	2	; select bank2
  8728  230D  0267               	subwf	_prec^(0+256),w
  8729  230E                     u8545:	
  8730  230E  1803               	skipnc
  8731  230F  2B16               	goto	l6701
  8732  2310  3001               	movlw	1
  8733  2311  0020               	movlb	0	; select bank0
  8734  2312  00C2               	movwf	otoa@p
  8735  2313  3000               	movlw	0
  8736  2314  00C3               	movwf	otoa@p+1
  8737  2315  2B1E               	goto	l763
  8738  2316                     l6701:	
  8739  2316  0022               	movlb	2	; select bank2
  8740  2317  0868               	movf	(_prec+1)^(0+256),w
  8741  2318  0020               	movlb	0	; select bank0
  8742  2319  00C3               	movwf	otoa@p+1
  8743  231A  0022               	movlb	2	; select bank2
  8744  231B  0867               	movf	_prec^(0+256),w
  8745  231C  0020               	movlb	0	; select bank0
  8746  231D  00C2               	movwf	otoa@p
  8747  231E                     l763:	
  8748                           
  8749                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
  8750  231E  0022               	movlb	2	; select bank2
  8751  231F  0866               	movf	(_width+1)^(0+256),w
  8752  2320  0020               	movlb	0	; select bank0
  8753  2321  00C7               	movwf	otoa@w+1
  8754  2322  0022               	movlb	2	; select bank2
  8755  2323  0865               	movf	_width^(0+256),w
  8756  2324  0020               	movlb	0	; select bank0
  8757  2325  00C6               	movwf	otoa@w
  8758                           
  8759                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
  8760  2326  0832               	movf	otoa@d,w
  8761  2327  00C8               	movwf	otoa@n
  8762  2328  0833               	movf	otoa@d+1,w
  8763  2329  00C9               	movwf	otoa@n+1
  8764  232A  0834               	movf	otoa@d+2,w
  8765  232B  00CA               	movwf	otoa@n+2
  8766  232C  0835               	movf	otoa@d+3,w
  8767  232D  00CB               	movwf	otoa@n+3
  8768  232E  0836               	movf	otoa@d+4,w
  8769  232F  00CC               	movwf	otoa@n+4
  8770  2330  0837               	movf	otoa@d+5,w
  8771  2331  00CD               	movwf	otoa@n+5
  8772  2332  0838               	movf	otoa@d+6,w
  8773  2333  00CE               	movwf	otoa@n+6
  8774  2334  0839               	movf	otoa@d+7,w
  8775  2335  00CF               	movwf	otoa@n+7
  8776                           
  8777                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
  8778  2336  301F               	movlw	31
  8779  2337  00D0               	movwf	otoa@i
  8780  2338  3000               	movlw	0
  8781  2339  00D1               	movwf	otoa@i+1
  8782                           
  8783                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
  8784  233A  0024               	movlb	4	; select bank4
  8785  233B  01BF               	clrf	(_dbuf^(0+512)+31)
  8786                           
  8787                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
  8788  233C  0020               	movlb	0	; select bank0
  8789  233D  01C4               	clrf	otoa@t
  8790  233E  01C5               	clrf	otoa@t+1
  8791                           
  8792                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8793  233F  2BB3               	goto	l764
  8794  2340                     l6719:	
  8795  2340  0020               	movlb	0	; select bank0
  8796  2341  0848               	movf	otoa@n,w
  8797  2342  0449               	iorwf	otoa@n+1,w
  8798  2343  044A               	iorwf	otoa@n+2,w
  8799  2344  044B               	iorwf	otoa@n+3,w
  8800  2345  044C               	iorwf	otoa@n+4,w
  8801  2346  044D               	iorwf	otoa@n+5,w
  8802  2347  044E               	iorwf	otoa@n+6,w
  8803  2348  044F               	iorwf	otoa@n+7,w
  8804  2349  1D03               	skipz
  8805  234A  2B65               	goto	l6709
  8806  234B  0843               	movf	otoa@p+1,w
  8807  234C  3A80               	xorlw	128
  8808  234D  00BA               	movwf	??_otoa
  8809  234E  3080               	movlw	128
  8810  234F  023A               	subwf	??_otoa,w
  8811  2350  1D03               	skipz
  8812  2351  2B54               	goto	u8585
  8813  2352  3001               	movlw	1
  8814  2353  0242               	subwf	otoa@p,w
  8815  2354                     u8585:	
  8816  2354  1803               	skipnc
  8817  2355  2B65               	goto	l6709
  8818  2356  0020               	movlb	0	; select bank0
  8819  2357  0847               	movf	otoa@w+1,w
  8820  2358  3A80               	xorlw	128
  8821  2359  00BA               	movwf	??_otoa
  8822  235A  3080               	movlw	128
  8823  235B  023A               	subwf	??_otoa,w
  8824  235C  1D03               	skipz
  8825  235D  2B60               	goto	u8595
  8826  235E  3001               	movlw	1
  8827  235F  0246               	subwf	otoa@w,w
  8828  2360                     u8595:	
  8829  2360  1C03               	skipc
  8830  2361  2BBE               	goto	l770
  8831  2362  0022               	movlb	2	; select bank2
  8832  2363  1CE9               	btfss	_flags^(0+256),1
  8833  2364  2BBE               	goto	l770
  8834  2365                     l6709:	
  8835                           
  8836                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
  8837  2365  30FF               	movlw	255
  8838  2366  0020               	movlb	0	; select bank0
  8839  2367  07D0               	addwf	otoa@i,f
  8840  2368  30FF               	movlw	255
  8841  2369  3DD1               	addwfc	otoa@i+1,f
  8842                           
  8843                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
  8844  236A  3007               	movlw	7
  8845  236B  0548               	andwf	otoa@n,w
  8846  236C  00C4               	movwf	otoa@t
  8847  236D  3000               	movlw	0
  8848  236E  0549               	andwf	otoa@n+1,w
  8849  236F  00C5               	movwf	otoa@t+1
  8850                           
  8851                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
  8852  2370  0844               	movf	otoa@t,w
  8853  2371  3E30               	addlw	48
  8854  2372  00BA               	movwf	??_otoa
  8855  2373  0850               	movf	otoa@i,w
  8856  2374  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8857  2375  0086               	movwf	6
  8858  2376  3002               	movlw	2	; select bank4/5
  8859  2377  0087               	movwf	7
  8860  2378  083A               	movf	??_otoa,w
  8861  2379  0081               	movwf	1
  8862                           
  8863                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
  8864  237A  30FF               	movlw	255
  8865  237B  07C2               	addwf	otoa@p,f
  8866  237C  30FF               	movlw	255
  8867  237D  3DC3               	addwfc	otoa@p+1,f
  8868                           
  8869                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
  8870  237E  30FF               	movlw	255
  8871  237F  07C6               	addwf	otoa@w,f
  8872  2380  30FF               	movlw	255
  8873  2381  3DC7               	addwfc	otoa@w+1,f
  8874                           
  8875                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
  8876  2382  3048               	movlw	low otoa@n
  8877  2383  0086               	movwf	6
  8878  2384  3000               	movlw	high otoa@n
  8879  2385  0087               	movwf	7
  8880  2386  3F40               	moviw [0]fsr1
  8881  2387  00BA               	movwf	??_otoa
  8882  2388  3F41               	moviw [1]fsr1
  8883  2389  00BB               	movwf	??_otoa+1
  8884  238A  3F42               	moviw [2]fsr1
  8885  238B  00BC               	movwf	??_otoa+2
  8886  238C  3F43               	moviw [3]fsr1
  8887  238D  00BD               	movwf	??_otoa+3
  8888  238E  3F44               	moviw [4]fsr1
  8889  238F  00BE               	movwf	??_otoa+4
  8890  2390  3F45               	moviw [5]fsr1
  8891  2391  00BF               	movwf	??_otoa+5
  8892  2392  3F46               	moviw [6]fsr1
  8893  2393  00C0               	movwf	??_otoa+6
  8894  2394  3F47               	moviw [7]fsr1
  8895  2395  00C1               	movwf	??_otoa+7
  8896  2396  3003               	movlw	3
  8897  2397                     u8555:	
  8898  2397  0020               	movlb	0	; select bank0
  8899  2398  36C1               	lsrf	??_otoa+7,f
  8900  2399  0CC0               	rrf	??_otoa+6,f
  8901  239A  0CBF               	rrf	??_otoa+5,f
  8902  239B  0CBE               	rrf	??_otoa+4,f
  8903  239C  0CBD               	rrf	??_otoa+3,f
  8904  239D  0CBC               	rrf	??_otoa+2,f
  8905  239E  0CBB               	rrf	??_otoa+1,f
  8906  239F  0CBA               	rrf	??_otoa,f
  8907  23A0  0B89               	decfsz	9,f
  8908  23A1  2B97               	goto	u8555
  8909  23A2  0020               	movlb	0	; select bank0
  8910  23A3  0841               	movf	??_otoa+7,w
  8911  23A4  00CF               	movwf	otoa@n+7
  8912  23A5  0840               	movf	??_otoa+6,w
  8913  23A6  00CE               	movwf	otoa@n+6
  8914  23A7  083F               	movf	??_otoa+5,w
  8915  23A8  00CD               	movwf	otoa@n+5
  8916  23A9  083E               	movf	??_otoa+4,w
  8917  23AA  00CC               	movwf	otoa@n+4
  8918  23AB  083D               	movf	??_otoa+3,w
  8919  23AC  00CB               	movwf	otoa@n+3
  8920  23AD  083C               	movf	??_otoa+2,w
  8921  23AE  00CA               	movwf	otoa@n+2
  8922  23AF  083B               	movf	??_otoa+1,w
  8923  23B0  00C9               	movwf	otoa@n+1
  8924  23B1  083A               	movf	??_otoa,w
  8925  23B2  00C8               	movwf	otoa@n
  8926  23B3                     l764:	
  8927                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 531:     }
  8928                           
  8929                           
  8930                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8931  23B3  0851               	movf	otoa@i+1,w
  8932  23B4  3A80               	xorlw	128
  8933  23B5  00BA               	movwf	??_otoa
  8934  23B6  3080               	movlw	128
  8935  23B7  023A               	subwf	??_otoa,w
  8936  23B8  1D03               	skipz
  8937  23B9  2BBC               	goto	u8565
  8938  23BA  3001               	movlw	1
  8939  23BB  0250               	subwf	otoa@i,w
  8940  23BC                     u8565:	
  8941  23BC  1803               	btfsc	3,0
  8942  23BD  2B40               	goto	l6719
  8943  23BE                     l770:	
  8944                           
  8945                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
  8946  23BE  0022               	movlb	2	; select bank2
  8947  23BF  1E69               	btfss	_flags^(0+256),4
  8948  23C0  2BD7               	goto	l6735
  8949  23C1  0020               	movlb	0	; select bank0
  8950  23C2  0844               	movf	otoa@t,w
  8951  23C3  0445               	iorwf	otoa@t+1,w
  8952  23C4  1903               	btfsc	3,2
  8953  23C5  2BD7               	goto	l6735
  8954                           
  8955                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
  8956  23C6  30FF               	movlw	255
  8957  23C7  07D0               	addwf	otoa@i,f
  8958  23C8  30FF               	movlw	255
  8959  23C9  3DD1               	addwfc	otoa@i+1,f
  8960                           
  8961                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
  8962  23CA  3030               	movlw	48
  8963  23CB  00BA               	movwf	??_otoa
  8964  23CC  0850               	movf	otoa@i,w
  8965  23CD  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8966  23CE  0086               	movwf	6
  8967  23CF  3002               	movlw	2	; select bank4/5
  8968  23D0  0087               	movwf	7
  8969  23D1  083A               	movf	??_otoa,w
  8970  23D2  0081               	movwf	1
  8971                           
  8972                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
  8973  23D3  30FF               	movlw	255
  8974  23D4  07C6               	addwf	otoa@w,f
  8975  23D5  30FF               	movlw	255
  8976  23D6  3DC7               	addwfc	otoa@w+1,f
  8977  23D7                     l6735:	
  8978                           
  8979                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
  8980  23D7  0020               	movlb	0	; select bank0
  8981  23D8  0831               	movf	otoa@fp+1,w
  8982  23D9  00A7               	movwf	pad@fp+1
  8983  23DA  0830               	movf	otoa@fp,w
  8984  23DB  00A6               	movwf	pad@fp
  8985  23DC  0850               	movf	otoa@i,w
  8986  23DD  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8987  23DE  00BA               	movwf	??_otoa
  8988  23DF  083A               	movf	??_otoa,w
  8989  23E0  00A8               	movwf	pad@buf
  8990  23E1  0847               	movf	otoa@w+1,w
  8991  23E2  00AA               	movwf	pad@p+1
  8992  23E3  0846               	movf	otoa@w,w
  8993  23E4  00A9               	movwf	pad@p
  8994  23E5  31B7  2709         	fcall	_pad
  8995  23E7  0020               	movlb	0	; select bank0
  8996  23E8  0827               	movf	?_pad+1,w
  8997  23E9  00B1               	movwf	?_otoa+1
  8998  23EA  0826               	movf	?_pad,w
  8999  23EB  00B0               	movwf	?_otoa
  9000  23EC  0008               	return
  9001  23ED                     __end_of_otoa:	
  9002                           
  9003                           	psect	text19
  9004  189F                     __ptext19:	
  9005 ;; *************** function _dtoa *****************
  9006 ;; Defined at:
  9007 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9008 ;; Parameters:    Size  Location     Type
  9009 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  9010 ;;		 -> vsnprintf@f(6), 
  9011 ;;  d               8   18[BANK0 ] long long 
  9012 ;; Auto vars:     Size  Location     Type
  9013 ;;  n               8   37[BANK0 ] long long 
  9014 ;;  i               2   45[BANK0 ] int 
  9015 ;;  s               2   35[BANK0 ] int 
  9016 ;;  w               2   33[BANK0 ] int 
  9017 ;;  p               2   31[BANK0 ] int 
  9018 ;; Return value:  Size  Location     Type
  9019 ;;                  2   16[BANK0 ] int 
  9020 ;; Registers used:
  9021 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9022 ;; Tracked objects:
  9023 ;;		On entry : 0/0
  9024 ;;		On exit  : 0/0
  9025 ;;		Unchanged: 0/0
  9026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9027 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9028 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9029 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9030 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9031 ;;Total ram usage:       31 bytes
  9032 ;; Hardware stack levels used:    1
  9033 ;; Hardware stack levels required when called:    5
  9034 ;; This function calls:
  9035 ;;		___aodiv
  9036 ;;		___aomod
  9037 ;;		_abs
  9038 ;;		_pad
  9039 ;; This function is called by:
  9040 ;;		_vfpfcnvrt
  9041 ;; This function uses a non-reentrant model
  9042 ;;
  9043                           
  9044                           
  9045                           ;psect for function _dtoa
  9046  189F                     _dtoa:	
  9047                           
  9048                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  9049                           
  9050                           ;incstack = 0
  9051                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9052  189F  0020               	movlb	0	; select bank0
  9053  18A0  0832               	movf	dtoa@d,w
  9054  18A1  00C5               	movwf	dtoa@n
  9055  18A2  0833               	movf	dtoa@d+1,w
  9056  18A3  00C6               	movwf	dtoa@n+1
  9057  18A4  0834               	movf	dtoa@d+2,w
  9058  18A5  00C7               	movwf	dtoa@n+2
  9059  18A6  0835               	movf	dtoa@d+3,w
  9060  18A7  00C8               	movwf	dtoa@n+3
  9061  18A8  0836               	movf	dtoa@d+4,w
  9062  18A9  00C9               	movwf	dtoa@n+4
  9063  18AA  0837               	movf	dtoa@d+5,w
  9064  18AB  00CA               	movwf	dtoa@n+5
  9065  18AC  0838               	movf	dtoa@d+6,w
  9066  18AD  00CB               	movwf	dtoa@n+6
  9067  18AE  0839               	movf	dtoa@d+7,w
  9068  18AF  00CC               	movwf	dtoa@n+7
  9069                           
  9070                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  9071  18B0  3045               	movlw	low dtoa@n
  9072  18B1  0086               	movwf	6
  9073  18B2  3000               	movlw	high dtoa@n
  9074  18B3  0087               	movwf	7
  9075  18B4  3F47               	moviw [7]fsr1
  9076  18B5  00BA               	movwf	??_dtoa
  9077  18B6  1FBA               	btfss	??_dtoa,7
  9078  18B7  28BA               	goto	u8370
  9079  18B8  3001               	movlw	1
  9080  18B9  28BB               	goto	u8380
  9081  18BA                     u8370:	
  9082  18BA  3000               	movlw	0
  9083  18BB                     u8380:	
  9084  18BB  0020               	movlb	0	; select bank0
  9085  18BC  00BB               	movwf	??_dtoa+1
  9086  18BD  01BC               	clrf	??_dtoa+2
  9087  18BE  083B               	movf	??_dtoa+1,w
  9088  18BF  00C3               	movwf	dtoa@s
  9089  18C0  083C               	movf	??_dtoa+2,w
  9090  18C1  00C4               	movwf	dtoa@s+1
  9091                           
  9092                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  9093  18C2  0843               	movf	dtoa@s,w
  9094  18C3  0444               	iorwf	dtoa@s+1,w
  9095  18C4  1903               	btfsc	3,2
  9096  18C5  28E4               	goto	l733
  9097                           
  9098                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  9099  18C6  09C5               	comf	dtoa@n,f
  9100  18C7  09C6               	comf	dtoa@n+1,f
  9101  18C8  09C7               	comf	dtoa@n+2,f
  9102  18C9  09C8               	comf	dtoa@n+3,f
  9103  18CA  09C9               	comf	dtoa@n+4,f
  9104  18CB  09CA               	comf	dtoa@n+5,f
  9105  18CC  09CB               	comf	dtoa@n+6,f
  9106  18CD  09CC               	comf	dtoa@n+7,f
  9107  18CE  0AC5               	incf	dtoa@n,f
  9108  18CF  1D03               	skipz
  9109  18D0  28E4               	goto	l733
  9110  18D1  0AC6               	incf	dtoa@n+1,f
  9111  18D2  1D03               	skipz
  9112  18D3  28E4               	goto	l733
  9113  18D4  0AC7               	incf	dtoa@n+2,f
  9114  18D5  1D03               	skipz
  9115  18D6  28E4               	goto	l733
  9116  18D7  0AC8               	incf	dtoa@n+3,f
  9117  18D8  1D03               	skipz
  9118  18D9  28E4               	goto	l733
  9119  18DA  0AC9               	incf	dtoa@n+4,f
  9120  18DB  1D03               	skipz
  9121  18DC  28E4               	goto	l733
  9122  18DD  0ACA               	incf	dtoa@n+5,f
  9123  18DE  1D03               	skipz
  9124  18DF  28E4               	goto	l733
  9125  18E0  0ACB               	incf	dtoa@n+6,f
  9126  18E1  1D03               	skipz
  9127  18E2  28E4               	goto	l733
  9128  18E3  0ACC               	incf	dtoa@n+7,f
  9129  18E4                     l733:	
  9130                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
  9131                           
  9132                           
  9133                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  9134  18E4  0022               	movlb	2	; select bank2
  9135  18E5  1BE8               	btfsc	(_prec+1)^(0+256),7
  9136  18E6  28EB               	goto	l734
  9137                           
  9138                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  9139  18E7  30FD               	movlw	253
  9140  18E8  05E9               	andwf	_flags^(0+256),f
  9141  18E9  30FF               	movlw	255
  9142  18EA  05EA               	andwf	(_flags+1)^(0+256),f
  9143  18EB                     l734:	
  9144                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
  9145                           
  9146                           
  9147                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  9148  18EB  0868               	movf	(_prec+1)^(0+256),w
  9149  18EC  3A80               	xorlw	128
  9150  18ED  0020               	movlb	0	; select bank0
  9151  18EE  00BA               	movwf	??_dtoa
  9152  18EF  3080               	movlw	128
  9153  18F0  023A               	subwf	??_dtoa,w
  9154  18F1  1D03               	skipz
  9155  18F2  28F6               	goto	u8425
  9156  18F3  3001               	movlw	1
  9157  18F4  0022               	movlb	2	; select bank2
  9158  18F5  0267               	subwf	_prec^(0+256),w
  9159  18F6                     u8425:	
  9160  18F6  1803               	skipnc
  9161  18F7  28FE               	goto	l6649
  9162  18F8  3001               	movlw	1
  9163  18F9  0020               	movlb	0	; select bank0
  9164  18FA  00BF               	movwf	dtoa@p
  9165  18FB  3000               	movlw	0
  9166  18FC  00C0               	movwf	dtoa@p+1
  9167  18FD  2906               	goto	l738
  9168  18FE                     l6649:	
  9169  18FE  0022               	movlb	2	; select bank2
  9170  18FF  0868               	movf	(_prec+1)^(0+256),w
  9171  1900  0020               	movlb	0	; select bank0
  9172  1901  00C0               	movwf	dtoa@p+1
  9173  1902  0022               	movlb	2	; select bank2
  9174  1903  0867               	movf	_prec^(0+256),w
  9175  1904  0020               	movlb	0	; select bank0
  9176  1905  00BF               	movwf	dtoa@p
  9177  1906                     l738:	
  9178                           
  9179                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  9180  1906  0022               	movlb	2	; select bank2
  9181  1907  0866               	movf	(_width+1)^(0+256),w
  9182  1908  0020               	movlb	0	; select bank0
  9183  1909  00C2               	movwf	dtoa@w+1
  9184  190A  0022               	movlb	2	; select bank2
  9185  190B  0865               	movf	_width^(0+256),w
  9186  190C  0020               	movlb	0	; select bank0
  9187  190D  00C1               	movwf	dtoa@w
  9188                           
  9189                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  9190  190E  0843               	movf	dtoa@s,w
  9191  190F  0444               	iorwf	dtoa@s+1,w
  9192  1910  1D03               	btfss	3,2
  9193  1911  2915               	goto	l6655
  9194  1912  0022               	movlb	2	; select bank2
  9195  1913  1D69               	btfss	_flags^(0+256),2
  9196  1914  291A               	goto	l739
  9197  1915                     l6655:	
  9198                           
  9199                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  9200  1915  30FF               	movlw	255
  9201  1916  0020               	movlb	0	; select bank0
  9202  1917  07C1               	addwf	dtoa@w,f
  9203  1918  30FF               	movlw	255
  9204  1919  3DC2               	addwfc	dtoa@w+1,f
  9205  191A                     l739:	
  9206                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
  9207                           
  9208                           
  9209                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  9210  191A  301F               	movlw	31
  9211  191B  0020               	movlb	0	; select bank0
  9212  191C  00CD               	movwf	dtoa@i
  9213  191D  3000               	movlw	0
  9214  191E  00CE               	movwf	dtoa@i+1
  9215                           
  9216                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  9217  191F  0024               	movlb	4	; select bank4
  9218  1920  01BF               	clrf	(_dbuf^(0+512)+31)
  9219                           
  9220                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9221  1921  29B0               	goto	l742
  9222  1922                     l6669:	
  9223  1922  0020               	movlb	0	; select bank0
  9224  1923  0845               	movf	dtoa@n,w
  9225  1924  0446               	iorwf	dtoa@n+1,w
  9226  1925  0447               	iorwf	dtoa@n+2,w
  9227  1926  0448               	iorwf	dtoa@n+3,w
  9228  1927  0449               	iorwf	dtoa@n+4,w
  9229  1928  044A               	iorwf	dtoa@n+5,w
  9230  1929  044B               	iorwf	dtoa@n+6,w
  9231  192A  044C               	iorwf	dtoa@n+7,w
  9232  192B  1D03               	skipz
  9233  192C  2947               	goto	l6659
  9234  192D  0840               	movf	dtoa@p+1,w
  9235  192E  3A80               	xorlw	128
  9236  192F  00BA               	movwf	??_dtoa
  9237  1930  3080               	movlw	128
  9238  1931  023A               	subwf	??_dtoa,w
  9239  1932  1D03               	skipz
  9240  1933  2936               	goto	u8475
  9241  1934  3001               	movlw	1
  9242  1935  023F               	subwf	dtoa@p,w
  9243  1936                     u8475:	
  9244  1936  1803               	skipnc
  9245  1937  2947               	goto	l6659
  9246  1938  0020               	movlb	0	; select bank0
  9247  1939  0842               	movf	dtoa@w+1,w
  9248  193A  3A80               	xorlw	128
  9249  193B  00BA               	movwf	??_dtoa
  9250  193C  3080               	movlw	128
  9251  193D  023A               	subwf	??_dtoa,w
  9252  193E  1D03               	skipz
  9253  193F  2942               	goto	u8485
  9254  1940  3001               	movlw	1
  9255  1941  0241               	subwf	dtoa@w,w
  9256  1942                     u8485:	
  9257  1942  1C03               	skipc
  9258  1943  29BC               	goto	l6677
  9259  1944  0022               	movlb	2	; select bank2
  9260  1945  1CE9               	btfss	_flags^(0+256),1
  9261  1946  29BC               	goto	l6677
  9262  1947                     l6659:	
  9263                           
  9264                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  9265  1947  30FF               	movlw	255
  9266  1948  0020               	movlb	0	; select bank0
  9267  1949  07CD               	addwf	dtoa@i,f
  9268  194A  30FF               	movlw	255
  9269  194B  3DCE               	addwfc	dtoa@i+1,f
  9270                           
  9271                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  9272  194C  300A               	movlw	10
  9273  194D  00A0               	movwf	___aomod@divisor
  9274  194E  01A1               	clrf	___aomod@divisor+1
  9275  194F  01A2               	clrf	___aomod@divisor+2
  9276  1950  01A3               	clrf	___aomod@divisor+3
  9277  1951  01A4               	clrf	___aomod@divisor+4
  9278  1952  01A5               	clrf	___aomod@divisor+5
  9279  1953  01A6               	clrf	___aomod@divisor+6
  9280  1954  01A7               	clrf	___aomod@divisor+7
  9281  1955  0845               	movf	dtoa@n,w
  9282  1956  00A8               	movwf	___aomod@dividend
  9283  1957  0846               	movf	dtoa@n+1,w
  9284  1958  00A9               	movwf	___aomod@dividend+1
  9285  1959  0847               	movf	dtoa@n+2,w
  9286  195A  00AA               	movwf	___aomod@dividend+2
  9287  195B  0848               	movf	dtoa@n+3,w
  9288  195C  00AB               	movwf	___aomod@dividend+3
  9289  195D  0849               	movf	dtoa@n+4,w
  9290  195E  00AC               	movwf	___aomod@dividend+4
  9291  195F  084A               	movf	dtoa@n+5,w
  9292  1960  00AD               	movwf	___aomod@dividend+5
  9293  1961  084B               	movf	dtoa@n+6,w
  9294  1962  00AE               	movwf	___aomod@dividend+6
  9295  1963  084C               	movf	dtoa@n+7,w
  9296  1964  00AF               	movwf	___aomod@dividend+7
  9297  1965  31A1  213F  3198   	fcall	___aomod
  9298  1968  0020               	movlb	0	; select bank0
  9299  1969  0821               	movf	?___aomod+1,w
  9300  196A  00F5               	movwf	abs@a+1
  9301  196B  0820               	movf	?___aomod,w
  9302  196C  00F4               	movwf	abs@a
  9303  196D  31B3  2391  3198   	fcall	_abs
  9304  1970  0874               	movf	?_abs,w
  9305  1971  3E30               	addlw	48
  9306  1972  0020               	movlb	0	; select bank0
  9307  1973  00BA               	movwf	??_dtoa
  9308  1974  084D               	movf	dtoa@i,w
  9309  1975  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9310  1976  0086               	movwf	6
  9311  1977  3002               	movlw	2	; select bank4/5
  9312  1978  0087               	movwf	7
  9313  1979  083A               	movf	??_dtoa,w
  9314  197A  0081               	movwf	1
  9315                           
  9316                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  9317  197B  30FF               	movlw	255
  9318  197C  07BF               	addwf	dtoa@p,f
  9319  197D  30FF               	movlw	255
  9320  197E  3DC0               	addwfc	dtoa@p+1,f
  9321                           
  9322                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  9323  197F  30FF               	movlw	255
  9324  1980  07C1               	addwf	dtoa@w,f
  9325  1981  30FF               	movlw	255
  9326  1982  3DC2               	addwfc	dtoa@w+1,f
  9327                           
  9328                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  9329  1983  300A               	movlw	10
  9330  1984  00A0               	movwf	___aodiv@divisor
  9331  1985  01A1               	clrf	___aodiv@divisor+1
  9332  1986  01A2               	clrf	___aodiv@divisor+2
  9333  1987  01A3               	clrf	___aodiv@divisor+3
  9334  1988  01A4               	clrf	___aodiv@divisor+4
  9335  1989  01A5               	clrf	___aodiv@divisor+5
  9336  198A  01A6               	clrf	___aodiv@divisor+6
  9337  198B  01A7               	clrf	___aodiv@divisor+7
  9338  198C  0845               	movf	dtoa@n,w
  9339  198D  00A8               	movwf	___aodiv@dividend
  9340  198E  0846               	movf	dtoa@n+1,w
  9341  198F  00A9               	movwf	___aodiv@dividend+1
  9342  1990  0847               	movf	dtoa@n+2,w
  9343  1991  00AA               	movwf	___aodiv@dividend+2
  9344  1992  0848               	movf	dtoa@n+3,w
  9345  1993  00AB               	movwf	___aodiv@dividend+3
  9346  1994  0849               	movf	dtoa@n+4,w
  9347  1995  00AC               	movwf	___aodiv@dividend+4
  9348  1996  084A               	movf	dtoa@n+5,w
  9349  1997  00AD               	movwf	___aodiv@dividend+5
  9350  1998  084B               	movf	dtoa@n+6,w
  9351  1999  00AE               	movwf	___aodiv@dividend+6
  9352  199A  084C               	movf	dtoa@n+7,w
  9353  199B  00AF               	movwf	___aodiv@dividend+7
  9354  199C  31A3  23ED  3198   	fcall	___aodiv
  9355  199F  0020               	movlb	0	; select bank0
  9356  19A0  0820               	movf	?___aodiv,w
  9357  19A1  00C5               	movwf	dtoa@n
  9358  19A2  0821               	movf	?___aodiv+1,w
  9359  19A3  00C6               	movwf	dtoa@n+1
  9360  19A4  0822               	movf	?___aodiv+2,w
  9361  19A5  00C7               	movwf	dtoa@n+2
  9362  19A6  0823               	movf	?___aodiv+3,w
  9363  19A7  00C8               	movwf	dtoa@n+3
  9364  19A8  0824               	movf	?___aodiv+4,w
  9365  19A9  00C9               	movwf	dtoa@n+4
  9366  19AA  0825               	movf	?___aodiv+5,w
  9367  19AB  00CA               	movwf	dtoa@n+5
  9368  19AC  0826               	movf	?___aodiv+6,w
  9369  19AD  00CB               	movwf	dtoa@n+6
  9370  19AE  0827               	movf	?___aodiv+7,w
  9371  19AF  00CC               	movwf	dtoa@n+7
  9372  19B0                     l742:	
  9373                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
  9374                           
  9375                           
  9376                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9377  19B0  0020               	movlb	0	; select bank0
  9378  19B1  084E               	movf	dtoa@i+1,w
  9379  19B2  3A80               	xorlw	128
  9380  19B3  00BA               	movwf	??_dtoa
  9381  19B4  3080               	movlw	128
  9382  19B5  023A               	subwf	??_dtoa,w
  9383  19B6  1D03               	skipz
  9384  19B7  29BA               	goto	u8455
  9385  19B8  3001               	movlw	1
  9386  19B9  024D               	subwf	dtoa@i,w
  9387  19BA                     u8455:	
  9388  19BA  1803               	btfsc	3,0
  9389  19BB  2922               	goto	l6669
  9390  19BC                     l6677:	
  9391                           
  9392                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  9393  19BC  0020               	movlb	0	; select bank0
  9394  19BD  0843               	movf	dtoa@s,w
  9395  19BE  0444               	iorwf	dtoa@s+1,w
  9396  19BF  1D03               	btfss	3,2
  9397  19C0  29C4               	goto	l6681
  9398  19C1  0022               	movlb	2	; select bank2
  9399  19C2  1D69               	btfss	_flags^(0+256),2
  9400  19C3  29DC               	goto	l6691
  9401  19C4                     l6681:	
  9402                           
  9403                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  9404  19C4  30FF               	movlw	255
  9405  19C5  0020               	movlb	0	; select bank0
  9406  19C6  07CD               	addwf	dtoa@i,f
  9407  19C7  30FF               	movlw	255
  9408  19C8  3DCE               	addwfc	dtoa@i+1,f
  9409                           
  9410                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  9411  19C9  0843               	movf	dtoa@s,w
  9412  19CA  0444               	iorwf	dtoa@s+1,w
  9413  19CB  1D03               	btfss	3,2
  9414  19CC  29CF               	goto	l6687
  9415  19CD  302B               	movlw	43
  9416  19CE  29D0               	goto	L2
  9417  19CF                     l6687:	
  9418  19CF  302D               	movlw	45
  9419  19D0                     L2:	
  9420  19D0  00BD               	movwf	_dtoa$1249
  9421  19D1  3000               	movlw	0
  9422  19D2  00BE               	movwf	_dtoa$1249+1
  9423  19D3  083D               	movf	_dtoa$1249,w
  9424  19D4  00BA               	movwf	??_dtoa
  9425  19D5  084D               	movf	dtoa@i,w
  9426  19D6  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9427  19D7  0086               	movwf	6
  9428  19D8  3002               	movlw	2	; select bank4/5
  9429  19D9  0087               	movwf	7
  9430  19DA  083A               	movf	??_dtoa,w
  9431  19DB  0081               	movwf	1
  9432  19DC                     l6691:	
  9433                           
  9434                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  9435  19DC  0020               	movlb	0	; select bank0
  9436  19DD  0831               	movf	dtoa@fp+1,w
  9437  19DE  00A7               	movwf	pad@fp+1
  9438  19DF  0830               	movf	dtoa@fp,w
  9439  19E0  00A6               	movwf	pad@fp
  9440  19E1  084D               	movf	dtoa@i,w
  9441  19E2  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9442  19E3  00BA               	movwf	??_dtoa
  9443  19E4  083A               	movf	??_dtoa,w
  9444  19E5  00A8               	movwf	pad@buf
  9445  19E6  0842               	movf	dtoa@w+1,w
  9446  19E7  00AA               	movwf	pad@p+1
  9447  19E8  0841               	movf	dtoa@w,w
  9448  19E9  00A9               	movwf	pad@p
  9449  19EA  31B7  2709         	fcall	_pad
  9450  19EC  0020               	movlb	0	; select bank0
  9451  19ED  0827               	movf	?_pad+1,w
  9452  19EE  00B1               	movwf	?_dtoa+1
  9453  19EF  0826               	movf	?_pad,w
  9454  19F0  00B0               	movwf	?_dtoa
  9455  19F1  0008               	return
  9456  19F2                     __end_of_dtoa:	
  9457                           
  9458                           	psect	text20
  9459  3391                     __ptext20:	
  9460 ;; *************** function _abs *****************
  9461 ;; Defined at:
  9462 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  9463 ;; Parameters:    Size  Location     Type
  9464 ;;  a               2    4[COMMON] int 
  9465 ;; Auto vars:     Size  Location     Type
  9466 ;;		None
  9467 ;; Return value:  Size  Location     Type
  9468 ;;                  2    4[COMMON] int 
  9469 ;; Registers used:
  9470 ;;		wreg, status,2, status,0
  9471 ;; Tracked objects:
  9472 ;;		On entry : 0/0
  9473 ;;		On exit  : 0/0
  9474 ;;		Unchanged: 0/0
  9475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9476 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9478 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9479 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9480 ;;Total ram usage:        4 bytes
  9481 ;; Hardware stack levels used:    1
  9482 ;; Hardware stack levels required when called:    1
  9483 ;; This function calls:
  9484 ;;		Nothing
  9485 ;; This function is called by:
  9486 ;;		_dtoa
  9487 ;; This function uses a non-reentrant model
  9488 ;;
  9489                           
  9490                           
  9491                           ;psect for function _abs
  9492  3391                     _abs:	
  9493                           
  9494                           ;incstack = 0
  9495                           ; Regs used in _abs: [wreg+status,2+status,0]
  9496  3391  0875               	movf	abs@a+1,w
  9497  3392  3A80               	xorlw	128
  9498  3393  00F6               	movwf	??_abs
  9499  3394  3080               	movlw	128
  9500  3395  0276               	subwf	??_abs,w
  9501  3396  1D03               	skipz
  9502  3397  2B9A               	goto	u7905
  9503  3398  3001               	movlw	1
  9504  3399  0274               	subwf	abs@a,w
  9505  339A                     u7905:	
  9506  339A  1803               	skipnc
  9507  339B  0008               	return
  9508  339C  0974               	comf	abs@a,w
  9509  339D  00F6               	movwf	??_abs
  9510  339E  0975               	comf	abs@a+1,w
  9511  339F  00F7               	movwf	??_abs+1
  9512  33A0  0AF6               	incf	??_abs,f
  9513  33A1  1903               	skipnz
  9514  33A2  0AF7               	incf	??_abs+1,f
  9515  33A3  0876               	movf	??_abs,w
  9516  33A4  00F4               	movwf	?_abs
  9517  33A5  0877               	movf	??_abs+1,w
  9518  33A6  00F5               	movwf	?_abs+1
  9519  33A7  0008               	return
  9520  33A8                     __end_of_abs:	
  9521                           
  9522                           	psect	text21
  9523  213F                     __ptext21:	
  9524 ;; *************** function ___aomod *****************
  9525 ;; Defined at:
  9526 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  9527 ;; Parameters:    Size  Location     Type
  9528 ;;  divisor         8    0[BANK0 ] long long 
  9529 ;;  dividend        8    8[BANK0 ] long long 
  9530 ;; Auto vars:     Size  Location     Type
  9531 ;;  sign            1    3[COMMON] unsigned char 
  9532 ;;  counter         1    2[COMMON] unsigned char 
  9533 ;; Return value:  Size  Location     Type
  9534 ;;                  8    0[BANK0 ] long long 
  9535 ;; Registers used:
  9536 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9537 ;; Tracked objects:
  9538 ;;		On entry : 0/0
  9539 ;;		On exit  : 0/0
  9540 ;;		Unchanged: 0/0
  9541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9542 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9543 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9544 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9545 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9546 ;;Total ram usage:       19 bytes
  9547 ;; Hardware stack levels used:    1
  9548 ;; Hardware stack levels required when called:    1
  9549 ;; This function calls:
  9550 ;;		Nothing
  9551 ;; This function is called by:
  9552 ;;		_dtoa
  9553 ;; This function uses a non-reentrant model
  9554 ;;
  9555                           
  9556                           
  9557                           ;psect for function ___aomod
  9558  213F                     ___aomod:	
  9559                           
  9560                           ;incstack = 0
  9561                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  9562  213F  01F3               	clrf	___aomod@sign
  9563  2140  3028               	movlw	low ___aomod@dividend
  9564  2141  0086               	movwf	6
  9565  2142  3000               	movlw	high ___aomod@dividend
  9566  2143  0087               	movwf	7
  9567  2144  3F47               	moviw [7]fsr1
  9568  2145  00F1               	movwf	??___aomod
  9569  2146  1FF1               	btfss	??___aomod,7
  9570  2147  2969               	goto	l6549
  9571  2148  0020               	movlb	0	; select bank0
  9572  2149  09A8               	comf	___aomod@dividend,f
  9573  214A  09A9               	comf	___aomod@dividend+1,f
  9574  214B  09AA               	comf	___aomod@dividend+2,f
  9575  214C  09AB               	comf	___aomod@dividend+3,f
  9576  214D  09AC               	comf	___aomod@dividend+4,f
  9577  214E  09AD               	comf	___aomod@dividend+5,f
  9578  214F  09AE               	comf	___aomod@dividend+6,f
  9579  2150  09AF               	comf	___aomod@dividend+7,f
  9580  2151  0AA8               	incf	___aomod@dividend,f
  9581  2152  1D03               	skipz
  9582  2153  2967               	goto	u816lld
  9583  2154  0AA9               	incf	___aomod@dividend+1,f
  9584  2155  1D03               	skipz
  9585  2156  2967               	goto	u816lld
  9586  2157  0AAA               	incf	___aomod@dividend+2,f
  9587  2158  1D03               	skipz
  9588  2159  2967               	goto	u816lld
  9589  215A  0AAB               	incf	___aomod@dividend+3,f
  9590  215B  1D03               	skipz
  9591  215C  2967               	goto	u816lld
  9592  215D  0AAC               	incf	___aomod@dividend+4,f
  9593  215E  1D03               	skipz
  9594  215F  2967               	goto	u816lld
  9595  2160  0AAD               	incf	___aomod@dividend+5,f
  9596  2161  1D03               	skipz
  9597  2162  2967               	goto	u816lld
  9598  2163  0AAE               	incf	___aomod@dividend+6,f
  9599  2164  1D03               	skipz
  9600  2165  2967               	goto	u816lld
  9601  2166  0AAF               	incf	___aomod@dividend+7,f
  9602  2167                     u816lld:	
  9603  2167  01F3               	clrf	___aomod@sign
  9604  2168  0AF3               	incf	___aomod@sign,f
  9605  2169                     l6549:	
  9606  2169  3020               	movlw	low ___aomod@divisor
  9607  216A  0086               	movwf	6
  9608  216B  3000               	movlw	high ___aomod@divisor
  9609  216C  0087               	movwf	7
  9610  216D  3F47               	moviw [7]fsr1
  9611  216E  00F1               	movwf	??___aomod
  9612  216F  1FF1               	btfss	??___aomod,7
  9613  2170  2990               	goto	l6553
  9614  2171  0020               	movlb	0	; select bank0
  9615  2172  09A0               	comf	___aomod@divisor,f
  9616  2173  09A1               	comf	___aomod@divisor+1,f
  9617  2174  09A2               	comf	___aomod@divisor+2,f
  9618  2175  09A3               	comf	___aomod@divisor+3,f
  9619  2176  09A4               	comf	___aomod@divisor+4,f
  9620  2177  09A5               	comf	___aomod@divisor+5,f
  9621  2178  09A6               	comf	___aomod@divisor+6,f
  9622  2179  09A7               	comf	___aomod@divisor+7,f
  9623  217A  0AA0               	incf	___aomod@divisor,f
  9624  217B  1D03               	skipz
  9625  217C  2990               	goto	l6553
  9626  217D  0AA1               	incf	___aomod@divisor+1,f
  9627  217E  1D03               	skipz
  9628  217F  2990               	goto	l6553
  9629  2180  0AA2               	incf	___aomod@divisor+2,f
  9630  2181  1D03               	skipz
  9631  2182  2990               	goto	l6553
  9632  2183  0AA3               	incf	___aomod@divisor+3,f
  9633  2184  1D03               	skipz
  9634  2185  2990               	goto	l6553
  9635  2186  0AA4               	incf	___aomod@divisor+4,f
  9636  2187  1D03               	skipz
  9637  2188  2990               	goto	l6553
  9638  2189  0AA5               	incf	___aomod@divisor+5,f
  9639  218A  1D03               	skipz
  9640  218B  2990               	goto	l6553
  9641  218C  0AA6               	incf	___aomod@divisor+6,f
  9642  218D  1D03               	skipz
  9643  218E  2990               	goto	l6553
  9644  218F  0AA7               	incf	___aomod@divisor+7,f
  9645  2190                     l6553:	
  9646  2190  0020               	movlb	0	; select bank0
  9647  2191  0820               	movf	___aomod@divisor,w
  9648  2192  0421               	iorwf	___aomod@divisor+1,w
  9649  2193  0422               	iorwf	___aomod@divisor+2,w
  9650  2194  0423               	iorwf	___aomod@divisor+3,w
  9651  2195  0424               	iorwf	___aomod@divisor+4,w
  9652  2196  0425               	iorwf	___aomod@divisor+5,w
  9653  2197  0426               	iorwf	___aomod@divisor+6,w
  9654  2198  0427               	iorwf	___aomod@divisor+7,w
  9655  2199  1903               	skipnz
  9656  219A  29E8               	goto	l6569
  9657  219B  01F2               	clrf	___aomod@counter
  9658  219C  0AF2               	incf	___aomod@counter,f
  9659  219D                     l6561:	
  9660  219D  1BA7               	btfsc	___aomod@divisor+7,7
  9661  219E  29AC               	goto	l6563
  9662  219F  35A0               	lslf	___aomod@divisor,f
  9663  21A0  0DA1               	rlf	___aomod@divisor+1,f
  9664  21A1  0DA2               	rlf	___aomod@divisor+2,f
  9665  21A2  0DA3               	rlf	___aomod@divisor+3,f
  9666  21A3  0DA4               	rlf	___aomod@divisor+4,f
  9667  21A4  0DA5               	rlf	___aomod@divisor+5,f
  9668  21A5  0DA6               	rlf	___aomod@divisor+6,f
  9669  21A6  0DA7               	rlf	___aomod@divisor+7,f
  9670  21A7  3001               	movlw	1
  9671  21A8  00F1               	movwf	??___aomod
  9672  21A9  0871               	movf	??___aomod,w
  9673  21AA  07F2               	addwf	___aomod@counter,f
  9674  21AB  299D               	goto	l6561
  9675  21AC                     l6563:	
  9676  21AC  0827               	movf	___aomod@divisor+7,w
  9677  21AD  022F               	subwf	___aomod@dividend+7,w
  9678  21AE  1D03               	skipz
  9679  21AF  29CA               	goto	u8215
  9680  21B0  0826               	movf	___aomod@divisor+6,w
  9681  21B1  022E               	subwf	___aomod@dividend+6,w
  9682  21B2  1D03               	skipz
  9683  21B3  29CA               	goto	u8215
  9684  21B4  0825               	movf	___aomod@divisor+5,w
  9685  21B5  022D               	subwf	___aomod@dividend+5,w
  9686  21B6  1D03               	skipz
  9687  21B7  29CA               	goto	u8215
  9688  21B8  0824               	movf	___aomod@divisor+4,w
  9689  21B9  022C               	subwf	___aomod@dividend+4,w
  9690  21BA  1D03               	skipz
  9691  21BB  29CA               	goto	u8215
  9692  21BC  0823               	movf	___aomod@divisor+3,w
  9693  21BD  022B               	subwf	___aomod@dividend+3,w
  9694  21BE  1D03               	skipz
  9695  21BF  29CA               	goto	u8215
  9696  21C0  0822               	movf	___aomod@divisor+2,w
  9697  21C1  022A               	subwf	___aomod@dividend+2,w
  9698  21C2  1D03               	skipz
  9699  21C3  29CA               	goto	u8215
  9700  21C4  0821               	movf	___aomod@divisor+1,w
  9701  21C5  0229               	subwf	___aomod@dividend+1,w
  9702  21C6  1D03               	skipz
  9703  21C7  29CA               	goto	u8215
  9704  21C8  0820               	movf	___aomod@divisor,w
  9705  21C9  0228               	subwf	___aomod@dividend,w
  9706  21CA                     u8215:	
  9707  21CA  1C03               	skipc
  9708  21CB  29DC               	goto	l6567
  9709  21CC  0820               	movf	___aomod@divisor,w
  9710  21CD  02A8               	subwf	___aomod@dividend,f
  9711  21CE  0821               	movf	___aomod@divisor+1,w
  9712  21CF  3BA9               	subwfb	___aomod@dividend+1,f
  9713  21D0  0822               	movf	___aomod@divisor+2,w
  9714  21D1  3BAA               	subwfb	___aomod@dividend+2,f
  9715  21D2  0823               	movf	___aomod@divisor+3,w
  9716  21D3  3BAB               	subwfb	___aomod@dividend+3,f
  9717  21D4  0824               	movf	___aomod@divisor+4,w
  9718  21D5  3BAC               	subwfb	___aomod@dividend+4,f
  9719  21D6  0825               	movf	___aomod@divisor+5,w
  9720  21D7  3BAD               	subwfb	___aomod@dividend+5,f
  9721  21D8  0826               	movf	___aomod@divisor+6,w
  9722  21D9  3BAE               	subwfb	___aomod@dividend+6,f
  9723  21DA  0827               	movf	___aomod@divisor+7,w
  9724  21DB  3BAF               	subwfb	___aomod@dividend+7,f
  9725  21DC                     l6567:	
  9726  21DC  36A7               	lsrf	___aomod@divisor+7,f
  9727  21DD  0CA6               	rrf	___aomod@divisor+6,f
  9728  21DE  0CA5               	rrf	___aomod@divisor+5,f
  9729  21DF  0CA4               	rrf	___aomod@divisor+4,f
  9730  21E0  0CA3               	rrf	___aomod@divisor+3,f
  9731  21E1  0CA2               	rrf	___aomod@divisor+2,f
  9732  21E2  0CA1               	rrf	___aomod@divisor+1,f
  9733  21E3  0CA0               	rrf	___aomod@divisor,f
  9734  21E4  3001               	movlw	1
  9735  21E5  02F2               	subwf	___aomod@counter,f
  9736  21E6  1D03               	btfss	3,2
  9737  21E7  29AC               	goto	l6563
  9738  21E8                     l6569:	
  9739  21E8  0873               	movf	___aomod@sign,w
  9740  21E9  1903               	btfsc	3,2
  9741  21EA  2A09               	goto	l1039
  9742  21EB  09A8               	comf	___aomod@dividend,f
  9743  21EC  09A9               	comf	___aomod@dividend+1,f
  9744  21ED  09AA               	comf	___aomod@dividend+2,f
  9745  21EE  09AB               	comf	___aomod@dividend+3,f
  9746  21EF  09AC               	comf	___aomod@dividend+4,f
  9747  21F0  09AD               	comf	___aomod@dividend+5,f
  9748  21F1  09AE               	comf	___aomod@dividend+6,f
  9749  21F2  09AF               	comf	___aomod@dividend+7,f
  9750  21F3  0AA8               	incf	___aomod@dividend,f
  9751  21F4  1D03               	skipz
  9752  21F5  2A09               	goto	l1039
  9753  21F6  0AA9               	incf	___aomod@dividend+1,f
  9754  21F7  1D03               	skipz
  9755  21F8  2A09               	goto	l1039
  9756  21F9  0AAA               	incf	___aomod@dividend+2,f
  9757  21FA  1D03               	skipz
  9758  21FB  2A09               	goto	l1039
  9759  21FC  0AAB               	incf	___aomod@dividend+3,f
  9760  21FD  1D03               	skipz
  9761  21FE  2A09               	goto	l1039
  9762  21FF  0AAC               	incf	___aomod@dividend+4,f
  9763  2200  1D03               	skipz
  9764  2201  2A09               	goto	l1039
  9765  2202  0AAD               	incf	___aomod@dividend+5,f
  9766  2203  1D03               	skipz
  9767  2204  2A09               	goto	l1039
  9768  2205  0AAE               	incf	___aomod@dividend+6,f
  9769  2206  1D03               	skipz
  9770  2207  2A09               	goto	l1039
  9771  2208  0AAF               	incf	___aomod@dividend+7,f
  9772  2209                     l1039:	
  9773  2209  0020               	movlb	0	; select bank0
  9774  220A  0828               	movf	___aomod@dividend,w
  9775  220B  00A0               	movwf	?___aomod
  9776  220C  0829               	movf	___aomod@dividend+1,w
  9777  220D  00A1               	movwf	?___aomod+1
  9778  220E  082A               	movf	___aomod@dividend+2,w
  9779  220F  00A2               	movwf	?___aomod+2
  9780  2210  082B               	movf	___aomod@dividend+3,w
  9781  2211  00A3               	movwf	?___aomod+3
  9782  2212  082C               	movf	___aomod@dividend+4,w
  9783  2213  00A4               	movwf	?___aomod+4
  9784  2214  082D               	movf	___aomod@dividend+5,w
  9785  2215  00A5               	movwf	?___aomod+5
  9786  2216  082E               	movf	___aomod@dividend+6,w
  9787  2217  00A6               	movwf	?___aomod+6
  9788  2218  082F               	movf	___aomod@dividend+7,w
  9789  2219  00A7               	movwf	?___aomod+7
  9790  221A  0008               	return
  9791  221B                     __end_of___aomod:	
  9792                           
  9793                           	psect	text22
  9794  23ED                     __ptext22:	
  9795 ;; *************** function ___aodiv *****************
  9796 ;; Defined at:
  9797 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  9798 ;; Parameters:    Size  Location     Type
  9799 ;;  divisor         8    0[BANK0 ] long long 
  9800 ;;  dividend        8    8[BANK0 ] long long 
  9801 ;; Auto vars:     Size  Location     Type
  9802 ;;  quotient        8    4[COMMON] long long 
  9803 ;;  sign            1    3[COMMON] unsigned char 
  9804 ;;  counter         1    2[COMMON] unsigned char 
  9805 ;; Return value:  Size  Location     Type
  9806 ;;                  8    0[BANK0 ] long long 
  9807 ;; Registers used:
  9808 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9809 ;; Tracked objects:
  9810 ;;		On entry : 0/0
  9811 ;;		On exit  : 0/0
  9812 ;;		Unchanged: 0/0
  9813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9814 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9815 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9816 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9817 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9818 ;;Total ram usage:       27 bytes
  9819 ;; Hardware stack levels used:    1
  9820 ;; Hardware stack levels required when called:    1
  9821 ;; This function calls:
  9822 ;;		Nothing
  9823 ;; This function is called by:
  9824 ;;		_dtoa
  9825 ;; This function uses a non-reentrant model
  9826 ;;
  9827                           
  9828                           
  9829                           ;psect for function ___aodiv
  9830  23ED                     ___aodiv:	
  9831                           
  9832                           ;incstack = 0
  9833                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  9834  23ED  01F3               	clrf	___aodiv@sign
  9835  23EE  3020               	movlw	low ___aodiv@divisor
  9836  23EF  0086               	movwf	6
  9837  23F0  3000               	movlw	high ___aodiv@divisor
  9838  23F1  0087               	movwf	7
  9839  23F2  3F47               	moviw [7]fsr1
  9840  23F3  00F1               	movwf	??___aodiv
  9841  23F4  1FF1               	btfss	??___aodiv,7
  9842  23F5  2C17               	goto	l6511
  9843  23F6  0020               	movlb	0	; select bank0
  9844  23F7  09A0               	comf	___aodiv@divisor,f
  9845  23F8  09A1               	comf	___aodiv@divisor+1,f
  9846  23F9  09A2               	comf	___aodiv@divisor+2,f
  9847  23FA  09A3               	comf	___aodiv@divisor+3,f
  9848  23FB  09A4               	comf	___aodiv@divisor+4,f
  9849  23FC  09A5               	comf	___aodiv@divisor+5,f
  9850  23FD  09A6               	comf	___aodiv@divisor+6,f
  9851  23FE  09A7               	comf	___aodiv@divisor+7,f
  9852  23FF  0AA0               	incf	___aodiv@divisor,f
  9853  2400  1D03               	skipz
  9854  2401  2C15               	goto	u805lld
  9855  2402  0AA1               	incf	___aodiv@divisor+1,f
  9856  2403  1D03               	skipz
  9857  2404  2C15               	goto	u805lld
  9858  2405  0AA2               	incf	___aodiv@divisor+2,f
  9859  2406  1D03               	skipz
  9860  2407  2C15               	goto	u805lld
  9861  2408  0AA3               	incf	___aodiv@divisor+3,f
  9862  2409  1D03               	skipz
  9863  240A  2C15               	goto	u805lld
  9864  240B  0AA4               	incf	___aodiv@divisor+4,f
  9865  240C  1D03               	skipz
  9866  240D  2C15               	goto	u805lld
  9867  240E  0AA5               	incf	___aodiv@divisor+5,f
  9868  240F  1D03               	skipz
  9869  2410  2C15               	goto	u805lld
  9870  2411  0AA6               	incf	___aodiv@divisor+6,f
  9871  2412  1D03               	skipz
  9872  2413  2C15               	goto	u805lld
  9873  2414  0AA7               	incf	___aodiv@divisor+7,f
  9874  2415                     u805lld:	
  9875  2415  01F3               	clrf	___aodiv@sign
  9876  2416  0AF3               	incf	___aodiv@sign,f
  9877  2417                     l6511:	
  9878  2417  3028               	movlw	low ___aodiv@dividend
  9879  2418  0086               	movwf	6
  9880  2419  3000               	movlw	high ___aodiv@dividend
  9881  241A  0087               	movwf	7
  9882  241B  3F47               	moviw [7]fsr1
  9883  241C  00F1               	movwf	??___aodiv
  9884  241D  1FF1               	btfss	??___aodiv,7
  9885  241E  2C42               	goto	l6517
  9886  241F  0020               	movlb	0	; select bank0
  9887  2420  09A8               	comf	___aodiv@dividend,f
  9888  2421  09A9               	comf	___aodiv@dividend+1,f
  9889  2422  09AA               	comf	___aodiv@dividend+2,f
  9890  2423  09AB               	comf	___aodiv@dividend+3,f
  9891  2424  09AC               	comf	___aodiv@dividend+4,f
  9892  2425  09AD               	comf	___aodiv@dividend+5,f
  9893  2426  09AE               	comf	___aodiv@dividend+6,f
  9894  2427  09AF               	comf	___aodiv@dividend+7,f
  9895  2428  0AA8               	incf	___aodiv@dividend,f
  9896  2429  1D03               	skipz
  9897  242A  2C3E               	goto	l6515
  9898  242B  0AA9               	incf	___aodiv@dividend+1,f
  9899  242C  1D03               	skipz
  9900  242D  2C3E               	goto	l6515
  9901  242E  0AAA               	incf	___aodiv@dividend+2,f
  9902  242F  1D03               	skipz
  9903  2430  2C3E               	goto	l6515
  9904  2431  0AAB               	incf	___aodiv@dividend+3,f
  9905  2432  1D03               	skipz
  9906  2433  2C3E               	goto	l6515
  9907  2434  0AAC               	incf	___aodiv@dividend+4,f
  9908  2435  1D03               	skipz
  9909  2436  2C3E               	goto	l6515
  9910  2437  0AAD               	incf	___aodiv@dividend+5,f
  9911  2438  1D03               	skipz
  9912  2439  2C3E               	goto	l6515
  9913  243A  0AAE               	incf	___aodiv@dividend+6,f
  9914  243B  1D03               	skipz
  9915  243C  2C3E               	goto	l6515
  9916  243D  0AAF               	incf	___aodiv@dividend+7,f
  9917  243E                     l6515:	
  9918  243E  3001               	movlw	1
  9919  243F  00F1               	movwf	??___aodiv
  9920  2440  0871               	movf	??___aodiv,w
  9921  2441  06F3               	xorwf	___aodiv@sign,f
  9922  2442                     l6517:	
  9923  2442  3074               	movlw	low ___aodiv@quotient
  9924  2443  0086               	movwf	6
  9925  2444  3000               	movlw	high ___aodiv@quotient
  9926  2445  0087               	movwf	7
  9927  2446  3008               	movlw	8
  9928  2447  00F1               	movwf	??___aodiv
  9929  2448  3000               	movlw	0
  9930  2449                     u8080:	
  9931  2449  001E               	movwi fsr1++
  9932  244A  0BF1               	decfsz	??___aodiv,f
  9933  244B  2C49               	goto	u8080
  9934  244C  0020               	movlb	0	; select bank0
  9935  244D  0820               	movf	___aodiv@divisor,w
  9936  244E  0421               	iorwf	___aodiv@divisor+1,w
  9937  244F  0422               	iorwf	___aodiv@divisor+2,w
  9938  2450  0423               	iorwf	___aodiv@divisor+3,w
  9939  2451  0424               	iorwf	___aodiv@divisor+4,w
  9940  2452  0425               	iorwf	___aodiv@divisor+5,w
  9941  2453  0426               	iorwf	___aodiv@divisor+6,w
  9942  2454  0427               	iorwf	___aodiv@divisor+7,w
  9943  2455  1903               	skipnz
  9944  2456  2CAD               	goto	l6539
  9945  2457  01F2               	clrf	___aodiv@counter
  9946  2458  0AF2               	incf	___aodiv@counter,f
  9947  2459                     l6527:	
  9948  2459  1BA7               	btfsc	___aodiv@divisor+7,7
  9949  245A  2C68               	goto	l6529
  9950  245B  35A0               	lslf	___aodiv@divisor,f
  9951  245C  0DA1               	rlf	___aodiv@divisor+1,f
  9952  245D  0DA2               	rlf	___aodiv@divisor+2,f
  9953  245E  0DA3               	rlf	___aodiv@divisor+3,f
  9954  245F  0DA4               	rlf	___aodiv@divisor+4,f
  9955  2460  0DA5               	rlf	___aodiv@divisor+5,f
  9956  2461  0DA6               	rlf	___aodiv@divisor+6,f
  9957  2462  0DA7               	rlf	___aodiv@divisor+7,f
  9958  2463  3001               	movlw	1
  9959  2464  00F1               	movwf	??___aodiv
  9960  2465  0871               	movf	??___aodiv,w
  9961  2466  07F2               	addwf	___aodiv@counter,f
  9962  2467  2C59               	goto	l6527
  9963  2468                     l6529:	
  9964  2468  35F4               	lslf	___aodiv@quotient,f
  9965  2469  0DF5               	rlf	___aodiv@quotient+1,f
  9966  246A  0DF6               	rlf	___aodiv@quotient+2,f
  9967  246B  0DF7               	rlf	___aodiv@quotient+3,f
  9968  246C  0DF8               	rlf	___aodiv@quotient+4,f
  9969  246D  0DF9               	rlf	___aodiv@quotient+5,f
  9970  246E  0DFA               	rlf	___aodiv@quotient+6,f
  9971  246F  0DFB               	rlf	___aodiv@quotient+7,f
  9972  2470  0827               	movf	___aodiv@divisor+7,w
  9973  2471  022F               	subwf	___aodiv@dividend+7,w
  9974  2472  1D03               	skipz
  9975  2473  2C8E               	goto	u8115
  9976  2474  0826               	movf	___aodiv@divisor+6,w
  9977  2475  022E               	subwf	___aodiv@dividend+6,w
  9978  2476  1D03               	skipz
  9979  2477  2C8E               	goto	u8115
  9980  2478  0825               	movf	___aodiv@divisor+5,w
  9981  2479  022D               	subwf	___aodiv@dividend+5,w
  9982  247A  1D03               	skipz
  9983  247B  2C8E               	goto	u8115
  9984  247C  0824               	movf	___aodiv@divisor+4,w
  9985  247D  022C               	subwf	___aodiv@dividend+4,w
  9986  247E  1D03               	skipz
  9987  247F  2C8E               	goto	u8115
  9988  2480  0823               	movf	___aodiv@divisor+3,w
  9989  2481  022B               	subwf	___aodiv@dividend+3,w
  9990  2482  1D03               	skipz
  9991  2483  2C8E               	goto	u8115
  9992  2484  0822               	movf	___aodiv@divisor+2,w
  9993  2485  022A               	subwf	___aodiv@dividend+2,w
  9994  2486  1D03               	skipz
  9995  2487  2C8E               	goto	u8115
  9996  2488  0821               	movf	___aodiv@divisor+1,w
  9997  2489  0229               	subwf	___aodiv@dividend+1,w
  9998  248A  1D03               	skipz
  9999  248B  2C8E               	goto	u8115
 10000  248C  0820               	movf	___aodiv@divisor,w
 10001  248D  0228               	subwf	___aodiv@dividend,w
 10002  248E                     u8115:	
 10003  248E  1C03               	skipc
 10004  248F  2CA1               	goto	l6537
 10005  2490  0820               	movf	___aodiv@divisor,w
 10006  2491  02A8               	subwf	___aodiv@dividend,f
 10007  2492  0821               	movf	___aodiv@divisor+1,w
 10008  2493  3BA9               	subwfb	___aodiv@dividend+1,f
 10009  2494  0822               	movf	___aodiv@divisor+2,w
 10010  2495  3BAA               	subwfb	___aodiv@dividend+2,f
 10011  2496  0823               	movf	___aodiv@divisor+3,w
 10012  2497  3BAB               	subwfb	___aodiv@dividend+3,f
 10013  2498  0824               	movf	___aodiv@divisor+4,w
 10014  2499  3BAC               	subwfb	___aodiv@dividend+4,f
 10015  249A  0825               	movf	___aodiv@divisor+5,w
 10016  249B  3BAD               	subwfb	___aodiv@dividend+5,f
 10017  249C  0826               	movf	___aodiv@divisor+6,w
 10018  249D  3BAE               	subwfb	___aodiv@dividend+6,f
 10019  249E  0827               	movf	___aodiv@divisor+7,w
 10020  249F  3BAF               	subwfb	___aodiv@dividend+7,f
 10021  24A0  1474               	bsf	___aodiv@quotient,0
 10022  24A1                     l6537:	
 10023  24A1  36A7               	lsrf	___aodiv@divisor+7,f
 10024  24A2  0CA6               	rrf	___aodiv@divisor+6,f
 10025  24A3  0CA5               	rrf	___aodiv@divisor+5,f
 10026  24A4  0CA4               	rrf	___aodiv@divisor+4,f
 10027  24A5  0CA3               	rrf	___aodiv@divisor+3,f
 10028  24A6  0CA2               	rrf	___aodiv@divisor+2,f
 10029  24A7  0CA1               	rrf	___aodiv@divisor+1,f
 10030  24A8  0CA0               	rrf	___aodiv@divisor,f
 10031  24A9  3001               	movlw	1
 10032  24AA  02F2               	subwf	___aodiv@counter,f
 10033  24AB  1D03               	btfss	3,2
 10034  24AC  2C68               	goto	l6529
 10035  24AD                     l6539:	
 10036  24AD  0873               	movf	___aodiv@sign,w
 10037  24AE  1903               	btfsc	3,2
 10038  24AF  2CCE               	goto	l1026
 10039  24B0  09F4               	comf	___aodiv@quotient,f
 10040  24B1  09F5               	comf	___aodiv@quotient+1,f
 10041  24B2  09F6               	comf	___aodiv@quotient+2,f
 10042  24B3  09F7               	comf	___aodiv@quotient+3,f
 10043  24B4  09F8               	comf	___aodiv@quotient+4,f
 10044  24B5  09F9               	comf	___aodiv@quotient+5,f
 10045  24B6  09FA               	comf	___aodiv@quotient+6,f
 10046  24B7  09FB               	comf	___aodiv@quotient+7,f
 10047  24B8  0AF4               	incf	___aodiv@quotient,f
 10048  24B9  1D03               	skipz
 10049  24BA  2CCE               	goto	l1026
 10050  24BB  0AF5               	incf	___aodiv@quotient+1,f
 10051  24BC  1D03               	skipz
 10052  24BD  2CCE               	goto	l1026
 10053  24BE  0AF6               	incf	___aodiv@quotient+2,f
 10054  24BF  1D03               	skipz
 10055  24C0  2CCE               	goto	l1026
 10056  24C1  0AF7               	incf	___aodiv@quotient+3,f
 10057  24C2  1D03               	skipz
 10058  24C3  2CCE               	goto	l1026
 10059  24C4  0AF8               	incf	___aodiv@quotient+4,f
 10060  24C5  1D03               	skipz
 10061  24C6  2CCE               	goto	l1026
 10062  24C7  0AF9               	incf	___aodiv@quotient+5,f
 10063  24C8  1D03               	skipz
 10064  24C9  2CCE               	goto	l1026
 10065  24CA  0AFA               	incf	___aodiv@quotient+6,f
 10066  24CB  1D03               	skipz
 10067  24CC  2CCE               	goto	l1026
 10068  24CD  0AFB               	incf	___aodiv@quotient+7,f
 10069  24CE                     l1026:	
 10070  24CE  0874               	movf	___aodiv@quotient,w
 10071  24CF  0020               	movlb	0	; select bank0
 10072  24D0  00A0               	movwf	?___aodiv
 10073  24D1  0875               	movf	___aodiv@quotient+1,w
 10074  24D2  00A1               	movwf	?___aodiv+1
 10075  24D3  0876               	movf	___aodiv@quotient+2,w
 10076  24D4  00A2               	movwf	?___aodiv+2
 10077  24D5  0877               	movf	___aodiv@quotient+3,w
 10078  24D6  00A3               	movwf	?___aodiv+3
 10079  24D7  0878               	movf	___aodiv@quotient+4,w
 10080  24D8  00A4               	movwf	?___aodiv+4
 10081  24D9  0879               	movf	___aodiv@quotient+5,w
 10082  24DA  00A5               	movwf	?___aodiv+5
 10083  24DB  087A               	movf	___aodiv@quotient+6,w
 10084  24DC  00A6               	movwf	?___aodiv+6
 10085  24DD  087B               	movf	___aodiv@quotient+7,w
 10086  24DE  00A7               	movwf	?___aodiv+7
 10087  24DF  0008               	return
 10088  24E0                     __end_of___aodiv:	
 10089                           
 10090                           	psect	text23
 10091  3526                     __ptext23:	
 10092 ;; *************** function _ctoa *****************
 10093 ;; Defined at:
 10094 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 10095 ;; Parameters:    Size  Location     Type
 10096 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
 10097 ;;		 -> vsnprintf@f(6), 
 10098 ;;  c               1   18[BANK0 ] unsigned char 
 10099 ;; Auto vars:     Size  Location     Type
 10100 ;;  w               2   20[BANK0 ] int 
 10101 ;;  l               2    0        int 
 10102 ;; Return value:  Size  Location     Type
 10103 ;;                  2   16[BANK0 ] int 
 10104 ;; Registers used:
 10105 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10106 ;; Tracked objects:
 10107 ;;		On entry : 0/0
 10108 ;;		On exit  : 0/0
 10109 ;;		Unchanged: 0/0
 10110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10111 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10112 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10113 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10114 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10115 ;;Total ram usage:        6 bytes
 10116 ;; Hardware stack levels used:    1
 10117 ;; Hardware stack levels required when called:    5
 10118 ;; This function calls:
 10119 ;;		_pad
 10120 ;; This function is called by:
 10121 ;;		_vfpfcnvrt
 10122 ;; This function uses a non-reentrant model
 10123 ;;
 10124                           
 10125                           
 10126                           ;psect for function _ctoa
 10127  3526                     _ctoa:	
 10128                           
 10129                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 10130                           
 10131                           ;incstack = 0
 10132                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10133  3526  0022               	movlb	2	; select bank2
 10134  3527  0865               	movf	_width^(0+256),w
 10135  3528  0466               	iorwf	(_width+1)^(0+256),w
 10136  3529  1D03               	btfss	3,2
 10137  352A  2D33               	goto	l6627
 10138  352B  0866               	movf	(_width+1)^(0+256),w
 10139  352C  0020               	movlb	0	; select bank0
 10140  352D  00B5               	movwf	ctoa@w+1
 10141  352E  0022               	movlb	2	; select bank2
 10142  352F  0865               	movf	_width^(0+256),w
 10143  3530  0020               	movlb	0	; select bank0
 10144  3531  00B4               	movwf	ctoa@w
 10145  3532  2D3C               	goto	l6629
 10146  3533                     l6627:	
 10147  3533  0865               	movf	_width^(0+256),w
 10148  3534  3EFF               	addlw	255
 10149  3535  0020               	movlb	0	; select bank0
 10150  3536  00B4               	movwf	ctoa@w
 10151  3537  30FF               	movlw	255
 10152  3538  0022               	movlb	2	; select bank2
 10153  3539  3D66               	addwfc	(_width+1)^(0+256),w
 10154  353A  0020               	movlb	0	; select bank0
 10155  353B  00B5               	movwf	ctoa@w+1
 10156  353C                     l6629:	
 10157                           
 10158                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 10159  353C  0832               	movf	ctoa@c,w
 10160  353D  00B3               	movwf	??_ctoa
 10161  353E  0833               	movf	??_ctoa,w
 10162  353F  0024               	movlb	4	; select bank4
 10163  3540  00A0               	movwf	_dbuf^(0+512)
 10164                           
 10165                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 10166  3541  01A1               	clrf	(_dbuf^(0+512)+1)
 10167                           
 10168                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 10169  3542  0020               	movlb	0	; select bank0
 10170  3543  0831               	movf	ctoa@fp+1,w
 10171  3544  00A7               	movwf	pad@fp+1
 10172  3545  0830               	movf	ctoa@fp,w
 10173  3546  00A6               	movwf	pad@fp
 10174  3547  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
 10175  3548  00B3               	movwf	??_ctoa
 10176  3549  0833               	movf	??_ctoa,w
 10177  354A  00A8               	movwf	pad@buf
 10178  354B  0835               	movf	ctoa@w+1,w
 10179  354C  00AA               	movwf	pad@p+1
 10180  354D  0834               	movf	ctoa@w,w
 10181  354E  00A9               	movwf	pad@p
 10182  354F  31B7  2709         	fcall	_pad
 10183  3551  0020               	movlb	0	; select bank0
 10184  3552  0827               	movf	?_pad+1,w
 10185  3553  00B1               	movwf	?_ctoa+1
 10186  3554  0826               	movf	?_pad,w
 10187  3555  00B0               	movwf	?_ctoa
 10188  3556  0008               	return
 10189  3557                     __end_of_ctoa:	
 10190                           
 10191                           	psect	text24
 10192  3709                     __ptext24:	
 10193 ;; *************** function _pad *****************
 10194 ;; Defined at:
 10195 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 10196 ;; Parameters:    Size  Location     Type
 10197 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
 10198 ;;		 -> vsnprintf@f(6), 
 10199 ;;  buf             1    8[BANK0 ] PTR unsigned char 
 10200 ;;		 -> dbuf(32), 
 10201 ;;  p               2    9[BANK0 ] int 
 10202 ;; Auto vars:     Size  Location     Type
 10203 ;;  w               2   14[BANK0 ] int 
 10204 ;;  i               2   12[BANK0 ] int 
 10205 ;; Return value:  Size  Location     Type
 10206 ;;                  2    6[BANK0 ] int 
 10207 ;; Registers used:
 10208 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10209 ;; Tracked objects:
 10210 ;;		On entry : 0/0
 10211 ;;		On exit  : 0/0
 10212 ;;		Unchanged: 0/0
 10213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10214 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10215 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10216 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10217 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10218 ;;Total ram usage:       10 bytes
 10219 ;; Hardware stack levels used:    1
 10220 ;; Hardware stack levels required when called:    4
 10221 ;; This function calls:
 10222 ;;		_fputc
 10223 ;;		_fputs
 10224 ;;		_strlen
 10225 ;; This function is called by:
 10226 ;;		_ctoa
 10227 ;;		_dtoa
 10228 ;;		_otoa
 10229 ;;		_utoa
 10230 ;;		_xtoa
 10231 ;; This function uses a non-reentrant model
 10232 ;;
 10233                           
 10234                           
 10235                           ;psect for function _pad
 10236  3709                     _pad:	
 10237                           
 10238                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 10239                           
 10240                           ;incstack = 0
 10241                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10242  3709  0022               	movlb	2	; select bank2
 10243  370A  1C69               	btfss	_flags^(0+256),0
 10244  370B  2F15               	goto	l6447
 10245                           
 10246                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 10247  370C  0020               	movlb	0	; select bank0
 10248  370D  0827               	movf	pad@fp+1,w
 10249  370E  00FB               	movwf	fputs@fp+1
 10250  370F  0826               	movf	pad@fp,w
 10251  3710  00FA               	movwf	fputs@fp
 10252  3711  0828               	movf	pad@buf,w
 10253  3712  3187  27D5  31B7   	fcall	_fputs
 10254  3715                     l6447:	
 10255                           
 10256                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 10257  3715  0020               	movlb	0	; select bank0
 10258  3716  1BAA               	btfsc	pad@p+1,7
 10259  3717  2F1D               	goto	l6451
 10260  3718  082A               	movf	pad@p+1,w
 10261  3719  00AF               	movwf	pad@w+1
 10262  371A  0829               	movf	pad@p,w
 10263  371B  00AE               	movwf	pad@w
 10264  371C  2F1F               	goto	l718
 10265  371D                     l6451:	
 10266  371D  01AE               	clrf	pad@w
 10267  371E  01AF               	clrf	pad@w+1
 10268  371F                     l718:	
 10269                           
 10270                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 10271  371F  01AC               	clrf	pad@i
 10272  3720  01AD               	clrf	pad@i+1
 10273  3721                     l6457:	
 10274                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 10275                           
 10276                           
 10277                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 10278  3721  082D               	movf	pad@i+1,w
 10279  3722  3A80               	xorlw	128
 10280  3723  00AB               	movwf	??_pad
 10281  3724  082F               	movf	pad@w+1,w
 10282  3725  3A80               	xorlw	128
 10283  3726  022B               	subwf	??_pad,w
 10284  3727  1D03               	skipz
 10285  3728  2F2B               	goto	u7885
 10286  3729  082E               	movf	pad@w,w
 10287  372A  022C               	subwf	pad@i,w
 10288  372B                     u7885:	
 10289  372B  1803               	btfsc	3,0
 10290  372C  2F3F               	goto	l721
 10291                           
 10292                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 10293  372D  3020               	movlw	32
 10294  372E  00F1               	movwf	fputc@c
 10295  372F  3000               	movlw	0
 10296  3730  00F2               	movwf	fputc@c+1
 10297  3731  0020               	movlb	0	; select bank0
 10298  3732  0827               	movf	pad@fp+1,w
 10299  3733  00F4               	movwf	fputc@fp+1
 10300  3734  0826               	movf	pad@fp,w
 10301  3735  00F3               	movwf	fputc@fp
 10302  3736  31B7  27AC  31B7   	fcall	_fputc
 10303                           
 10304                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 10305  3739  3001               	movlw	1
 10306  373A  0020               	movlb	0	; select bank0
 10307  373B  07AC               	addwf	pad@i,f
 10308  373C  3000               	movlw	0
 10309  373D  3DAD               	addwfc	pad@i+1,f
 10310  373E  2F21               	goto	l6457
 10311  373F                     l721:	
 10312                           
 10313                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 10314  373F  0022               	movlb	2	; select bank2
 10315  3740  1869               	btfsc	_flags^(0+256),0
 10316  3741  2F4B               	goto	l6461
 10317                           
 10318                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 10319  3742  0020               	movlb	0	; select bank0
 10320  3743  0827               	movf	pad@fp+1,w
 10321  3744  00FB               	movwf	fputs@fp+1
 10322  3745  0826               	movf	pad@fp,w
 10323  3746  00FA               	movwf	fputs@fp
 10324  3747  0828               	movf	pad@buf,w
 10325  3748  3187  27D5  31B7   	fcall	_fputs
 10326  374B                     l6461:	
 10327                           
 10328                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 10329  374B  0020               	movlb	0	; select bank0
 10330  374C  0828               	movf	pad@buf,w
 10331  374D  00F1               	movwf	strlen@s
 10332  374E  3002               	movlw	2
 10333  374F  00F2               	movwf	strlen@s+1
 10334  3750  31B3  237A         	fcall	_strlen
 10335  3752  0020               	movlb	0	; select bank0
 10336  3753  082E               	movf	pad@w,w
 10337  3754  0771               	addwf	?_strlen,w
 10338  3755  00A6               	movwf	?_pad
 10339  3756  082F               	movf	pad@w+1,w
 10340  3757  3D72               	addwfc	?_strlen+1,w
 10341  3758  00A7               	movwf	?_pad+1
 10342  3759  0008               	return
 10343  375A                     __end_of_pad:	
 10344                           
 10345                           	psect	text25
 10346  337A                     __ptext25:	
 10347 ;; *************** function _strlen *****************
 10348 ;; Defined at:
 10349 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 10350 ;; Parameters:    Size  Location     Type
 10351 ;;  s               2    1[COMMON] PTR const unsigned char 
 10352 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(32), sp__logf(4), 
 10353 ;;		 -> adcGain(2), 
 10354 ;; Auto vars:     Size  Location     Type
 10355 ;;  a               2    3[COMMON] PTR const unsigned char 
 10356 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(32), sp__logf(4), 
 10357 ;;		 -> adcGain(2), 
 10358 ;; Return value:  Size  Location     Type
 10359 ;;                  2    1[COMMON] unsigned int 
 10360 ;; Registers used:
 10361 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10362 ;; Tracked objects:
 10363 ;;		On entry : 0/0
 10364 ;;		On exit  : 0/0
 10365 ;;		Unchanged: 0/0
 10366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10367 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10368 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10370 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10371 ;;Total ram usage:        4 bytes
 10372 ;; Hardware stack levels used:    1
 10373 ;; Hardware stack levels required when called:    1
 10374 ;; This function calls:
 10375 ;;		Nothing
 10376 ;; This function is called by:
 10377 ;;		_pad
 10378 ;;		_stoa
 10379 ;; This function uses a non-reentrant model
 10380 ;;
 10381                           
 10382                           
 10383                           ;psect for function _strlen
 10384  337A                     _strlen:	
 10385                           
 10386                           ;incstack = 0
 10387                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 10388  337A  0872               	movf	strlen@s+1,w
 10389  337B  00F4               	movwf	strlen@a+1
 10390  337C  0871               	movf	strlen@s,w
 10391  337D  00F3               	movwf	strlen@a
 10392  337E                     l6433:	
 10393  337E  0871               	movf	strlen@s,w
 10394  337F  0086               	movwf	6
 10395  3380  0872               	movf	strlen@s+1,w
 10396  3381  0087               	movwf	7
 10397  3382  0801               	movf	1,w
 10398  3383  1903               	btfsc	3,2
 10399  3384  2B8A               	goto	l6435
 10400  3385  3001               	movlw	1
 10401  3386  07F1               	addwf	strlen@s,f
 10402  3387  3000               	movlw	0
 10403  3388  3DF2               	addwfc	strlen@s+1,f
 10404  3389  2B7E               	goto	l6433
 10405  338A                     l6435:	
 10406  338A  0873               	movf	strlen@a,w
 10407  338B  0271               	subwf	strlen@s,w
 10408  338C  00F1               	movwf	?_strlen
 10409  338D  0874               	movf	strlen@a+1,w
 10410  338E  3B72               	subwfb	strlen@s+1,w
 10411  338F  00F2               	movwf	?_strlen+1
 10412  3390  0008               	return
 10413  3391                     __end_of_strlen:	
 10414                           
 10415                           	psect	text26
 10416  07D5                     __ptext26:	
 10417 ;; *************** function _fputs *****************
 10418 ;; Defined at:
 10419 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 10420 ;; Parameters:    Size  Location     Type
 10421 ;;  s               1    wreg     PTR const unsigned char 
 10422 ;;		 -> dbuf(32), 
 10423 ;;  fp              2   10[COMMON] PTR struct _IO_FILE
 10424 ;;		 -> vsnprintf@f(6), 
 10425 ;; Auto vars:     Size  Location     Type
 10426 ;;  s               1    5[BANK0 ] PTR const unsigned char 
 10427 ;;		 -> dbuf(32), 
 10428 ;;  i               2    3[BANK0 ] int 
 10429 ;;  c               1    2[BANK0 ] unsigned char 
 10430 ;; Return value:  Size  Location     Type
 10431 ;;                  2   10[COMMON] int 
 10432 ;; Registers used:
 10433 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10434 ;; Tracked objects:
 10435 ;;		On entry : 0/0
 10436 ;;		On exit  : 0/0
 10437 ;;		Unchanged: 0/0
 10438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10439 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10440 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10441 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10442 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10443 ;;Total ram usage:        8 bytes
 10444 ;; Hardware stack levels used:    1
 10445 ;; Hardware stack levels required when called:    3
 10446 ;; This function calls:
 10447 ;;		_fputc
 10448 ;; This function is called by:
 10449 ;;		_pad
 10450 ;; This function uses a non-reentrant model
 10451 ;;
 10452                           
 10453                           
 10454                           ;psect for function _fputs
 10455  07D5                     _fputs:	
 10456                           
 10457                           ;incstack = 0
 10458                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10459                           ;fputs@s stored from wreg
 10460  07D5  0020               	movlb	0	; select bank0
 10461  07D6  00A5               	movwf	fputs@s
 10462  07D7  01A3               	clrf	fputs@i
 10463  07D8  01A4               	clrf	fputs@i+1
 10464  07D9                     l6427:	
 10465  07D9  0823               	movf	fputs@i,w
 10466  07DA  0725               	addwf	fputs@s,w
 10467  07DB  00A0               	movwf	??_fputs
 10468  07DC  0820               	movf	??_fputs,w
 10469  07DD  0086               	movwf	6
 10470  07DE  3002               	movlw	2	; select bank4/5
 10471  07DF  0087               	movwf	7
 10472  07E0  0801               	movf	1,w
 10473  07E1  00A1               	movwf	??_fputs+1
 10474  07E2  0821               	movf	??_fputs+1,w
 10475  07E3  00A2               	movwf	fputs@c
 10476  07E4  0822               	movf	fputs@c,w
 10477  07E5  1903               	btfsc	3,2
 10478  07E6  0008               	return
 10479  07E7  0822               	movf	fputs@c,w
 10480  07E8  00A0               	movwf	??_fputs
 10481  07E9  01A1               	clrf	??_fputs+1
 10482  07EA  0820               	movf	??_fputs,w
 10483  07EB  00F1               	movwf	fputc@c
 10484  07EC  0821               	movf	??_fputs+1,w
 10485  07ED  00F2               	movwf	fputc@c+1
 10486  07EE  087B               	movf	fputs@fp+1,w
 10487  07EF  00F4               	movwf	fputc@fp+1
 10488  07F0  087A               	movf	fputs@fp,w
 10489  07F1  00F3               	movwf	fputc@fp
 10490  07F2  31B7  27AC  3187   	fcall	_fputc
 10491  07F5  3001               	movlw	1
 10492  07F6  0020               	movlb	0	; select bank0
 10493  07F7  07A3               	addwf	fputs@i,f
 10494  07F8  3000               	movlw	0
 10495  07F9  3DA4               	addwfc	fputs@i+1,f
 10496  07FA  2FD9               	goto	l6427
 10497  07FB                     __end_of_fputs:	
 10498                           
 10499                           	psect	text27
 10500  37AC                     __ptext27:	
 10501 ;; *************** function _fputc *****************
 10502 ;; Defined at:
 10503 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 10504 ;; Parameters:    Size  Location     Type
 10505 ;;  c               2    1[COMMON] int 
 10506 ;;  fp              2    3[COMMON] PTR struct _IO_FILE
 10507 ;;		 -> vsnprintf@f(6), 
 10508 ;; Auto vars:     Size  Location     Type
 10509 ;;		None
 10510 ;; Return value:  Size  Location     Type
 10511 ;;                  2    1[COMMON] int 
 10512 ;; Registers used:
 10513 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10514 ;; Tracked objects:
 10515 ;;		On entry : 0/0
 10516 ;;		On exit  : 0/0
 10517 ;;		Unchanged: 0/0
 10518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10519 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10521 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10522 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10523 ;;Total ram usage:        9 bytes
 10524 ;; Hardware stack levels used:    1
 10525 ;; Hardware stack levels required when called:    2
 10526 ;; This function calls:
 10527 ;;		_putch
 10528 ;; This function is called by:
 10529 ;;		_pad
 10530 ;;		_stoa
 10531 ;;		_vfpfcnvrt
 10532 ;;		_fputs
 10533 ;; This function uses a non-reentrant model
 10534 ;;
 10535                           
 10536                           
 10537                           ;psect for function _fputc
 10538  37AC                     _fputc:	
 10539                           
 10540                           ;incstack = 0
 10541                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10542  37AC  0873               	movf	fputc@fp,w
 10543  37AD  0474               	iorwf	fputc@fp+1,w
 10544  37AE  1903               	btfsc	3,2
 10545  37AF  2FB4               	goto	l6409
 10546  37B0  0873               	movf	fputc@fp,w
 10547  37B1  0474               	iorwf	fputc@fp+1,w
 10548  37B2  1D03               	btfss	3,2
 10549  37B3  2FB8               	goto	l6411
 10550  37B4                     l6409:	
 10551  37B4  0871               	movf	fputc@c,w
 10552  37B5  3180  2003         	fcall	_putch
 10553  37B7  0008               	return
 10554  37B8                     l6411:	
 10555  37B8  0873               	movf	fputc@fp,w
 10556  37B9  0086               	movwf	6
 10557  37BA  0874               	movf	fputc@fp+1,w
 10558  37BB  0087               	movwf	7
 10559  37BC  3144               	addfsr 1,4
 10560  37BD  0016               	moviw fsr1++
 10561  37BE  0401               	iorwf	1,w
 10562  37BF  1903               	btfsc	3,2
 10563  37C0  2FDF               	goto	l6415
 10564  37C1  0873               	movf	fputc@fp,w
 10565  37C2  0086               	movwf	6
 10566  37C3  0874               	movf	fputc@fp+1,w
 10567  37C4  0087               	movwf	7
 10568  37C5  3144               	addfsr 1,4
 10569  37C6  3F40               	moviw [0]fsr1
 10570  37C7  00F5               	movwf	??_fputc
 10571  37C8  3F41               	moviw [1]fsr1
 10572  37C9  00F6               	movwf	??_fputc+1
 10573  37CA  0873               	movf	fputc@fp,w
 10574  37CB  0086               	movwf	6
 10575  37CC  0874               	movf	fputc@fp+1,w
 10576  37CD  0087               	movwf	7
 10577  37CE  3142               	addfsr 1,2
 10578  37CF  3F40               	moviw [0]fsr1
 10579  37D0  00F7               	movwf	??_fputc+2
 10580  37D1  3F41               	moviw [1]fsr1
 10581  37D2  00F8               	movwf	??_fputc+3
 10582  37D3  0878               	movf	??_fputc+3,w
 10583  37D4  3A80               	xorlw	128
 10584  37D5  00F9               	movwf	??_fputc+4
 10585  37D6  0876               	movf	??_fputc+1,w
 10586  37D7  3A80               	xorlw	128
 10587  37D8  0279               	subwf	??_fputc+4,w
 10588  37D9  1D03               	skipz
 10589  37DA  2FDD               	goto	u7815
 10590  37DB  0875               	movf	??_fputc,w
 10591  37DC  0277               	subwf	??_fputc+2,w
 10592  37DD                     u7815:	
 10593  37DD  1803               	skipnc
 10594  37DE  0008               	return
 10595  37DF                     l6415:	
 10596  37DF  0873               	movf	fputc@fp,w
 10597  37E0  0086               	movwf	6
 10598  37E1  0874               	movf	fputc@fp+1,w
 10599  37E2  0087               	movwf	7
 10600  37E3  3142               	addfsr 1,2
 10601  37E4  0873               	movf	fputc@fp,w
 10602  37E5  0084               	movwf	4
 10603  37E6  0874               	movf	fputc@fp+1,w
 10604  37E7  0085               	movwf	5
 10605  37E8  3F40               	moviw [0]fsr1
 10606  37E9  0700               	addwf	0,w
 10607  37EA  00F5               	movwf	??_fputc
 10608  37EB  3101               	addfsr 0,1
 10609  37EC  3F41               	moviw [1]fsr1
 10610  37ED  3D00               	addwfc	0,w
 10611  37EE  00F6               	movwf	??_fputc+1
 10612  37EF  0875               	movf	??_fputc,w
 10613  37F0  0086               	movwf	6
 10614  37F1  0876               	movf	??_fputc+1,w
 10615  37F2  0087               	movwf	7
 10616  37F3  0871               	movf	fputc@c,w
 10617  37F4  0081               	movwf	1
 10618  37F5  0873               	movf	fputc@fp,w
 10619  37F6  0086               	movwf	6
 10620  37F7  0874               	movf	fputc@fp+1,w
 10621  37F8  0087               	movwf	7
 10622  37F9  3142               	addfsr 1,2
 10623  37FA  3001               	movlw	1
 10624  37FB  0781               	addwf	1,f
 10625  37FC  3141               	addfsr 1,1
 10626  37FD  1803               	skipnc
 10627  37FE  0A81               	incf	1,f
 10628  37FF  0008               	return
 10629  3800                     __end_of_fputc:	
 10630                           
 10631                           	psect	text28
 10632  0003                     __ptext28:	
 10633 ;; *************** function _putch *****************
 10634 ;; Defined at:
 10635 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
 10636 ;; Parameters:    Size  Location     Type
 10637 ;;  c               1    wreg     unsigned char 
 10638 ;; Auto vars:     Size  Location     Type
 10639 ;;  c               1    0[COMMON] unsigned char 
 10640 ;; Return value:  Size  Location     Type
 10641 ;;                  1    wreg      void 
 10642 ;; Registers used:
 10643 ;;		wreg
 10644 ;; Tracked objects:
 10645 ;;		On entry : 0/0
 10646 ;;		On exit  : 0/0
 10647 ;;		Unchanged: 0/0
 10648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10653 ;;Total ram usage:        0 bytes
 10654 ;; Hardware stack levels used:    1
 10655 ;; Hardware stack levels required when called:    1
 10656 ;; This function calls:
 10657 ;;		Nothing
 10658 ;; This function is called by:
 10659 ;;		_fputc
 10660 ;; This function uses a non-reentrant model
 10661 ;;
 10662                           
 10663                           
 10664                           ;psect for function _putch
 10665  0003                     _putch:	
 10666                           
 10667                           ;incstack = 0
 10668                           ; Regs used in _putch: [wreg]
 10669  0003  0008               	return
 10670  0004                     __end_of_putch:	
 10671                           
 10672                           	psect	text29
 10673  2BA4                     __ptext29:	
 10674 ;; *************** function _atoi *****************
 10675 ;; Defined at:
 10676 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 10677 ;; Parameters:    Size  Location     Type
 10678 ;;  s               2    7[COMMON] PTR const unsigned char 
 10679 ;;		 -> STR_23(18), STR_22(18), STR_21(19), STR_20(20), 
 10680 ;;		 -> STR_19(20), STR_18(21), STR_17(21), STR_16(21), 
 10681 ;;		 -> STR_15(22), STR_14(22), STR_13(21), STR_12(21), 
 10682 ;;		 -> STR_9(15), STR_8(32), STR_7(15), STR_6(21), 
 10683 ;;		 -> STR_5(21), STR_4(21), STR_3(22), STR_2(71), 
 10684 ;;		 -> STR_1(40), 
 10685 ;; Auto vars:     Size  Location     Type
 10686 ;;  n               2   11[BANK0 ] int 
 10687 ;;  neg             2    4[BANK0 ] int 
 10688 ;; Return value:  Size  Location     Type
 10689 ;;                  2    7[COMMON] int 
 10690 ;; Registers used:
 10691 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10692 ;; Tracked objects:
 10693 ;;		On entry : 0/0
 10694 ;;		On exit  : 0/0
 10695 ;;		Unchanged: 0/0
 10696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10697 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10698 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10699 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10700 ;;      Totals:         2      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10701 ;;Total ram usage:       15 bytes
 10702 ;; Hardware stack levels used:    1
 10703 ;; Hardware stack levels required when called:    2
 10704 ;; This function calls:
 10705 ;;		___wmul
 10706 ;;		_isdigit
 10707 ;;		_isspace
 10708 ;; This function is called by:
 10709 ;;		_vfpfcnvrt
 10710 ;; This function uses a non-reentrant model
 10711 ;;
 10712                           
 10713                           
 10714                           ;psect for function _atoi
 10715  2BA4                     _atoi:	
 10716                           
 10717                           ;incstack = 0
 10718                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10719  2BA4  0020               	movlb	0	; select bank0
 10720  2BA5  01AB               	clrf	atoi@n
 10721  2BA6  01AC               	clrf	atoi@n+1
 10722  2BA7  01A4               	clrf	atoi@neg
 10723  2BA8  01A5               	clrf	atoi@neg+1
 10724  2BA9                     l6893:	
 10725  2BA9  01AA               	clrf	_atoi$1701
 10726  2BAA  0AAA               	incf	_atoi$1701,f
 10727  2BAB  0877               	movf	atoi@s,w
 10728  2BAC  0084               	movwf	4
 10729  2BAD  0878               	movf	atoi@s+1,w
 10730  2BAE  0085               	movwf	5
 10731  2BAF  0012               	moviw fsr0++
 10732  2BB0  3A20               	xorlw	32
 10733  2BB1  1903               	btfsc	3,2
 10734  2BB2  2BC5               	goto	l6901
 10735  2BB3  0877               	movf	atoi@s,w
 10736  2BB4  0084               	movwf	4
 10737  2BB5  0878               	movf	atoi@s+1,w
 10738  2BB6  0085               	movwf	5
 10739  2BB7  0800               	movf	0,w	;code access
 10740  2BB8  3EF7               	addlw	247
 10741  2BB9  00A0               	movwf	??_atoi
 10742  2BBA  30FF               	movlw	255
 10743  2BBB  1803               	skipnc
 10744  2BBC  3000               	movlw	0
 10745  2BBD  00A1               	movwf	??_atoi+1
 10746  2BBE  3000               	movlw	0
 10747  2BBF  0221               	subwf	??_atoi+1,w
 10748  2BC0  3005               	movlw	5
 10749  2BC1  1903               	skipnz
 10750  2BC2  0220               	subwf	??_atoi,w
 10751  2BC3  1803               	btfsc	3,0
 10752  2BC4  01AA               	clrf	_atoi$1701
 10753  2BC5                     l6901:	
 10754  2BC5  082A               	movf	_atoi$1701,w
 10755  2BC6  00A0               	movwf	??_atoi
 10756  2BC7  01A1               	clrf	??_atoi+1
 10757  2BC8  0820               	movf	??_atoi,w
 10758  2BC9  00A6               	movwf	_atoi$1700
 10759  2BCA  0821               	movf	??_atoi+1,w
 10760  2BCB  00A7               	movwf	_atoi$1700+1
 10761  2BCC  0826               	movf	_atoi$1700,w
 10762  2BCD  0427               	iorwf	_atoi$1700+1,w
 10763  2BCE  1903               	btfsc	3,2
 10764  2BCF  2BDA               	goto	l6909
 10765  2BD0  3001               	movlw	1
 10766  2BD1  07F7               	addwf	atoi@s,f
 10767  2BD2  3000               	movlw	0
 10768  2BD3  3DF8               	addwfc	atoi@s+1,f
 10769  2BD4  2BA9               	goto	l6893
 10770  2BD5                     l6907:	
 10771  2BD5  3001               	movlw	1
 10772  2BD6  00A4               	movwf	atoi@neg
 10773  2BD7  3000               	movlw	0
 10774  2BD8  00A5               	movwf	atoi@neg+1
 10775  2BD9  2C0D               	goto	l1401
 10776  2BDA                     l6909:	
 10777  2BDA  0877               	movf	atoi@s,w
 10778  2BDB  0084               	movwf	4
 10779  2BDC  0878               	movf	atoi@s+1,w
 10780  2BDD  0085               	movwf	5
 10781  2BDE  0800               	movf	0,w	;code access
 10782  2BDF  00A0               	movwf	??_atoi
 10783  2BE0  01A1               	clrf	??_atoi+1
 10784                           
 10785                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10786                           ; Switch size 1, requested type "simple"
 10787                           ; Number of cases is 1, Range of values is 0 to 0
 10788                           ; switch strategies available:
 10789                           ; Name         Instructions Cycles
 10790                           ; simple_byte            4     3 (average)
 10791                           ; direct_byte            8     6 (fixed)
 10792                           ; jumptable            260     6 (fixed)
 10793                           ;	Chosen strategy is simple_byte
 10794  2BE1  0821               	movf	??_atoi+1,w
 10795  2BE2  3A00               	xorlw	0	; case 0
 10796  2BE3  1903               	skipnz
 10797  2BE4  2BE6               	goto	l8783
 10798  2BE5  2C11               	goto	l6915
 10799  2BE6                     l8783:	
 10800                           
 10801                           ; Switch size 1, requested type "simple"
 10802                           ; Number of cases is 2, Range of values is 43 to 45
 10803                           ; switch strategies available:
 10804                           ; Name         Instructions Cycles
 10805                           ; simple_byte            7     4 (average)
 10806                           ; direct_byte           15     9 (fixed)
 10807                           ; jumptable            263     9 (fixed)
 10808                           ;	Chosen strategy is simple_byte
 10809  2BE6  0820               	movf	??_atoi,w
 10810  2BE7  3A2B               	xorlw	43	; case 43
 10811  2BE8  1903               	skipnz
 10812  2BE9  2C0D               	goto	l1401
 10813  2BEA  3A06               	xorlw	6	; case 45
 10814  2BEB  1903               	skipnz
 10815  2BEC  2BD5               	goto	l6907
 10816  2BED  2C11               	goto	l6915
 10817  2BEE                     l6911:	
 10818  2BEE  0877               	movf	atoi@s,w
 10819  2BEF  0084               	movwf	4
 10820  2BF0  0878               	movf	atoi@s+1,w
 10821  2BF1  0085               	movwf	5
 10822  2BF2  0800               	movf	0,w	;code access
 10823  2BF3  00A0               	movwf	??_atoi
 10824  2BF4  082C               	movf	atoi@n+1,w
 10825  2BF5  00F2               	movwf	___wmul@multiplier+1
 10826  2BF6  082B               	movf	atoi@n,w
 10827  2BF7  00F1               	movwf	___wmul@multiplier
 10828  2BF8  300A               	movlw	10
 10829  2BF9  00F3               	movwf	___wmul@multiplicand
 10830  2BFA  3000               	movlw	0
 10831  2BFB  00F4               	movwf	___wmul@multiplicand+1
 10832  2BFC  31B3  23F0  31AB   	fcall	___wmul
 10833  2BFF  0872               	movf	?___wmul+1,w
 10834  2C00  0020               	movlb	0	; select bank0
 10835  2C01  00A2               	movwf	??_atoi+2
 10836  2C02  0820               	movf	??_atoi,w
 10837  2C03  0271               	subwf	?___wmul,w
 10838  2C04  00A1               	movwf	??_atoi+1
 10839  2C05  1C03               	skipc
 10840  2C06  03A2               	decf	??_atoi+2,f
 10841  2C07  0821               	movf	??_atoi+1,w
 10842  2C08  3E30               	addlw	48
 10843  2C09  00AB               	movwf	atoi@n
 10844  2C0A  3000               	movlw	0
 10845  2C0B  3D22               	addwfc	??_atoi+2,w
 10846  2C0C  00AC               	movwf	atoi@n+1
 10847  2C0D                     l1401:	
 10848  2C0D  3001               	movlw	1
 10849  2C0E  07F7               	addwf	atoi@s,f
 10850  2C0F  3000               	movlw	0
 10851  2C10  3DF8               	addwfc	atoi@s+1,f
 10852  2C11                     l6915:	
 10853  2C11  0877               	movf	atoi@s,w
 10854  2C12  0084               	movwf	4
 10855  2C13  0878               	movf	atoi@s+1,w
 10856  2C14  0085               	movwf	5
 10857  2C15  0800               	movf	0,w	;code access
 10858  2C16  3ED0               	addlw	208
 10859  2C17  00A0               	movwf	??_atoi
 10860  2C18  30FF               	movlw	255
 10861  2C19  1803               	skipnc
 10862  2C1A  3000               	movlw	0
 10863  2C1B  00A1               	movwf	??_atoi+1
 10864  2C1C  3000               	movlw	0
 10865  2C1D  0221               	subwf	??_atoi+1,w
 10866  2C1E  300A               	movlw	10
 10867  2C1F  1903               	skipnz
 10868  2C20  0220               	subwf	??_atoi,w
 10869  2C21  1803               	btfsc	3,0
 10870  2C22  2C25               	goto	u8990
 10871  2C23  3001               	movlw	1
 10872  2C24  2C26               	goto	u9000
 10873  2C25                     u8990:	
 10874  2C25  3000               	movlw	0
 10875  2C26                     u9000:	
 10876  2C26  00A2               	movwf	??_atoi+2
 10877  2C27  01A3               	clrf	??_atoi+3
 10878  2C28  0822               	movf	??_atoi+2,w
 10879  2C29  00A8               	movwf	_atoi$1702
 10880  2C2A  0823               	movf	??_atoi+3,w
 10881  2C2B  00A9               	movwf	_atoi$1702+1
 10882  2C2C  0828               	movf	_atoi$1702,w
 10883  2C2D  0429               	iorwf	_atoi$1702+1,w
 10884  2C2E  1D03               	btfss	3,2
 10885  2C2F  2BEE               	goto	l6911
 10886  2C30  0824               	movf	atoi@neg,w
 10887  2C31  0425               	iorwf	atoi@neg+1,w
 10888  2C32  1D03               	btfss	3,2
 10889  2C33  2C40               	goto	l6925
 10890  2C34  092B               	comf	atoi@n,w
 10891  2C35  00A0               	movwf	??_atoi
 10892  2C36  092C               	comf	atoi@n+1,w
 10893  2C37  00A1               	movwf	??_atoi+1
 10894  2C38  0AA0               	incf	??_atoi,f
 10895  2C39  1903               	skipnz
 10896  2C3A  0AA1               	incf	??_atoi+1,f
 10897  2C3B  0820               	movf	??_atoi,w
 10898  2C3C  00F7               	movwf	?_atoi
 10899  2C3D  0821               	movf	??_atoi+1,w
 10900  2C3E  00F8               	movwf	?_atoi+1
 10901  2C3F  0008               	return
 10902  2C40                     l6925:	
 10903  2C40  082C               	movf	atoi@n+1,w
 10904  2C41  00F8               	movwf	?_atoi+1
 10905  2C42  082B               	movf	atoi@n,w
 10906  2C43  00F7               	movwf	?_atoi
 10907  2C44  0008               	return
 10908  2C45                     __end_of_atoi:	
 10909                           
 10910                           	psect	text30
 10911  3441                     __ptext30:	
 10912 ;; *************** function _isspace *****************
 10913 ;; Defined at:
 10914 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 10915 ;; Parameters:    Size  Location     Type
 10916 ;;  c               2    1[COMMON] int 
 10917 ;; Auto vars:     Size  Location     Type
 10918 ;;		None
 10919 ;; Return value:  Size  Location     Type
 10920 ;;                  2    1[COMMON] int 
 10921 ;; Registers used:
 10922 ;;		wreg, status,2, status,0
 10923 ;; Tracked objects:
 10924 ;;		On entry : 0/0
 10925 ;;		On exit  : 0/0
 10926 ;;		Unchanged: 0/0
 10927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10928 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10929 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10930 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10931 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10932 ;;Total ram usage:        5 bytes
 10933 ;; Hardware stack levels used:    1
 10934 ;; Hardware stack levels required when called:    1
 10935 ;; This function calls:
 10936 ;;		Nothing
 10937 ;; This function is called by:
 10938 ;;		_atoi
 10939 ;; This function uses a non-reentrant model
 10940 ;;
 10941                           
 10942                           
 10943                           ;psect for function _isspace
 10944  3441                     _isspace:	
 10945                           
 10946                           ;incstack = 0
 10947                           ; Regs used in _isspace: [wreg+status,2+status,0]
 10948  3441  01F5               	clrf	_isspace$1727
 10949  3442  0AF5               	incf	_isspace$1727,f
 10950  3443  3020               	movlw	32
 10951  3444  0671               	xorwf	isspace@c,w
 10952  3445  0472               	iorwf	isspace@c+1,w
 10953  3446  1903               	btfsc	3,2
 10954  3447  2C55               	goto	l6619
 10955  3448  0871               	movf	isspace@c,w
 10956  3449  3EF7               	addlw	247
 10957  344A  00F3               	movwf	??_isspace
 10958  344B  30FF               	movlw	255
 10959  344C  3D72               	addwfc	isspace@c+1,w
 10960  344D  00F4               	movwf	??_isspace+1
 10961  344E  3000               	movlw	0
 10962  344F  0274               	subwf	??_isspace+1,w
 10963  3450  3005               	movlw	5
 10964  3451  1903               	skipnz
 10965  3452  0273               	subwf	??_isspace,w
 10966  3453  1803               	btfsc	3,0
 10967  3454  01F5               	clrf	_isspace$1727
 10968  3455                     l6619:	
 10969  3455  0875               	movf	_isspace$1727,w
 10970  3456  00F3               	movwf	??_isspace
 10971  3457  01F4               	clrf	??_isspace+1
 10972  3458  0873               	movf	??_isspace,w
 10973  3459  00F1               	movwf	?_isspace
 10974  345A  0874               	movf	??_isspace+1,w
 10975  345B  00F2               	movwf	?_isspace+1
 10976  345C  0008               	return
 10977  345D                     __end_of_isspace:	
 10978                           
 10979                           	psect	text31
 10980  3363                     __ptext31:	
 10981 ;; *************** function _isdigit *****************
 10982 ;; Defined at:
 10983 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 10984 ;; Parameters:    Size  Location     Type
 10985 ;;  c               2    1[COMMON] int 
 10986 ;; Auto vars:     Size  Location     Type
 10987 ;;		None
 10988 ;; Return value:  Size  Location     Type
 10989 ;;                  2    1[COMMON] int 
 10990 ;; Registers used:
 10991 ;;		wreg, status,2, status,0
 10992 ;; Tracked objects:
 10993 ;;		On entry : 0/0
 10994 ;;		On exit  : 0/0
 10995 ;;		Unchanged: 0/0
 10996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10997 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10999 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11000 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11001 ;;Total ram usage:        6 bytes
 11002 ;; Hardware stack levels used:    1
 11003 ;; Hardware stack levels required when called:    1
 11004 ;; This function calls:
 11005 ;;		Nothing
 11006 ;; This function is called by:
 11007 ;;		_vfpfcnvrt
 11008 ;;		_atoi
 11009 ;; This function uses a non-reentrant model
 11010 ;;
 11011                           
 11012                           
 11013                           ;psect for function _isdigit
 11014  3363                     _isdigit:	
 11015                           
 11016                           ;incstack = 0
 11017                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 11018  3363  0871               	movf	isdigit@c,w
 11019  3364  3ED0               	addlw	208
 11020  3365  00F3               	movwf	??_isdigit
 11021  3366  30FF               	movlw	255
 11022  3367  3D72               	addwfc	isdigit@c+1,w
 11023  3368  00F4               	movwf	??_isdigit+1
 11024  3369  3000               	movlw	0
 11025  336A  0274               	subwf	??_isdigit+1,w
 11026  336B  300A               	movlw	10
 11027  336C  1903               	skipnz
 11028  336D  0273               	subwf	??_isdigit,w
 11029  336E  1803               	btfsc	3,0
 11030  336F  2B72               	goto	u7980
 11031  3370  3001               	movlw	1
 11032  3371  2B73               	goto	u7990
 11033  3372                     u7980:	
 11034  3372  3000               	movlw	0
 11035  3373                     u7990:	
 11036  3373  00F5               	movwf	??_isdigit+2
 11037  3374  01F6               	clrf	??_isdigit+3
 11038  3375  0875               	movf	??_isdigit+2,w
 11039  3376  00F1               	movwf	?_isdigit
 11040  3377  0876               	movf	??_isdigit+3,w
 11041  3378  00F2               	movwf	?_isdigit+1
 11042  3379  0008               	return
 11043  337A                     __end_of_isdigit:	
 11044                           
 11045                           	psect	text32
 11046  33D6                     __ptext32:	
 11047 ;; *************** function _EUSART_Write_Text *****************
 11048 ;; Defined at:
 11049 ;;		line 75 in file "EUSART.c"
 11050 ;; Parameters:    Size  Location     Type
 11051 ;;  text            2    2[COMMON] PTR unsigned char 
 11052 ;;		 -> STR_24(3), STR_11(3), STR_10(38), messageBuffer(127), 
 11053 ;; Auto vars:     Size  Location     Type
 11054 ;;  i               2    5[COMMON] int 
 11055 ;; Return value:  Size  Location     Type
 11056 ;;                  1    wreg      void 
 11057 ;; Registers used:
 11058 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11059 ;; Tracked objects:
 11060 ;;		On entry : 0/0
 11061 ;;		On exit  : 0/0
 11062 ;;		Unchanged: 0/0
 11063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11064 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11065 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11066 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11067 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11068 ;;Total ram usage:        5 bytes
 11069 ;; Hardware stack levels used:    1
 11070 ;; Hardware stack levels required when called:    2
 11071 ;; This function calls:
 11072 ;;		_EUSART_Write
 11073 ;; This function is called by:
 11074 ;;		_statemachine
 11075 ;;		_printcellParameters
 11076 ;;		_printotAFERegisters
 11077 ;; This function uses a non-reentrant model
 11078 ;;
 11079                           
 11080                           
 11081                           ;psect for function _EUSART_Write_Text
 11082  33D6                     _EUSART_Write_Text:	
 11083                           
 11084                           ;EUSART.c: 75: void EUSART_Write_Text(char *text);EUSART.c: 76: {;EUSART.c: 77:   int i;
      +                          ;EUSART.c: 78:   for(i=0;text[i]!='\0';i++)
 11085                           
 11086                           ;incstack = 0
 11087                           ; Regs used in _EUSART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11088  33D6  01F5               	clrf	EUSART_Write_Text@i
 11089  33D7  01F6               	clrf	EUSART_Write_Text@i+1
 11090  33D8                     l8181:	
 11091  33D8  0872               	movf	EUSART_Write_Text@text,w
 11092  33D9  0775               	addwf	EUSART_Write_Text@i,w
 11093  33DA  0084               	movwf	4
 11094  33DB  0873               	movf	EUSART_Write_Text@text+1,w
 11095  33DC  3D76               	addwfc	EUSART_Write_Text@i+1,w
 11096  33DD  0085               	movwf	5
 11097  33DE  0012               	moviw fsr0++
 11098  33DF  1903               	btfsc	3,2
 11099  33E0  0008               	return
 11100                           
 11101                           ;EUSART.c: 79:    EUSART_Write(text[i]);
 11102  33E1  0872               	movf	EUSART_Write_Text@text,w
 11103  33E2  0775               	addwf	EUSART_Write_Text@i,w
 11104  33E3  0084               	movwf	4
 11105  33E4  0873               	movf	EUSART_Write_Text@text+1,w
 11106  33E5  3D76               	addwfc	EUSART_Write_Text@i+1,w
 11107  33E6  0085               	movwf	5
 11108  33E7  0800               	movf	0,w	;code access
 11109  33E8  3188  2000  31B3   	fcall	_EUSART_Write
 11110  33EB  3001               	movlw	1
 11111  33EC  07F5               	addwf	EUSART_Write_Text@i,f
 11112  33ED  3000               	movlw	0
 11113  33EE  3DF6               	addwfc	EUSART_Write_Text@i+1,f
 11114  33EF  2BD8               	goto	l8181
 11115  33F0                     __end_of_EUSART_Write_Text:	
 11116                           
 11117                           	psect	text33
 11118  0800                     __ptext33:	
 11119 ;; *************** function _EUSART_Write *****************
 11120 ;; Defined at:
 11121 ;;		line 56 in file "EUSART.c"
 11122 ;; Parameters:    Size  Location     Type
 11123 ;;  txData          1    wreg     unsigned char 
 11124 ;; Auto vars:     Size  Location     Type
 11125 ;;  txData          1    1[COMMON] unsigned char 
 11126 ;; Return value:  Size  Location     Type
 11127 ;;                  1    wreg      void 
 11128 ;; Registers used:
 11129 ;;		wreg
 11130 ;; Tracked objects:
 11131 ;;		On entry : 0/0
 11132 ;;		On exit  : 0/0
 11133 ;;		Unchanged: 0/0
 11134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11136 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11138 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11139 ;;Total ram usage:        1 bytes
 11140 ;; Hardware stack levels used:    1
 11141 ;; Hardware stack levels required when called:    1
 11142 ;; This function calls:
 11143 ;;		Nothing
 11144 ;; This function is called by:
 11145 ;;		_EUSART_Write_Text
 11146 ;; This function uses a non-reentrant model
 11147 ;;
 11148                           
 11149                           
 11150                           ;psect for function _EUSART_Write
 11151  0800                     _EUSART_Write:	
 11152                           
 11153                           ;incstack = 0
 11154                           ; Regs used in _EUSART_Write: [wreg]
 11155                           ;EUSART_Write@txData stored from wreg
 11156  0800  00F1               	movwf	EUSART_Write@txData
 11157  0801                     l249:	
 11158                           ;EUSART.c: 59:     {;EUSART.c: 60:     }
 11159                           
 11160                           
 11161                           ;EUSART.c: 58:     while(0 == PIR1bits.TXIF)
 11162  0801  0020               	movlb	0	; select bank0
 11163  0802  1E11               	btfss	17,4	;volatile
 11164  0803  2801               	goto	l249
 11165                           
 11166                           ;EUSART.c: 62:     TX1REG = txData;
 11167  0804  0871               	movf	EUSART_Write@txData,w
 11168  0805  0023               	movlb	3	; select bank3
 11169  0806  009A               	movwf	26	;volatile
 11170  0807  0008               	return
 11171  0808                     __end_of_EUSART_Write:	
 11172                           
 11173                           	psect	text34
 11174  2811                     __ptext34:	
 11175 ;; *************** function _init_AFE *****************
 11176 ;; Defined at:
 11177 ;;		line 3 in file "BQ76920.c"
 11178 ;; Parameters:    Size  Location     Type
 11179 ;;		None
 11180 ;; Auto vars:     Size  Location     Type
 11181 ;;		None
 11182 ;; Return value:  Size  Location     Type
 11183 ;;                  1    wreg      void 
 11184 ;; Registers used:
 11185 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11186 ;; Tracked objects:
 11187 ;;		On entry : 0/0
 11188 ;;		On exit  : 0/0
 11189 ;;		Unchanged: 0/0
 11190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11195 ;;Total ram usage:        0 bytes
 11196 ;; Hardware stack levels used:    1
 11197 ;; Hardware stack levels required when called:    4
 11198 ;; This function calls:
 11199 ;;		_setCellOvervoltageProtection
 11200 ;;		_setCellUndervoltageProtection
 11201 ;;		_setOverCurrentDischargeProtection
 11202 ;;		_setShortCircuitProtection
 11203 ;;		_setShuntResistorValue
 11204 ;;		_setTemperatureLimitsint
 11205 ;; This function is called by:
 11206 ;;		_statemachine
 11207 ;; This function uses a non-reentrant model
 11208 ;;
 11209                           
 11210                           
 11211                           ;psect for function _init_AFE
 11212  2811                     _init_AFE:	
 11213                           
 11214                           ;BQ76920.c: 5:     setTemperatureLimitsint(-20, 45, 0, 45);
 11215                           
 11216                           ;incstack = 0
 11217                           ; Regs used in _init_AFE: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11218  2811  30EC               	movlw	236
 11219  2812  0020               	movlb	0	; select bank0
 11220  2813  00A0               	movwf	setTemperatureLimitsint@minDischarge_degC
 11221  2814  30FF               	movlw	255
 11222  2815  00A1               	movwf	setTemperatureLimitsint@minDischarge_degC+1
 11223  2816  302D               	movlw	45
 11224  2817  00A2               	movwf	setTemperatureLimitsint@maxDischarge_degC
 11225  2818  3000               	movlw	0
 11226  2819  00A3               	movwf	setTemperatureLimitsint@maxDischarge_degC+1
 11227  281A  3000               	movlw	0
 11228  281B  00A4               	movwf	setTemperatureLimitsint@minCharge_degC
 11229  281C  00A5               	movwf	setTemperatureLimitsint@minCharge_degC+1
 11230  281D  302D               	movlw	45
 11231  281E  00A6               	movwf	setTemperatureLimitsint@maxCharge_degC
 11232  281F  3000               	movlw	0
 11233  2820  00A7               	movwf	setTemperatureLimitsint@maxCharge_degC+1
 11234  2821  31B6  26C5  31A8   	fcall	_setTemperatureLimitsint
 11235                           
 11236                           ;BQ76920.c: 6:     setShuntResistorValue(0.02);
 11237  2824  303C               	movlw	60
 11238  2825  00F4               	movwf	setShuntResistorValue@res_mOhm+3
 11239  2826  30A3               	movlw	163
 11240  2827  00F3               	movwf	setShuntResistorValue@res_mOhm+2
 11241  2828  30D7               	movlw	215
 11242  2829  00F2               	movwf	setShuntResistorValue@res_mOhm+1
 11243  282A  300A               	movlw	10
 11244  282B  00F1               	movwf	setShuntResistorValue@res_mOhm
 11245  282C  31B3  2332  31A8   	fcall	_setShuntResistorValue
 11246                           
 11247                           ;BQ76920.c: 9:     setShortCircuitProtection(500, 200);
 11248  282F  3000               	movlw	0
 11249  2830  0020               	movlb	0	; select bank0
 11250  2831  00E9               	movwf	setShortCircuitProtection@current_mA+3
 11251  2832  3000               	movlw	0
 11252  2833  00E8               	movwf	setShortCircuitProtection@current_mA+2
 11253  2834  3001               	movlw	1
 11254  2835  00E7               	movwf	setShortCircuitProtection@current_mA+1
 11255  2836  30F4               	movlw	244
 11256  2837  00E6               	movwf	setShortCircuitProtection@current_mA
 11257  2838  30C8               	movlw	200
 11258  2839  00EA               	movwf	setShortCircuitProtection@delay_us
 11259  283A  3000               	movlw	0
 11260  283B  00EB               	movwf	setShortCircuitProtection@delay_us+1
 11261  283C  31A5  25DA  31A8   	fcall	_setShortCircuitProtection
 11262                           
 11263                           ;BQ76920.c: 14:     setOverCurrentDischargeProtection(10, 320);
 11264  283F  3000               	movlw	0
 11265  2840  0020               	movlb	0	; select bank0
 11266  2841  00E9               	movwf	setOverCurrentDischargeProtection@current_mA+3
 11267  2842  3000               	movlw	0
 11268  2843  00E8               	movwf	setOverCurrentDischargeProtection@current_mA+2
 11269  2844  3000               	movlw	0
 11270  2845  00E7               	movwf	setOverCurrentDischargeProtection@current_mA+1
 11271  2846  300A               	movlw	10
 11272  2847  00E6               	movwf	setOverCurrentDischargeProtection@current_mA
 11273  2848  3040               	movlw	64
 11274  2849  00EA               	movwf	setOverCurrentDischargeProtection@delay_ms
 11275  284A  3001               	movlw	1
 11276  284B  00EB               	movwf	setOverCurrentDischargeProtection@delay_ms+1
 11277  284C  31A6  26EB  31A8   	fcall	_setOverCurrentDischargeProtection
 11278                           
 11279                           ;BQ76920.c: 15:     setCellUndervoltageProtection(2900, 2);
 11280  284F  3054               	movlw	84
 11281  2850  0020               	movlb	0	; select bank0
 11282  2851  00B2               	movwf	setCellUndervoltageProtection@voltage_mV
 11283  2852  300B               	movlw	11
 11284  2853  00B3               	movwf	setCellUndervoltageProtection@voltage_mV+1
 11285  2854  3002               	movlw	2
 11286  2855  00B4               	movwf	setCellUndervoltageProtection@delay_s
 11287  2856  3000               	movlw	0
 11288  2857  00B5               	movwf	setCellUndervoltageProtection@delay_s+1
 11289  2858  31A0  2063  31A8   	fcall	_setCellUndervoltageProtection
 11290                           
 11291                           ;BQ76920.c: 16:     setCellOvervoltageProtection(4100,2);
 11292  285B  3004               	movlw	4
 11293  285C  0020               	movlb	0	; select bank0
 11294  285D  00B2               	movwf	setCellOvervoltageProtection@voltage_mV
 11295  285E  3010               	movlw	16
 11296  285F  00B3               	movwf	setCellOvervoltageProtection@voltage_mV+1
 11297  2860  3002               	movlw	2
 11298  2861  00B4               	movwf	setCellOvervoltageProtection@delay_s
 11299  2862  3000               	movlw	0
 11300  2863  00B5               	movwf	setCellOvervoltageProtection@delay_s+1
 11301  2864  31AF  272B         	fcall	_setCellOvervoltageProtection
 11302  2866  0008               	return
 11303  2867                     __end_of_init_AFE:	
 11304                           
 11305                           	psect	text35
 11306  36C5                     __ptext35:	
 11307 ;; *************** function _setTemperatureLimitsint *****************
 11308 ;; Defined at:
 11309 ;;		line 61 in file "BQ76920.c"
 11310 ;; Parameters:    Size  Location     Type
 11311 ;;  minDischarge    2    0[BANK0 ] int 
 11312 ;;  maxDischarge    2    2[BANK0 ] int 
 11313 ;;  minCharge_de    2    4[BANK0 ] int 
 11314 ;;  maxCharge_de    2    6[BANK0 ] int 
 11315 ;; Auto vars:     Size  Location     Type
 11316 ;;		None
 11317 ;; Return value:  Size  Location     Type
 11318 ;;                  1    wreg      void 
 11319 ;; Registers used:
 11320 ;;		wreg, status,2, status,0, pclath, cstack
 11321 ;; Tracked objects:
 11322 ;;		On entry : 0/0
 11323 ;;		On exit  : 0/0
 11324 ;;		Unchanged: 0/0
 11325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11326 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11329 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11330 ;;Total ram usage:        8 bytes
 11331 ;; Hardware stack levels used:    1
 11332 ;; Hardware stack levels required when called:    2
 11333 ;; This function calls:
 11334 ;;		___wmul
 11335 ;; This function is called by:
 11336 ;;		_init_AFE
 11337 ;; This function uses a non-reentrant model
 11338 ;;
 11339                           
 11340                           
 11341                           ;psect for function _setTemperatureLimitsint
 11342  36C5                     _setTemperatureLimitsint:	
 11343                           
 11344                           ;BQ76920.c: 63:     minCellTempDischarge = minDischarge_degC * 10;
 11345                           
 11346                           ;incstack = 0
 11347                           ; Regs used in _setTemperatureLimitsint: [wreg+status,2+status,0+pclath+cstack]
 11348  36C5  0020               	movlb	0	; select bank0
 11349  36C6  0821               	movf	setTemperatureLimitsint@minDischarge_degC+1,w
 11350  36C7  00F2               	movwf	___wmul@multiplier+1
 11351  36C8  0820               	movf	setTemperatureLimitsint@minDischarge_degC,w
 11352  36C9  00F1               	movwf	___wmul@multiplier
 11353  36CA  300A               	movlw	10
 11354  36CB  00F3               	movwf	___wmul@multiplicand
 11355  36CC  3000               	movlw	0
 11356  36CD  00F4               	movwf	___wmul@multiplicand+1
 11357  36CE  31B3  23F0  31B6   	fcall	___wmul
 11358  36D1  0872               	movf	?___wmul+1,w
 11359  36D2  0023               	movlb	3	; select bank3
 11360  36D3  00D5               	movwf	(_minCellTempDischarge+1)^(0+384)
 11361  36D4  0871               	movf	?___wmul,w
 11362  36D5  00D4               	movwf	_minCellTempDischarge^(0+384)
 11363                           
 11364                           ;BQ76920.c: 64:     maxCellTempDischarge = maxDischarge_degC * 10;
 11365  36D6  0020               	movlb	0	; select bank0
 11366  36D7  0823               	movf	setTemperatureLimitsint@maxDischarge_degC+1,w
 11367  36D8  00F2               	movwf	___wmul@multiplier+1
 11368  36D9  0822               	movf	setTemperatureLimitsint@maxDischarge_degC,w
 11369  36DA  00F1               	movwf	___wmul@multiplier
 11370  36DB  300A               	movlw	10
 11371  36DC  00F3               	movwf	___wmul@multiplicand
 11372  36DD  3000               	movlw	0
 11373  36DE  00F4               	movwf	___wmul@multiplicand+1
 11374  36DF  31B3  23F0  31B6   	fcall	___wmul
 11375  36E2  0872               	movf	?___wmul+1,w
 11376  36E3  0023               	movlb	3	; select bank3
 11377  36E4  00D1               	movwf	(_maxCellTempDischarge+1)^(0+384)
 11378  36E5  0871               	movf	?___wmul,w
 11379  36E6  00D0               	movwf	_maxCellTempDischarge^(0+384)
 11380                           
 11381                           ;BQ76920.c: 65:     minCellTempCharge = minCharge_degC * 10;
 11382  36E7  0020               	movlb	0	; select bank0
 11383  36E8  0825               	movf	setTemperatureLimitsint@minCharge_degC+1,w
 11384  36E9  00F2               	movwf	___wmul@multiplier+1
 11385  36EA  0824               	movf	setTemperatureLimitsint@minCharge_degC,w
 11386  36EB  00F1               	movwf	___wmul@multiplier
 11387  36EC  300A               	movlw	10
 11388  36ED  00F3               	movwf	___wmul@multiplicand
 11389  36EE  3000               	movlw	0
 11390  36EF  00F4               	movwf	___wmul@multiplicand+1
 11391  36F0  31B3  23F0  31B6   	fcall	___wmul
 11392  36F3  0872               	movf	?___wmul+1,w
 11393  36F4  0023               	movlb	3	; select bank3
 11394  36F5  00D7               	movwf	(_minCellTempCharge+1)^(0+384)
 11395  36F6  0871               	movf	?___wmul,w
 11396  36F7  00D6               	movwf	_minCellTempCharge^(0+384)
 11397                           
 11398                           ;BQ76920.c: 66:     maxCellTempCharge = maxCharge_degC * 10;
 11399  36F8  0020               	movlb	0	; select bank0
 11400  36F9  0827               	movf	setTemperatureLimitsint@maxCharge_degC+1,w
 11401  36FA  00F2               	movwf	___wmul@multiplier+1
 11402  36FB  0826               	movf	setTemperatureLimitsint@maxCharge_degC,w
 11403  36FC  00F1               	movwf	___wmul@multiplier
 11404  36FD  300A               	movlw	10
 11405  36FE  00F3               	movwf	___wmul@multiplicand
 11406  36FF  3000               	movlw	0
 11407  3700  00F4               	movwf	___wmul@multiplicand+1
 11408  3701  31B3  23F0         	fcall	___wmul
 11409  3703  0872               	movf	?___wmul+1,w
 11410  3704  0023               	movlb	3	; select bank3
 11411  3705  00D3               	movwf	(_maxCellTempCharge+1)^(0+384)
 11412  3706  0871               	movf	?___wmul,w
 11413  3707  00D2               	movwf	_maxCellTempCharge^(0+384)
 11414  3708  0008               	return
 11415  3709                     __end_of_setTemperatureLimitsint:	
 11416                           
 11417                           	psect	text36
 11418  33F0                     __ptext36:	
 11419 ;; *************** function ___wmul *****************
 11420 ;; Defined at:
 11421 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 11422 ;; Parameters:    Size  Location     Type
 11423 ;;  multiplier      2    1[COMMON] unsigned int 
 11424 ;;  multiplicand    2    3[COMMON] unsigned int 
 11425 ;; Auto vars:     Size  Location     Type
 11426 ;;  product         2    5[COMMON] unsigned int 
 11427 ;; Return value:  Size  Location     Type
 11428 ;;                  2    1[COMMON] unsigned int 
 11429 ;; Registers used:
 11430 ;;		wreg, status,2, status,0
 11431 ;; Tracked objects:
 11432 ;;		On entry : 0/0
 11433 ;;		On exit  : 0/0
 11434 ;;		Unchanged: 0/0
 11435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11436 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11437 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11439 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11440 ;;Total ram usage:        6 bytes
 11441 ;; Hardware stack levels used:    1
 11442 ;; Hardware stack levels required when called:    1
 11443 ;; This function calls:
 11444 ;;		Nothing
 11445 ;; This function is called by:
 11446 ;;		_setTemperatureLimitsint
 11447 ;;		_atoi
 11448 ;; This function uses a non-reentrant model
 11449 ;;
 11450                           
 11451                           
 11452                           ;psect for function ___wmul
 11453  33F0                     ___wmul:	
 11454                           
 11455                           ;incstack = 0
 11456                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 11457  33F0  01F5               	clrf	___wmul@product
 11458  33F1  01F6               	clrf	___wmul@product+1
 11459  33F2                     l6493:	
 11460  33F2  1C71               	btfss	___wmul@multiplier,0
 11461  33F3  2BF8               	goto	l926
 11462  33F4  0873               	movf	___wmul@multiplicand,w
 11463  33F5  07F5               	addwf	___wmul@product,f
 11464  33F6  0874               	movf	___wmul@multiplicand+1,w
 11465  33F7  3DF6               	addwfc	___wmul@product+1,f
 11466  33F8                     l926:	
 11467  33F8  3001               	movlw	1
 11468  33F9                     u8015:	
 11469  33F9  35F3               	lslf	___wmul@multiplicand,f
 11470  33FA  0DF4               	rlf	___wmul@multiplicand+1,f
 11471  33FB  0B89               	decfsz	9,f
 11472  33FC  2BF9               	goto	u8015
 11473  33FD  3001               	movlw	1
 11474  33FE                     u8025:	
 11475  33FE  36F2               	lsrf	___wmul@multiplier+1,f
 11476  33FF  0CF1               	rrf	___wmul@multiplier,f
 11477  3400  0B89               	decfsz	9,f
 11478  3401  2BFE               	goto	u8025
 11479  3402  0871               	movf	___wmul@multiplier,w
 11480  3403  0472               	iorwf	___wmul@multiplier+1,w
 11481  3404  1D03               	btfss	3,2
 11482  3405  2BF2               	goto	l6493
 11483  3406  0876               	movf	___wmul@product+1,w
 11484  3407  00F2               	movwf	?___wmul+1
 11485  3408  0875               	movf	___wmul@product,w
 11486  3409  00F1               	movwf	?___wmul
 11487  340A  0008               	return
 11488  340B                     __end_of___wmul:	
 11489                           
 11490                           	psect	text37
 11491  3332                     __ptext37:	
 11492 ;; *************** function _setShuntResistorValue *****************
 11493 ;; Defined at:
 11494 ;;		line 73 in file "BQ76920.c"
 11495 ;; Parameters:    Size  Location     Type
 11496 ;;  res_mOhm        4    1[COMMON] float 
 11497 ;; Auto vars:     Size  Location     Type
 11498 ;;		None
 11499 ;; Return value:  Size  Location     Type
 11500 ;;                  1    wreg      void 
 11501 ;; Registers used:
 11502 ;;		wreg
 11503 ;; Tracked objects:
 11504 ;;		On entry : 0/0
 11505 ;;		On exit  : 0/0
 11506 ;;		Unchanged: 0/0
 11507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11508 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11511 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11512 ;;Total ram usage:        4 bytes
 11513 ;; Hardware stack levels used:    1
 11514 ;; Hardware stack levels required when called:    1
 11515 ;; This function calls:
 11516 ;;		Nothing
 11517 ;; This function is called by:
 11518 ;;		_init_AFE
 11519 ;; This function uses a non-reentrant model
 11520 ;;
 11521                           
 11522                           
 11523                           ;psect for function _setShuntResistorValue
 11524  3332                     _setShuntResistorValue:	
 11525                           
 11526                           ;BQ76920.c: 74:     shuntResistorValue_mOhm = res_mOhm;
 11527                           
 11528                           ;incstack = 0
 11529                           ; Regs used in _setShuntResistorValue: [wreg]
 11530  3332  0874               	movf	setShuntResistorValue@res_mOhm+3,w
 11531  3333  0023               	movlb	3	; select bank3
 11532  3334  00BB               	movwf	(_shuntResistorValue_mOhm+3)^(0+384)
 11533  3335  0873               	movf	setShuntResistorValue@res_mOhm+2,w
 11534  3336  00BA               	movwf	(_shuntResistorValue_mOhm+2)^(0+384)
 11535  3337  0872               	movf	setShuntResistorValue@res_mOhm+1,w
 11536  3338  00B9               	movwf	(_shuntResistorValue_mOhm+1)^(0+384)
 11537  3339  0871               	movf	setShuntResistorValue@res_mOhm,w
 11538  333A  00B8               	movwf	_shuntResistorValue_mOhm^(0+384)
 11539  333B  0008               	return
 11540  333C                     __end_of_setShuntResistorValue:	
 11541                           
 11542                           	psect	text38
 11543  25DA                     __ptext38:	
 11544 ;; *************** function _setShortCircuitProtection *****************
 11545 ;; Defined at:
 11546 ;;		line 81 in file "BQ76920.c"
 11547 ;; Parameters:    Size  Location     Type
 11548 ;;  current_mA      4   70[BANK0 ] long 
 11549 ;;  delay_us        2   74[BANK0 ] int 
 11550 ;; Auto vars:     Size  Location     Type
 11551 ;;  i               2   10[BANK1 ] int 
 11552 ;;  i               2    8[BANK1 ] int 
 11553 ;;  scaler          4    0[BANK1 ] float 
 11554 ;; Return value:  Size  Location     Type
 11555 ;;                  1    wreg      void 
 11556 ;; Registers used:
 11557 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11558 ;; Tracked objects:
 11559 ;;		On entry : 0/0
 11560 ;;		On exit  : 0/0
 11561 ;;		Unchanged: 0/0
 11562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11563 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11564 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11565 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11566 ;;      Totals:         0       9      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11567 ;;Total ram usage:       21 bytes
 11568 ;; Hardware stack levels used:    1
 11569 ;; Hardware stack levels required when called:    3
 11570 ;; This function calls:
 11571 ;;		_I2C_writeRegister
 11572 ;;		___fldiv
 11573 ;;		___flge
 11574 ;;		___flmul
 11575 ;;		___xxtofl
 11576 ;; This function is called by:
 11577 ;;		_init_AFE
 11578 ;; This function uses a non-reentrant model
 11579 ;;
 11580                           
 11581                           
 11582                           ;psect for function _setShortCircuitProtection
 11583  25DA                     _setShortCircuitProtection:	
 11584                           
 11585                           ;BQ76920.c: 86:     float scaler = 1000.0;
 11586                           
 11587                           ;incstack = 0
 11588                           ; Regs used in _setShortCircuitProtection: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11589  25DA  3044               	movlw	68
 11590  25DB  0021               	movlb	1	; select bank1
 11591  25DC  00A3               	movwf	(setShortCircuitProtection@scaler+3)^(0+128)
 11592  25DD  307A               	movlw	122
 11593  25DE  00A2               	movwf	(setShortCircuitProtection@scaler+2)^(0+128)
 11594  25DF  3000               	movlw	0
 11595  25E0  00A1               	movwf	(setShortCircuitProtection@scaler+1)^(0+128)
 11596  25E1  3000               	movlw	0
 11597  25E2  00A0               	movwf	setShortCircuitProtection@scaler^(0+128)
 11598                           
 11599                           ;BQ76920.c: 87:     protect1.bits.SCD_THRESH = 0;
 11600  25E3  30F8               	movlw	-8
 11601  25E4  05EF               	andwf	_protect1^(0+128),f
 11602                           
 11603                           ;BQ76920.c: 88:     for (int i = 0; i < (sizeof(SCD_threshold_setting) / sizeof((SCD_thr
      +                          eshold_setting)[0])) - 1; i++) {
 11604  25E5  01A8               	clrf	setShortCircuitProtection@i^(0+128)
 11605  25E6  01A9               	clrf	(setShortCircuitProtection@i+1)^(0+128)
 11606  25E7                     l8197:	
 11607                           
 11608                           ;BQ76920.c: 89:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) >
      +                          = SCD_threshold_setting[i]) {
 11609  25E7  0023               	movlb	3	; select bank3
 11610  25E8  083B               	movf	(_shuntResistorValue_mOhm+3)^(0+384),w
 11611  25E9  0020               	movlb	0	; select bank0
 11612  25EA  00A9               	movwf	___flmul@b+3
 11613  25EB  0023               	movlb	3	; select bank3
 11614  25EC  083A               	movf	(_shuntResistorValue_mOhm+2)^(0+384),w
 11615  25ED  0020               	movlb	0	; select bank0
 11616  25EE  00A8               	movwf	___flmul@b+2
 11617  25EF  0023               	movlb	3	; select bank3
 11618  25F0  0839               	movf	(_shuntResistorValue_mOhm+1)^(0+384),w
 11619  25F1  0020               	movlb	0	; select bank0
 11620  25F2  00A7               	movwf	___flmul@b+1
 11621  25F3  0023               	movlb	3	; select bank3
 11622  25F4  0838               	movf	_shuntResistorValue_mOhm^(0+384),w
 11623  25F5  0020               	movlb	0	; select bank0
 11624  25F6  00A6               	movwf	___flmul@b
 11625  25F7  0869               	movf	setShortCircuitProtection@current_mA+3,w
 11626  25F8  00F4               	movwf	___xxtofl@val+3
 11627  25F9  0868               	movf	setShortCircuitProtection@current_mA+2,w
 11628  25FA  00F3               	movwf	___xxtofl@val+2
 11629  25FB  0867               	movf	setShortCircuitProtection@current_mA+1,w
 11630  25FC  00F2               	movwf	___xxtofl@val+1
 11631  25FD  0866               	movf	setShortCircuitProtection@current_mA,w
 11632  25FE  00F1               	movwf	___xxtofl@val
 11633  25FF  3001               	movlw	1
 11634  2600  3198  2009  31A5   	fcall	___xxtofl
 11635  2603  0874               	movf	?___xxtofl+3,w
 11636  2604  0020               	movlb	0	; select bank0
 11637  2605  00AD               	movwf	___flmul@a+3
 11638  2606  0873               	movf	?___xxtofl+2,w
 11639  2607  00AC               	movwf	___flmul@a+2
 11640  2608  0872               	movf	?___xxtofl+1,w
 11641  2609  00AB               	movwf	___flmul@a+1
 11642  260A  0871               	movf	?___xxtofl,w
 11643  260B  00AA               	movwf	___flmul@a
 11644  260C  3190  2023  31A5   	fcall	___flmul
 11645  260F  0020               	movlb	0	; select bank0
 11646  2610  0829               	movf	?___flmul+3,w
 11647  2611  0021               	movlb	1	; select bank1
 11648  2612  00A7               	movwf	(_setShortCircuitProtection$2076+3)^(0+128)
 11649  2613  0020               	movlb	0	; select bank0
 11650  2614  0828               	movf	?___flmul+2,w
 11651  2615  0021               	movlb	1	; select bank1
 11652  2616  00A6               	movwf	(_setShortCircuitProtection$2076+2)^(0+128)
 11653  2617  0020               	movlb	0	; select bank0
 11654  2618  0827               	movf	?___flmul+1,w
 11655  2619  0021               	movlb	1	; select bank1
 11656  261A  00A5               	movwf	(_setShortCircuitProtection$2076+1)^(0+128)
 11657  261B  0020               	movlb	0	; select bank0
 11658  261C  0826               	movf	?___flmul,w
 11659  261D  0021               	movlb	1	; select bank1
 11660  261E  00A4               	movwf	_setShortCircuitProtection$2076^(0+128)
 11661                           
 11662                           ;BQ76920.c: 89:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) >
      +                          = SCD_threshold_setting[i]) {
 11663  261F  3044               	movlw	68
 11664  2620  0020               	movlb	0	; select bank0
 11665  2621  00C3               	movwf	___fldiv@a+3
 11666  2622  307A               	movlw	122
 11667  2623  00C2               	movwf	___fldiv@a+2
 11668  2624  3000               	movlw	0
 11669  2625  00C1               	movwf	___fldiv@a+1
 11670  2626  3000               	movlw	0
 11671  2627  00C0               	movwf	___fldiv@a
 11672  2628  0021               	movlb	1	; select bank1
 11673  2629  0823               	movf	(setShortCircuitProtection@scaler+3)^(0+128),w
 11674  262A  0020               	movlb	0	; select bank0
 11675  262B  00A9               	movwf	___flmul@b+3
 11676  262C  0021               	movlb	1	; select bank1
 11677  262D  0822               	movf	(setShortCircuitProtection@scaler+2)^(0+128),w
 11678  262E  0020               	movlb	0	; select bank0
 11679  262F  00A8               	movwf	___flmul@b+2
 11680  2630  0021               	movlb	1	; select bank1
 11681  2631  0821               	movf	(setShortCircuitProtection@scaler+1)^(0+128),w
 11682  2632  0020               	movlb	0	; select bank0
 11683  2633  00A7               	movwf	___flmul@b+1
 11684  2634  0021               	movlb	1	; select bank1
 11685  2635  0820               	movf	setShortCircuitProtection@scaler^(0+128),w
 11686  2636  0020               	movlb	0	; select bank0
 11687  2637  00A6               	movwf	___flmul@b
 11688  2638  0021               	movlb	1	; select bank1
 11689  2639  0827               	movf	(_setShortCircuitProtection$2076+3)^(0+128),w
 11690  263A  0020               	movlb	0	; select bank0
 11691  263B  00AD               	movwf	___flmul@a+3
 11692  263C  0021               	movlb	1	; select bank1
 11693  263D  0826               	movf	(_setShortCircuitProtection$2076+2)^(0+128),w
 11694  263E  0020               	movlb	0	; select bank0
 11695  263F  00AC               	movwf	___flmul@a+2
 11696  2640  0021               	movlb	1	; select bank1
 11697  2641  0825               	movf	(_setShortCircuitProtection$2076+1)^(0+128),w
 11698  2642  0020               	movlb	0	; select bank0
 11699  2643  00AB               	movwf	___flmul@a+1
 11700  2644  0021               	movlb	1	; select bank1
 11701  2645  0824               	movf	_setShortCircuitProtection$2076^(0+128),w
 11702  2646  0020               	movlb	0	; select bank0
 11703  2647  00AA               	movwf	___flmul@a
 11704  2648  3190  2023  31A5   	fcall	___flmul
 11705  264B  0020               	movlb	0	; select bank0
 11706  264C  0829               	movf	?___flmul+3,w
 11707  264D  00C7               	movwf	___fldiv@b+3
 11708  264E  0828               	movf	?___flmul+2,w
 11709  264F  00C6               	movwf	___fldiv@b+2
 11710  2650  0827               	movf	?___flmul+1,w
 11711  2651  00C5               	movwf	___fldiv@b+1
 11712  2652  0826               	movf	?___flmul,w
 11713  2653  00C4               	movwf	___fldiv@b
 11714  2654  319B  234B  31A5   	fcall	___fldiv
 11715  2657  0020               	movlb	0	; select bank0
 11716  2658  0843               	movf	?___fldiv+3,w
 11717  2659  00DD               	movwf	___flge@ff1+3
 11718  265A  0842               	movf	?___fldiv+2,w
 11719  265B  00DC               	movwf	___flge@ff1+2
 11720  265C  0841               	movf	?___fldiv+1,w
 11721  265D  00DB               	movwf	___flge@ff1+1
 11722  265E  0840               	movf	?___fldiv,w
 11723  265F  00DA               	movwf	___flge@ff1
 11724  2660  0021               	movlb	1	; select bank1
 11725  2661  0829               	movf	(setShortCircuitProtection@i+1)^(0+128),w
 11726  2662  0085               	movwf	5
 11727  2663  0828               	movf	setShortCircuitProtection@i^(0+128),w
 11728  2664  0084               	movwf	4
 11729  2665  3584               	lslf	4,f
 11730  2666  0D85               	rlf	5,f
 11731  2667  30DB               	movlw	low (_SCD_threshold_setting| (0+32768))
 11732  2668  0784               	addwf	4,f
 11733  2669  30B9               	movlw	high (_SCD_threshold_setting| (0+32768))
 11734  266A  3D85               	addwfc	5,f
 11735  266B  3F00               	moviw [0]fsr0
 11736  266C  0020               	movlb	0	; select bank0
 11737  266D  00EC               	movwf	??_setShortCircuitProtection
 11738  266E  3F01               	moviw [1]fsr0
 11739  266F  00ED               	movwf	??_setShortCircuitProtection+1
 11740  2670  086C               	movf	??_setShortCircuitProtection,w
 11741  2671  00F1               	movwf	___xxtofl@val
 11742  2672  086D               	movf	??_setShortCircuitProtection+1,w
 11743  2673  00F2               	movwf	___xxtofl@val+1
 11744  2674  0D89               	rlf	9,f
 11745  2675  3B89               	subwfb	9,f
 11746  2676  0989               	comf	9,f
 11747  2677  00F3               	movwf	___xxtofl@val+2
 11748  2678  00F4               	movwf	___xxtofl@val+3
 11749  2679  3001               	movlw	1
 11750  267A  3198  2009  31A5   	fcall	___xxtofl
 11751  267D  0874               	movf	?___xxtofl+3,w
 11752  267E  0020               	movlb	0	; select bank0
 11753  267F  00E1               	movwf	___flge@ff2+3
 11754  2680  0873               	movf	?___xxtofl+2,w
 11755  2681  00E0               	movwf	___flge@ff2+2
 11756  2682  0872               	movf	?___xxtofl+1,w
 11757  2683  00DF               	movwf	___flge@ff2+1
 11758  2684  0871               	movf	?___xxtofl,w
 11759  2685  00DE               	movwf	___flge@ff2
 11760  2686  31A9  21AD  31A5   	fcall	___flge
 11761  2689  1C03               	btfss	3,0
 11762  268A  2E91               	goto	l8203
 11763                           
 11764                           ;BQ76920.c: 90:             protect1.bits.SCD_THRESH = i;
 11765  268B  0021               	movlb	1	; select bank1
 11766  268C  086F               	movf	_protect1^(0+128),w
 11767  268D  0628               	xorwf	setShortCircuitProtection@i^(0+128),w
 11768  268E  39F8               	andlw	-8
 11769  268F  0628               	xorwf	setShortCircuitProtection@i^(0+128),w
 11770  2690  00EF               	movwf	_protect1^(0+128)
 11771  2691                     l8203:	
 11772                           
 11773                           ;BQ76920.c: 92:     }
 11774  2691  3001               	movlw	1
 11775  2692  0021               	movlb	1	; select bank1
 11776  2693  07A8               	addwf	setShortCircuitProtection@i^(0+128),f
 11777  2694  3000               	movlw	0
 11778  2695  3DA9               	addwfc	(setShortCircuitProtection@i+1)^(0+128),f
 11779  2696  3000               	movlw	0
 11780  2697  0229               	subwf	(setShortCircuitProtection@i+1)^(0+128),w
 11781  2698  3007               	movlw	7
 11782  2699  1903               	skipnz
 11783  269A  0228               	subwf	setShortCircuitProtection@i^(0+128),w
 11784  269B  1C03               	skipc
 11785  269C  2DE7               	goto	l8197
 11786                           
 11787                           ;BQ76920.c: 94:     protect1.bits.SCD_DELAY = 0;
 11788  269D  30E7               	movlw	-25
 11789  269E  05EF               	andwf	_protect1^(0+128),f
 11790                           
 11791                           ;BQ76920.c: 95:     for (int i = 0; i < (sizeof(SCD_threshold_setting) / sizeof((SCD_thr
      +                          eshold_setting)[0])) - 1; i++) {
 11792  269F  01AA               	clrf	setShortCircuitProtection@i_966^(0+128)
 11793  26A0  01AB               	clrf	(setShortCircuitProtection@i_966+1)^(0+128)
 11794  26A1                     l8215:	
 11795                           
 11796                           ;BQ76920.c: 96:         if (delay_us >= SCD_delay_setting[i]) {
 11797  26A1  082B               	movf	(setShortCircuitProtection@i_966+1)^(0+128),w
 11798  26A2  0085               	movwf	5
 11799  26A3  082A               	movf	setShortCircuitProtection@i_966^(0+128),w
 11800  26A4  0084               	movwf	4
 11801  26A5  3584               	lslf	4,f
 11802  26A6  0D85               	rlf	5,f
 11803  26A7  3019               	movlw	low (_SCD_delay_setting| (0+32768))
 11804  26A8  0784               	addwf	4,f
 11805  26A9  30BA               	movlw	high (_SCD_delay_setting| (0+32768))
 11806  26AA  3D85               	addwfc	5,f
 11807  26AB  3F00               	moviw [0]fsr0
 11808  26AC  0020               	movlb	0	; select bank0
 11809  26AD  00EC               	movwf	??_setShortCircuitProtection
 11810  26AE  3F01               	moviw [1]fsr0
 11811  26AF  00ED               	movwf	??_setShortCircuitProtection+1
 11812  26B0  086B               	movf	setShortCircuitProtection@delay_us+1,w
 11813  26B1  3A80               	xorlw	128
 11814  26B2  00EE               	movwf	??_setShortCircuitProtection+2
 11815  26B3  086D               	movf	??_setShortCircuitProtection+1,w
 11816  26B4  3A80               	xorlw	128
 11817  26B5  026E               	subwf	??_setShortCircuitProtection+2,w
 11818  26B6  1D03               	skipz
 11819  26B7  2EBA               	goto	u11245
 11820  26B8  086C               	movf	??_setShortCircuitProtection,w
 11821  26B9  026A               	subwf	setShortCircuitProtection@delay_us,w
 11822  26BA                     u11245:	
 11823  26BA  1C03               	skipc
 11824  26BB  2ECB               	goto	l8219
 11825                           
 11826                           ;BQ76920.c: 97:             protect1.bits.SCD_DELAY = i;
 11827  26BC  0021               	movlb	1	; select bank1
 11828  26BD  082A               	movf	setShortCircuitProtection@i_966^(0+128),w
 11829  26BE  0020               	movlb	0	; select bank0
 11830  26BF  00EC               	movwf	??_setShortCircuitProtection
 11831  26C0  0DEC               	rlf	??_setShortCircuitProtection,f
 11832  26C1  0DEC               	rlf	??_setShortCircuitProtection,f
 11833  26C2  0DEC               	rlf	??_setShortCircuitProtection,f
 11834  26C3  0021               	movlb	1	; select bank1
 11835  26C4  086F               	movf	_protect1^(0+128),w
 11836  26C5  0020               	movlb	0	; select bank0
 11837  26C6  066C               	xorwf	??_setShortCircuitProtection,w
 11838  26C7  39E7               	andlw	-25
 11839  26C8  066C               	xorwf	??_setShortCircuitProtection,w
 11840  26C9  0021               	movlb	1	; select bank1
 11841  26CA  00EF               	movwf	_protect1^(0+128)
 11842  26CB                     l8219:	
 11843                           
 11844                           ;BQ76920.c: 99:     }
 11845  26CB  3001               	movlw	1
 11846  26CC  0021               	movlb	1	; select bank1
 11847  26CD  07AA               	addwf	setShortCircuitProtection@i_966^(0+128),f
 11848  26CE  3000               	movlw	0
 11849  26CF  3DAB               	addwfc	(setShortCircuitProtection@i_966+1)^(0+128),f
 11850  26D0  3000               	movlw	0
 11851  26D1  022B               	subwf	(setShortCircuitProtection@i_966+1)^(0+128),w
 11852  26D2  3007               	movlw	7
 11853  26D3  1903               	skipnz
 11854  26D4  022A               	subwf	setShortCircuitProtection@i_966^(0+128),w
 11855  26D5  1C03               	skipc
 11856  26D6  2EA1               	goto	l8215
 11857                           
 11858                           ;BQ76920.c: 100:     protect1.bits.RSNS = 0;
 11859  26D7  13EF               	bcf	_protect1^(0+128),7
 11860                           
 11861                           ;BQ76920.c: 102:     I2C_writeRegister(0x18, 0x06, protect1.regByte);
 11862  26D8  3018               	movlw	24
 11863  26D9  00F5               	movwf	I2C_writeRegister@slaveAddress
 11864  26DA  3000               	movlw	0
 11865  26DB  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 11866  26DC  3006               	movlw	6
 11867  26DD  00F7               	movwf	I2C_writeRegister@regAddress
 11868  26DE  3000               	movlw	0
 11869  26DF  00F8               	movwf	I2C_writeRegister@regAddress+1
 11870  26E0  086F               	movf	_protect1^(0+128),w
 11871  26E1  0020               	movlb	0	; select bank0
 11872  26E2  00EC               	movwf	??_setShortCircuitProtection
 11873  26E3  01ED               	clrf	??_setShortCircuitProtection+1
 11874  26E4  086C               	movf	??_setShortCircuitProtection,w
 11875  26E5  00F9               	movwf	I2C_writeRegister@data
 11876  26E6  086D               	movf	??_setShortCircuitProtection+1,w
 11877  26E7  00FA               	movwf	I2C_writeRegister@data+1
 11878  26E8  31B4  247A         	fcall	_I2C_writeRegister
 11879  26EA  0008               	return
 11880  26EB                     __end_of_setShortCircuitProtection:	
 11881                           
 11882                           	psect	text39
 11883  26EB                     __ptext39:	
 11884 ;; *************** function _setOverCurrentDischargeProtection *****************
 11885 ;; Defined at:
 11886 ;;		line 109 in file "BQ76920.c"
 11887 ;; Parameters:    Size  Location     Type
 11888 ;;  current_mA      4   70[BANK0 ] long 
 11889 ;;  delay_ms        2   74[BANK0 ] int 
 11890 ;; Auto vars:     Size  Location     Type
 11891 ;;  i               2   10[BANK1 ] int 
 11892 ;;  i               2    8[BANK1 ] int 
 11893 ;;  scaler          4    0[BANK1 ] float 
 11894 ;; Return value:  Size  Location     Type
 11895 ;;                  1    wreg      void 
 11896 ;; Registers used:
 11897 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11898 ;; Tracked objects:
 11899 ;;		On entry : 0/0
 11900 ;;		On exit  : 0/0
 11901 ;;		Unchanged: 0/0
 11902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11903 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11904 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11905 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11906 ;;      Totals:         0       9      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11907 ;;Total ram usage:       21 bytes
 11908 ;; Hardware stack levels used:    1
 11909 ;; Hardware stack levels required when called:    3
 11910 ;; This function calls:
 11911 ;;		_I2C_writeRegister
 11912 ;;		___fldiv
 11913 ;;		___flge
 11914 ;;		___flmul
 11915 ;;		___xxtofl
 11916 ;; This function is called by:
 11917 ;;		_init_AFE
 11918 ;; This function uses a non-reentrant model
 11919 ;;
 11920                           
 11921                           
 11922                           ;psect for function _setOverCurrentDischargeProtection
 11923  26EB                     _setOverCurrentDischargeProtection:	
 11924                           
 11925                           ;BQ76920.c: 112:     float scaler = 1000.0;
 11926                           
 11927                           ;incstack = 0
 11928                           ; Regs used in _setOverCurrentDischargeProtection: [wreg-fsr0h+status,2+status,0+pclath+
      +                          cstack]
 11929  26EB  3044               	movlw	68
 11930  26EC  0021               	movlb	1	; select bank1
 11931  26ED  00A3               	movwf	(setOverCurrentDischargeProtection@scaler+3)^(0+128)
 11932  26EE  307A               	movlw	122
 11933  26EF  00A2               	movwf	(setOverCurrentDischargeProtection@scaler+2)^(0+128)
 11934  26F0  3000               	movlw	0
 11935  26F1  00A1               	movwf	(setOverCurrentDischargeProtection@scaler+1)^(0+128)
 11936  26F2  3000               	movlw	0
 11937  26F3  00A0               	movwf	setOverCurrentDischargeProtection@scaler^(0+128)
 11938                           
 11939                           ;BQ76920.c: 113:     protect2.bits.OCD_THRESH = 0;
 11940  26F4  30F0               	movlw	-16
 11941  26F5  0023               	movlb	3	; select bank3
 11942  26F6  05DB               	andwf	_protect2^(0+384),f
 11943                           
 11944                           ;BQ76920.c: 114:     for (int i = 0; i < (sizeof(OCD_threshold_setting) / sizeof((OCD_th
      +                          reshold_setting)[0])) - 1; i++) {
 11945  26F7  0021               	movlb	1	; select bank1
 11946  26F8  01A8               	clrf	setOverCurrentDischargeProtection@i^(0+128)
 11947  26F9  01A9               	clrf	(setOverCurrentDischargeProtection@i+1)^(0+128)
 11948  26FA                     l8235:	
 11949                           
 11950                           ;BQ76920.c: 115:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) 
      +                          >= OCD_threshold_setting[i]) {
 11951  26FA  0023               	movlb	3	; select bank3
 11952  26FB  083B               	movf	(_shuntResistorValue_mOhm+3)^(0+384),w
 11953  26FC  0020               	movlb	0	; select bank0
 11954  26FD  00A9               	movwf	___flmul@b+3
 11955  26FE  0023               	movlb	3	; select bank3
 11956  26FF  083A               	movf	(_shuntResistorValue_mOhm+2)^(0+384),w
 11957  2700  0020               	movlb	0	; select bank0
 11958  2701  00A8               	movwf	___flmul@b+2
 11959  2702  0023               	movlb	3	; select bank3
 11960  2703  0839               	movf	(_shuntResistorValue_mOhm+1)^(0+384),w
 11961  2704  0020               	movlb	0	; select bank0
 11962  2705  00A7               	movwf	___flmul@b+1
 11963  2706  0023               	movlb	3	; select bank3
 11964  2707  0838               	movf	_shuntResistorValue_mOhm^(0+384),w
 11965  2708  0020               	movlb	0	; select bank0
 11966  2709  00A6               	movwf	___flmul@b
 11967  270A  0869               	movf	setOverCurrentDischargeProtection@current_mA+3,w
 11968  270B  00F4               	movwf	___xxtofl@val+3
 11969  270C  0868               	movf	setOverCurrentDischargeProtection@current_mA+2,w
 11970  270D  00F3               	movwf	___xxtofl@val+2
 11971  270E  0867               	movf	setOverCurrentDischargeProtection@current_mA+1,w
 11972  270F  00F2               	movwf	___xxtofl@val+1
 11973  2710  0866               	movf	setOverCurrentDischargeProtection@current_mA,w
 11974  2711  00F1               	movwf	___xxtofl@val
 11975  2712  3001               	movlw	1
 11976  2713  3198  2009  31A6   	fcall	___xxtofl
 11977  2716  0874               	movf	?___xxtofl+3,w
 11978  2717  0020               	movlb	0	; select bank0
 11979  2718  00AD               	movwf	___flmul@a+3
 11980  2719  0873               	movf	?___xxtofl+2,w
 11981  271A  00AC               	movwf	___flmul@a+2
 11982  271B  0872               	movf	?___xxtofl+1,w
 11983  271C  00AB               	movwf	___flmul@a+1
 11984  271D  0871               	movf	?___xxtofl,w
 11985  271E  00AA               	movwf	___flmul@a
 11986  271F  3190  2023  31A6   	fcall	___flmul
 11987  2722  0020               	movlb	0	; select bank0
 11988  2723  0829               	movf	?___flmul+3,w
 11989  2724  0021               	movlb	1	; select bank1
 11990  2725  00A7               	movwf	(_setOverCurrentDischargeProtection$2077+3)^(0+128)
 11991  2726  0020               	movlb	0	; select bank0
 11992  2727  0828               	movf	?___flmul+2,w
 11993  2728  0021               	movlb	1	; select bank1
 11994  2729  00A6               	movwf	(_setOverCurrentDischargeProtection$2077+2)^(0+128)
 11995  272A  0020               	movlb	0	; select bank0
 11996  272B  0827               	movf	?___flmul+1,w
 11997  272C  0021               	movlb	1	; select bank1
 11998  272D  00A5               	movwf	(_setOverCurrentDischargeProtection$2077+1)^(0+128)
 11999  272E  0020               	movlb	0	; select bank0
 12000  272F  0826               	movf	?___flmul,w
 12001  2730  0021               	movlb	1	; select bank1
 12002  2731  00A4               	movwf	_setOverCurrentDischargeProtection$2077^(0+128)
 12003                           
 12004                           ;BQ76920.c: 115:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) 
      +                          >= OCD_threshold_setting[i]) {
 12005  2732  3044               	movlw	68
 12006  2733  0020               	movlb	0	; select bank0
 12007  2734  00C3               	movwf	___fldiv@a+3
 12008  2735  307A               	movlw	122
 12009  2736  00C2               	movwf	___fldiv@a+2
 12010  2737  3000               	movlw	0
 12011  2738  00C1               	movwf	___fldiv@a+1
 12012  2739  3000               	movlw	0
 12013  273A  00C0               	movwf	___fldiv@a
 12014  273B  0021               	movlb	1	; select bank1
 12015  273C  0823               	movf	(setOverCurrentDischargeProtection@scaler+3)^(0+128),w
 12016  273D  0020               	movlb	0	; select bank0
 12017  273E  00A9               	movwf	___flmul@b+3
 12018  273F  0021               	movlb	1	; select bank1
 12019  2740  0822               	movf	(setOverCurrentDischargeProtection@scaler+2)^(0+128),w
 12020  2741  0020               	movlb	0	; select bank0
 12021  2742  00A8               	movwf	___flmul@b+2
 12022  2743  0021               	movlb	1	; select bank1
 12023  2744  0821               	movf	(setOverCurrentDischargeProtection@scaler+1)^(0+128),w
 12024  2745  0020               	movlb	0	; select bank0
 12025  2746  00A7               	movwf	___flmul@b+1
 12026  2747  0021               	movlb	1	; select bank1
 12027  2748  0820               	movf	setOverCurrentDischargeProtection@scaler^(0+128),w
 12028  2749  0020               	movlb	0	; select bank0
 12029  274A  00A6               	movwf	___flmul@b
 12030  274B  0021               	movlb	1	; select bank1
 12031  274C  0827               	movf	(_setOverCurrentDischargeProtection$2077+3)^(0+128),w
 12032  274D  0020               	movlb	0	; select bank0
 12033  274E  00AD               	movwf	___flmul@a+3
 12034  274F  0021               	movlb	1	; select bank1
 12035  2750  0826               	movf	(_setOverCurrentDischargeProtection$2077+2)^(0+128),w
 12036  2751  0020               	movlb	0	; select bank0
 12037  2752  00AC               	movwf	___flmul@a+2
 12038  2753  0021               	movlb	1	; select bank1
 12039  2754  0825               	movf	(_setOverCurrentDischargeProtection$2077+1)^(0+128),w
 12040  2755  0020               	movlb	0	; select bank0
 12041  2756  00AB               	movwf	___flmul@a+1
 12042  2757  0021               	movlb	1	; select bank1
 12043  2758  0824               	movf	_setOverCurrentDischargeProtection$2077^(0+128),w
 12044  2759  0020               	movlb	0	; select bank0
 12045  275A  00AA               	movwf	___flmul@a
 12046  275B  3190  2023  31A6   	fcall	___flmul
 12047  275E  0020               	movlb	0	; select bank0
 12048  275F  0829               	movf	?___flmul+3,w
 12049  2760  00C7               	movwf	___fldiv@b+3
 12050  2761  0828               	movf	?___flmul+2,w
 12051  2762  00C6               	movwf	___fldiv@b+2
 12052  2763  0827               	movf	?___flmul+1,w
 12053  2764  00C5               	movwf	___fldiv@b+1
 12054  2765  0826               	movf	?___flmul,w
 12055  2766  00C4               	movwf	___fldiv@b
 12056  2767  319B  234B  31A6   	fcall	___fldiv
 12057  276A  0020               	movlb	0	; select bank0
 12058  276B  0843               	movf	?___fldiv+3,w
 12059  276C  00DD               	movwf	___flge@ff1+3
 12060  276D  0842               	movf	?___fldiv+2,w
 12061  276E  00DC               	movwf	___flge@ff1+2
 12062  276F  0841               	movf	?___fldiv+1,w
 12063  2770  00DB               	movwf	___flge@ff1+1
 12064  2771  0840               	movf	?___fldiv,w
 12065  2772  00DA               	movwf	___flge@ff1
 12066  2773  0021               	movlb	1	; select bank1
 12067  2774  0829               	movf	(setOverCurrentDischargeProtection@i+1)^(0+128),w
 12068  2775  0085               	movwf	5
 12069  2776  0828               	movf	setOverCurrentDischargeProtection@i^(0+128),w
 12070  2777  0084               	movwf	4
 12071  2778  3584               	lslf	4,f
 12072  2779  0D85               	rlf	5,f
 12073  277A  3097               	movlw	low (_OCD_threshold_setting| (0+32768))
 12074  277B  0784               	addwf	4,f
 12075  277C  30B8               	movlw	high (_OCD_threshold_setting| (0+32768))
 12076  277D  3D85               	addwfc	5,f
 12077  277E  3F00               	moviw [0]fsr0
 12078  277F  0020               	movlb	0	; select bank0
 12079  2780  00EC               	movwf	??_setOverCurrentDischargeProtection
 12080  2781  3F01               	moviw [1]fsr0
 12081  2782  00ED               	movwf	??_setOverCurrentDischargeProtection+1
 12082  2783  086C               	movf	??_setOverCurrentDischargeProtection,w
 12083  2784  00F1               	movwf	___xxtofl@val
 12084  2785  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 12085  2786  00F2               	movwf	___xxtofl@val+1
 12086  2787  0D89               	rlf	9,f
 12087  2788  3B89               	subwfb	9,f
 12088  2789  0989               	comf	9,f
 12089  278A  00F3               	movwf	___xxtofl@val+2
 12090  278B  00F4               	movwf	___xxtofl@val+3
 12091  278C  3001               	movlw	1
 12092  278D  3198  2009  31A6   	fcall	___xxtofl
 12093  2790  0874               	movf	?___xxtofl+3,w
 12094  2791  0020               	movlb	0	; select bank0
 12095  2792  00E1               	movwf	___flge@ff2+3
 12096  2793  0873               	movf	?___xxtofl+2,w
 12097  2794  00E0               	movwf	___flge@ff2+2
 12098  2795  0872               	movf	?___xxtofl+1,w
 12099  2796  00DF               	movwf	___flge@ff2+1
 12100  2797  0871               	movf	?___xxtofl,w
 12101  2798  00DE               	movwf	___flge@ff2
 12102  2799  31A9  21AD  31A6   	fcall	___flge
 12103  279C  1C03               	btfss	3,0
 12104  279D  2FA6               	goto	l8241
 12105                           
 12106                           ;BQ76920.c: 116:             protect2.bits.OCD_THRESH = i;
 12107  279E  0023               	movlb	3	; select bank3
 12108  279F  085B               	movf	_protect2^(0+384),w
 12109  27A0  0021               	movlb	1	; select bank1
 12110  27A1  0628               	xorwf	setOverCurrentDischargeProtection@i^(0+128),w
 12111  27A2  39F0               	andlw	-16
 12112  27A3  0628               	xorwf	setOverCurrentDischargeProtection@i^(0+128),w
 12113  27A4  0023               	movlb	3	; select bank3
 12114  27A5  00DB               	movwf	_protect2^(0+384)
 12115  27A6                     l8241:	
 12116                           
 12117                           ;BQ76920.c: 118:     }
 12118  27A6  3001               	movlw	1
 12119  27A7  0021               	movlb	1	; select bank1
 12120  27A8  07A8               	addwf	setOverCurrentDischargeProtection@i^(0+128),f
 12121  27A9  3000               	movlw	0
 12122  27AA  3DA9               	addwfc	(setOverCurrentDischargeProtection@i+1)^(0+128),f
 12123  27AB  3000               	movlw	0
 12124  27AC  0229               	subwf	(setOverCurrentDischargeProtection@i+1)^(0+128),w
 12125  27AD  300F               	movlw	15
 12126  27AE  1903               	skipnz
 12127  27AF  0228               	subwf	setOverCurrentDischargeProtection@i^(0+128),w
 12128  27B0  1C03               	skipc
 12129  27B1  2EFA               	goto	l8235
 12130                           
 12131                           ;BQ76920.c: 120:     protect2.bits.OCD_DELAY = 0;
 12132  27B2  308F               	movlw	-113
 12133  27B3  0023               	movlb	3	; select bank3
 12134  27B4  05DB               	andwf	_protect2^(0+384),f
 12135                           
 12136                           ;BQ76920.c: 121:     for (int i = 0; i < (sizeof(OCD_delay_setting) / sizeof((OCD_delay_
      +                          setting)[0])) - 1; i++) {
 12137  27B5  0021               	movlb	1	; select bank1
 12138  27B6  01AA               	clrf	setOverCurrentDischargeProtection@i_975^(0+128)
 12139  27B7  01AB               	clrf	(setOverCurrentDischargeProtection@i_975+1)^(0+128)
 12140  27B8                     l8253:	
 12141                           
 12142                           ;BQ76920.c: 122:         if (delay_ms >= OCD_delay_setting[i]) {
 12143  27B8  082B               	movf	(setOverCurrentDischargeProtection@i_975+1)^(0+128),w
 12144  27B9  0085               	movwf	5
 12145  27BA  082A               	movf	setOverCurrentDischargeProtection@i_975^(0+128),w
 12146  27BB  0084               	movwf	4
 12147  27BC  3584               	lslf	4,f
 12148  27BD  0D85               	rlf	5,f
 12149  27BE  30CB               	movlw	low (_OCD_delay_setting| (0+32768))
 12150  27BF  0784               	addwf	4,f
 12151  27C0  30B9               	movlw	high (_OCD_delay_setting| (0+32768))
 12152  27C1  3D85               	addwfc	5,f
 12153  27C2  3F00               	moviw [0]fsr0
 12154  27C3  0020               	movlb	0	; select bank0
 12155  27C4  00EC               	movwf	??_setOverCurrentDischargeProtection
 12156  27C5  3F01               	moviw [1]fsr0
 12157  27C6  00ED               	movwf	??_setOverCurrentDischargeProtection+1
 12158  27C7  086B               	movf	setOverCurrentDischargeProtection@delay_ms+1,w
 12159  27C8  3A80               	xorlw	128
 12160  27C9  00EE               	movwf	??_setOverCurrentDischargeProtection+2
 12161  27CA  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 12162  27CB  3A80               	xorlw	128
 12163  27CC  026E               	subwf	??_setOverCurrentDischargeProtection+2,w
 12164  27CD  1D03               	skipz
 12165  27CE  2FD1               	goto	u11285
 12166  27CF  086C               	movf	??_setOverCurrentDischargeProtection,w
 12167  27D0  026A               	subwf	setOverCurrentDischargeProtection@delay_ms,w
 12168  27D1                     u11285:	
 12169  27D1  1C03               	skipc
 12170  27D2  2FE0               	goto	l8257
 12171                           
 12172                           ;BQ76920.c: 123:             protect2.bits.OCD_DELAY = i;
 12173  27D3  0021               	movlb	1	; select bank1
 12174  27D4  082A               	movf	setOverCurrentDischargeProtection@i_975^(0+128),w
 12175  27D5  0020               	movlb	0	; select bank0
 12176  27D6  00EC               	movwf	??_setOverCurrentDischargeProtection
 12177  27D7  0EEC               	swapf	??_setOverCurrentDischargeProtection,f
 12178  27D8  0023               	movlb	3	; select bank3
 12179  27D9  085B               	movf	_protect2^(0+384),w
 12180  27DA  0020               	movlb	0	; select bank0
 12181  27DB  066C               	xorwf	??_setOverCurrentDischargeProtection,w
 12182  27DC  398F               	andlw	-113
 12183  27DD  066C               	xorwf	??_setOverCurrentDischargeProtection,w
 12184  27DE  0023               	movlb	3	; select bank3
 12185  27DF  00DB               	movwf	_protect2^(0+384)
 12186  27E0                     l8257:	
 12187                           
 12188                           ;BQ76920.c: 125:     }
 12189  27E0  3001               	movlw	1
 12190  27E1  0021               	movlb	1	; select bank1
 12191  27E2  07AA               	addwf	setOverCurrentDischargeProtection@i_975^(0+128),f
 12192  27E3  3000               	movlw	0
 12193  27E4  3DAB               	addwfc	(setOverCurrentDischargeProtection@i_975+1)^(0+128),f
 12194  27E5  3000               	movlw	0
 12195  27E6  022B               	subwf	(setOverCurrentDischargeProtection@i_975+1)^(0+128),w
 12196  27E7  3007               	movlw	7
 12197  27E8  1903               	skipnz
 12198  27E9  022A               	subwf	setOverCurrentDischargeProtection@i_975^(0+128),w
 12199  27EA  1C03               	skipc
 12200  27EB  2FB8               	goto	l8253
 12201                           
 12202                           ;BQ76920.c: 127:     I2C_writeRegister(0x18, 0x07, protect2.regByte);
 12203  27EC  3018               	movlw	24
 12204  27ED  00F5               	movwf	I2C_writeRegister@slaveAddress
 12205  27EE  3000               	movlw	0
 12206  27EF  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12207  27F0  3007               	movlw	7
 12208  27F1  00F7               	movwf	I2C_writeRegister@regAddress
 12209  27F2  3000               	movlw	0
 12210  27F3  00F8               	movwf	I2C_writeRegister@regAddress+1
 12211  27F4  0023               	movlb	3	; select bank3
 12212  27F5  085B               	movf	_protect2^(0+384),w
 12213  27F6  0020               	movlb	0	; select bank0
 12214  27F7  00EC               	movwf	??_setOverCurrentDischargeProtection
 12215  27F8  01ED               	clrf	??_setOverCurrentDischargeProtection+1
 12216  27F9  086C               	movf	??_setOverCurrentDischargeProtection,w
 12217  27FA  00F9               	movwf	I2C_writeRegister@data
 12218  27FB  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 12219  27FC  00FA               	movwf	I2C_writeRegister@data+1
 12220  27FD  31B4  247A         	fcall	_I2C_writeRegister
 12221  27FF  0008               	return
 12222  2800                     __end_of_setOverCurrentDischargeProtection:	
 12223                           
 12224                           	psect	text40
 12225  29AD                     __ptext40:	
 12226 ;; *************** function ___flge *****************
 12227 ;; Defined at:
 12228 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
 12229 ;; Parameters:    Size  Location     Type
 12230 ;;  ff1             4   58[BANK0 ] void 
 12231 ;;  ff2             4   62[BANK0 ] void 
 12232 ;; Auto vars:     Size  Location     Type
 12233 ;;		None
 12234 ;; Return value:  Size  Location     Type
 12235 ;;		None               void
 12236 ;; Registers used:
 12237 ;;		wreg, status,2, status,0
 12238 ;; Tracked objects:
 12239 ;;		On entry : 0/0
 12240 ;;		On exit  : 0/0
 12241 ;;		Unchanged: 0/0
 12242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12243 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12245 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12246 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12247 ;;Total ram usage:       12 bytes
 12248 ;; Hardware stack levels used:    1
 12249 ;; Hardware stack levels required when called:    1
 12250 ;; This function calls:
 12251 ;;		Nothing
 12252 ;; This function is called by:
 12253 ;;		_setShortCircuitProtection
 12254 ;;		_setOverCurrentDischargeProtection
 12255 ;; This function uses a non-reentrant model
 12256 ;;
 12257                           
 12258                           
 12259                           ;psect for function ___flge
 12260  29AD                     ___flge:	
 12261                           
 12262                           ;incstack = 0
 12263                           ; Regs used in ___flge: [wreg+status,2+status,0]
 12264  29AD  3000               	movlw	0
 12265  29AE  0020               	movlb	0	; select bank0
 12266  29AF  055A               	andwf	___flge@ff1,w
 12267  29B0  00E2               	movwf	??___flge
 12268  29B1  3000               	movlw	0
 12269  29B2  055B               	andwf	___flge@ff1+1,w
 12270  29B3  00E3               	movwf	??___flge+1
 12271  29B4  3080               	movlw	128
 12272  29B5  055C               	andwf	___flge@ff1+2,w
 12273  29B6  00E4               	movwf	??___flge+2
 12274  29B7  307F               	movlw	127
 12275  29B8  055D               	andwf	___flge@ff1+3,w
 12276  29B9  00E5               	movwf	??___flge+3
 12277  29BA  0865               	movf	??___flge+3,w
 12278  29BB  0464               	iorwf	??___flge+2,w
 12279  29BC  0463               	iorwf	??___flge+1,w
 12280  29BD  0462               	iorwf	??___flge,w
 12281  29BE  1D03               	skipz
 12282  29BF  29C8               	goto	l1104
 12283  29C0  3000               	movlw	0
 12284  29C1  00DD               	movwf	___flge@ff1+3
 12285  29C2  3000               	movlw	0
 12286  29C3  00DC               	movwf	___flge@ff1+2
 12287  29C4  3000               	movlw	0
 12288  29C5  00DB               	movwf	___flge@ff1+1
 12289  29C6  3000               	movlw	0
 12290  29C7  00DA               	movwf	___flge@ff1
 12291  29C8                     l1104:	
 12292  29C8  3000               	movlw	0
 12293  29C9  055E               	andwf	___flge@ff2,w
 12294  29CA  00E2               	movwf	??___flge
 12295  29CB  3000               	movlw	0
 12296  29CC  055F               	andwf	___flge@ff2+1,w
 12297  29CD  00E3               	movwf	??___flge+1
 12298  29CE  3080               	movlw	128
 12299  29CF  0560               	andwf	___flge@ff2+2,w
 12300  29D0  00E4               	movwf	??___flge+2
 12301  29D1  307F               	movlw	127
 12302  29D2  0561               	andwf	___flge@ff2+3,w
 12303  29D3  00E5               	movwf	??___flge+3
 12304  29D4  0865               	movf	??___flge+3,w
 12305  29D5  0464               	iorwf	??___flge+2,w
 12306  29D6  0463               	iorwf	??___flge+1,w
 12307  29D7  0462               	iorwf	??___flge,w
 12308  29D8  1D03               	skipz
 12309  29D9  29E2               	goto	l8069
 12310  29DA  3000               	movlw	0
 12311  29DB  00E1               	movwf	___flge@ff2+3
 12312  29DC  3000               	movlw	0
 12313  29DD  00E0               	movwf	___flge@ff2+2
 12314  29DE  3000               	movlw	0
 12315  29DF  00DF               	movwf	___flge@ff2+1
 12316  29E0  3000               	movlw	0
 12317  29E1  00DE               	movwf	___flge@ff2
 12318  29E2                     l8069:	
 12319  29E2  1FDD               	btfss	___flge@ff1+3,7
 12320  29E3  29FC               	goto	l8073
 12321  29E4  3000               	movlw	0
 12322  29E5  00E2               	movwf	??___flge
 12323  29E6  3000               	movlw	0
 12324  29E7  00E3               	movwf	??___flge+1
 12325  29E8  3000               	movlw	0
 12326  29E9  00E4               	movwf	??___flge+2
 12327  29EA  3080               	movlw	128
 12328  29EB  00E5               	movwf	??___flge+3
 12329  29EC  085A               	movf	___flge@ff1,w
 12330  29ED  02E2               	subwf	??___flge,f
 12331  29EE  085B               	movf	___flge@ff1+1,w
 12332  29EF  3BE3               	subwfb	??___flge+1,f
 12333  29F0  085C               	movf	___flge@ff1+2,w
 12334  29F1  3BE4               	subwfb	??___flge+2,f
 12335  29F2  085D               	movf	___flge@ff1+3,w
 12336  29F3  3BE5               	subwfb	??___flge+3,f
 12337  29F4  0865               	movf	??___flge+3,w
 12338  29F5  00DD               	movwf	___flge@ff1+3
 12339  29F6  0864               	movf	??___flge+2,w
 12340  29F7  00DC               	movwf	___flge@ff1+2
 12341  29F8  0863               	movf	??___flge+1,w
 12342  29F9  00DB               	movwf	___flge@ff1+1
 12343  29FA  0862               	movf	??___flge,w
 12344  29FB  00DA               	movwf	___flge@ff1
 12345  29FC                     l8073:	
 12346  29FC  1FE1               	btfss	___flge@ff2+3,7
 12347  29FD  2A16               	goto	l1107
 12348  29FE  3000               	movlw	0
 12349  29FF  00E2               	movwf	??___flge
 12350  2A00  3000               	movlw	0
 12351  2A01  00E3               	movwf	??___flge+1
 12352  2A02  3000               	movlw	0
 12353  2A03  00E4               	movwf	??___flge+2
 12354  2A04  3080               	movlw	128
 12355  2A05  00E5               	movwf	??___flge+3
 12356  2A06  085E               	movf	___flge@ff2,w
 12357  2A07  02E2               	subwf	??___flge,f
 12358  2A08  085F               	movf	___flge@ff2+1,w
 12359  2A09  3BE3               	subwfb	??___flge+1,f
 12360  2A0A  0860               	movf	___flge@ff2+2,w
 12361  2A0B  3BE4               	subwfb	??___flge+2,f
 12362  2A0C  0861               	movf	___flge@ff2+3,w
 12363  2A0D  3BE5               	subwfb	??___flge+3,f
 12364  2A0E  0865               	movf	??___flge+3,w
 12365  2A0F  00E1               	movwf	___flge@ff2+3
 12366  2A10  0864               	movf	??___flge+2,w
 12367  2A11  00E0               	movwf	___flge@ff2+2
 12368  2A12  0863               	movf	??___flge+1,w
 12369  2A13  00DF               	movwf	___flge@ff2+1
 12370  2A14  0862               	movf	??___flge,w
 12371  2A15  00DE               	movwf	___flge@ff2
 12372  2A16                     l1107:	
 12373  2A16  3080               	movlw	128
 12374  2A17  06DD               	xorwf	___flge@ff1+3,f
 12375  2A18  3080               	movlw	128
 12376  2A19  06E1               	xorwf	___flge@ff2+3,f
 12377  2A1A  0861               	movf	___flge@ff2+3,w
 12378  2A1B  025D               	subwf	___flge@ff1+3,w
 12379  2A1C  1D03               	skipz
 12380  2A1D  0008               	return
 12381  2A1E  0860               	movf	___flge@ff2+2,w
 12382  2A1F  025C               	subwf	___flge@ff1+2,w
 12383  2A20  1D03               	skipz
 12384  2A21  0008               	return
 12385  2A22  085F               	movf	___flge@ff2+1,w
 12386  2A23  025B               	subwf	___flge@ff1+1,w
 12387  2A24  1D03               	skipz
 12388  2A25  0008               	return
 12389  2A26  085E               	movf	___flge@ff2,w
 12390  2A27  025A               	subwf	___flge@ff1,w
 12391  2A28  0008               	return
 12392  2A29                     __end_of___flge:	
 12393                           
 12394                           	psect	text41
 12395  2063                     __ptext41:	
 12396 ;; *************** function _setCellUndervoltageProtection *****************
 12397 ;; Defined at:
 12398 ;;		line 133 in file "BQ76920.c"
 12399 ;; Parameters:    Size  Location     Type
 12400 ;;  voltage_mV      2   18[BANK0 ] int 
 12401 ;;  delay_s         2   20[BANK0 ] int 
 12402 ;; Auto vars:     Size  Location     Type
 12403 ;;  i               2   37[BANK0 ] int 
 12404 ;;  uv_trip         1   36[BANK0 ] unsigned char 
 12405 ;; Return value:  Size  Location     Type
 12406 ;;                  1    wreg      void 
 12407 ;; Registers used:
 12408 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12409 ;; Tracked objects:
 12410 ;;		On entry : 0/0
 12411 ;;		On exit  : 0/0
 12412 ;;		Unchanged: 0/0
 12413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12414 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12415 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12416 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12417 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12418 ;;Total ram usage:       21 bytes
 12419 ;; Hardware stack levels used:    1
 12420 ;; Hardware stack levels required when called:    3
 12421 ;; This function calls:
 12422 ;;		_I2C_writeRegister
 12423 ;;		___aldiv
 12424 ;;		___lmul
 12425 ;;		_readRegister
 12426 ;; This function is called by:
 12427 ;;		_init_AFE
 12428 ;; This function uses a non-reentrant model
 12429 ;;
 12430                           
 12431                           
 12432                           ;psect for function _setCellUndervoltageProtection
 12433  2063                     _setCellUndervoltageProtection:	
 12434                           
 12435                           ;BQ76920.c: 135:     minCellVoltage = voltage_mV;
 12436                           
 12437                           ;incstack = 0
 12438                           ; Regs used in _setCellUndervoltageProtection: [wreg-fsr0h+status,2+status,0+pclath+csta
      +                          ck]
 12439  2063  0020               	movlb	0	; select bank0
 12440  2064  0833               	movf	setCellUndervoltageProtection@voltage_mV+1,w
 12441  2065  0023               	movlb	3	; select bank3
 12442  2066  00CD               	movwf	(_minCellVoltage+1)^(0+384)
 12443  2067  0020               	movlb	0	; select bank0
 12444  2068  0832               	movf	setCellUndervoltageProtection@voltage_mV,w
 12445  2069  0023               	movlb	3	; select bank3
 12446  206A  00CC               	movwf	_minCellVoltage^(0+384)
 12447                           
 12448                           ;BQ76920.c: 137:     protect3.regByte = readRegister(0x18, 0x08);
 12449  206B  3018               	movlw	24
 12450  206C  00F5               	movwf	readRegister@slaveAddress
 12451  206D  3000               	movlw	0
 12452  206E  00F6               	movwf	readRegister@slaveAddress+1
 12453  206F  3008               	movlw	8
 12454  2070  00F7               	movwf	readRegister@regAddress
 12455  2071  3000               	movlw	0
 12456  2072  00F8               	movwf	readRegister@regAddress+1
 12457  2073  31B6  2621  31A0   	fcall	_readRegister
 12458  2076  0875               	movf	?_readRegister,w
 12459  2077  0020               	movlb	0	; select bank0
 12460  2078  00B6               	movwf	??_setCellUndervoltageProtection
 12461  2079  0836               	movf	??_setCellUndervoltageProtection,w
 12462  207A  0023               	movlb	3	; select bank3
 12463  207B  00DA               	movwf	_protect3^(0+384)
 12464                           
 12465                           ;BQ76920.c: 138:     uv_trip = ((((long) voltage_mV - adcOffset) * 1000 / adcGain) >> 4)
      +                           & 0x00FF;
 12466  207C  0022               	movlb	2	; select bank2
 12467  207D  086D               	movf	_adcGain^(0+256),w
 12468  207E  0020               	movlb	0	; select bank0
 12469  207F  00A4               	movwf	___aldiv@divisor
 12470  2080  0022               	movlb	2	; select bank2
 12471  2081  086E               	movf	(_adcGain+1)^(0+256),w
 12472  2082  0020               	movlb	0	; select bank0
 12473  2083  00A5               	movwf	___aldiv@divisor+1
 12474  2084  0D89               	rlf	9,f
 12475  2085  3B89               	subwfb	9,f
 12476  2086  0989               	comf	9,f
 12477  2087  00A6               	movwf	___aldiv@divisor+2
 12478  2088  00A7               	movwf	___aldiv@divisor+3
 12479  2089  0022               	movlb	2	; select bank2
 12480  208A  086B               	movf	_adcOffset^(0+256),w
 12481  208B  0020               	movlb	0	; select bank0
 12482  208C  00B6               	movwf	??_setCellUndervoltageProtection
 12483  208D  0022               	movlb	2	; select bank2
 12484  208E  086C               	movf	(_adcOffset+1)^(0+256),w
 12485  208F  0020               	movlb	0	; select bank0
 12486  2090  00B7               	movwf	??_setCellUndervoltageProtection+1
 12487  2091  3000               	movlw	0
 12488  2092  1BB7               	btfsc	??_setCellUndervoltageProtection+1,7
 12489  2093  30FF               	movlw	255
 12490  2094  00B8               	movwf	??_setCellUndervoltageProtection+2
 12491  2095  00B9               	movwf	??_setCellUndervoltageProtection+3
 12492  2096  0832               	movf	setCellUndervoltageProtection@voltage_mV,w
 12493  2097  00BA               	movwf	??_setCellUndervoltageProtection+4
 12494  2098  0833               	movf	setCellUndervoltageProtection@voltage_mV+1,w
 12495  2099  00BB               	movwf	??_setCellUndervoltageProtection+5
 12496  209A  3000               	movlw	0
 12497  209B  1BBB               	btfsc	??_setCellUndervoltageProtection+5,7
 12498  209C  30FF               	movlw	255
 12499  209D  00BC               	movwf	??_setCellUndervoltageProtection+6
 12500  209E  00BD               	movwf	??_setCellUndervoltageProtection+7
 12501  209F  0836               	movf	??_setCellUndervoltageProtection,w
 12502  20A0  02BA               	subwf	??_setCellUndervoltageProtection+4,f
 12503  20A1  0837               	movf	??_setCellUndervoltageProtection+1,w
 12504  20A2  3BBB               	subwfb	??_setCellUndervoltageProtection+5,f
 12505  20A3  0838               	movf	??_setCellUndervoltageProtection+2,w
 12506  20A4  3BBC               	subwfb	??_setCellUndervoltageProtection+6,f
 12507  20A5  0839               	movf	??_setCellUndervoltageProtection+3,w
 12508  20A6  3BBD               	subwfb	??_setCellUndervoltageProtection+7,f
 12509  20A7  083D               	movf	??_setCellUndervoltageProtection+7,w
 12510  20A8  00F4               	movwf	___lmul@multiplier+3
 12511  20A9  083C               	movf	??_setCellUndervoltageProtection+6,w
 12512  20AA  00F3               	movwf	___lmul@multiplier+2
 12513  20AB  083B               	movf	??_setCellUndervoltageProtection+5,w
 12514  20AC  00F2               	movwf	___lmul@multiplier+1
 12515  20AD  083A               	movf	??_setCellUndervoltageProtection+4,w
 12516  20AE  00F1               	movwf	___lmul@multiplier
 12517  20AF  3000               	movlw	0
 12518  20B0  00F8               	movwf	___lmul@multiplicand+3
 12519  20B1  3000               	movlw	0
 12520  20B2  00F7               	movwf	___lmul@multiplicand+2
 12521  20B3  3003               	movlw	3
 12522  20B4  00F6               	movwf	___lmul@multiplicand+1
 12523  20B5  30E8               	movlw	232
 12524  20B6  00F5               	movwf	___lmul@multiplicand
 12525  20B7  31B5  2588  31A0   	fcall	___lmul
 12526  20BA  0874               	movf	?___lmul+3,w
 12527  20BB  0020               	movlb	0	; select bank0
 12528  20BC  00AB               	movwf	___aldiv@dividend+3
 12529  20BD  0873               	movf	?___lmul+2,w
 12530  20BE  00AA               	movwf	___aldiv@dividend+2
 12531  20BF  0872               	movf	?___lmul+1,w
 12532  20C0  00A9               	movwf	___aldiv@dividend+1
 12533  20C1  0871               	movf	?___lmul,w
 12534  20C2  00A8               	movwf	___aldiv@dividend
 12535  20C3  31AB  2322  31A0   	fcall	___aldiv
 12536  20C6  0020               	movlb	0	; select bank0
 12537  20C7  0824               	movf	?___aldiv,w
 12538  20C8  00BE               	movwf	??_setCellUndervoltageProtection+8
 12539  20C9  0825               	movf	?___aldiv+1,w
 12540  20CA  00BF               	movwf	??_setCellUndervoltageProtection+9
 12541  20CB  0826               	movf	?___aldiv+2,w
 12542  20CC  00C0               	movwf	??_setCellUndervoltageProtection+10
 12543  20CD  0827               	movf	?___aldiv+3,w
 12544  20CE  00C1               	movwf	??_setCellUndervoltageProtection+11
 12545  20CF  3004               	movlw	4
 12546  20D0  00C2               	movwf	??_setCellUndervoltageProtection+12
 12547  20D1                     u11305:	
 12548  20D1  37C1               	asrf	??_setCellUndervoltageProtection+11,f
 12549  20D2  0CC0               	rrf	??_setCellUndervoltageProtection+10,f
 12550  20D3  0CBF               	rrf	??_setCellUndervoltageProtection+9,f
 12551  20D4  0CBE               	rrf	??_setCellUndervoltageProtection+8,f
 12552  20D5  0BC2               	decfsz	??_setCellUndervoltageProtection+12,f
 12553  20D6  28D1               	goto	u11305
 12554  20D7  083E               	movf	??_setCellUndervoltageProtection+8,w
 12555  20D8  00C3               	movwf	??_setCellUndervoltageProtection+13
 12556  20D9  0843               	movf	??_setCellUndervoltageProtection+13,w
 12557  20DA  00C4               	movwf	setCellUndervoltageProtection@uv_trip
 12558                           
 12559                           ;BQ76920.c: 139:     uv_trip += 1;
 12560  20DB  3001               	movlw	1
 12561  20DC  00B6               	movwf	??_setCellUndervoltageProtection
 12562  20DD  0836               	movf	??_setCellUndervoltageProtection,w
 12563  20DE  07C4               	addwf	setCellUndervoltageProtection@uv_trip,f
 12564                           
 12565                           ;BQ76920.c: 140:     I2C_writeRegister(0x18, 0x0A, uv_trip);
 12566  20DF  3018               	movlw	24
 12567  20E0  00F5               	movwf	I2C_writeRegister@slaveAddress
 12568  20E1  3000               	movlw	0
 12569  20E2  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12570  20E3  300A               	movlw	10
 12571  20E4  00F7               	movwf	I2C_writeRegister@regAddress
 12572  20E5  3000               	movlw	0
 12573  20E6  00F8               	movwf	I2C_writeRegister@regAddress+1
 12574  20E7  0844               	movf	setCellUndervoltageProtection@uv_trip,w
 12575  20E8  00B6               	movwf	??_setCellUndervoltageProtection
 12576  20E9  01B7               	clrf	??_setCellUndervoltageProtection+1
 12577  20EA  0836               	movf	??_setCellUndervoltageProtection,w
 12578  20EB  00F9               	movwf	I2C_writeRegister@data
 12579  20EC  0837               	movf	??_setCellUndervoltageProtection+1,w
 12580  20ED  00FA               	movwf	I2C_writeRegister@data+1
 12581  20EE  31B4  247A  31A0   	fcall	_I2C_writeRegister
 12582                           
 12583                           ;BQ76920.c: 142:     protect3.bits.UV_DELAY = 0;
 12584  20F1  303F               	movlw	-193
 12585  20F2  0023               	movlb	3	; select bank3
 12586  20F3  05DA               	andwf	_protect3^(0+384),f
 12587                           
 12588                           ;BQ76920.c: 143:     for (int i = 0; i < (sizeof(UV_delay_setting) / sizeof((UV_delay_se
      +                          tting)[0])) - 1; i++) {
 12589  20F4  0020               	movlb	0	; select bank0
 12590  20F5  01C5               	clrf	setCellUndervoltageProtection@i
 12591  20F6  01C6               	clrf	setCellUndervoltageProtection@i+1
 12592  20F7                     l8283:	
 12593                           
 12594                           ;BQ76920.c: 144:         if (delay_s >= UV_delay_setting[i]) {
 12595  20F7  0846               	movf	setCellUndervoltageProtection@i+1,w
 12596  20F8  0085               	movwf	5
 12597  20F9  0845               	movf	setCellUndervoltageProtection@i,w
 12598  20FA  0084               	movwf	4
 12599  20FB  3584               	lslf	4,f
 12600  20FC  0D85               	rlf	5,f
 12601  20FD  3011               	movlw	low (_UV_delay_setting| (0+32768))
 12602  20FE  0784               	addwf	4,f
 12603  20FF  30BA               	movlw	high (_UV_delay_setting| (0+32768))
 12604  2100  3D85               	addwfc	5,f
 12605  2101  3F00               	moviw [0]fsr0
 12606  2102  00B6               	movwf	??_setCellUndervoltageProtection
 12607  2103  3F01               	moviw [1]fsr0
 12608  2104  00B7               	movwf	??_setCellUndervoltageProtection+1
 12609  2105  0835               	movf	setCellUndervoltageProtection@delay_s+1,w
 12610  2106  3A80               	xorlw	128
 12611  2107  00B8               	movwf	??_setCellUndervoltageProtection+2
 12612  2108  0837               	movf	??_setCellUndervoltageProtection+1,w
 12613  2109  3A80               	xorlw	128
 12614  210A  0238               	subwf	??_setCellUndervoltageProtection+2,w
 12615  210B  1D03               	skipz
 12616  210C  290F               	goto	u11315
 12617  210D  0836               	movf	??_setCellUndervoltageProtection,w
 12618  210E  0234               	subwf	setCellUndervoltageProtection@delay_s,w
 12619  210F                     u11315:	
 12620  210F  1C03               	skipc
 12621  2110  291F               	goto	l8287
 12622                           
 12623                           ;BQ76920.c: 145:             protect3.bits.UV_DELAY = i;
 12624  2111  0020               	movlb	0	; select bank0
 12625  2112  0845               	movf	setCellUndervoltageProtection@i,w
 12626  2113  00B6               	movwf	??_setCellUndervoltageProtection
 12627  2114  0EB6               	swapf	??_setCellUndervoltageProtection,f
 12628  2115  0DB6               	rlf	??_setCellUndervoltageProtection,f
 12629  2116  0DB6               	rlf	??_setCellUndervoltageProtection,f
 12630  2117  0023               	movlb	3	; select bank3
 12631  2118  085A               	movf	_protect3^(0+384),w
 12632  2119  0020               	movlb	0	; select bank0
 12633  211A  0636               	xorwf	??_setCellUndervoltageProtection,w
 12634  211B  393F               	andlw	-193
 12635  211C  0636               	xorwf	??_setCellUndervoltageProtection,w
 12636  211D  0023               	movlb	3	; select bank3
 12637  211E  00DA               	movwf	_protect3^(0+384)
 12638  211F                     l8287:	
 12639                           
 12640                           ;BQ76920.c: 147:     }
 12641  211F  3001               	movlw	1
 12642  2120  0020               	movlb	0	; select bank0
 12643  2121  07C5               	addwf	setCellUndervoltageProtection@i,f
 12644  2122  3000               	movlw	0
 12645  2123  3DC6               	addwfc	setCellUndervoltageProtection@i+1,f
 12646  2124  3000               	movlw	0
 12647  2125  0246               	subwf	setCellUndervoltageProtection@i+1,w
 12648  2126  3003               	movlw	3
 12649  2127  1903               	skipnz
 12650  2128  0245               	subwf	setCellUndervoltageProtection@i,w
 12651  2129  1C03               	skipc
 12652  212A  28F7               	goto	l8283
 12653                           
 12654                           ;BQ76920.c: 148:     I2C_writeRegister(0x18, 0x08, protect3.regByte);
 12655  212B  3018               	movlw	24
 12656  212C  00F5               	movwf	I2C_writeRegister@slaveAddress
 12657  212D  3000               	movlw	0
 12658  212E  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12659  212F  3008               	movlw	8
 12660  2130  00F7               	movwf	I2C_writeRegister@regAddress
 12661  2131  3000               	movlw	0
 12662  2132  00F8               	movwf	I2C_writeRegister@regAddress+1
 12663  2133  0023               	movlb	3	; select bank3
 12664  2134  085A               	movf	_protect3^(0+384),w
 12665  2135  0020               	movlb	0	; select bank0
 12666  2136  00B6               	movwf	??_setCellUndervoltageProtection
 12667  2137  01B7               	clrf	??_setCellUndervoltageProtection+1
 12668  2138  0836               	movf	??_setCellUndervoltageProtection,w
 12669  2139  00F9               	movwf	I2C_writeRegister@data
 12670  213A  0837               	movf	??_setCellUndervoltageProtection+1,w
 12671  213B  00FA               	movwf	I2C_writeRegister@data+1
 12672  213C  31B4  247A         	fcall	_I2C_writeRegister
 12673  213E  0008               	return
 12674  213F                     __end_of_setCellUndervoltageProtection:	
 12675                           
 12676                           	psect	text42
 12677  2F2B                     __ptext42:	
 12678 ;; *************** function _setCellOvervoltageProtection *****************
 12679 ;; Defined at:
 12680 ;;		line 154 in file "BQ76920.c"
 12681 ;; Parameters:    Size  Location     Type
 12682 ;;  voltage_mV      2   18[BANK0 ] int 
 12683 ;;  delay_s         2   20[BANK0 ] int 
 12684 ;; Auto vars:     Size  Location     Type
 12685 ;;  i               2   37[BANK0 ] int 
 12686 ;;  ov_trip         1   36[BANK0 ] unsigned char 
 12687 ;; Return value:  Size  Location     Type
 12688 ;;                  1    wreg      void 
 12689 ;; Registers used:
 12690 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12691 ;; Tracked objects:
 12692 ;;		On entry : 0/0
 12693 ;;		On exit  : 0/0
 12694 ;;		Unchanged: 0/0
 12695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12696 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12697 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12698 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12699 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12700 ;;Total ram usage:       21 bytes
 12701 ;; Hardware stack levels used:    1
 12702 ;; Hardware stack levels required when called:    3
 12703 ;; This function calls:
 12704 ;;		_I2C_writeRegister
 12705 ;;		___aldiv
 12706 ;;		___lmul
 12707 ;;		_readRegister
 12708 ;; This function is called by:
 12709 ;;		_init_AFE
 12710 ;; This function uses a non-reentrant model
 12711 ;;
 12712                           
 12713                           
 12714                           ;psect for function _setCellOvervoltageProtection
 12715  2F2B                     _setCellOvervoltageProtection:	
 12716                           
 12717                           ;BQ76920.c: 156:     maxCellVoltage = voltage_mV;
 12718                           
 12719                           ;incstack = 0
 12720                           ; Regs used in _setCellOvervoltageProtection: [wreg-fsr0h+status,2+status,0+pclath+cstac
      +                          k]
 12721  2F2B  0020               	movlb	0	; select bank0
 12722  2F2C  0833               	movf	setCellOvervoltageProtection@voltage_mV+1,w
 12723  2F2D  0023               	movlb	3	; select bank3
 12724  2F2E  00CF               	movwf	(_maxCellVoltage+1)^(0+384)
 12725  2F2F  0020               	movlb	0	; select bank0
 12726  2F30  0832               	movf	setCellOvervoltageProtection@voltage_mV,w
 12727  2F31  0023               	movlb	3	; select bank3
 12728  2F32  00CE               	movwf	_maxCellVoltage^(0+384)
 12729                           
 12730                           ;BQ76920.c: 157:     protect3.regByte = readRegister(0x18, 0x08);
 12731  2F33  3018               	movlw	24
 12732  2F34  00F5               	movwf	readRegister@slaveAddress
 12733  2F35  3000               	movlw	0
 12734  2F36  00F6               	movwf	readRegister@slaveAddress+1
 12735  2F37  3008               	movlw	8
 12736  2F38  00F7               	movwf	readRegister@regAddress
 12737  2F39  3000               	movlw	0
 12738  2F3A  00F8               	movwf	readRegister@regAddress+1
 12739  2F3B  31B6  2621  31AF   	fcall	_readRegister
 12740  2F3E  0875               	movf	?_readRegister,w
 12741  2F3F  0020               	movlb	0	; select bank0
 12742  2F40  00B6               	movwf	??_setCellOvervoltageProtection
 12743  2F41  0836               	movf	??_setCellOvervoltageProtection,w
 12744  2F42  0023               	movlb	3	; select bank3
 12745  2F43  00DA               	movwf	_protect3^(0+384)
 12746                           
 12747                           ;BQ76920.c: 158:     ov_trip = ((((long) voltage_mV - adcOffset) * 1000 / adcGain) >> 4)
      +                           & 0x00FF;
 12748  2F44  0022               	movlb	2	; select bank2
 12749  2F45  086D               	movf	_adcGain^(0+256),w
 12750  2F46  0020               	movlb	0	; select bank0
 12751  2F47  00A4               	movwf	___aldiv@divisor
 12752  2F48  0022               	movlb	2	; select bank2
 12753  2F49  086E               	movf	(_adcGain+1)^(0+256),w
 12754  2F4A  0020               	movlb	0	; select bank0
 12755  2F4B  00A5               	movwf	___aldiv@divisor+1
 12756  2F4C  0D89               	rlf	9,f
 12757  2F4D  3B89               	subwfb	9,f
 12758  2F4E  0989               	comf	9,f
 12759  2F4F  00A6               	movwf	___aldiv@divisor+2
 12760  2F50  00A7               	movwf	___aldiv@divisor+3
 12761  2F51  0022               	movlb	2	; select bank2
 12762  2F52  086B               	movf	_adcOffset^(0+256),w
 12763  2F53  0020               	movlb	0	; select bank0
 12764  2F54  00B6               	movwf	??_setCellOvervoltageProtection
 12765  2F55  0022               	movlb	2	; select bank2
 12766  2F56  086C               	movf	(_adcOffset+1)^(0+256),w
 12767  2F57  0020               	movlb	0	; select bank0
 12768  2F58  00B7               	movwf	??_setCellOvervoltageProtection+1
 12769  2F59  3000               	movlw	0
 12770  2F5A  1BB7               	btfsc	??_setCellOvervoltageProtection+1,7
 12771  2F5B  30FF               	movlw	255
 12772  2F5C  00B8               	movwf	??_setCellOvervoltageProtection+2
 12773  2F5D  00B9               	movwf	??_setCellOvervoltageProtection+3
 12774  2F5E  0832               	movf	setCellOvervoltageProtection@voltage_mV,w
 12775  2F5F  00BA               	movwf	??_setCellOvervoltageProtection+4
 12776  2F60  0833               	movf	setCellOvervoltageProtection@voltage_mV+1,w
 12777  2F61  00BB               	movwf	??_setCellOvervoltageProtection+5
 12778  2F62  3000               	movlw	0
 12779  2F63  1BBB               	btfsc	??_setCellOvervoltageProtection+5,7
 12780  2F64  30FF               	movlw	255
 12781  2F65  00BC               	movwf	??_setCellOvervoltageProtection+6
 12782  2F66  00BD               	movwf	??_setCellOvervoltageProtection+7
 12783  2F67  0836               	movf	??_setCellOvervoltageProtection,w
 12784  2F68  02BA               	subwf	??_setCellOvervoltageProtection+4,f
 12785  2F69  0837               	movf	??_setCellOvervoltageProtection+1,w
 12786  2F6A  3BBB               	subwfb	??_setCellOvervoltageProtection+5,f
 12787  2F6B  0838               	movf	??_setCellOvervoltageProtection+2,w
 12788  2F6C  3BBC               	subwfb	??_setCellOvervoltageProtection+6,f
 12789  2F6D  0839               	movf	??_setCellOvervoltageProtection+3,w
 12790  2F6E  3BBD               	subwfb	??_setCellOvervoltageProtection+7,f
 12791  2F6F  083D               	movf	??_setCellOvervoltageProtection+7,w
 12792  2F70  00F4               	movwf	___lmul@multiplier+3
 12793  2F71  083C               	movf	??_setCellOvervoltageProtection+6,w
 12794  2F72  00F3               	movwf	___lmul@multiplier+2
 12795  2F73  083B               	movf	??_setCellOvervoltageProtection+5,w
 12796  2F74  00F2               	movwf	___lmul@multiplier+1
 12797  2F75  083A               	movf	??_setCellOvervoltageProtection+4,w
 12798  2F76  00F1               	movwf	___lmul@multiplier
 12799  2F77  3000               	movlw	0
 12800  2F78  00F8               	movwf	___lmul@multiplicand+3
 12801  2F79  3000               	movlw	0
 12802  2F7A  00F7               	movwf	___lmul@multiplicand+2
 12803  2F7B  3003               	movlw	3
 12804  2F7C  00F6               	movwf	___lmul@multiplicand+1
 12805  2F7D  30E8               	movlw	232
 12806  2F7E  00F5               	movwf	___lmul@multiplicand
 12807  2F7F  31B5  2588  31AF   	fcall	___lmul
 12808  2F82  0874               	movf	?___lmul+3,w
 12809  2F83  0020               	movlb	0	; select bank0
 12810  2F84  00AB               	movwf	___aldiv@dividend+3
 12811  2F85  0873               	movf	?___lmul+2,w
 12812  2F86  00AA               	movwf	___aldiv@dividend+2
 12813  2F87  0872               	movf	?___lmul+1,w
 12814  2F88  00A9               	movwf	___aldiv@dividend+1
 12815  2F89  0871               	movf	?___lmul,w
 12816  2F8A  00A8               	movwf	___aldiv@dividend
 12817  2F8B  31AB  2322  31AF   	fcall	___aldiv
 12818  2F8E  0020               	movlb	0	; select bank0
 12819  2F8F  0824               	movf	?___aldiv,w
 12820  2F90  00BE               	movwf	??_setCellOvervoltageProtection+8
 12821  2F91  0825               	movf	?___aldiv+1,w
 12822  2F92  00BF               	movwf	??_setCellOvervoltageProtection+9
 12823  2F93  0826               	movf	?___aldiv+2,w
 12824  2F94  00C0               	movwf	??_setCellOvervoltageProtection+10
 12825  2F95  0827               	movf	?___aldiv+3,w
 12826  2F96  00C1               	movwf	??_setCellOvervoltageProtection+11
 12827  2F97  3004               	movlw	4
 12828  2F98  00C2               	movwf	??_setCellOvervoltageProtection+12
 12829  2F99                     u11335:	
 12830  2F99  37C1               	asrf	??_setCellOvervoltageProtection+11,f
 12831  2F9A  0CC0               	rrf	??_setCellOvervoltageProtection+10,f
 12832  2F9B  0CBF               	rrf	??_setCellOvervoltageProtection+9,f
 12833  2F9C  0CBE               	rrf	??_setCellOvervoltageProtection+8,f
 12834  2F9D  0BC2               	decfsz	??_setCellOvervoltageProtection+12,f
 12835  2F9E  2F99               	goto	u11335
 12836  2F9F  083E               	movf	??_setCellOvervoltageProtection+8,w
 12837  2FA0  00C3               	movwf	??_setCellOvervoltageProtection+13
 12838  2FA1  0843               	movf	??_setCellOvervoltageProtection+13,w
 12839  2FA2  00C4               	movwf	setCellOvervoltageProtection@ov_trip
 12840                           
 12841                           ;BQ76920.c: 159:     I2C_writeRegister(0x18, 0x09, ov_trip);
 12842  2FA3  3018               	movlw	24
 12843  2FA4  00F5               	movwf	I2C_writeRegister@slaveAddress
 12844  2FA5  3000               	movlw	0
 12845  2FA6  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12846  2FA7  3009               	movlw	9
 12847  2FA8  00F7               	movwf	I2C_writeRegister@regAddress
 12848  2FA9  3000               	movlw	0
 12849  2FAA  00F8               	movwf	I2C_writeRegister@regAddress+1
 12850  2FAB  0844               	movf	setCellOvervoltageProtection@ov_trip,w
 12851  2FAC  00B6               	movwf	??_setCellOvervoltageProtection
 12852  2FAD  01B7               	clrf	??_setCellOvervoltageProtection+1
 12853  2FAE  0836               	movf	??_setCellOvervoltageProtection,w
 12854  2FAF  00F9               	movwf	I2C_writeRegister@data
 12855  2FB0  0837               	movf	??_setCellOvervoltageProtection+1,w
 12856  2FB1  00FA               	movwf	I2C_writeRegister@data+1
 12857  2FB2  31B4  247A  31AF   	fcall	_I2C_writeRegister
 12858                           
 12859                           ;BQ76920.c: 161:     for (int i = 0; i < (sizeof(OV_delay_setting) / sizeof((OV_delay_se
      +                          tting)[0])) - 1; i++) {
 12860  2FB5  0020               	movlb	0	; select bank0
 12861  2FB6  01C5               	clrf	setCellOvervoltageProtection@i
 12862  2FB7  01C6               	clrf	setCellOvervoltageProtection@i+1
 12863  2FB8                     l8309:	
 12864                           
 12865                           ;BQ76920.c: 162:         if (delay_s >= OV_delay_setting[i]) {
 12866  2FB8  0846               	movf	setCellOvervoltageProtection@i+1,w
 12867  2FB9  0085               	movwf	5
 12868  2FBA  0845               	movf	setCellOvervoltageProtection@i,w
 12869  2FBB  0084               	movwf	4
 12870  2FBC  3584               	lslf	4,f
 12871  2FBD  0D85               	rlf	5,f
 12872  2FBE  3009               	movlw	low (_OV_delay_setting| (0+32768))
 12873  2FBF  0784               	addwf	4,f
 12874  2FC0  30BA               	movlw	high (_OV_delay_setting| (0+32768))
 12875  2FC1  3D85               	addwfc	5,f
 12876  2FC2  3F00               	moviw [0]fsr0
 12877  2FC3  00B6               	movwf	??_setCellOvervoltageProtection
 12878  2FC4  3F01               	moviw [1]fsr0
 12879  2FC5  00B7               	movwf	??_setCellOvervoltageProtection+1
 12880  2FC6  0835               	movf	setCellOvervoltageProtection@delay_s+1,w
 12881  2FC7  3A80               	xorlw	128
 12882  2FC8  00B8               	movwf	??_setCellOvervoltageProtection+2
 12883  2FC9  0837               	movf	??_setCellOvervoltageProtection+1,w
 12884  2FCA  3A80               	xorlw	128
 12885  2FCB  0238               	subwf	??_setCellOvervoltageProtection+2,w
 12886  2FCC  1D03               	skipz
 12887  2FCD  2FD0               	goto	u11345
 12888  2FCE  0836               	movf	??_setCellOvervoltageProtection,w
 12889  2FCF  0234               	subwf	setCellOvervoltageProtection@delay_s,w
 12890  2FD0                     u11345:	
 12891  2FD0  1C03               	skipc
 12892  2FD1  2FE0               	goto	l8313
 12893                           
 12894                           ;BQ76920.c: 163:             protect3.bits.UV_DELAY = i;
 12895  2FD2  0020               	movlb	0	; select bank0
 12896  2FD3  0845               	movf	setCellOvervoltageProtection@i,w
 12897  2FD4  00B6               	movwf	??_setCellOvervoltageProtection
 12898  2FD5  0EB6               	swapf	??_setCellOvervoltageProtection,f
 12899  2FD6  0DB6               	rlf	??_setCellOvervoltageProtection,f
 12900  2FD7  0DB6               	rlf	??_setCellOvervoltageProtection,f
 12901  2FD8  0023               	movlb	3	; select bank3
 12902  2FD9  085A               	movf	_protect3^(0+384),w
 12903  2FDA  0020               	movlb	0	; select bank0
 12904  2FDB  0636               	xorwf	??_setCellOvervoltageProtection,w
 12905  2FDC  393F               	andlw	-193
 12906  2FDD  0636               	xorwf	??_setCellOvervoltageProtection,w
 12907  2FDE  0023               	movlb	3	; select bank3
 12908  2FDF  00DA               	movwf	_protect3^(0+384)
 12909  2FE0                     l8313:	
 12910                           
 12911                           ;BQ76920.c: 165:     }
 12912  2FE0  3001               	movlw	1
 12913  2FE1  0020               	movlb	0	; select bank0
 12914  2FE2  07C5               	addwf	setCellOvervoltageProtection@i,f
 12915  2FE3  3000               	movlw	0
 12916  2FE4  3DC6               	addwfc	setCellOvervoltageProtection@i+1,f
 12917  2FE5  3000               	movlw	0
 12918  2FE6  0246               	subwf	setCellOvervoltageProtection@i+1,w
 12919  2FE7  3003               	movlw	3
 12920  2FE8  1903               	skipnz
 12921  2FE9  0245               	subwf	setCellOvervoltageProtection@i,w
 12922  2FEA  1C03               	skipc
 12923  2FEB  2FB8               	goto	l8309
 12924                           
 12925                           ;BQ76920.c: 166:     I2C_writeRegister(0x18,0x08, protect3.regByte);
 12926  2FEC  3018               	movlw	24
 12927  2FED  00F5               	movwf	I2C_writeRegister@slaveAddress
 12928  2FEE  3000               	movlw	0
 12929  2FEF  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12930  2FF0  3008               	movlw	8
 12931  2FF1  00F7               	movwf	I2C_writeRegister@regAddress
 12932  2FF2  3000               	movlw	0
 12933  2FF3  00F8               	movwf	I2C_writeRegister@regAddress+1
 12934  2FF4  0023               	movlb	3	; select bank3
 12935  2FF5  085A               	movf	_protect3^(0+384),w
 12936  2FF6  0020               	movlb	0	; select bank0
 12937  2FF7  00B6               	movwf	??_setCellOvervoltageProtection
 12938  2FF8  01B7               	clrf	??_setCellOvervoltageProtection+1
 12939  2FF9  0836               	movf	??_setCellOvervoltageProtection,w
 12940  2FFA  00F9               	movwf	I2C_writeRegister@data
 12941  2FFB  0837               	movf	??_setCellOvervoltageProtection+1,w
 12942  2FFC  00FA               	movwf	I2C_writeRegister@data+1
 12943  2FFD  31B4  247A         	fcall	_I2C_writeRegister
 12944  2FFF  0008               	return
 12945  3000                     __end_of_setCellOvervoltageProtection:	
 12946                           
 12947                           	psect	text43
 12948  2CEE                     __ptext43:	
 12949 ;; *************** function _beginAFEcommunication *****************
 12950 ;; Defined at:
 12951 ;;		line 28 in file "BQ76920.c"
 12952 ;; Parameters:    Size  Location     Type
 12953 ;;		None
 12954 ;; Auto vars:     Size  Location     Type
 12955 ;;  i               2   13[BANK0 ] int 
 12956 ;;  commSuccess     2   11[BANK0 ] int 
 12957 ;; Return value:  Size  Location     Type
 12958 ;;                  2    0[BANK0 ] int 
 12959 ;; Registers used:
 12960 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12961 ;; Tracked objects:
 12962 ;;		On entry : 0/0
 12963 ;;		On exit  : 0/0
 12964 ;;		Unchanged: 0/0
 12965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12966 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12967 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12968 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12969 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12970 ;;Total ram usage:       15 bytes
 12971 ;; Hardware stack levels used:    1
 12972 ;; Hardware stack levels required when called:    3
 12973 ;; This function calls:
 12974 ;;		_I2C_writeRegister
 12975 ;;		_readRegister
 12976 ;; This function is called by:
 12977 ;;		_statemachine
 12978 ;; This function uses a non-reentrant model
 12979 ;;
 12980                           
 12981                           
 12982                           ;psect for function _beginAFEcommunication
 12983  2CEE                     _beginAFEcommunication:	
 12984                           
 12985                           ;BQ76920.c: 30:     int commSuccess = 0;
 12986                           
 12987                           ;incstack = 0
 12988                           ; Regs used in _beginAFEcommunication: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 12989  2CEE  0020               	movlb	0	; select bank0
 12990  2CEF  01AB               	clrf	beginAFEcommunication@commSuccess
 12991  2CF0  01AC               	clrf	beginAFEcommunication@commSuccess+1
 12992                           
 12993                           ;BQ76920.c: 33:     for (int i = 0; i < 4; i++) {
 12994  2CF1  01AD               	clrf	beginAFEcommunication@i
 12995  2CF2  01AE               	clrf	beginAFEcommunication@i+1
 12996  2CF3                     l8453:	
 12997                           
 12998                           ;BQ76920.c: 34:         cellVoltages[i] = 0;
 12999  2CF3  0020               	movlb	0	; select bank0
 13000  2CF4  352D               	lslf	beginAFEcommunication@i,w
 13001  2CF5  3EAA               	addlw	(low (_cellVoltages| (0+256)))& (0+255)
 13002  2CF6  0086               	movwf	6
 13003  2CF7  3001               	movlw	1	; select bank3/4
 13004  2CF8  0087               	movwf	7
 13005  2CF9  3000               	movlw	0
 13006  2CFA  3FC0               	movwi [0]fsr1
 13007  2CFB  3FC1               	movwi [1]fsr1
 13008                           
 13009                           ;BQ76920.c: 35:     }
 13010  2CFC  3001               	movlw	1
 13011  2CFD  07AD               	addwf	beginAFEcommunication@i,f
 13012  2CFE  3000               	movlw	0
 13013  2CFF  3DAE               	addwfc	beginAFEcommunication@i+1,f
 13014  2D00  082E               	movf	beginAFEcommunication@i+1,w
 13015  2D01  3A80               	xorlw	128
 13016  2D02  00A2               	movwf	??_beginAFEcommunication
 13017  2D03  3080               	movlw	128
 13018  2D04  0222               	subwf	??_beginAFEcommunication,w
 13019  2D05  1D03               	skipz
 13020  2D06  2D09               	goto	u11485
 13021  2D07  3004               	movlw	4
 13022  2D08  022D               	subwf	beginAFEcommunication@i,w
 13023  2D09                     u11485:	
 13024  2D09  1C03               	skipc
 13025  2D0A  2CF3               	goto	l8453
 13026                           
 13027                           ;BQ76920.c: 38:     I2C_writeRegister(0x18, 0x0B, 0x19);
 13028  2D0B  3018               	movlw	24
 13029  2D0C  00F5               	movwf	I2C_writeRegister@slaveAddress
 13030  2D0D  3000               	movlw	0
 13031  2D0E  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 13032  2D0F  300B               	movlw	11
 13033  2D10  00F7               	movwf	I2C_writeRegister@regAddress
 13034  2D11  3000               	movlw	0
 13035  2D12  00F8               	movwf	I2C_writeRegister@regAddress+1
 13036  2D13  3019               	movlw	25
 13037  2D14  00F9               	movwf	I2C_writeRegister@data
 13038  2D15  3000               	movlw	0
 13039  2D16  00FA               	movwf	I2C_writeRegister@data+1
 13040  2D17  31B4  247A  31AC   	fcall	_I2C_writeRegister
 13041                           
 13042                           ;BQ76920.c: 40:     if (readRegister(0x18, 0x0B) == 0x19) {
 13043  2D1A  3018               	movlw	24
 13044  2D1B  00F5               	movwf	readRegister@slaveAddress
 13045  2D1C  3000               	movlw	0
 13046  2D1D  00F6               	movwf	readRegister@slaveAddress+1
 13047  2D1E  300B               	movlw	11
 13048  2D1F  00F7               	movwf	readRegister@regAddress
 13049  2D20  3000               	movlw	0
 13050  2D21  00F8               	movwf	readRegister@regAddress+1
 13051  2D22  31B6  2621  31AC   	fcall	_readRegister
 13052  2D25  3019               	movlw	25
 13053  2D26  0675               	xorwf	?_readRegister,w
 13054  2D27  0476               	iorwf	?_readRegister+1,w
 13055  2D28  1D03               	btfss	3,2
 13056  2D29  2D9C               	goto	l461
 13057                           
 13058                           ;BQ76920.c: 41:         commSuccess = 1;
 13059  2D2A  3001               	movlw	1
 13060  2D2B  0020               	movlb	0	; select bank0
 13061  2D2C  00AB               	movwf	beginAFEcommunication@commSuccess
 13062  2D2D  3000               	movlw	0
 13063  2D2E  00AC               	movwf	beginAFEcommunication@commSuccess+1
 13064                           
 13065                           ;BQ76920.c: 45:         I2C_writeRegister(0x18, 0x04, 0x18);
 13066  2D2F  3018               	movlw	24
 13067  2D30  00F5               	movwf	I2C_writeRegister@slaveAddress
 13068  2D31  3000               	movlw	0
 13069  2D32  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 13070  2D33  3004               	movlw	4
 13071  2D34  00F7               	movwf	I2C_writeRegister@regAddress
 13072  2D35  3000               	movlw	0
 13073  2D36  00F8               	movwf	I2C_writeRegister@regAddress+1
 13074  2D37  3018               	movlw	24
 13075  2D38  00F9               	movwf	I2C_writeRegister@data
 13076  2D39  3000               	movlw	0
 13077  2D3A  00FA               	movwf	I2C_writeRegister@data+1
 13078  2D3B  31B4  247A  31AC   	fcall	_I2C_writeRegister
 13079                           
 13080                           ;BQ76920.c: 46:         I2C_writeRegister(0x18, 0x05, 0x40);
 13081  2D3E  3018               	movlw	24
 13082  2D3F  00F5               	movwf	I2C_writeRegister@slaveAddress
 13083  2D40  3000               	movlw	0
 13084  2D41  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 13085  2D42  3005               	movlw	5
 13086  2D43  00F7               	movwf	I2C_writeRegister@regAddress
 13087  2D44  3000               	movlw	0
 13088  2D45  00F8               	movwf	I2C_writeRegister@regAddress+1
 13089  2D46  3040               	movlw	64
 13090  2D47  00F9               	movwf	I2C_writeRegister@data
 13091  2D48  3000               	movlw	0
 13092  2D49  00FA               	movwf	I2C_writeRegister@data+1
 13093  2D4A  31B4  247A  31AC   	fcall	_I2C_writeRegister
 13094                           
 13095                           ;BQ76920.c: 49:         adcOffset = (signed int) readRegister(0x18, 0x51);
 13096  2D4D  3018               	movlw	24
 13097  2D4E  00F5               	movwf	readRegister@slaveAddress
 13098  2D4F  3000               	movlw	0
 13099  2D50  00F6               	movwf	readRegister@slaveAddress+1
 13100  2D51  3051               	movlw	81
 13101  2D52  00F7               	movwf	readRegister@regAddress
 13102  2D53  3000               	movlw	0
 13103  2D54  00F8               	movwf	readRegister@regAddress+1
 13104  2D55  31B6  2621  31AC   	fcall	_readRegister
 13105  2D58  0876               	movf	?_readRegister+1,w
 13106  2D59  0022               	movlb	2	; select bank2
 13107  2D5A  00EC               	movwf	(_adcOffset+1)^(0+256)
 13108  2D5B  0875               	movf	?_readRegister,w
 13109  2D5C  00EB               	movwf	_adcOffset^(0+256)
 13110                           
 13111                           ;BQ76920.c: 50:         adcGain = 365 + (((readRegister(0x18, 0x50) & 0x0C) << 1) |
 13112  2D5D  3018               	movlw	24
 13113  2D5E  00F5               	movwf	readRegister@slaveAddress
 13114  2D5F  3000               	movlw	0
 13115  2D60  00F6               	movwf	readRegister@slaveAddress+1
 13116  2D61  3059               	movlw	89
 13117  2D62  00F7               	movwf	readRegister@regAddress
 13118  2D63  3000               	movlw	0
 13119  2D64  00F8               	movwf	readRegister@regAddress+1
 13120  2D65  31B6  2621  31AC   	fcall	_readRegister
 13121  2D68  0875               	movf	?_readRegister,w
 13122  2D69  0020               	movlb	0	; select bank0
 13123  2D6A  00A2               	movwf	??_beginAFEcommunication
 13124  2D6B  0876               	movf	?_readRegister+1,w
 13125  2D6C  00A3               	movwf	??_beginAFEcommunication+1
 13126  2D6D  3005               	movlw	5
 13127  2D6E  00A4               	movwf	??_beginAFEcommunication+2
 13128  2D6F                     u11505:	
 13129  2D6F  0D23               	rlf	??_beginAFEcommunication+1,w
 13130  2D70  0CA3               	rrf	??_beginAFEcommunication+1,f
 13131  2D71  0CA2               	rrf	??_beginAFEcommunication,f
 13132  2D72  0BA4               	decfsz	??_beginAFEcommunication+2,f
 13133  2D73  2D6F               	goto	u11505
 13134  2D74  3007               	movlw	7
 13135  2D75  0522               	andwf	??_beginAFEcommunication,w
 13136  2D76  00A5               	movwf	??_beginAFEcommunication+3
 13137  2D77  3000               	movlw	0
 13138  2D78  0523               	andwf	??_beginAFEcommunication+1,w
 13139  2D79  00A6               	movwf	??_beginAFEcommunication+4
 13140  2D7A  3018               	movlw	24
 13141  2D7B  00F5               	movwf	readRegister@slaveAddress
 13142  2D7C  3000               	movlw	0
 13143  2D7D  00F6               	movwf	readRegister@slaveAddress+1
 13144  2D7E  3050               	movlw	80
 13145  2D7F  00F7               	movwf	readRegister@regAddress
 13146  2D80  3000               	movlw	0
 13147  2D81  00F8               	movwf	readRegister@regAddress+1
 13148  2D82  31B6  2621         	fcall	_readRegister
 13149  2D84  300C               	movlw	12
 13150  2D85  0575               	andwf	?_readRegister,w
 13151  2D86  0020               	movlb	0	; select bank0
 13152  2D87  00A7               	movwf	??_beginAFEcommunication+5
 13153  2D88  3000               	movlw	0
 13154  2D89  0576               	andwf	?_readRegister+1,w
 13155  2D8A  00A8               	movwf	??_beginAFEcommunication+6
 13156  2D8B  35A7               	lslf	??_beginAFEcommunication+5,f
 13157  2D8C  0DA8               	rlf	??_beginAFEcommunication+6,f
 13158  2D8D  0825               	movf	??_beginAFEcommunication+3,w
 13159  2D8E  0427               	iorwf	??_beginAFEcommunication+5,w
 13160  2D8F  00A9               	movwf	??_beginAFEcommunication+7
 13161  2D90  0826               	movf	??_beginAFEcommunication+4,w
 13162  2D91  0428               	iorwf	??_beginAFEcommunication+6,w
 13163  2D92  00AA               	movwf	??_beginAFEcommunication+8
 13164  2D93  0829               	movf	??_beginAFEcommunication+7,w
 13165  2D94  3E6D               	addlw	109
 13166  2D95  0022               	movlb	2	; select bank2
 13167  2D96  00ED               	movwf	_adcGain^(0+256)
 13168  2D97  3001               	movlw	1
 13169  2D98  0020               	movlb	0	; select bank0
 13170  2D99  3D2A               	addwfc	??_beginAFEcommunication+8,w
 13171  2D9A  0022               	movlb	2	; select bank2
 13172  2D9B  00EE               	movwf	(_adcGain+1)^(0+256)
 13173  2D9C                     l461:	
 13174                           ;BQ76920.c: 53:     }
 13175                           
 13176                           
 13177                           ;BQ76920.c: 54:     return commSuccess;
 13178  2D9C  0020               	movlb	0	; select bank0
 13179  2D9D  082C               	movf	beginAFEcommunication@commSuccess+1,w
 13180  2D9E  00A1               	movwf	?_beginAFEcommunication+1
 13181  2D9F  082B               	movf	beginAFEcommunication@commSuccess,w
 13182  2DA0  00A0               	movwf	?_beginAFEcommunication
 13183  2DA1  0008               	return
 13184  2DA2                     __end_of_beginAFEcommunication:	
 13185                           
 13186                           	psect	text44
 13187  34D8                     __ptext44:	
 13188 ;; *************** function _RGB_AWAIT_AFE_CONN *****************
 13189 ;; Defined at:
 13190 ;;		line 43 in file "RGB.c"
 13191 ;; Parameters:    Size  Location     Type
 13192 ;;		None
 13193 ;; Auto vars:     Size  Location     Type
 13194 ;;		None
 13195 ;; Return value:  Size  Location     Type
 13196 ;;                  1    wreg      void 
 13197 ;; Registers used:
 13198 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13199 ;; Tracked objects:
 13200 ;;		On entry : 0/0
 13201 ;;		On exit  : 0/0
 13202 ;;		Unchanged: 0/0
 13203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13206 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13207 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13208 ;;Total ram usage:        1 bytes
 13209 ;; Hardware stack levels used:    1
 13210 ;; Hardware stack levels required when called:    2
 13211 ;; This function calls:
 13212 ;;		_RGB_color
 13213 ;; This function is called by:
 13214 ;;		_statemachine
 13215 ;; This function uses a non-reentrant model
 13216 ;;
 13217                           
 13218                           
 13219                           ;psect for function _RGB_AWAIT_AFE_CONN
 13220  34D8                     _RGB_AWAIT_AFE_CONN:	
 13221                           
 13222                           ;RGB.c: 45:     if (toggleColor) {
 13223                           
 13224                           ;incstack = 0
 13225                           ; Regs used in _RGB_AWAIT_AFE_CONN: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13226  34D8  087C               	movf	_toggleColor,w
 13227  34D9  1903               	btfsc	3,2
 13228  34DA  2CEA               	goto	l8443
 13229                           
 13230                           ;RGB.c: 46:         toggleColor = !toggleColor;
 13231  34DB  087C               	movf	_toggleColor,w
 13232  34DC  1D03               	btfss	3,2
 13233  34DD  2CE0               	goto	u11440
 13234  34DE  3001               	movlw	1
 13235  34DF  2CE1               	goto	u11450
 13236  34E0                     u11440:	
 13237  34E0  3000               	movlw	0
 13238  34E1                     u11450:	
 13239  34E1  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 13240  34E2  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 13241  34E3  00FC               	movwf	_toggleColor
 13242                           
 13243                           ;RGB.c: 47:         RGB_color(0);
 13244  34E4  3000               	movlw	0
 13245  34E5  00F1               	movwf	RGB_color@color
 13246  34E6  00F2               	movwf	RGB_color@color+1
 13247  34E7  31B4  24B7         	fcall	_RGB_color
 13248                           
 13249                           ;RGB.c: 48:     } else {
 13250  34E9  0008               	return
 13251  34EA                     l8443:	
 13252                           
 13253                           ;RGB.c: 49:         toggleColor = !toggleColor;
 13254  34EA  087C               	movf	_toggleColor,w
 13255  34EB  1D03               	btfss	3,2
 13256  34EC  2CEF               	goto	u11460
 13257  34ED  3001               	movlw	1
 13258  34EE  2CF0               	goto	u11470
 13259  34EF                     u11460:	
 13260  34EF  3000               	movlw	0
 13261  34F0                     u11470:	
 13262  34F0  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 13263  34F1  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 13264  34F2  00FC               	movwf	_toggleColor
 13265                           
 13266                           ;RGB.c: 50:         RGB_color(1);
 13267  34F3  3001               	movlw	1
 13268  34F4  00F1               	movwf	RGB_color@color
 13269  34F5  3000               	movlw	0
 13270  34F6  00F2               	movwf	RGB_color@color+1
 13271  34F7  31B4  24B7         	fcall	_RGB_color
 13272  34F9  0008               	return
 13273  34FA                     __end_of_RGB_AWAIT_AFE_CONN:	
 13274                           
 13275                           	psect	text45
 13276  34B7                     __ptext45:	
 13277 ;; *************** function _RGB_color *****************
 13278 ;; Defined at:
 13279 ;;		line 17 in file "RGB.c"
 13280 ;; Parameters:    Size  Location     Type
 13281 ;;  color           2    1[COMMON] int 
 13282 ;; Auto vars:     Size  Location     Type
 13283 ;;		None
 13284 ;; Return value:  Size  Location     Type
 13285 ;;                  1    wreg      void 
 13286 ;; Registers used:
 13287 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 13288 ;; Tracked objects:
 13289 ;;		On entry : 0/0
 13290 ;;		On exit  : 0/0
 13291 ;;		Unchanged: 0/0
 13292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13293 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13296 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13297 ;;Total ram usage:        2 bytes
 13298 ;; Hardware stack levels used:    1
 13299 ;; Hardware stack levels required when called:    1
 13300 ;; This function calls:
 13301 ;;		Nothing
 13302 ;; This function is called by:
 13303 ;;		_statemachine
 13304 ;;		_RGB_AWAIT_AFE_CONN
 13305 ;;		_watchdog_timeout_shutdown
 13306 ;; This function uses a non-reentrant model
 13307 ;;
 13308                           
 13309                           
 13310                           ;psect for function _RGB_color
 13311  34B7                     _RGB_color:	
 13312                           
 13313                           ;RGB.c: 19:     switch (color) {
 13314                           
 13315                           ;incstack = 0
 13316                           ; Regs used in _RGB_color: [wreg-fsr0h+status,2+status,0]
 13317  34B7  2CC7               	goto	l8163
 13318  34B8                     l348:	
 13319                           ;RGB.c: 20:         case 0:
 13320                           
 13321                           
 13322                           ;RGB.c: 21:             LATAbits.LATA4 = 0;
 13323  34B8  0022               	movlb	2	; select bank2
 13324  34B9  120C               	bcf	12,4	;volatile
 13325                           
 13326                           ;RGB.c: 22:             LATAbits.LATA5 = 1;
 13327  34BA  168C               	bsf	12,5	;volatile
 13328                           
 13329                           ;RGB.c: 23:             LATEbits.LATE0 = 1;
 13330  34BB  1410               	bsf	16,0	;volatile
 13331                           
 13332                           ;RGB.c: 24:             break;
 13333  34BC  0008               	return
 13334  34BD                     l350:	
 13335                           ;RGB.c: 25:         case 1:
 13336                           
 13337                           
 13338                           ;RGB.c: 26:             LATAbits.LATA4 = 1;
 13339  34BD  0022               	movlb	2	; select bank2
 13340  34BE  160C               	bsf	12,4	;volatile
 13341                           
 13342                           ;RGB.c: 27:             LATAbits.LATA5 = 0;
 13343  34BF  128C               	bcf	12,5	;volatile
 13344                           
 13345                           ;RGB.c: 28:             LATEbits.LATE0 = 1;
 13346  34C0  1410               	bsf	16,0	;volatile
 13347                           
 13348                           ;RGB.c: 29:             break;
 13349  34C1  0008               	return
 13350  34C2                     l351:	
 13351                           ;RGB.c: 30:         case 2:
 13352                           
 13353                           
 13354                           ;RGB.c: 31:             LATAbits.LATA4 = 1;
 13355  34C2  0022               	movlb	2	; select bank2
 13356  34C3  160C               	bsf	12,4	;volatile
 13357                           
 13358                           ;RGB.c: 32:             LATAbits.LATA5 = 1;
 13359  34C4  168C               	bsf	12,5	;volatile
 13360                           
 13361                           ;RGB.c: 33:             LATEbits.LATE0 = 0;
 13362  34C5  1010               	bcf	16,0	;volatile
 13363                           
 13364                           ;RGB.c: 34:             break;
 13365  34C6  0008               	return
 13366  34C7                     l8163:	
 13367                           
 13368                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13369                           ; Switch size 1, requested type "simple"
 13370                           ; Number of cases is 1, Range of values is 0 to 0
 13371                           ; switch strategies available:
 13372                           ; Name         Instructions Cycles
 13373                           ; simple_byte            4     3 (average)
 13374                           ; direct_byte            8     6 (fixed)
 13375                           ; jumptable            260     6 (fixed)
 13376                           ;	Chosen strategy is simple_byte
 13377  34C7  0872               	movf	RGB_color@color+1,w
 13378  34C8  3A00               	xorlw	0	; case 0
 13379  34C9  1903               	skipnz
 13380  34CA  2CCC               	goto	l8785
 13381  34CB  2CD7               	goto	l352
 13382  34CC                     l8785:	
 13383                           
 13384                           ; Switch size 1, requested type "simple"
 13385                           ; Number of cases is 3, Range of values is 0 to 2
 13386                           ; switch strategies available:
 13387                           ; Name         Instructions Cycles
 13388                           ; simple_byte           10     6 (average)
 13389                           ; direct_byte           12     6 (fixed)
 13390                           ; jumptable            260     6 (fixed)
 13391                           ;	Chosen strategy is simple_byte
 13392  34CC  0871               	movf	RGB_color@color,w
 13393  34CD  3A00               	xorlw	0	; case 0
 13394  34CE  1903               	skipnz
 13395  34CF  2CB8               	goto	l348
 13396  34D0  3A01               	xorlw	1	; case 1
 13397  34D1  1903               	skipnz
 13398  34D2  2CBD               	goto	l350
 13399  34D3  3A03               	xorlw	3	; case 2
 13400  34D4  1903               	skipnz
 13401  34D5  2CC2               	goto	l351
 13402  34D6  2CD7               	goto	l352
 13403  34D7                     l352:	
 13404  34D7  0008               	return
 13405  34D8                     __end_of_RGB_color:	
 13406                           
 13407                           	psect	text46
 13408  34FA                     __ptext46:	
 13409 ;; *************** function _AFE_UPDATE *****************
 13410 ;; Defined at:
 13411 ;;		line 172 in file "BQ76920.c"
 13412 ;; Parameters:    Size  Location     Type
 13413 ;;		None
 13414 ;; Auto vars:     Size  Location     Type
 13415 ;;		None
 13416 ;; Return value:  Size  Location     Type
 13417 ;;                  1    wreg      void 
 13418 ;; Registers used:
 13419 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13420 ;; Tracked objects:
 13421 ;;		On entry : 0/0
 13422 ;;		On exit  : 0/0
 13423 ;;		Unchanged: 0/0
 13424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13429 ;;Total ram usage:        0 bytes
 13430 ;; Hardware stack levels used:    1
 13431 ;; Hardware stack levels required when called:    5
 13432 ;; This function calls:
 13433 ;;		_calibrate_BATTSOC
 13434 ;;		_enableCharging
 13435 ;;		_enableDischarging
 13436 ;;		_updateCurrent
 13437 ;;		_updateTemperatures
 13438 ;;		_updateVoltages
 13439 ;; This function is called by:
 13440 ;;		_statemachine
 13441 ;; This function uses a non-reentrant model
 13442 ;;
 13443                           
 13444                           
 13445                           ;psect for function _AFE_UPDATE
 13446  34FA                     _AFE_UPDATE:	
 13447                           
 13448                           ;BQ76920.c: 174:     updateVoltages();
 13449                           
 13450                           ;incstack = 0
 13451                           ; Regs used in _AFE_UPDATE: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13452  34FA  3192  224F  31B4   	fcall	_updateVoltages
 13453                           
 13454                           ;BQ76920.c: 176:     if(batCurrent<10){
 13455  34FD  0023               	movlb	3	; select bank3
 13456  34FE  1BC3               	btfsc	(_batCurrent+3)^(0+384),7
 13457  34FF  2D0D               	goto	l8487
 13458  3500  0843               	movf	(_batCurrent+3)^(0+384),w
 13459  3501  1D03               	btfss	3,2
 13460  3502  2D10               	goto	l8489
 13461  3503  0842               	movf	(_batCurrent+2)^(0+384),w
 13462  3504  1D03               	btfss	3,2
 13463  3505  2D10               	goto	l8489
 13464  3506  0841               	movf	(_batCurrent+1)^(0+384),w
 13465  3507  1D03               	btfss	3,2
 13466  3508  2D10               	goto	l8489
 13467  3509  300A               	movlw	10
 13468  350A  0240               	subwf	_batCurrent^(0+384),w
 13469  350B  1803               	btfsc	3,0
 13470  350C  2D10               	goto	l8489
 13471  350D                     l8487:	
 13472                           
 13473                           ;BQ76920.c: 178:         calibrate_BATTSOC();
 13474  350D  31A0  2003  31B4   	fcall	_calibrate_BATTSOC
 13475  3510                     l8489:	
 13476                           
 13477                           ;BQ76920.c: 181:     updateCurrent();
 13478  3510  31AD  25A2  31B4   	fcall	_updateCurrent
 13479                           
 13480                           ;BQ76920.c: 182:     updateTemperatures();
 13481  3513  3195  2527  31B4   	fcall	_updateTemperatures
 13482                           
 13483                           ;BQ76920.c: 185:     enableDischarging(1);
 13484  3516  3001               	movlw	1
 13485  3517  0020               	movlb	0	; select bank0
 13486  3518  00A0               	movwf	enableDischarging@enable
 13487  3519  3000               	movlw	0
 13488  351A  00A1               	movwf	enableDischarging@enable+1
 13489  351B  31B6  268E  31B4   	fcall	_enableDischarging
 13490                           
 13491                           ;BQ76920.c: 186:     enableCharging(1);
 13492  351E  3001               	movlw	1
 13493  351F  0020               	movlb	0	; select bank0
 13494  3520  00A0               	movwf	enableCharging@enable
 13495  3521  3000               	movlw	0
 13496  3522  00A1               	movwf	enableCharging@enable+1
 13497  3523  31B6  2657         	fcall	_enableCharging
 13498  3525  0008               	return
 13499  3526                     __end_of_AFE_UPDATE:	
 13500                           
 13501                           	psect	text47
 13502  124F                     __ptext47:	
 13503 ;; *************** function _updateVoltages *****************
 13504 ;; Defined at:
 13505 ;;		line 216 in file "BQ76920.c"
 13506 ;; Parameters:    Size  Location     Type
 13507 ;;		None
 13508 ;; Auto vars:     Size  Location     Type
 13509 ;;  adcVal          4   24[BANK1 ] long 
 13510 ;; Return value:  Size  Location     Type
 13511 ;;                  1    wreg      void 
 13512 ;; Registers used:
 13513 ;;		wreg, status,2, status,0, pclath, cstack
 13514 ;; Tracked objects:
 13515 ;;		On entry : 0/0
 13516 ;;		On exit  : 0/0
 13517 ;;		Unchanged: 0/0
 13518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13520 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13521 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13522 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13523 ;;Total ram usage:       11 bytes
 13524 ;; Hardware stack levels used:    1
 13525 ;; Hardware stack levels required when called:    3
 13526 ;; This function calls:
 13527 ;;		___aldiv
 13528 ;;		___fladd
 13529 ;;		___fldiv
 13530 ;;		___flmul
 13531 ;;		___fltol
 13532 ;;		___lmul
 13533 ;;		___xxtofl
 13534 ;;		_readRegister
 13535 ;; This function is called by:
 13536 ;;		_AFE_UPDATE
 13537 ;; This function uses a non-reentrant model
 13538 ;;
 13539                           
 13540                           
 13541                           ;psect for function _updateVoltages
 13542  124F                     _updateVoltages:	
 13543                           
 13544                           ;BQ76920.c: 220:   adcVal = (readRegister(0x18, 0x2A) << 8) | readRegister(0x18, 0x2B);
 13545                           
 13546                           ;incstack = 0
 13547                           ; Regs used in _updateVoltages: [wreg+status,2+status,0+pclath+cstack]
 13548  124F  3018               	movlw	24
 13549  1250  00F5               	movwf	readRegister@slaveAddress
 13550  1251  3000               	movlw	0
 13551  1252  00F6               	movwf	readRegister@slaveAddress+1
 13552  1253  302A               	movlw	42
 13553  1254  00F7               	movwf	readRegister@regAddress
 13554  1255  3000               	movlw	0
 13555  1256  00F8               	movwf	readRegister@regAddress+1
 13556  1257  31B6  2621  3192   	fcall	_readRegister
 13557  125A  0875               	movf	?_readRegister,w
 13558  125B  0021               	movlb	1	; select bank1
 13559  125C  00B1               	movwf	??_updateVoltages^(0+128)
 13560  125D  0876               	movf	?_readRegister+1,w
 13561  125E  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13562  125F  0831               	movf	??_updateVoltages^(0+128),w
 13563  1260  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13564  1261  01B1               	clrf	??_updateVoltages^(0+128)
 13565  1262  3018               	movlw	24
 13566  1263  00F5               	movwf	readRegister@slaveAddress
 13567  1264  3000               	movlw	0
 13568  1265  00F6               	movwf	readRegister@slaveAddress+1
 13569  1266  302B               	movlw	43
 13570  1267  00F7               	movwf	readRegister@regAddress
 13571  1268  3000               	movlw	0
 13572  1269  00F8               	movwf	readRegister@regAddress+1
 13573  126A  31B6  2621  3192   	fcall	_readRegister
 13574  126D  0875               	movf	?_readRegister,w
 13575  126E  0021               	movlb	1	; select bank1
 13576  126F  0431               	iorwf	??_updateVoltages^(0+128),w
 13577  1270  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13578  1271  0876               	movf	?_readRegister+1,w
 13579  1272  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13580  1273  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13581  1274  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13582  1275  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13583  1276  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13584  1277  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13585  1278  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13586                           
 13587                           ;BQ76920.c: 221:   batVoltage = 4.0 * adcGain * adcVal / 1000.0 + 4 * adcOffset;
 13588  1279  0022               	movlb	2	; select bank2
 13589  127A  086D               	movf	_adcGain^(0+256),w
 13590  127B  00F1               	movwf	___xxtofl@val
 13591  127C  086E               	movf	(_adcGain+1)^(0+256),w
 13592  127D  00F2               	movwf	___xxtofl@val+1
 13593  127E  0D89               	rlf	9,f
 13594  127F  3B89               	subwfb	9,f
 13595  1280  0989               	comf	9,f
 13596  1281  00F3               	movwf	___xxtofl@val+2
 13597  1282  00F4               	movwf	___xxtofl@val+3
 13598  1283  3001               	movlw	1
 13599  1284  3198  2009  3192   	fcall	___xxtofl
 13600  1287  0874               	movf	?___xxtofl+3,w
 13601  1288  0020               	movlb	0	; select bank0
 13602  1289  00AD               	movwf	___flmul@a+3
 13603  128A  0873               	movf	?___xxtofl+2,w
 13604  128B  00AC               	movwf	___flmul@a+2
 13605  128C  0872               	movf	?___xxtofl+1,w
 13606  128D  00AB               	movwf	___flmul@a+1
 13607  128E  0871               	movf	?___xxtofl,w
 13608  128F  00AA               	movwf	___flmul@a
 13609  1290  3040               	movlw	64
 13610  1291  00A9               	movwf	___flmul@b+3
 13611  1292  3080               	movlw	128
 13612  1293  00A8               	movwf	___flmul@b+2
 13613  1294  3000               	movlw	0
 13614  1295  00A7               	movwf	___flmul@b+1
 13615  1296  3000               	movlw	0
 13616  1297  00A6               	movwf	___flmul@b
 13617  1298  3190  2023  3192   	fcall	___flmul
 13618  129B  0020               	movlb	0	; select bank0
 13619  129C  0829               	movf	?___flmul+3,w
 13620  129D  0021               	movlb	1	; select bank1
 13621  129E  00B7               	movwf	(_updateVoltages$2078+3)^(0+128)
 13622  129F  0020               	movlb	0	; select bank0
 13623  12A0  0828               	movf	?___flmul+2,w
 13624  12A1  0021               	movlb	1	; select bank1
 13625  12A2  00B6               	movwf	(_updateVoltages$2078+2)^(0+128)
 13626  12A3  0020               	movlb	0	; select bank0
 13627  12A4  0827               	movf	?___flmul+1,w
 13628  12A5  0021               	movlb	1	; select bank1
 13629  12A6  00B5               	movwf	(_updateVoltages$2078+1)^(0+128)
 13630  12A7  0020               	movlb	0	; select bank0
 13631  12A8  0826               	movf	?___flmul,w
 13632  12A9  0021               	movlb	1	; select bank1
 13633  12AA  00B4               	movwf	_updateVoltages$2078^(0+128)
 13634                           
 13635                           ;BQ76920.c: 221:   batVoltage = 4.0 * adcGain * adcVal / 1000.0 + 4 * adcOffset;
 13636  12AB  0837               	movf	(_updateVoltages$2078+3)^(0+128),w
 13637  12AC  0020               	movlb	0	; select bank0
 13638  12AD  00AD               	movwf	___flmul@a+3
 13639  12AE  0021               	movlb	1	; select bank1
 13640  12AF  0836               	movf	(_updateVoltages$2078+2)^(0+128),w
 13641  12B0  0020               	movlb	0	; select bank0
 13642  12B1  00AC               	movwf	___flmul@a+2
 13643  12B2  0021               	movlb	1	; select bank1
 13644  12B3  0835               	movf	(_updateVoltages$2078+1)^(0+128),w
 13645  12B4  0020               	movlb	0	; select bank0
 13646  12B5  00AB               	movwf	___flmul@a+1
 13647  12B6  0021               	movlb	1	; select bank1
 13648  12B7  0834               	movf	_updateVoltages$2078^(0+128),w
 13649  12B8  0020               	movlb	0	; select bank0
 13650  12B9  00AA               	movwf	___flmul@a
 13651  12BA  0021               	movlb	1	; select bank1
 13652  12BB  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13653  12BC  00F4               	movwf	___xxtofl@val+3
 13654  12BD  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13655  12BE  00F3               	movwf	___xxtofl@val+2
 13656  12BF  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13657  12C0  00F2               	movwf	___xxtofl@val+1
 13658  12C1  0838               	movf	updateVoltages@adcVal^(0+128),w
 13659  12C2  00F1               	movwf	___xxtofl@val
 13660  12C3  3001               	movlw	1
 13661  12C4  3198  2009  3192   	fcall	___xxtofl
 13662  12C7  0874               	movf	?___xxtofl+3,w
 13663  12C8  0020               	movlb	0	; select bank0
 13664  12C9  00A9               	movwf	___flmul@b+3
 13665  12CA  0873               	movf	?___xxtofl+2,w
 13666  12CB  00A8               	movwf	___flmul@b+2
 13667  12CC  0872               	movf	?___xxtofl+1,w
 13668  12CD  00A7               	movwf	___flmul@b+1
 13669  12CE  0871               	movf	?___xxtofl,w
 13670  12CF  00A6               	movwf	___flmul@b
 13671  12D0  3190  2023  3192   	fcall	___flmul
 13672  12D3  0020               	movlb	0	; select bank0
 13673  12D4  0829               	movf	?___flmul+3,w
 13674  12D5  00C7               	movwf	___fldiv@b+3
 13675  12D6  0828               	movf	?___flmul+2,w
 13676  12D7  00C6               	movwf	___fldiv@b+2
 13677  12D8  0827               	movf	?___flmul+1,w
 13678  12D9  00C5               	movwf	___fldiv@b+1
 13679  12DA  0826               	movf	?___flmul,w
 13680  12DB  00C4               	movwf	___fldiv@b
 13681  12DC  3044               	movlw	68
 13682  12DD  00C3               	movwf	___fldiv@a+3
 13683  12DE  307A               	movlw	122
 13684  12DF  00C2               	movwf	___fldiv@a+2
 13685  12E0  3000               	movlw	0
 13686  12E1  00C1               	movwf	___fldiv@a+1
 13687  12E2  3000               	movlw	0
 13688  12E3  00C0               	movwf	___fldiv@a
 13689  12E4  319B  234B  3192   	fcall	___fldiv
 13690  12E7  0020               	movlb	0	; select bank0
 13691  12E8  0843               	movf	?___fldiv+3,w
 13692  12E9  00E1               	movwf	___fladd@a+3
 13693  12EA  0842               	movf	?___fldiv+2,w
 13694  12EB  00E0               	movwf	___fladd@a+2
 13695  12EC  0841               	movf	?___fldiv+1,w
 13696  12ED  00DF               	movwf	___fladd@a+1
 13697  12EE  0840               	movf	?___fldiv,w
 13698  12EF  00DE               	movwf	___fladd@a
 13699  12F0  0022               	movlb	2	; select bank2
 13700  12F1  086C               	movf	(_adcOffset+1)^(0+256),w
 13701  12F2  0021               	movlb	1	; select bank1
 13702  12F3  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13703  12F4  0022               	movlb	2	; select bank2
 13704  12F5  086B               	movf	_adcOffset^(0+256),w
 13705  12F6  0021               	movlb	1	; select bank1
 13706  12F7  00B1               	movwf	??_updateVoltages^(0+128)
 13707  12F8  35B1               	lslf	??_updateVoltages^(0+128),f
 13708  12F9  0DB2               	rlf	(??_updateVoltages^(0+128)+1),f
 13709  12FA  35B1               	lslf	??_updateVoltages^(0+128),f
 13710  12FB  0DB2               	rlf	(??_updateVoltages^(0+128)+1),f
 13711  12FC  0831               	movf	??_updateVoltages^(0+128),w
 13712  12FD  00F1               	movwf	___xxtofl@val
 13713  12FE  0832               	movf	(??_updateVoltages+1)^(0+128),w
 13714  12FF  00F2               	movwf	___xxtofl@val+1
 13715  1300  0D89               	rlf	9,f
 13716  1301  3B89               	subwfb	9,f
 13717  1302  0989               	comf	9,f
 13718  1303  00F3               	movwf	___xxtofl@val+2
 13719  1304  00F4               	movwf	___xxtofl@val+3
 13720  1305  3001               	movlw	1
 13721  1306  3198  2009  3192   	fcall	___xxtofl
 13722  1309  0874               	movf	?___xxtofl+3,w
 13723  130A  0020               	movlb	0	; select bank0
 13724  130B  00DD               	movwf	___fladd@b+3
 13725  130C  0873               	movf	?___xxtofl+2,w
 13726  130D  00DC               	movwf	___fladd@b+2
 13727  130E  0872               	movf	?___xxtofl+1,w
 13728  130F  00DB               	movwf	___fladd@b+1
 13729  1310  0871               	movf	?___xxtofl,w
 13730  1311  00DA               	movwf	___fladd@b
 13731  1312  3185  25F3  3192   	fcall	___fladd
 13732  1315  0020               	movlb	0	; select bank0
 13733  1316  085D               	movf	?___fladd+3,w
 13734  1317  0021               	movlb	1	; select bank1
 13735  1318  00AB               	movwf	(___fltol@f1+3)^(0+128)
 13736  1319  0020               	movlb	0	; select bank0
 13737  131A  085C               	movf	?___fladd+2,w
 13738  131B  0021               	movlb	1	; select bank1
 13739  131C  00AA               	movwf	(___fltol@f1+2)^(0+128)
 13740  131D  0020               	movlb	0	; select bank0
 13741  131E  085B               	movf	?___fladd+1,w
 13742  131F  0021               	movlb	1	; select bank1
 13743  1320  00A9               	movwf	(___fltol@f1+1)^(0+128)
 13744  1321  0020               	movlb	0	; select bank0
 13745  1322  085A               	movf	?___fladd,w
 13746  1323  0021               	movlb	1	; select bank1
 13747  1324  00A8               	movwf	___fltol@f1^(0+128)
 13748  1325  31A8  2067  3192   	fcall	___fltol
 13749  1328  0021               	movlb	1	; select bank1
 13750  1329  082B               	movf	(?___fltol+3)^(0+128),w
 13751  132A  0023               	movlb	3	; select bank3
 13752  132B  00C7               	movwf	(_batVoltage+3)^(0+384)
 13753  132C  0021               	movlb	1	; select bank1
 13754  132D  082A               	movf	(?___fltol+2)^(0+128),w
 13755  132E  0023               	movlb	3	; select bank3
 13756  132F  00C6               	movwf	(_batVoltage+2)^(0+384)
 13757  1330  0021               	movlb	1	; select bank1
 13758  1331  0829               	movf	(?___fltol+1)^(0+128),w
 13759  1332  0023               	movlb	3	; select bank3
 13760  1333  00C5               	movwf	(_batVoltage+1)^(0+384)
 13761  1334  0021               	movlb	1	; select bank1
 13762  1335  0828               	movf	?___fltol^(0+128),w
 13763  1336  0023               	movlb	3	; select bank3
 13764  1337  00C4               	movwf	_batVoltage^(0+384)
 13765                           
 13766                           ;BQ76920.c: 244:     adcVal = ((readRegister(0x18, 0x0C) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x0D);
 13767  1338  3018               	movlw	24
 13768  1339  00F5               	movwf	readRegister@slaveAddress
 13769  133A  3000               	movlw	0
 13770  133B  00F6               	movwf	readRegister@slaveAddress+1
 13771  133C  300C               	movlw	12
 13772  133D  00F7               	movwf	readRegister@regAddress
 13773  133E  3000               	movlw	0
 13774  133F  00F8               	movwf	readRegister@regAddress+1
 13775  1340  31B6  2621  3192   	fcall	_readRegister
 13776  1343  303F               	movlw	63
 13777  1344  0575               	andwf	?_readRegister,w
 13778  1345  0021               	movlb	1	; select bank1
 13779  1346  00B1               	movwf	??_updateVoltages^(0+128)
 13780  1347  3000               	movlw	0
 13781  1348  0576               	andwf	?_readRegister+1,w
 13782  1349  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13783  134A  0831               	movf	??_updateVoltages^(0+128),w
 13784  134B  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13785  134C  01B1               	clrf	??_updateVoltages^(0+128)
 13786  134D  3018               	movlw	24
 13787  134E  00F5               	movwf	readRegister@slaveAddress
 13788  134F  3000               	movlw	0
 13789  1350  00F6               	movwf	readRegister@slaveAddress+1
 13790  1351  300D               	movlw	13
 13791  1352  00F7               	movwf	readRegister@regAddress
 13792  1353  3000               	movlw	0
 13793  1354  00F8               	movwf	readRegister@regAddress+1
 13794  1355  31B6  2621  3192   	fcall	_readRegister
 13795  1358  0875               	movf	?_readRegister,w
 13796  1359  0021               	movlb	1	; select bank1
 13797  135A  0431               	iorwf	??_updateVoltages^(0+128),w
 13798  135B  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13799  135C  0876               	movf	?_readRegister+1,w
 13800  135D  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13801  135E  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13802  135F  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13803  1360  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13804  1361  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13805  1362  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13806  1363  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13807                           
 13808                           ;BQ76920.c: 245:     cellVoltages[0] = (adcVal * adcGain / 1000) + adcOffset;
 13809  1364  3000               	movlw	0
 13810  1365  0020               	movlb	0	; select bank0
 13811  1366  00A7               	movwf	___aldiv@divisor+3
 13812  1367  3000               	movlw	0
 13813  1368  00A6               	movwf	___aldiv@divisor+2
 13814  1369  3003               	movlw	3
 13815  136A  00A5               	movwf	___aldiv@divisor+1
 13816  136B  30E8               	movlw	232
 13817  136C  00A4               	movwf	___aldiv@divisor
 13818  136D  0022               	movlb	2	; select bank2
 13819  136E  086D               	movf	_adcGain^(0+256),w
 13820  136F  00F1               	movwf	___lmul@multiplier
 13821  1370  086E               	movf	(_adcGain+1)^(0+256),w
 13822  1371  00F2               	movwf	___lmul@multiplier+1
 13823  1372  0D89               	rlf	9,f
 13824  1373  3B89               	subwfb	9,f
 13825  1374  0989               	comf	9,f
 13826  1375  00F3               	movwf	___lmul@multiplier+2
 13827  1376  00F4               	movwf	___lmul@multiplier+3
 13828  1377  0021               	movlb	1	; select bank1
 13829  1378  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13830  1379  00F8               	movwf	___lmul@multiplicand+3
 13831  137A  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13832  137B  00F7               	movwf	___lmul@multiplicand+2
 13833  137C  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13834  137D  00F6               	movwf	___lmul@multiplicand+1
 13835  137E  0838               	movf	updateVoltages@adcVal^(0+128),w
 13836  137F  00F5               	movwf	___lmul@multiplicand
 13837  1380  31B5  2588  3192   	fcall	___lmul
 13838  1383  0874               	movf	?___lmul+3,w
 13839  1384  0020               	movlb	0	; select bank0
 13840  1385  00AB               	movwf	___aldiv@dividend+3
 13841  1386  0873               	movf	?___lmul+2,w
 13842  1387  00AA               	movwf	___aldiv@dividend+2
 13843  1388  0872               	movf	?___lmul+1,w
 13844  1389  00A9               	movwf	___aldiv@dividend+1
 13845  138A  0871               	movf	?___lmul,w
 13846  138B  00A8               	movwf	___aldiv@dividend
 13847  138C  31AB  2322  3192   	fcall	___aldiv
 13848  138F  0022               	movlb	2	; select bank2
 13849  1390  086B               	movf	_adcOffset^(0+256),w
 13850  1391  0020               	movlb	0	; select bank0
 13851  1392  0724               	addwf	?___aldiv,w
 13852  1393  0023               	movlb	3	; select bank3
 13853  1394  00AA               	movwf	_cellVoltages^(0+384)
 13854  1395  0022               	movlb	2	; select bank2
 13855  1396  086C               	movf	(_adcOffset+1)^(0+256),w
 13856  1397  0020               	movlb	0	; select bank0
 13857  1398  3D25               	addwfc	?___aldiv+1,w
 13858  1399  0023               	movlb	3	; select bank3
 13859  139A  00AB               	movwf	(_cellVoltages+1)^(0+384)
 13860                           
 13861                           ;BQ76920.c: 246:     adcVal = ((readRegister(0x18, 0x0E) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x0F);
 13862  139B  3018               	movlw	24
 13863  139C  00F5               	movwf	readRegister@slaveAddress
 13864  139D  3000               	movlw	0
 13865  139E  00F6               	movwf	readRegister@slaveAddress+1
 13866  139F  300E               	movlw	14
 13867  13A0  00F7               	movwf	readRegister@regAddress
 13868  13A1  3000               	movlw	0
 13869  13A2  00F8               	movwf	readRegister@regAddress+1
 13870  13A3  31B6  2621  3192   	fcall	_readRegister
 13871  13A6  303F               	movlw	63
 13872  13A7  0575               	andwf	?_readRegister,w
 13873  13A8  0021               	movlb	1	; select bank1
 13874  13A9  00B1               	movwf	??_updateVoltages^(0+128)
 13875  13AA  3000               	movlw	0
 13876  13AB  0576               	andwf	?_readRegister+1,w
 13877  13AC  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13878  13AD  0831               	movf	??_updateVoltages^(0+128),w
 13879  13AE  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13880  13AF  01B1               	clrf	??_updateVoltages^(0+128)
 13881  13B0  3018               	movlw	24
 13882  13B1  00F5               	movwf	readRegister@slaveAddress
 13883  13B2  3000               	movlw	0
 13884  13B3  00F6               	movwf	readRegister@slaveAddress+1
 13885  13B4  300F               	movlw	15
 13886  13B5  00F7               	movwf	readRegister@regAddress
 13887  13B6  3000               	movlw	0
 13888  13B7  00F8               	movwf	readRegister@regAddress+1
 13889  13B8  31B6  2621  3192   	fcall	_readRegister
 13890  13BB  0875               	movf	?_readRegister,w
 13891  13BC  0021               	movlb	1	; select bank1
 13892  13BD  0431               	iorwf	??_updateVoltages^(0+128),w
 13893  13BE  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13894  13BF  0876               	movf	?_readRegister+1,w
 13895  13C0  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13896  13C1  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13897  13C2  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13898  13C3  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13899  13C4  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13900  13C5  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13901  13C6  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13902                           
 13903                           ;BQ76920.c: 247:     cellVoltages[1] = (adcVal * adcGain / 1000) + adcOffset;
 13904  13C7  3000               	movlw	0
 13905  13C8  0020               	movlb	0	; select bank0
 13906  13C9  00A7               	movwf	___aldiv@divisor+3
 13907  13CA  3000               	movlw	0
 13908  13CB  00A6               	movwf	___aldiv@divisor+2
 13909  13CC  3003               	movlw	3
 13910  13CD  00A5               	movwf	___aldiv@divisor+1
 13911  13CE  30E8               	movlw	232
 13912  13CF  00A4               	movwf	___aldiv@divisor
 13913  13D0  0022               	movlb	2	; select bank2
 13914  13D1  086D               	movf	_adcGain^(0+256),w
 13915  13D2  00F1               	movwf	___lmul@multiplier
 13916  13D3  086E               	movf	(_adcGain+1)^(0+256),w
 13917  13D4  00F2               	movwf	___lmul@multiplier+1
 13918  13D5  0D89               	rlf	9,f
 13919  13D6  3B89               	subwfb	9,f
 13920  13D7  0989               	comf	9,f
 13921  13D8  00F3               	movwf	___lmul@multiplier+2
 13922  13D9  00F4               	movwf	___lmul@multiplier+3
 13923  13DA  0021               	movlb	1	; select bank1
 13924  13DB  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13925  13DC  00F8               	movwf	___lmul@multiplicand+3
 13926  13DD  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13927  13DE  00F7               	movwf	___lmul@multiplicand+2
 13928  13DF  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13929  13E0  00F6               	movwf	___lmul@multiplicand+1
 13930  13E1  0838               	movf	updateVoltages@adcVal^(0+128),w
 13931  13E2  00F5               	movwf	___lmul@multiplicand
 13932  13E3  31B5  2588  3192   	fcall	___lmul
 13933  13E6  0874               	movf	?___lmul+3,w
 13934  13E7  0020               	movlb	0	; select bank0
 13935  13E8  00AB               	movwf	___aldiv@dividend+3
 13936  13E9  0873               	movf	?___lmul+2,w
 13937  13EA  00AA               	movwf	___aldiv@dividend+2
 13938  13EB  0872               	movf	?___lmul+1,w
 13939  13EC  00A9               	movwf	___aldiv@dividend+1
 13940  13ED  0871               	movf	?___lmul,w
 13941  13EE  00A8               	movwf	___aldiv@dividend
 13942  13EF  31AB  2322  3192   	fcall	___aldiv
 13943  13F2  0022               	movlb	2	; select bank2
 13944  13F3  086B               	movf	_adcOffset^(0+256),w
 13945  13F4  0020               	movlb	0	; select bank0
 13946  13F5  0724               	addwf	?___aldiv,w
 13947  13F6  0023               	movlb	3	; select bank3
 13948  13F7  00AC               	movwf	(_cellVoltages^(0+384)+2)
 13949  13F8  0022               	movlb	2	; select bank2
 13950  13F9  086C               	movf	(_adcOffset+1)^(0+256),w
 13951  13FA  0020               	movlb	0	; select bank0
 13952  13FB  3D25               	addwfc	?___aldiv+1,w
 13953  13FC  0023               	movlb	3	; select bank3
 13954  13FD  00AD               	movwf	((_cellVoltages+1)^(0+384)+2)
 13955                           
 13956                           ;BQ76920.c: 248:     adcVal = ((readRegister(0x18, 0x10) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x11);
 13957  13FE  3018               	movlw	24
 13958  13FF  00F5               	movwf	readRegister@slaveAddress
 13959  1400  3000               	movlw	0
 13960  1401  00F6               	movwf	readRegister@slaveAddress+1
 13961  1402  3010               	movlw	16
 13962  1403  00F7               	movwf	readRegister@regAddress
 13963  1404  3000               	movlw	0
 13964  1405  00F8               	movwf	readRegister@regAddress+1
 13965  1406  31B6  2621  3192   	fcall	_readRegister
 13966  1409  303F               	movlw	63
 13967  140A  0575               	andwf	?_readRegister,w
 13968  140B  0021               	movlb	1	; select bank1
 13969  140C  00B1               	movwf	??_updateVoltages^(0+128)
 13970  140D  3000               	movlw	0
 13971  140E  0576               	andwf	?_readRegister+1,w
 13972  140F  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13973  1410  0831               	movf	??_updateVoltages^(0+128),w
 13974  1411  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13975  1412  01B1               	clrf	??_updateVoltages^(0+128)
 13976  1413  3018               	movlw	24
 13977  1414  00F5               	movwf	readRegister@slaveAddress
 13978  1415  3000               	movlw	0
 13979  1416  00F6               	movwf	readRegister@slaveAddress+1
 13980  1417  3011               	movlw	17
 13981  1418  00F7               	movwf	readRegister@regAddress
 13982  1419  3000               	movlw	0
 13983  141A  00F8               	movwf	readRegister@regAddress+1
 13984  141B  31B6  2621  3192   	fcall	_readRegister
 13985  141E  0875               	movf	?_readRegister,w
 13986  141F  0021               	movlb	1	; select bank1
 13987  1420  0431               	iorwf	??_updateVoltages^(0+128),w
 13988  1421  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13989  1422  0876               	movf	?_readRegister+1,w
 13990  1423  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13991  1424  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13992  1425  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13993  1426  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13994  1427  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13995  1428  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13996  1429  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13997                           
 13998                           ;BQ76920.c: 249:     cellVoltages[2] = (adcVal * adcGain / 1000) + adcOffset;
 13999  142A  3000               	movlw	0
 14000  142B  0020               	movlb	0	; select bank0
 14001  142C  00A7               	movwf	___aldiv@divisor+3
 14002  142D  3000               	movlw	0
 14003  142E  00A6               	movwf	___aldiv@divisor+2
 14004  142F  3003               	movlw	3
 14005  1430  00A5               	movwf	___aldiv@divisor+1
 14006  1431  30E8               	movlw	232
 14007  1432  00A4               	movwf	___aldiv@divisor
 14008  1433  0022               	movlb	2	; select bank2
 14009  1434  086D               	movf	_adcGain^(0+256),w
 14010  1435  00F1               	movwf	___lmul@multiplier
 14011  1436  086E               	movf	(_adcGain+1)^(0+256),w
 14012  1437  00F2               	movwf	___lmul@multiplier+1
 14013  1438  0D89               	rlf	9,f
 14014  1439  3B89               	subwfb	9,f
 14015  143A  0989               	comf	9,f
 14016  143B  00F3               	movwf	___lmul@multiplier+2
 14017  143C  00F4               	movwf	___lmul@multiplier+3
 14018  143D  0021               	movlb	1	; select bank1
 14019  143E  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 14020  143F  00F8               	movwf	___lmul@multiplicand+3
 14021  1440  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 14022  1441  00F7               	movwf	___lmul@multiplicand+2
 14023  1442  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 14024  1443  00F6               	movwf	___lmul@multiplicand+1
 14025  1444  0838               	movf	updateVoltages@adcVal^(0+128),w
 14026  1445  00F5               	movwf	___lmul@multiplicand
 14027  1446  31B5  2588  3192   	fcall	___lmul
 14028  1449  0874               	movf	?___lmul+3,w
 14029  144A  0020               	movlb	0	; select bank0
 14030  144B  00AB               	movwf	___aldiv@dividend+3
 14031  144C  0873               	movf	?___lmul+2,w
 14032  144D  00AA               	movwf	___aldiv@dividend+2
 14033  144E  0872               	movf	?___lmul+1,w
 14034  144F  00A9               	movwf	___aldiv@dividend+1
 14035  1450  0871               	movf	?___lmul,w
 14036  1451  00A8               	movwf	___aldiv@dividend
 14037  1452  31AB  2322  3192   	fcall	___aldiv
 14038  1455  0022               	movlb	2	; select bank2
 14039  1456  086B               	movf	_adcOffset^(0+256),w
 14040  1457  0020               	movlb	0	; select bank0
 14041  1458  0724               	addwf	?___aldiv,w
 14042  1459  0023               	movlb	3	; select bank3
 14043  145A  00AE               	movwf	(_cellVoltages^(0+384)+4)
 14044  145B  0022               	movlb	2	; select bank2
 14045  145C  086C               	movf	(_adcOffset+1)^(0+256),w
 14046  145D  0020               	movlb	0	; select bank0
 14047  145E  3D25               	addwfc	?___aldiv+1,w
 14048  145F  0023               	movlb	3	; select bank3
 14049  1460  00AF               	movwf	((_cellVoltages+1)^(0+384)+4)
 14050                           
 14051                           ;BQ76920.c: 250:     adcVal = ((readRegister(0x18, 0x12) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x13);
 14052  1461  3018               	movlw	24
 14053  1462  00F5               	movwf	readRegister@slaveAddress
 14054  1463  3000               	movlw	0
 14055  1464  00F6               	movwf	readRegister@slaveAddress+1
 14056  1465  3012               	movlw	18
 14057  1466  00F7               	movwf	readRegister@regAddress
 14058  1467  3000               	movlw	0
 14059  1468  00F8               	movwf	readRegister@regAddress+1
 14060  1469  31B6  2621  3192   	fcall	_readRegister
 14061  146C  303F               	movlw	63
 14062  146D  0575               	andwf	?_readRegister,w
 14063  146E  0021               	movlb	1	; select bank1
 14064  146F  00B1               	movwf	??_updateVoltages^(0+128)
 14065  1470  3000               	movlw	0
 14066  1471  0576               	andwf	?_readRegister+1,w
 14067  1472  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 14068  1473  0831               	movf	??_updateVoltages^(0+128),w
 14069  1474  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 14070  1475  01B1               	clrf	??_updateVoltages^(0+128)
 14071  1476  3018               	movlw	24
 14072  1477  00F5               	movwf	readRegister@slaveAddress
 14073  1478  3000               	movlw	0
 14074  1479  00F6               	movwf	readRegister@slaveAddress+1
 14075  147A  3013               	movlw	19
 14076  147B  00F7               	movwf	readRegister@regAddress
 14077  147C  3000               	movlw	0
 14078  147D  00F8               	movwf	readRegister@regAddress+1
 14079  147E  31B6  2621  3192   	fcall	_readRegister
 14080  1481  0875               	movf	?_readRegister,w
 14081  1482  0021               	movlb	1	; select bank1
 14082  1483  0431               	iorwf	??_updateVoltages^(0+128),w
 14083  1484  00B8               	movwf	updateVoltages@adcVal^(0+128)
 14084  1485  0876               	movf	?_readRegister+1,w
 14085  1486  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 14086  1487  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 14087  1488  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 14088  1489  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 14089  148A  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 14090  148B  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 14091  148C  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 14092                           
 14093                           ;BQ76920.c: 251:     cellVoltages[3] = (adcVal * adcGain / 1000) + adcOffset;
 14094  148D  3000               	movlw	0
 14095  148E  0020               	movlb	0	; select bank0
 14096  148F  00A7               	movwf	___aldiv@divisor+3
 14097  1490  3000               	movlw	0
 14098  1491  00A6               	movwf	___aldiv@divisor+2
 14099  1492  3003               	movlw	3
 14100  1493  00A5               	movwf	___aldiv@divisor+1
 14101  1494  30E8               	movlw	232
 14102  1495  00A4               	movwf	___aldiv@divisor
 14103  1496  0022               	movlb	2	; select bank2
 14104  1497  086D               	movf	_adcGain^(0+256),w
 14105  1498  00F1               	movwf	___lmul@multiplier
 14106  1499  086E               	movf	(_adcGain+1)^(0+256),w
 14107  149A  00F2               	movwf	___lmul@multiplier+1
 14108  149B  0D89               	rlf	9,f
 14109  149C  3B89               	subwfb	9,f
 14110  149D  0989               	comf	9,f
 14111  149E  00F3               	movwf	___lmul@multiplier+2
 14112  149F  00F4               	movwf	___lmul@multiplier+3
 14113  14A0  0021               	movlb	1	; select bank1
 14114  14A1  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 14115  14A2  00F8               	movwf	___lmul@multiplicand+3
 14116  14A3  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 14117  14A4  00F7               	movwf	___lmul@multiplicand+2
 14118  14A5  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 14119  14A6  00F6               	movwf	___lmul@multiplicand+1
 14120  14A7  0838               	movf	updateVoltages@adcVal^(0+128),w
 14121  14A8  00F5               	movwf	___lmul@multiplicand
 14122  14A9  31B5  2588  3192   	fcall	___lmul
 14123  14AC  0874               	movf	?___lmul+3,w
 14124  14AD  0020               	movlb	0	; select bank0
 14125  14AE  00AB               	movwf	___aldiv@dividend+3
 14126  14AF  0873               	movf	?___lmul+2,w
 14127  14B0  00AA               	movwf	___aldiv@dividend+2
 14128  14B1  0872               	movf	?___lmul+1,w
 14129  14B2  00A9               	movwf	___aldiv@dividend+1
 14130  14B3  0871               	movf	?___lmul,w
 14131  14B4  00A8               	movwf	___aldiv@dividend
 14132  14B5  31AB  2322  3192   	fcall	___aldiv
 14133  14B8  0022               	movlb	2	; select bank2
 14134  14B9  086B               	movf	_adcOffset^(0+256),w
 14135  14BA  0020               	movlb	0	; select bank0
 14136  14BB  0724               	addwf	?___aldiv,w
 14137  14BC  0023               	movlb	3	; select bank3
 14138  14BD  00B0               	movwf	(_cellVoltages^(0+384)+6)
 14139  14BE  0022               	movlb	2	; select bank2
 14140  14BF  086C               	movf	(_adcOffset+1)^(0+256),w
 14141  14C0  0020               	movlb	0	; select bank0
 14142  14C1  3D25               	addwfc	?___aldiv+1,w
 14143  14C2  0023               	movlb	3	; select bank3
 14144  14C3  00B1               	movwf	((_cellVoltages+1)^(0+384)+6)
 14145                           
 14146                           ;BQ76920.c: 252:     adcVal = ((readRegister(0x18, 0x14) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x15);
 14147  14C4  3018               	movlw	24
 14148  14C5  00F5               	movwf	readRegister@slaveAddress
 14149  14C6  3000               	movlw	0
 14150  14C7  00F6               	movwf	readRegister@slaveAddress+1
 14151  14C8  3014               	movlw	20
 14152  14C9  00F7               	movwf	readRegister@regAddress
 14153  14CA  3000               	movlw	0
 14154  14CB  00F8               	movwf	readRegister@regAddress+1
 14155  14CC  31B6  2621  3192   	fcall	_readRegister
 14156  14CF  303F               	movlw	63
 14157  14D0  0575               	andwf	?_readRegister,w
 14158  14D1  0021               	movlb	1	; select bank1
 14159  14D2  00B1               	movwf	??_updateVoltages^(0+128)
 14160  14D3  3000               	movlw	0
 14161  14D4  0576               	andwf	?_readRegister+1,w
 14162  14D5  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 14163  14D6  0831               	movf	??_updateVoltages^(0+128),w
 14164  14D7  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 14165  14D8  01B1               	clrf	??_updateVoltages^(0+128)
 14166  14D9  3018               	movlw	24
 14167  14DA  00F5               	movwf	readRegister@slaveAddress
 14168  14DB  3000               	movlw	0
 14169  14DC  00F6               	movwf	readRegister@slaveAddress+1
 14170  14DD  3015               	movlw	21
 14171  14DE  00F7               	movwf	readRegister@regAddress
 14172  14DF  3000               	movlw	0
 14173  14E0  00F8               	movwf	readRegister@regAddress+1
 14174  14E1  31B6  2621  3192   	fcall	_readRegister
 14175  14E4  0875               	movf	?_readRegister,w
 14176  14E5  0021               	movlb	1	; select bank1
 14177  14E6  0431               	iorwf	??_updateVoltages^(0+128),w
 14178  14E7  00B8               	movwf	updateVoltages@adcVal^(0+128)
 14179  14E8  0876               	movf	?_readRegister+1,w
 14180  14E9  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 14181  14EA  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 14182  14EB  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 14183  14EC  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 14184  14ED  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 14185  14EE  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 14186  14EF  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 14187                           
 14188                           ;BQ76920.c: 253:     cellVoltages[4] = (adcVal * adcGain / 1000) + adcOffset;
 14189  14F0  3000               	movlw	0
 14190  14F1  0020               	movlb	0	; select bank0
 14191  14F2  00A7               	movwf	___aldiv@divisor+3
 14192  14F3  3000               	movlw	0
 14193  14F4  00A6               	movwf	___aldiv@divisor+2
 14194  14F5  3003               	movlw	3
 14195  14F6  00A5               	movwf	___aldiv@divisor+1
 14196  14F7  30E8               	movlw	232
 14197  14F8  00A4               	movwf	___aldiv@divisor
 14198  14F9  0022               	movlb	2	; select bank2
 14199  14FA  086D               	movf	_adcGain^(0+256),w
 14200  14FB  00F1               	movwf	___lmul@multiplier
 14201  14FC  086E               	movf	(_adcGain+1)^(0+256),w
 14202  14FD  00F2               	movwf	___lmul@multiplier+1
 14203  14FE  0D89               	rlf	9,f
 14204  14FF  3B89               	subwfb	9,f
 14205  1500  0989               	comf	9,f
 14206  1501  00F3               	movwf	___lmul@multiplier+2
 14207  1502  00F4               	movwf	___lmul@multiplier+3
 14208  1503  0021               	movlb	1	; select bank1
 14209  1504  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 14210  1505  00F8               	movwf	___lmul@multiplicand+3
 14211  1506  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 14212  1507  00F7               	movwf	___lmul@multiplicand+2
 14213  1508  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 14214  1509  00F6               	movwf	___lmul@multiplicand+1
 14215  150A  0838               	movf	updateVoltages@adcVal^(0+128),w
 14216  150B  00F5               	movwf	___lmul@multiplicand
 14217  150C  31B5  2588  3192   	fcall	___lmul
 14218  150F  0874               	movf	?___lmul+3,w
 14219  1510  0020               	movlb	0	; select bank0
 14220  1511  00AB               	movwf	___aldiv@dividend+3
 14221  1512  0873               	movf	?___lmul+2,w
 14222  1513  00AA               	movwf	___aldiv@dividend+2
 14223  1514  0872               	movf	?___lmul+1,w
 14224  1515  00A9               	movwf	___aldiv@dividend+1
 14225  1516  0871               	movf	?___lmul,w
 14226  1517  00A8               	movwf	___aldiv@dividend
 14227  1518  31AB  2322         	fcall	___aldiv
 14228  151A  0022               	movlb	2	; select bank2
 14229  151B  086B               	movf	_adcOffset^(0+256),w
 14230  151C  0020               	movlb	0	; select bank0
 14231  151D  0724               	addwf	?___aldiv,w
 14232  151E  0023               	movlb	3	; select bank3
 14233  151F  00B2               	movwf	(_cellVoltages^(0+384)+8)
 14234  1520  0022               	movlb	2	; select bank2
 14235  1521  086C               	movf	(_adcOffset+1)^(0+256),w
 14236  1522  0020               	movlb	0	; select bank0
 14237  1523  3D25               	addwfc	?___aldiv+1,w
 14238  1524  0023               	movlb	3	; select bank3
 14239  1525  00B3               	movwf	((_cellVoltages+1)^(0+384)+8)
 14240  1526  0008               	return
 14241  1527                     __end_of_updateVoltages:	
 14242                           
 14243                           	psect	text48
 14244  3588                     __ptext48:	
 14245 ;; *************** function ___lmul *****************
 14246 ;; Defined at:
 14247 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c"
 14248 ;; Parameters:    Size  Location     Type
 14249 ;;  multiplier      4    1[COMMON] unsigned long 
 14250 ;;  multiplicand    4    5[COMMON] unsigned long 
 14251 ;; Auto vars:     Size  Location     Type
 14252 ;;  product         4    0[BANK0 ] unsigned long 
 14253 ;; Return value:  Size  Location     Type
 14254 ;;                  4    1[COMMON] unsigned long 
 14255 ;; Registers used:
 14256 ;;		wreg, status,2, status,0
 14257 ;; Tracked objects:
 14258 ;;		On entry : 0/0
 14259 ;;		On exit  : 0/0
 14260 ;;		Unchanged: 0/0
 14261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14262 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14263 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14265 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14266 ;;Total ram usage:       12 bytes
 14267 ;; Hardware stack levels used:    1
 14268 ;; Hardware stack levels required when called:    1
 14269 ;; This function calls:
 14270 ;;		Nothing
 14271 ;; This function is called by:
 14272 ;;		_setCellUndervoltageProtection
 14273 ;;		_setCellOvervoltageProtection
 14274 ;;		_updateVoltages
 14275 ;; This function uses a non-reentrant model
 14276 ;;
 14277                           
 14278                           
 14279                           ;psect for function ___lmul
 14280  3588                     ___lmul:	
 14281                           
 14282                           ;incstack = 0
 14283                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 14284  3588  3000               	movlw	0
 14285  3589  0020               	movlb	0	; select bank0
 14286  358A  00A3               	movwf	___lmul@product+3
 14287  358B  3000               	movlw	0
 14288  358C  00A2               	movwf	___lmul@product+2
 14289  358D  3000               	movlw	0
 14290  358E  00A1               	movwf	___lmul@product+1
 14291  358F  3000               	movlw	0
 14292  3590  00A0               	movwf	___lmul@product
 14293  3591                     l8011:	
 14294  3591  1C71               	btfss	___lmul@multiplier,0
 14295  3592  2D9C               	goto	l8015
 14296  3593  0875               	movf	___lmul@multiplicand,w
 14297  3594  0020               	movlb	0	; select bank0
 14298  3595  07A0               	addwf	___lmul@product,f
 14299  3596  0876               	movf	___lmul@multiplicand+1,w
 14300  3597  3DA1               	addwfc	___lmul@product+1,f
 14301  3598  0877               	movf	___lmul@multiplicand+2,w
 14302  3599  3DA2               	addwfc	___lmul@product+2,f
 14303  359A  0878               	movf	___lmul@multiplicand+3,w
 14304  359B  3DA3               	addwfc	___lmul@product+3,f
 14305  359C                     l8015:	
 14306  359C  3001               	movlw	1
 14307  359D                     u10875:	
 14308  359D  35F5               	lslf	___lmul@multiplicand,f
 14309  359E  0DF6               	rlf	___lmul@multiplicand+1,f
 14310  359F  0DF7               	rlf	___lmul@multiplicand+2,f
 14311  35A0  0DF8               	rlf	___lmul@multiplicand+3,f
 14312  35A1  0B89               	decfsz	9,f
 14313  35A2  2D9D               	goto	u10875
 14314  35A3  3001               	movlw	1
 14315  35A4                     u10885:	
 14316  35A4  36F4               	lsrf	___lmul@multiplier+3,f
 14317  35A5  0CF3               	rrf	___lmul@multiplier+2,f
 14318  35A6  0CF2               	rrf	___lmul@multiplier+1,f
 14319  35A7  0CF1               	rrf	___lmul@multiplier,f
 14320  35A8  0B89               	decfsz	9,f
 14321  35A9  2DA4               	goto	u10885
 14322  35AA  0874               	movf	___lmul@multiplier+3,w
 14323  35AB  0473               	iorwf	___lmul@multiplier+2,w
 14324  35AC  0472               	iorwf	___lmul@multiplier+1,w
 14325  35AD  0471               	iorwf	___lmul@multiplier,w
 14326  35AE  1D03               	skipz
 14327  35AF  2D91               	goto	l8011
 14328  35B0  0020               	movlb	0	; select bank0
 14329  35B1  0823               	movf	___lmul@product+3,w
 14330  35B2  00F4               	movwf	?___lmul+3
 14331  35B3  0822               	movf	___lmul@product+2,w
 14332  35B4  00F3               	movwf	?___lmul+2
 14333  35B5  0821               	movf	___lmul@product+1,w
 14334  35B6  00F2               	movwf	?___lmul+1
 14335  35B7  0820               	movf	___lmul@product,w
 14336  35B8  00F1               	movwf	?___lmul
 14337  35B9  0008               	return
 14338  35BA                     __end_of___lmul:	
 14339                           
 14340                           	psect	text49
 14341  1527                     __ptext49:	
 14342 ;; *************** function _updateTemperatures *****************
 14343 ;; Defined at:
 14344 ;;		line 260 in file "BQ76920.c"
 14345 ;; Parameters:    Size  Location     Type
 14346 ;;		None
 14347 ;; Auto vars:     Size  Location     Type
 14348 ;;  rts             4   75[BANK1 ] unsigned long 
 14349 ;;  tmp             4   67[BANK1 ] float 
 14350 ;;  vtsx            2   73[BANK1 ] int 
 14351 ;;  adcVal          2   71[BANK1 ] int 
 14352 ;; Return value:  Size  Location     Type
 14353 ;;                  1    wreg      void 
 14354 ;; Registers used:
 14355 ;;		wreg, status,2, status,0, pclath, cstack
 14356 ;; Tracked objects:
 14357 ;;		On entry : 0/0
 14358 ;;		On exit  : 0/0
 14359 ;;		Unchanged: 0/0
 14360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14362 ;;      Locals:         0       0      56       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14363 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14364 ;;      Totals:         0       0      59       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14365 ;;Total ram usage:       59 bytes
 14366 ;; Hardware stack levels used:    1
 14367 ;; Hardware stack levels required when called:    4
 14368 ;; This function calls:
 14369 ;;		___fladd
 14370 ;;		___fldiv
 14371 ;;		___flmul
 14372 ;;		___flsub
 14373 ;;		___fltol
 14374 ;;		___xxtofl
 14375 ;;		_logf
 14376 ;;		_readRegister
 14377 ;; This function is called by:
 14378 ;;		_AFE_UPDATE
 14379 ;; This function uses a non-reentrant model
 14380 ;;
 14381                           
 14382                           
 14383                           ;psect for function _updateTemperatures
 14384  1527                     _updateTemperatures:	
 14385                           
 14386                           ;BQ76920.c: 264:      unsigned long rts = 0;
 14387                           
 14388                           ;incstack = 0
 14389                           ; Regs used in _updateTemperatures: [wreg+status,2+status,0+pclath+cstack]
 14390  1527  3000               	movlw	0
 14391  1528  0021               	movlb	1	; select bank1
 14392  1529  00EE               	movwf	(updateTemperatures@rts+3)^(0+128)
 14393  152A  3000               	movlw	0
 14394  152B  00ED               	movwf	(updateTemperatures@rts+2)^(0+128)
 14395  152C  3000               	movlw	0
 14396  152D  00EC               	movwf	(updateTemperatures@rts+1)^(0+128)
 14397  152E  3000               	movlw	0
 14398  152F  00EB               	movwf	updateTemperatures@rts^(0+128)
 14399                           
 14400                           ;BQ76920.c: 266:      adcVal = ((readRegister(0x18, 0x2C) & 0x3F) << 8) | readRegister(0
      +                          x18, 0x2D);
 14401  1530  3018               	movlw	24
 14402  1531  00F5               	movwf	readRegister@slaveAddress
 14403  1532  3000               	movlw	0
 14404  1533  00F6               	movwf	readRegister@slaveAddress+1
 14405  1534  302C               	movlw	44
 14406  1535  00F7               	movwf	readRegister@regAddress
 14407  1536  3000               	movlw	0
 14408  1537  00F8               	movwf	readRegister@regAddress+1
 14409  1538  31B6  2621  3195   	fcall	_readRegister
 14410  153B  303F               	movlw	63
 14411  153C  0575               	andwf	?_readRegister,w
 14412  153D  0021               	movlb	1	; select bank1
 14413  153E  00B4               	movwf	??_updateTemperatures^(0+128)
 14414  153F  3000               	movlw	0
 14415  1540  0576               	andwf	?_readRegister+1,w
 14416  1541  00B5               	movwf	(??_updateTemperatures+1)^(0+128)
 14417  1542  0834               	movf	??_updateTemperatures^(0+128),w
 14418  1543  00B5               	movwf	(??_updateTemperatures^(0+128)+1)
 14419  1544  01B4               	clrf	??_updateTemperatures^(0+128)
 14420  1545  3018               	movlw	24
 14421  1546  00F5               	movwf	readRegister@slaveAddress
 14422  1547  3000               	movlw	0
 14423  1548  00F6               	movwf	readRegister@slaveAddress+1
 14424  1549  302D               	movlw	45
 14425  154A  00F7               	movwf	readRegister@regAddress
 14426  154B  3000               	movlw	0
 14427  154C  00F8               	movwf	readRegister@regAddress+1
 14428  154D  31B6  2621  3195   	fcall	_readRegister
 14429  1550  0875               	movf	?_readRegister,w
 14430  1551  0021               	movlb	1	; select bank1
 14431  1552  0434               	iorwf	??_updateTemperatures^(0+128),w
 14432  1553  00E7               	movwf	updateTemperatures@adcVal^(0+128)
 14433  1554  0876               	movf	?_readRegister+1,w
 14434  1555  0435               	iorwf	(??_updateTemperatures+1)^(0+128),w
 14435  1556  00E8               	movwf	(updateTemperatures@adcVal+1)^(0+128)
 14436                           
 14437                           ;BQ76920.c: 267:      vtsx = adcVal * 0.382;
 14438  1557  0867               	movf	updateTemperatures@adcVal^(0+128),w
 14439  1558  00F1               	movwf	___xxtofl@val
 14440  1559  0868               	movf	(updateTemperatures@adcVal+1)^(0+128),w
 14441  155A  00F2               	movwf	___xxtofl@val+1
 14442  155B  0D89               	rlf	9,f
 14443  155C  3B89               	subwfb	9,f
 14444  155D  0989               	comf	9,f
 14445  155E  00F3               	movwf	___xxtofl@val+2
 14446  155F  00F4               	movwf	___xxtofl@val+3
 14447  1560  3001               	movlw	1
 14448  1561  3198  2009  3195   	fcall	___xxtofl
 14449  1564  0874               	movf	?___xxtofl+3,w
 14450  1565  0020               	movlb	0	; select bank0
 14451  1566  00AD               	movwf	___flmul@a+3
 14452  1567  0873               	movf	?___xxtofl+2,w
 14453  1568  00AC               	movwf	___flmul@a+2
 14454  1569  0872               	movf	?___xxtofl+1,w
 14455  156A  00AB               	movwf	___flmul@a+1
 14456  156B  0871               	movf	?___xxtofl,w
 14457  156C  00AA               	movwf	___flmul@a
 14458  156D  303E               	movlw	62
 14459  156E  00A9               	movwf	___flmul@b+3
 14460  156F  30C3               	movlw	195
 14461  1570  00A8               	movwf	___flmul@b+2
 14462  1571  3095               	movlw	149
 14463  1572  00A7               	movwf	___flmul@b+1
 14464  1573  3081               	movlw	129
 14465  1574  00A6               	movwf	___flmul@b
 14466  1575  3190  2023  3195   	fcall	___flmul
 14467  1578  0020               	movlb	0	; select bank0
 14468  1579  0829               	movf	?___flmul+3,w
 14469  157A  0021               	movlb	1	; select bank1
 14470  157B  00AB               	movwf	(___fltol@f1+3)^(0+128)
 14471  157C  0020               	movlb	0	; select bank0
 14472  157D  0828               	movf	?___flmul+2,w
 14473  157E  0021               	movlb	1	; select bank1
 14474  157F  00AA               	movwf	(___fltol@f1+2)^(0+128)
 14475  1580  0020               	movlb	0	; select bank0
 14476  1581  0827               	movf	?___flmul+1,w
 14477  1582  0021               	movlb	1	; select bank1
 14478  1583  00A9               	movwf	(___fltol@f1+1)^(0+128)
 14479  1584  0020               	movlb	0	; select bank0
 14480  1585  0826               	movf	?___flmul,w
 14481  1586  0021               	movlb	1	; select bank1
 14482  1587  00A8               	movwf	___fltol@f1^(0+128)
 14483  1588  31A8  2067  3195   	fcall	___fltol
 14484  158B  0021               	movlb	1	; select bank1
 14485  158C  0829               	movf	(?___fltol+1)^(0+128),w
 14486  158D  00EA               	movwf	(updateTemperatures@vtsx+1)^(0+128)
 14487  158E  0828               	movf	?___fltol^(0+128),w
 14488  158F  00E9               	movwf	updateTemperatures@vtsx^(0+128)
 14489                           
 14490                           ;BQ76920.c: 268:      rts = 10000.0 * vtsx / (3300.0 - vtsx);
 14491  1590  0869               	movf	updateTemperatures@vtsx^(0+128),w
 14492  1591  00F1               	movwf	___xxtofl@val
 14493  1592  086A               	movf	(updateTemperatures@vtsx+1)^(0+128),w
 14494  1593  00F2               	movwf	___xxtofl@val+1
 14495  1594  0D89               	rlf	9,f
 14496  1595  3B89               	subwfb	9,f
 14497  1596  0989               	comf	9,f
 14498  1597  00F3               	movwf	___xxtofl@val+2
 14499  1598  00F4               	movwf	___xxtofl@val+3
 14500  1599  3001               	movlw	1
 14501  159A  3198  2009  3195   	fcall	___xxtofl
 14502  159D  0874               	movf	?___xxtofl+3,w
 14503  159E  0020               	movlb	0	; select bank0
 14504  159F  00AD               	movwf	___flmul@a+3
 14505  15A0  0873               	movf	?___xxtofl+2,w
 14506  15A1  00AC               	movwf	___flmul@a+2
 14507  15A2  0872               	movf	?___xxtofl+1,w
 14508  15A3  00AB               	movwf	___flmul@a+1
 14509  15A4  0871               	movf	?___xxtofl,w
 14510  15A5  00AA               	movwf	___flmul@a
 14511  15A6  3046               	movlw	70
 14512  15A7  00A9               	movwf	___flmul@b+3
 14513  15A8  301C               	movlw	28
 14514  15A9  00A8               	movwf	___flmul@b+2
 14515  15AA  3040               	movlw	64
 14516  15AB  00A7               	movwf	___flmul@b+1
 14517  15AC  3000               	movlw	0
 14518  15AD  00A6               	movwf	___flmul@b
 14519  15AE  3190  2023  3195   	fcall	___flmul
 14520  15B1  0020               	movlb	0	; select bank0
 14521  15B2  0829               	movf	?___flmul+3,w
 14522  15B3  00C7               	movwf	___fldiv@b+3
 14523  15B4  0828               	movf	?___flmul+2,w
 14524  15B5  00C6               	movwf	___fldiv@b+2
 14525  15B6  0827               	movf	?___flmul+1,w
 14526  15B7  00C5               	movwf	___fldiv@b+1
 14527  15B8  0826               	movf	?___flmul,w
 14528  15B9  00C4               	movwf	___fldiv@b
 14529  15BA  3045               	movlw	69
 14530  15BB  0021               	movlb	1	; select bank1
 14531  15BC  00A7               	movwf	(___flsub@b+3)^(0+128)
 14532  15BD  304E               	movlw	78
 14533  15BE  00A6               	movwf	(___flsub@b+2)^(0+128)
 14534  15BF  3040               	movlw	64
 14535  15C0  00A5               	movwf	(___flsub@b+1)^(0+128)
 14536  15C1  3000               	movlw	0
 14537  15C2  00A4               	movwf	___flsub@b^(0+128)
 14538  15C3  0869               	movf	updateTemperatures@vtsx^(0+128),w
 14539  15C4  00F1               	movwf	___xxtofl@val
 14540  15C5  086A               	movf	(updateTemperatures@vtsx+1)^(0+128),w
 14541  15C6  00F2               	movwf	___xxtofl@val+1
 14542  15C7  0D89               	rlf	9,f
 14543  15C8  3B89               	subwfb	9,f
 14544  15C9  0989               	comf	9,f
 14545  15CA  00F3               	movwf	___xxtofl@val+2
 14546  15CB  00F4               	movwf	___xxtofl@val+3
 14547  15CC  3001               	movlw	1
 14548  15CD  3198  2009  3195   	fcall	___xxtofl
 14549  15D0  0874               	movf	?___xxtofl+3,w
 14550  15D1  0021               	movlb	1	; select bank1
 14551  15D2  00A3               	movwf	(___flsub@a+3)^(0+128)
 14552  15D3  0873               	movf	?___xxtofl+2,w
 14553  15D4  00A2               	movwf	(___flsub@a+2)^(0+128)
 14554  15D5  0872               	movf	?___xxtofl+1,w
 14555  15D6  00A1               	movwf	(___flsub@a+1)^(0+128)
 14556  15D7  0871               	movf	?___xxtofl,w
 14557  15D8  00A0               	movwf	___flsub@a^(0+128)
 14558  15D9  31B5  25EC  3195   	fcall	___flsub
 14559  15DC  0021               	movlb	1	; select bank1
 14560  15DD  0823               	movf	(?___flsub+3)^(0+128),w
 14561  15DE  0020               	movlb	0	; select bank0
 14562  15DF  00C3               	movwf	___fldiv@a+3
 14563  15E0  0021               	movlb	1	; select bank1
 14564  15E1  0822               	movf	(?___flsub+2)^(0+128),w
 14565  15E2  0020               	movlb	0	; select bank0
 14566  15E3  00C2               	movwf	___fldiv@a+2
 14567  15E4  0021               	movlb	1	; select bank1
 14568  15E5  0821               	movf	(?___flsub+1)^(0+128),w
 14569  15E6  0020               	movlb	0	; select bank0
 14570  15E7  00C1               	movwf	___fldiv@a+1
 14571  15E8  0021               	movlb	1	; select bank1
 14572  15E9  0820               	movf	?___flsub^(0+128),w
 14573  15EA  0020               	movlb	0	; select bank0
 14574  15EB  00C0               	movwf	___fldiv@a
 14575  15EC  319B  234B  3195   	fcall	___fldiv
 14576  15EF  0020               	movlb	0	; select bank0
 14577  15F0  0843               	movf	?___fldiv+3,w
 14578  15F1  0021               	movlb	1	; select bank1
 14579  15F2  00AB               	movwf	(___fltol@f1+3)^(0+128)
 14580  15F3  0020               	movlb	0	; select bank0
 14581  15F4  0842               	movf	?___fldiv+2,w
 14582  15F5  0021               	movlb	1	; select bank1
 14583  15F6  00AA               	movwf	(___fltol@f1+2)^(0+128)
 14584  15F7  0020               	movlb	0	; select bank0
 14585  15F8  0841               	movf	?___fldiv+1,w
 14586  15F9  0021               	movlb	1	; select bank1
 14587  15FA  00A9               	movwf	(___fltol@f1+1)^(0+128)
 14588  15FB  0020               	movlb	0	; select bank0
 14589  15FC  0840               	movf	?___fldiv,w
 14590  15FD  0021               	movlb	1	; select bank1
 14591  15FE  00A8               	movwf	___fltol@f1^(0+128)
 14592  15FF  31A8  2067  3195   	fcall	___fltol
 14593  1602  0021               	movlb	1	; select bank1
 14594  1603  082B               	movf	(?___fltol+3)^(0+128),w
 14595  1604  00EE               	movwf	(updateTemperatures@rts+3)^(0+128)
 14596  1605  082A               	movf	(?___fltol+2)^(0+128),w
 14597  1606  00ED               	movwf	(updateTemperatures@rts+2)^(0+128)
 14598  1607  0829               	movf	(?___fltol+1)^(0+128),w
 14599  1608  00EC               	movwf	(updateTemperatures@rts+1)^(0+128)
 14600  1609  0828               	movf	?___fltol^(0+128),w
 14601  160A  00EB               	movwf	updateTemperatures@rts^(0+128)
 14602                           
 14603                           ;BQ76920.c: 275:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14604  160B  086E               	movf	(updateTemperatures@rts+3)^(0+128),w
 14605  160C  00F4               	movwf	___xxtofl@val+3
 14606  160D  086D               	movf	(updateTemperatures@rts+2)^(0+128),w
 14607  160E  00F3               	movwf	___xxtofl@val+2
 14608  160F  086C               	movf	(updateTemperatures@rts+1)^(0+128),w
 14609  1610  00F2               	movwf	___xxtofl@val+1
 14610  1611  086B               	movf	updateTemperatures@rts^(0+128),w
 14611  1612  00F1               	movwf	___xxtofl@val
 14612  1613  3000               	movlw	0
 14613  1614  3198  2009  3195   	fcall	___xxtofl
 14614  1617  0874               	movf	?___xxtofl+3,w
 14615  1618  0021               	movlb	1	; select bank1
 14616  1619  00BA               	movwf	(_updateTemperatures$2079+3)^(0+128)
 14617  161A  0873               	movf	?___xxtofl+2,w
 14618  161B  00B9               	movwf	(_updateTemperatures$2079+2)^(0+128)
 14619  161C  0872               	movf	?___xxtofl+1,w
 14620  161D  00B8               	movwf	(_updateTemperatures$2079+1)^(0+128)
 14621  161E  0871               	movf	?___xxtofl,w
 14622  161F  00B7               	movwf	_updateTemperatures$2079^(0+128)
 14623                           
 14624                           ;BQ76920.c: 275:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14625  1620  086E               	movf	(updateTemperatures@rts+3)^(0+128),w
 14626  1621  00F4               	movwf	___xxtofl@val+3
 14627  1622  086D               	movf	(updateTemperatures@rts+2)^(0+128),w
 14628  1623  00F3               	movwf	___xxtofl@val+2
 14629  1624  086C               	movf	(updateTemperatures@rts+1)^(0+128),w
 14630  1625  00F2               	movwf	___xxtofl@val+1
 14631  1626  086B               	movf	updateTemperatures@rts^(0+128),w
 14632  1627  00F1               	movwf	___xxtofl@val
 14633  1628  3000               	movlw	0
 14634  1629  3198  2009  3195   	fcall	___xxtofl
 14635  162C  0874               	movf	?___xxtofl+3,w
 14636  162D  0021               	movlb	1	; select bank1
 14637  162E  00BE               	movwf	(_updateTemperatures$2080+3)^(0+128)
 14638  162F  0873               	movf	?___xxtofl+2,w
 14639  1630  00BD               	movwf	(_updateTemperatures$2080+2)^(0+128)
 14640  1631  0872               	movf	?___xxtofl+1,w
 14641  1632  00BC               	movwf	(_updateTemperatures$2080+1)^(0+128)
 14642  1633  0871               	movf	?___xxtofl,w
 14643  1634  00BB               	movwf	_updateTemperatures$2080^(0+128)
 14644                           
 14645                           ;BQ76920.c: 275:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14646  1635  086E               	movf	(updateTemperatures@rts+3)^(0+128),w
 14647  1636  00F4               	movwf	___xxtofl@val+3
 14648  1637  086D               	movf	(updateTemperatures@rts+2)^(0+128),w
 14649  1638  00F3               	movwf	___xxtofl@val+2
 14650  1639  086C               	movf	(updateTemperatures@rts+1)^(0+128),w
 14651  163A  00F2               	movwf	___xxtofl@val+1
 14652  163B  086B               	movf	updateTemperatures@rts^(0+128),w
 14653  163C  00F1               	movwf	___xxtofl@val
 14654  163D  3000               	movlw	0
 14655  163E  3198  2009  3195   	fcall	___xxtofl
 14656  1641  0874               	movf	?___xxtofl+3,w
 14657  1642  0021               	movlb	1	; select bank1
 14658  1643  00C2               	movwf	(_updateTemperatures$2081+3)^(0+128)
 14659  1644  0873               	movf	?___xxtofl+2,w
 14660  1645  00C1               	movwf	(_updateTemperatures$2081+2)^(0+128)
 14661  1646  0872               	movf	?___xxtofl+1,w
 14662  1647  00C0               	movwf	(_updateTemperatures$2081+1)^(0+128)
 14663  1648  0871               	movf	?___xxtofl,w
 14664  1649  00BF               	movwf	_updateTemperatures$2081^(0+128)
 14665                           
 14666                           ;BQ76920.c: 275:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14667  164A  083E               	movf	(_updateTemperatures$2080+3)^(0+128),w
 14668  164B  00AB               	movwf	(logf@x+3)^(0+128)
 14669  164C  083D               	movf	(_updateTemperatures$2080+2)^(0+128),w
 14670  164D  00AA               	movwf	(logf@x+2)^(0+128)
 14671  164E  083C               	movf	(_updateTemperatures$2080+1)^(0+128),w
 14672  164F  00A9               	movwf	(logf@x+1)^(0+128)
 14673  1650  083B               	movf	_updateTemperatures$2080^(0+128),w
 14674  1651  00A8               	movwf	logf@x^(0+128)
 14675  1652  3180  2069  3195   	fcall	_logf
 14676  1655  0021               	movlb	1	; select bank1
 14677  1656  082B               	movf	(?_logf+3)^(0+128),w
 14678  1657  00C6               	movwf	(_updateTemperatures$2082+3)^(0+128)
 14679  1658  082A               	movf	(?_logf+2)^(0+128),w
 14680  1659  00C5               	movwf	(_updateTemperatures$2082+2)^(0+128)
 14681  165A  0829               	movf	(?_logf+1)^(0+128),w
 14682  165B  00C4               	movwf	(_updateTemperatures$2082+1)^(0+128)
 14683  165C  0828               	movf	?_logf^(0+128),w
 14684  165D  00C3               	movwf	_updateTemperatures$2082^(0+128)
 14685                           
 14686                           ;BQ76920.c: 275:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14687  165E  0842               	movf	(_updateTemperatures$2081+3)^(0+128),w
 14688  165F  00AB               	movwf	(logf@x+3)^(0+128)
 14689  1660  0841               	movf	(_updateTemperatures$2081+2)^(0+128),w
 14690  1661  00AA               	movwf	(logf@x+2)^(0+128)
 14691  1662  0840               	movf	(_updateTemperatures$2081+1)^(0+128),w
 14692  1663  00A9               	movwf	(logf@x+1)^(0+128)
 14693  1664  083F               	movf	_updateTemperatures$2081^(0+128),w
 14694  1665  00A8               	movwf	logf@x^(0+128)
 14695  1666  3180  2069  3195   	fcall	_logf
 14696  1669  0021               	movlb	1	; select bank1
 14697  166A  082B               	movf	(?_logf+3)^(0+128),w
 14698  166B  00CA               	movwf	(_updateTemperatures$2083+3)^(0+128)
 14699  166C  082A               	movf	(?_logf+2)^(0+128),w
 14700  166D  00C9               	movwf	(_updateTemperatures$2083+2)^(0+128)
 14701  166E  0829               	movf	(?_logf+1)^(0+128),w
 14702  166F  00C8               	movwf	(_updateTemperatures$2083+1)^(0+128)
 14703  1670  0828               	movf	?_logf^(0+128),w
 14704  1671  00C7               	movwf	_updateTemperatures$2083^(0+128)
 14705                           
 14706                           ;BQ76920.c: 275:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14707  1672  083A               	movf	(_updateTemperatures$2079+3)^(0+128),w
 14708  1673  00AB               	movwf	(logf@x+3)^(0+128)
 14709  1674  0839               	movf	(_updateTemperatures$2079+2)^(0+128),w
 14710  1675  00AA               	movwf	(logf@x+2)^(0+128)
 14711  1676  0838               	movf	(_updateTemperatures$2079+1)^(0+128),w
 14712  1677  00A9               	movwf	(logf@x+1)^(0+128)
 14713  1678  0837               	movf	_updateTemperatures$2079^(0+128),w
 14714  1679  00A8               	movwf	logf@x^(0+128)
 14715  167A  3180  2069  3195   	fcall	_logf
 14716  167D  0021               	movlb	1	; select bank1
 14717  167E  082B               	movf	(?_logf+3)^(0+128),w
 14718  167F  00CE               	movwf	(_updateTemperatures$2084+3)^(0+128)
 14719  1680  082A               	movf	(?_logf+2)^(0+128),w
 14720  1681  00CD               	movwf	(_updateTemperatures$2084+2)^(0+128)
 14721  1682  0829               	movf	(?_logf+1)^(0+128),w
 14722  1683  00CC               	movwf	(_updateTemperatures$2084+1)^(0+128)
 14723  1684  0828               	movf	?_logf^(0+128),w
 14724  1685  00CB               	movwf	_updateTemperatures$2084^(0+128)
 14725                           
 14726                           ;BQ76920.c: 275:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14727  1686  0846               	movf	(_updateTemperatures$2082+3)^(0+128),w
 14728  1687  0020               	movlb	0	; select bank0
 14729  1688  00A9               	movwf	___flmul@b+3
 14730  1689  0021               	movlb	1	; select bank1
 14731  168A  0845               	movf	(_updateTemperatures$2082+2)^(0+128),w
 14732  168B  0020               	movlb	0	; select bank0
 14733  168C  00A8               	movwf	___flmul@b+2
 14734  168D  0021               	movlb	1	; select bank1
 14735  168E  0844               	movf	(_updateTemperatures$2082+1)^(0+128),w
 14736  168F  0020               	movlb	0	; select bank0
 14737  1690  00A7               	movwf	___flmul@b+1
 14738  1691  0021               	movlb	1	; select bank1
 14739  1692  0843               	movf	_updateTemperatures$2082^(0+128),w
 14740  1693  0020               	movlb	0	; select bank0
 14741  1694  00A6               	movwf	___flmul@b
 14742  1695  0021               	movlb	1	; select bank1
 14743  1696  084A               	movf	(_updateTemperatures$2083+3)^(0+128),w
 14744  1697  0020               	movlb	0	; select bank0
 14745  1698  00AD               	movwf	___flmul@a+3
 14746  1699  0021               	movlb	1	; select bank1
 14747  169A  0849               	movf	(_updateTemperatures$2083+2)^(0+128),w
 14748  169B  0020               	movlb	0	; select bank0
 14749  169C  00AC               	movwf	___flmul@a+2
 14750  169D  0021               	movlb	1	; select bank1
 14751  169E  0848               	movf	(_updateTemperatures$2083+1)^(0+128),w
 14752  169F  0020               	movlb	0	; select bank0
 14753  16A0  00AB               	movwf	___flmul@a+1
 14754  16A1  0021               	movlb	1	; select bank1
 14755  16A2  0847               	movf	_updateTemperatures$2083^(0+128),w
 14756  16A3  0020               	movlb	0	; select bank0
 14757  16A4  00AA               	movwf	___flmul@a
 14758  16A5  3190  2023  3195   	fcall	___flmul
 14759  16A8  0020               	movlb	0	; select bank0
 14760  16A9  0829               	movf	?___flmul+3,w
 14761  16AA  0021               	movlb	1	; select bank1
 14762  16AB  00D2               	movwf	(_updateTemperatures$2085+3)^(0+128)
 14763  16AC  0020               	movlb	0	; select bank0
 14764  16AD  0828               	movf	?___flmul+2,w
 14765  16AE  0021               	movlb	1	; select bank1
 14766  16AF  00D1               	movwf	(_updateTemperatures$2085+2)^(0+128)
 14767  16B0  0020               	movlb	0	; select bank0
 14768  16B1  0827               	movf	?___flmul+1,w
 14769  16B2  0021               	movlb	1	; select bank1
 14770  16B3  00D0               	movwf	(_updateTemperatures$2085+1)^(0+128)
 14771  16B4  0020               	movlb	0	; select bank0
 14772  16B5  0826               	movf	?___flmul,w
 14773  16B6  0021               	movlb	1	; select bank1
 14774  16B7  00CF               	movwf	_updateTemperatures$2085^(0+128)
 14775                           
 14776                           ;BQ76920.c: 275:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14777  16B8  084E               	movf	(_updateTemperatures$2084+3)^(0+128),w
 14778  16B9  0020               	movlb	0	; select bank0
 14779  16BA  00A9               	movwf	___flmul@b+3
 14780  16BB  0021               	movlb	1	; select bank1
 14781  16BC  084D               	movf	(_updateTemperatures$2084+2)^(0+128),w
 14782  16BD  0020               	movlb	0	; select bank0
 14783  16BE  00A8               	movwf	___flmul@b+2
 14784  16BF  0021               	movlb	1	; select bank1
 14785  16C0  084C               	movf	(_updateTemperatures$2084+1)^(0+128),w
 14786  16C1  0020               	movlb	0	; select bank0
 14787  16C2  00A7               	movwf	___flmul@b+1
 14788  16C3  0021               	movlb	1	; select bank1
 14789  16C4  084B               	movf	_updateTemperatures$2084^(0+128),w
 14790  16C5  0020               	movlb	0	; select bank0
 14791  16C6  00A6               	movwf	___flmul@b
 14792  16C7  0021               	movlb	1	; select bank1
 14793  16C8  0852               	movf	(_updateTemperatures$2085+3)^(0+128),w
 14794  16C9  0020               	movlb	0	; select bank0
 14795  16CA  00AD               	movwf	___flmul@a+3
 14796  16CB  0021               	movlb	1	; select bank1
 14797  16CC  0851               	movf	(_updateTemperatures$2085+2)^(0+128),w
 14798  16CD  0020               	movlb	0	; select bank0
 14799  16CE  00AC               	movwf	___flmul@a+2
 14800  16CF  0021               	movlb	1	; select bank1
 14801  16D0  0850               	movf	(_updateTemperatures$2085+1)^(0+128),w
 14802  16D1  0020               	movlb	0	; select bank0
 14803  16D2  00AB               	movwf	___flmul@a+1
 14804  16D3  0021               	movlb	1	; select bank1
 14805  16D4  084F               	movf	_updateTemperatures$2085^(0+128),w
 14806  16D5  0020               	movlb	0	; select bank0
 14807  16D6  00AA               	movwf	___flmul@a
 14808  16D7  3190  2023  3195   	fcall	___flmul
 14809  16DA  0020               	movlb	0	; select bank0
 14810  16DB  0829               	movf	?___flmul+3,w
 14811  16DC  0021               	movlb	1	; select bank1
 14812  16DD  00D6               	movwf	(_updateTemperatures$2086+3)^(0+128)
 14813  16DE  0020               	movlb	0	; select bank0
 14814  16DF  0828               	movf	?___flmul+2,w
 14815  16E0  0021               	movlb	1	; select bank1
 14816  16E1  00D5               	movwf	(_updateTemperatures$2086+2)^(0+128)
 14817  16E2  0020               	movlb	0	; select bank0
 14818  16E3  0827               	movf	?___flmul+1,w
 14819  16E4  0021               	movlb	1	; select bank1
 14820  16E5  00D4               	movwf	(_updateTemperatures$2086+1)^(0+128)
 14821  16E6  0020               	movlb	0	; select bank0
 14822  16E7  0826               	movf	?___flmul,w
 14823  16E8  0021               	movlb	1	; select bank1
 14824  16E9  00D3               	movwf	_updateTemperatures$2086^(0+128)
 14825                           
 14826                           ;BQ76920.c: 275:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14827  16EA  086E               	movf	(updateTemperatures@rts+3)^(0+128),w
 14828  16EB  00F4               	movwf	___xxtofl@val+3
 14829  16EC  086D               	movf	(updateTemperatures@rts+2)^(0+128),w
 14830  16ED  00F3               	movwf	___xxtofl@val+2
 14831  16EE  086C               	movf	(updateTemperatures@rts+1)^(0+128),w
 14832  16EF  00F2               	movwf	___xxtofl@val+1
 14833  16F0  086B               	movf	updateTemperatures@rts^(0+128),w
 14834  16F1  00F1               	movwf	___xxtofl@val
 14835  16F2  3000               	movlw	0
 14836  16F3  3198  2009  3195   	fcall	___xxtofl
 14837  16F6  0874               	movf	?___xxtofl+3,w
 14838  16F7  0021               	movlb	1	; select bank1
 14839  16F8  00DA               	movwf	(_updateTemperatures$2087+3)^(0+128)
 14840  16F9  0873               	movf	?___xxtofl+2,w
 14841  16FA  00D9               	movwf	(_updateTemperatures$2087+2)^(0+128)
 14842  16FB  0872               	movf	?___xxtofl+1,w
 14843  16FC  00D8               	movwf	(_updateTemperatures$2087+1)^(0+128)
 14844  16FD  0871               	movf	?___xxtofl,w
 14845  16FE  00D7               	movwf	_updateTemperatures$2087^(0+128)
 14846                           
 14847                           ;BQ76920.c: 275:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14848  16FF  085A               	movf	(_updateTemperatures$2087+3)^(0+128),w
 14849  1700  00AB               	movwf	(logf@x+3)^(0+128)
 14850  1701  0859               	movf	(_updateTemperatures$2087+2)^(0+128),w
 14851  1702  00AA               	movwf	(logf@x+2)^(0+128)
 14852  1703  0858               	movf	(_updateTemperatures$2087+1)^(0+128),w
 14853  1704  00A9               	movwf	(logf@x+1)^(0+128)
 14854  1705  0857               	movf	_updateTemperatures$2087^(0+128),w
 14855  1706  00A8               	movwf	logf@x^(0+128)
 14856  1707  3180  2069  3195   	fcall	_logf
 14857  170A  0021               	movlb	1	; select bank1
 14858  170B  082B               	movf	(?_logf+3)^(0+128),w
 14859  170C  00DE               	movwf	(_updateTemperatures$2088+3)^(0+128)
 14860  170D  082A               	movf	(?_logf+2)^(0+128),w
 14861  170E  00DD               	movwf	(_updateTemperatures$2088+2)^(0+128)
 14862  170F  0829               	movf	(?_logf+1)^(0+128),w
 14863  1710  00DC               	movwf	(_updateTemperatures$2088+1)^(0+128)
 14864  1711  0828               	movf	?_logf^(0+128),w
 14865  1712  00DB               	movwf	_updateTemperatures$2088^(0+128)
 14866                           
 14867                           ;BQ76920.c: 275:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14868  1713  30BC               	movlw	188
 14869  1714  0020               	movlb	0	; select bank0
 14870  1715  00DD               	movwf	___fladd@b+3
 14871  1716  308E               	movlw	142
 14872  1717  00DC               	movwf	___fladd@b+2
 14873  1718  30C5               	movlw	197
 14874  1719  00DB               	movwf	___fladd@b+1
 14875  171A  3072               	movlw	114
 14876  171B  00DA               	movwf	___fladd@b
 14877  171C  303B               	movlw	59
 14878  171D  00A9               	movwf	___flmul@b+3
 14879  171E  304D               	movlw	77
 14880  171F  00A8               	movwf	___flmul@b+2
 14881  1720  3098               	movlw	152
 14882  1721  00A7               	movwf	___flmul@b+1
 14883  1722  3025               	movlw	37
 14884  1723  00A6               	movwf	___flmul@b
 14885  1724  0021               	movlb	1	; select bank1
 14886  1725  085E               	movf	(_updateTemperatures$2088+3)^(0+128),w
 14887  1726  0020               	movlb	0	; select bank0
 14888  1727  00AD               	movwf	___flmul@a+3
 14889  1728  0021               	movlb	1	; select bank1
 14890  1729  085D               	movf	(_updateTemperatures$2088+2)^(0+128),w
 14891  172A  0020               	movlb	0	; select bank0
 14892  172B  00AC               	movwf	___flmul@a+2
 14893  172C  0021               	movlb	1	; select bank1
 14894  172D  085C               	movf	(_updateTemperatures$2088+1)^(0+128),w
 14895  172E  0020               	movlb	0	; select bank0
 14896  172F  00AB               	movwf	___flmul@a+1
 14897  1730  0021               	movlb	1	; select bank1
 14898  1731  085B               	movf	_updateTemperatures$2088^(0+128),w
 14899  1732  0020               	movlb	0	; select bank0
 14900  1733  00AA               	movwf	___flmul@a
 14901  1734  3190  2023  3195   	fcall	___flmul
 14902  1737  0020               	movlb	0	; select bank0
 14903  1738  0829               	movf	?___flmul+3,w
 14904  1739  00E1               	movwf	___fladd@a+3
 14905  173A  0828               	movf	?___flmul+2,w
 14906  173B  00E0               	movwf	___fladd@a+2
 14907  173C  0827               	movf	?___flmul+1,w
 14908  173D  00DF               	movwf	___fladd@a+1
 14909  173E  0826               	movf	?___flmul,w
 14910  173F  00DE               	movwf	___fladd@a
 14911  1740  3185  25F3  3195   	fcall	___fladd
 14912  1743  0020               	movlb	0	; select bank0
 14913  1744  085D               	movf	?___fladd+3,w
 14914  1745  0021               	movlb	1	; select bank1
 14915  1746  00E2               	movwf	(_updateTemperatures$2089+3)^(0+128)
 14916  1747  0020               	movlb	0	; select bank0
 14917  1748  085C               	movf	?___fladd+2,w
 14918  1749  0021               	movlb	1	; select bank1
 14919  174A  00E1               	movwf	(_updateTemperatures$2089+2)^(0+128)
 14920  174B  0020               	movlb	0	; select bank0
 14921  174C  085B               	movf	?___fladd+1,w
 14922  174D  0021               	movlb	1	; select bank1
 14923  174E  00E0               	movwf	(_updateTemperatures$2089+1)^(0+128)
 14924  174F  0020               	movlb	0	; select bank0
 14925  1750  085A               	movf	?___fladd,w
 14926  1751  0021               	movlb	1	; select bank1
 14927  1752  00DF               	movwf	_updateTemperatures$2089^(0+128)
 14928                           
 14929                           ;BQ76920.c: 275:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14930  1753  30B7               	movlw	183
 14931  1754  0020               	movlb	0	; select bank0
 14932  1755  00A9               	movwf	___flmul@b+3
 14933  1756  302E               	movlw	46
 14934  1757  00A8               	movwf	___flmul@b+2
 14935  1758  302F               	movlw	47
 14936  1759  00A7               	movwf	___flmul@b+1
 14937  175A  3045               	movlw	69
 14938  175B  00A6               	movwf	___flmul@b
 14939  175C  0021               	movlb	1	; select bank1
 14940  175D  0856               	movf	(_updateTemperatures$2086+3)^(0+128),w
 14941  175E  0020               	movlb	0	; select bank0
 14942  175F  00AD               	movwf	___flmul@a+3
 14943  1760  0021               	movlb	1	; select bank1
 14944  1761  0855               	movf	(_updateTemperatures$2086+2)^(0+128),w
 14945  1762  0020               	movlb	0	; select bank0
 14946  1763  00AC               	movwf	___flmul@a+2
 14947  1764  0021               	movlb	1	; select bank1
 14948  1765  0854               	movf	(_updateTemperatures$2086+1)^(0+128),w
 14949  1766  0020               	movlb	0	; select bank0
 14950  1767  00AB               	movwf	___flmul@a+1
 14951  1768  0021               	movlb	1	; select bank1
 14952  1769  0853               	movf	_updateTemperatures$2086^(0+128),w
 14953  176A  0020               	movlb	0	; select bank0
 14954  176B  00AA               	movwf	___flmul@a
 14955  176C  3190  2023  3195   	fcall	___flmul
 14956  176F  0020               	movlb	0	; select bank0
 14957  1770  0829               	movf	?___flmul+3,w
 14958  1771  00DD               	movwf	___fladd@b+3
 14959  1772  0828               	movf	?___flmul+2,w
 14960  1773  00DC               	movwf	___fladd@b+2
 14961  1774  0827               	movf	?___flmul+1,w
 14962  1775  00DB               	movwf	___fladd@b+1
 14963  1776  0826               	movf	?___flmul,w
 14964  1777  00DA               	movwf	___fladd@b
 14965  1778  0021               	movlb	1	; select bank1
 14966  1779  0862               	movf	(_updateTemperatures$2089+3)^(0+128),w
 14967  177A  0020               	movlb	0	; select bank0
 14968  177B  00E1               	movwf	___fladd@a+3
 14969  177C  0021               	movlb	1	; select bank1
 14970  177D  0861               	movf	(_updateTemperatures$2089+2)^(0+128),w
 14971  177E  0020               	movlb	0	; select bank0
 14972  177F  00E0               	movwf	___fladd@a+2
 14973  1780  0021               	movlb	1	; select bank1
 14974  1781  0860               	movf	(_updateTemperatures$2089+1)^(0+128),w
 14975  1782  0020               	movlb	0	; select bank0
 14976  1783  00DF               	movwf	___fladd@a+1
 14977  1784  0021               	movlb	1	; select bank1
 14978  1785  085F               	movf	_updateTemperatures$2089^(0+128),w
 14979  1786  0020               	movlb	0	; select bank0
 14980  1787  00DE               	movwf	___fladd@a
 14981  1788  3185  25F3  3195   	fcall	___fladd
 14982  178B  0020               	movlb	0	; select bank0
 14983  178C  085D               	movf	?___fladd+3,w
 14984  178D  00C3               	movwf	___fldiv@a+3
 14985  178E  085C               	movf	?___fladd+2,w
 14986  178F  00C2               	movwf	___fldiv@a+2
 14987  1790  085B               	movf	?___fladd+1,w
 14988  1791  00C1               	movwf	___fldiv@a+1
 14989  1792  085A               	movf	?___fladd,w
 14990  1793  00C0               	movwf	___fldiv@a
 14991  1794  303F               	movlw	63
 14992  1795  00C7               	movwf	___fldiv@b+3
 14993  1796  3080               	movlw	128
 14994  1797  00C6               	movwf	___fldiv@b+2
 14995  1798  3000               	movlw	0
 14996  1799  00C5               	movwf	___fldiv@b+1
 14997  179A  3000               	movlw	0
 14998  179B  00C4               	movwf	___fldiv@b
 14999  179C  319B  234B  3195   	fcall	___fldiv
 15000  179F  0020               	movlb	0	; select bank0
 15001  17A0  0843               	movf	?___fldiv+3,w
 15002  17A1  0021               	movlb	1	; select bank1
 15003  17A2  00E6               	movwf	(updateTemperatures@tmp+3)^(0+128)
 15004  17A3  0020               	movlb	0	; select bank0
 15005  17A4  0842               	movf	?___fldiv+2,w
 15006  17A5  0021               	movlb	1	; select bank1
 15007  17A6  00E5               	movwf	(updateTemperatures@tmp+2)^(0+128)
 15008  17A7  0020               	movlb	0	; select bank0
 15009  17A8  0841               	movf	?___fldiv+1,w
 15010  17A9  0021               	movlb	1	; select bank1
 15011  17AA  00E4               	movwf	(updateTemperatures@tmp+1)^(0+128)
 15012  17AB  0020               	movlb	0	; select bank0
 15013  17AC  0840               	movf	?___fldiv,w
 15014  17AD  0021               	movlb	1	; select bank1
 15015  17AE  00E3               	movwf	updateTemperatures@tmp^(0+128)
 15016                           
 15017                           ;BQ76920.c: 277:      temperatureThermistor = (tmp - 273.15)*100;
 15018  17AF  0866               	movf	(updateTemperatures@tmp+3)^(0+128),w
 15019  17B0  0020               	movlb	0	; select bank0
 15020  17B1  00E1               	movwf	___fladd@a+3
 15021  17B2  0021               	movlb	1	; select bank1
 15022  17B3  0865               	movf	(updateTemperatures@tmp+2)^(0+128),w
 15023  17B4  0020               	movlb	0	; select bank0
 15024  17B5  00E0               	movwf	___fladd@a+2
 15025  17B6  0021               	movlb	1	; select bank1
 15026  17B7  0864               	movf	(updateTemperatures@tmp+1)^(0+128),w
 15027  17B8  0020               	movlb	0	; select bank0
 15028  17B9  00DF               	movwf	___fladd@a+1
 15029  17BA  0021               	movlb	1	; select bank1
 15030  17BB  0863               	movf	updateTemperatures@tmp^(0+128),w
 15031  17BC  0020               	movlb	0	; select bank0
 15032  17BD  00DE               	movwf	___fladd@a
 15033  17BE  30C3               	movlw	195
 15034  17BF  00DD               	movwf	___fladd@b+3
 15035  17C0  3088               	movlw	136
 15036  17C1  00DC               	movwf	___fladd@b+2
 15037  17C2  3093               	movlw	147
 15038  17C3  00DB               	movwf	___fladd@b+1
 15039  17C4  3033               	movlw	51
 15040  17C5  00DA               	movwf	___fladd@b
 15041  17C6  3185  25F3  3195   	fcall	___fladd
 15042  17C9  0020               	movlb	0	; select bank0
 15043  17CA  085D               	movf	?___fladd+3,w
 15044  17CB  00AD               	movwf	___flmul@a+3
 15045  17CC  085C               	movf	?___fladd+2,w
 15046  17CD  00AC               	movwf	___flmul@a+2
 15047  17CE  085B               	movf	?___fladd+1,w
 15048  17CF  00AB               	movwf	___flmul@a+1
 15049  17D0  085A               	movf	?___fladd,w
 15050  17D1  00AA               	movwf	___flmul@a
 15051  17D2  3042               	movlw	66
 15052  17D3  00A9               	movwf	___flmul@b+3
 15053  17D4  30C8               	movlw	200
 15054  17D5  00A8               	movwf	___flmul@b+2
 15055  17D6  3000               	movlw	0
 15056  17D7  00A7               	movwf	___flmul@b+1
 15057  17D8  3000               	movlw	0
 15058  17D9  00A6               	movwf	___flmul@b
 15059  17DA  3190  2023  3195   	fcall	___flmul
 15060  17DD  0020               	movlb	0	; select bank0
 15061  17DE  0829               	movf	?___flmul+3,w
 15062  17DF  0021               	movlb	1	; select bank1
 15063  17E0  00AB               	movwf	(___fltol@f1+3)^(0+128)
 15064  17E1  0020               	movlb	0	; select bank0
 15065  17E2  0828               	movf	?___flmul+2,w
 15066  17E3  0021               	movlb	1	; select bank1
 15067  17E4  00AA               	movwf	(___fltol@f1+2)^(0+128)
 15068  17E5  0020               	movlb	0	; select bank0
 15069  17E6  0827               	movf	?___flmul+1,w
 15070  17E7  0021               	movlb	1	; select bank1
 15071  17E8  00A9               	movwf	(___fltol@f1+1)^(0+128)
 15072  17E9  0020               	movlb	0	; select bank0
 15073  17EA  0826               	movf	?___flmul,w
 15074  17EB  0021               	movlb	1	; select bank1
 15075  17EC  00A8               	movwf	___fltol@f1^(0+128)
 15076  17ED  31A8  2067         	fcall	___fltol
 15077  17EF  0021               	movlb	1	; select bank1
 15078  17F0  082B               	movf	(?___fltol+3)^(0+128),w
 15079  17F1  0023               	movlb	3	; select bank3
 15080  17F2  00BF               	movwf	(_temperatureThermistor+3)^(0+384)
 15081  17F3  0021               	movlb	1	; select bank1
 15082  17F4  082A               	movf	(?___fltol+2)^(0+128),w
 15083  17F5  0023               	movlb	3	; select bank3
 15084  17F6  00BE               	movwf	(_temperatureThermistor+2)^(0+384)
 15085  17F7  0021               	movlb	1	; select bank1
 15086  17F8  0829               	movf	(?___fltol+1)^(0+128),w
 15087  17F9  0023               	movlb	3	; select bank3
 15088  17FA  00BD               	movwf	(_temperatureThermistor+1)^(0+384)
 15089  17FB  0021               	movlb	1	; select bank1
 15090  17FC  0828               	movf	?___fltol^(0+128),w
 15091  17FD  0023               	movlb	3	; select bank3
 15092  17FE  00BC               	movwf	_temperatureThermistor^(0+384)
 15093  17FF  0008               	return
 15094  1800                     __end_of_updateTemperatures:	
 15095                           
 15096                           	psect	text50
 15097  0069                     __ptext50:	
 15098 ;; *************** function _logf *****************
 15099 ;; Defined at:
 15100 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\logf.c"
 15101 ;; Parameters:    Size  Location     Type
 15102 ;;  x               4    8[BANK1 ] float 
 15103 ;; Auto vars:     Size  Location     Type
 15104 ;;  ix              4   62[BANK2 ] unsigned long 
 15105 ;;  f               4   58[BANK2 ] float 
 15106 ;;  u               4   54[BANK2 ] struct .
 15107 ;;  w               4   46[BANK2 ] float 
 15108 ;;  z               4   42[BANK2 ] float 
 15109 ;;  s               4   38[BANK2 ] float 
 15110 ;;  dk              4   34[BANK2 ] float 
 15111 ;;  hfsq            4   30[BANK2 ] float 
 15112 ;;  t2              4    8[BANK2 ] float 
 15113 ;;  t1              4    4[BANK2 ] float 
 15114 ;;  R               4    0[BANK2 ] float 
 15115 ;;  k               2   28[BANK2 ] int 
 15116 ;; Return value:  Size  Location     Type
 15117 ;;                  4    8[BANK1 ] float 
 15118 ;; Registers used:
 15119 ;;		wreg, status,2, status,0, pclath, cstack
 15120 ;; Tracked objects:
 15121 ;;		On entry : 0/0
 15122 ;;		On exit  : 0/0
 15123 ;;		Unchanged: 0/0
 15124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15125 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15126 ;;      Locals:         0       0       0      66       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15127 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15128 ;;      Totals:         0       0      12      66       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15129 ;;Total ram usage:       78 bytes
 15130 ;; Hardware stack levels used:    1
 15131 ;; Hardware stack levels required when called:    3
 15132 ;; This function calls:
 15133 ;;		___fladd
 15134 ;;		___fldiv
 15135 ;;		___flmul
 15136 ;;		___flsub
 15137 ;;		___xxtofl
 15138 ;; This function is called by:
 15139 ;;		_updateTemperatures
 15140 ;; This function uses a non-reentrant model
 15141 ;;
 15142                           
 15143                           
 15144                           ;psect for function _logf
 15145  0069                     _logf:	
 15146                           
 15147                           ;incstack = 0
 15148                           ; Regs used in _logf: [wreg+status,2+status,0+pclath+cstack]
 15149  0069  0023               	movlb	3	; select bank3
 15150  006A  0837               	movf	(logf@F469+3)^(0+384),w
 15151  006B  0022               	movlb	2	; select bank2
 15152  006C  00D9               	movwf	(logf@u+3)^(0+256)
 15153  006D  0023               	movlb	3	; select bank3
 15154  006E  0836               	movf	(logf@F469+2)^(0+384),w
 15155  006F  0022               	movlb	2	; select bank2
 15156  0070  00D8               	movwf	(logf@u+2)^(0+256)
 15157  0071  0023               	movlb	3	; select bank3
 15158  0072  0835               	movf	(logf@F469+1)^(0+384),w
 15159  0073  0022               	movlb	2	; select bank2
 15160  0074  00D7               	movwf	(logf@u+1)^(0+256)
 15161  0075  0023               	movlb	3	; select bank3
 15162  0076  0834               	movf	logf@F469^(0+384),w
 15163  0077  0022               	movlb	2	; select bank2
 15164  0078  00D6               	movwf	logf@u^(0+256)
 15165  0079  0021               	movlb	1	; select bank1
 15166  007A  082B               	movf	(logf@x+3)^(0+128),w
 15167  007B  0022               	movlb	2	; select bank2
 15168  007C  00D9               	movwf	(logf@u+3)^(0+256)
 15169  007D  0021               	movlb	1	; select bank1
 15170  007E  082A               	movf	(logf@x+2)^(0+128),w
 15171  007F  0022               	movlb	2	; select bank2
 15172  0080  00D8               	movwf	(logf@u+2)^(0+256)
 15173  0081  0021               	movlb	1	; select bank1
 15174  0082  0829               	movf	(logf@x+1)^(0+128),w
 15175  0083  0022               	movlb	2	; select bank2
 15176  0084  00D7               	movwf	(logf@u+1)^(0+256)
 15177  0085  0021               	movlb	1	; select bank1
 15178  0086  0828               	movf	logf@x^(0+128),w
 15179  0087  0022               	movlb	2	; select bank2
 15180  0088  00D6               	movwf	logf@u^(0+256)
 15181  0089  0859               	movf	(logf@u+3)^(0+256),w
 15182  008A  00E1               	movwf	(logf@ix+3)^(0+256)
 15183  008B  0858               	movf	(logf@u+2)^(0+256),w
 15184  008C  00E0               	movwf	(logf@ix+2)^(0+256)
 15185  008D  0857               	movf	(logf@u+1)^(0+256),w
 15186  008E  00DF               	movwf	(logf@ix+1)^(0+256)
 15187  008F  0856               	movf	logf@u^(0+256),w
 15188  0090  00DE               	movwf	logf@ix^(0+256)
 15189  0091  01BC               	clrf	logf@k^(0+256)
 15190  0092  01BD               	clrf	(logf@k+1)^(0+256)
 15191  0093  0861               	movf	(logf@ix+3)^(0+256),w
 15192  0094  1D03               	btfss	3,2
 15193  0095  289A               	goto	l7929
 15194  0096  3080               	movlw	128
 15195  0097  0260               	subwf	(logf@ix+2)^(0+256),w
 15196  0098  1C03               	btfss	3,0
 15197  0099  28B6               	goto	l7931
 15198  009A                     l7929:	
 15199  009A  085E               	movf	logf@ix^(0+256),w
 15200  009B  0021               	movlb	1	; select bank1
 15201  009C  00AC               	movwf	??_logf^(0+128)
 15202  009D  0022               	movlb	2	; select bank2
 15203  009E  085F               	movf	(logf@ix+1)^(0+256),w
 15204  009F  0021               	movlb	1	; select bank1
 15205  00A0  00AD               	movwf	(??_logf^(0+128)+1)
 15206  00A1  0022               	movlb	2	; select bank2
 15207  00A2  0860               	movf	(logf@ix+2)^(0+256),w
 15208  00A3  0021               	movlb	1	; select bank1
 15209  00A4  00AE               	movwf	(??_logf^(0+128)+2)
 15210  00A5  0022               	movlb	2	; select bank2
 15211  00A6  0861               	movf	(logf@ix+3)^(0+256),w
 15212  00A7  0021               	movlb	1	; select bank1
 15213  00A8  00AF               	movwf	(??_logf^(0+128)+3)
 15214  00A9  301F               	movlw	31
 15215  00AA                     u10775:	
 15216  00AA  36AF               	lsrf	(??_logf^(0+128)+3),f
 15217  00AB  0CAE               	rrf	(??_logf^(0+128)+2),f
 15218  00AC  0CAD               	rrf	(??_logf^(0+128)+1),f
 15219  00AD  0CAC               	rrf	??_logf^(0+128),f
 15220  00AE  0B89               	decfsz	9,f
 15221  00AF  28AA               	goto	u10775
 15222  00B0  082F               	movf	(??_logf+3)^(0+128),w
 15223  00B1  042E               	iorwf	(??_logf+2)^(0+128),w
 15224  00B2  042D               	iorwf	(??_logf+1)^(0+128),w
 15225  00B3  042C               	iorwf	??_logf^(0+128),w
 15226  00B4  1903               	skipnz
 15227  00B5  29BF               	goto	l7951
 15228  00B6                     l7931:	
 15229  00B6  0022               	movlb	2	; select bank2
 15230  00B7  085E               	movf	logf@ix^(0+256),w
 15231  00B8  0021               	movlb	1	; select bank1
 15232  00B9  00AC               	movwf	??_logf^(0+128)
 15233  00BA  0022               	movlb	2	; select bank2
 15234  00BB  085F               	movf	(logf@ix+1)^(0+256),w
 15235  00BC  0021               	movlb	1	; select bank1
 15236  00BD  00AD               	movwf	(??_logf^(0+128)+1)
 15237  00BE  0022               	movlb	2	; select bank2
 15238  00BF  0860               	movf	(logf@ix+2)^(0+256),w
 15239  00C0  0021               	movlb	1	; select bank1
 15240  00C1  00AE               	movwf	(??_logf^(0+128)+2)
 15241  00C2  0022               	movlb	2	; select bank2
 15242  00C3  0861               	movf	(logf@ix+3)^(0+256),w
 15243  00C4  0021               	movlb	1	; select bank1
 15244  00C5  00AF               	movwf	(??_logf^(0+128)+3)
 15245  00C6  3001               	movlw	1
 15246  00C7                     u10795:	
 15247  00C7  35AC               	lslf	??_logf^(0+128),f
 15248  00C8  0DAD               	rlf	(??_logf^(0+128)+1),f
 15249  00C9  0DAE               	rlf	(??_logf^(0+128)+2),f
 15250  00CA  0DAF               	rlf	(??_logf^(0+128)+3),f
 15251  00CB  0B89               	decfsz	9,f
 15252  00CC  28C7               	goto	u10795
 15253  00CD  082F               	movf	(??_logf+3)^(0+128),w
 15254  00CE  042E               	iorwf	(??_logf+2)^(0+128),w
 15255  00CF  042D               	iorwf	(??_logf+1)^(0+128),w
 15256  00D0  042C               	iorwf	??_logf^(0+128),w
 15257  00D1  1D03               	skipz
 15258  00D2  2919               	goto	l7937
 15259  00D3  082B               	movf	(logf@x+3)^(0+128),w
 15260  00D4  0020               	movlb	0	; select bank0
 15261  00D5  00A9               	movwf	___flmul@b+3
 15262  00D6  0021               	movlb	1	; select bank1
 15263  00D7  082A               	movf	(logf@x+2)^(0+128),w
 15264  00D8  0020               	movlb	0	; select bank0
 15265  00D9  00A8               	movwf	___flmul@b+2
 15266  00DA  0021               	movlb	1	; select bank1
 15267  00DB  0829               	movf	(logf@x+1)^(0+128),w
 15268  00DC  0020               	movlb	0	; select bank0
 15269  00DD  00A7               	movwf	___flmul@b+1
 15270  00DE  0021               	movlb	1	; select bank1
 15271  00DF  0828               	movf	logf@x^(0+128),w
 15272  00E0  0020               	movlb	0	; select bank0
 15273  00E1  00A6               	movwf	___flmul@b
 15274  00E2  0021               	movlb	1	; select bank1
 15275  00E3  082B               	movf	(logf@x+3)^(0+128),w
 15276  00E4  0020               	movlb	0	; select bank0
 15277  00E5  00AD               	movwf	___flmul@a+3
 15278  00E6  0021               	movlb	1	; select bank1
 15279  00E7  082A               	movf	(logf@x+2)^(0+128),w
 15280  00E8  0020               	movlb	0	; select bank0
 15281  00E9  00AC               	movwf	___flmul@a+2
 15282  00EA  0021               	movlb	1	; select bank1
 15283  00EB  0829               	movf	(logf@x+1)^(0+128),w
 15284  00EC  0020               	movlb	0	; select bank0
 15285  00ED  00AB               	movwf	___flmul@a+1
 15286  00EE  0021               	movlb	1	; select bank1
 15287  00EF  0828               	movf	logf@x^(0+128),w
 15288  00F0  0020               	movlb	0	; select bank0
 15289  00F1  00AA               	movwf	___flmul@a
 15290  00F2  3190  2023  3180   	fcall	___flmul
 15291  00F5  0020               	movlb	0	; select bank0
 15292  00F6  0829               	movf	?___flmul+3,w
 15293  00F7  00C3               	movwf	___fldiv@a+3
 15294  00F8  0828               	movf	?___flmul+2,w
 15295  00F9  00C2               	movwf	___fldiv@a+2
 15296  00FA  0827               	movf	?___flmul+1,w
 15297  00FB  00C1               	movwf	___fldiv@a+1
 15298  00FC  0826               	movf	?___flmul,w
 15299  00FD  00C0               	movwf	___fldiv@a
 15300  00FE  30BF               	movlw	191
 15301  00FF  00C7               	movwf	___fldiv@b+3
 15302  0100  3080               	movlw	128
 15303  0101  00C6               	movwf	___fldiv@b+2
 15304  0102  3000               	movlw	0
 15305  0103  00C5               	movwf	___fldiv@b+1
 15306  0104  3000               	movlw	0
 15307  0105  00C4               	movwf	___fldiv@b
 15308  0106  319B  234B         	fcall	___fldiv
 15309  0108  0020               	movlb	0	; select bank0
 15310  0109  0843               	movf	?___fldiv+3,w
 15311  010A  0021               	movlb	1	; select bank1
 15312  010B  00AB               	movwf	(?_logf+3)^(0+128)
 15313  010C  0020               	movlb	0	; select bank0
 15314  010D  0842               	movf	?___fldiv+2,w
 15315  010E  0021               	movlb	1	; select bank1
 15316  010F  00AA               	movwf	(?_logf+2)^(0+128)
 15317  0110  0020               	movlb	0	; select bank0
 15318  0111  0841               	movf	?___fldiv+1,w
 15319  0112  0021               	movlb	1	; select bank1
 15320  0113  00A9               	movwf	(?_logf+1)^(0+128)
 15321  0114  0020               	movlb	0	; select bank0
 15322  0115  0840               	movf	?___fldiv,w
 15323  0116  0021               	movlb	1	; select bank1
 15324  0117  00A8               	movwf	?_logf^(0+128)
 15325  0118  0008               	return
 15326  0119                     l7937:	
 15327  0119  0022               	movlb	2	; select bank2
 15328  011A  085E               	movf	logf@ix^(0+256),w
 15329  011B  0021               	movlb	1	; select bank1
 15330  011C  00AC               	movwf	??_logf^(0+128)
 15331  011D  0022               	movlb	2	; select bank2
 15332  011E  085F               	movf	(logf@ix+1)^(0+256),w
 15333  011F  0021               	movlb	1	; select bank1
 15334  0120  00AD               	movwf	(??_logf^(0+128)+1)
 15335  0121  0022               	movlb	2	; select bank2
 15336  0122  0860               	movf	(logf@ix+2)^(0+256),w
 15337  0123  0021               	movlb	1	; select bank1
 15338  0124  00AE               	movwf	(??_logf^(0+128)+2)
 15339  0125  0022               	movlb	2	; select bank2
 15340  0126  0861               	movf	(logf@ix+3)^(0+256),w
 15341  0127  0021               	movlb	1	; select bank1
 15342  0128  00AF               	movwf	(??_logf^(0+128)+3)
 15343  0129  301F               	movlw	31
 15344  012A                     u10815:	
 15345  012A  36AF               	lsrf	(??_logf^(0+128)+3),f
 15346  012B  0CAE               	rrf	(??_logf^(0+128)+2),f
 15347  012C  0CAD               	rrf	(??_logf^(0+128)+1),f
 15348  012D  0CAC               	rrf	??_logf^(0+128),f
 15349  012E  0B89               	decfsz	9,f
 15350  012F  292A               	goto	u10815
 15351  0130  082F               	movf	(??_logf+3)^(0+128),w
 15352  0131  042E               	iorwf	(??_logf+2)^(0+128),w
 15353  0132  042D               	iorwf	(??_logf+1)^(0+128),w
 15354  0133  042C               	iorwf	??_logf^(0+128),w
 15355  0134  1903               	skipnz
 15356  0135  2976               	goto	l7943
 15357  0136  3000               	movlw	0
 15358  0137  0020               	movlb	0	; select bank0
 15359  0138  00C3               	movwf	___fldiv@a+3
 15360  0139  3000               	movlw	0
 15361  013A  00C2               	movwf	___fldiv@a+2
 15362  013B  3000               	movlw	0
 15363  013C  00C1               	movwf	___fldiv@a+1
 15364  013D  3000               	movlw	0
 15365  013E  00C0               	movwf	___fldiv@a
 15366  013F  0021               	movlb	1	; select bank1
 15367  0140  082B               	movf	(logf@x+3)^(0+128),w
 15368  0141  00A3               	movwf	(___flsub@a+3)^(0+128)
 15369  0142  082A               	movf	(logf@x+2)^(0+128),w
 15370  0143  00A2               	movwf	(___flsub@a+2)^(0+128)
 15371  0144  0829               	movf	(logf@x+1)^(0+128),w
 15372  0145  00A1               	movwf	(___flsub@a+1)^(0+128)
 15373  0146  0828               	movf	logf@x^(0+128),w
 15374  0147  00A0               	movwf	___flsub@a^(0+128)
 15375  0148  082B               	movf	(logf@x+3)^(0+128),w
 15376  0149  00A7               	movwf	(___flsub@b+3)^(0+128)
 15377  014A  082A               	movf	(logf@x+2)^(0+128),w
 15378  014B  00A6               	movwf	(___flsub@b+2)^(0+128)
 15379  014C  0829               	movf	(logf@x+1)^(0+128),w
 15380  014D  00A5               	movwf	(___flsub@b+1)^(0+128)
 15381  014E  0828               	movf	logf@x^(0+128),w
 15382  014F  00A4               	movwf	___flsub@b^(0+128)
 15383  0150  31B5  25EC  3180   	fcall	___flsub
 15384  0153  0021               	movlb	1	; select bank1
 15385  0154  0823               	movf	(?___flsub+3)^(0+128),w
 15386  0155  0020               	movlb	0	; select bank0
 15387  0156  00C7               	movwf	___fldiv@b+3
 15388  0157  0021               	movlb	1	; select bank1
 15389  0158  0822               	movf	(?___flsub+2)^(0+128),w
 15390  0159  0020               	movlb	0	; select bank0
 15391  015A  00C6               	movwf	___fldiv@b+2
 15392  015B  0021               	movlb	1	; select bank1
 15393  015C  0821               	movf	(?___flsub+1)^(0+128),w
 15394  015D  0020               	movlb	0	; select bank0
 15395  015E  00C5               	movwf	___fldiv@b+1
 15396  015F  0021               	movlb	1	; select bank1
 15397  0160  0820               	movf	?___flsub^(0+128),w
 15398  0161  0020               	movlb	0	; select bank0
 15399  0162  00C4               	movwf	___fldiv@b
 15400  0163  319B  234B         	fcall	___fldiv
 15401  0165  0020               	movlb	0	; select bank0
 15402  0166  0843               	movf	?___fldiv+3,w
 15403  0167  0021               	movlb	1	; select bank1
 15404  0168  00AB               	movwf	(?_logf+3)^(0+128)
 15405  0169  0020               	movlb	0	; select bank0
 15406  016A  0842               	movf	?___fldiv+2,w
 15407  016B  0021               	movlb	1	; select bank1
 15408  016C  00AA               	movwf	(?_logf+2)^(0+128)
 15409  016D  0020               	movlb	0	; select bank0
 15410  016E  0841               	movf	?___fldiv+1,w
 15411  016F  0021               	movlb	1	; select bank1
 15412  0170  00A9               	movwf	(?_logf+1)^(0+128)
 15413  0171  0020               	movlb	0	; select bank0
 15414  0172  0840               	movf	?___fldiv,w
 15415  0173  0021               	movlb	1	; select bank1
 15416  0174  00A8               	movwf	?_logf^(0+128)
 15417  0175  0008               	return
 15418  0176                     l7943:	
 15419  0176  30E7               	movlw	231
 15420  0177  0022               	movlb	2	; select bank2
 15421  0178  07BC               	addwf	logf@k^(0+256),f
 15422  0179  30FF               	movlw	255
 15423  017A  3DBD               	addwfc	(logf@k+1)^(0+256),f
 15424  017B  304C               	movlw	76
 15425  017C  0020               	movlb	0	; select bank0
 15426  017D  00A9               	movwf	___flmul@b+3
 15427  017E  3000               	movlw	0
 15428  017F  00A8               	movwf	___flmul@b+2
 15429  0180  3000               	movlw	0
 15430  0181  00A7               	movwf	___flmul@b+1
 15431  0182  3000               	movlw	0
 15432  0183  00A6               	movwf	___flmul@b
 15433  0184  0021               	movlb	1	; select bank1
 15434  0185  082B               	movf	(logf@x+3)^(0+128),w
 15435  0186  0020               	movlb	0	; select bank0
 15436  0187  00AD               	movwf	___flmul@a+3
 15437  0188  0021               	movlb	1	; select bank1
 15438  0189  082A               	movf	(logf@x+2)^(0+128),w
 15439  018A  0020               	movlb	0	; select bank0
 15440  018B  00AC               	movwf	___flmul@a+2
 15441  018C  0021               	movlb	1	; select bank1
 15442  018D  0829               	movf	(logf@x+1)^(0+128),w
 15443  018E  0020               	movlb	0	; select bank0
 15444  018F  00AB               	movwf	___flmul@a+1
 15445  0190  0021               	movlb	1	; select bank1
 15446  0191  0828               	movf	logf@x^(0+128),w
 15447  0192  0020               	movlb	0	; select bank0
 15448  0193  00AA               	movwf	___flmul@a
 15449  0194  3190  2023  3180   	fcall	___flmul
 15450  0197  0020               	movlb	0	; select bank0
 15451  0198  0829               	movf	?___flmul+3,w
 15452  0199  0021               	movlb	1	; select bank1
 15453  019A  00AB               	movwf	(logf@x+3)^(0+128)
 15454  019B  0020               	movlb	0	; select bank0
 15455  019C  0828               	movf	?___flmul+2,w
 15456  019D  0021               	movlb	1	; select bank1
 15457  019E  00AA               	movwf	(logf@x+2)^(0+128)
 15458  019F  0020               	movlb	0	; select bank0
 15459  01A0  0827               	movf	?___flmul+1,w
 15460  01A1  0021               	movlb	1	; select bank1
 15461  01A2  00A9               	movwf	(logf@x+1)^(0+128)
 15462  01A3  0020               	movlb	0	; select bank0
 15463  01A4  0826               	movf	?___flmul,w
 15464  01A5  0021               	movlb	1	; select bank1
 15465  01A6  00A8               	movwf	logf@x^(0+128)
 15466  01A7  082B               	movf	(logf@x+3)^(0+128),w
 15467  01A8  0022               	movlb	2	; select bank2
 15468  01A9  00D9               	movwf	(logf@u+3)^(0+256)
 15469  01AA  0021               	movlb	1	; select bank1
 15470  01AB  082A               	movf	(logf@x+2)^(0+128),w
 15471  01AC  0022               	movlb	2	; select bank2
 15472  01AD  00D8               	movwf	(logf@u+2)^(0+256)
 15473  01AE  0021               	movlb	1	; select bank1
 15474  01AF  0829               	movf	(logf@x+1)^(0+128),w
 15475  01B0  0022               	movlb	2	; select bank2
 15476  01B1  00D7               	movwf	(logf@u+1)^(0+256)
 15477  01B2  0021               	movlb	1	; select bank1
 15478  01B3  0828               	movf	logf@x^(0+128),w
 15479  01B4  0022               	movlb	2	; select bank2
 15480  01B5  00D6               	movwf	logf@u^(0+256)
 15481  01B6  0859               	movf	(logf@u+3)^(0+256),w
 15482  01B7  00E1               	movwf	(logf@ix+3)^(0+256)
 15483  01B8  0858               	movf	(logf@u+2)^(0+256),w
 15484  01B9  00E0               	movwf	(logf@ix+2)^(0+256)
 15485  01BA  0857               	movf	(logf@u+1)^(0+256),w
 15486  01BB  00DF               	movwf	(logf@ix+1)^(0+256)
 15487  01BC  0856               	movf	logf@u^(0+256),w
 15488  01BD  00DE               	movwf	logf@ix^(0+256)
 15489  01BE  29D9               	goto	l7963
 15490  01BF                     l7951:	
 15491  01BF  3080               	movlw	128
 15492  01C0  0022               	movlb	2	; select bank2
 15493  01C1  0260               	subwf	(logf@ix+2)^(0+256),w
 15494  01C2  307F               	movlw	127
 15495  01C3  3B61               	subwfb	(logf@ix+3)^(0+256),w
 15496  01C4  1803               	btfsc	3,0
 15497  01C5  0008               	return
 15498  01C6  3080               	movlw	128
 15499  01C7  0660               	xorwf	(logf@ix+2)^(0+256),w
 15500  01C8  303F               	movlw	63
 15501  01C9  1903               	skipnz
 15502  01CA  0661               	xorwf	(logf@ix+3)^(0+256),w
 15503  01CB  045E               	iorwf	logf@ix^(0+256),w
 15504  01CC  045F               	iorwf	(logf@ix+1)^(0+256),w
 15505  01CD  1D03               	btfss	3,2
 15506  01CE  29D9               	goto	l7963
 15507  01CF  3000               	movlw	0
 15508  01D0  0021               	movlb	1	; select bank1
 15509  01D1  00AB               	movwf	(?_logf+3)^(0+128)
 15510  01D2  3000               	movlw	0
 15511  01D3  00AA               	movwf	(?_logf+2)^(0+128)
 15512  01D4  3000               	movlw	0
 15513  01D5  00A9               	movwf	(?_logf+1)^(0+128)
 15514  01D6  3000               	movlw	0
 15515  01D7  00A8               	movwf	?_logf^(0+128)
 15516  01D8  0008               	return
 15517  01D9                     l7963:	
 15518  01D9  300D               	movlw	13
 15519  01DA  07DE               	addwf	logf@ix^(0+256),f
 15520  01DB  30FB               	movlw	251
 15521  01DC  3DDF               	addwfc	(logf@ix+1)^(0+256),f
 15522  01DD  304A               	movlw	74
 15523  01DE  3DE0               	addwfc	(logf@ix+2)^(0+256),f
 15524  01DF  3000               	movlw	0
 15525  01E0  3DE1               	addwfc	(logf@ix+3)^(0+256),f
 15526  01E1  085E               	movf	logf@ix^(0+256),w
 15527  01E2  0021               	movlb	1	; select bank1
 15528  01E3  00AC               	movwf	??_logf^(0+128)
 15529  01E4  0022               	movlb	2	; select bank2
 15530  01E5  085F               	movf	(logf@ix+1)^(0+256),w
 15531  01E6  0021               	movlb	1	; select bank1
 15532  01E7  00AD               	movwf	(??_logf^(0+128)+1)
 15533  01E8  0022               	movlb	2	; select bank2
 15534  01E9  0860               	movf	(logf@ix+2)^(0+256),w
 15535  01EA  0021               	movlb	1	; select bank1
 15536  01EB  00AE               	movwf	(??_logf^(0+128)+2)
 15537  01EC  0022               	movlb	2	; select bank2
 15538  01ED  0861               	movf	(logf@ix+3)^(0+256),w
 15539  01EE  0021               	movlb	1	; select bank1
 15540  01EF  00AF               	movwf	(??_logf^(0+128)+3)
 15541  01F0  3017               	movlw	23
 15542  01F1                     u10855:	
 15543  01F1  36AF               	lsrf	(??_logf^(0+128)+3),f
 15544  01F2  0CAE               	rrf	(??_logf^(0+128)+2),f
 15545  01F3  0CAD               	rrf	(??_logf^(0+128)+1),f
 15546  01F4  0CAC               	rrf	??_logf^(0+128),f
 15547  01F5  0B89               	decfsz	9,f
 15548  01F6  29F1               	goto	u10855
 15549  01F7  082C               	movf	??_logf^(0+128),w
 15550  01F8  3E81               	addlw	129
 15551  01F9  00B0               	movwf	(??_logf+4)^(0+128)
 15552  01FA  30FF               	movlw	255
 15553  01FB  3D2D               	addwfc	(??_logf+1)^(0+128),w
 15554  01FC  00B1               	movwf	(??_logf+5)^(0+128)
 15555  01FD  0830               	movf	(??_logf+4)^(0+128),w
 15556  01FE  0022               	movlb	2	; select bank2
 15557  01FF  07BC               	addwf	logf@k^(0+256),f
 15558  0200  0021               	movlb	1	; select bank1
 15559  0201  0831               	movf	(??_logf+5)^(0+128),w
 15560  0202  0022               	movlb	2	; select bank2
 15561  0203  3DBD               	addwfc	(logf@k+1)^(0+256),f
 15562  0204  30F3               	movlw	243
 15563  0205  0021               	movlb	1	; select bank1
 15564  0206  00AC               	movwf	??_logf^(0+128)
 15565  0207  3004               	movlw	4
 15566  0208  00AD               	movwf	(??_logf^(0+128)+1)
 15567  0209  3035               	movlw	53
 15568  020A  00AE               	movwf	(??_logf^(0+128)+2)
 15569  020B  303F               	movlw	63
 15570  020C  00AF               	movwf	(??_logf^(0+128)+3)
 15571  020D  30FF               	movlw	255
 15572  020E  0022               	movlb	2	; select bank2
 15573  020F  055E               	andwf	logf@ix^(0+256),w
 15574  0210  0021               	movlb	1	; select bank1
 15575  0211  00B0               	movwf	(??_logf+4)^(0+128)
 15576  0212  30FF               	movlw	255
 15577  0213  0022               	movlb	2	; select bank2
 15578  0214  055F               	andwf	(logf@ix+1)^(0+256),w
 15579  0215  0021               	movlb	1	; select bank1
 15580  0216  00B1               	movwf	((??_logf+4)^(0+128)+1)
 15581  0217  307F               	movlw	127
 15582  0218  0022               	movlb	2	; select bank2
 15583  0219  0560               	andwf	(logf@ix+2)^(0+256),w
 15584  021A  0021               	movlb	1	; select bank1
 15585  021B  00B2               	movwf	((??_logf+4)^(0+128)+2)
 15586  021C  3000               	movlw	0
 15587  021D  0022               	movlb	2	; select bank2
 15588  021E  0561               	andwf	(logf@ix+3)^(0+256),w
 15589  021F  0021               	movlb	1	; select bank1
 15590  0220  00B3               	movwf	((??_logf+4)^(0+128)+3)
 15591  0221  0830               	movf	(??_logf+4)^(0+128),w
 15592  0222  07AC               	addwf	??_logf^(0+128),f
 15593  0223  0831               	movf	(??_logf+5)^(0+128),w
 15594  0224  3DAD               	addwfc	(??_logf^(0+128)+1),f
 15595  0225  0832               	movf	(??_logf+6)^(0+128),w
 15596  0226  3DAE               	addwfc	(??_logf^(0+128)+2),f
 15597  0227  0833               	movf	(??_logf+7)^(0+128),w
 15598  0228  3DAF               	addwfc	(??_logf^(0+128)+3),f
 15599  0229  082F               	movf	(??_logf+3)^(0+128),w
 15600  022A  0022               	movlb	2	; select bank2
 15601  022B  00E1               	movwf	(logf@ix+3)^(0+256)
 15602  022C  0021               	movlb	1	; select bank1
 15603  022D  082E               	movf	(??_logf+2)^(0+128),w
 15604  022E  0022               	movlb	2	; select bank2
 15605  022F  00E0               	movwf	(logf@ix+2)^(0+256)
 15606  0230  0021               	movlb	1	; select bank1
 15607  0231  082D               	movf	(??_logf+1)^(0+128),w
 15608  0232  0022               	movlb	2	; select bank2
 15609  0233  00DF               	movwf	(logf@ix+1)^(0+256)
 15610  0234  0021               	movlb	1	; select bank1
 15611  0235  082C               	movf	??_logf^(0+128),w
 15612  0236  0022               	movlb	2	; select bank2
 15613  0237  00DE               	movwf	logf@ix^(0+256)
 15614  0238  0861               	movf	(logf@ix+3)^(0+256),w
 15615  0239  00D9               	movwf	(logf@u+3)^(0+256)
 15616  023A  0860               	movf	(logf@ix+2)^(0+256),w
 15617  023B  00D8               	movwf	(logf@u+2)^(0+256)
 15618  023C  085F               	movf	(logf@ix+1)^(0+256),w
 15619  023D  00D7               	movwf	(logf@u+1)^(0+256)
 15620  023E  085E               	movf	logf@ix^(0+256),w
 15621  023F  00D6               	movwf	logf@u^(0+256)
 15622  0240  0859               	movf	(logf@u+3)^(0+256),w
 15623  0241  0021               	movlb	1	; select bank1
 15624  0242  00AB               	movwf	(logf@x+3)^(0+128)
 15625  0243  0022               	movlb	2	; select bank2
 15626  0244  0858               	movf	(logf@u+2)^(0+256),w
 15627  0245  0021               	movlb	1	; select bank1
 15628  0246  00AA               	movwf	(logf@x+2)^(0+128)
 15629  0247  0022               	movlb	2	; select bank2
 15630  0248  0857               	movf	(logf@u+1)^(0+256),w
 15631  0249  0021               	movlb	1	; select bank1
 15632  024A  00A9               	movwf	(logf@x+1)^(0+128)
 15633  024B  0022               	movlb	2	; select bank2
 15634  024C  0856               	movf	logf@u^(0+256),w
 15635  024D  0021               	movlb	1	; select bank1
 15636  024E  00A8               	movwf	logf@x^(0+128)
 15637  024F  30BF               	movlw	191
 15638  0250  0020               	movlb	0	; select bank0
 15639  0251  00DD               	movwf	___fladd@b+3
 15640  0252  3080               	movlw	128
 15641  0253  00DC               	movwf	___fladd@b+2
 15642  0254  3000               	movlw	0
 15643  0255  00DB               	movwf	___fladd@b+1
 15644  0256  3000               	movlw	0
 15645  0257  00DA               	movwf	___fladd@b
 15646  0258  0021               	movlb	1	; select bank1
 15647  0259  082B               	movf	(logf@x+3)^(0+128),w
 15648  025A  0020               	movlb	0	; select bank0
 15649  025B  00E1               	movwf	___fladd@a+3
 15650  025C  0021               	movlb	1	; select bank1
 15651  025D  082A               	movf	(logf@x+2)^(0+128),w
 15652  025E  0020               	movlb	0	; select bank0
 15653  025F  00E0               	movwf	___fladd@a+2
 15654  0260  0021               	movlb	1	; select bank1
 15655  0261  0829               	movf	(logf@x+1)^(0+128),w
 15656  0262  0020               	movlb	0	; select bank0
 15657  0263  00DF               	movwf	___fladd@a+1
 15658  0264  0021               	movlb	1	; select bank1
 15659  0265  0828               	movf	logf@x^(0+128),w
 15660  0266  0020               	movlb	0	; select bank0
 15661  0267  00DE               	movwf	___fladd@a
 15662  0268  3185  25F3  3180   	fcall	___fladd
 15663  026B  0020               	movlb	0	; select bank0
 15664  026C  085D               	movf	?___fladd+3,w
 15665  026D  0022               	movlb	2	; select bank2
 15666  026E  00DD               	movwf	(logf@f+3)^(0+256)
 15667  026F  0020               	movlb	0	; select bank0
 15668  0270  085C               	movf	?___fladd+2,w
 15669  0271  0022               	movlb	2	; select bank2
 15670  0272  00DC               	movwf	(logf@f+2)^(0+256)
 15671  0273  0020               	movlb	0	; select bank0
 15672  0274  085B               	movf	?___fladd+1,w
 15673  0275  0022               	movlb	2	; select bank2
 15674  0276  00DB               	movwf	(logf@f+1)^(0+256)
 15675  0277  0020               	movlb	0	; select bank0
 15676  0278  085A               	movf	?___fladd,w
 15677  0279  0022               	movlb	2	; select bank2
 15678  027A  00DA               	movwf	logf@f^(0+256)
 15679  027B  3040               	movlw	64
 15680  027C  0020               	movlb	0	; select bank0
 15681  027D  00DD               	movwf	___fladd@b+3
 15682  027E  3000               	movlw	0
 15683  027F  00DC               	movwf	___fladd@b+2
 15684  0280  3000               	movlw	0
 15685  0281  00DB               	movwf	___fladd@b+1
 15686  0282  3000               	movlw	0
 15687  0283  00DA               	movwf	___fladd@b
 15688  0284  0022               	movlb	2	; select bank2
 15689  0285  085D               	movf	(logf@f+3)^(0+256),w
 15690  0286  0020               	movlb	0	; select bank0
 15691  0287  00E1               	movwf	___fladd@a+3
 15692  0288  0022               	movlb	2	; select bank2
 15693  0289  085C               	movf	(logf@f+2)^(0+256),w
 15694  028A  0020               	movlb	0	; select bank0
 15695  028B  00E0               	movwf	___fladd@a+2
 15696  028C  0022               	movlb	2	; select bank2
 15697  028D  085B               	movf	(logf@f+1)^(0+256),w
 15698  028E  0020               	movlb	0	; select bank0
 15699  028F  00DF               	movwf	___fladd@a+1
 15700  0290  0022               	movlb	2	; select bank2
 15701  0291  085A               	movf	logf@f^(0+256),w
 15702  0292  0020               	movlb	0	; select bank0
 15703  0293  00DE               	movwf	___fladd@a
 15704  0294  3185  25F3  3180   	fcall	___fladd
 15705  0297  0020               	movlb	0	; select bank0
 15706  0298  085D               	movf	?___fladd+3,w
 15707  0299  00C3               	movwf	___fldiv@a+3
 15708  029A  085C               	movf	?___fladd+2,w
 15709  029B  00C2               	movwf	___fldiv@a+2
 15710  029C  085B               	movf	?___fladd+1,w
 15711  029D  00C1               	movwf	___fldiv@a+1
 15712  029E  085A               	movf	?___fladd,w
 15713  029F  00C0               	movwf	___fldiv@a
 15714  02A0  0022               	movlb	2	; select bank2
 15715  02A1  085D               	movf	(logf@f+3)^(0+256),w
 15716  02A2  0020               	movlb	0	; select bank0
 15717  02A3  00C7               	movwf	___fldiv@b+3
 15718  02A4  0022               	movlb	2	; select bank2
 15719  02A5  085C               	movf	(logf@f+2)^(0+256),w
 15720  02A6  0020               	movlb	0	; select bank0
 15721  02A7  00C6               	movwf	___fldiv@b+2
 15722  02A8  0022               	movlb	2	; select bank2
 15723  02A9  085B               	movf	(logf@f+1)^(0+256),w
 15724  02AA  0020               	movlb	0	; select bank0
 15725  02AB  00C5               	movwf	___fldiv@b+1
 15726  02AC  0022               	movlb	2	; select bank2
 15727  02AD  085A               	movf	logf@f^(0+256),w
 15728  02AE  0020               	movlb	0	; select bank0
 15729  02AF  00C4               	movwf	___fldiv@b
 15730  02B0  319B  234B  3180   	fcall	___fldiv
 15731  02B3  0020               	movlb	0	; select bank0
 15732  02B4  0843               	movf	?___fldiv+3,w
 15733  02B5  0022               	movlb	2	; select bank2
 15734  02B6  00C9               	movwf	(logf@s+3)^(0+256)
 15735  02B7  0020               	movlb	0	; select bank0
 15736  02B8  0842               	movf	?___fldiv+2,w
 15737  02B9  0022               	movlb	2	; select bank2
 15738  02BA  00C8               	movwf	(logf@s+2)^(0+256)
 15739  02BB  0020               	movlb	0	; select bank0
 15740  02BC  0841               	movf	?___fldiv+1,w
 15741  02BD  0022               	movlb	2	; select bank2
 15742  02BE  00C7               	movwf	(logf@s+1)^(0+256)
 15743  02BF  0020               	movlb	0	; select bank0
 15744  02C0  0840               	movf	?___fldiv,w
 15745  02C1  0022               	movlb	2	; select bank2
 15746  02C2  00C6               	movwf	logf@s^(0+256)
 15747  02C3  0849               	movf	(logf@s+3)^(0+256),w
 15748  02C4  0020               	movlb	0	; select bank0
 15749  02C5  00A9               	movwf	___flmul@b+3
 15750  02C6  0022               	movlb	2	; select bank2
 15751  02C7  0848               	movf	(logf@s+2)^(0+256),w
 15752  02C8  0020               	movlb	0	; select bank0
 15753  02C9  00A8               	movwf	___flmul@b+2
 15754  02CA  0022               	movlb	2	; select bank2
 15755  02CB  0847               	movf	(logf@s+1)^(0+256),w
 15756  02CC  0020               	movlb	0	; select bank0
 15757  02CD  00A7               	movwf	___flmul@b+1
 15758  02CE  0022               	movlb	2	; select bank2
 15759  02CF  0846               	movf	logf@s^(0+256),w
 15760  02D0  0020               	movlb	0	; select bank0
 15761  02D1  00A6               	movwf	___flmul@b
 15762  02D2  0022               	movlb	2	; select bank2
 15763  02D3  0849               	movf	(logf@s+3)^(0+256),w
 15764  02D4  0020               	movlb	0	; select bank0
 15765  02D5  00AD               	movwf	___flmul@a+3
 15766  02D6  0022               	movlb	2	; select bank2
 15767  02D7  0848               	movf	(logf@s+2)^(0+256),w
 15768  02D8  0020               	movlb	0	; select bank0
 15769  02D9  00AC               	movwf	___flmul@a+2
 15770  02DA  0022               	movlb	2	; select bank2
 15771  02DB  0847               	movf	(logf@s+1)^(0+256),w
 15772  02DC  0020               	movlb	0	; select bank0
 15773  02DD  00AB               	movwf	___flmul@a+1
 15774  02DE  0022               	movlb	2	; select bank2
 15775  02DF  0846               	movf	logf@s^(0+256),w
 15776  02E0  0020               	movlb	0	; select bank0
 15777  02E1  00AA               	movwf	___flmul@a
 15778  02E2  3190  2023  3180   	fcall	___flmul
 15779  02E5  0020               	movlb	0	; select bank0
 15780  02E6  0829               	movf	?___flmul+3,w
 15781  02E7  0022               	movlb	2	; select bank2
 15782  02E8  00CD               	movwf	(logf@z+3)^(0+256)
 15783  02E9  0020               	movlb	0	; select bank0
 15784  02EA  0828               	movf	?___flmul+2,w
 15785  02EB  0022               	movlb	2	; select bank2
 15786  02EC  00CC               	movwf	(logf@z+2)^(0+256)
 15787  02ED  0020               	movlb	0	; select bank0
 15788  02EE  0827               	movf	?___flmul+1,w
 15789  02EF  0022               	movlb	2	; select bank2
 15790  02F0  00CB               	movwf	(logf@z+1)^(0+256)
 15791  02F1  0020               	movlb	0	; select bank0
 15792  02F2  0826               	movf	?___flmul,w
 15793  02F3  0022               	movlb	2	; select bank2
 15794  02F4  00CA               	movwf	logf@z^(0+256)
 15795  02F5  084D               	movf	(logf@z+3)^(0+256),w
 15796  02F6  0020               	movlb	0	; select bank0
 15797  02F7  00A9               	movwf	___flmul@b+3
 15798  02F8  0022               	movlb	2	; select bank2
 15799  02F9  084C               	movf	(logf@z+2)^(0+256),w
 15800  02FA  0020               	movlb	0	; select bank0
 15801  02FB  00A8               	movwf	___flmul@b+2
 15802  02FC  0022               	movlb	2	; select bank2
 15803  02FD  084B               	movf	(logf@z+1)^(0+256),w
 15804  02FE  0020               	movlb	0	; select bank0
 15805  02FF  00A7               	movwf	___flmul@b+1
 15806  0300  0022               	movlb	2	; select bank2
 15807  0301  084A               	movf	logf@z^(0+256),w
 15808  0302  0020               	movlb	0	; select bank0
 15809  0303  00A6               	movwf	___flmul@b
 15810  0304  0022               	movlb	2	; select bank2
 15811  0305  084D               	movf	(logf@z+3)^(0+256),w
 15812  0306  0020               	movlb	0	; select bank0
 15813  0307  00AD               	movwf	___flmul@a+3
 15814  0308  0022               	movlb	2	; select bank2
 15815  0309  084C               	movf	(logf@z+2)^(0+256),w
 15816  030A  0020               	movlb	0	; select bank0
 15817  030B  00AC               	movwf	___flmul@a+2
 15818  030C  0022               	movlb	2	; select bank2
 15819  030D  084B               	movf	(logf@z+1)^(0+256),w
 15820  030E  0020               	movlb	0	; select bank0
 15821  030F  00AB               	movwf	___flmul@a+1
 15822  0310  0022               	movlb	2	; select bank2
 15823  0311  084A               	movf	logf@z^(0+256),w
 15824  0312  0020               	movlb	0	; select bank0
 15825  0313  00AA               	movwf	___flmul@a
 15826  0314  3190  2023  3180   	fcall	___flmul
 15827  0317  0020               	movlb	0	; select bank0
 15828  0318  0829               	movf	?___flmul+3,w
 15829  0319  0022               	movlb	2	; select bank2
 15830  031A  00D1               	movwf	(logf@w+3)^(0+256)
 15831  031B  0020               	movlb	0	; select bank0
 15832  031C  0828               	movf	?___flmul+2,w
 15833  031D  0022               	movlb	2	; select bank2
 15834  031E  00D0               	movwf	(logf@w+2)^(0+256)
 15835  031F  0020               	movlb	0	; select bank0
 15836  0320  0827               	movf	?___flmul+1,w
 15837  0321  0022               	movlb	2	; select bank2
 15838  0322  00CF               	movwf	(logf@w+1)^(0+256)
 15839  0323  0020               	movlb	0	; select bank0
 15840  0324  0826               	movf	?___flmul,w
 15841  0325  0022               	movlb	2	; select bank2
 15842  0326  00CE               	movwf	logf@w^(0+256)
 15843  0327  303E               	movlw	62
 15844  0328  0020               	movlb	0	; select bank0
 15845  0329  00DD               	movwf	___fladd@b+3
 15846  032A  30CC               	movlw	204
 15847  032B  00DC               	movwf	___fladd@b+2
 15848  032C  30CE               	movlw	206
 15849  032D  00DB               	movwf	___fladd@b+1
 15850  032E  3013               	movlw	19
 15851  032F  00DA               	movwf	___fladd@b
 15852  0330  303E               	movlw	62
 15853  0331  00A9               	movwf	___flmul@b+3
 15854  0332  3078               	movlw	120
 15855  0333  00A8               	movwf	___flmul@b+2
 15856  0334  309E               	movlw	158
 15857  0335  00A7               	movwf	___flmul@b+1
 15858  0336  3026               	movlw	38
 15859  0337  00A6               	movwf	___flmul@b
 15860  0338  0022               	movlb	2	; select bank2
 15861  0339  0851               	movf	(logf@w+3)^(0+256),w
 15862  033A  0020               	movlb	0	; select bank0
 15863  033B  00AD               	movwf	___flmul@a+3
 15864  033C  0022               	movlb	2	; select bank2
 15865  033D  0850               	movf	(logf@w+2)^(0+256),w
 15866  033E  0020               	movlb	0	; select bank0
 15867  033F  00AC               	movwf	___flmul@a+2
 15868  0340  0022               	movlb	2	; select bank2
 15869  0341  084F               	movf	(logf@w+1)^(0+256),w
 15870  0342  0020               	movlb	0	; select bank0
 15871  0343  00AB               	movwf	___flmul@a+1
 15872  0344  0022               	movlb	2	; select bank2
 15873  0345  084E               	movf	logf@w^(0+256),w
 15874  0346  0020               	movlb	0	; select bank0
 15875  0347  00AA               	movwf	___flmul@a
 15876  0348  3190  2023  3180   	fcall	___flmul
 15877  034B  0020               	movlb	0	; select bank0
 15878  034C  0829               	movf	?___flmul+3,w
 15879  034D  00E1               	movwf	___fladd@a+3
 15880  034E  0828               	movf	?___flmul+2,w
 15881  034F  00E0               	movwf	___fladd@a+2
 15882  0350  0827               	movf	?___flmul+1,w
 15883  0351  00DF               	movwf	___fladd@a+1
 15884  0352  0826               	movf	?___flmul,w
 15885  0353  00DE               	movwf	___fladd@a
 15886  0354  3185  25F3  3180   	fcall	___fladd
 15887  0357  0020               	movlb	0	; select bank0
 15888  0358  085D               	movf	?___fladd+3,w
 15889  0359  0022               	movlb	2	; select bank2
 15890  035A  00D5               	movwf	(_logf$2090+3)^(0+256)
 15891  035B  0020               	movlb	0	; select bank0
 15892  035C  085C               	movf	?___fladd+2,w
 15893  035D  0022               	movlb	2	; select bank2
 15894  035E  00D4               	movwf	(_logf$2090+2)^(0+256)
 15895  035F  0020               	movlb	0	; select bank0
 15896  0360  085B               	movf	?___fladd+1,w
 15897  0361  0022               	movlb	2	; select bank2
 15898  0362  00D3               	movwf	(_logf$2090+1)^(0+256)
 15899  0363  0020               	movlb	0	; select bank0
 15900  0364  085A               	movf	?___fladd,w
 15901  0365  0022               	movlb	2	; select bank2
 15902  0366  00D2               	movwf	_logf$2090^(0+256)
 15903  0367  0851               	movf	(logf@w+3)^(0+256),w
 15904  0368  0020               	movlb	0	; select bank0
 15905  0369  00A9               	movwf	___flmul@b+3
 15906  036A  0022               	movlb	2	; select bank2
 15907  036B  0850               	movf	(logf@w+2)^(0+256),w
 15908  036C  0020               	movlb	0	; select bank0
 15909  036D  00A8               	movwf	___flmul@b+2
 15910  036E  0022               	movlb	2	; select bank2
 15911  036F  084F               	movf	(logf@w+1)^(0+256),w
 15912  0370  0020               	movlb	0	; select bank0
 15913  0371  00A7               	movwf	___flmul@b+1
 15914  0372  0022               	movlb	2	; select bank2
 15915  0373  084E               	movf	logf@w^(0+256),w
 15916  0374  0020               	movlb	0	; select bank0
 15917  0375  00A6               	movwf	___flmul@b
 15918  0376  0022               	movlb	2	; select bank2
 15919  0377  0855               	movf	(_logf$2090+3)^(0+256),w
 15920  0378  0020               	movlb	0	; select bank0
 15921  0379  00AD               	movwf	___flmul@a+3
 15922  037A  0022               	movlb	2	; select bank2
 15923  037B  0854               	movf	(_logf$2090+2)^(0+256),w
 15924  037C  0020               	movlb	0	; select bank0
 15925  037D  00AC               	movwf	___flmul@a+2
 15926  037E  0022               	movlb	2	; select bank2
 15927  037F  0853               	movf	(_logf$2090+1)^(0+256),w
 15928  0380  0020               	movlb	0	; select bank0
 15929  0381  00AB               	movwf	___flmul@a+1
 15930  0382  0022               	movlb	2	; select bank2
 15931  0383  0852               	movf	_logf$2090^(0+256),w
 15932  0384  0020               	movlb	0	; select bank0
 15933  0385  00AA               	movwf	___flmul@a
 15934  0386  3190  2023  3180   	fcall	___flmul
 15935  0389  0020               	movlb	0	; select bank0
 15936  038A  0829               	movf	?___flmul+3,w
 15937  038B  0022               	movlb	2	; select bank2
 15938  038C  00A7               	movwf	(logf@t1+3)^(0+256)
 15939  038D  0020               	movlb	0	; select bank0
 15940  038E  0828               	movf	?___flmul+2,w
 15941  038F  0022               	movlb	2	; select bank2
 15942  0390  00A6               	movwf	(logf@t1+2)^(0+256)
 15943  0391  0020               	movlb	0	; select bank0
 15944  0392  0827               	movf	?___flmul+1,w
 15945  0393  0022               	movlb	2	; select bank2
 15946  0394  00A5               	movwf	(logf@t1+1)^(0+256)
 15947  0395  0020               	movlb	0	; select bank0
 15948  0396  0826               	movf	?___flmul,w
 15949  0397  0022               	movlb	2	; select bank2
 15950  0398  00A4               	movwf	logf@t1^(0+256)
 15951  0399  303F               	movlw	63
 15952  039A  0020               	movlb	0	; select bank0
 15953  039B  00DD               	movwf	___fladd@b+3
 15954  039C  302A               	movlw	42
 15955  039D  00DC               	movwf	___fladd@b+2
 15956  039E  30AA               	movlw	170
 15957  039F  00DB               	movwf	___fladd@b+1
 15958  03A0  30AA               	movlw	170
 15959  03A1  00DA               	movwf	___fladd@b
 15960  03A2  303E               	movlw	62
 15961  03A3  00A9               	movwf	___flmul@b+3
 15962  03A4  3091               	movlw	145
 15963  03A5  00A8               	movwf	___flmul@b+2
 15964  03A6  30E9               	movlw	233
 15965  03A7  00A7               	movwf	___flmul@b+1
 15966  03A8  30EE               	movlw	238
 15967  03A9  00A6               	movwf	___flmul@b
 15968  03AA  0022               	movlb	2	; select bank2
 15969  03AB  0851               	movf	(logf@w+3)^(0+256),w
 15970  03AC  0020               	movlb	0	; select bank0
 15971  03AD  00AD               	movwf	___flmul@a+3
 15972  03AE  0022               	movlb	2	; select bank2
 15973  03AF  0850               	movf	(logf@w+2)^(0+256),w
 15974  03B0  0020               	movlb	0	; select bank0
 15975  03B1  00AC               	movwf	___flmul@a+2
 15976  03B2  0022               	movlb	2	; select bank2
 15977  03B3  084F               	movf	(logf@w+1)^(0+256),w
 15978  03B4  0020               	movlb	0	; select bank0
 15979  03B5  00AB               	movwf	___flmul@a+1
 15980  03B6  0022               	movlb	2	; select bank2
 15981  03B7  084E               	movf	logf@w^(0+256),w
 15982  03B8  0020               	movlb	0	; select bank0
 15983  03B9  00AA               	movwf	___flmul@a
 15984  03BA  3190  2023  3180   	fcall	___flmul
 15985  03BD  0020               	movlb	0	; select bank0
 15986  03BE  0829               	movf	?___flmul+3,w
 15987  03BF  00E1               	movwf	___fladd@a+3
 15988  03C0  0828               	movf	?___flmul+2,w
 15989  03C1  00E0               	movwf	___fladd@a+2
 15990  03C2  0827               	movf	?___flmul+1,w
 15991  03C3  00DF               	movwf	___fladd@a+1
 15992  03C4  0826               	movf	?___flmul,w
 15993  03C5  00DE               	movwf	___fladd@a
 15994  03C6  3185  25F3  3180   	fcall	___fladd
 15995  03C9  0020               	movlb	0	; select bank0
 15996  03CA  085D               	movf	?___fladd+3,w
 15997  03CB  0022               	movlb	2	; select bank2
 15998  03CC  00D5               	movwf	(_logf$2090+3)^(0+256)
 15999  03CD  0020               	movlb	0	; select bank0
 16000  03CE  085C               	movf	?___fladd+2,w
 16001  03CF  0022               	movlb	2	; select bank2
 16002  03D0  00D4               	movwf	(_logf$2090+2)^(0+256)
 16003  03D1  0020               	movlb	0	; select bank0
 16004  03D2  085B               	movf	?___fladd+1,w
 16005  03D3  0022               	movlb	2	; select bank2
 16006  03D4  00D3               	movwf	(_logf$2090+1)^(0+256)
 16007  03D5  0020               	movlb	0	; select bank0
 16008  03D6  085A               	movf	?___fladd,w
 16009  03D7  0022               	movlb	2	; select bank2
 16010  03D8  00D2               	movwf	_logf$2090^(0+256)
 16011  03D9  084D               	movf	(logf@z+3)^(0+256),w
 16012  03DA  0020               	movlb	0	; select bank0
 16013  03DB  00A9               	movwf	___flmul@b+3
 16014  03DC  0022               	movlb	2	; select bank2
 16015  03DD  084C               	movf	(logf@z+2)^(0+256),w
 16016  03DE  0020               	movlb	0	; select bank0
 16017  03DF  00A8               	movwf	___flmul@b+2
 16018  03E0  0022               	movlb	2	; select bank2
 16019  03E1  084B               	movf	(logf@z+1)^(0+256),w
 16020  03E2  0020               	movlb	0	; select bank0
 16021  03E3  00A7               	movwf	___flmul@b+1
 16022  03E4  0022               	movlb	2	; select bank2
 16023  03E5  084A               	movf	logf@z^(0+256),w
 16024  03E6  0020               	movlb	0	; select bank0
 16025  03E7  00A6               	movwf	___flmul@b
 16026  03E8  0022               	movlb	2	; select bank2
 16027  03E9  0855               	movf	(_logf$2090+3)^(0+256),w
 16028  03EA  0020               	movlb	0	; select bank0
 16029  03EB  00AD               	movwf	___flmul@a+3
 16030  03EC  0022               	movlb	2	; select bank2
 16031  03ED  0854               	movf	(_logf$2090+2)^(0+256),w
 16032  03EE  0020               	movlb	0	; select bank0
 16033  03EF  00AC               	movwf	___flmul@a+2
 16034  03F0  0022               	movlb	2	; select bank2
 16035  03F1  0853               	movf	(_logf$2090+1)^(0+256),w
 16036  03F2  0020               	movlb	0	; select bank0
 16037  03F3  00AB               	movwf	___flmul@a+1
 16038  03F4  0022               	movlb	2	; select bank2
 16039  03F5  0852               	movf	_logf$2090^(0+256),w
 16040  03F6  0020               	movlb	0	; select bank0
 16041  03F7  00AA               	movwf	___flmul@a
 16042  03F8  3190  2023  3180   	fcall	___flmul
 16043  03FB  0020               	movlb	0	; select bank0
 16044  03FC  0829               	movf	?___flmul+3,w
 16045  03FD  0022               	movlb	2	; select bank2
 16046  03FE  00AB               	movwf	(logf@t2+3)^(0+256)
 16047  03FF  0020               	movlb	0	; select bank0
 16048  0400  0828               	movf	?___flmul+2,w
 16049  0401  0022               	movlb	2	; select bank2
 16050  0402  00AA               	movwf	(logf@t2+2)^(0+256)
 16051  0403  0020               	movlb	0	; select bank0
 16052  0404  0827               	movf	?___flmul+1,w
 16053  0405  0022               	movlb	2	; select bank2
 16054  0406  00A9               	movwf	(logf@t2+1)^(0+256)
 16055  0407  0020               	movlb	0	; select bank0
 16056  0408  0826               	movf	?___flmul,w
 16057  0409  0022               	movlb	2	; select bank2
 16058  040A  00A8               	movwf	logf@t2^(0+256)
 16059  040B  0827               	movf	(logf@t1+3)^(0+256),w
 16060  040C  0020               	movlb	0	; select bank0
 16061  040D  00DD               	movwf	___fladd@b+3
 16062  040E  0022               	movlb	2	; select bank2
 16063  040F  0826               	movf	(logf@t1+2)^(0+256),w
 16064  0410  0020               	movlb	0	; select bank0
 16065  0411  00DC               	movwf	___fladd@b+2
 16066  0412  0022               	movlb	2	; select bank2
 16067  0413  0825               	movf	(logf@t1+1)^(0+256),w
 16068  0414  0020               	movlb	0	; select bank0
 16069  0415  00DB               	movwf	___fladd@b+1
 16070  0416  0022               	movlb	2	; select bank2
 16071  0417  0824               	movf	logf@t1^(0+256),w
 16072  0418  0020               	movlb	0	; select bank0
 16073  0419  00DA               	movwf	___fladd@b
 16074  041A  0022               	movlb	2	; select bank2
 16075  041B  082B               	movf	(logf@t2+3)^(0+256),w
 16076  041C  0020               	movlb	0	; select bank0
 16077  041D  00E1               	movwf	___fladd@a+3
 16078  041E  0022               	movlb	2	; select bank2
 16079  041F  082A               	movf	(logf@t2+2)^(0+256),w
 16080  0420  0020               	movlb	0	; select bank0
 16081  0421  00E0               	movwf	___fladd@a+2
 16082  0422  0022               	movlb	2	; select bank2
 16083  0423  0829               	movf	(logf@t2+1)^(0+256),w
 16084  0424  0020               	movlb	0	; select bank0
 16085  0425  00DF               	movwf	___fladd@a+1
 16086  0426  0022               	movlb	2	; select bank2
 16087  0427  0828               	movf	logf@t2^(0+256),w
 16088  0428  0020               	movlb	0	; select bank0
 16089  0429  00DE               	movwf	___fladd@a
 16090  042A  3185  25F3  3180   	fcall	___fladd
 16091  042D  0020               	movlb	0	; select bank0
 16092  042E  085D               	movf	?___fladd+3,w
 16093  042F  0022               	movlb	2	; select bank2
 16094  0430  00A3               	movwf	(logf@R+3)^(0+256)
 16095  0431  0020               	movlb	0	; select bank0
 16096  0432  085C               	movf	?___fladd+2,w
 16097  0433  0022               	movlb	2	; select bank2
 16098  0434  00A2               	movwf	(logf@R+2)^(0+256)
 16099  0435  0020               	movlb	0	; select bank0
 16100  0436  085B               	movf	?___fladd+1,w
 16101  0437  0022               	movlb	2	; select bank2
 16102  0438  00A1               	movwf	(logf@R+1)^(0+256)
 16103  0439  0020               	movlb	0	; select bank0
 16104  043A  085A               	movf	?___fladd,w
 16105  043B  0022               	movlb	2	; select bank2
 16106  043C  00A0               	movwf	logf@R^(0+256)
 16107  043D  303F               	movlw	63
 16108  043E  0020               	movlb	0	; select bank0
 16109  043F  00A9               	movwf	___flmul@b+3
 16110  0440  3000               	movlw	0
 16111  0441  00A8               	movwf	___flmul@b+2
 16112  0442  3000               	movlw	0
 16113  0443  00A7               	movwf	___flmul@b+1
 16114  0444  3000               	movlw	0
 16115  0445  00A6               	movwf	___flmul@b
 16116  0446  0022               	movlb	2	; select bank2
 16117  0447  085D               	movf	(logf@f+3)^(0+256),w
 16118  0448  0020               	movlb	0	; select bank0
 16119  0449  00AD               	movwf	___flmul@a+3
 16120  044A  0022               	movlb	2	; select bank2
 16121  044B  085C               	movf	(logf@f+2)^(0+256),w
 16122  044C  0020               	movlb	0	; select bank0
 16123  044D  00AC               	movwf	___flmul@a+2
 16124  044E  0022               	movlb	2	; select bank2
 16125  044F  085B               	movf	(logf@f+1)^(0+256),w
 16126  0450  0020               	movlb	0	; select bank0
 16127  0451  00AB               	movwf	___flmul@a+1
 16128  0452  0022               	movlb	2	; select bank2
 16129  0453  085A               	movf	logf@f^(0+256),w
 16130  0454  0020               	movlb	0	; select bank0
 16131  0455  00AA               	movwf	___flmul@a
 16132  0456  3190  2023  3180   	fcall	___flmul
 16133  0459  0020               	movlb	0	; select bank0
 16134  045A  0829               	movf	?___flmul+3,w
 16135  045B  0022               	movlb	2	; select bank2
 16136  045C  00D5               	movwf	(_logf$2090+3)^(0+256)
 16137  045D  0020               	movlb	0	; select bank0
 16138  045E  0828               	movf	?___flmul+2,w
 16139  045F  0022               	movlb	2	; select bank2
 16140  0460  00D4               	movwf	(_logf$2090+2)^(0+256)
 16141  0461  0020               	movlb	0	; select bank0
 16142  0462  0827               	movf	?___flmul+1,w
 16143  0463  0022               	movlb	2	; select bank2
 16144  0464  00D3               	movwf	(_logf$2090+1)^(0+256)
 16145  0465  0020               	movlb	0	; select bank0
 16146  0466  0826               	movf	?___flmul,w
 16147  0467  0022               	movlb	2	; select bank2
 16148  0468  00D2               	movwf	_logf$2090^(0+256)
 16149  0469  085D               	movf	(logf@f+3)^(0+256),w
 16150  046A  0020               	movlb	0	; select bank0
 16151  046B  00A9               	movwf	___flmul@b+3
 16152  046C  0022               	movlb	2	; select bank2
 16153  046D  085C               	movf	(logf@f+2)^(0+256),w
 16154  046E  0020               	movlb	0	; select bank0
 16155  046F  00A8               	movwf	___flmul@b+2
 16156  0470  0022               	movlb	2	; select bank2
 16157  0471  085B               	movf	(logf@f+1)^(0+256),w
 16158  0472  0020               	movlb	0	; select bank0
 16159  0473  00A7               	movwf	___flmul@b+1
 16160  0474  0022               	movlb	2	; select bank2
 16161  0475  085A               	movf	logf@f^(0+256),w
 16162  0476  0020               	movlb	0	; select bank0
 16163  0477  00A6               	movwf	___flmul@b
 16164  0478  0022               	movlb	2	; select bank2
 16165  0479  0855               	movf	(_logf$2090+3)^(0+256),w
 16166  047A  0020               	movlb	0	; select bank0
 16167  047B  00AD               	movwf	___flmul@a+3
 16168  047C  0022               	movlb	2	; select bank2
 16169  047D  0854               	movf	(_logf$2090+2)^(0+256),w
 16170  047E  0020               	movlb	0	; select bank0
 16171  047F  00AC               	movwf	___flmul@a+2
 16172  0480  0022               	movlb	2	; select bank2
 16173  0481  0853               	movf	(_logf$2090+1)^(0+256),w
 16174  0482  0020               	movlb	0	; select bank0
 16175  0483  00AB               	movwf	___flmul@a+1
 16176  0484  0022               	movlb	2	; select bank2
 16177  0485  0852               	movf	_logf$2090^(0+256),w
 16178  0486  0020               	movlb	0	; select bank0
 16179  0487  00AA               	movwf	___flmul@a
 16180  0488  3190  2023  3180   	fcall	___flmul
 16181  048B  0020               	movlb	0	; select bank0
 16182  048C  0829               	movf	?___flmul+3,w
 16183  048D  0022               	movlb	2	; select bank2
 16184  048E  00C1               	movwf	(logf@hfsq+3)^(0+256)
 16185  048F  0020               	movlb	0	; select bank0
 16186  0490  0828               	movf	?___flmul+2,w
 16187  0491  0022               	movlb	2	; select bank2
 16188  0492  00C0               	movwf	(logf@hfsq+2)^(0+256)
 16189  0493  0020               	movlb	0	; select bank0
 16190  0494  0827               	movf	?___flmul+1,w
 16191  0495  0022               	movlb	2	; select bank2
 16192  0496  00BF               	movwf	(logf@hfsq+1)^(0+256)
 16193  0497  0020               	movlb	0	; select bank0
 16194  0498  0826               	movf	?___flmul,w
 16195  0499  0022               	movlb	2	; select bank2
 16196  049A  00BE               	movwf	logf@hfsq^(0+256)
 16197  049B  083C               	movf	logf@k^(0+256),w
 16198  049C  00F1               	movwf	___xxtofl@val
 16199  049D  083D               	movf	(logf@k+1)^(0+256),w
 16200  049E  00F2               	movwf	___xxtofl@val+1
 16201  049F  0D89               	rlf	9,f
 16202  04A0  3B89               	subwfb	9,f
 16203  04A1  0989               	comf	9,f
 16204  04A2  00F3               	movwf	___xxtofl@val+2
 16205  04A3  00F4               	movwf	___xxtofl@val+3
 16206  04A4  3001               	movlw	1
 16207  04A5  3198  2009  3180   	fcall	___xxtofl
 16208  04A8  0874               	movf	?___xxtofl+3,w
 16209  04A9  0022               	movlb	2	; select bank2
 16210  04AA  00C5               	movwf	(logf@dk+3)^(0+256)
 16211  04AB  0873               	movf	?___xxtofl+2,w
 16212  04AC  00C4               	movwf	(logf@dk+2)^(0+256)
 16213  04AD  0872               	movf	?___xxtofl+1,w
 16214  04AE  00C3               	movwf	(logf@dk+1)^(0+256)
 16215  04AF  0871               	movf	?___xxtofl,w
 16216  04B0  00C2               	movwf	logf@dk^(0+256)
 16217  04B1  0849               	movf	(logf@s+3)^(0+256),w
 16218  04B2  0020               	movlb	0	; select bank0
 16219  04B3  00A9               	movwf	___flmul@b+3
 16220  04B4  0022               	movlb	2	; select bank2
 16221  04B5  0848               	movf	(logf@s+2)^(0+256),w
 16222  04B6  0020               	movlb	0	; select bank0
 16223  04B7  00A8               	movwf	___flmul@b+2
 16224  04B8  0022               	movlb	2	; select bank2
 16225  04B9  0847               	movf	(logf@s+1)^(0+256),w
 16226  04BA  0020               	movlb	0	; select bank0
 16227  04BB  00A7               	movwf	___flmul@b+1
 16228  04BC  0022               	movlb	2	; select bank2
 16229  04BD  0846               	movf	logf@s^(0+256),w
 16230  04BE  0020               	movlb	0	; select bank0
 16231  04BF  00A6               	movwf	___flmul@b
 16232  04C0  0022               	movlb	2	; select bank2
 16233  04C1  0823               	movf	(logf@R+3)^(0+256),w
 16234  04C2  0020               	movlb	0	; select bank0
 16235  04C3  00DD               	movwf	___fladd@b+3
 16236  04C4  0022               	movlb	2	; select bank2
 16237  04C5  0822               	movf	(logf@R+2)^(0+256),w
 16238  04C6  0020               	movlb	0	; select bank0
 16239  04C7  00DC               	movwf	___fladd@b+2
 16240  04C8  0022               	movlb	2	; select bank2
 16241  04C9  0821               	movf	(logf@R+1)^(0+256),w
 16242  04CA  0020               	movlb	0	; select bank0
 16243  04CB  00DB               	movwf	___fladd@b+1
 16244  04CC  0022               	movlb	2	; select bank2
 16245  04CD  0820               	movf	logf@R^(0+256),w
 16246  04CE  0020               	movlb	0	; select bank0
 16247  04CF  00DA               	movwf	___fladd@b
 16248  04D0  0022               	movlb	2	; select bank2
 16249  04D1  0841               	movf	(logf@hfsq+3)^(0+256),w
 16250  04D2  0020               	movlb	0	; select bank0
 16251  04D3  00E1               	movwf	___fladd@a+3
 16252  04D4  0022               	movlb	2	; select bank2
 16253  04D5  0840               	movf	(logf@hfsq+2)^(0+256),w
 16254  04D6  0020               	movlb	0	; select bank0
 16255  04D7  00E0               	movwf	___fladd@a+2
 16256  04D8  0022               	movlb	2	; select bank2
 16257  04D9  083F               	movf	(logf@hfsq+1)^(0+256),w
 16258  04DA  0020               	movlb	0	; select bank0
 16259  04DB  00DF               	movwf	___fladd@a+1
 16260  04DC  0022               	movlb	2	; select bank2
 16261  04DD  083E               	movf	logf@hfsq^(0+256),w
 16262  04DE  0020               	movlb	0	; select bank0
 16263  04DF  00DE               	movwf	___fladd@a
 16264  04E0  3185  25F3  3180   	fcall	___fladd
 16265  04E3  0020               	movlb	0	; select bank0
 16266  04E4  085D               	movf	?___fladd+3,w
 16267  04E5  00AD               	movwf	___flmul@a+3
 16268  04E6  085C               	movf	?___fladd+2,w
 16269  04E7  00AC               	movwf	___flmul@a+2
 16270  04E8  085B               	movf	?___fladd+1,w
 16271  04E9  00AB               	movwf	___flmul@a+1
 16272  04EA  085A               	movf	?___fladd,w
 16273  04EB  00AA               	movwf	___flmul@a
 16274  04EC  3190  2023  3180   	fcall	___flmul
 16275  04EF  0020               	movlb	0	; select bank0
 16276  04F0  0829               	movf	?___flmul+3,w
 16277  04F1  0022               	movlb	2	; select bank2
 16278  04F2  00AF               	movwf	(_logf$2091+3)^(0+256)
 16279  04F3  0020               	movlb	0	; select bank0
 16280  04F4  0828               	movf	?___flmul+2,w
 16281  04F5  0022               	movlb	2	; select bank2
 16282  04F6  00AE               	movwf	(_logf$2091+2)^(0+256)
 16283  04F7  0020               	movlb	0	; select bank0
 16284  04F8  0827               	movf	?___flmul+1,w
 16285  04F9  0022               	movlb	2	; select bank2
 16286  04FA  00AD               	movwf	(_logf$2091+1)^(0+256)
 16287  04FB  0020               	movlb	0	; select bank0
 16288  04FC  0826               	movf	?___flmul,w
 16289  04FD  0022               	movlb	2	; select bank2
 16290  04FE  00AC               	movwf	_logf$2091^(0+256)
 16291  04FF  3037               	movlw	55
 16292  0500  0020               	movlb	0	; select bank0
 16293  0501  00A9               	movwf	___flmul@b+3
 16294  0502  3017               	movlw	23
 16295  0503  00A8               	movwf	___flmul@b+2
 16296  0504  30F7               	movlw	247
 16297  0505  00A7               	movwf	___flmul@b+1
 16298  0506  30D1               	movlw	209
 16299  0507  00A6               	movwf	___flmul@b
 16300  0508  0022               	movlb	2	; select bank2
 16301  0509  0845               	movf	(logf@dk+3)^(0+256),w
 16302  050A  0020               	movlb	0	; select bank0
 16303  050B  00AD               	movwf	___flmul@a+3
 16304  050C  0022               	movlb	2	; select bank2
 16305  050D  0844               	movf	(logf@dk+2)^(0+256),w
 16306  050E  0020               	movlb	0	; select bank0
 16307  050F  00AC               	movwf	___flmul@a+2
 16308  0510  0022               	movlb	2	; select bank2
 16309  0511  0843               	movf	(logf@dk+1)^(0+256),w
 16310  0512  0020               	movlb	0	; select bank0
 16311  0513  00AB               	movwf	___flmul@a+1
 16312  0514  0022               	movlb	2	; select bank2
 16313  0515  0842               	movf	logf@dk^(0+256),w
 16314  0516  0020               	movlb	0	; select bank0
 16315  0517  00AA               	movwf	___flmul@a
 16316  0518  3190  2023  3180   	fcall	___flmul
 16317  051B  0020               	movlb	0	; select bank0
 16318  051C  0829               	movf	?___flmul+3,w
 16319  051D  00DD               	movwf	___fladd@b+3
 16320  051E  0828               	movf	?___flmul+2,w
 16321  051F  00DC               	movwf	___fladd@b+2
 16322  0520  0827               	movf	?___flmul+1,w
 16323  0521  00DB               	movwf	___fladd@b+1
 16324  0522  0826               	movf	?___flmul,w
 16325  0523  00DA               	movwf	___fladd@b
 16326  0524  0022               	movlb	2	; select bank2
 16327  0525  082F               	movf	(_logf$2091+3)^(0+256),w
 16328  0526  0020               	movlb	0	; select bank0
 16329  0527  00E1               	movwf	___fladd@a+3
 16330  0528  0022               	movlb	2	; select bank2
 16331  0529  082E               	movf	(_logf$2091+2)^(0+256),w
 16332  052A  0020               	movlb	0	; select bank0
 16333  052B  00E0               	movwf	___fladd@a+2
 16334  052C  0022               	movlb	2	; select bank2
 16335  052D  082D               	movf	(_logf$2091+1)^(0+256),w
 16336  052E  0020               	movlb	0	; select bank0
 16337  052F  00DF               	movwf	___fladd@a+1
 16338  0530  0022               	movlb	2	; select bank2
 16339  0531  082C               	movf	_logf$2091^(0+256),w
 16340  0532  0020               	movlb	0	; select bank0
 16341  0533  00DE               	movwf	___fladd@a
 16342  0534  3185  25F3  3180   	fcall	___fladd
 16343  0537  0020               	movlb	0	; select bank0
 16344  0538  085D               	movf	?___fladd+3,w
 16345  0539  0022               	movlb	2	; select bank2
 16346  053A  00B3               	movwf	(_logf$2092+3)^(0+256)
 16347  053B  0020               	movlb	0	; select bank0
 16348  053C  085C               	movf	?___fladd+2,w
 16349  053D  0022               	movlb	2	; select bank2
 16350  053E  00B2               	movwf	(_logf$2092+2)^(0+256)
 16351  053F  0020               	movlb	0	; select bank0
 16352  0540  085B               	movf	?___fladd+1,w
 16353  0541  0022               	movlb	2	; select bank2
 16354  0542  00B1               	movwf	(_logf$2092+1)^(0+256)
 16355  0543  0020               	movlb	0	; select bank0
 16356  0544  085A               	movf	?___fladd,w
 16357  0545  0022               	movlb	2	; select bank2
 16358  0546  00B0               	movwf	_logf$2092^(0+256)
 16359  0547  0841               	movf	(logf@hfsq+3)^(0+256),w
 16360  0548  0021               	movlb	1	; select bank1
 16361  0549  00A3               	movwf	(___flsub@a+3)^(0+128)
 16362  054A  0022               	movlb	2	; select bank2
 16363  054B  0840               	movf	(logf@hfsq+2)^(0+256),w
 16364  054C  0021               	movlb	1	; select bank1
 16365  054D  00A2               	movwf	(___flsub@a+2)^(0+128)
 16366  054E  0022               	movlb	2	; select bank2
 16367  054F  083F               	movf	(logf@hfsq+1)^(0+256),w
 16368  0550  0021               	movlb	1	; select bank1
 16369  0551  00A1               	movwf	(___flsub@a+1)^(0+128)
 16370  0552  0022               	movlb	2	; select bank2
 16371  0553  083E               	movf	logf@hfsq^(0+256),w
 16372  0554  0021               	movlb	1	; select bank1
 16373  0555  00A0               	movwf	___flsub@a^(0+128)
 16374  0556  0022               	movlb	2	; select bank2
 16375  0557  0833               	movf	(_logf$2092+3)^(0+256),w
 16376  0558  0021               	movlb	1	; select bank1
 16377  0559  00A7               	movwf	(___flsub@b+3)^(0+128)
 16378  055A  0022               	movlb	2	; select bank2
 16379  055B  0832               	movf	(_logf$2092+2)^(0+256),w
 16380  055C  0021               	movlb	1	; select bank1
 16381  055D  00A6               	movwf	(___flsub@b+2)^(0+128)
 16382  055E  0022               	movlb	2	; select bank2
 16383  055F  0831               	movf	(_logf$2092+1)^(0+256),w
 16384  0560  0021               	movlb	1	; select bank1
 16385  0561  00A5               	movwf	(___flsub@b+1)^(0+128)
 16386  0562  0022               	movlb	2	; select bank2
 16387  0563  0830               	movf	_logf$2092^(0+256),w
 16388  0564  0021               	movlb	1	; select bank1
 16389  0565  00A4               	movwf	___flsub@b^(0+128)
 16390  0566  31B5  25EC  3180   	fcall	___flsub
 16391  0569  0021               	movlb	1	; select bank1
 16392  056A  0823               	movf	(?___flsub+3)^(0+128),w
 16393  056B  0022               	movlb	2	; select bank2
 16394  056C  00B7               	movwf	(_logf$2093+3)^(0+256)
 16395  056D  0021               	movlb	1	; select bank1
 16396  056E  0822               	movf	(?___flsub+2)^(0+128),w
 16397  056F  0022               	movlb	2	; select bank2
 16398  0570  00B6               	movwf	(_logf$2093+2)^(0+256)
 16399  0571  0021               	movlb	1	; select bank1
 16400  0572  0821               	movf	(?___flsub+1)^(0+128),w
 16401  0573  0022               	movlb	2	; select bank2
 16402  0574  00B5               	movwf	(_logf$2093+1)^(0+256)
 16403  0575  0021               	movlb	1	; select bank1
 16404  0576  0820               	movf	?___flsub^(0+128),w
 16405  0577  0022               	movlb	2	; select bank2
 16406  0578  00B4               	movwf	_logf$2093^(0+256)
 16407  0579  085D               	movf	(logf@f+3)^(0+256),w
 16408  057A  0020               	movlb	0	; select bank0
 16409  057B  00DD               	movwf	___fladd@b+3
 16410  057C  0022               	movlb	2	; select bank2
 16411  057D  085C               	movf	(logf@f+2)^(0+256),w
 16412  057E  0020               	movlb	0	; select bank0
 16413  057F  00DC               	movwf	___fladd@b+2
 16414  0580  0022               	movlb	2	; select bank2
 16415  0581  085B               	movf	(logf@f+1)^(0+256),w
 16416  0582  0020               	movlb	0	; select bank0
 16417  0583  00DB               	movwf	___fladd@b+1
 16418  0584  0022               	movlb	2	; select bank2
 16419  0585  085A               	movf	logf@f^(0+256),w
 16420  0586  0020               	movlb	0	; select bank0
 16421  0587  00DA               	movwf	___fladd@b
 16422  0588  0022               	movlb	2	; select bank2
 16423  0589  0837               	movf	(_logf$2093+3)^(0+256),w
 16424  058A  0020               	movlb	0	; select bank0
 16425  058B  00E1               	movwf	___fladd@a+3
 16426  058C  0022               	movlb	2	; select bank2
 16427  058D  0836               	movf	(_logf$2093+2)^(0+256),w
 16428  058E  0020               	movlb	0	; select bank0
 16429  058F  00E0               	movwf	___fladd@a+2
 16430  0590  0022               	movlb	2	; select bank2
 16431  0591  0835               	movf	(_logf$2093+1)^(0+256),w
 16432  0592  0020               	movlb	0	; select bank0
 16433  0593  00DF               	movwf	___fladd@a+1
 16434  0594  0022               	movlb	2	; select bank2
 16435  0595  0834               	movf	_logf$2093^(0+256),w
 16436  0596  0020               	movlb	0	; select bank0
 16437  0597  00DE               	movwf	___fladd@a
 16438  0598  3185  25F3  3180   	fcall	___fladd
 16439  059B  0020               	movlb	0	; select bank0
 16440  059C  085D               	movf	?___fladd+3,w
 16441  059D  0022               	movlb	2	; select bank2
 16442  059E  00BB               	movwf	(_logf$2094+3)^(0+256)
 16443  059F  0020               	movlb	0	; select bank0
 16444  05A0  085C               	movf	?___fladd+2,w
 16445  05A1  0022               	movlb	2	; select bank2
 16446  05A2  00BA               	movwf	(_logf$2094+2)^(0+256)
 16447  05A3  0020               	movlb	0	; select bank0
 16448  05A4  085B               	movf	?___fladd+1,w
 16449  05A5  0022               	movlb	2	; select bank2
 16450  05A6  00B9               	movwf	(_logf$2094+1)^(0+256)
 16451  05A7  0020               	movlb	0	; select bank0
 16452  05A8  085A               	movf	?___fladd,w
 16453  05A9  0022               	movlb	2	; select bank2
 16454  05AA  00B8               	movwf	_logf$2094^(0+256)
 16455  05AB  303F               	movlw	63
 16456  05AC  0020               	movlb	0	; select bank0
 16457  05AD  00A9               	movwf	___flmul@b+3
 16458  05AE  3031               	movlw	49
 16459  05AF  00A8               	movwf	___flmul@b+2
 16460  05B0  3071               	movlw	113
 16461  05B1  00A7               	movwf	___flmul@b+1
 16462  05B2  3080               	movlw	128
 16463  05B3  00A6               	movwf	___flmul@b
 16464  05B4  0022               	movlb	2	; select bank2
 16465  05B5  0845               	movf	(logf@dk+3)^(0+256),w
 16466  05B6  0020               	movlb	0	; select bank0
 16467  05B7  00AD               	movwf	___flmul@a+3
 16468  05B8  0022               	movlb	2	; select bank2
 16469  05B9  0844               	movf	(logf@dk+2)^(0+256),w
 16470  05BA  0020               	movlb	0	; select bank0
 16471  05BB  00AC               	movwf	___flmul@a+2
 16472  05BC  0022               	movlb	2	; select bank2
 16473  05BD  0843               	movf	(logf@dk+1)^(0+256),w
 16474  05BE  0020               	movlb	0	; select bank0
 16475  05BF  00AB               	movwf	___flmul@a+1
 16476  05C0  0022               	movlb	2	; select bank2
 16477  05C1  0842               	movf	logf@dk^(0+256),w
 16478  05C2  0020               	movlb	0	; select bank0
 16479  05C3  00AA               	movwf	___flmul@a
 16480  05C4  3190  2023  3180   	fcall	___flmul
 16481  05C7  0020               	movlb	0	; select bank0
 16482  05C8  0829               	movf	?___flmul+3,w
 16483  05C9  00DD               	movwf	___fladd@b+3
 16484  05CA  0828               	movf	?___flmul+2,w
 16485  05CB  00DC               	movwf	___fladd@b+2
 16486  05CC  0827               	movf	?___flmul+1,w
 16487  05CD  00DB               	movwf	___fladd@b+1
 16488  05CE  0826               	movf	?___flmul,w
 16489  05CF  00DA               	movwf	___fladd@b
 16490  05D0  0022               	movlb	2	; select bank2
 16491  05D1  083B               	movf	(_logf$2094+3)^(0+256),w
 16492  05D2  0020               	movlb	0	; select bank0
 16493  05D3  00E1               	movwf	___fladd@a+3
 16494  05D4  0022               	movlb	2	; select bank2
 16495  05D5  083A               	movf	(_logf$2094+2)^(0+256),w
 16496  05D6  0020               	movlb	0	; select bank0
 16497  05D7  00E0               	movwf	___fladd@a+2
 16498  05D8  0022               	movlb	2	; select bank2
 16499  05D9  0839               	movf	(_logf$2094+1)^(0+256),w
 16500  05DA  0020               	movlb	0	; select bank0
 16501  05DB  00DF               	movwf	___fladd@a+1
 16502  05DC  0022               	movlb	2	; select bank2
 16503  05DD  0838               	movf	_logf$2094^(0+256),w
 16504  05DE  0020               	movlb	0	; select bank0
 16505  05DF  00DE               	movwf	___fladd@a
 16506  05E0  3185  25F3         	fcall	___fladd
 16507  05E2  0020               	movlb	0	; select bank0
 16508  05E3  085D               	movf	?___fladd+3,w
 16509  05E4  0021               	movlb	1	; select bank1
 16510  05E5  00AB               	movwf	(?_logf+3)^(0+128)
 16511  05E6  0020               	movlb	0	; select bank0
 16512  05E7  085C               	movf	?___fladd+2,w
 16513  05E8  0021               	movlb	1	; select bank1
 16514  05E9  00AA               	movwf	(?_logf+2)^(0+128)
 16515  05EA  0020               	movlb	0	; select bank0
 16516  05EB  085B               	movf	?___fladd+1,w
 16517  05EC  0021               	movlb	1	; select bank1
 16518  05ED  00A9               	movwf	(?_logf+1)^(0+128)
 16519  05EE  0020               	movlb	0	; select bank0
 16520  05EF  085A               	movf	?___fladd,w
 16521  05F0  0021               	movlb	1	; select bank1
 16522  05F1  00A8               	movwf	?_logf^(0+128)
 16523  05F2  0008               	return
 16524  05F3                     __end_of_logf:	
 16525                           
 16526                           	psect	text51
 16527  35EC                     __ptext51:	
 16528 ;; *************** function ___flsub *****************
 16529 ;; Defined at:
 16530 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 16531 ;; Parameters:    Size  Location     Type
 16532 ;;  a               4    0[BANK1 ] float 
 16533 ;;  b               4    4[BANK1 ] float 
 16534 ;; Auto vars:     Size  Location     Type
 16535 ;;		None
 16536 ;; Return value:  Size  Location     Type
 16537 ;;                  4    0[BANK1 ] float 
 16538 ;; Registers used:
 16539 ;;		wreg, status,2, status,0, pclath, cstack
 16540 ;; Tracked objects:
 16541 ;;		On entry : 0/0
 16542 ;;		On exit  : 0/0
 16543 ;;		Unchanged: 0/0
 16544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16545 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16548 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16549 ;;Total ram usage:        8 bytes
 16550 ;; Hardware stack levels used:    1
 16551 ;; Hardware stack levels required when called:    2
 16552 ;; This function calls:
 16553 ;;		___fladd
 16554 ;; This function is called by:
 16555 ;;		_updateTemperatures
 16556 ;;		_logf
 16557 ;; This function uses a non-reentrant model
 16558 ;;
 16559                           
 16560                           
 16561                           ;psect for function ___flsub
 16562  35EC                     ___flsub:	
 16563                           
 16564                           ;incstack = 0
 16565                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 16566  35EC  3080               	movlw	128
 16567  35ED  0021               	movlb	1	; select bank1
 16568  35EE  06A3               	xorwf	(___flsub@a+3)^(0+128),f
 16569  35EF  0827               	movf	(___flsub@b+3)^(0+128),w
 16570  35F0  0020               	movlb	0	; select bank0
 16571  35F1  00DD               	movwf	___fladd@b+3
 16572  35F2  0021               	movlb	1	; select bank1
 16573  35F3  0826               	movf	(___flsub@b+2)^(0+128),w
 16574  35F4  0020               	movlb	0	; select bank0
 16575  35F5  00DC               	movwf	___fladd@b+2
 16576  35F6  0021               	movlb	1	; select bank1
 16577  35F7  0825               	movf	(___flsub@b+1)^(0+128),w
 16578  35F8  0020               	movlb	0	; select bank0
 16579  35F9  00DB               	movwf	___fladd@b+1
 16580  35FA  0021               	movlb	1	; select bank1
 16581  35FB  0824               	movf	___flsub@b^(0+128),w
 16582  35FC  0020               	movlb	0	; select bank0
 16583  35FD  00DA               	movwf	___fladd@b
 16584  35FE  0021               	movlb	1	; select bank1
 16585  35FF  0823               	movf	(___flsub@a+3)^(0+128),w
 16586  3600  0020               	movlb	0	; select bank0
 16587  3601  00E1               	movwf	___fladd@a+3
 16588  3602  0021               	movlb	1	; select bank1
 16589  3603  0822               	movf	(___flsub@a+2)^(0+128),w
 16590  3604  0020               	movlb	0	; select bank0
 16591  3605  00E0               	movwf	___fladd@a+2
 16592  3606  0021               	movlb	1	; select bank1
 16593  3607  0821               	movf	(___flsub@a+1)^(0+128),w
 16594  3608  0020               	movlb	0	; select bank0
 16595  3609  00DF               	movwf	___fladd@a+1
 16596  360A  0021               	movlb	1	; select bank1
 16597  360B  0820               	movf	___flsub@a^(0+128),w
 16598  360C  0020               	movlb	0	; select bank0
 16599  360D  00DE               	movwf	___fladd@a
 16600  360E  3185  25F3         	fcall	___fladd
 16601  3610  0020               	movlb	0	; select bank0
 16602  3611  085D               	movf	?___fladd+3,w
 16603  3612  0021               	movlb	1	; select bank1
 16604  3613  00A3               	movwf	(?___flsub+3)^(0+128)
 16605  3614  0020               	movlb	0	; select bank0
 16606  3615  085C               	movf	?___fladd+2,w
 16607  3616  0021               	movlb	1	; select bank1
 16608  3617  00A2               	movwf	(?___flsub+2)^(0+128)
 16609  3618  0020               	movlb	0	; select bank0
 16610  3619  085B               	movf	?___fladd+1,w
 16611  361A  0021               	movlb	1	; select bank1
 16612  361B  00A1               	movwf	(?___flsub+1)^(0+128)
 16613  361C  0020               	movlb	0	; select bank0
 16614  361D  085A               	movf	?___fladd,w
 16615  361E  0021               	movlb	1	; select bank1
 16616  361F  00A0               	movwf	?___flsub^(0+128)
 16617  3620  0008               	return
 16618  3621                     __end_of___flsub:	
 16619                           
 16620                           	psect	text52
 16621  05F3                     __ptext52:	
 16622 ;; *************** function ___fladd *****************
 16623 ;; Defined at:
 16624 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 16625 ;; Parameters:    Size  Location     Type
 16626 ;;  b               4   58[BANK0 ] float 
 16627 ;;  a               4   62[BANK0 ] float 
 16628 ;; Auto vars:     Size  Location     Type
 16629 ;;  grs             1   77[BANK0 ] unsigned char 
 16630 ;;  bexp            1   76[BANK0 ] unsigned char 
 16631 ;;  aexp            1   75[BANK0 ] unsigned char 
 16632 ;;  signs           1   74[BANK0 ] unsigned char 
 16633 ;; Return value:  Size  Location     Type
 16634 ;;                  4   58[BANK0 ] unsigned char 
 16635 ;; Registers used:
 16636 ;;		wreg, status,2, status,0
 16637 ;; Tracked objects:
 16638 ;;		On entry : 0/0
 16639 ;;		On exit  : 0/0
 16640 ;;		Unchanged: 0/0
 16641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16642 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16643 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16644 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16645 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16646 ;;Total ram usage:       20 bytes
 16647 ;; Hardware stack levels used:    1
 16648 ;; Hardware stack levels required when called:    1
 16649 ;; This function calls:
 16650 ;;		Nothing
 16651 ;; This function is called by:
 16652 ;;		_updateVoltages
 16653 ;;		_updateTemperatures
 16654 ;;		___flsub
 16655 ;;		_logf
 16656 ;; This function uses a non-reentrant model
 16657 ;;
 16658                           
 16659                           
 16660                           ;psect for function ___fladd
 16661  05F3                     ___fladd:	
 16662                           
 16663                           ;incstack = 0
 16664                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 16665  05F3  0020               	movlb	0	; select bank0
 16666  05F4  085D               	movf	___fladd@b+3,w
 16667  05F5  3980               	andlw	128
 16668  05F6  00E2               	movwf	??___fladd
 16669  05F7  0862               	movf	??___fladd,w
 16670  05F8  00EA               	movwf	___fladd@signs
 16671  05F9  355D               	lslf	___fladd@b+3,w
 16672  05FA  00E2               	movwf	??___fladd
 16673  05FB  0862               	movf	??___fladd,w
 16674  05FC  00EC               	movwf	___fladd@bexp
 16675  05FD  1BDC               	btfsc	___fladd@b+2,7
 16676  05FE  146C               	bsf	___fladd@bexp,0
 16677  05FF  086C               	movf	___fladd@bexp,w
 16678  0600  1903               	btfsc	3,2
 16679  0601  2E10               	goto	l7339
 16680  0602  0A6C               	incf	___fladd@bexp,w
 16681  0603  1D03               	btfss	3,2
 16682  0604  2E0D               	goto	l7335
 16683  0605  3000               	movlw	0
 16684  0606  00DD               	movwf	___fladd@b+3
 16685  0607  3000               	movlw	0
 16686  0608  00DC               	movwf	___fladd@b+2
 16687  0609  3000               	movlw	0
 16688  060A  00DB               	movwf	___fladd@b+1
 16689  060B  3000               	movlw	0
 16690  060C  00DA               	movwf	___fladd@b
 16691  060D                     l7335:	
 16692  060D  17DC               	bsf	___fladd@b+2,7
 16693  060E  01DD               	clrf	___fladd@b+3
 16694  060F  2E18               	goto	l7341
 16695  0610                     l7339:	
 16696  0610  3000               	movlw	0
 16697  0611  00DD               	movwf	___fladd@b+3
 16698  0612  3000               	movlw	0
 16699  0613  00DC               	movwf	___fladd@b+2
 16700  0614  3000               	movlw	0
 16701  0615  00DB               	movwf	___fladd@b+1
 16702  0616  3000               	movlw	0
 16703  0617  00DA               	movwf	___fladd@b
 16704  0618                     l7341:	
 16705  0618  0861               	movf	___fladd@a+3,w
 16706  0619  3980               	andlw	128
 16707  061A  00E2               	movwf	??___fladd
 16708  061B  0862               	movf	??___fladd,w
 16709  061C  00EB               	movwf	___fladd@aexp
 16710  061D  086B               	movf	___fladd@aexp,w
 16711  061E  066A               	xorwf	___fladd@signs,w
 16712  061F  1D03               	btfss	3,2
 16713  0620  176A               	bsf	___fladd@signs,6
 16714  0621  3561               	lslf	___fladd@a+3,w
 16715  0622  00E2               	movwf	??___fladd
 16716  0623  0862               	movf	??___fladd,w
 16717  0624  00EB               	movwf	___fladd@aexp
 16718  0625  1BE0               	btfsc	___fladd@a+2,7
 16719  0626  146B               	bsf	___fladd@aexp,0
 16720  0627  086B               	movf	___fladd@aexp,w
 16721  0628  1903               	btfsc	3,2
 16722  0629  2E38               	goto	l7363
 16723  062A  0A6B               	incf	___fladd@aexp,w
 16724  062B  1D03               	btfss	3,2
 16725  062C  2E35               	goto	l7359
 16726  062D  3000               	movlw	0
 16727  062E  00E1               	movwf	___fladd@a+3
 16728  062F  3000               	movlw	0
 16729  0630  00E0               	movwf	___fladd@a+2
 16730  0631  3000               	movlw	0
 16731  0632  00DF               	movwf	___fladd@a+1
 16732  0633  3000               	movlw	0
 16733  0634  00DE               	movwf	___fladd@a
 16734  0635                     l7359:	
 16735  0635  17E0               	bsf	___fladd@a+2,7
 16736  0636  01E1               	clrf	___fladd@a+3
 16737  0637  2E40               	goto	l1227
 16738  0638                     l7363:	
 16739  0638  3000               	movlw	0
 16740  0639  00E1               	movwf	___fladd@a+3
 16741  063A  3000               	movlw	0
 16742  063B  00E0               	movwf	___fladd@a+2
 16743  063C  3000               	movlw	0
 16744  063D  00DF               	movwf	___fladd@a+1
 16745  063E  3000               	movlw	0
 16746  063F  00DE               	movwf	___fladd@a
 16747  0640                     l1227:	
 16748  0640  086C               	movf	___fladd@bexp,w
 16749  0641  026B               	subwf	___fladd@aexp,w
 16750  0642  1803               	skipnc
 16751  0643  2E86               	goto	l7399
 16752  0644  1F6A               	btfss	___fladd@signs,6
 16753  0645  2E4A               	goto	l7369
 16754  0646  3080               	movlw	128
 16755  0647  00E2               	movwf	??___fladd
 16756  0648  0862               	movf	??___fladd,w
 16757  0649  06EA               	xorwf	___fladd@signs,f
 16758  064A                     l7369:	
 16759  064A  086C               	movf	___fladd@bexp,w
 16760  064B  00E2               	movwf	??___fladd
 16761  064C  0862               	movf	??___fladd,w
 16762  064D  00ED               	movwf	___fladd@grs
 16763  064E  086B               	movf	___fladd@aexp,w
 16764  064F  00E2               	movwf	??___fladd
 16765  0650  0862               	movf	??___fladd,w
 16766  0651  00EC               	movwf	___fladd@bexp
 16767  0652  086D               	movf	___fladd@grs,w
 16768  0653  00E2               	movwf	??___fladd
 16769  0654  0862               	movf	??___fladd,w
 16770  0655  00EB               	movwf	___fladd@aexp
 16771  0656  085A               	movf	___fladd@b,w
 16772  0657  00E2               	movwf	??___fladd
 16773  0658  0862               	movf	??___fladd,w
 16774  0659  00ED               	movwf	___fladd@grs
 16775  065A  085E               	movf	___fladd@a,w
 16776  065B  00E2               	movwf	??___fladd
 16777  065C  0862               	movf	??___fladd,w
 16778  065D  00DA               	movwf	___fladd@b
 16779  065E  086D               	movf	___fladd@grs,w
 16780  065F  00E2               	movwf	??___fladd
 16781  0660  0862               	movf	??___fladd,w
 16782  0661  00DE               	movwf	___fladd@a
 16783  0662  085B               	movf	___fladd@b+1,w
 16784  0663  00E2               	movwf	??___fladd
 16785  0664  0862               	movf	??___fladd,w
 16786  0665  00ED               	movwf	___fladd@grs
 16787  0666  085F               	movf	___fladd@a+1,w
 16788  0667  00E2               	movwf	??___fladd
 16789  0668  0862               	movf	??___fladd,w
 16790  0669  00DB               	movwf	___fladd@b+1
 16791  066A  086D               	movf	___fladd@grs,w
 16792  066B  00E2               	movwf	??___fladd
 16793  066C  0862               	movf	??___fladd,w
 16794  066D  00DF               	movwf	___fladd@a+1
 16795  066E  085C               	movf	___fladd@b+2,w
 16796  066F  00E2               	movwf	??___fladd
 16797  0670  0862               	movf	??___fladd,w
 16798  0671  00ED               	movwf	___fladd@grs
 16799  0672  0860               	movf	___fladd@a+2,w
 16800  0673  00E2               	movwf	??___fladd
 16801  0674  0862               	movf	??___fladd,w
 16802  0675  00DC               	movwf	___fladd@b+2
 16803  0676  086D               	movf	___fladd@grs,w
 16804  0677  00E2               	movwf	??___fladd
 16805  0678  0862               	movf	??___fladd,w
 16806  0679  00E0               	movwf	___fladd@a+2
 16807  067A  085D               	movf	___fladd@b+3,w
 16808  067B  00E2               	movwf	??___fladd
 16809  067C  0862               	movf	??___fladd,w
 16810  067D  00ED               	movwf	___fladd@grs
 16811  067E  0861               	movf	___fladd@a+3,w
 16812  067F  00E2               	movwf	??___fladd
 16813  0680  0862               	movf	??___fladd,w
 16814  0681  00DD               	movwf	___fladd@b+3
 16815  0682  086D               	movf	___fladd@grs,w
 16816  0683  00E2               	movwf	??___fladd
 16817  0684  0862               	movf	??___fladd,w
 16818  0685  00E1               	movwf	___fladd@a+3
 16819  0686                     l7399:	
 16820  0686  01ED               	clrf	___fladd@grs
 16821  0687  086B               	movf	___fladd@aexp,w
 16822  0688  00E2               	movwf	??___fladd
 16823  0689  01E3               	clrf	??___fladd+1
 16824  068A  0863               	movf	??___fladd+1,w
 16825  068B  00E5               	movwf	??___fladd+3
 16826  068C  086C               	movf	___fladd@bexp,w
 16827  068D  0262               	subwf	??___fladd,w
 16828  068E  00E4               	movwf	??___fladd+2
 16829  068F  1C03               	skipc
 16830  0690  03E5               	decf	??___fladd+3,f
 16831  0691  0865               	movf	??___fladd+3,w
 16832  0692  3A80               	xorlw	128
 16833  0693  00E6               	movwf	??___fladd+4
 16834  0694  3080               	movlw	128
 16835  0695  0266               	subwf	??___fladd+4,w
 16836  0696  1D03               	skipz
 16837  0697  2E9A               	goto	u9625
 16838  0698  301A               	movlw	26
 16839  0699  0264               	subwf	??___fladd+2,w
 16840  069A                     u9625:	
 16841  069A  1C03               	skipc
 16842  069B  2ECE               	goto	l7417
 16843  069C  0020               	movlb	0	; select bank0
 16844  069D  085D               	movf	___fladd@b+3,w
 16845  069E  045C               	iorwf	___fladd@b+2,w
 16846  069F  045B               	iorwf	___fladd@b+1,w
 16847  06A0  045A               	iorwf	___fladd@b,w
 16848  06A1  1903               	btfsc	3,2
 16849  06A2  2EA5               	goto	u9630
 16850  06A3  3001               	movlw	1
 16851  06A4  2EA6               	goto	u9640
 16852  06A5                     u9630:	
 16853  06A5  3000               	movlw	0
 16854  06A6                     u9640:	
 16855  06A6  00E2               	movwf	??___fladd
 16856  06A7  0862               	movf	??___fladd,w
 16857  06A8  00ED               	movwf	___fladd@grs
 16858  06A9  3000               	movlw	0
 16859  06AA  00DD               	movwf	___fladd@b+3
 16860  06AB  3000               	movlw	0
 16861  06AC  00DC               	movwf	___fladd@b+2
 16862  06AD  3000               	movlw	0
 16863  06AE  00DB               	movwf	___fladd@b+1
 16864  06AF  3000               	movlw	0
 16865  06B0  00DA               	movwf	___fladd@b
 16866  06B1  086B               	movf	___fladd@aexp,w
 16867  06B2  00E2               	movwf	??___fladd
 16868  06B3  0862               	movf	??___fladd,w
 16869  06B4  00EC               	movwf	___fladd@bexp
 16870  06B5  2ED3               	goto	l1231
 16871  06B6                     l1233:	
 16872  06B6  1C6D               	btfss	___fladd@grs,0
 16873  06B7  2EBE               	goto	l7407
 16874  06B8  366D               	lsrf	___fladd@grs,w
 16875  06B9  3801               	iorlw	1
 16876  06BA  00E2               	movwf	??___fladd
 16877  06BB  0862               	movf	??___fladd,w
 16878  06BC  00ED               	movwf	___fladd@grs
 16879  06BD  2EC0               	goto	l7409
 16880  06BE                     l7407:	
 16881  06BE  1003               	clrc
 16882  06BF  0CED               	rrf	___fladd@grs,f
 16883  06C0                     l7409:	
 16884  06C0  185A               	btfsc	___fladd@b,0
 16885  06C1  17ED               	bsf	___fladd@grs,7
 16886  06C2  3001               	movlw	1
 16887  06C3  00E2               	movwf	??___fladd
 16888  06C4                     u9675:	
 16889  06C4  37DD               	asrf	___fladd@b+3,f
 16890  06C5  0CDC               	rrf	___fladd@b+2,f
 16891  06C6  0CDB               	rrf	___fladd@b+1,f
 16892  06C7  0CDA               	rrf	___fladd@b,f
 16893  06C8  0BE2               	decfsz	??___fladd& (0+127),f
 16894  06C9  2EC4               	goto	u9675
 16895  06CA  3001               	movlw	1
 16896  06CB  00E2               	movwf	??___fladd
 16897  06CC  0862               	movf	??___fladd,w
 16898  06CD  07EC               	addwf	___fladd@bexp,f
 16899  06CE                     l7417:	
 16900  06CE  0020               	movlb	0	; select bank0
 16901  06CF  086B               	movf	___fladd@aexp,w
 16902  06D0  026C               	subwf	___fladd@bexp,w
 16903  06D1  1C03               	skipc
 16904  06D2  2EB6               	goto	l1233
 16905  06D3                     l1231:	
 16906  06D3  1B6A               	btfsc	___fladd@signs,6
 16907  06D4  2F04               	goto	l7443
 16908  06D5  086C               	movf	___fladd@bexp,w
 16909  06D6  1D03               	btfss	3,2
 16910  06D7  2EE1               	goto	l7425
 16911  06D8  3000               	movlw	0
 16912  06D9  00DD               	movwf	?___fladd+3
 16913  06DA  3000               	movlw	0
 16914  06DB  00DC               	movwf	?___fladd+2
 16915  06DC  3000               	movlw	0
 16916  06DD  00DB               	movwf	?___fladd+1
 16917  06DE  3000               	movlw	0
 16918  06DF  00DA               	movwf	?___fladd
 16919  06E0  0008               	return
 16920  06E1                     l7425:	
 16921  06E1  085E               	movf	___fladd@a,w
 16922  06E2  07DA               	addwf	___fladd@b,f
 16923  06E3  085F               	movf	___fladd@a+1,w
 16924  06E4  3DDB               	addwfc	___fladd@b+1,f
 16925  06E5  0860               	movf	___fladd@a+2,w
 16926  06E6  3DDC               	addwfc	___fladd@b+2,f
 16927  06E7  0861               	movf	___fladd@a+3,w
 16928  06E8  3DDD               	addwfc	___fladd@b+3,f
 16929  06E9  1C5D               	btfss	___fladd@b+3,0
 16930  06EA  2F7E               	goto	l7477
 16931  06EB  1C6D               	btfss	___fladd@grs,0
 16932  06EC  2EF3               	goto	l7433
 16933  06ED  366D               	lsrf	___fladd@grs,w
 16934  06EE  3801               	iorlw	1
 16935  06EF  00E2               	movwf	??___fladd
 16936  06F0  0862               	movf	??___fladd,w
 16937  06F1  00ED               	movwf	___fladd@grs
 16938  06F2  2EF5               	goto	l7435
 16939  06F3                     l7433:	
 16940  06F3  1003               	clrc
 16941  06F4  0CED               	rrf	___fladd@grs,f
 16942  06F5                     l7435:	
 16943  06F5  185A               	btfsc	___fladd@b,0
 16944  06F6  17ED               	bsf	___fladd@grs,7
 16945  06F7  3001               	movlw	1
 16946  06F8  00E2               	movwf	??___fladd
 16947  06F9                     u9745:	
 16948  06F9  37DD               	asrf	___fladd@b+3,f
 16949  06FA  0CDC               	rrf	___fladd@b+2,f
 16950  06FB  0CDB               	rrf	___fladd@b+1,f
 16951  06FC  0CDA               	rrf	___fladd@b,f
 16952  06FD  0BE2               	decfsz	??___fladd& (0+127),f
 16953  06FE  2EF9               	goto	u9745
 16954  06FF  3001               	movlw	1
 16955  0700  00E2               	movwf	??___fladd
 16956  0701  0862               	movf	??___fladd,w
 16957  0702  07EC               	addwf	___fladd@bexp,f
 16958  0703  2F7E               	goto	l7477
 16959  0704                     l7443:	
 16960  0704  085D               	movf	___fladd@b+3,w
 16961  0705  3A80               	xorlw	128
 16962  0706  00E2               	movwf	??___fladd
 16963  0707  0861               	movf	___fladd@a+3,w
 16964  0708  3A80               	xorlw	128
 16965  0709  0262               	subwf	??___fladd,w
 16966  070A  1D03               	skipz
 16967  070B  2F16               	goto	u9753
 16968  070C  0860               	movf	___fladd@a+2,w
 16969  070D  025C               	subwf	___fladd@b+2,w
 16970  070E  1D03               	skipz
 16971  070F  2F16               	goto	u9753
 16972  0710  085F               	movf	___fladd@a+1,w
 16973  0711  025B               	subwf	___fladd@b+1,w
 16974  0712  1D03               	skipz
 16975  0713  2F16               	goto	u9753
 16976  0714  085E               	movf	___fladd@a,w
 16977  0715  025A               	subwf	___fladd@b,w
 16978  0716                     u9753:	
 16979  0716  1803               	skipnc
 16980  0717  2F4E               	goto	l7453
 16981  0718  30FF               	movlw	255
 16982  0719  00E2               	movwf	??___fladd
 16983  071A  30FF               	movlw	255
 16984  071B  00E3               	movwf	??___fladd+1
 16985  071C  30FF               	movlw	255
 16986  071D  00E4               	movwf	??___fladd+2
 16987  071E  30FF               	movlw	255
 16988  071F  00E5               	movwf	??___fladd+3
 16989  0720  085A               	movf	___fladd@b,w
 16990  0721  025E               	subwf	___fladd@a,w
 16991  0722  00E6               	movwf	??___fladd+4
 16992  0723  085B               	movf	___fladd@b+1,w
 16993  0724  3B5F               	subwfb	___fladd@a+1,w
 16994  0725  00E7               	movwf	??___fladd+5
 16995  0726  085C               	movf	___fladd@b+2,w
 16996  0727  3B60               	subwfb	___fladd@a+2,w
 16997  0728  00E8               	movwf	??___fladd+6
 16998  0729  085D               	movf	___fladd@b+3,w
 16999  072A  3B61               	subwfb	___fladd@a+3,w
 17000  072B  00E9               	movwf	??___fladd+7
 17001  072C  0866               	movf	??___fladd+4,w
 17002  072D  07E2               	addwf	??___fladd,f
 17003  072E  0867               	movf	??___fladd+5,w
 17004  072F  3DE3               	addwfc	??___fladd+1,f
 17005  0730  0868               	movf	??___fladd+6,w
 17006  0731  3DE4               	addwfc	??___fladd+2,f
 17007  0732  0869               	movf	??___fladd+7,w
 17008  0733  3DE5               	addwfc	??___fladd+3,f
 17009  0734  0865               	movf	??___fladd+3,w
 17010  0735  00DD               	movwf	___fladd@b+3
 17011  0736  0864               	movf	??___fladd+2,w
 17012  0737  00DC               	movwf	___fladd@b+2
 17013  0738  0863               	movf	??___fladd+1,w
 17014  0739  00DB               	movwf	___fladd@b+1
 17015  073A  0862               	movf	??___fladd,w
 17016  073B  00DA               	movwf	___fladd@b
 17017  073C  3080               	movlw	128
 17018  073D  00E2               	movwf	??___fladd
 17019  073E  0862               	movf	??___fladd,w
 17020  073F  06EA               	xorwf	___fladd@signs,f
 17021  0740  09ED               	comf	___fladd@grs,f
 17022  0741  0AED               	incf	___fladd@grs,f
 17023  0742  086D               	movf	___fladd@grs,w
 17024  0743  1D03               	btfss	3,2
 17025  0744  2F56               	goto	l1248
 17026  0745  3001               	movlw	1
 17027  0746  07DA               	addwf	___fladd@b,f
 17028  0747  3000               	movlw	0
 17029  0748  3DDB               	addwfc	___fladd@b+1,f
 17030  0749  3000               	movlw	0
 17031  074A  3DDC               	addwfc	___fladd@b+2,f
 17032  074B  3000               	movlw	0
 17033  074C  3DDD               	addwfc	___fladd@b+3,f
 17034  074D  2F56               	goto	l1248
 17035  074E                     l7453:	
 17036  074E  085E               	movf	___fladd@a,w
 17037  074F  02DA               	subwf	___fladd@b,f
 17038  0750  085F               	movf	___fladd@a+1,w
 17039  0751  3BDB               	subwfb	___fladd@b+1,f
 17040  0752  0860               	movf	___fladd@a+2,w
 17041  0753  3BDC               	subwfb	___fladd@b+2,f
 17042  0754  0861               	movf	___fladd@a+3,w
 17043  0755  3BDD               	subwfb	___fladd@b+3,f
 17044  0756                     l1248:	
 17045  0756  085D               	movf	___fladd@b+3,w
 17046  0757  045C               	iorwf	___fladd@b+2,w
 17047  0758  045B               	iorwf	___fladd@b+1,w
 17048  0759  045A               	iorwf	___fladd@b,w
 17049  075A  1D03               	skipz
 17050  075B  2F7C               	goto	l7475
 17051  075C  086D               	movf	___fladd@grs,w
 17052  075D  1D03               	btfss	3,2
 17053  075E  2F7C               	goto	l7475
 17054  075F  3000               	movlw	0
 17055  0760  00DD               	movwf	?___fladd+3
 17056  0761  3000               	movlw	0
 17057  0762  00DC               	movwf	?___fladd+2
 17058  0763  3000               	movlw	0
 17059  0764  00DB               	movwf	?___fladd+1
 17060  0765  3000               	movlw	0
 17061  0766  00DA               	movwf	?___fladd
 17062  0767  0008               	return
 17063  0768                     l7461:	
 17064  0768  3001               	movlw	1
 17065  0769                     u9795:	
 17066  0769  35DA               	lslf	___fladd@b,f
 17067  076A  0DDB               	rlf	___fladd@b+1,f
 17068  076B  0DDC               	rlf	___fladd@b+2,f
 17069  076C  0DDD               	rlf	___fladd@b+3,f
 17070  076D  0B89               	decfsz	9,f
 17071  076E  2F69               	goto	u9795
 17072  076F  1BED               	btfsc	___fladd@grs,7
 17073  0770  145A               	bsf	___fladd@b,0
 17074  0771  1C6D               	btfss	___fladd@grs,0
 17075  0772  2F75               	goto	l7469
 17076  0773  1403               	setc
 17077  0774  2F76               	goto	L4
 17078  0775                     l7469:	
 17079  0775  1003               	clrc
 17080  0776                     L4:	
 17081  0776  0DED               	rlf	___fladd@grs,f
 17082  0777  086C               	movf	___fladd@bexp,w
 17083  0778  1903               	btfsc	3,2
 17084  0779  2F7C               	goto	l7475
 17085  077A  3001               	movlw	1
 17086  077B  02EC               	subwf	___fladd@bexp,f
 17087  077C                     l7475:	
 17088  077C  1FDC               	btfss	___fladd@b+2,7
 17089  077D  2F68               	goto	l7461
 17090  077E                     l7477:	
 17091  077E  01EB               	clrf	___fladd@aexp
 17092  077F  1FED               	btfss	___fladd@grs,7
 17093  0780  2F89               	goto	l7487
 17094  0781  086D               	movf	___fladd@grs,w
 17095  0782  397F               	andlw	127
 17096  0783  1903               	btfsc	3,2
 17097  0784  185A               	btfsc	___fladd@b,0
 17098  0785  2F87               	goto	l7483
 17099  0786  2F89               	goto	l7487
 17100  0787                     l7483:	
 17101  0787  01EB               	clrf	___fladd@aexp
 17102  0788  0AEB               	incf	___fladd@aexp,f
 17103  0789                     l7487:	
 17104  0789  086B               	movf	___fladd@aexp,w
 17105  078A  1903               	btfsc	3,2
 17106  078B  2FB5               	goto	l1261
 17107  078C  3001               	movlw	1
 17108  078D  07DA               	addwf	___fladd@b,f
 17109  078E  3000               	movlw	0
 17110  078F  3DDB               	addwfc	___fladd@b+1,f
 17111  0790  3000               	movlw	0
 17112  0791  3DDC               	addwfc	___fladd@b+2,f
 17113  0792  3000               	movlw	0
 17114  0793  3DDD               	addwfc	___fladd@b+3,f
 17115  0794  1C5D               	btfss	___fladd@b+3,0
 17116  0795  2FB5               	goto	l1261
 17117  0796  085A               	movf	___fladd@b,w
 17118  0797  00E2               	movwf	??___fladd
 17119  0798  085B               	movf	___fladd@b+1,w
 17120  0799  00E3               	movwf	??___fladd+1
 17121  079A  085C               	movf	___fladd@b+2,w
 17122  079B  00E4               	movwf	??___fladd+2
 17123  079C  085D               	movf	___fladd@b+3,w
 17124  079D  00E5               	movwf	??___fladd+3
 17125  079E  3001               	movlw	1
 17126  079F  00E6               	movwf	??___fladd+4
 17127  07A0                     u9895:	
 17128  07A0  37E5               	asrf	??___fladd+3,f
 17129  07A1  0CE4               	rrf	??___fladd+2,f
 17130  07A2  0CE3               	rrf	??___fladd+1,f
 17131  07A3  0CE2               	rrf	??___fladd,f
 17132  07A4  0BE6               	decfsz	??___fladd+4,f
 17133  07A5  2FA0               	goto	u9895
 17134  07A6  0865               	movf	??___fladd+3,w
 17135  07A7  00DD               	movwf	___fladd@b+3
 17136  07A8  0864               	movf	??___fladd+2,w
 17137  07A9  00DC               	movwf	___fladd@b+2
 17138  07AA  0863               	movf	??___fladd+1,w
 17139  07AB  00DB               	movwf	___fladd@b+1
 17140  07AC  0862               	movf	??___fladd,w
 17141  07AD  00DA               	movwf	___fladd@b
 17142  07AE  0A6C               	incf	___fladd@bexp,w
 17143  07AF  1903               	btfsc	3,2
 17144  07B0  2FB5               	goto	l1261
 17145  07B1  3001               	movlw	1
 17146  07B2  00E2               	movwf	??___fladd
 17147  07B3  0862               	movf	??___fladd,w
 17148  07B4  07EC               	addwf	___fladd@bexp,f
 17149  07B5                     l1261:	
 17150  07B5  0A6C               	incf	___fladd@bexp,w
 17151  07B6  1D03               	btfss	3,2
 17152  07B7  086C               	movf	___fladd@bexp,w
 17153  07B8  1D03               	btfss	3,2
 17154  07B9  2FC5               	goto	l7505
 17155  07BA  3000               	movlw	0
 17156  07BB  00DD               	movwf	___fladd@b+3
 17157  07BC  3000               	movlw	0
 17158  07BD  00DC               	movwf	___fladd@b+2
 17159  07BE  3000               	movlw	0
 17160  07BF  00DB               	movwf	___fladd@b+1
 17161  07C0  3000               	movlw	0
 17162  07C1  00DA               	movwf	___fladd@b
 17163  07C2  086C               	movf	___fladd@bexp,w
 17164  07C3  1903               	btfsc	3,2
 17165  07C4  01EA               	clrf	___fladd@signs
 17166  07C5                     l7505:	
 17167  07C5  1C6C               	btfss	___fladd@bexp,0
 17168  07C6  2FC9               	goto	l7509
 17169  07C7  17DC               	bsf	___fladd@b+2,7
 17170  07C8  2FCD               	goto	l1269
 17171  07C9                     l7509:	
 17172  07C9  307F               	movlw	127
 17173  07CA  00E2               	movwf	??___fladd
 17174  07CB  0862               	movf	??___fladd,w
 17175  07CC  05DC               	andwf	___fladd@b+2,f
 17176  07CD                     l1269:	
 17177  07CD  366C               	lsrf	___fladd@bexp,w
 17178  07CE  00E2               	movwf	??___fladd
 17179  07CF  0862               	movf	??___fladd,w
 17180  07D0  00DD               	movwf	___fladd@b+3
 17181  07D1  1FEA               	btfss	___fladd@signs,7
 17182  07D2  0008               	return
 17183  07D3  17DD               	bsf	___fladd@b+3,7
 17184  07D4  0008               	return
 17185  07D5                     __end_of___fladd:	
 17186                           
 17187                           	psect	text53
 17188  2DA2                     __ptext53:	
 17189 ;; *************** function _updateCurrent *****************
 17190 ;; Defined at:
 17191 ;;		line 193 in file "BQ76920.c"
 17192 ;; Parameters:    Size  Location     Type
 17193 ;;		None
 17194 ;; Auto vars:     Size  Location     Type
 17195 ;;  adcVal          2   21[BANK1 ] int 
 17196 ;;  sys_stat        1    0        struct regSYS_STAT
 17197 ;; Return value:  Size  Location     Type
 17198 ;;                  1    wreg      void 
 17199 ;; Registers used:
 17200 ;;		wreg, status,2, status,0, pclath, cstack
 17201 ;; Tracked objects:
 17202 ;;		On entry : 0/0
 17203 ;;		On exit  : 0/0
 17204 ;;		Unchanged: 0/0
 17205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17207 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17208 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17209 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17210 ;;Total ram usage:        6 bytes
 17211 ;; Hardware stack levels used:    1
 17212 ;; Hardware stack levels required when called:    3
 17213 ;; This function calls:
 17214 ;;		_I2C_writeRegister
 17215 ;;		___fldiv
 17216 ;;		___flmul
 17217 ;;		___flneg
 17218 ;;		___fltol
 17219 ;;		___xxtofl
 17220 ;;		_readRegister
 17221 ;; This function is called by:
 17222 ;;		_AFE_UPDATE
 17223 ;; This function uses a non-reentrant model
 17224 ;;
 17225                           
 17226                           
 17227                           ;psect for function _updateCurrent
 17228  2DA2                     _updateCurrent:	
 17229                           
 17230                           ;incstack = 0
 17231                           ; Regs used in _updateCurrent: [wreg+status,2+status,0+pclath+cstack]
 17232  2DA2  3018               	movlw	24
 17233  2DA3  00F5               	movwf	readRegister@slaveAddress
 17234  2DA4  3000               	movlw	0
 17235  2DA5  00F6               	movwf	readRegister@slaveAddress+1
 17236  2DA6  3000               	movlw	0
 17237  2DA7  00F7               	movwf	readRegister@regAddress
 17238  2DA8  00F8               	movwf	readRegister@regAddress+1
 17239  2DA9  31B6  2621  31AD   	fcall	_readRegister
 17240                           
 17241                           ;BQ76920.c: 200:     adcVal = (readRegister(0x18, 0x32) << 8)| readRegister(0x18, 0x33);
 17242  2DAC  3018               	movlw	24
 17243  2DAD  00F5               	movwf	readRegister@slaveAddress
 17244  2DAE  3000               	movlw	0
 17245  2DAF  00F6               	movwf	readRegister@slaveAddress+1
 17246  2DB0  3032               	movlw	50
 17247  2DB1  00F7               	movwf	readRegister@regAddress
 17248  2DB2  3000               	movlw	0
 17249  2DB3  00F8               	movwf	readRegister@regAddress+1
 17250  2DB4  31B6  2621  31AD   	fcall	_readRegister
 17251  2DB7  0875               	movf	?_readRegister,w
 17252  2DB8  0021               	movlb	1	; select bank1
 17253  2DB9  00B1               	movwf	??_updateCurrent^(0+128)
 17254  2DBA  0876               	movf	?_readRegister+1,w
 17255  2DBB  00B2               	movwf	(??_updateCurrent^(0+128)+1)
 17256  2DBC  0831               	movf	??_updateCurrent^(0+128),w
 17257  2DBD  00B2               	movwf	(??_updateCurrent^(0+128)+1)
 17258  2DBE  01B1               	clrf	??_updateCurrent^(0+128)
 17259  2DBF  3018               	movlw	24
 17260  2DC0  00F5               	movwf	readRegister@slaveAddress
 17261  2DC1  3000               	movlw	0
 17262  2DC2  00F6               	movwf	readRegister@slaveAddress+1
 17263  2DC3  3033               	movlw	51
 17264  2DC4  00F7               	movwf	readRegister@regAddress
 17265  2DC5  3000               	movlw	0
 17266  2DC6  00F8               	movwf	readRegister@regAddress+1
 17267  2DC7  31B6  2621  31AD   	fcall	_readRegister
 17268  2DCA  0875               	movf	?_readRegister,w
 17269  2DCB  0021               	movlb	1	; select bank1
 17270  2DCC  0431               	iorwf	??_updateCurrent^(0+128),w
 17271  2DCD  00B5               	movwf	updateCurrent@adcVal^(0+128)
 17272  2DCE  0876               	movf	?_readRegister+1,w
 17273  2DCF  0432               	iorwf	(??_updateCurrent+1)^(0+128),w
 17274  2DD0  00B6               	movwf	(updateCurrent@adcVal+1)^(0+128)
 17275                           
 17276                           ;BQ76920.c: 201:     batCurrent = -(adcVal * 8.44 / 19.6);
 17277  2DD1  0835               	movf	updateCurrent@adcVal^(0+128),w
 17278  2DD2  00F1               	movwf	___xxtofl@val
 17279  2DD3  0836               	movf	(updateCurrent@adcVal+1)^(0+128),w
 17280  2DD4  00F2               	movwf	___xxtofl@val+1
 17281  2DD5  0D89               	rlf	9,f
 17282  2DD6  3B89               	subwfb	9,f
 17283  2DD7  0989               	comf	9,f
 17284  2DD8  00F3               	movwf	___xxtofl@val+2
 17285  2DD9  00F4               	movwf	___xxtofl@val+3
 17286  2DDA  3001               	movlw	1
 17287  2DDB  3198  2009  31AD   	fcall	___xxtofl
 17288  2DDE  0874               	movf	?___xxtofl+3,w
 17289  2DDF  0020               	movlb	0	; select bank0
 17290  2DE0  00AD               	movwf	___flmul@a+3
 17291  2DE1  0873               	movf	?___xxtofl+2,w
 17292  2DE2  00AC               	movwf	___flmul@a+2
 17293  2DE3  0872               	movf	?___xxtofl+1,w
 17294  2DE4  00AB               	movwf	___flmul@a+1
 17295  2DE5  0871               	movf	?___xxtofl,w
 17296  2DE6  00AA               	movwf	___flmul@a
 17297  2DE7  3041               	movlw	65
 17298  2DE8  00A9               	movwf	___flmul@b+3
 17299  2DE9  3007               	movlw	7
 17300  2DEA  00A8               	movwf	___flmul@b+2
 17301  2DEB  300A               	movlw	10
 17302  2DEC  00A7               	movwf	___flmul@b+1
 17303  2DED  303D               	movlw	61
 17304  2DEE  00A6               	movwf	___flmul@b
 17305  2DEF  3190  2023  31AD   	fcall	___flmul
 17306  2DF2  0020               	movlb	0	; select bank0
 17307  2DF3  0829               	movf	?___flmul+3,w
 17308  2DF4  00C7               	movwf	___fldiv@b+3
 17309  2DF5  0828               	movf	?___flmul+2,w
 17310  2DF6  00C6               	movwf	___fldiv@b+2
 17311  2DF7  0827               	movf	?___flmul+1,w
 17312  2DF8  00C5               	movwf	___fldiv@b+1
 17313  2DF9  0826               	movf	?___flmul,w
 17314  2DFA  00C4               	movwf	___fldiv@b
 17315  2DFB  3041               	movlw	65
 17316  2DFC  00C3               	movwf	___fldiv@a+3
 17317  2DFD  309C               	movlw	156
 17318  2DFE  00C2               	movwf	___fldiv@a+2
 17319  2DFF  30CC               	movlw	204
 17320  2E00  00C1               	movwf	___fldiv@a+1
 17321  2E01  30CD               	movlw	205
 17322  2E02  00C0               	movwf	___fldiv@a
 17323  2E03  319B  234B  31AD   	fcall	___fldiv
 17324  2E06  0020               	movlb	0	; select bank0
 17325  2E07  0843               	movf	?___fldiv+3,w
 17326  2E08  00DD               	movwf	___flneg@f1+3
 17327  2E09  0842               	movf	?___fldiv+2,w
 17328  2E0A  00DC               	movwf	___flneg@f1+2
 17329  2E0B  0841               	movf	?___fldiv+1,w
 17330  2E0C  00DB               	movwf	___flneg@f1+1
 17331  2E0D  0840               	movf	?___fldiv,w
 17332  2E0E  00DA               	movwf	___flneg@f1
 17333  2E0F  31B3  2328  31AD   	fcall	___flneg
 17334  2E12  0020               	movlb	0	; select bank0
 17335  2E13  085D               	movf	?___flneg+3,w
 17336  2E14  0021               	movlb	1	; select bank1
 17337  2E15  00AB               	movwf	(___fltol@f1+3)^(0+128)
 17338  2E16  0020               	movlb	0	; select bank0
 17339  2E17  085C               	movf	?___flneg+2,w
 17340  2E18  0021               	movlb	1	; select bank1
 17341  2E19  00AA               	movwf	(___fltol@f1+2)^(0+128)
 17342  2E1A  0020               	movlb	0	; select bank0
 17343  2E1B  085B               	movf	?___flneg+1,w
 17344  2E1C  0021               	movlb	1	; select bank1
 17345  2E1D  00A9               	movwf	(___fltol@f1+1)^(0+128)
 17346  2E1E  0020               	movlb	0	; select bank0
 17347  2E1F  085A               	movf	?___flneg,w
 17348  2E20  0021               	movlb	1	; select bank1
 17349  2E21  00A8               	movwf	___fltol@f1^(0+128)
 17350  2E22  31A8  2067  31AD   	fcall	___fltol
 17351  2E25  0021               	movlb	1	; select bank1
 17352  2E26  082B               	movf	(?___fltol+3)^(0+128),w
 17353  2E27  0023               	movlb	3	; select bank3
 17354  2E28  00C3               	movwf	(_batCurrent+3)^(0+384)
 17355  2E29  0021               	movlb	1	; select bank1
 17356  2E2A  082A               	movf	(?___fltol+2)^(0+128),w
 17357  2E2B  0023               	movlb	3	; select bank3
 17358  2E2C  00C2               	movwf	(_batCurrent+2)^(0+384)
 17359  2E2D  0021               	movlb	1	; select bank1
 17360  2E2E  0829               	movf	(?___fltol+1)^(0+128),w
 17361  2E2F  0023               	movlb	3	; select bank3
 17362  2E30  00C1               	movwf	(_batCurrent+1)^(0+384)
 17363  2E31  0021               	movlb	1	; select bank1
 17364  2E32  0828               	movf	?___fltol^(0+128),w
 17365  2E33  0023               	movlb	3	; select bank3
 17366  2E34  00C0               	movwf	_batCurrent^(0+384)
 17367                           
 17368                           ;BQ76920.c: 203:     if (batCurrent > -10 && batCurrent < 10)
 17369  2E35  1FC3               	btfss	(_batCurrent+3)^(0+384),7
 17370  2E36  2E41               	goto	l8377
 17371  2E37  30F7               	movlw	247
 17372  2E38  0240               	subwf	_batCurrent^(0+384),w
 17373  2E39  30FF               	movlw	255
 17374  2E3A  3B41               	subwfb	(_batCurrent+1)^(0+384),w
 17375  2E3B  30FF               	movlw	255
 17376  2E3C  3B42               	subwfb	(_batCurrent+2)^(0+384),w
 17377  2E3D  30FF               	movlw	255
 17378  2E3E  3B43               	subwfb	(_batCurrent+3)^(0+384),w
 17379  2E3F  1C03               	btfss	3,0
 17380  2E40  2E58               	goto	l8381
 17381  2E41                     l8377:	
 17382  2E41  1BC3               	btfsc	(_batCurrent+3)^(0+384),7
 17383  2E42  2E50               	goto	l8379
 17384  2E43  0843               	movf	(_batCurrent+3)^(0+384),w
 17385  2E44  1D03               	btfss	3,2
 17386  2E45  2E58               	goto	l8381
 17387  2E46  0842               	movf	(_batCurrent+2)^(0+384),w
 17388  2E47  1D03               	btfss	3,2
 17389  2E48  2E58               	goto	l8381
 17390  2E49  0841               	movf	(_batCurrent+1)^(0+384),w
 17391  2E4A  1D03               	btfss	3,2
 17392  2E4B  2E58               	goto	l8381
 17393  2E4C  300A               	movlw	10
 17394  2E4D  0240               	subwf	_batCurrent^(0+384),w
 17395  2E4E  1803               	btfsc	3,0
 17396  2E4F  2E58               	goto	l8381
 17397  2E50                     l8379:	
 17398                           
 17399                           ;BQ76920.c: 204:     {;BQ76920.c: 205:       batCurrent = 0;
 17400  2E50  3000               	movlw	0
 17401  2E51  00C3               	movwf	(_batCurrent+3)^(0+384)
 17402  2E52  3000               	movlw	0
 17403  2E53  00C2               	movwf	(_batCurrent+2)^(0+384)
 17404  2E54  3000               	movlw	0
 17405  2E55  00C1               	movwf	(_batCurrent+1)^(0+384)
 17406  2E56  3000               	movlw	0
 17407  2E57  00C0               	movwf	_batCurrent^(0+384)
 17408  2E58                     l8381:	
 17409                           
 17410                           ;BQ76920.c: 208:     I2C_writeRegister(0x18, 0x00, 0x80);
 17411  2E58  3018               	movlw	24
 17412  2E59  00F5               	movwf	I2C_writeRegister@slaveAddress
 17413  2E5A  3000               	movlw	0
 17414  2E5B  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 17415  2E5C  3000               	movlw	0
 17416  2E5D  00F7               	movwf	I2C_writeRegister@regAddress
 17417  2E5E  00F8               	movwf	I2C_writeRegister@regAddress+1
 17418  2E5F  3080               	movlw	128
 17419  2E60  00F9               	movwf	I2C_writeRegister@data
 17420  2E61  3000               	movlw	0
 17421  2E62  00FA               	movwf	I2C_writeRegister@data+1
 17422  2E63  31B4  247A         	fcall	_I2C_writeRegister
 17423  2E65  0008               	return
 17424  2E66                     __end_of_updateCurrent:	
 17425                           
 17426                           	psect	text54
 17427  1809                     __ptext54:	
 17428 ;; *************** function ___xxtofl *****************
 17429 ;; Defined at:
 17430 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 17431 ;; Parameters:    Size  Location     Type
 17432 ;;  sign            1    wreg     unsigned char 
 17433 ;;  val             4    1[COMMON] long 
 17434 ;; Auto vars:     Size  Location     Type
 17435 ;;  sign            1    0[BANK0 ] unsigned char 
 17436 ;;  arg             4    2[BANK0 ] unsigned long 
 17437 ;;  exp             1    1[BANK0 ] unsigned char 
 17438 ;; Return value:  Size  Location     Type
 17439 ;;                  4    1[COMMON] unsigned char 
 17440 ;; Registers used:
 17441 ;;		wreg, status,2, status,0
 17442 ;; Tracked objects:
 17443 ;;		On entry : 0/0
 17444 ;;		On exit  : 0/0
 17445 ;;		Unchanged: 0/0
 17446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17447 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17448 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17449 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17450 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17451 ;;Total ram usage:       14 bytes
 17452 ;; Hardware stack levels used:    1
 17453 ;; Hardware stack levels required when called:    1
 17454 ;; This function calls:
 17455 ;;		Nothing
 17456 ;; This function is called by:
 17457 ;;		_setShortCircuitProtection
 17458 ;;		_setOverCurrentDischargeProtection
 17459 ;;		_updateCurrent
 17460 ;;		_updateVoltages
 17461 ;;		_updateTemperatures
 17462 ;;		_logf
 17463 ;;		_AFE_getSetShortCircuitCurrent
 17464 ;;		_AFE_getOverCurrentDischargeCurrent
 17465 ;; This function uses a non-reentrant model
 17466 ;;
 17467                           
 17468                           
 17469                           ;psect for function ___xxtofl
 17470  1809                     ___xxtofl:	
 17471                           
 17472                           ;incstack = 0
 17473                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 17474                           ;___xxtofl@sign stored from wreg
 17475  1809  0020               	movlb	0	; select bank0
 17476  180A  00A0               	movwf	___xxtofl@sign
 17477  180B  0820               	movf	___xxtofl@sign,w
 17478  180C  1D03               	btfss	3,2
 17479  180D  1FF4               	btfss	___xxtofl@val+3,7
 17480  180E  281F               	goto	l7853
 17481  180F  0971               	comf	___xxtofl@val,w
 17482  1810  00A2               	movwf	___xxtofl@arg
 17483  1811  0972               	comf	___xxtofl@val+1,w
 17484  1812  00A3               	movwf	___xxtofl@arg+1
 17485  1813  0973               	comf	___xxtofl@val+2,w
 17486  1814  00A4               	movwf	___xxtofl@arg+2
 17487  1815  0974               	comf	___xxtofl@val+3,w
 17488  1816  00A5               	movwf	___xxtofl@arg+3
 17489  1817  0AA2               	incf	___xxtofl@arg,f
 17490  1818  1903               	skipnz
 17491  1819  0AA3               	incf	___xxtofl@arg+1,f
 17492  181A  1903               	skipnz
 17493  181B  0AA4               	incf	___xxtofl@arg+2,f
 17494  181C  1903               	skipnz
 17495  181D  0AA5               	incf	___xxtofl@arg+3,f
 17496  181E  2827               	goto	l1361
 17497  181F                     l7853:	
 17498  181F  0874               	movf	___xxtofl@val+3,w
 17499  1820  00A5               	movwf	___xxtofl@arg+3
 17500  1821  0873               	movf	___xxtofl@val+2,w
 17501  1822  00A4               	movwf	___xxtofl@arg+2
 17502  1823  0872               	movf	___xxtofl@val+1,w
 17503  1824  00A3               	movwf	___xxtofl@arg+1
 17504  1825  0871               	movf	___xxtofl@val,w
 17505  1826  00A2               	movwf	___xxtofl@arg
 17506  1827                     l1361:	
 17507  1827  0874               	movf	___xxtofl@val+3,w
 17508  1828  0473               	iorwf	___xxtofl@val+2,w
 17509  1829  0472               	iorwf	___xxtofl@val+1,w
 17510  182A  0471               	iorwf	___xxtofl@val,w
 17511  182B  1D03               	skipz
 17512  182C  2836               	goto	l7859
 17513  182D  3000               	movlw	0
 17514  182E  00F4               	movwf	?___xxtofl+3
 17515  182F  3000               	movlw	0
 17516  1830  00F3               	movwf	?___xxtofl+2
 17517  1831  3000               	movlw	0
 17518  1832  00F2               	movwf	?___xxtofl+1
 17519  1833  3000               	movlw	0
 17520  1834  00F1               	movwf	?___xxtofl
 17521  1835  0008               	return
 17522  1836                     l7859:	
 17523  1836  3096               	movlw	150
 17524  1837  00F5               	movwf	??___xxtofl
 17525  1838  0875               	movf	??___xxtofl,w
 17526  1839  00A1               	movwf	___xxtofl@exp
 17527  183A                     l7863:	
 17528  183A  30FE               	movlw	254
 17529  183B  0525               	andwf	___xxtofl@arg+3,w
 17530  183C  1903               	btfsc	3,2
 17531  183D  285D               	goto	l1367
 17532  183E  3001               	movlw	1
 17533  183F  00F5               	movwf	??___xxtofl
 17534  1840  0875               	movf	??___xxtofl,w
 17535  1841  07A1               	addwf	___xxtofl@exp,f
 17536  1842  3001               	movlw	1
 17537  1843                     u10645:	
 17538  1843  36A5               	lsrf	___xxtofl@arg+3,f
 17539  1844  0CA4               	rrf	___xxtofl@arg+2,f
 17540  1845  0CA3               	rrf	___xxtofl@arg+1,f
 17541  1846  0CA2               	rrf	___xxtofl@arg,f
 17542  1847  0B89               	decfsz	9,f
 17543  1848  2843               	goto	u10645
 17544  1849  283A               	goto	l7863
 17545  184A                     l7865:	
 17546  184A  3001               	movlw	1
 17547  184B  00F5               	movwf	??___xxtofl
 17548  184C  0875               	movf	??___xxtofl,w
 17549  184D  07A1               	addwf	___xxtofl@exp,f
 17550  184E  3001               	movlw	1
 17551  184F  07A2               	addwf	___xxtofl@arg,f
 17552  1850  3000               	movlw	0
 17553  1851  3DA3               	addwfc	___xxtofl@arg+1,f
 17554  1852  3000               	movlw	0
 17555  1853  3DA4               	addwfc	___xxtofl@arg+2,f
 17556  1854  3000               	movlw	0
 17557  1855  3DA5               	addwfc	___xxtofl@arg+3,f
 17558  1856  3001               	movlw	1
 17559  1857                     u10665:	
 17560  1857  36A5               	lsrf	___xxtofl@arg+3,f
 17561  1858  0CA4               	rrf	___xxtofl@arg+2,f
 17562  1859  0CA3               	rrf	___xxtofl@arg+1,f
 17563  185A  0CA2               	rrf	___xxtofl@arg,f
 17564  185B  0B89               	decfsz	9,f
 17565  185C  2857               	goto	u10665
 17566  185D                     l1367:	
 17567  185D  30FF               	movlw	255
 17568  185E  0525               	andwf	___xxtofl@arg+3,w
 17569  185F  1903               	btfsc	3,2
 17570  1860  286F               	goto	l7873
 17571  1861  284A               	goto	l7865
 17572  1862                     l7875:	
 17573  1862  3002               	movlw	2
 17574  1863  0221               	subwf	___xxtofl@exp,w
 17575  1864  1C03               	btfss	3,0
 17576  1865  2871               	goto	l1374
 17577  1866  3001               	movlw	1
 17578  1867  02A1               	subwf	___xxtofl@exp,f
 17579  1868  3001               	movlw	1
 17580  1869                     u10685:	
 17581  1869  35A2               	lslf	___xxtofl@arg,f
 17582  186A  0DA3               	rlf	___xxtofl@arg+1,f
 17583  186B  0DA4               	rlf	___xxtofl@arg+2,f
 17584  186C  0DA5               	rlf	___xxtofl@arg+3,f
 17585  186D  0B89               	decfsz	9,f
 17586  186E  2869               	goto	u10685
 17587  186F                     l7873:	
 17588  186F  1FA4               	btfss	___xxtofl@arg+2,7
 17589  1870  2862               	goto	l7875
 17590  1871                     l1374:	
 17591  1871  1821               	btfsc	___xxtofl@exp,0
 17592  1872  287B               	goto	l1375
 17593  1873  30FF               	movlw	255
 17594  1874  05A2               	andwf	___xxtofl@arg,f
 17595  1875  30FF               	movlw	255
 17596  1876  05A3               	andwf	___xxtofl@arg+1,f
 17597  1877  307F               	movlw	127
 17598  1878  05A4               	andwf	___xxtofl@arg+2,f
 17599  1879  30FF               	movlw	255
 17600  187A  05A5               	andwf	___xxtofl@arg+3,f
 17601  187B                     l1375:	
 17602  187B  1003               	clrc
 17603  187C  0CA1               	rrf	___xxtofl@exp,f
 17604  187D  0821               	movf	___xxtofl@exp,w
 17605  187E  00F5               	movwf	??___xxtofl
 17606  187F  01F6               	clrf	??___xxtofl+1
 17607  1880  01F7               	clrf	??___xxtofl+2
 17608  1881  01F8               	clrf	??___xxtofl+3
 17609  1882  3018               	movlw	24
 17610  1883                     u10725:	
 17611  1883  35F5               	lslf	??___xxtofl,f
 17612  1884  0DF6               	rlf	??___xxtofl+1,f
 17613  1885  0DF7               	rlf	??___xxtofl+2,f
 17614  1886  0DF8               	rlf	??___xxtofl+3,f
 17615  1887  0B89               	decfsz	9,f
 17616  1888  2883               	goto	u10725
 17617  1889  0875               	movf	??___xxtofl,w
 17618  188A  04A2               	iorwf	___xxtofl@arg,f
 17619  188B  0876               	movf	??___xxtofl+1,w
 17620  188C  04A3               	iorwf	___xxtofl@arg+1,f
 17621  188D  0877               	movf	??___xxtofl+2,w
 17622  188E  04A4               	iorwf	___xxtofl@arg+2,f
 17623  188F  0878               	movf	??___xxtofl+3,w
 17624  1890  04A5               	iorwf	___xxtofl@arg+3,f
 17625  1891  0820               	movf	___xxtofl@sign,w
 17626  1892  1D03               	btfss	3,2
 17627  1893  1FF4               	btfss	___xxtofl@val+3,7
 17628  1894  2896               	goto	l7887
 17629  1895  17A5               	bsf	___xxtofl@arg+3,7
 17630  1896                     l7887:	
 17631  1896  0825               	movf	___xxtofl@arg+3,w
 17632  1897  00F4               	movwf	?___xxtofl+3
 17633  1898  0824               	movf	___xxtofl@arg+2,w
 17634  1899  00F3               	movwf	?___xxtofl+2
 17635  189A  0823               	movf	___xxtofl@arg+1,w
 17636  189B  00F2               	movwf	?___xxtofl+1
 17637  189C  0822               	movf	___xxtofl@arg,w
 17638  189D  00F1               	movwf	?___xxtofl
 17639  189E  0008               	return
 17640  189F                     __end_of___xxtofl:	
 17641                           
 17642                           	psect	text55
 17643  2867                     __ptext55:	
 17644 ;; *************** function ___fltol *****************
 17645 ;; Defined at:
 17646 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 17647 ;; Parameters:    Size  Location     Type
 17648 ;;  f1              4    8[BANK1 ] unsigned char 
 17649 ;; Auto vars:     Size  Location     Type
 17650 ;;  exp1            1   11[COMMON] unsigned char 
 17651 ;;  sign1           1   10[COMMON] unsigned char 
 17652 ;; Return value:  Size  Location     Type
 17653 ;;                  4    8[BANK1 ] long 
 17654 ;; Registers used:
 17655 ;;		wreg, status,2, status,0
 17656 ;; Tracked objects:
 17657 ;;		On entry : 0/0
 17658 ;;		On exit  : 0/0
 17659 ;;		Unchanged: 0/0
 17660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17661 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17662 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17663 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17664 ;;      Totals:         2       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17665 ;;Total ram usage:       11 bytes
 17666 ;; Hardware stack levels used:    1
 17667 ;; Hardware stack levels required when called:    1
 17668 ;; This function calls:
 17669 ;;		Nothing
 17670 ;; This function is called by:
 17671 ;;		_updateCurrent
 17672 ;;		_updateVoltages
 17673 ;;		_updateTemperatures
 17674 ;;		_AFE_getSetShortCircuitCurrent
 17675 ;;		_AFE_getOverCurrentDischargeCurrent
 17676 ;; This function uses a non-reentrant model
 17677 ;;
 17678                           
 17679                           
 17680                           ;psect for function ___fltol
 17681  2867                     ___fltol:	
 17682                           
 17683                           ;incstack = 0
 17684                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 17685  2867  1003               	clrc
 17686  2868  0021               	movlb	1	; select bank1
 17687  2869  0D2A               	rlf	(___fltol@f1+2)^(0+128),w
 17688  286A  0D2B               	rlf	(___fltol@f1+3)^(0+128),w
 17689  286B  00AC               	movwf	??___fltol^(0+128)
 17690  286C  082C               	movf	??___fltol^(0+128),w
 17691  286D  00FB               	movwf	___fltol@exp1
 17692  286E  087B               	movf	___fltol@exp1,w
 17693  286F  1D03               	btfss	3,2
 17694  2870  287A               	goto	l8097
 17695  2871                     l8093:	
 17696  2871  3000               	movlw	0
 17697  2872  00AB               	movwf	(?___fltol+3)^(0+128)
 17698  2873  3000               	movlw	0
 17699  2874  00AA               	movwf	(?___fltol+2)^(0+128)
 17700  2875  3000               	movlw	0
 17701  2876  00A9               	movwf	(?___fltol+1)^(0+128)
 17702  2877  3000               	movlw	0
 17703  2878  00A8               	movwf	?___fltol^(0+128)
 17704  2879  0008               	return
 17705  287A                     l8097:	
 17706  287A  0828               	movf	___fltol@f1^(0+128),w
 17707  287B  00AC               	movwf	??___fltol^(0+128)
 17708  287C  0829               	movf	(___fltol@f1+1)^(0+128),w
 17709  287D  00AD               	movwf	(??___fltol^(0+128)+1)
 17710  287E  082A               	movf	(___fltol@f1+2)^(0+128),w
 17711  287F  00AE               	movwf	(??___fltol^(0+128)+2)
 17712  2880  082B               	movf	(___fltol@f1+3)^(0+128),w
 17713  2881  00AF               	movwf	(??___fltol^(0+128)+3)
 17714  2882  301F               	movlw	31
 17715  2883                     u11075:	
 17716  2883  36AF               	lsrf	(??___fltol^(0+128)+3),f
 17717  2884  0CAE               	rrf	(??___fltol^(0+128)+2),f
 17718  2885  0CAD               	rrf	(??___fltol^(0+128)+1),f
 17719  2886  0CAC               	rrf	??___fltol^(0+128),f
 17720  2887  0B89               	decfsz	9,f
 17721  2888  2883               	goto	u11075
 17722  2889  082C               	movf	??___fltol^(0+128),w
 17723  288A  00B0               	movwf	(??___fltol+4)^(0+128)
 17724  288B  0830               	movf	(??___fltol+4)^(0+128),w
 17725  288C  00FA               	movwf	___fltol@sign1
 17726  288D  17AA               	bsf	(___fltol@f1^(0+128)+2),7
 17727  288E  30FF               	movlw	255
 17728  288F  05A8               	andwf	___fltol@f1^(0+128),f
 17729  2890  30FF               	movlw	255
 17730  2891  05A9               	andwf	(___fltol@f1+1)^(0+128),f
 17731  2892  30FF               	movlw	255
 17732  2893  05AA               	andwf	(___fltol@f1+2)^(0+128),f
 17733  2894  3000               	movlw	0
 17734  2895  05AB               	andwf	(___fltol@f1+3)^(0+128),f
 17735  2896  3096               	movlw	150
 17736  2897  02FB               	subwf	___fltol@exp1,f
 17737  2898  1FFB               	btfss	___fltol@exp1,7
 17738  2899  28AD               	goto	l8115
 17739  289A  087B               	movf	___fltol@exp1,w
 17740  289B  3A80               	xorlw	128
 17741  289C  3E97               	addlw	151
 17742  289D  1C03               	btfss	3,0
 17743  289E  2871               	goto	l8093
 17744  289F                     l8113:	
 17745  289F  3001               	movlw	1
 17746  28A0                     u11105:	
 17747  28A0  36AB               	lsrf	(___fltol@f1+3)^(0+128),f
 17748  28A1  0CAA               	rrf	(___fltol@f1+2)^(0+128),f
 17749  28A2  0CA9               	rrf	(___fltol@f1+1)^(0+128),f
 17750  28A3  0CA8               	rrf	___fltol@f1^(0+128),f
 17751  28A4  0B89               	decfsz	9,f
 17752  28A5  28A0               	goto	u11105
 17753  28A6  3001               	movlw	1
 17754  28A7  00AC               	movwf	??___fltol^(0+128)
 17755  28A8  082C               	movf	??___fltol^(0+128),w
 17756  28A9  07FB               	addwf	___fltol@exp1,f
 17757  28AA  1903               	btfsc	3,2
 17758  28AB  28BE               	goto	l8123
 17759  28AC  289F               	goto	l8113
 17760  28AD                     l8115:	
 17761  28AD  3020               	movlw	32
 17762  28AE  027B               	subwf	___fltol@exp1,w
 17763  28AF  1803               	btfsc	3,0
 17764  28B0  2871               	goto	l8093
 17765  28B1                     l1127:	
 17766  28B1  087B               	movf	___fltol@exp1,w
 17767  28B2  1903               	btfsc	3,2
 17768  28B3  28BE               	goto	l8123
 17769  28B4  3001               	movlw	1
 17770  28B5                     u11135:	
 17771  28B5  35A8               	lslf	___fltol@f1^(0+128),f
 17772  28B6  0DA9               	rlf	(___fltol@f1+1)^(0+128),f
 17773  28B7  0DAA               	rlf	(___fltol@f1+2)^(0+128),f
 17774  28B8  0DAB               	rlf	(___fltol@f1+3)^(0+128),f
 17775  28B9  0B89               	decfsz	9,f
 17776  28BA  28B5               	goto	u11135
 17777  28BB  3001               	movlw	1
 17778  28BC  02FB               	subwf	___fltol@exp1,f
 17779  28BD  28B1               	goto	l1127
 17780  28BE                     l8123:	
 17781  28BE  087A               	movf	___fltol@sign1,w
 17782  28BF  1903               	btfsc	3,2
 17783  28C0  0008               	return
 17784  28C1  09A8               	comf	___fltol@f1^(0+128),f
 17785  28C2  09A9               	comf	(___fltol@f1+1)^(0+128),f
 17786  28C3  09AA               	comf	(___fltol@f1+2)^(0+128),f
 17787  28C4  09AB               	comf	(___fltol@f1+3)^(0+128),f
 17788  28C5  0AA8               	incf	___fltol@f1^(0+128),f
 17789  28C6  1903               	skipnz
 17790  28C7  0AA9               	incf	(___fltol@f1+1)^(0+128),f
 17791  28C8  1903               	skipnz
 17792  28C9  0AAA               	incf	(___fltol@f1+2)^(0+128),f
 17793  28CA  1903               	skipnz
 17794  28CB  0AAB               	incf	(___fltol@f1+3)^(0+128),f
 17795  28CC  0008               	return
 17796  28CD                     __end_of___fltol:	
 17797                           
 17798                           	psect	text56
 17799  3328                     __ptext56:	
 17800 ;; *************** function ___flneg *****************
 17801 ;; Defined at:
 17802 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
 17803 ;; Parameters:    Size  Location     Type
 17804 ;;  f1              4   58[BANK0 ] long 
 17805 ;; Auto vars:     Size  Location     Type
 17806 ;;		None
 17807 ;; Return value:  Size  Location     Type
 17808 ;;                  4   58[BANK0 ] long 
 17809 ;; Registers used:
 17810 ;;		wreg
 17811 ;; Tracked objects:
 17812 ;;		On entry : 0/0
 17813 ;;		On exit  : 0/0
 17814 ;;		Unchanged: 0/0
 17815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17816 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17819 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17820 ;;Total ram usage:        4 bytes
 17821 ;; Hardware stack levels used:    1
 17822 ;; Hardware stack levels required when called:    1
 17823 ;; This function calls:
 17824 ;;		Nothing
 17825 ;; This function is called by:
 17826 ;;		_updateCurrent
 17827 ;; This function uses a non-reentrant model
 17828 ;;
 17829                           
 17830                           
 17831                           ;psect for function ___flneg
 17832  3328                     ___flneg:	
 17833                           
 17834                           ;incstack = 0
 17835                           ; Regs used in ___flneg: [wreg]
 17836  3328  0020               	movlb	0	; select bank0
 17837  3329  085D               	movf	___flneg@f1+3,w
 17838  332A  045C               	iorwf	___flneg@f1+2,w
 17839  332B  045B               	iorwf	___flneg@f1+1,w
 17840  332C  045A               	iorwf	___flneg@f1,w
 17841  332D  1903               	skipnz
 17842  332E  0008               	return
 17843  332F  3080               	movlw	128
 17844  3330  06DD               	xorwf	___flneg@f1+3,f
 17845  3331  0008               	return
 17846  3332                     __end_of___flneg:	
 17847                           
 17848                           	psect	text57
 17849  1023                     __ptext57:	
 17850 ;; *************** function ___flmul *****************
 17851 ;; Defined at:
 17852 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
 17853 ;; Parameters:    Size  Location     Type
 17854 ;;  b               4    6[BANK0 ] long 
 17855 ;;  a               4   10[BANK0 ] long 
 17856 ;; Auto vars:     Size  Location     Type
 17857 ;;  prod            4   26[BANK0 ] struct .
 17858 ;;  grs             4   21[BANK0 ] unsigned long 
 17859 ;;  temp            2   30[BANK0 ] struct .
 17860 ;;  bexp            1   25[BANK0 ] unsigned char 
 17861 ;;  aexp            1   20[BANK0 ] unsigned char 
 17862 ;;  sign            1   19[BANK0 ] unsigned char 
 17863 ;; Return value:  Size  Location     Type
 17864 ;;                  4    6[BANK0 ] unsigned char 
 17865 ;; Registers used:
 17866 ;;		wreg, status,2, status,0, pclath, cstack
 17867 ;; Tracked objects:
 17868 ;;		On entry : 0/0
 17869 ;;		On exit  : 0/0
 17870 ;;		Unchanged: 0/0
 17871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17872 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17873 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17874 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17875 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17876 ;;Total ram usage:       26 bytes
 17877 ;; Hardware stack levels used:    1
 17878 ;; Hardware stack levels required when called:    2
 17879 ;; This function calls:
 17880 ;;		__Umul8_16
 17881 ;; This function is called by:
 17882 ;;		_setShortCircuitProtection
 17883 ;;		_setOverCurrentDischargeProtection
 17884 ;;		_updateCurrent
 17885 ;;		_updateVoltages
 17886 ;;		_updateTemperatures
 17887 ;;		_logf
 17888 ;; This function uses a non-reentrant model
 17889 ;;
 17890                           
 17891                           
 17892                           ;psect for function ___flmul
 17893  1023                     ___flmul:	
 17894                           
 17895                           ;incstack = 0
 17896                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 17897  1023  0020               	movlb	0	; select bank0
 17898  1024  0829               	movf	___flmul@b+3,w
 17899  1025  3980               	andlw	128
 17900  1026  00AE               	movwf	??___flmul
 17901  1027  082E               	movf	??___flmul,w
 17902  1028  00B3               	movwf	___flmul@sign
 17903  1029  3529               	lslf	___flmul@b+3,w
 17904  102A  00AE               	movwf	??___flmul
 17905  102B  082E               	movf	??___flmul,w
 17906  102C  00B9               	movwf	___flmul@bexp
 17907  102D  1BA8               	btfsc	___flmul@b+2,7
 17908  102E  1439               	bsf	___flmul@bexp,0
 17909  102F  0839               	movf	___flmul@bexp,w
 17910  1030  1903               	btfsc	3,2
 17911  1031  283F               	goto	l7723
 17912  1032  0A39               	incf	___flmul@bexp,w
 17913  1033  1D03               	btfss	3,2
 17914  1034  283D               	goto	l7721
 17915  1035  3000               	movlw	0
 17916  1036  00A9               	movwf	___flmul@b+3
 17917  1037  3000               	movlw	0
 17918  1038  00A8               	movwf	___flmul@b+2
 17919  1039  3000               	movlw	0
 17920  103A  00A7               	movwf	___flmul@b+1
 17921  103B  3000               	movlw	0
 17922  103C  00A6               	movwf	___flmul@b
 17923  103D                     l7721:	
 17924  103D  17A8               	bsf	___flmul@b+2,7
 17925  103E  2847               	goto	l7725
 17926  103F                     l7723:	
 17927  103F  3000               	movlw	0
 17928  1040  00A9               	movwf	___flmul@b+3
 17929  1041  3000               	movlw	0
 17930  1042  00A8               	movwf	___flmul@b+2
 17931  1043  3000               	movlw	0
 17932  1044  00A7               	movwf	___flmul@b+1
 17933  1045  3000               	movlw	0
 17934  1046  00A6               	movwf	___flmul@b
 17935  1047                     l7725:	
 17936  1047  082D               	movf	___flmul@a+3,w
 17937  1048  3980               	andlw	128
 17938  1049  00AE               	movwf	??___flmul
 17939  104A  082E               	movf	??___flmul,w
 17940  104B  06B3               	xorwf	___flmul@sign,f
 17941  104C  352D               	lslf	___flmul@a+3,w
 17942  104D  00AE               	movwf	??___flmul
 17943  104E  082E               	movf	??___flmul,w
 17944  104F  00B4               	movwf	___flmul@aexp
 17945  1050  1BAC               	btfsc	___flmul@a+2,7
 17946  1051  1434               	bsf	___flmul@aexp,0
 17947  1052  0834               	movf	___flmul@aexp,w
 17948  1053  1903               	btfsc	3,2
 17949  1054  2862               	goto	l7741
 17950  1055  0A34               	incf	___flmul@aexp,w
 17951  1056  1D03               	btfss	3,2
 17952  1057  2860               	goto	l7739
 17953  1058  3000               	movlw	0
 17954  1059  00AD               	movwf	___flmul@a+3
 17955  105A  3000               	movlw	0
 17956  105B  00AC               	movwf	___flmul@a+2
 17957  105C  3000               	movlw	0
 17958  105D  00AB               	movwf	___flmul@a+1
 17959  105E  3000               	movlw	0
 17960  105F  00AA               	movwf	___flmul@a
 17961  1060                     l7739:	
 17962  1060  17AC               	bsf	___flmul@a+2,7
 17963  1061  286A               	goto	l7743
 17964  1062                     l7741:	
 17965  1062  3000               	movlw	0
 17966  1063  00AD               	movwf	___flmul@a+3
 17967  1064  3000               	movlw	0
 17968  1065  00AC               	movwf	___flmul@a+2
 17969  1066  3000               	movlw	0
 17970  1067  00AB               	movwf	___flmul@a+1
 17971  1068  3000               	movlw	0
 17972  1069  00AA               	movwf	___flmul@a
 17973  106A                     l7743:	
 17974  106A  0834               	movf	___flmul@aexp,w
 17975  106B  1D03               	btfss	3,2
 17976  106C  0839               	movf	___flmul@bexp,w
 17977  106D  1D03               	btfss	3,2
 17978  106E  2878               	goto	l7751
 17979  106F  3000               	movlw	0
 17980  1070  00A9               	movwf	?___flmul+3
 17981  1071  3000               	movlw	0
 17982  1072  00A8               	movwf	?___flmul+2
 17983  1073  3000               	movlw	0
 17984  1074  00A7               	movwf	?___flmul+1
 17985  1075  3000               	movlw	0
 17986  1076  00A6               	movwf	?___flmul
 17987  1077  0008               	return
 17988  1078                     l7751:	
 17989  1078  0826               	movf	___flmul@b,w
 17990  1079  00AE               	movwf	??___flmul
 17991  107A  082E               	movf	??___flmul,w
 17992  107B  00F1               	movwf	__Umul8_16@multiplicand
 17993  107C  082C               	movf	___flmul@a+2,w
 17994  107D  31B4  2498  3190   	fcall	__Umul8_16
 17995  1080  0872               	movf	?__Umul8_16+1,w
 17996  1081  0020               	movlb	0	; select bank0
 17997  1082  00BF               	movwf	___flmul@temp+1
 17998  1083  0871               	movf	?__Umul8_16,w
 17999  1084  00BE               	movwf	___flmul@temp
 18000  1085  083E               	movf	___flmul@temp,w
 18001  1086  00AE               	movwf	??___flmul
 18002  1087  01AF               	clrf	??___flmul+1
 18003  1088  01B0               	clrf	??___flmul+2
 18004  1089  01B1               	clrf	??___flmul+3
 18005  108A  0831               	movf	??___flmul+3,w
 18006  108B  00B8               	movwf	___flmul@grs+3
 18007  108C  0830               	movf	??___flmul+2,w
 18008  108D  00B7               	movwf	___flmul@grs+2
 18009  108E  082F               	movf	??___flmul+1,w
 18010  108F  00B6               	movwf	___flmul@grs+1
 18011  1090  082E               	movf	??___flmul,w
 18012  1091  00B5               	movwf	___flmul@grs
 18013  1092  083F               	movf	___flmul@temp+1,w
 18014  1093  00AE               	movwf	??___flmul
 18015  1094  01AF               	clrf	??___flmul+1
 18016  1095  01B0               	clrf	??___flmul+2
 18017  1096  01B1               	clrf	??___flmul+3
 18018  1097  0831               	movf	??___flmul+3,w
 18019  1098  00BD               	movwf	___flmul@prod+3
 18020  1099  0830               	movf	??___flmul+2,w
 18021  109A  00BC               	movwf	___flmul@prod+2
 18022  109B  082F               	movf	??___flmul+1,w
 18023  109C  00BB               	movwf	___flmul@prod+1
 18024  109D  082E               	movf	??___flmul,w
 18025  109E  00BA               	movwf	___flmul@prod
 18026  109F  0827               	movf	___flmul@b+1,w
 18027  10A0  00AE               	movwf	??___flmul
 18028  10A1  082E               	movf	??___flmul,w
 18029  10A2  00F1               	movwf	__Umul8_16@multiplicand
 18030  10A3  082B               	movf	___flmul@a+1,w
 18031  10A4  31B4  2498  3190   	fcall	__Umul8_16
 18032  10A7  0872               	movf	?__Umul8_16+1,w
 18033  10A8  0020               	movlb	0	; select bank0
 18034  10A9  00BF               	movwf	___flmul@temp+1
 18035  10AA  0871               	movf	?__Umul8_16,w
 18036  10AB  00BE               	movwf	___flmul@temp
 18037  10AC  083E               	movf	___flmul@temp,w
 18038  10AD  00AE               	movwf	??___flmul
 18039  10AE  01AF               	clrf	??___flmul+1
 18040  10AF  01B0               	clrf	??___flmul+2
 18041  10B0  01B1               	clrf	??___flmul+3
 18042  10B1  082E               	movf	??___flmul,w
 18043  10B2  07B5               	addwf	___flmul@grs,f
 18044  10B3  082F               	movf	??___flmul+1,w
 18045  10B4  3DB6               	addwfc	___flmul@grs+1,f
 18046  10B5  0830               	movf	??___flmul+2,w
 18047  10B6  3DB7               	addwfc	___flmul@grs+2,f
 18048  10B7  0831               	movf	??___flmul+3,w
 18049  10B8  3DB8               	addwfc	___flmul@grs+3,f
 18050  10B9  083F               	movf	___flmul@temp+1,w
 18051  10BA  00AE               	movwf	??___flmul
 18052  10BB  01AF               	clrf	??___flmul+1
 18053  10BC  01B0               	clrf	??___flmul+2
 18054  10BD  01B1               	clrf	??___flmul+3
 18055  10BE  082E               	movf	??___flmul,w
 18056  10BF  07BA               	addwf	___flmul@prod,f
 18057  10C0  082F               	movf	??___flmul+1,w
 18058  10C1  3DBB               	addwfc	___flmul@prod+1,f
 18059  10C2  0830               	movf	??___flmul+2,w
 18060  10C3  3DBC               	addwfc	___flmul@prod+2,f
 18061  10C4  0831               	movf	??___flmul+3,w
 18062  10C5  3DBD               	addwfc	___flmul@prod+3,f
 18063  10C6  0828               	movf	___flmul@b+2,w
 18064  10C7  00AE               	movwf	??___flmul
 18065  10C8  082E               	movf	??___flmul,w
 18066  10C9  00F1               	movwf	__Umul8_16@multiplicand
 18067  10CA  082A               	movf	___flmul@a,w
 18068  10CB  31B4  2498  3190   	fcall	__Umul8_16
 18069  10CE  0872               	movf	?__Umul8_16+1,w
 18070  10CF  0020               	movlb	0	; select bank0
 18071  10D0  00BF               	movwf	___flmul@temp+1
 18072  10D1  0871               	movf	?__Umul8_16,w
 18073  10D2  00BE               	movwf	___flmul@temp
 18074  10D3  083E               	movf	___flmul@temp,w
 18075  10D4  00AE               	movwf	??___flmul
 18076  10D5  01AF               	clrf	??___flmul+1
 18077  10D6  01B0               	clrf	??___flmul+2
 18078  10D7  01B1               	clrf	??___flmul+3
 18079  10D8  082E               	movf	??___flmul,w
 18080  10D9  07B5               	addwf	___flmul@grs,f
 18081  10DA  082F               	movf	??___flmul+1,w
 18082  10DB  3DB6               	addwfc	___flmul@grs+1,f
 18083  10DC  0830               	movf	??___flmul+2,w
 18084  10DD  3DB7               	addwfc	___flmul@grs+2,f
 18085  10DE  0831               	movf	??___flmul+3,w
 18086  10DF  3DB8               	addwfc	___flmul@grs+3,f
 18087  10E0  083F               	movf	___flmul@temp+1,w
 18088  10E1  00AE               	movwf	??___flmul
 18089  10E2  01AF               	clrf	??___flmul+1
 18090  10E3  01B0               	clrf	??___flmul+2
 18091  10E4  01B1               	clrf	??___flmul+3
 18092  10E5  082E               	movf	??___flmul,w
 18093  10E6  07BA               	addwf	___flmul@prod,f
 18094  10E7  082F               	movf	??___flmul+1,w
 18095  10E8  3DBB               	addwfc	___flmul@prod+1,f
 18096  10E9  0830               	movf	??___flmul+2,w
 18097  10EA  3DBC               	addwfc	___flmul@prod+2,f
 18098  10EB  0831               	movf	??___flmul+3,w
 18099  10EC  3DBD               	addwfc	___flmul@prod+3,f
 18100  10ED  3008               	movlw	8
 18101  10EE                     u10435:	
 18102  10EE  35B5               	lslf	___flmul@grs,f
 18103  10EF  0DB6               	rlf	___flmul@grs+1,f
 18104  10F0  0DB7               	rlf	___flmul@grs+2,f
 18105  10F1  0DB8               	rlf	___flmul@grs+3,f
 18106  10F2  0B89               	decfsz	9,f
 18107  10F3  28EE               	goto	u10435
 18108  10F4  0827               	movf	___flmul@b+1,w
 18109  10F5  00AE               	movwf	??___flmul
 18110  10F6  082E               	movf	??___flmul,w
 18111  10F7  00F1               	movwf	__Umul8_16@multiplicand
 18112  10F8  082A               	movf	___flmul@a,w
 18113  10F9  31B4  2498  3190   	fcall	__Umul8_16
 18114  10FC  0872               	movf	?__Umul8_16+1,w
 18115  10FD  0020               	movlb	0	; select bank0
 18116  10FE  00BF               	movwf	___flmul@temp+1
 18117  10FF  0871               	movf	?__Umul8_16,w
 18118  1100  00BE               	movwf	___flmul@temp
 18119  1101  083E               	movf	___flmul@temp,w
 18120  1102  07B5               	addwf	___flmul@grs,f
 18121  1103  083F               	movf	___flmul@temp+1,w
 18122  1104  3DB6               	addwfc	___flmul@grs+1,f
 18123  1105  3000               	movlw	0
 18124  1106  3DB7               	addwfc	___flmul@grs+2,f
 18125  1107  3DB8               	addwfc	___flmul@grs+3,f
 18126  1108  0826               	movf	___flmul@b,w
 18127  1109  00AE               	movwf	??___flmul
 18128  110A  082E               	movf	??___flmul,w
 18129  110B  00F1               	movwf	__Umul8_16@multiplicand
 18130  110C  082B               	movf	___flmul@a+1,w
 18131  110D  31B4  2498  3190   	fcall	__Umul8_16
 18132  1110  0872               	movf	?__Umul8_16+1,w
 18133  1111  0020               	movlb	0	; select bank0
 18134  1112  00BF               	movwf	___flmul@temp+1
 18135  1113  0871               	movf	?__Umul8_16,w
 18136  1114  00BE               	movwf	___flmul@temp
 18137  1115  083E               	movf	___flmul@temp,w
 18138  1116  07B5               	addwf	___flmul@grs,f
 18139  1117  083F               	movf	___flmul@temp+1,w
 18140  1118  3DB6               	addwfc	___flmul@grs+1,f
 18141  1119  3000               	movlw	0
 18142  111A  3DB7               	addwfc	___flmul@grs+2,f
 18143  111B  3DB8               	addwfc	___flmul@grs+3,f
 18144  111C  3008               	movlw	8
 18145  111D                     u10445:	
 18146  111D  35B5               	lslf	___flmul@grs,f
 18147  111E  0DB6               	rlf	___flmul@grs+1,f
 18148  111F  0DB7               	rlf	___flmul@grs+2,f
 18149  1120  0DB8               	rlf	___flmul@grs+3,f
 18150  1121  0B89               	decfsz	9,f
 18151  1122  291D               	goto	u10445
 18152  1123  0826               	movf	___flmul@b,w
 18153  1124  00AE               	movwf	??___flmul
 18154  1125  082E               	movf	??___flmul,w
 18155  1126  00F1               	movwf	__Umul8_16@multiplicand
 18156  1127  082A               	movf	___flmul@a,w
 18157  1128  31B4  2498  3190   	fcall	__Umul8_16
 18158  112B  0872               	movf	?__Umul8_16+1,w
 18159  112C  0020               	movlb	0	; select bank0
 18160  112D  00BF               	movwf	___flmul@temp+1
 18161  112E  0871               	movf	?__Umul8_16,w
 18162  112F  00BE               	movwf	___flmul@temp
 18163  1130  083E               	movf	___flmul@temp,w
 18164  1131  07B5               	addwf	___flmul@grs,f
 18165  1132  083F               	movf	___flmul@temp+1,w
 18166  1133  3DB6               	addwfc	___flmul@grs+1,f
 18167  1134  3000               	movlw	0
 18168  1135  3DB7               	addwfc	___flmul@grs+2,f
 18169  1136  3DB8               	addwfc	___flmul@grs+3,f
 18170  1137  0827               	movf	___flmul@b+1,w
 18171  1138  00AE               	movwf	??___flmul
 18172  1139  082E               	movf	??___flmul,w
 18173  113A  00F1               	movwf	__Umul8_16@multiplicand
 18174  113B  082C               	movf	___flmul@a+2,w
 18175  113C  31B4  2498  3190   	fcall	__Umul8_16
 18176  113F  0872               	movf	?__Umul8_16+1,w
 18177  1140  0020               	movlb	0	; select bank0
 18178  1141  00BF               	movwf	___flmul@temp+1
 18179  1142  0871               	movf	?__Umul8_16,w
 18180  1143  00BE               	movwf	___flmul@temp
 18181  1144  083E               	movf	___flmul@temp,w
 18182  1145  07BA               	addwf	___flmul@prod,f
 18183  1146  083F               	movf	___flmul@temp+1,w
 18184  1147  3DBB               	addwfc	___flmul@prod+1,f
 18185  1148  3000               	movlw	0
 18186  1149  3DBC               	addwfc	___flmul@prod+2,f
 18187  114A  3DBD               	addwfc	___flmul@prod+3,f
 18188  114B  0828               	movf	___flmul@b+2,w
 18189  114C  00AE               	movwf	??___flmul
 18190  114D  082E               	movf	??___flmul,w
 18191  114E  00F1               	movwf	__Umul8_16@multiplicand
 18192  114F  082B               	movf	___flmul@a+1,w
 18193  1150  31B4  2498  3190   	fcall	__Umul8_16
 18194  1153  0872               	movf	?__Umul8_16+1,w
 18195  1154  0020               	movlb	0	; select bank0
 18196  1155  00BF               	movwf	___flmul@temp+1
 18197  1156  0871               	movf	?__Umul8_16,w
 18198  1157  00BE               	movwf	___flmul@temp
 18199  1158  083E               	movf	___flmul@temp,w
 18200  1159  07BA               	addwf	___flmul@prod,f
 18201  115A  083F               	movf	___flmul@temp+1,w
 18202  115B  3DBB               	addwfc	___flmul@prod+1,f
 18203  115C  3000               	movlw	0
 18204  115D  3DBC               	addwfc	___flmul@prod+2,f
 18205  115E  3DBD               	addwfc	___flmul@prod+3,f
 18206  115F  0828               	movf	___flmul@b+2,w
 18207  1160  00AE               	movwf	??___flmul
 18208  1161  082E               	movf	??___flmul,w
 18209  1162  00F1               	movwf	__Umul8_16@multiplicand
 18210  1163  082C               	movf	___flmul@a+2,w
 18211  1164  31B4  2498  3190   	fcall	__Umul8_16
 18212  1167  0872               	movf	?__Umul8_16+1,w
 18213  1168  0020               	movlb	0	; select bank0
 18214  1169  00BF               	movwf	___flmul@temp+1
 18215  116A  0871               	movf	?__Umul8_16,w
 18216  116B  00BE               	movwf	___flmul@temp
 18217  116C  083E               	movf	___flmul@temp,w
 18218  116D  00AE               	movwf	??___flmul
 18219  116E  083F               	movf	___flmul@temp+1,w
 18220  116F  00AF               	movwf	??___flmul+1
 18221  1170  01B0               	clrf	??___flmul+2
 18222  1171  01B1               	clrf	??___flmul+3
 18223  1172  3008               	movlw	8
 18224  1173                     u10455:	
 18225  1173  35AE               	lslf	??___flmul,f
 18226  1174  0DAF               	rlf	??___flmul+1,f
 18227  1175  0DB0               	rlf	??___flmul+2,f
 18228  1176  0DB1               	rlf	??___flmul+3,f
 18229  1177  0B89               	decfsz	9,f
 18230  1178  2973               	goto	u10455
 18231  1179  082E               	movf	??___flmul,w
 18232  117A  07BA               	addwf	___flmul@prod,f
 18233  117B  082F               	movf	??___flmul+1,w
 18234  117C  3DBB               	addwfc	___flmul@prod+1,f
 18235  117D  0830               	movf	??___flmul+2,w
 18236  117E  3DBC               	addwfc	___flmul@prod+2,f
 18237  117F  0831               	movf	??___flmul+3,w
 18238  1180  3DBD               	addwfc	___flmul@prod+3,f
 18239  1181  0835               	movf	___flmul@grs,w
 18240  1182  00AE               	movwf	??___flmul
 18241  1183  0836               	movf	___flmul@grs+1,w
 18242  1184  00AF               	movwf	??___flmul+1
 18243  1185  0837               	movf	___flmul@grs+2,w
 18244  1186  00B0               	movwf	??___flmul+2
 18245  1187  0838               	movf	___flmul@grs+3,w
 18246  1188  00B1               	movwf	??___flmul+3
 18247  1189  3018               	movlw	24
 18248  118A                     u10465:	
 18249  118A  36B1               	lsrf	??___flmul+3,f
 18250  118B  0CB0               	rrf	??___flmul+2,f
 18251  118C  0CAF               	rrf	??___flmul+1,f
 18252  118D  0CAE               	rrf	??___flmul,f
 18253  118E  0B89               	decfsz	9,f
 18254  118F  298A               	goto	u10465
 18255  1190  082E               	movf	??___flmul,w
 18256  1191  07BA               	addwf	___flmul@prod,f
 18257  1192  082F               	movf	??___flmul+1,w
 18258  1193  3DBB               	addwfc	___flmul@prod+1,f
 18259  1194  0830               	movf	??___flmul+2,w
 18260  1195  3DBC               	addwfc	___flmul@prod+2,f
 18261  1196  0831               	movf	??___flmul+3,w
 18262  1197  3DBD               	addwfc	___flmul@prod+3,f
 18263  1198  3008               	movlw	8
 18264  1199                     u10475:	
 18265  1199  35B5               	lslf	___flmul@grs,f
 18266  119A  0DB6               	rlf	___flmul@grs+1,f
 18267  119B  0DB7               	rlf	___flmul@grs+2,f
 18268  119C  0DB8               	rlf	___flmul@grs+3,f
 18269  119D  0B89               	decfsz	9,f
 18270  119E  2999               	goto	u10475
 18271  119F  0839               	movf	___flmul@bexp,w
 18272  11A0  0734               	addwf	___flmul@aexp,w
 18273  11A1  00AE               	movwf	??___flmul
 18274  11A2  01AF               	clrf	??___flmul+1
 18275  11A3  0DAF               	rlf	??___flmul+1,f
 18276  11A4  082E               	movf	??___flmul,w
 18277  11A5  3E82               	addlw	130
 18278  11A6  00BE               	movwf	___flmul@temp
 18279  11A7  30FF               	movlw	255
 18280  11A8  3D2F               	addwfc	??___flmul+1,w
 18281  11A9  00BF               	movwf	___flmul@temp+1
 18282  11AA                     l7803:	
 18283  11AA  1BBC               	btfsc	___flmul@prod+2,7
 18284  11AB  29C1               	goto	l7805
 18285  11AC  3001               	movlw	1
 18286  11AD                     u10485:	
 18287  11AD  35BA               	lslf	___flmul@prod,f
 18288  11AE  0DBB               	rlf	___flmul@prod+1,f
 18289  11AF  0DBC               	rlf	___flmul@prod+2,f
 18290  11B0  0DBD               	rlf	___flmul@prod+3,f
 18291  11B1  0B89               	decfsz	9,f
 18292  11B2  29AD               	goto	u10485
 18293  11B3  1BB8               	btfsc	___flmul@grs+3,7
 18294  11B4  143A               	bsf	___flmul@prod,0
 18295  11B5  3001               	movlw	1
 18296  11B6                     u10505:	
 18297  11B6  35B5               	lslf	___flmul@grs,f
 18298  11B7  0DB6               	rlf	___flmul@grs+1,f
 18299  11B8  0DB7               	rlf	___flmul@grs+2,f
 18300  11B9  0DB8               	rlf	___flmul@grs+3,f
 18301  11BA  0B89               	decfsz	9,f
 18302  11BB  29B6               	goto	u10505
 18303  11BC  30FF               	movlw	255
 18304  11BD  07BE               	addwf	___flmul@temp,f
 18305  11BE  30FF               	movlw	255
 18306  11BF  3DBF               	addwfc	___flmul@temp+1,f
 18307  11C0  29AA               	goto	l7803
 18308  11C1                     l7805:	
 18309  11C1  01B4               	clrf	___flmul@aexp
 18310  11C2  1FB8               	btfss	___flmul@grs+3,7
 18311  11C3  29DA               	goto	l7815
 18312  11C4  30FF               	movlw	255
 18313  11C5  0535               	andwf	___flmul@grs,w
 18314  11C6  00AE               	movwf	??___flmul
 18315  11C7  30FF               	movlw	255
 18316  11C8  0536               	andwf	___flmul@grs+1,w
 18317  11C9  00AF               	movwf	??___flmul+1
 18318  11CA  30FF               	movlw	255
 18319  11CB  0537               	andwf	___flmul@grs+2,w
 18320  11CC  00B0               	movwf	??___flmul+2
 18321  11CD  307F               	movlw	127
 18322  11CE  0538               	andwf	___flmul@grs+3,w
 18323  11CF  00B1               	movwf	??___flmul+3
 18324  11D0  0831               	movf	??___flmul+3,w
 18325  11D1  0430               	iorwf	??___flmul+2,w
 18326  11D2  042F               	iorwf	??___flmul+1,w
 18327  11D3  042E               	iorwf	??___flmul,w
 18328  11D4  1903               	skipnz
 18329  11D5  183A               	btfsc	___flmul@prod,0
 18330  11D6  29D8               	goto	l7811
 18331  11D7  29DA               	goto	l7815
 18332  11D8                     l7811:	
 18333  11D8  01B4               	clrf	___flmul@aexp
 18334  11D9  0AB4               	incf	___flmul@aexp,f
 18335  11DA                     l7815:	
 18336  11DA  0834               	movf	___flmul@aexp,w
 18337  11DB  1903               	btfsc	3,2
 18338  11DC  2A03               	goto	l7825
 18339  11DD  3001               	movlw	1
 18340  11DE  07BA               	addwf	___flmul@prod,f
 18341  11DF  3000               	movlw	0
 18342  11E0  3DBB               	addwfc	___flmul@prod+1,f
 18343  11E1  3000               	movlw	0
 18344  11E2  3DBC               	addwfc	___flmul@prod+2,f
 18345  11E3  3000               	movlw	0
 18346  11E4  3DBD               	addwfc	___flmul@prod+3,f
 18347  11E5  1C3D               	btfss	___flmul@prod+3,0
 18348  11E6  2A03               	goto	l7825
 18349  11E7  083A               	movf	___flmul@prod,w
 18350  11E8  00AE               	movwf	??___flmul
 18351  11E9  083B               	movf	___flmul@prod+1,w
 18352  11EA  00AF               	movwf	??___flmul+1
 18353  11EB  083C               	movf	___flmul@prod+2,w
 18354  11EC  00B0               	movwf	??___flmul+2
 18355  11ED  083D               	movf	___flmul@prod+3,w
 18356  11EE  00B1               	movwf	??___flmul+3
 18357  11EF  3001               	movlw	1
 18358  11F0  00B2               	movwf	??___flmul+4
 18359  11F1                     u10575:	
 18360  11F1  37B1               	asrf	??___flmul+3,f
 18361  11F2  0CB0               	rrf	??___flmul+2,f
 18362  11F3  0CAF               	rrf	??___flmul+1,f
 18363  11F4  0CAE               	rrf	??___flmul,f
 18364  11F5  0BB2               	decfsz	??___flmul+4,f
 18365  11F6  29F1               	goto	u10575
 18366  11F7  0831               	movf	??___flmul+3,w
 18367  11F8  00BD               	movwf	___flmul@prod+3
 18368  11F9  0830               	movf	??___flmul+2,w
 18369  11FA  00BC               	movwf	___flmul@prod+2
 18370  11FB  082F               	movf	??___flmul+1,w
 18371  11FC  00BB               	movwf	___flmul@prod+1
 18372  11FD  082E               	movf	??___flmul,w
 18373  11FE  00BA               	movwf	___flmul@prod
 18374  11FF  3001               	movlw	1
 18375  1200  07BE               	addwf	___flmul@temp,f
 18376  1201  3000               	movlw	0
 18377  1202  3DBF               	addwfc	___flmul@temp+1,f
 18378  1203                     l7825:	
 18379  1203  083F               	movf	___flmul@temp+1,w
 18380  1204  3A80               	xorlw	128
 18381  1205  00AE               	movwf	??___flmul
 18382  1206  3080               	movlw	128
 18383  1207  022E               	subwf	??___flmul,w
 18384  1208  1D03               	skipz
 18385  1209  2A0C               	goto	u10585
 18386  120A  30FF               	movlw	255
 18387  120B  023E               	subwf	___flmul@temp,w
 18388  120C                     u10585:	
 18389  120C  1C03               	skipc
 18390  120D  2A18               	goto	l7829
 18391  120E  307F               	movlw	127
 18392  120F  0020               	movlb	0	; select bank0
 18393  1210  00BD               	movwf	___flmul@prod+3
 18394  1211  3080               	movlw	128
 18395  1212  00BC               	movwf	___flmul@prod+2
 18396  1213  3000               	movlw	0
 18397  1214  00BB               	movwf	___flmul@prod+1
 18398  1215  3000               	movlw	0
 18399  1216  00BA               	movwf	___flmul@prod
 18400  1217  2A42               	goto	l1335
 18401  1218                     l7829:	
 18402  1218  0020               	movlb	0	; select bank0
 18403  1219  083F               	movf	___flmul@temp+1,w
 18404  121A  3A80               	xorlw	128
 18405  121B  00AE               	movwf	??___flmul
 18406  121C  3080               	movlw	128
 18407  121D  022E               	subwf	??___flmul,w
 18408  121E  1D03               	skipz
 18409  121F  2A22               	goto	u10595
 18410  1220  3001               	movlw	1
 18411  1221  023E               	subwf	___flmul@temp,w
 18412  1222                     u10595:	
 18413  1222  1803               	skipnc
 18414  1223  2A2F               	goto	l7835
 18415  1224  3000               	movlw	0
 18416  1225  0020               	movlb	0	; select bank0
 18417  1226  00BD               	movwf	___flmul@prod+3
 18418  1227  3000               	movlw	0
 18419  1228  00BC               	movwf	___flmul@prod+2
 18420  1229  3000               	movlw	0
 18421  122A  00BB               	movwf	___flmul@prod+1
 18422  122B  3000               	movlw	0
 18423  122C  00BA               	movwf	___flmul@prod
 18424  122D  01B3               	clrf	___flmul@sign
 18425  122E  2A42               	goto	l1335
 18426  122F                     l7835:	
 18427  122F  0020               	movlb	0	; select bank0
 18428  1230  083E               	movf	___flmul@temp,w
 18429  1231  00AE               	movwf	??___flmul
 18430  1232  082E               	movf	??___flmul,w
 18431  1233  00B9               	movwf	___flmul@bexp
 18432  1234  30FF               	movlw	255
 18433  1235  05BA               	andwf	___flmul@prod,f
 18434  1236  30FF               	movlw	255
 18435  1237  05BB               	andwf	___flmul@prod+1,f
 18436  1238  307F               	movlw	127
 18437  1239  05BC               	andwf	___flmul@prod+2,f
 18438  123A  3000               	movlw	0
 18439  123B  05BD               	andwf	___flmul@prod+3,f
 18440  123C  1839               	btfsc	___flmul@bexp,0
 18441  123D  17BC               	bsf	___flmul@prod+2,7
 18442  123E  3639               	lsrf	___flmul@bexp,w
 18443  123F  00AE               	movwf	??___flmul
 18444  1240  082E               	movf	??___flmul,w
 18445  1241  00BD               	movwf	___flmul@prod+3
 18446  1242                     l1335:	
 18447  1242  0833               	movf	___flmul@sign,w
 18448  1243  00AE               	movwf	??___flmul
 18449  1244  082E               	movf	??___flmul,w
 18450  1245  04BD               	iorwf	___flmul@prod+3,f
 18451  1246  083D               	movf	___flmul@prod+3,w
 18452  1247  00A9               	movwf	?___flmul+3
 18453  1248  083C               	movf	___flmul@prod+2,w
 18454  1249  00A8               	movwf	?___flmul+2
 18455  124A  083B               	movf	___flmul@prod+1,w
 18456  124B  00A7               	movwf	?___flmul+1
 18457  124C  083A               	movf	___flmul@prod,w
 18458  124D  00A6               	movwf	?___flmul
 18459  124E  0008               	return
 18460  124F                     __end_of___flmul:	
 18461                           
 18462                           	psect	text58
 18463  3498                     __ptext58:	
 18464 ;; *************** function __Umul8_16 *****************
 18465 ;; Defined at:
 18466 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
 18467 ;; Parameters:    Size  Location     Type
 18468 ;;  multiplier      1    wreg     unsigned char 
 18469 ;;  multiplicand    1    1[COMMON] unsigned char 
 18470 ;; Auto vars:     Size  Location     Type
 18471 ;;  multiplier      1    9[COMMON] unsigned char 
 18472 ;;  word_mpld       2    7[COMMON] unsigned int 
 18473 ;;  product         2    5[COMMON] unsigned int 
 18474 ;; Return value:  Size  Location     Type
 18475 ;;                  2    1[COMMON] unsigned int 
 18476 ;; Registers used:
 18477 ;;		wreg, status,2, status,0
 18478 ;; Tracked objects:
 18479 ;;		On entry : 0/0
 18480 ;;		On exit  : 0/0
 18481 ;;		Unchanged: 0/0
 18482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18483 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18484 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18485 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18486 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18487 ;;Total ram usage:        9 bytes
 18488 ;; Hardware stack levels used:    1
 18489 ;; Hardware stack levels required when called:    1
 18490 ;; This function calls:
 18491 ;;		Nothing
 18492 ;; This function is called by:
 18493 ;;		___flmul
 18494 ;; This function uses a non-reentrant model
 18495 ;;
 18496                           
 18497                           
 18498                           ;psect for function __Umul8_16
 18499  3498                     __Umul8_16:	
 18500                           
 18501                           ;incstack = 0
 18502                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 18503                           ;__Umul8_16@multiplier stored from wreg
 18504  3498  00F9               	movwf	__Umul8_16@multiplier
 18505  3499  01F5               	clrf	__Umul8_16@product
 18506  349A  01F6               	clrf	__Umul8_16@product+1
 18507  349B  0871               	movf	__Umul8_16@multiplicand,w
 18508  349C  00F3               	movwf	??__Umul8_16
 18509  349D  01F4               	clrf	??__Umul8_16+1
 18510  349E  0873               	movf	??__Umul8_16,w
 18511  349F  00F7               	movwf	__Umul8_16@word_mpld
 18512  34A0  0874               	movf	??__Umul8_16+1,w
 18513  34A1  00F8               	movwf	__Umul8_16@word_mpld+1
 18514  34A2                     l7519:	
 18515  34A2  1C79               	btfss	__Umul8_16@multiplier,0
 18516  34A3  2CA8               	goto	l1528
 18517  34A4  0877               	movf	__Umul8_16@word_mpld,w
 18518  34A5  07F5               	addwf	__Umul8_16@product,f
 18519  34A6  0878               	movf	__Umul8_16@word_mpld+1,w
 18520  34A7  3DF6               	addwfc	__Umul8_16@product+1,f
 18521  34A8                     l1528:	
 18522  34A8  3001               	movlw	1
 18523  34A9                     u9975:	
 18524  34A9  35F7               	lslf	__Umul8_16@word_mpld,f
 18525  34AA  0DF8               	rlf	__Umul8_16@word_mpld+1,f
 18526  34AB  0B89               	decfsz	9,f
 18527  34AC  2CA9               	goto	u9975
 18528  34AD  1003               	clrc
 18529  34AE  0CF9               	rrf	__Umul8_16@multiplier,f
 18530  34AF  0879               	movf	__Umul8_16@multiplier,w
 18531  34B0  1D03               	btfss	3,2
 18532  34B1  2CA2               	goto	l7519
 18533  34B2  0876               	movf	__Umul8_16@product+1,w
 18534  34B3  00F2               	movwf	?__Umul8_16+1
 18535  34B4  0875               	movf	__Umul8_16@product,w
 18536  34B5  00F1               	movwf	?__Umul8_16
 18537  34B6  0008               	return
 18538  34B7                     __end_of__Umul8_16:	
 18539                           
 18540                           	psect	text59
 18541  1B4B                     __ptext59:	
 18542 ;; *************** function ___fldiv *****************
 18543 ;; Defined at:
 18544 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 18545 ;; Parameters:    Size  Location     Type
 18546 ;;  a               4   32[BANK0 ] unsigned int 
 18547 ;;  b               4   36[BANK0 ] unsigned int 
 18548 ;; Auto vars:     Size  Location     Type
 18549 ;;  grs             4   52[BANK0 ] unsigned long 
 18550 ;;  rem             4   45[BANK0 ] unsigned long 
 18551 ;;  new_exp         2   50[BANK0 ] int 
 18552 ;;  aexp            1   57[BANK0 ] unsigned char 
 18553 ;;  bexp            1   56[BANK0 ] unsigned char 
 18554 ;;  sign            1   49[BANK0 ] unsigned char 
 18555 ;; Return value:  Size  Location     Type
 18556 ;;                  4   32[BANK0 ] unsigned char 
 18557 ;; Registers used:
 18558 ;;		wreg, status,2, status,0
 18559 ;; Tracked objects:
 18560 ;;		On entry : 0/0
 18561 ;;		On exit  : 0/0
 18562 ;;		Unchanged: 0/0
 18563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18564 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18565 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18566 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18567 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18568 ;;Total ram usage:       26 bytes
 18569 ;; Hardware stack levels used:    1
 18570 ;; Hardware stack levels required when called:    1
 18571 ;; This function calls:
 18572 ;;		Nothing
 18573 ;; This function is called by:
 18574 ;;		_setShortCircuitProtection
 18575 ;;		_setOverCurrentDischargeProtection
 18576 ;;		_updateCurrent
 18577 ;;		_updateVoltages
 18578 ;;		_updateTemperatures
 18579 ;;		_logf
 18580 ;;		_AFE_getSetShortCircuitCurrent
 18581 ;;		_AFE_getOverCurrentDischargeCurrent
 18582 ;; This function uses a non-reentrant model
 18583 ;;
 18584                           
 18585                           
 18586                           ;psect for function ___fldiv
 18587  1B4B                     ___fldiv:	
 18588                           
 18589                           ;incstack = 0
 18590                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 18591  1B4B  0020               	movlb	0	; select bank0
 18592  1B4C  0847               	movf	___fldiv@b+3,w
 18593  1B4D  3980               	andlw	128
 18594  1B4E  00C8               	movwf	??___fldiv
 18595  1B4F  0848               	movf	??___fldiv,w
 18596  1B50  00D1               	movwf	___fldiv@sign
 18597  1B51  3547               	lslf	___fldiv@b+3,w
 18598  1B52  00C8               	movwf	??___fldiv
 18599  1B53  0848               	movf	??___fldiv,w
 18600  1B54  00D8               	movwf	___fldiv@bexp
 18601  1B55  1BC6               	btfsc	___fldiv@b+2,7
 18602  1B56  1458               	bsf	___fldiv@bexp,0
 18603  1B57  0858               	movf	___fldiv@bexp,w
 18604  1B58  1903               	btfsc	3,2
 18605  1B59  2B68               	goto	l7585
 18606  1B5A  0A58               	incf	___fldiv@bexp,w
 18607  1B5B  1D03               	btfss	3,2
 18608  1B5C  2B65               	goto	l7581
 18609  1B5D  3000               	movlw	0
 18610  1B5E  00C7               	movwf	___fldiv@b+3
 18611  1B5F  3000               	movlw	0
 18612  1B60  00C6               	movwf	___fldiv@b+2
 18613  1B61  3000               	movlw	0
 18614  1B62  00C5               	movwf	___fldiv@b+1
 18615  1B63  3000               	movlw	0
 18616  1B64  00C4               	movwf	___fldiv@b
 18617  1B65                     l7581:	
 18618  1B65  17C6               	bsf	___fldiv@b+2,7
 18619  1B66  01C7               	clrf	___fldiv@b+3
 18620  1B67  2B70               	goto	l7587
 18621  1B68                     l7585:	
 18622  1B68  3000               	movlw	0
 18623  1B69  00C7               	movwf	___fldiv@b+3
 18624  1B6A  3000               	movlw	0
 18625  1B6B  00C6               	movwf	___fldiv@b+2
 18626  1B6C  3000               	movlw	0
 18627  1B6D  00C5               	movwf	___fldiv@b+1
 18628  1B6E  3000               	movlw	0
 18629  1B6F  00C4               	movwf	___fldiv@b
 18630  1B70                     l7587:	
 18631  1B70  0843               	movf	___fldiv@a+3,w
 18632  1B71  3980               	andlw	128
 18633  1B72  00C8               	movwf	??___fldiv
 18634  1B73  0848               	movf	??___fldiv,w
 18635  1B74  06D1               	xorwf	___fldiv@sign,f
 18636  1B75  3543               	lslf	___fldiv@a+3,w
 18637  1B76  00C8               	movwf	??___fldiv
 18638  1B77  0848               	movf	??___fldiv,w
 18639  1B78  00D9               	movwf	___fldiv@aexp
 18640  1B79  1BC2               	btfsc	___fldiv@a+2,7
 18641  1B7A  1459               	bsf	___fldiv@aexp,0
 18642  1B7B  0859               	movf	___fldiv@aexp,w
 18643  1B7C  1903               	btfsc	3,2
 18644  1B7D  2B8C               	goto	l7605
 18645  1B7E  0A59               	incf	___fldiv@aexp,w
 18646  1B7F  1D03               	btfss	3,2
 18647  1B80  2B89               	goto	l7601
 18648  1B81  3000               	movlw	0
 18649  1B82  00C3               	movwf	___fldiv@a+3
 18650  1B83  3000               	movlw	0
 18651  1B84  00C2               	movwf	___fldiv@a+2
 18652  1B85  3000               	movlw	0
 18653  1B86  00C1               	movwf	___fldiv@a+1
 18654  1B87  3000               	movlw	0
 18655  1B88  00C0               	movwf	___fldiv@a
 18656  1B89                     l7601:	
 18657  1B89  17C2               	bsf	___fldiv@a+2,7
 18658  1B8A  01C3               	clrf	___fldiv@a+3
 18659  1B8B  2B94               	goto	l1283
 18660  1B8C                     l7605:	
 18661  1B8C  3000               	movlw	0
 18662  1B8D  00C3               	movwf	___fldiv@a+3
 18663  1B8E  3000               	movlw	0
 18664  1B8F  00C2               	movwf	___fldiv@a+2
 18665  1B90  3000               	movlw	0
 18666  1B91  00C1               	movwf	___fldiv@a+1
 18667  1B92  3000               	movlw	0
 18668  1B93  00C0               	movwf	___fldiv@a
 18669  1B94                     l1283:	
 18670  1B94  0843               	movf	___fldiv@a+3,w
 18671  1B95  0442               	iorwf	___fldiv@a+2,w
 18672  1B96  0441               	iorwf	___fldiv@a+1,w
 18673  1B97  0440               	iorwf	___fldiv@a,w
 18674  1B98  1D03               	skipz
 18675  1B99  2BB3               	goto	l7615
 18676  1B9A  3000               	movlw	0
 18677  1B9B  00C7               	movwf	___fldiv@b+3
 18678  1B9C  3000               	movlw	0
 18679  1B9D  00C6               	movwf	___fldiv@b+2
 18680  1B9E  3000               	movlw	0
 18681  1B9F  00C5               	movwf	___fldiv@b+1
 18682  1BA0  3000               	movlw	0
 18683  1BA1  00C4               	movwf	___fldiv@b
 18684  1BA2  3080               	movlw	128
 18685  1BA3  04C6               	iorwf	___fldiv@b+2,f
 18686  1BA4  307F               	movlw	127
 18687  1BA5  04C7               	iorwf	___fldiv@b+3,f
 18688  1BA6                     L5:	
 18689  1BA6  0851               	movf	___fldiv@sign,w
 18690  1BA7  00C8               	movwf	??___fldiv
 18691  1BA8  0848               	movf	??___fldiv,w
 18692  1BA9  04C7               	iorwf	___fldiv@b+3,f
 18693  1BAA  0847               	movf	___fldiv@b+3,w
 18694  1BAB  00C3               	movwf	?___fldiv+3
 18695  1BAC  0846               	movf	___fldiv@b+2,w
 18696  1BAD  00C2               	movwf	?___fldiv+2
 18697  1BAE  0845               	movf	___fldiv@b+1,w
 18698  1BAF  00C1               	movwf	?___fldiv+1
 18699  1BB0  0844               	movf	___fldiv@b,w
 18700  1BB1  00C0               	movwf	?___fldiv
 18701  1BB2  0008               	return
 18702  1BB3                     l7615:	
 18703  1BB3  0858               	movf	___fldiv@bexp,w
 18704  1BB4  1D03               	btfss	3,2
 18705  1BB5  2BBF               	goto	l7621
 18706  1BB6  3000               	movlw	0
 18707  1BB7  00C3               	movwf	?___fldiv+3
 18708  1BB8  3000               	movlw	0
 18709  1BB9  00C2               	movwf	?___fldiv+2
 18710  1BBA  3000               	movlw	0
 18711  1BBB  00C1               	movwf	?___fldiv+1
 18712  1BBC  3000               	movlw	0
 18713  1BBD  00C0               	movwf	?___fldiv
 18714  1BBE  0008               	return
 18715  1BBF                     l7621:	
 18716  1BBF  0858               	movf	___fldiv@bexp,w
 18717  1BC0  00C8               	movwf	??___fldiv
 18718  1BC1  01C9               	clrf	??___fldiv+1
 18719  1BC2  0849               	movf	??___fldiv+1,w
 18720  1BC3  00CB               	movwf	??___fldiv+3
 18721  1BC4  0859               	movf	___fldiv@aexp,w
 18722  1BC5  0248               	subwf	??___fldiv,w
 18723  1BC6  00CA               	movwf	??___fldiv+2
 18724  1BC7  1C03               	skipc
 18725  1BC8  03CB               	decf	??___fldiv+3,f
 18726  1BC9  084A               	movf	??___fldiv+2,w
 18727  1BCA  3E7F               	addlw	127
 18728  1BCB  00D2               	movwf	___fldiv@new_exp
 18729  1BCC  3000               	movlw	0
 18730  1BCD  3D4B               	addwfc	??___fldiv+3,w
 18731  1BCE  00D3               	movwf	___fldiv@new_exp+1
 18732  1BCF  0847               	movf	___fldiv@b+3,w
 18733  1BD0  00D0               	movwf	___fldiv@rem+3
 18734  1BD1  0846               	movf	___fldiv@b+2,w
 18735  1BD2  00CF               	movwf	___fldiv@rem+2
 18736  1BD3  0845               	movf	___fldiv@b+1,w
 18737  1BD4  00CE               	movwf	___fldiv@rem+1
 18738  1BD5  0844               	movf	___fldiv@b,w
 18739  1BD6  00CD               	movwf	___fldiv@rem
 18740  1BD7  3000               	movlw	0
 18741  1BD8  00C7               	movwf	___fldiv@b+3
 18742  1BD9  3000               	movlw	0
 18743  1BDA  00C6               	movwf	___fldiv@b+2
 18744  1BDB  3000               	movlw	0
 18745  1BDC  00C5               	movwf	___fldiv@b+1
 18746  1BDD  3000               	movlw	0
 18747  1BDE  00C4               	movwf	___fldiv@b
 18748  1BDF  3000               	movlw	0
 18749  1BE0  00D7               	movwf	___fldiv@grs+3
 18750  1BE1  3000               	movlw	0
 18751  1BE2  00D6               	movwf	___fldiv@grs+2
 18752  1BE3  3000               	movlw	0
 18753  1BE4  00D5               	movwf	___fldiv@grs+1
 18754  1BE5  3000               	movlw	0
 18755  1BE6  00D4               	movwf	___fldiv@grs
 18756  1BE7  01D9               	clrf	___fldiv@aexp
 18757  1BE8                     l7649:	
 18758  1BE8  301A               	movlw	26
 18759  1BE9  0259               	subwf	___fldiv@aexp,w
 18760  1BEA  1803               	btfsc	3,0
 18761  1BEB  2C24               	goto	l7651
 18762  1BEC  0859               	movf	___fldiv@aexp,w
 18763  1BED  1903               	btfsc	3,2
 18764  1BEE  2C06               	goto	l7641
 18765  1BEF  3001               	movlw	1
 18766  1BF0                     u10155:	
 18767  1BF0  35CD               	lslf	___fldiv@rem,f
 18768  1BF1  0DCE               	rlf	___fldiv@rem+1,f
 18769  1BF2  0DCF               	rlf	___fldiv@rem+2,f
 18770  1BF3  0DD0               	rlf	___fldiv@rem+3,f
 18771  1BF4  0B89               	decfsz	9,f
 18772  1BF5  2BF0               	goto	u10155
 18773  1BF6  3001               	movlw	1
 18774  1BF7                     u10165:	
 18775  1BF7  35C4               	lslf	___fldiv@b,f
 18776  1BF8  0DC5               	rlf	___fldiv@b+1,f
 18777  1BF9  0DC6               	rlf	___fldiv@b+2,f
 18778  1BFA  0DC7               	rlf	___fldiv@b+3,f
 18779  1BFB  0B89               	decfsz	9,f
 18780  1BFC  2BF7               	goto	u10165
 18781  1BFD  1BD7               	btfsc	___fldiv@grs+3,7
 18782  1BFE  1444               	bsf	___fldiv@b,0
 18783  1BFF  3001               	movlw	1
 18784  1C00                     u10185:	
 18785  1C00  35D4               	lslf	___fldiv@grs,f
 18786  1C01  0DD5               	rlf	___fldiv@grs+1,f
 18787  1C02  0DD6               	rlf	___fldiv@grs+2,f
 18788  1C03  0DD7               	rlf	___fldiv@grs+3,f
 18789  1C04  0B89               	decfsz	9,f
 18790  1C05  2C00               	goto	u10185
 18791  1C06                     l7641:	
 18792  1C06  0843               	movf	___fldiv@a+3,w
 18793  1C07  0250               	subwf	___fldiv@rem+3,w
 18794  1C08  1D03               	skipz
 18795  1C09  2C14               	goto	u10195
 18796  1C0A  0842               	movf	___fldiv@a+2,w
 18797  1C0B  024F               	subwf	___fldiv@rem+2,w
 18798  1C0C  1D03               	skipz
 18799  1C0D  2C14               	goto	u10195
 18800  1C0E  0841               	movf	___fldiv@a+1,w
 18801  1C0F  024E               	subwf	___fldiv@rem+1,w
 18802  1C10  1D03               	skipz
 18803  1C11  2C14               	goto	u10195
 18804  1C12  0840               	movf	___fldiv@a,w
 18805  1C13  024D               	subwf	___fldiv@rem,w
 18806  1C14                     u10195:	
 18807  1C14  1C03               	skipc
 18808  1C15  2C1F               	goto	l7647
 18809  1C16  1757               	bsf	___fldiv@grs+3,6
 18810  1C17  0840               	movf	___fldiv@a,w
 18811  1C18  02CD               	subwf	___fldiv@rem,f
 18812  1C19  0841               	movf	___fldiv@a+1,w
 18813  1C1A  3BCE               	subwfb	___fldiv@rem+1,f
 18814  1C1B  0842               	movf	___fldiv@a+2,w
 18815  1C1C  3BCF               	subwfb	___fldiv@rem+2,f
 18816  1C1D  0843               	movf	___fldiv@a+3,w
 18817  1C1E  3BD0               	subwfb	___fldiv@rem+3,f
 18818  1C1F                     l7647:	
 18819  1C1F  3001               	movlw	1
 18820  1C20  00C8               	movwf	??___fldiv
 18821  1C21  0848               	movf	??___fldiv,w
 18822  1C22  07D9               	addwf	___fldiv@aexp,f
 18823  1C23  2BE8               	goto	l7649
 18824  1C24                     l7651:	
 18825  1C24  0850               	movf	___fldiv@rem+3,w
 18826  1C25  044F               	iorwf	___fldiv@rem+2,w
 18827  1C26  044E               	iorwf	___fldiv@rem+1,w
 18828  1C27  044D               	iorwf	___fldiv@rem,w
 18829  1C28  1D03               	btfss	3,2
 18830  1C29  1454               	bsf	___fldiv@grs,0
 18831  1C2A                     l7665:	
 18832  1C2A  1BC6               	btfsc	___fldiv@b+2,7
 18833  1C2B  2C41               	goto	l7667
 18834  1C2C  3001               	movlw	1
 18835  1C2D                     u10225:	
 18836  1C2D  35C4               	lslf	___fldiv@b,f
 18837  1C2E  0DC5               	rlf	___fldiv@b+1,f
 18838  1C2F  0DC6               	rlf	___fldiv@b+2,f
 18839  1C30  0DC7               	rlf	___fldiv@b+3,f
 18840  1C31  0B89               	decfsz	9,f
 18841  1C32  2C2D               	goto	u10225
 18842  1C33  1BD7               	btfsc	___fldiv@grs+3,7
 18843  1C34  1444               	bsf	___fldiv@b,0
 18844  1C35  3001               	movlw	1
 18845  1C36                     u10245:	
 18846  1C36  35D4               	lslf	___fldiv@grs,f
 18847  1C37  0DD5               	rlf	___fldiv@grs+1,f
 18848  1C38  0DD6               	rlf	___fldiv@grs+2,f
 18849  1C39  0DD7               	rlf	___fldiv@grs+3,f
 18850  1C3A  0B89               	decfsz	9,f
 18851  1C3B  2C36               	goto	u10245
 18852  1C3C  30FF               	movlw	255
 18853  1C3D  07D2               	addwf	___fldiv@new_exp,f
 18854  1C3E  30FF               	movlw	255
 18855  1C3F  3DD3               	addwfc	___fldiv@new_exp+1,f
 18856  1C40  2C2A               	goto	l7665
 18857  1C41                     l7667:	
 18858  1C41  01D9               	clrf	___fldiv@aexp
 18859  1C42  1FD7               	btfss	___fldiv@grs+3,7
 18860  1C43  2C5A               	goto	l7677
 18861  1C44  30FF               	movlw	255
 18862  1C45  0554               	andwf	___fldiv@grs,w
 18863  1C46  00C8               	movwf	??___fldiv
 18864  1C47  30FF               	movlw	255
 18865  1C48  0555               	andwf	___fldiv@grs+1,w
 18866  1C49  00C9               	movwf	??___fldiv+1
 18867  1C4A  30FF               	movlw	255
 18868  1C4B  0556               	andwf	___fldiv@grs+2,w
 18869  1C4C  00CA               	movwf	??___fldiv+2
 18870  1C4D  307F               	movlw	127
 18871  1C4E  0557               	andwf	___fldiv@grs+3,w
 18872  1C4F  00CB               	movwf	??___fldiv+3
 18873  1C50  084B               	movf	??___fldiv+3,w
 18874  1C51  044A               	iorwf	??___fldiv+2,w
 18875  1C52  0449               	iorwf	??___fldiv+1,w
 18876  1C53  0448               	iorwf	??___fldiv,w
 18877  1C54  1903               	skipnz
 18878  1C55  1844               	btfsc	___fldiv@b,0
 18879  1C56  2C58               	goto	l7673
 18880  1C57  2C5A               	goto	l7677
 18881  1C58                     l7673:	
 18882  1C58  01D9               	clrf	___fldiv@aexp
 18883  1C59  0AD9               	incf	___fldiv@aexp,f
 18884  1C5A                     l7677:	
 18885  1C5A  0859               	movf	___fldiv@aexp,w
 18886  1C5B  1903               	btfsc	3,2
 18887  1C5C  2C83               	goto	l7687
 18888  1C5D  3001               	movlw	1
 18889  1C5E  07C4               	addwf	___fldiv@b,f
 18890  1C5F  3000               	movlw	0
 18891  1C60  3DC5               	addwfc	___fldiv@b+1,f
 18892  1C61  3000               	movlw	0
 18893  1C62  3DC6               	addwfc	___fldiv@b+2,f
 18894  1C63  3000               	movlw	0
 18895  1C64  3DC7               	addwfc	___fldiv@b+3,f
 18896  1C65  1C47               	btfss	___fldiv@b+3,0
 18897  1C66  2C83               	goto	l7687
 18898  1C67  0844               	movf	___fldiv@b,w
 18899  1C68  00C8               	movwf	??___fldiv
 18900  1C69  0845               	movf	___fldiv@b+1,w
 18901  1C6A  00C9               	movwf	??___fldiv+1
 18902  1C6B  0846               	movf	___fldiv@b+2,w
 18903  1C6C  00CA               	movwf	??___fldiv+2
 18904  1C6D  0847               	movf	___fldiv@b+3,w
 18905  1C6E  00CB               	movwf	??___fldiv+3
 18906  1C6F  3001               	movlw	1
 18907  1C70  00CC               	movwf	??___fldiv+4
 18908  1C71                     u10315:	
 18909  1C71  37CB               	asrf	??___fldiv+3,f
 18910  1C72  0CCA               	rrf	??___fldiv+2,f
 18911  1C73  0CC9               	rrf	??___fldiv+1,f
 18912  1C74  0CC8               	rrf	??___fldiv,f
 18913  1C75  0BCC               	decfsz	??___fldiv+4,f
 18914  1C76  2C71               	goto	u10315
 18915  1C77  084B               	movf	??___fldiv+3,w
 18916  1C78  00C7               	movwf	___fldiv@b+3
 18917  1C79  084A               	movf	??___fldiv+2,w
 18918  1C7A  00C6               	movwf	___fldiv@b+2
 18919  1C7B  0849               	movf	??___fldiv+1,w
 18920  1C7C  00C5               	movwf	___fldiv@b+1
 18921  1C7D  0848               	movf	??___fldiv,w
 18922  1C7E  00C4               	movwf	___fldiv@b
 18923  1C7F  3001               	movlw	1
 18924  1C80  07D2               	addwf	___fldiv@new_exp,f
 18925  1C81  3000               	movlw	0
 18926  1C82  3DD3               	addwfc	___fldiv@new_exp+1,f
 18927  1C83                     l7687:	
 18928  1C83  0853               	movf	___fldiv@new_exp+1,w
 18929  1C84  3A80               	xorlw	128
 18930  1C85  00C8               	movwf	??___fldiv
 18931  1C86  3080               	movlw	128
 18932  1C87  0248               	subwf	??___fldiv,w
 18933  1C88  1D03               	skipz
 18934  1C89  2C8C               	goto	u10325
 18935  1C8A  30FF               	movlw	255
 18936  1C8B  0252               	subwf	___fldiv@new_exp,w
 18937  1C8C                     u10325:	
 18938  1C8C  1C03               	skipc
 18939  1C8D  2C9B               	goto	l1304
 18940  1C8E  30FF               	movlw	255
 18941  1C8F  0020               	movlb	0	; select bank0
 18942  1C90  00D2               	movwf	___fldiv@new_exp
 18943  1C91  3000               	movlw	0
 18944  1C92  00D3               	movwf	___fldiv@new_exp+1
 18945  1C93  3000               	movlw	0
 18946  1C94  00C7               	movwf	___fldiv@b+3
 18947  1C95  3000               	movlw	0
 18948  1C96  00C6               	movwf	___fldiv@b+2
 18949  1C97  3000               	movlw	0
 18950  1C98  00C5               	movwf	___fldiv@b+1
 18951  1C99  3000               	movlw	0
 18952  1C9A  00C4               	movwf	___fldiv@b
 18953  1C9B                     l1304:	
 18954  1C9B  0020               	movlb	0	; select bank0
 18955  1C9C  0853               	movf	___fldiv@new_exp+1,w
 18956  1C9D  3A80               	xorlw	128
 18957  1C9E  00C8               	movwf	??___fldiv
 18958  1C9F  3080               	movlw	128
 18959  1CA0  0248               	subwf	??___fldiv,w
 18960  1CA1  1D03               	skipz
 18961  1CA2  2CA5               	goto	u10335
 18962  1CA3  3001               	movlw	1
 18963  1CA4  0252               	subwf	___fldiv@new_exp,w
 18964  1CA5                     u10335:	
 18965  1CA5  1803               	skipnc
 18966  1CA6  2CB3               	goto	l1305
 18967  1CA7  0020               	movlb	0	; select bank0
 18968  1CA8  01D2               	clrf	___fldiv@new_exp
 18969  1CA9  01D3               	clrf	___fldiv@new_exp+1
 18970  1CAA  3000               	movlw	0
 18971  1CAB  00C7               	movwf	___fldiv@b+3
 18972  1CAC  3000               	movlw	0
 18973  1CAD  00C6               	movwf	___fldiv@b+2
 18974  1CAE  3000               	movlw	0
 18975  1CAF  00C5               	movwf	___fldiv@b+1
 18976  1CB0  3000               	movlw	0
 18977  1CB1  00C4               	movwf	___fldiv@b
 18978  1CB2  01D1               	clrf	___fldiv@sign
 18979  1CB3                     l1305:	
 18980  1CB3  0020               	movlb	0	; select bank0
 18981  1CB4  0852               	movf	___fldiv@new_exp,w
 18982  1CB5  00C8               	movwf	??___fldiv
 18983  1CB6  0848               	movf	??___fldiv,w
 18984  1CB7  00D8               	movwf	___fldiv@bexp
 18985  1CB8  1C58               	btfss	___fldiv@bexp,0
 18986  1CB9  2CBC               	goto	l7701
 18987  1CBA  17C6               	bsf	___fldiv@b+2,7
 18988  1CBB  2CC0               	goto	l1307
 18989  1CBC                     l7701:	
 18990  1CBC  307F               	movlw	127
 18991  1CBD  00C8               	movwf	??___fldiv
 18992  1CBE  0848               	movf	??___fldiv,w
 18993  1CBF  05C6               	andwf	___fldiv@b+2,f
 18994  1CC0                     l1307:	
 18995  1CC0  3658               	lsrf	___fldiv@bexp,w
 18996  1CC1  00C8               	movwf	??___fldiv
 18997  1CC2  0848               	movf	??___fldiv,w
 18998  1CC3  00C7               	movwf	___fldiv@b+3
 18999  1CC4  2BA6               	goto	L5
 19000  1CC5                     __end_of___fldiv:	
 19001                           
 19002                           	psect	text60
 19003  368E                     __ptext60:	
 19004 ;; *************** function _enableDischarging *****************
 19005 ;; Defined at:
 19006 ;;		line 284 in file "BQ76920.c"
 19007 ;; Parameters:    Size  Location     Type
 19008 ;;  enable          2    0[BANK0 ] unsigned int 
 19009 ;; Auto vars:     Size  Location     Type
 19010 ;;  sys_ctrl2       1   11[COMMON] unsigned char 
 19011 ;; Return value:  Size  Location     Type
 19012 ;;                  1    wreg      void 
 19013 ;; Registers used:
 19014 ;;		wreg, status,2, status,0, pclath, cstack
 19015 ;; Tracked objects:
 19016 ;;		On entry : 0/0
 19017 ;;		On exit  : 0/0
 19018 ;;		Unchanged: 0/0
 19019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19020 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19021 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19022 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19023 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19024 ;;Total ram usage:        5 bytes
 19025 ;; Hardware stack levels used:    1
 19026 ;; Hardware stack levels required when called:    3
 19027 ;; This function calls:
 19028 ;;		_I2C_writeRegister
 19029 ;;		_readRegister
 19030 ;; This function is called by:
 19031 ;;		_AFE_UPDATE
 19032 ;; This function uses a non-reentrant model
 19033 ;;
 19034                           
 19035                           
 19036                           ;psect for function _enableDischarging
 19037  368E                     _enableDischarging:	
 19038                           
 19039                           ;BQ76920.c: 285:     uint8_t sys_ctrl2;;BQ76920.c: 286:     sys_ctrl2 = readRegister(0x1
      +                          8, 0x05);
 19040                           
 19041                           ;incstack = 0
 19042                           ; Regs used in _enableDischarging: [wreg+status,2+status,0+pclath+cstack]
 19043  368E  3018               	movlw	24
 19044  368F  00F5               	movwf	readRegister@slaveAddress
 19045  3690  3000               	movlw	0
 19046  3691  00F6               	movwf	readRegister@slaveAddress+1
 19047  3692  3005               	movlw	5
 19048  3693  00F7               	movwf	readRegister@regAddress
 19049  3694  3000               	movlw	0
 19050  3695  00F8               	movwf	readRegister@regAddress+1
 19051  3696  31B6  2621  31B6   	fcall	_readRegister
 19052  3699  0875               	movf	?_readRegister,w
 19053  369A  0020               	movlb	0	; select bank0
 19054  369B  00A2               	movwf	??_enableDischarging
 19055  369C  0822               	movf	??_enableDischarging,w
 19056  369D  00FB               	movwf	enableDischarging@sys_ctrl2
 19057                           
 19058                           ;BQ76920.c: 287:     if(enable){
 19059  369E  0820               	movf	enableDischarging@enable,w
 19060  369F  0421               	iorwf	enableDischarging@enable+1,w
 19061  36A0  1903               	btfsc	3,2
 19062  36A1  2EB2               	goto	l8427
 19063                           
 19064                           ;BQ76920.c: 288:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 | 0x02);
 19065  36A2  3018               	movlw	24
 19066  36A3  00F5               	movwf	I2C_writeRegister@slaveAddress
 19067  36A4  3000               	movlw	0
 19068  36A5  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 19069  36A6  3005               	movlw	5
 19070  36A7  00F7               	movwf	I2C_writeRegister@regAddress
 19071  36A8  3000               	movlw	0
 19072  36A9  00F8               	movwf	I2C_writeRegister@regAddress+1
 19073  36AA  3002               	movlw	2
 19074  36AB  047B               	iorwf	enableDischarging@sys_ctrl2,w
 19075  36AC  00F9               	movwf	I2C_writeRegister@data
 19076  36AD  3000               	movlw	0
 19077  36AE  00FA               	movwf	I2C_writeRegister@data+1
 19078  36AF  31B4  247A         	fcall	_I2C_writeRegister
 19079                           
 19080                           ;BQ76920.c: 289:     }else{
 19081  36B1  0008               	return
 19082  36B2                     l8427:	
 19083                           
 19084                           ;BQ76920.c: 290:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 & ~(0x02));
 19085  36B2  3018               	movlw	24
 19086  36B3  00F5               	movwf	I2C_writeRegister@slaveAddress
 19087  36B4  3000               	movlw	0
 19088  36B5  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 19089  36B6  3005               	movlw	5
 19090  36B7  00F7               	movwf	I2C_writeRegister@regAddress
 19091  36B8  3000               	movlw	0
 19092  36B9  00F8               	movwf	I2C_writeRegister@regAddress+1
 19093  36BA  087B               	movf	enableDischarging@sys_ctrl2,w
 19094  36BB  39FD               	andlw	253
 19095  36BC  00A2               	movwf	??_enableDischarging
 19096  36BD  01A3               	clrf	??_enableDischarging+1
 19097  36BE  0822               	movf	??_enableDischarging,w
 19098  36BF  00F9               	movwf	I2C_writeRegister@data
 19099  36C0  0823               	movf	??_enableDischarging+1,w
 19100  36C1  00FA               	movwf	I2C_writeRegister@data+1
 19101  36C2  31B4  247A         	fcall	_I2C_writeRegister
 19102  36C4  0008               	return
 19103  36C5                     __end_of_enableDischarging:	
 19104                           
 19105                           	psect	text61
 19106  3657                     __ptext61:	
 19107 ;; *************** function _enableCharging *****************
 19108 ;; Defined at:
 19109 ;;		line 294 in file "BQ76920.c"
 19110 ;; Parameters:    Size  Location     Type
 19111 ;;  enable          2    0[BANK0 ] unsigned int 
 19112 ;; Auto vars:     Size  Location     Type
 19113 ;;  sys_ctrl2       1   11[COMMON] unsigned char 
 19114 ;; Return value:  Size  Location     Type
 19115 ;;                  1    wreg      void 
 19116 ;; Registers used:
 19117 ;;		wreg, status,2, status,0, pclath, cstack
 19118 ;; Tracked objects:
 19119 ;;		On entry : 0/0
 19120 ;;		On exit  : 0/0
 19121 ;;		Unchanged: 0/0
 19122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19123 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19124 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19125 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19126 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19127 ;;Total ram usage:        5 bytes
 19128 ;; Hardware stack levels used:    1
 19129 ;; Hardware stack levels required when called:    3
 19130 ;; This function calls:
 19131 ;;		_I2C_writeRegister
 19132 ;;		_readRegister
 19133 ;; This function is called by:
 19134 ;;		_AFE_UPDATE
 19135 ;; This function uses a non-reentrant model
 19136 ;;
 19137                           
 19138                           
 19139                           ;psect for function _enableCharging
 19140  3657                     _enableCharging:	
 19141                           
 19142                           ;BQ76920.c: 295:     uint8_t sys_ctrl2;;BQ76920.c: 296:     sys_ctrl2 = readRegister(0x1
      +                          8, 0x05);
 19143                           
 19144                           ;incstack = 0
 19145                           ; Regs used in _enableCharging: [wreg+status,2+status,0+pclath+cstack]
 19146  3657  3018               	movlw	24
 19147  3658  00F5               	movwf	readRegister@slaveAddress
 19148  3659  3000               	movlw	0
 19149  365A  00F6               	movwf	readRegister@slaveAddress+1
 19150  365B  3005               	movlw	5
 19151  365C  00F7               	movwf	readRegister@regAddress
 19152  365D  3000               	movlw	0
 19153  365E  00F8               	movwf	readRegister@regAddress+1
 19154  365F  31B6  2621  31B6   	fcall	_readRegister
 19155  3662  0875               	movf	?_readRegister,w
 19156  3663  0020               	movlb	0	; select bank0
 19157  3664  00A2               	movwf	??_enableCharging
 19158  3665  0822               	movf	??_enableCharging,w
 19159  3666  00FB               	movwf	enableCharging@sys_ctrl2
 19160                           
 19161                           ;BQ76920.c: 297:     if(enable){
 19162  3667  0820               	movf	enableCharging@enable,w
 19163  3668  0421               	iorwf	enableCharging@enable+1,w
 19164  3669  1903               	btfsc	3,2
 19165  366A  2E7B               	goto	l8435
 19166                           
 19167                           ;BQ76920.c: 298:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 | 0x01);
 19168  366B  3018               	movlw	24
 19169  366C  00F5               	movwf	I2C_writeRegister@slaveAddress
 19170  366D  3000               	movlw	0
 19171  366E  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 19172  366F  3005               	movlw	5
 19173  3670  00F7               	movwf	I2C_writeRegister@regAddress
 19174  3671  3000               	movlw	0
 19175  3672  00F8               	movwf	I2C_writeRegister@regAddress+1
 19176  3673  3001               	movlw	1
 19177  3674  047B               	iorwf	enableCharging@sys_ctrl2,w
 19178  3675  00F9               	movwf	I2C_writeRegister@data
 19179  3676  3000               	movlw	0
 19180  3677  00FA               	movwf	I2C_writeRegister@data+1
 19181  3678  31B4  247A         	fcall	_I2C_writeRegister
 19182                           
 19183                           ;BQ76920.c: 299:     }else{
 19184  367A  0008               	return
 19185  367B                     l8435:	
 19186                           
 19187                           ;BQ76920.c: 300:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 & ~(0x01));
 19188  367B  3018               	movlw	24
 19189  367C  00F5               	movwf	I2C_writeRegister@slaveAddress
 19190  367D  3000               	movlw	0
 19191  367E  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 19192  367F  3005               	movlw	5
 19193  3680  00F7               	movwf	I2C_writeRegister@regAddress
 19194  3681  3000               	movlw	0
 19195  3682  00F8               	movwf	I2C_writeRegister@regAddress+1
 19196  3683  087B               	movf	enableCharging@sys_ctrl2,w
 19197  3684  39FE               	andlw	254
 19198  3685  00A2               	movwf	??_enableCharging
 19199  3686  01A3               	clrf	??_enableCharging+1
 19200  3687  0822               	movf	??_enableCharging,w
 19201  3688  00F9               	movwf	I2C_writeRegister@data
 19202  3689  0823               	movf	??_enableCharging+1,w
 19203  368A  00FA               	movwf	I2C_writeRegister@data+1
 19204  368B  31B4  247A         	fcall	_I2C_writeRegister
 19205  368D  0008               	return
 19206  368E                     __end_of_enableCharging:	
 19207                           
 19208                           	psect	text62
 19209  3621                     __ptext62:	
 19210 ;; *************** function _readRegister *****************
 19211 ;; Defined at:
 19212 ;;		line 115 in file "I2C.c"
 19213 ;; Parameters:    Size  Location     Type
 19214 ;;  slaveAddress    2    5[COMMON] int 
 19215 ;;  regAddress      2    7[COMMON] int 
 19216 ;; Auto vars:     Size  Location     Type
 19217 ;;  recievedData    2    9[COMMON] int 
 19218 ;; Return value:  Size  Location     Type
 19219 ;;                  2    5[COMMON] int 
 19220 ;; Registers used:
 19221 ;;		wreg, status,2, status,0, pclath, cstack
 19222 ;; Tracked objects:
 19223 ;;		On entry : 0/0
 19224 ;;		On exit  : 0/0
 19225 ;;		Unchanged: 0/0
 19226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19227 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19228 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19230 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19231 ;;Total ram usage:        6 bytes
 19232 ;; Hardware stack levels used:    1
 19233 ;; Hardware stack levels required when called:    2
 19234 ;; This function calls:
 19235 ;;		_read_I2C_data
 19236 ;;		_send_I2C_NACK
 19237 ;;		_send_I2C_controlByte
 19238 ;;		_send_I2C_data
 19239 ;;		_send_I2C_startBit
 19240 ;;		_send_I2C_stopBit
 19241 ;; This function is called by:
 19242 ;;		_beginAFEcommunication
 19243 ;;		_setCellUndervoltageProtection
 19244 ;;		_setCellOvervoltageProtection
 19245 ;;		_updateCurrent
 19246 ;;		_updateVoltages
 19247 ;;		_updateTemperatures
 19248 ;;		_enableDischarging
 19249 ;;		_enableCharging
 19250 ;;		_printcellParameters
 19251 ;;		_printotAFERegisters
 19252 ;; This function uses a non-reentrant model
 19253 ;;
 19254                           
 19255                           
 19256                           ;psect for function _readRegister
 19257  3621                     _readRegister:	
 19258                           
 19259                           ;I2C.c: 116:     int recievedData;;I2C.c: 117:     send_I2C_startBit();
 19260                           
 19261                           ;incstack = 0
 19262                           ; Regs used in _readRegister: [wreg+status,2+status,0+pclath+cstack]
 19263  3621  31B2  22F3  31B6   	fcall	_send_I2C_startBit
 19264                           
 19265                           ;I2C.c: 118:     send_I2C_controlByte(slaveAddress, 0);
 19266  3624  0876               	movf	readRegister@slaveAddress+1,w
 19267  3625  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 19268  3626  0875               	movf	readRegister@slaveAddress,w
 19269  3627  00F1               	movwf	send_I2C_controlByte@BlockAddress
 19270  3628  3000               	movlw	0
 19271  3629  00F3               	movwf	send_I2C_controlByte@RW_bit
 19272  362A  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 19273  362B  31B3  231E  31B6   	fcall	_send_I2C_controlByte
 19274                           
 19275                           ;I2C.c: 119:     send_I2C_data(regAddress);
 19276  362E  0878               	movf	readRegister@regAddress+1,w
 19277  362F  00F2               	movwf	send_I2C_data@databyte+1
 19278  3630  0877               	movf	readRegister@regAddress,w
 19279  3631  00F1               	movwf	send_I2C_data@databyte
 19280  3632  31B3  230C  31B6   	fcall	_send_I2C_data
 19281                           
 19282                           ;I2C.c: 120:     send_I2C_stopBit();
 19283  3635  31B2  22FB  31B6   	fcall	_send_I2C_stopBit
 19284                           
 19285                           ;I2C.c: 121:     send_I2C_startBit();
 19286  3638  31B2  22F3  31B6   	fcall	_send_I2C_startBit
 19287                           
 19288                           ;I2C.c: 122:     send_I2C_controlByte(slaveAddress, 1);
 19289  363B  0876               	movf	readRegister@slaveAddress+1,w
 19290  363C  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 19291  363D  0875               	movf	readRegister@slaveAddress,w
 19292  363E  00F1               	movwf	send_I2C_controlByte@BlockAddress
 19293  363F  3001               	movlw	1
 19294  3640  00F3               	movwf	send_I2C_controlByte@RW_bit
 19295  3641  3000               	movlw	0
 19296  3642  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 19297  3643  31B3  231E  31B6   	fcall	_send_I2C_controlByte
 19298                           
 19299                           ;I2C.c: 123:     recievedData = read_I2C_data();
 19300  3646  31A8  2001  31B6   	fcall	_read_I2C_data
 19301  3649  0872               	movf	?_read_I2C_data+1,w
 19302  364A  00FA               	movwf	readRegister@recievedData+1
 19303  364B  0871               	movf	?_read_I2C_data,w
 19304  364C  00F9               	movwf	readRegister@recievedData
 19305                           
 19306                           ;I2C.c: 124:     send_I2C_NACK();
 19307  364D  31B3  2315  31B6   	fcall	_send_I2C_NACK
 19308                           
 19309                           ;I2C.c: 125:     send_I2C_stopBit();
 19310  3650  31B2  22FB         	fcall	_send_I2C_stopBit
 19311                           
 19312                           ;I2C.c: 126:     return recievedData;
 19313  3652  087A               	movf	readRegister@recievedData+1,w
 19314  3653  00F6               	movwf	?_readRegister+1
 19315  3654  0879               	movf	readRegister@recievedData,w
 19316  3655  00F5               	movwf	?_readRegister
 19317  3656  0008               	return
 19318  3657                     __end_of_readRegister:	
 19319                           
 19320                           	psect	text63
 19321  3315                     __ptext63:	
 19322 ;; *************** function _send_I2C_NACK *****************
 19323 ;; Defined at:
 19324 ;;		line 91 in file "I2C.c"
 19325 ;; Parameters:    Size  Location     Type
 19326 ;;		None
 19327 ;; Auto vars:     Size  Location     Type
 19328 ;;		None
 19329 ;; Return value:  Size  Location     Type
 19330 ;;                  1    wreg      void 
 19331 ;; Registers used:
 19332 ;;		None
 19333 ;; Tracked objects:
 19334 ;;		On entry : 0/0
 19335 ;;		On exit  : 0/0
 19336 ;;		Unchanged: 0/0
 19337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19342 ;;Total ram usage:        0 bytes
 19343 ;; Hardware stack levels used:    1
 19344 ;; Hardware stack levels required when called:    1
 19345 ;; This function calls:
 19346 ;;		Nothing
 19347 ;; This function is called by:
 19348 ;;		_readRegister
 19349 ;; This function uses a non-reentrant model
 19350 ;;
 19351                           
 19352                           
 19353                           ;psect for function _send_I2C_NACK
 19354  3315                     _send_I2C_NACK:	
 19355                           
 19356                           ;I2C.c: 92:     PIR1bits.SSP1IF = 0;
 19357                           
 19358                           ;incstack = 0
 19359                           ; Regs used in _send_I2C_NACK: []
 19360  3315  0020               	movlb	0	; select bank0
 19361  3316  1191               	bcf	17,3	;volatile
 19362                           
 19363                           ;I2C.c: 93:     SSPCON2bits.ACKDT = 1;
 19364  3317  0024               	movlb	4	; select bank4
 19365  3318  1696               	bsf	22,5	;volatile
 19366                           
 19367                           ;I2C.c: 94:     SSPCON2bits.ACKEN = 1;
 19368  3319  1616               	bsf	22,4	;volatile
 19369  331A                     l326:	
 19370                           ;I2C.c: 95:     while (!PIR1bits.SSP1IF);
 19371                           
 19372  331A  0020               	movlb	0	; select bank0
 19373  331B  1991               	btfsc	17,3	;volatile
 19374  331C  0008               	return
 19375  331D  2B1A               	goto	l326
 19376  331E                     __end_of_send_I2C_NACK:	
 19377                           
 19378                           	psect	text64
 19379  2801                     __ptext64:	
 19380 ;; *************** function _read_I2C_data *****************
 19381 ;; Defined at:
 19382 ;;		line 43 in file "I2C.c"
 19383 ;; Parameters:    Size  Location     Type
 19384 ;;		None
 19385 ;; Auto vars:     Size  Location     Type
 19386 ;;		None
 19387 ;; Return value:  Size  Location     Type
 19388 ;;                  2    1[COMMON] unsigned int 
 19389 ;; Registers used:
 19390 ;;		wreg
 19391 ;; Tracked objects:
 19392 ;;		On entry : 0/0
 19393 ;;		On exit  : 0/0
 19394 ;;		Unchanged: 0/0
 19395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19396 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19398 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19399 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19400 ;;Total ram usage:        4 bytes
 19401 ;; Hardware stack levels used:    1
 19402 ;; Hardware stack levels required when called:    1
 19403 ;; This function calls:
 19404 ;;		Nothing
 19405 ;; This function is called by:
 19406 ;;		_readRegister
 19407 ;; This function uses a non-reentrant model
 19408 ;;
 19409                           
 19410                           
 19411                           ;psect for function _read_I2C_data
 19412  2801                     _read_I2C_data:	
 19413                           
 19414                           ;I2C.c: 44:     PIR1bits.SSP1IF = 0;
 19415                           
 19416                           ;incstack = 0
 19417                           ; Regs used in _read_I2C_data: [wreg]
 19418  2801  0020               	movlb	0	; select bank0
 19419  2802  1191               	bcf	17,3	;volatile
 19420                           
 19421                           ;I2C.c: 45:     SSPCON2bits.RCEN = 1;
 19422  2803  0024               	movlb	4	; select bank4
 19423  2804  1596               	bsf	22,3	;volatile
 19424  2805                     l290:	
 19425                           ;I2C.c: 46:     while (!PIR1bits.SSP1IF);
 19426                           
 19427  2805  0020               	movlb	0	; select bank0
 19428  2806  1D91               	btfss	17,3	;volatile
 19429  2807  2805               	goto	l290
 19430                           
 19431                           ;I2C.c: 47:     return (SSPBUF);
 19432  2808  0024               	movlb	4	; select bank4
 19433  2809  0811               	movf	17,w	;volatile
 19434  280A  00F3               	movwf	??_read_I2C_data
 19435  280B  01F4               	clrf	??_read_I2C_data+1
 19436  280C  0873               	movf	??_read_I2C_data,w
 19437  280D  00F1               	movwf	?_read_I2C_data
 19438  280E  0874               	movf	??_read_I2C_data+1,w
 19439  280F  00F2               	movwf	?_read_I2C_data+1
 19440  2810  0008               	return
 19441  2811                     __end_of_read_I2C_data:	
 19442                           
 19443                           	psect	text65
 19444  347A                     __ptext65:	
 19445 ;; *************** function _I2C_writeRegister *****************
 19446 ;; Defined at:
 19447 ;;		line 104 in file "I2C.c"
 19448 ;; Parameters:    Size  Location     Type
 19449 ;;  slaveAddress    2    5[COMMON] int 
 19450 ;;  regAddress      2    7[COMMON] int 
 19451 ;;  data            2    9[COMMON] int 
 19452 ;; Auto vars:     Size  Location     Type
 19453 ;;		None
 19454 ;; Return value:  Size  Location     Type
 19455 ;;                  1    wreg      void 
 19456 ;; Registers used:
 19457 ;;		wreg, status,2, status,0, pclath, cstack
 19458 ;; Tracked objects:
 19459 ;;		On entry : 0/0
 19460 ;;		On exit  : 0/0
 19461 ;;		Unchanged: 0/0
 19462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19463 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19466 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19467 ;;Total ram usage:        6 bytes
 19468 ;; Hardware stack levels used:    1
 19469 ;; Hardware stack levels required when called:    2
 19470 ;; This function calls:
 19471 ;;		_send_I2C_controlByte
 19472 ;;		_send_I2C_data
 19473 ;;		_send_I2C_startBit
 19474 ;;		_send_I2C_stopBit
 19475 ;; This function is called by:
 19476 ;;		_beginAFEcommunication
 19477 ;;		_setShortCircuitProtection
 19478 ;;		_setOverCurrentDischargeProtection
 19479 ;;		_setCellUndervoltageProtection
 19480 ;;		_setCellOvervoltageProtection
 19481 ;;		_updateCurrent
 19482 ;;		_enableDischarging
 19483 ;;		_enableCharging
 19484 ;; This function uses a non-reentrant model
 19485 ;;
 19486                           
 19487                           
 19488                           ;psect for function _I2C_writeRegister
 19489  347A                     _I2C_writeRegister:	
 19490                           
 19491                           ;I2C.c: 105:     send_I2C_startBit();
 19492                           
 19493                           ;incstack = 0
 19494                           ; Regs used in _I2C_writeRegister: [wreg+status,2+status,0+pclath+cstack]
 19495  347A  31B2  22F3  31B4   	fcall	_send_I2C_startBit
 19496                           
 19497                           ;I2C.c: 106:     send_I2C_controlByte(slaveAddress, 0);
 19498  347D  0876               	movf	I2C_writeRegister@slaveAddress+1,w
 19499  347E  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 19500  347F  0875               	movf	I2C_writeRegister@slaveAddress,w
 19501  3480  00F1               	movwf	send_I2C_controlByte@BlockAddress
 19502  3481  3000               	movlw	0
 19503  3482  00F3               	movwf	send_I2C_controlByte@RW_bit
 19504  3483  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 19505  3484  31B3  231E  31B4   	fcall	_send_I2C_controlByte
 19506                           
 19507                           ;I2C.c: 107:     send_I2C_data(regAddress);
 19508  3487  0878               	movf	I2C_writeRegister@regAddress+1,w
 19509  3488  00F2               	movwf	send_I2C_data@databyte+1
 19510  3489  0877               	movf	I2C_writeRegister@regAddress,w
 19511  348A  00F1               	movwf	send_I2C_data@databyte
 19512  348B  31B3  230C  31B4   	fcall	_send_I2C_data
 19513                           
 19514                           ;I2C.c: 108:     send_I2C_data(data);
 19515  348E  087A               	movf	I2C_writeRegister@data+1,w
 19516  348F  00F2               	movwf	send_I2C_data@databyte+1
 19517  3490  0879               	movf	I2C_writeRegister@data,w
 19518  3491  00F1               	movwf	send_I2C_data@databyte
 19519  3492  31B3  230C  31B4   	fcall	_send_I2C_data
 19520                           
 19521                           ;I2C.c: 109:     send_I2C_stopBit();
 19522  3495  31B2  22FB         	fcall	_send_I2C_stopBit
 19523  3497  0008               	return
 19524  3498                     __end_of_I2C_writeRegister:	
 19525                           
 19526                           	psect	text66
 19527  32FB                     __ptext66:	
 19528 ;; *************** function _send_I2C_stopBit *****************
 19529 ;; Defined at:
 19530 ;;		line 78 in file "I2C.c"
 19531 ;; Parameters:    Size  Location     Type
 19532 ;;		None
 19533 ;; Auto vars:     Size  Location     Type
 19534 ;;		None
 19535 ;; Return value:  Size  Location     Type
 19536 ;;                  1    wreg      void 
 19537 ;; Registers used:
 19538 ;;		None
 19539 ;; Tracked objects:
 19540 ;;		On entry : 0/0
 19541 ;;		On exit  : 0/0
 19542 ;;		Unchanged: 0/0
 19543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19548 ;;Total ram usage:        0 bytes
 19549 ;; Hardware stack levels used:    1
 19550 ;; Hardware stack levels required when called:    1
 19551 ;; This function calls:
 19552 ;;		Nothing
 19553 ;; This function is called by:
 19554 ;;		_I2C_writeRegister
 19555 ;;		_readRegister
 19556 ;; This function uses a non-reentrant model
 19557 ;;
 19558                           
 19559                           
 19560                           ;psect for function _send_I2C_stopBit
 19561  32FB                     _send_I2C_stopBit:	
 19562                           
 19563                           ;I2C.c: 79:     PIR1bits.SSP1IF = 0;
 19564                           
 19565                           ;incstack = 0
 19566                           ; Regs used in _send_I2C_stopBit: []
 19567  32FB  0020               	movlb	0	; select bank0
 19568  32FC  1191               	bcf	17,3	;volatile
 19569                           
 19570                           ;I2C.c: 80:     SSPCON2bits.PEN = 1;
 19571  32FD  0024               	movlb	4	; select bank4
 19572  32FE  1516               	bsf	22,2	;volatile
 19573  32FF                     l314:	
 19574                           ;I2C.c: 81:     while (!PIR1bits.SSP1IF);
 19575                           
 19576  32FF  0020               	movlb	0	; select bank0
 19577  3300  1991               	btfsc	17,3	;volatile
 19578  3301  0008               	return
 19579  3302  2AFF               	goto	l314
 19580  3303                     __end_of_send_I2C_stopBit:	
 19581                           
 19582                           	psect	text67
 19583  32F3                     __ptext67:	
 19584 ;; *************** function _send_I2C_startBit *****************
 19585 ;; Defined at:
 19586 ;;		line 65 in file "I2C.c"
 19587 ;; Parameters:    Size  Location     Type
 19588 ;;		None
 19589 ;; Auto vars:     Size  Location     Type
 19590 ;;		None
 19591 ;; Return value:  Size  Location     Type
 19592 ;;                  1    wreg      void 
 19593 ;; Registers used:
 19594 ;;		None
 19595 ;; Tracked objects:
 19596 ;;		On entry : 0/0
 19597 ;;		On exit  : 0/0
 19598 ;;		Unchanged: 0/0
 19599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19604 ;;Total ram usage:        0 bytes
 19605 ;; Hardware stack levels used:    1
 19606 ;; Hardware stack levels required when called:    1
 19607 ;; This function calls:
 19608 ;;		Nothing
 19609 ;; This function is called by:
 19610 ;;		_I2C_writeRegister
 19611 ;;		_readRegister
 19612 ;; This function uses a non-reentrant model
 19613 ;;
 19614                           
 19615                           
 19616                           ;psect for function _send_I2C_startBit
 19617  32F3                     _send_I2C_startBit:	
 19618                           
 19619                           ;I2C.c: 66:     PIR1bits.SSP1IF = 0;
 19620                           
 19621                           ;incstack = 0
 19622                           ; Regs used in _send_I2C_startBit: []
 19623  32F3  0020               	movlb	0	; select bank0
 19624  32F4  1191               	bcf	17,3	;volatile
 19625                           
 19626                           ;I2C.c: 67:     SSPCON2bits.SEN = 1;
 19627  32F5  0024               	movlb	4	; select bank4
 19628  32F6  1416               	bsf	22,0	;volatile
 19629  32F7                     l302:	
 19630                           ;I2C.c: 68:     while (!PIR1bits.SSP1IF);
 19631                           
 19632  32F7  0020               	movlb	0	; select bank0
 19633  32F8  1991               	btfsc	17,3	;volatile
 19634  32F9  0008               	return
 19635  32FA  2AF7               	goto	l302
 19636  32FB                     __end_of_send_I2C_startBit:	
 19637                           
 19638                           	psect	text68
 19639  330C                     __ptext68:	
 19640 ;; *************** function _send_I2C_data *****************
 19641 ;; Defined at:
 19642 ;;		line 33 in file "I2C.c"
 19643 ;; Parameters:    Size  Location     Type
 19644 ;;  databyte        2    1[COMMON] unsigned int 
 19645 ;; Auto vars:     Size  Location     Type
 19646 ;;		None
 19647 ;; Return value:  Size  Location     Type
 19648 ;;                  1    wreg      void 
 19649 ;; Registers used:
 19650 ;;		wreg
 19651 ;; Tracked objects:
 19652 ;;		On entry : 0/0
 19653 ;;		On exit  : 0/0
 19654 ;;		Unchanged: 0/0
 19655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19656 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19659 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19660 ;;Total ram usage:        2 bytes
 19661 ;; Hardware stack levels used:    1
 19662 ;; Hardware stack levels required when called:    1
 19663 ;; This function calls:
 19664 ;;		Nothing
 19665 ;; This function is called by:
 19666 ;;		_I2C_writeRegister
 19667 ;;		_readRegister
 19668 ;; This function uses a non-reentrant model
 19669 ;;
 19670                           
 19671                           
 19672                           ;psect for function _send_I2C_data
 19673  330C                     _send_I2C_data:	
 19674                           
 19675                           ;I2C.c: 34:     PIR1bits.SSP1IF = 0;
 19676                           
 19677                           ;incstack = 0
 19678                           ; Regs used in _send_I2C_data: [wreg]
 19679  330C  0020               	movlb	0	; select bank0
 19680  330D  1191               	bcf	17,3	;volatile
 19681                           
 19682                           ;I2C.c: 35:     SSPBUF = databyte;
 19683  330E  0871               	movf	send_I2C_data@databyte,w
 19684  330F  0024               	movlb	4	; select bank4
 19685  3310  0091               	movwf	17	;volatile
 19686  3311                     l284:	
 19687                           ;I2C.c: 37:     while (!PIR1bits.SSP1IF);
 19688                           
 19689  3311  0020               	movlb	0	; select bank0
 19690  3312  1991               	btfsc	17,3	;volatile
 19691  3313  0008               	return
 19692  3314  2B11               	goto	l284
 19693  3315                     __end_of_send_I2C_data:	
 19694                           
 19695                           	psect	text69
 19696  331E                     __ptext69:	
 19697 ;; *************** function _send_I2C_controlByte *****************
 19698 ;; Defined at:
 19699 ;;		line 53 in file "I2C.c"
 19700 ;; Parameters:    Size  Location     Type
 19701 ;;  BlockAddress    2    1[COMMON] unsigned int 
 19702 ;;  RW_bit          2    3[COMMON] unsigned int 
 19703 ;; Auto vars:     Size  Location     Type
 19704 ;;		None
 19705 ;; Return value:  Size  Location     Type
 19706 ;;                  1    wreg      void 
 19707 ;; Registers used:
 19708 ;;		wreg, status,2, status,0
 19709 ;; Tracked objects:
 19710 ;;		On entry : 0/0
 19711 ;;		On exit  : 0/0
 19712 ;;		Unchanged: 0/0
 19713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19714 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19717 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19718 ;;Total ram usage:        4 bytes
 19719 ;; Hardware stack levels used:    1
 19720 ;; Hardware stack levels required when called:    1
 19721 ;; This function calls:
 19722 ;;		Nothing
 19723 ;; This function is called by:
 19724 ;;		_I2C_writeRegister
 19725 ;;		_readRegister
 19726 ;; This function uses a non-reentrant model
 19727 ;;
 19728                           
 19729                           
 19730                           ;psect for function _send_I2C_controlByte
 19731  331E                     _send_I2C_controlByte:	
 19732                           
 19733                           ;I2C.c: 54:     PIR1bits.SSP1IF = 0;
 19734                           
 19735                           ;incstack = 0
 19736                           ; Regs used in _send_I2C_controlByte: [wreg+status,2+status,0]
 19737  331E  0020               	movlb	0	; select bank0
 19738  331F  1191               	bcf	17,3	;volatile
 19739                           
 19740                           ;I2C.c: 60:     SSPBUF = (((0b0000 << 4) | (BlockAddress << 1)) + RW_bit);
 19741  3320  3571               	lslf	send_I2C_controlByte@BlockAddress,w
 19742  3321  0773               	addwf	send_I2C_controlByte@RW_bit,w
 19743  3322  0024               	movlb	4	; select bank4
 19744  3323  0091               	movwf	17	;volatile
 19745  3324                     l296:	
 19746                           ;I2C.c: 62:     while (!PIR1bits.SSP1IF);
 19747                           
 19748  3324  0020               	movlb	0	; select bank0
 19749  3325  1991               	btfsc	17,3	;volatile
 19750  3326  0008               	return
 19751  3327  2B24               	goto	l296
 19752  3328                     __end_of_send_I2C_controlByte:	
 19753                           
 19754                           	psect	text70
 19755  2003                     __ptext70:	
 19756 ;; *************** function _calibrate_BATTSOC *****************
 19757 ;; Defined at:
 19758 ;;		line 23 in file "algorithms.c"
 19759 ;; Parameters:    Size  Location     Type
 19760 ;;		None
 19761 ;; Auto vars:     Size  Location     Type
 19762 ;;  j               2    8[COMMON] int 
 19763 ;;  i               2    6[COMMON] int 
 19764 ;; Return value:  Size  Location     Type
 19765 ;;                  1    wreg      void 
 19766 ;; Registers used:
 19767 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 19768 ;; Tracked objects:
 19769 ;;		On entry : 0/0
 19770 ;;		On exit  : 0/0
 19771 ;;		Unchanged: 0/0
 19772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19774 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19775 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19776 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19777 ;;Total ram usage:        9 bytes
 19778 ;; Hardware stack levels used:    1
 19779 ;; Hardware stack levels required when called:    1
 19780 ;; This function calls:
 19781 ;;		Nothing
 19782 ;; This function is called by:
 19783 ;;		_AFE_UPDATE
 19784 ;; This function uses a non-reentrant model
 19785 ;;
 19786                           
 19787                           
 19788                           ;psect for function _calibrate_BATTSOC
 19789  2003                     _calibrate_BATTSOC:	
 19790                           
 19791                           ;algorithms.c: 26:     for(int i = 0; i<5;i++){
 19792                           
 19793                           ;incstack = 0
 19794                           ; Regs used in _calibrate_BATTSOC: [wreg-fsr1h+status,2+status,0+pclath]
 19795  2003  01F6               	clrf	calibrate_BATTSOC@i
 19796  2004  01F7               	clrf	calibrate_BATTSOC@i+1
 19797  2005                     l8353:	
 19798                           
 19799                           ;algorithms.c: 27:         for(int j = 0; j < 46; j++ ){
 19800  2005  01F8               	clrf	calibrate_BATTSOC@j
 19801  2006  01F9               	clrf	calibrate_BATTSOC@j+1
 19802  2007                     l8359:	
 19803                           
 19804                           ;algorithms.c: 28:             if(cellVoltages[i]>=lookupTableSamsung_voltage[j]){
 19805  2007  0879               	movf	calibrate_BATTSOC@j+1,w
 19806  2008  0085               	movwf	5
 19807  2009  0878               	movf	calibrate_BATTSOC@j,w
 19808  200A  0084               	movwf	4
 19809  200B  3584               	lslf	4,f
 19810  200C  0D85               	rlf	5,f
 19811  200D  305C               	movlw	low (_lookupTableSamsung_voltage| (0+32768))
 19812  200E  0784               	addwf	4,f
 19813  200F  30B0               	movlw	high (_lookupTableSamsung_voltage| (0+32768))
 19814  2010  3D85               	addwfc	5,f
 19815  2011  3F00               	moviw [0]fsr0
 19816  2012  00F1               	movwf	??_calibrate_BATTSOC
 19817  2013  3F01               	moviw [1]fsr0
 19818  2014  00F2               	movwf	??_calibrate_BATTSOC+1
 19819  2015  3576               	lslf	calibrate_BATTSOC@i,w
 19820  2016  3EAA               	addlw	(low (_cellVoltages| (0+256)))& (0+255)
 19821  2017  0086               	movwf	6
 19822  2018  3001               	movlw	1	; select bank3/4
 19823  2019  0087               	movwf	7
 19824  201A  3F40               	moviw [0]fsr1
 19825  201B  00F3               	movwf	??_calibrate_BATTSOC+2
 19826  201C  3F41               	moviw [1]fsr1
 19827  201D  00F4               	movwf	??_calibrate_BATTSOC+3
 19828  201E  0874               	movf	??_calibrate_BATTSOC+3,w
 19829  201F  3A80               	xorlw	128
 19830  2020  00F5               	movwf	??_calibrate_BATTSOC+4
 19831  2021  0872               	movf	??_calibrate_BATTSOC+1,w
 19832  2022  3A80               	xorlw	128
 19833  2023  0275               	subwf	??_calibrate_BATTSOC+4,w
 19834  2024  1D03               	skipz
 19835  2025  2828               	goto	u11365
 19836  2026  0871               	movf	??_calibrate_BATTSOC,w
 19837  2027  0273               	subwf	??_calibrate_BATTSOC+2,w
 19838  2028                     u11365:	
 19839  2028  1C03               	skipc
 19840  2029  2844               	goto	l8363
 19841                           
 19842                           ;algorithms.c: 29:                 cellSOC[i] = lookupTableSamsung_SOC[j];
 19843  202A  0879               	movf	calibrate_BATTSOC@j+1,w
 19844  202B  00F2               	movwf	??_calibrate_BATTSOC+1
 19845  202C  0878               	movf	calibrate_BATTSOC@j,w
 19846  202D  00F1               	movwf	??_calibrate_BATTSOC
 19847  202E  35F1               	lslf	??_calibrate_BATTSOC,f
 19848  202F  0DF2               	rlf	??_calibrate_BATTSOC+1,f
 19849  2030  3000               	movlw	low (_lookupTableSamsung_SOC| (0+32768))
 19850  2031  00F3               	movwf	??_calibrate_BATTSOC+2
 19851  2032  30B0               	movlw	high (_lookupTableSamsung_SOC| (0+32768))
 19852  2033  00F4               	movwf	??_calibrate_BATTSOC+3
 19853  2034  0871               	movf	??_calibrate_BATTSOC,w
 19854  2035  0773               	addwf	??_calibrate_BATTSOC+2,w
 19855  2036  0086               	movwf	6
 19856  2037  0872               	movf	??_calibrate_BATTSOC+1,w
 19857  2038  3D74               	addwfc	??_calibrate_BATTSOC+3,w
 19858  2039  0087               	movwf	7
 19859  203A  3576               	lslf	calibrate_BATTSOC@i,w
 19860  203B  3EA0               	addlw	(low (_cellSOC| (0+256)))& (0+255)
 19861  203C  0084               	movwf	4
 19862  203D  3001               	movlw	1	; select bank3/4
 19863  203E  0085               	movwf	5
 19864  203F  3F40               	moviw [0]fsr1
 19865  2040  3F80               	movwi [0]fsr0
 19866  2041  3F41               	moviw [1]fsr1
 19867  2042  3F81               	movwi [1]fsr0
 19868                           
 19869                           ;algorithms.c: 30:                 break;
 19870  2043  2853               	goto	l8365
 19871  2044                     l8363:	
 19872                           
 19873                           ;algorithms.c: 32:         }
 19874  2044  3001               	movlw	1
 19875  2045  07F8               	addwf	calibrate_BATTSOC@j,f
 19876  2046  3000               	movlw	0
 19877  2047  3DF9               	addwfc	calibrate_BATTSOC@j+1,f
 19878  2048  0879               	movf	calibrate_BATTSOC@j+1,w
 19879  2049  3A80               	xorlw	128
 19880  204A  00F1               	movwf	??_calibrate_BATTSOC
 19881  204B  3080               	movlw	128
 19882  204C  0271               	subwf	??_calibrate_BATTSOC,w
 19883  204D  1D03               	skipz
 19884  204E  2851               	goto	u11375
 19885  204F  302E               	movlw	46
 19886  2050  0278               	subwf	calibrate_BATTSOC@j,w
 19887  2051                     u11375:	
 19888  2051  1C03               	skipc
 19889  2052  2807               	goto	l8359
 19890  2053                     l8365:	
 19891                           
 19892                           ;algorithms.c: 33:     }
 19893  2053  3001               	movlw	1
 19894  2054  07F6               	addwf	calibrate_BATTSOC@i,f
 19895  2055  3000               	movlw	0
 19896  2056  3DF7               	addwfc	calibrate_BATTSOC@i+1,f
 19897  2057  0877               	movf	calibrate_BATTSOC@i+1,w
 19898  2058  3A80               	xorlw	128
 19899  2059  00F1               	movwf	??_calibrate_BATTSOC
 19900  205A  3080               	movlw	128
 19901  205B  0271               	subwf	??_calibrate_BATTSOC,w
 19902  205C  1D03               	skipz
 19903  205D  2860               	goto	u11385
 19904  205E  3005               	movlw	5
 19905  205F  0276               	subwf	calibrate_BATTSOC@i,w
 19906  2060                     u11385:	
 19907  2060  1803               	btfsc	3,0
 19908  2061  0008               	return
 19909  2062  2805               	goto	l8353
 19910  2063                     __end_of_calibrate_BATTSOC:	
 19911                           
 19912                           	psect	text71
 19913  333C                     __ptext71:	
 19914 ;; *************** function _init_TMR1 *****************
 19915 ;; Defined at:
 19916 ;;		line 189 in file "main.c"
 19917 ;; Parameters:    Size  Location     Type
 19918 ;;		None
 19919 ;; Auto vars:     Size  Location     Type
 19920 ;;		None
 19921 ;; Return value:  Size  Location     Type
 19922 ;;                  1    wreg      void 
 19923 ;; Registers used:
 19924 ;;		wreg, status,2, status,0
 19925 ;; Tracked objects:
 19926 ;;		On entry : 0/0
 19927 ;;		On exit  : 0/0
 19928 ;;		Unchanged: 0/0
 19929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19934 ;;Total ram usage:        0 bytes
 19935 ;; Hardware stack levels used:    1
 19936 ;; Hardware stack levels required when called:    1
 19937 ;; This function calls:
 19938 ;;		Nothing
 19939 ;; This function is called by:
 19940 ;;		_main
 19941 ;; This function uses a non-reentrant model
 19942 ;;
 19943                           
 19944                           
 19945                           ;psect for function _init_TMR1
 19946  333C                     _init_TMR1:	
 19947                           
 19948                           ;main.c: 192:     T1CONbits.T1CKPS = 0b00;
 19949                           
 19950                           ;incstack = 0
 19951                           ; Regs used in _init_TMR1: [wreg+status,2+status,0]
 19952  333C  30CF               	movlw	-49
 19953  333D  0020               	movlb	0	; select bank0
 19954  333E  0598               	andwf	24,f	;volatile
 19955                           
 19956                           ;main.c: 194:     TMR1 = 0;
 19957  333F  0196               	clrf	22	;volatile
 19958  3340  0197               	clrf	23	;volatile
 19959                           
 19960                           ;main.c: 196:     T1CONbits.TMR1ON = 1;
 19961  3341  1418               	bsf	24,0	;volatile
 19962                           
 19963                           ;main.c: 198:     PIE1bits.TMR1IE = 1;
 19964  3342  0021               	movlb	1	; select bank1
 19965  3343  1411               	bsf	17,0	;volatile
 19966                           
 19967                           ;main.c: 200:     INTCONbits.PEIE = 1;
 19968  3344  170B               	bsf	11,6	;volatile
 19969                           
 19970                           ;main.c: 202:     (INTCONbits.GIE = 1);
 19971  3345  178B               	bsf	11,7	;volatile
 19972  3346  0008               	return
 19973  3347                     __end_of_init_TMR1:	
 19974                           
 19975                           	psect	text72
 19976  07FB                     __ptext72:	
 19977 ;; *************** function _init_RGB *****************
 19978 ;; Defined at:
 19979 ;;		line 6 in file "RGB.c"
 19980 ;; Parameters:    Size  Location     Type
 19981 ;;		None
 19982 ;; Auto vars:     Size  Location     Type
 19983 ;;		None
 19984 ;; Return value:  Size  Location     Type
 19985 ;;                  1    wreg      void 
 19986 ;; Registers used:
 19987 ;;		None
 19988 ;; Tracked objects:
 19989 ;;		On entry : 0/0
 19990 ;;		On exit  : 0/0
 19991 ;;		Unchanged: 0/0
 19992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19997 ;;Total ram usage:        0 bytes
 19998 ;; Hardware stack levels used:    1
 19999 ;; Hardware stack levels required when called:    1
 20000 ;; This function calls:
 20001 ;;		Nothing
 20002 ;; This function is called by:
 20003 ;;		_main
 20004 ;; This function uses a non-reentrant model
 20005 ;;
 20006                           
 20007                           
 20008                           ;psect for function _init_RGB
 20009  07FB                     _init_RGB:	
 20010                           
 20011                           ;RGB.c: 8:     LATAbits.LATA4 = 1;
 20012                           
 20013                           ;incstack = 0
 20014                           ; Regs used in _init_RGB: []
 20015  07FB  0022               	movlb	2	; select bank2
 20016  07FC  160C               	bsf	12,4	;volatile
 20017                           
 20018                           ;RGB.c: 9:     LATAbits.LATA5 = 1;
 20019  07FD  168C               	bsf	12,5	;volatile
 20020                           
 20021                           ;RGB.c: 10:     LATEbits.LATE0 = 1;
 20022  07FE  1410               	bsf	16,0	;volatile
 20023  07FF  0008               	return
 20024  0800                     __end_of_init_RGB:	
 20025                           
 20026                           	psect	text73
 20027  3353                     __ptext73:	
 20028 ;; *************** function _init_I2C *****************
 20029 ;; Defined at:
 20030 ;;		line 10 in file "I2C.c"
 20031 ;; Parameters:    Size  Location     Type
 20032 ;;		None
 20033 ;; Auto vars:     Size  Location     Type
 20034 ;;		None
 20035 ;; Return value:  Size  Location     Type
 20036 ;;                  1    wreg      void 
 20037 ;; Registers used:
 20038 ;;		wreg, status,2, status,0
 20039 ;; Tracked objects:
 20040 ;;		On entry : 0/0
 20041 ;;		On exit  : 0/0
 20042 ;;		Unchanged: 0/0
 20043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20046 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20047 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20048 ;;Total ram usage:        1 bytes
 20049 ;; Hardware stack levels used:    1
 20050 ;; Hardware stack levels required when called:    1
 20051 ;; This function calls:
 20052 ;;		Nothing
 20053 ;; This function is called by:
 20054 ;;		_main
 20055 ;; This function uses a non-reentrant model
 20056 ;;
 20057                           
 20058                           
 20059                           ;psect for function _init_I2C
 20060  3353                     _init_I2C:	
 20061                           
 20062                           ;I2C.c: 14:     SSPCONbits.SSPM = 0x08;
 20063                           
 20064                           ;incstack = 0
 20065                           ; Regs used in _init_I2C: [wreg+status,2+status,0]
 20066  3353  0024               	movlb	4	; select bank4
 20067  3354  0815               	movf	21,w	;volatile
 20068  3355  39F0               	andlw	-16
 20069  3356  3808               	iorlw	8
 20070  3357  0095               	movwf	21	;volatile
 20071                           
 20072                           ;I2C.c: 15:     SSPCONbits.SSPEN = 1;
 20073  3358  1695               	bsf	21,5	;volatile
 20074                           
 20075                           ;I2C.c: 24:     SSPADD = 39;
 20076  3359  3027               	movlw	39
 20077  335A  0092               	movwf	18	;volatile
 20078                           
 20079                           ;I2C.c: 27:     _delay((unsigned long)((10)*(16000000/4000.0)));
 20080  335B  3034               	movlw	52
 20081  335C  00F1               	movwf	??_init_I2C
 20082  335D  30F2               	movlw	242
 20083  335E                     u11647:	
 20084  335E  0B89               	decfsz	9,f
 20085  335F  2B5E               	goto	u11647
 20086  3360  0BF1               	decfsz	??_init_I2C,f
 20087  3361  2B5E               	goto	u11647
 20088  3362  0008               	return
 20089  3363                     __end_of_init_I2C:	
 20090                           
 20091                           	psect	text74
 20092  0808                     __ptext74:	
 20093 ;; *************** function _init_GPIO *****************
 20094 ;; Defined at:
 20095 ;;		line 206 in file "main.c"
 20096 ;; Parameters:    Size  Location     Type
 20097 ;;		None
 20098 ;; Auto vars:     Size  Location     Type
 20099 ;;		None
 20100 ;; Return value:  Size  Location     Type
 20101 ;;                  1    wreg      void 
 20102 ;; Registers used:
 20103 ;;		wreg, status,2, status,0
 20104 ;; Tracked objects:
 20105 ;;		On entry : 0/0
 20106 ;;		On exit  : 0/0
 20107 ;;		Unchanged: 0/0
 20108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20113 ;;Total ram usage:        0 bytes
 20114 ;; Hardware stack levels used:    1
 20115 ;; Hardware stack levels required when called:    1
 20116 ;; This function calls:
 20117 ;;		Nothing
 20118 ;; This function is called by:
 20119 ;;		_main
 20120 ;; This function uses a non-reentrant model
 20121 ;;
 20122                           
 20123                           
 20124                           ;psect for function _init_GPIO
 20125  0808                     _init_GPIO:	
 20126                           
 20127                           ;main.c: 212:     TRISBbits.TRISB2 = 0;
 20128                           
 20129                           ;incstack = 0
 20130                           ; Regs used in _init_GPIO: [wreg+status,2+status,0]
 20131  0808  0021               	movlb	1	; select bank1
 20132  0809  110D               	bcf	13,2	;volatile
 20133                           
 20134                           ;main.c: 213:     ANSELBbits.ANSB2 = 0;
 20135  080A  0023               	movlb	3	; select bank3
 20136  080B  110D               	bcf	13,2	;volatile
 20137                           
 20138                           ;main.c: 214:     TRISBbits.TRISB3 = 1;
 20139  080C  0021               	movlb	1	; select bank1
 20140  080D  158D               	bsf	13,3	;volatile
 20141                           
 20142                           ;main.c: 215:     ANSELBbits.ANSB3 = 0;
 20143  080E  0023               	movlb	3	; select bank3
 20144  080F  118D               	bcf	13,3	;volatile
 20145                           
 20146                           ;main.c: 220:     ANSELCbits.ANSC4 = 0;
 20147  0810  120E               	bcf	14,4	;volatile
 20148                           
 20149                           ;main.c: 221:     ANSELCbits.ANSC5 = 0;
 20150  0811  128E               	bcf	14,5	;volatile
 20151                           
 20152                           ;main.c: 222:     TRISCbits.TRISC4 = 1;
 20153  0812  0021               	movlb	1	; select bank1
 20154  0813  160E               	bsf	14,4	;volatile
 20155                           
 20156                           ;main.c: 223:     TRISCbits.TRISC5 = 1;
 20157  0814  168E               	bsf	14,5	;volatile
 20158                           
 20159                           ;main.c: 232:     TRISAbits.TRISA4 = 0;
 20160  0815  120C               	bcf	12,4	;volatile
 20161                           
 20162                           ;main.c: 233:     TRISAbits.TRISA5 = 0;
 20163  0816  128C               	bcf	12,5	;volatile
 20164                           
 20165                           ;main.c: 234:     TRISEbits.TRISE0 = 0;
 20166  0817  1010               	bcf	16,0	;volatile
 20167                           
 20168                           ;main.c: 239:     TRISAbits.TRISA3 = 0;
 20169  0818  118C               	bcf	12,3	;volatile
 20170                           
 20171                           ;main.c: 240:     LATAbits.LATA3 = 0;
 20172  0819  0022               	movlb	2	; select bank2
 20173  081A  118C               	bcf	12,3	;volatile
 20174                           
 20175                           ;main.c: 246:     PPSLOCK = 0x55;
 20176  081B  3055               	movlw	85
 20177  081C  003C               	movlb	28	; select bank28
 20178  081D  008F               	movwf	15	;volsfr
 20179                           
 20180                           ;main.c: 247:     PPSLOCK = 0xAA;
 20181  081E  30AA               	movlw	170
 20182  081F  008F               	movwf	15	;volsfr
 20183                           
 20184                           ;main.c: 248:     PPSLOCKbits.PPSLOCKED = 0x00;
 20185  0820  100F               	bcf	15,0	;volsfr
 20186                           
 20187                           ;main.c: 252:     RC4PPSbits.RC4PPS = 0x0011;
 20188  0821  003D               	movlb	29	; select bank29
 20189  0822  0824               	movf	36,w	;volatile
 20190  0823  39E0               	andlw	-32
 20191  0824  3811               	iorlw	17
 20192  0825  00A4               	movwf	36	;volatile
 20193                           
 20194                           ;main.c: 253:     SSPDATPPSbits.SSPDATPPS = 0x0014;
 20195  0826  003C               	movlb	28	; select bank28
 20196  0827  0821               	movf	33,w	;volatile
 20197  0828  39E0               	andlw	-32
 20198  0829  3814               	iorlw	20
 20199  082A  00A1               	movwf	33	;volatile
 20200                           
 20201                           ;main.c: 254:     SSPCLKPPSbits.SSPCLKPPS = 0x0015;
 20202  082B  0820               	movf	32,w	;volatile
 20203  082C  39E0               	andlw	-32
 20204  082D  3815               	iorlw	21
 20205  082E  00A0               	movwf	32	;volatile
 20206                           
 20207                           ;main.c: 255:     RC5PPSbits.RC5PPS = 0x0010;
 20208  082F  003D               	movlb	29	; select bank29
 20209  0830  0825               	movf	37,w	;volatile
 20210  0831  39E0               	andlw	-32
 20211  0832  3810               	iorlw	16
 20212  0833  00A5               	movwf	37	;volatile
 20213                           
 20214                           ;main.c: 258:     RB2PPSbits.RB2PPS = 0x14;
 20215  0834  081A               	movf	26,w	;volatile
 20216  0835  39E0               	andlw	-32
 20217  0836  3814               	iorlw	20
 20218  0837  009A               	movwf	26	;volatile
 20219                           
 20220                           ;main.c: 259:     RXPPSbits.RXPPS = 0x0B;
 20221  0838  003C               	movlb	28	; select bank28
 20222  0839  0824               	movf	36,w	;volatile
 20223  083A  39E0               	andlw	-32
 20224  083B  380B               	iorlw	11
 20225  083C  00A4               	movwf	36	;volatile
 20226                           
 20227                           ;main.c: 261:     PPSLOCK = 0x55;
 20228  083D  3055               	movlw	85
 20229  083E  008F               	movwf	15	;volsfr
 20230                           
 20231                           ;main.c: 262:     PPSLOCK = 0xAA;
 20232  083F  30AA               	movlw	170
 20233  0840  008F               	movwf	15	;volsfr
 20234                           
 20235                           ;main.c: 263:     PPSLOCKbits.PPSLOCKED = 0x01;
 20236  0841  140F               	bsf	15,0	;volsfr
 20237  0842  0008               	return
 20238  0843                     __end_of_init_GPIO:	
 20239                           
 20240                           	psect	text75
 20241  32ED                     __ptext75:	
 20242 ;; *************** function _initWDT *****************
 20243 ;; Defined at:
 20244 ;;		line 267 in file "main.c"
 20245 ;; Parameters:    Size  Location     Type
 20246 ;;		None
 20247 ;; Auto vars:     Size  Location     Type
 20248 ;;		None
 20249 ;; Return value:  Size  Location     Type
 20250 ;;                  1    wreg      void 
 20251 ;; Registers used:
 20252 ;;		wreg, status,2, status,0
 20253 ;; Tracked objects:
 20254 ;;		On entry : 0/0
 20255 ;;		On exit  : 0/0
 20256 ;;		Unchanged: 0/0
 20257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20262 ;;Total ram usage:        0 bytes
 20263 ;; Hardware stack levels used:    1
 20264 ;; Hardware stack levels required when called:    1
 20265 ;; This function calls:
 20266 ;;		Nothing
 20267 ;; This function is called by:
 20268 ;;		_main
 20269 ;; This function uses a non-reentrant model
 20270 ;;
 20271                           
 20272                           
 20273                           ;psect for function _initWDT
 20274  32ED                     _initWDT:	
 20275                           
 20276                           ;main.c: 269:     WDTCONbits.WDTPS = 0b01101;
 20277                           
 20278                           ;incstack = 0
 20279                           ; Regs used in _initWDT: [wreg+status,2+status,0]
 20280  32ED  0021               	movlb	1	; select bank1
 20281  32EE  0817               	movf	23,w	;volatile
 20282  32EF  39C1               	andlw	-63
 20283  32F0  381A               	iorlw	26
 20284  32F1  0097               	movwf	23	;volatile
 20285  32F2  0008               	return
 20286  32F3                     __end_of_initWDT:	
 20287                           
 20288                           	psect	text76
 20289  2000                     __ptext76:	
 20290 ;; *************** function _initClock *****************
 20291 ;; Defined at:
 20292 ;;		line 180 in file "main.c"
 20293 ;; Parameters:    Size  Location     Type
 20294 ;;		None
 20295 ;; Auto vars:     Size  Location     Type
 20296 ;;		None
 20297 ;; Return value:  Size  Location     Type
 20298 ;;                  1    wreg      void 
 20299 ;; Registers used:
 20300 ;;		status,2, status,0, pclath, cstack
 20301 ;; Tracked objects:
 20302 ;;		On entry : 0/0
 20303 ;;		On exit  : 0/0
 20304 ;;		Unchanged: 0/0
 20305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20310 ;;Total ram usage:        0 bytes
 20311 ;; Hardware stack levels used:    1
 20312 ;; Hardware stack levels required when called:    2
 20313 ;; This function calls:
 20314 ;;		_internal_16
 20315 ;; This function is called by:
 20316 ;;		_main
 20317 ;; This function uses a non-reentrant model
 20318 ;;
 20319                           
 20320                           
 20321                           ;psect for function _initClock
 20322  2000                     _initClock:	
 20323                           
 20324                           ;main.c: 182:     internal_16();
 20325                           
 20326                           ;incstack = 0
 20327                           ; Regs used in _initClock: [status,2+status,0+pclath+cstack]
 20328  2000  31B3  2303         	fcall	_internal_16
 20329  2002  0008               	return
 20330  2003                     __end_of_initClock:	
 20331                           
 20332                           	psect	text77
 20333  3303                     __ptext77:	
 20334 ;; *************** function _internal_16 *****************
 20335 ;; Defined at:
 20336 ;;		line 26 in file "pic16f1719_internals.c"
 20337 ;; Parameters:    Size  Location     Type
 20338 ;;		None
 20339 ;; Auto vars:     Size  Location     Type
 20340 ;;		None
 20341 ;; Return value:  Size  Location     Type
 20342 ;;                  1    wreg      void 
 20343 ;; Registers used:
 20344 ;;		None
 20345 ;; Tracked objects:
 20346 ;;		On entry : 0/0
 20347 ;;		On exit  : 0/0
 20348 ;;		Unchanged: 0/0
 20349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20354 ;;Total ram usage:        0 bytes
 20355 ;; Hardware stack levels used:    1
 20356 ;; Hardware stack levels required when called:    1
 20357 ;; This function calls:
 20358 ;;		Nothing
 20359 ;; This function is called by:
 20360 ;;		_initClock
 20361 ;; This function uses a non-reentrant model
 20362 ;;
 20363                           
 20364                           
 20365                           ;psect for function _internal_16
 20366  3303                     _internal_16:	
 20367                           
 20368                           ;pic16f1719_internals.c: 28: SCS0 = 0;
 20369                           
 20370                           ;incstack = 0
 20371                           ; Regs used in _internal_16: []
 20372  3303  0021               	movlb	1	; select bank1
 20373  3304  1019               	bcf	25,0	;volatile
 20374                           
 20375                           ;pic16f1719_internals.c: 29: SCS1 = 0;
 20376  3305  1099               	bcf	25,1	;volatile
 20377                           
 20378                           ;pic16f1719_internals.c: 31: IRCF0 = 1;
 20379  3306  1599               	bsf	25,3	;volatile
 20380                           
 20381                           ;pic16f1719_internals.c: 32: IRCF1 = 1;
 20382  3307  1619               	bsf	25,4	;volatile
 20383                           
 20384                           ;pic16f1719_internals.c: 33: IRCF2 = 1;
 20385  3308  1699               	bsf	25,5	;volatile
 20386                           
 20387                           ;pic16f1719_internals.c: 34: IRCF3 = 1;
 20388  3309  1719               	bsf	25,6	;volatile
 20389                           
 20390                           ;pic16f1719_internals.c: 36: SPLLEN = 0;
 20391  330A  1399               	bcf	25,7	;volatile
 20392  330B  0008               	return
 20393  330C                     __end_of_internal_16:	
 20394                           
 20395                           	psect	text78
 20396  2C45                     __ptext78:	
 20397 ;; *************** function _EUSART_Initialize *****************
 20398 ;; Defined at:
 20399 ;;		line 6 in file "EUSART.c"
 20400 ;; Parameters:    Size  Location     Type
 20401 ;;  baudrate        4   18[BANK0 ] const long 
 20402 ;; Auto vars:     Size  Location     Type
 20403 ;;  x               2   10[COMMON] unsigned int 
 20404 ;; Return value:  Size  Location     Type
 20405 ;;                  1    wreg      unsigned char 
 20406 ;; Registers used:
 20407 ;;		wreg, status,2, status,0, pclath, cstack
 20408 ;; Tracked objects:
 20409 ;;		On entry : 0/0
 20410 ;;		On exit  : 0/0
 20411 ;;		Unchanged: 0/0
 20412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20413 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20414 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20415 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20416 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20417 ;;Total ram usage:       18 bytes
 20418 ;; Hardware stack levels used:    1
 20419 ;; Hardware stack levels required when called:    2
 20420 ;; This function calls:
 20421 ;;		___aldiv
 20422 ;; This function is called by:
 20423 ;;		_main
 20424 ;; This function uses a non-reentrant model
 20425 ;;
 20426                           
 20427                           
 20428                           ;psect for function _EUSART_Initialize
 20429  2C45                     _EUSART_Initialize:	
 20430                           
 20431                           ;EUSART.c: 6: char EUSART_Initialize(const long int baudrate);EUSART.c: 7: {;EUSART.c: 8
      +                          :  unsigned int x;;EUSART.c: 9:  x = (16000000 - baudrate*64)/(baudrate*64);
 20432                           
 20433                           ;incstack = 0
 20434                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 20435  2C45  0020               	movlb	0	; select bank0
 20436  2C46  0832               	movf	EUSART_Initialize@baudrate,w
 20437  2C47  00B6               	movwf	??_EUSART_Initialize
 20438  2C48  0833               	movf	EUSART_Initialize@baudrate+1,w
 20439  2C49  00B7               	movwf	??_EUSART_Initialize+1
 20440  2C4A  0834               	movf	EUSART_Initialize@baudrate+2,w
 20441  2C4B  00B8               	movwf	??_EUSART_Initialize+2
 20442  2C4C  0835               	movf	EUSART_Initialize@baudrate+3,w
 20443  2C4D  00B9               	movwf	??_EUSART_Initialize+3
 20444  2C4E  3006               	movlw	6
 20445  2C4F                     u11525:	
 20446  2C4F  35B6               	lslf	??_EUSART_Initialize,f
 20447  2C50  0DB7               	rlf	??_EUSART_Initialize+1,f
 20448  2C51  0DB8               	rlf	??_EUSART_Initialize+2,f
 20449  2C52  0DB9               	rlf	??_EUSART_Initialize+3,f
 20450  2C53  0B89               	decfsz	9,f
 20451  2C54  2C4F               	goto	u11525
 20452  2C55  0839               	movf	??_EUSART_Initialize+3,w
 20453  2C56  00A7               	movwf	___aldiv@divisor+3
 20454  2C57  0838               	movf	??_EUSART_Initialize+2,w
 20455  2C58  00A6               	movwf	___aldiv@divisor+2
 20456  2C59  0837               	movf	??_EUSART_Initialize+1,w
 20457  2C5A  00A5               	movwf	___aldiv@divisor+1
 20458  2C5B  0836               	movf	??_EUSART_Initialize,w
 20459  2C5C  00A4               	movwf	___aldiv@divisor
 20460  2C5D  0832               	movf	EUSART_Initialize@baudrate,w
 20461  2C5E  00BA               	movwf	??_EUSART_Initialize+4
 20462  2C5F  0833               	movf	EUSART_Initialize@baudrate+1,w
 20463  2C60  00BB               	movwf	??_EUSART_Initialize+5
 20464  2C61  0834               	movf	EUSART_Initialize@baudrate+2,w
 20465  2C62  00BC               	movwf	??_EUSART_Initialize+6
 20466  2C63  0835               	movf	EUSART_Initialize@baudrate+3,w
 20467  2C64  00BD               	movwf	??_EUSART_Initialize+7
 20468  2C65  3006               	movlw	6
 20469  2C66                     u11535:	
 20470  2C66  35BA               	lslf	??_EUSART_Initialize+4,f
 20471  2C67  0DBB               	rlf	??_EUSART_Initialize+5,f
 20472  2C68  0DBC               	rlf	??_EUSART_Initialize+6,f
 20473  2C69  0DBD               	rlf	??_EUSART_Initialize+7,f
 20474  2C6A  0B89               	decfsz	9,f
 20475  2C6B  2C66               	goto	u11535
 20476  2C6C  3000               	movlw	0
 20477  2C6D  00BE               	movwf	??_EUSART_Initialize+8
 20478  2C6E  3024               	movlw	36
 20479  2C6F  00BF               	movwf	??_EUSART_Initialize+9
 20480  2C70  30F4               	movlw	244
 20481  2C71  00C0               	movwf	??_EUSART_Initialize+10
 20482  2C72  3000               	movlw	0
 20483  2C73  00C1               	movwf	??_EUSART_Initialize+11
 20484  2C74  083A               	movf	??_EUSART_Initialize+4,w
 20485  2C75  02BE               	subwf	??_EUSART_Initialize+8,f
 20486  2C76  083B               	movf	??_EUSART_Initialize+5,w
 20487  2C77  3BBF               	subwfb	??_EUSART_Initialize+9,f
 20488  2C78  083C               	movf	??_EUSART_Initialize+6,w
 20489  2C79  3BC0               	subwfb	??_EUSART_Initialize+10,f
 20490  2C7A  083D               	movf	??_EUSART_Initialize+7,w
 20491  2C7B  3BC1               	subwfb	??_EUSART_Initialize+11,f
 20492  2C7C  0841               	movf	??_EUSART_Initialize+11,w
 20493  2C7D  00AB               	movwf	___aldiv@dividend+3
 20494  2C7E  0840               	movf	??_EUSART_Initialize+10,w
 20495  2C7F  00AA               	movwf	___aldiv@dividend+2
 20496  2C80  083F               	movf	??_EUSART_Initialize+9,w
 20497  2C81  00A9               	movwf	___aldiv@dividend+1
 20498  2C82  083E               	movf	??_EUSART_Initialize+8,w
 20499  2C83  00A8               	movwf	___aldiv@dividend
 20500  2C84  31AB  2322  31AC   	fcall	___aldiv
 20501  2C87  0020               	movlb	0	; select bank0
 20502  2C88  0825               	movf	?___aldiv+1,w
 20503  2C89  00FB               	movwf	EUSART_Initialize@x+1
 20504  2C8A  0824               	movf	?___aldiv,w
 20505  2C8B  00FA               	movwf	EUSART_Initialize@x
 20506                           
 20507                           ;EUSART.c: 10:  if(x>255)
 20508  2C8C  3001               	movlw	1
 20509  2C8D  027B               	subwf	EUSART_Initialize@x+1,w
 20510  2C8E  3000               	movlw	0
 20511  2C8F  1903               	skipnz
 20512  2C90  027A               	subwf	EUSART_Initialize@x,w
 20513  2C91  1C03               	skipc
 20514  2C92  2CDB               	goto	l8527
 20515                           
 20516                           ;EUSART.c: 11:  {;EUSART.c: 12:   x = (16000000 - baudrate*16)/(baudrate*16);
 20517  2C93  0832               	movf	EUSART_Initialize@baudrate,w
 20518  2C94  00B6               	movwf	??_EUSART_Initialize
 20519  2C95  0833               	movf	EUSART_Initialize@baudrate+1,w
 20520  2C96  00B7               	movwf	??_EUSART_Initialize+1
 20521  2C97  0834               	movf	EUSART_Initialize@baudrate+2,w
 20522  2C98  00B8               	movwf	??_EUSART_Initialize+2
 20523  2C99  0835               	movf	EUSART_Initialize@baudrate+3,w
 20524  2C9A  00B9               	movwf	??_EUSART_Initialize+3
 20525  2C9B  3004               	movlw	4
 20526  2C9C                     u11555:	
 20527  2C9C  35B6               	lslf	??_EUSART_Initialize,f
 20528  2C9D  0DB7               	rlf	??_EUSART_Initialize+1,f
 20529  2C9E  0DB8               	rlf	??_EUSART_Initialize+2,f
 20530  2C9F  0DB9               	rlf	??_EUSART_Initialize+3,f
 20531  2CA0  0B89               	decfsz	9,f
 20532  2CA1  2C9C               	goto	u11555
 20533  2CA2  0839               	movf	??_EUSART_Initialize+3,w
 20534  2CA3  00A7               	movwf	___aldiv@divisor+3
 20535  2CA4  0838               	movf	??_EUSART_Initialize+2,w
 20536  2CA5  00A6               	movwf	___aldiv@divisor+2
 20537  2CA6  0837               	movf	??_EUSART_Initialize+1,w
 20538  2CA7  00A5               	movwf	___aldiv@divisor+1
 20539  2CA8  0836               	movf	??_EUSART_Initialize,w
 20540  2CA9  00A4               	movwf	___aldiv@divisor
 20541  2CAA  0832               	movf	EUSART_Initialize@baudrate,w
 20542  2CAB  00BA               	movwf	??_EUSART_Initialize+4
 20543  2CAC  0833               	movf	EUSART_Initialize@baudrate+1,w
 20544  2CAD  00BB               	movwf	??_EUSART_Initialize+5
 20545  2CAE  0834               	movf	EUSART_Initialize@baudrate+2,w
 20546  2CAF  00BC               	movwf	??_EUSART_Initialize+6
 20547  2CB0  0835               	movf	EUSART_Initialize@baudrate+3,w
 20548  2CB1  00BD               	movwf	??_EUSART_Initialize+7
 20549  2CB2  3004               	movlw	4
 20550  2CB3                     u11565:	
 20551  2CB3  35BA               	lslf	??_EUSART_Initialize+4,f
 20552  2CB4  0DBB               	rlf	??_EUSART_Initialize+5,f
 20553  2CB5  0DBC               	rlf	??_EUSART_Initialize+6,f
 20554  2CB6  0DBD               	rlf	??_EUSART_Initialize+7,f
 20555  2CB7  0B89               	decfsz	9,f
 20556  2CB8  2CB3               	goto	u11565
 20557  2CB9  3000               	movlw	0
 20558  2CBA  00BE               	movwf	??_EUSART_Initialize+8
 20559  2CBB  3024               	movlw	36
 20560  2CBC  00BF               	movwf	??_EUSART_Initialize+9
 20561  2CBD  30F4               	movlw	244
 20562  2CBE  00C0               	movwf	??_EUSART_Initialize+10
 20563  2CBF  3000               	movlw	0
 20564  2CC0  00C1               	movwf	??_EUSART_Initialize+11
 20565  2CC1  083A               	movf	??_EUSART_Initialize+4,w
 20566  2CC2  02BE               	subwf	??_EUSART_Initialize+8,f
 20567  2CC3  083B               	movf	??_EUSART_Initialize+5,w
 20568  2CC4  3BBF               	subwfb	??_EUSART_Initialize+9,f
 20569  2CC5  083C               	movf	??_EUSART_Initialize+6,w
 20570  2CC6  3BC0               	subwfb	??_EUSART_Initialize+10,f
 20571  2CC7  083D               	movf	??_EUSART_Initialize+7,w
 20572  2CC8  3BC1               	subwfb	??_EUSART_Initialize+11,f
 20573  2CC9  0841               	movf	??_EUSART_Initialize+11,w
 20574  2CCA  00AB               	movwf	___aldiv@dividend+3
 20575  2CCB  0840               	movf	??_EUSART_Initialize+10,w
 20576  2CCC  00AA               	movwf	___aldiv@dividend+2
 20577  2CCD  083F               	movf	??_EUSART_Initialize+9,w
 20578  2CCE  00A9               	movwf	___aldiv@dividend+1
 20579  2CCF  083E               	movf	??_EUSART_Initialize+8,w
 20580  2CD0  00A8               	movwf	___aldiv@dividend
 20581  2CD1  31AB  2322  31AC   	fcall	___aldiv
 20582  2CD4  0020               	movlb	0	; select bank0
 20583  2CD5  0825               	movf	?___aldiv+1,w
 20584  2CD6  00FB               	movwf	EUSART_Initialize@x+1
 20585  2CD7  0824               	movf	?___aldiv,w
 20586  2CD8  00FA               	movwf	EUSART_Initialize@x
 20587                           
 20588                           ;EUSART.c: 13:   BRGH = 1;
 20589  2CD9  0023               	movlb	3	; select bank3
 20590  2CDA  151E               	bsf	30,2	;volatile
 20591  2CDB                     l8527:	
 20592                           
 20593                           ;EUSART.c: 15:  if(x<256)
 20594  2CDB  3001               	movlw	1
 20595  2CDC  027B               	subwf	EUSART_Initialize@x+1,w
 20596  2CDD  3000               	movlw	0
 20597  2CDE  1903               	skipnz
 20598  2CDF  027A               	subwf	EUSART_Initialize@x,w
 20599  2CE0  1803               	skipnc
 20600  2CE1  0008               	return
 20601                           
 20602                           ;EUSART.c: 16:  {;EUSART.c: 17:    SPBRG = x;
 20603  2CE2  087A               	movf	EUSART_Initialize@x,w
 20604  2CE3  0023               	movlb	3	; select bank3
 20605  2CE4  009B               	movwf	27	;volatile
 20606                           
 20607                           ;EUSART.c: 18:    SYNC = 0;
 20608  2CE5  121E               	bcf	30,4	;volatile
 20609                           
 20610                           ;EUSART.c: 19:    SPEN = 1;
 20611  2CE6  179D               	bsf	29,7	;volatile
 20612                           
 20613                           ;EUSART.c: 20:           TRISC7 = 1;
 20614  2CE7  0021               	movlb	1	; select bank1
 20615  2CE8  178E               	bsf	14,7	;volatile
 20616                           
 20617                           ;EUSART.c: 21:           TRISC6 = 1;
 20618  2CE9  170E               	bsf	14,6	;volatile
 20619                           
 20620                           ;EUSART.c: 22:           CREN = 1;
 20621  2CEA  0023               	movlb	3	; select bank3
 20622  2CEB  161D               	bsf	29,4	;volatile
 20623                           
 20624                           ;EUSART.c: 23:           TXEN = 1;
 20625  2CEC  169E               	bsf	30,5	;volatile
 20626  2CED  0008               	return
 20627  2CEE                     __end_of_EUSART_Initialize:	
 20628                           
 20629                           	psect	text79
 20630  2B22                     __ptext79:	
 20631 ;; *************** function ___aldiv *****************
 20632 ;; Defined at:
 20633 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
 20634 ;; Parameters:    Size  Location     Type
 20635 ;;  divisor         4    4[BANK0 ] long 
 20636 ;;  dividend        4    8[BANK0 ] long 
 20637 ;; Auto vars:     Size  Location     Type
 20638 ;;  quotient        4   14[BANK0 ] long 
 20639 ;;  sign            1   13[BANK0 ] unsigned char 
 20640 ;;  counter         1   12[BANK0 ] unsigned char 
 20641 ;; Return value:  Size  Location     Type
 20642 ;;                  4    4[BANK0 ] long 
 20643 ;; Registers used:
 20644 ;;		wreg, status,2, status,0
 20645 ;; Tracked objects:
 20646 ;;		On entry : 0/0
 20647 ;;		On exit  : 0/0
 20648 ;;		Unchanged: 0/0
 20649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20650 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20651 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20652 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20653 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20654 ;;Total ram usage:       15 bytes
 20655 ;; Hardware stack levels used:    1
 20656 ;; Hardware stack levels required when called:    1
 20657 ;; This function calls:
 20658 ;;		Nothing
 20659 ;; This function is called by:
 20660 ;;		_EUSART_Initialize
 20661 ;;		_setCellUndervoltageProtection
 20662 ;;		_setCellOvervoltageProtection
 20663 ;;		_updateVoltages
 20664 ;; This function uses a non-reentrant model
 20665 ;;
 20666                           
 20667                           
 20668                           ;psect for function ___aldiv
 20669  2B22                     ___aldiv:	
 20670                           
 20671                           ;incstack = 0
 20672                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 20673  2B22  0020               	movlb	0	; select bank0
 20674  2B23  01AD               	clrf	___aldiv@sign
 20675  2B24  1FA7               	btfss	___aldiv@divisor+3,7
 20676  2B25  2B33               	goto	l991
 20677  2B26  09A4               	comf	___aldiv@divisor,f
 20678  2B27  09A5               	comf	___aldiv@divisor+1,f
 20679  2B28  09A6               	comf	___aldiv@divisor+2,f
 20680  2B29  09A7               	comf	___aldiv@divisor+3,f
 20681  2B2A  0AA4               	incf	___aldiv@divisor,f
 20682  2B2B  1903               	skipnz
 20683  2B2C  0AA5               	incf	___aldiv@divisor+1,f
 20684  2B2D  1903               	skipnz
 20685  2B2E  0AA6               	incf	___aldiv@divisor+2,f
 20686  2B2F  1903               	skipnz
 20687  2B30  0AA7               	incf	___aldiv@divisor+3,f
 20688  2B31  01AD               	clrf	___aldiv@sign
 20689  2B32  0AAD               	incf	___aldiv@sign,f
 20690  2B33                     l991:	
 20691  2B33  1FAB               	btfss	___aldiv@dividend+3,7
 20692  2B34  2B44               	goto	l8033
 20693  2B35  09A8               	comf	___aldiv@dividend,f
 20694  2B36  09A9               	comf	___aldiv@dividend+1,f
 20695  2B37  09AA               	comf	___aldiv@dividend+2,f
 20696  2B38  09AB               	comf	___aldiv@dividend+3,f
 20697  2B39  0AA8               	incf	___aldiv@dividend,f
 20698  2B3A  1903               	skipnz
 20699  2B3B  0AA9               	incf	___aldiv@dividend+1,f
 20700  2B3C  1903               	skipnz
 20701  2B3D  0AAA               	incf	___aldiv@dividend+2,f
 20702  2B3E  1903               	skipnz
 20703  2B3F  0AAB               	incf	___aldiv@dividend+3,f
 20704  2B40  3001               	movlw	1
 20705  2B41  00F9               	movwf	??___aldiv
 20706  2B42  0879               	movf	??___aldiv,w
 20707  2B43  06AD               	xorwf	___aldiv@sign,f
 20708  2B44                     l8033:	
 20709  2B44  3000               	movlw	0
 20710  2B45  00B1               	movwf	___aldiv@quotient+3
 20711  2B46  3000               	movlw	0
 20712  2B47  00B0               	movwf	___aldiv@quotient+2
 20713  2B48  3000               	movlw	0
 20714  2B49  00AF               	movwf	___aldiv@quotient+1
 20715  2B4A  3000               	movlw	0
 20716  2B4B  00AE               	movwf	___aldiv@quotient
 20717  2B4C  0827               	movf	___aldiv@divisor+3,w
 20718  2B4D  0426               	iorwf	___aldiv@divisor+2,w
 20719  2B4E  0425               	iorwf	___aldiv@divisor+1,w
 20720  2B4F  0424               	iorwf	___aldiv@divisor,w
 20721  2B50  1903               	skipnz
 20722  2B51  2B8D               	goto	l8055
 20723  2B52  01AC               	clrf	___aldiv@counter
 20724  2B53  0AAC               	incf	___aldiv@counter,f
 20725  2B54                     l8041:	
 20726  2B54  1BA7               	btfsc	___aldiv@divisor+3,7
 20727  2B55  2B62               	goto	l8043
 20728  2B56  3001               	movlw	1
 20729  2B57                     u10935:	
 20730  2B57  35A4               	lslf	___aldiv@divisor,f
 20731  2B58  0DA5               	rlf	___aldiv@divisor+1,f
 20732  2B59  0DA6               	rlf	___aldiv@divisor+2,f
 20733  2B5A  0DA7               	rlf	___aldiv@divisor+3,f
 20734  2B5B  0B89               	decfsz	9,f
 20735  2B5C  2B57               	goto	u10935
 20736  2B5D  3001               	movlw	1
 20737  2B5E  00F9               	movwf	??___aldiv
 20738  2B5F  0879               	movf	??___aldiv,w
 20739  2B60  07AC               	addwf	___aldiv@counter,f
 20740  2B61  2B54               	goto	l8041
 20741  2B62                     l8043:	
 20742  2B62  3001               	movlw	1
 20743  2B63                     u10955:	
 20744  2B63  35AE               	lslf	___aldiv@quotient,f
 20745  2B64  0DAF               	rlf	___aldiv@quotient+1,f
 20746  2B65  0DB0               	rlf	___aldiv@quotient+2,f
 20747  2B66  0DB1               	rlf	___aldiv@quotient+3,f
 20748  2B67  0B89               	decfsz	9,f
 20749  2B68  2B63               	goto	u10955
 20750  2B69  0827               	movf	___aldiv@divisor+3,w
 20751  2B6A  022B               	subwf	___aldiv@dividend+3,w
 20752  2B6B  1D03               	skipz
 20753  2B6C  2B77               	goto	u10965
 20754  2B6D  0826               	movf	___aldiv@divisor+2,w
 20755  2B6E  022A               	subwf	___aldiv@dividend+2,w
 20756  2B6F  1D03               	skipz
 20757  2B70  2B77               	goto	u10965
 20758  2B71  0825               	movf	___aldiv@divisor+1,w
 20759  2B72  0229               	subwf	___aldiv@dividend+1,w
 20760  2B73  1D03               	skipz
 20761  2B74  2B77               	goto	u10965
 20762  2B75  0824               	movf	___aldiv@divisor,w
 20763  2B76  0228               	subwf	___aldiv@dividend,w
 20764  2B77                     u10965:	
 20765  2B77  1C03               	skipc
 20766  2B78  2B82               	goto	l8051
 20767  2B79  0824               	movf	___aldiv@divisor,w
 20768  2B7A  02A8               	subwf	___aldiv@dividend,f
 20769  2B7B  0825               	movf	___aldiv@divisor+1,w
 20770  2B7C  3BA9               	subwfb	___aldiv@dividend+1,f
 20771  2B7D  0826               	movf	___aldiv@divisor+2,w
 20772  2B7E  3BAA               	subwfb	___aldiv@dividend+2,f
 20773  2B7F  0827               	movf	___aldiv@divisor+3,w
 20774  2B80  3BAB               	subwfb	___aldiv@dividend+3,f
 20775  2B81  142E               	bsf	___aldiv@quotient,0
 20776  2B82                     l8051:	
 20777  2B82  3001               	movlw	1
 20778  2B83                     u10975:	
 20779  2B83  36A7               	lsrf	___aldiv@divisor+3,f
 20780  2B84  0CA6               	rrf	___aldiv@divisor+2,f
 20781  2B85  0CA5               	rrf	___aldiv@divisor+1,f
 20782  2B86  0CA4               	rrf	___aldiv@divisor,f
 20783  2B87  0B89               	decfsz	9,f
 20784  2B88  2B83               	goto	u10975
 20785  2B89  3001               	movlw	1
 20786  2B8A  02AC               	subwf	___aldiv@counter,f
 20787  2B8B  1D03               	btfss	3,2
 20788  2B8C  2B62               	goto	l8043
 20789  2B8D                     l8055:	
 20790  2B8D  082D               	movf	___aldiv@sign,w
 20791  2B8E  1903               	btfsc	3,2
 20792  2B8F  2B9B               	goto	l8059
 20793  2B90  09AE               	comf	___aldiv@quotient,f
 20794  2B91  09AF               	comf	___aldiv@quotient+1,f
 20795  2B92  09B0               	comf	___aldiv@quotient+2,f
 20796  2B93  09B1               	comf	___aldiv@quotient+3,f
 20797  2B94  0AAE               	incf	___aldiv@quotient,f
 20798  2B95  1903               	skipnz
 20799  2B96  0AAF               	incf	___aldiv@quotient+1,f
 20800  2B97  1903               	skipnz
 20801  2B98  0AB0               	incf	___aldiv@quotient+2,f
 20802  2B99  1903               	skipnz
 20803  2B9A  0AB1               	incf	___aldiv@quotient+3,f
 20804  2B9B                     l8059:	
 20805  2B9B  0831               	movf	___aldiv@quotient+3,w
 20806  2B9C  00A7               	movwf	?___aldiv+3
 20807  2B9D  0830               	movf	___aldiv@quotient+2,w
 20808  2B9E  00A6               	movwf	?___aldiv+2
 20809  2B9F  082F               	movf	___aldiv@quotient+1,w
 20810  2BA0  00A5               	movwf	?___aldiv+1
 20811  2BA1  082E               	movf	___aldiv@quotient,w
 20812  2BA2  00A4               	movwf	?___aldiv
 20813  2BA3  0008               	return
 20814  2BA4                     __end_of___aldiv:	
 20815                           
 20816                           	psect	intentry
 20817  0004                     __pintentry:	
 20818 ;; *************** function _myIsr *****************
 20819 ;; Defined at:
 20820 ;;		line 54 in file "main.c"
 20821 ;; Parameters:    Size  Location     Type
 20822 ;;		None
 20823 ;; Auto vars:     Size  Location     Type
 20824 ;;		None
 20825 ;; Return value:  Size  Location     Type
 20826 ;;                  1    wreg      void 
 20827 ;; Registers used:
 20828 ;;		wreg, status,2, status,0
 20829 ;; Tracked objects:
 20830 ;;		On entry : 0/0
 20831 ;;		On exit  : 0/0
 20832 ;;		Unchanged: 0/0
 20833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20836 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20837 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20838 ;;Total ram usage:        1 bytes
 20839 ;; Hardware stack levels used:    1
 20840 ;; This function calls:
 20841 ;;		Nothing
 20842 ;; This function is called by:
 20843 ;;		Interrupt level 1
 20844 ;; This function uses a non-reentrant model
 20845 ;;
 20846                           
 20847  0004                     _myIsr:	
 20848                           
 20849                           ;incstack = 0
 20850  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 20851                           
 20852                           ; Regs used in _myIsr: [wreg+status,2+status,0]
 20853  0005  3180               	pagesel	$
 20854                           
 20855                           ;main.c: 56:     static uint8_t count = 0;;main.c: 58:     if (PIR1bits.TMR1IF && PIE1bi
      +                          ts.TMR1IE) {
 20856  0006  0020               	movlb	0	; select bank0
 20857  0007  1C11               	btfss	17,0	;volatile
 20858  0008  281C               	goto	i1l151
 20859  0009  0021               	movlb	1	; select bank1
 20860  000A  1C11               	btfss	17,0	;volatile
 20861  000B  281C               	goto	i1l151
 20862                           
 20863                           ;main.c: 59:         PIR1bits.TMR1IF = 0;
 20864  000C  0020               	movlb	0	; select bank0
 20865  000D  1011               	bcf	17,0	;volatile
 20866                           
 20867                           ;main.c: 60:         count++;
 20868  000E  3001               	movlw	1
 20869  000F  00F0               	movwf	??_myIsr
 20870  0010  0870               	movf	??_myIsr,w
 20871  0011  0023               	movlb	3	; select bank3
 20872  0012  07D8               	addwf	myIsr@count^(0+384),f
 20873                           
 20874                           ;main.c: 63:         if (count == 61) {
 20875  0013  303D               	movlw	61
 20876  0014  0658               	xorwf	myIsr@count^(0+384),w
 20877  0015  1D03               	btfss	3,2
 20878  0016  281C               	goto	i1l151
 20879                           
 20880                           ;main.c: 64:             tmr1_flag = 1;
 20881  0017  3001               	movlw	1
 20882  0018  00F0               	movwf	??_myIsr
 20883  0019  0870               	movf	??_myIsr,w
 20884  001A  00D9               	movwf	_tmr1_flag^(0+384)	;volatile
 20885                           
 20886                           ;main.c: 65:             count = 0;
 20887  001B  01D8               	clrf	myIsr@count^(0+384)
 20888  001C                     i1l151:	
 20889  001C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 20890  001D  0009               	retfie
 20891  001E                     __end_of_myIsr:	
 20892  007E                     btemp	set	126	;btemp
 20893  007E                     int$flags	set	126
 20894  007E                     wtemp0	set	126
 20895  2771                     
 20896                           	psect	text7_split_1
 20897  24E0                     l7041:	
 20898                           
 20899                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
 20900  24E0  0859               	movf	vfpfcnvrt@fmt,w
 20901  24E1  0086               	movwf	6
 20902  24E2  0187               	clrf	7
 20903  24E3  3F40               	moviw [0]fsr1
 20904  24E4  00F1               	movwf	strncmp@_l
 20905  24E5  3F41               	moviw [1]fsr1
 20906  24E6  00F2               	movwf	strncmp@_l+1
 20907  24E7  303D               	movlw	low (STR_25| (0+32768))
 20908  24E8  00F3               	movwf	strncmp@_r
 20909  24E9  30BA               	movlw	high (STR_25| (0+32768))
 20910  24EA  00F4               	movwf	strncmp@_r+1
 20911  24EB  3003               	movlw	3
 20912  24EC  00F5               	movwf	strncmp@n
 20913  24ED  3000               	movlw	0
 20914  24EE  00F6               	movwf	strncmp@n+1
 20915  24EF  31B7  275A  31A4   	fcall	_strncmp
 20916  24F2  0871               	movf	?_strncmp,w
 20917  24F3  0472               	iorwf	?_strncmp+1,w
 20918  24F4  1903               	btfsc	3,2
 20919  24F5  2D0D               	goto	l7045
 20920  24F6  0020               	movlb	0	; select bank0
 20921  24F7  0859               	movf	vfpfcnvrt@fmt,w
 20922  24F8  0086               	movwf	6
 20923  24F9  0187               	clrf	7
 20924  24FA  3F40               	moviw [0]fsr1
 20925  24FB  00F1               	movwf	strncmp@_l
 20926  24FC  3F41               	moviw [1]fsr1
 20927  24FD  00F2               	movwf	strncmp@_l+1
 20928  24FE  3041               	movlw	low (STR_29| (0+32768))
 20929  24FF  00F3               	movwf	strncmp@_r
 20930  2500  30BA               	movlw	high (STR_29| (0+32768))
 20931  2501  00F4               	movwf	strncmp@_r+1
 20932  2502  3003               	movlw	3
 20933  2503  00F5               	movwf	strncmp@n
 20934  2504  3000               	movlw	0
 20935  2505  00F6               	movwf	strncmp@n+1
 20936  2506  31B7  275A  31A4   	fcall	_strncmp
 20937  2509  0871               	movf	?_strncmp,w
 20938  250A  0472               	iorwf	?_strncmp+1,w
 20939  250B  1D03               	btfss	3,2
 20940  250C  2D58               	goto	l7053
 20941  250D                     l7045:	
 20942                           
 20943                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
 20944  250D  0020               	movlb	0	; select bank0
 20945  250E  0859               	movf	vfpfcnvrt@fmt,w
 20946  250F  0086               	movwf	6
 20947  2510  0187               	clrf	7
 20948  2511  3003               	movlw	3
 20949  2512  0781               	addwf	1,f
 20950  2513  3141               	addfsr 1,1
 20951  2514  1803               	skipnc
 20952  2515  0A81               	incf	1,f
 20953                           
 20954                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
 20955  2516  085A               	movf	vfpfcnvrt@ap,w
 20956  2517  0086               	movwf	6
 20957  2518  0187               	clrf	7
 20958  2519  0801               	movf	1,w
 20959  251A  0084               	movwf	4
 20960  251B  0185               	clrf	5
 20961  251C  3002               	movlw	2
 20962  251D  0781               	addwf	1,f
 20963  251E  0800               	movf	0,w
 20964  251F  0021               	movlb	1	; select bank1
 20965  2520  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 20966  2521  3980               	andlw	128
 20967  2522  1D03               	skipz
 20968  2523  30FF               	movlw	255
 20969  2524  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 20970  2525  00AA               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 20971  2526  00AB               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 20972  2527  00AC               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 20973  2528  00AD               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 20974  2529  00AE               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 20975  252A  00AF               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 20976                           
 20977                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
 20978  252B  0020               	movlb	0	; select bank0
 20979  252C  0858               	movf	vfpfcnvrt@fp+1,w
 20980  252D  00B1               	movwf	dtoa@fp+1
 20981  252E  0857               	movf	vfpfcnvrt@fp,w
 20982  252F  00B0               	movwf	dtoa@fp
 20983  2530  0021               	movlb	1	; select bank1
 20984  2531  0828               	movf	vfpfcnvrt@ll^(0+128),w
 20985  2532  0020               	movlb	0	; select bank0
 20986  2533  00B2               	movwf	dtoa@d
 20987  2534  0021               	movlb	1	; select bank1
 20988  2535  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 20989  2536  0020               	movlb	0	; select bank0
 20990  2537  00B3               	movwf	dtoa@d+1
 20991  2538  0021               	movlb	1	; select bank1
 20992  2539  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 20993  253A  0020               	movlb	0	; select bank0
 20994  253B  00B4               	movwf	dtoa@d+2
 20995  253C  0021               	movlb	1	; select bank1
 20996  253D  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 20997  253E  0020               	movlb	0	; select bank0
 20998  253F  00B5               	movwf	dtoa@d+3
 20999  2540  0021               	movlb	1	; select bank1
 21000  2541  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 21001  2542  0020               	movlb	0	; select bank0
 21002  2543  00B6               	movwf	dtoa@d+4
 21003  2544  0021               	movlb	1	; select bank1
 21004  2545  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 21005  2546  0020               	movlb	0	; select bank0
 21006  2547  00B7               	movwf	dtoa@d+5
 21007  2548  0021               	movlb	1	; select bank1
 21008  2549  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 21009  254A  0020               	movlb	0	; select bank0
 21010  254B  00B8               	movwf	dtoa@d+6
 21011  254C  0021               	movlb	1	; select bank1
 21012  254D  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 21013  254E  0020               	movlb	0	; select bank0
 21014  254F  00B9               	movwf	dtoa@d+7
 21015  2550  3198  209F         	fcall	_dtoa
 21016  2552  0020               	movlb	0	; select bank0
 21017  2553  0831               	movf	?_dtoa+1,w
 21018  2554  00D8               	movwf	?_vfpfcnvrt+1
 21019  2555  0830               	movf	?_dtoa,w
 21020  2556  00D7               	movwf	?_vfpfcnvrt
 21021  2557  0008               	return
 21022  2558                     l7053:	
 21023                           
 21024                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
 21025  2558  0020               	movlb	0	; select bank0
 21026  2559  0859               	movf	vfpfcnvrt@fmt,w
 21027  255A  0086               	movwf	6
 21028  255B  0187               	clrf	7
 21029  255C  3F40               	moviw [0]fsr1
 21030  255D  00F1               	movwf	strncmp@_l
 21031  255E  3F41               	moviw [1]fsr1
 21032  255F  00F2               	movwf	strncmp@_l+1
 21033  2560  303E               	movlw	low ((STR_25+1)| (0+32768))
 21034  2561  00F3               	movwf	strncmp@_r
 21035  2562  30BA               	movlw	high ((STR_25+1)| (0+32768))
 21036  2563  00F4               	movwf	strncmp@_r+1
 21037  2564  3002               	movlw	2
 21038  2565  00F5               	movwf	strncmp@n
 21039  2566  3000               	movlw	0
 21040  2567  00F6               	movwf	strncmp@n+1
 21041  2568  31B7  275A  31A4   	fcall	_strncmp
 21042  256B  0871               	movf	?_strncmp,w
 21043  256C  0472               	iorwf	?_strncmp+1,w
 21044  256D  1903               	btfsc	3,2
 21045  256E  2D86               	goto	l7057
 21046  256F  0020               	movlb	0	; select bank0
 21047  2570  0859               	movf	vfpfcnvrt@fmt,w
 21048  2571  0086               	movwf	6
 21049  2572  0187               	clrf	7
 21050  2573  3F40               	moviw [0]fsr1
 21051  2574  00F1               	movwf	strncmp@_l
 21052  2575  3F41               	moviw [1]fsr1
 21053  2576  00F2               	movwf	strncmp@_l+1
 21054  2577  3042               	movlw	low ((STR_29+1)| (0+32768))
 21055  2578  00F3               	movwf	strncmp@_r
 21056  2579  30BA               	movlw	high ((STR_29+1)| (0+32768))
 21057  257A  00F4               	movwf	strncmp@_r+1
 21058  257B  3002               	movlw	2
 21059  257C  00F5               	movwf	strncmp@n
 21060  257D  3000               	movlw	0
 21061  257E  00F6               	movwf	strncmp@n+1
 21062  257F  31B7  275A  31A4   	fcall	_strncmp
 21063  2582  0871               	movf	?_strncmp,w
 21064  2583  0472               	iorwf	?_strncmp+1,w
 21065  2584  1D03               	btfss	3,2
 21066  2585  2DD8               	goto	L9
 21067  2586                     l7057:	
 21068                           
 21069                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
 21070  2586  0020               	movlb	0	; select bank0
 21071  2587  0859               	movf	vfpfcnvrt@fmt,w
 21072  2588  0086               	movwf	6
 21073  2589  0187               	clrf	7
 21074  258A  3002               	movlw	2
 21075  258B  0781               	addwf	1,f
 21076  258C  3141               	addfsr 1,1
 21077  258D  1803               	skipnc
 21078  258E  0A81               	incf	1,f
 21079                           
 21080                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
 21081  258F  085A               	movf	vfpfcnvrt@ap,w
 21082  2590  0086               	movwf	6
 21083  2591  0187               	clrf	7
 21084  2592  0801               	movf	1,w
 21085  2593  0084               	movwf	4
 21086  2594  0185               	clrf	5
 21087  2595  3002               	movlw	2
 21088  2596  0781               	addwf	1,f
 21089  2597  3F00               	moviw [0]fsr0
 21090  2598  00DB               	movwf	??_vfpfcnvrt
 21091  2599  3F01               	moviw [1]fsr0
 21092  259A  00DC               	movwf	??_vfpfcnvrt+1
 21093  259B  085B               	movf	??_vfpfcnvrt,w
 21094  259C  0021               	movlb	1	; select bank1
 21095  259D  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 21096  259E  0020               	movlb	0	; select bank0
 21097  259F  085C               	movf	??_vfpfcnvrt+1,w
 21098  25A0  0021               	movlb	1	; select bank1
 21099  25A1  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 21100  25A2  0D89               	rlf	9,f
 21101  25A3  3B89               	subwfb	9,f
 21102  25A4  0989               	comf	9,f
 21103  25A5  00AA               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 21104  25A6  00AB               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 21105  25A7  00AC               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 21106  25A8  00AD               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 21107  25A9  00AE               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 21108  25AA  00AF               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 21109                           
 21110                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 820:       
      +                                return dtoa(fp, ll);
 21111  25AB  0020               	movlb	0	; select bank0
 21112  25AC  0858               	movf	vfpfcnvrt@fp+1,w
 21113  25AD  00B1               	movwf	dtoa@fp+1
 21114  25AE  0857               	movf	vfpfcnvrt@fp,w
 21115  25AF  00B0               	movwf	dtoa@fp
 21116  25B0  0021               	movlb	1	; select bank1
 21117  25B1  0828               	movf	vfpfcnvrt@ll^(0+128),w
 21118  25B2  0020               	movlb	0	; select bank0
 21119  25B3  00B2               	movwf	dtoa@d
 21120  25B4  0021               	movlb	1	; select bank1
 21121  25B5  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 21122  25B6  0020               	movlb	0	; select bank0
 21123  25B7  00B3               	movwf	dtoa@d+1
 21124  25B8  0021               	movlb	1	; select bank1
 21125  25B9  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 21126  25BA  0020               	movlb	0	; select bank0
 21127  25BB  00B4               	movwf	dtoa@d+2
 21128  25BC  0021               	movlb	1	; select bank1
 21129  25BD  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 21130  25BE  0020               	movlb	0	; select bank0
 21131  25BF  00B5               	movwf	dtoa@d+3
 21132  25C0  0021               	movlb	1	; select bank1
 21133  25C1  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 21134  25C2  0020               	movlb	0	; select bank0
 21135  25C3  00B6               	movwf	dtoa@d+4
 21136  25C4  0021               	movlb	1	; select bank1
 21137  25C5  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 21138  25C6  0020               	movlb	0	; select bank0
 21139  25C7  00B7               	movwf	dtoa@d+5
 21140  25C8  0021               	movlb	1	; select bank1
 21141  25C9  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 21142  25CA  0020               	movlb	0	; select bank0
 21143  25CB  00B8               	movwf	dtoa@d+6
 21144  25CC  0021               	movlb	1	; select bank1
 21145  25CD  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 21146  25CE  0020               	movlb	0	; select bank0
 21147  25CF  00B9               	movwf	dtoa@d+7
 21148  25D0  3198  209F         	fcall	_dtoa
 21149  25D2  0020               	movlb	0	; select bank0
 21150  25D3  0831               	movf	?_dtoa+1,w
 21151  25D4  00D8               	movwf	?_vfpfcnvrt+1
 21152  25D5  0830               	movf	?_dtoa,w
 21153  25D6  00D7               	movwf	?_vfpfcnvrt
 21154  25D7  0008               	return
 21155  25D8                     L9:	
 21156  25D8                     L8:	
 21157  25D8  3188  2843         	ljmp	l7065
 21158                           
 21159                           	psect	text7_split_2
 21160  0843                     l7065:	
 21161                           
 21162                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 21163  0843  0020               	movlb	0	; select bank0
 21164  0844  0859               	movf	vfpfcnvrt@fmt,w
 21165  0845  0086               	movwf	6
 21166  0846  0187               	clrf	7
 21167  0847  3F40               	moviw [0]fsr1
 21168  0848  00DB               	movwf	??_vfpfcnvrt
 21169  0849  3F41               	moviw [1]fsr1
 21170  084A  00DC               	movwf	??_vfpfcnvrt+1
 21171  084B  085B               	movf	??_vfpfcnvrt,w
 21172  084C  0084               	movwf	4
 21173  084D  085C               	movf	??_vfpfcnvrt+1,w
 21174  084E  0085               	movwf	5
 21175  084F  0012               	moviw fsr0++
 21176  0850  3A64               	xorlw	100
 21177  0851  1903               	btfsc	3,2
 21178  0852  2862               	goto	l7069
 21179  0853  0859               	movf	vfpfcnvrt@fmt,w
 21180  0854  0086               	movwf	6
 21181  0855  0187               	clrf	7
 21182  0856  3F40               	moviw [0]fsr1
 21183  0857  00DB               	movwf	??_vfpfcnvrt
 21184  0858  3F41               	moviw [1]fsr1
 21185  0859  00DC               	movwf	??_vfpfcnvrt+1
 21186  085A  085B               	movf	??_vfpfcnvrt,w
 21187  085B  0084               	movwf	4
 21188  085C  085C               	movf	??_vfpfcnvrt+1,w
 21189  085D  0085               	movwf	5
 21190  085E  0012               	moviw fsr0++
 21191  085F  3A69               	xorlw	105
 21192  0860  1D03               	btfss	3,2
 21193  0861  28B3               	goto	l7077
 21194  0862                     l7069:	
 21195                           
 21196                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 21197  0862  0859               	movf	vfpfcnvrt@fmt,w
 21198  0863  0086               	movwf	6
 21199  0864  0187               	clrf	7
 21200  0865  3001               	movlw	1
 21201  0866  0781               	addwf	1,f
 21202  0867  3141               	addfsr 1,1
 21203  0868  1803               	skipnc
 21204  0869  0A81               	incf	1,f
 21205                           
 21206                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 21207  086A  085A               	movf	vfpfcnvrt@ap,w
 21208  086B  0086               	movwf	6
 21209  086C  0187               	clrf	7
 21210  086D  0801               	movf	1,w
 21211  086E  0084               	movwf	4
 21212  086F  0185               	clrf	5
 21213  0870  3002               	movlw	2
 21214  0871  0781               	addwf	1,f
 21215  0872  3F00               	moviw [0]fsr0
 21216  0873  00DB               	movwf	??_vfpfcnvrt
 21217  0874  3F01               	moviw [1]fsr0
 21218  0875  00DC               	movwf	??_vfpfcnvrt+1
 21219  0876  085B               	movf	??_vfpfcnvrt,w
 21220  0877  0021               	movlb	1	; select bank1
 21221  0878  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 21222  0879  0020               	movlb	0	; select bank0
 21223  087A  085C               	movf	??_vfpfcnvrt+1,w
 21224  087B  0021               	movlb	1	; select bank1
 21225  087C  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 21226  087D  0D89               	rlf	9,f
 21227  087E  3B89               	subwfb	9,f
 21228  087F  0989               	comf	9,f
 21229  0880  00AA               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 21230  0881  00AB               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 21231  0882  00AC               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 21232  0883  00AD               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 21233  0884  00AE               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 21234  0885  00AF               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 21235                           
 21236                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 21237  0886  0020               	movlb	0	; select bank0
 21238  0887  0858               	movf	vfpfcnvrt@fp+1,w
 21239  0888  00B1               	movwf	dtoa@fp+1
 21240  0889  0857               	movf	vfpfcnvrt@fp,w
 21241  088A  00B0               	movwf	dtoa@fp
 21242  088B  0021               	movlb	1	; select bank1
 21243  088C  0828               	movf	vfpfcnvrt@ll^(0+128),w
 21244  088D  0020               	movlb	0	; select bank0
 21245  088E  00B2               	movwf	dtoa@d
 21246  088F  0021               	movlb	1	; select bank1
 21247  0890  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 21248  0891  0020               	movlb	0	; select bank0
 21249  0892  00B3               	movwf	dtoa@d+1
 21250  0893  0021               	movlb	1	; select bank1
 21251  0894  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 21252  0895  0020               	movlb	0	; select bank0
 21253  0896  00B4               	movwf	dtoa@d+2
 21254  0897  0021               	movlb	1	; select bank1
 21255  0898  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 21256  0899  0020               	movlb	0	; select bank0
 21257  089A  00B5               	movwf	dtoa@d+3
 21258  089B  0021               	movlb	1	; select bank1
 21259  089C  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 21260  089D  0020               	movlb	0	; select bank0
 21261  089E  00B6               	movwf	dtoa@d+4
 21262  089F  0021               	movlb	1	; select bank1
 21263  08A0  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 21264  08A1  0020               	movlb	0	; select bank0
 21265  08A2  00B7               	movwf	dtoa@d+5
 21266  08A3  0021               	movlb	1	; select bank1
 21267  08A4  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 21268  08A5  0020               	movlb	0	; select bank0
 21269  08A6  00B8               	movwf	dtoa@d+6
 21270  08A7  0021               	movlb	1	; select bank1
 21271  08A8  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 21272  08A9  0020               	movlb	0	; select bank0
 21273  08AA  00B9               	movwf	dtoa@d+7
 21274  08AB  3198  209F         	fcall	_dtoa
 21275  08AD  0020               	movlb	0	; select bank0
 21276  08AE  0831               	movf	?_dtoa+1,w
 21277  08AF  00D8               	movwf	?_vfpfcnvrt+1
 21278  08B0  0830               	movf	?_dtoa,w
 21279  08B1  00D7               	movwf	?_vfpfcnvrt
 21280  08B2  0008               	return
 21281  08B3                     l7077:	
 21282                           
 21283                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
 21284  08B3  0859               	movf	vfpfcnvrt@fmt,w
 21285  08B4  0086               	movwf	6
 21286  08B5  0187               	clrf	7
 21287  08B6  3F40               	moviw [0]fsr1
 21288  08B7  00F1               	movwf	strncmp@_l
 21289  08B8  3F41               	moviw [1]fsr1
 21290  08B9  00F2               	movwf	strncmp@_l+1
 21291  08BA  3058               	movlw	low (STR_43| (0+32768))
 21292  08BB  00F3               	movwf	strncmp@_r
 21293  08BC  30BA               	movlw	high (STR_43| (0+32768))
 21294  08BD  00F4               	movwf	strncmp@_r+1
 21295  08BE  3002               	movlw	2
 21296  08BF  00F5               	movwf	strncmp@n
 21297  08C0  3000               	movlw	0
 21298  08C1  00F6               	movwf	strncmp@n+1
 21299  08C2  31B7  275A  3188   	fcall	_strncmp
 21300  08C5  0871               	movf	?_strncmp,w
 21301  08C6  0472               	iorwf	?_strncmp+1,w
 21302  08C7  1903               	btfsc	3,2
 21303  08C8  28E0               	goto	l7081
 21304  08C9  0020               	movlb	0	; select bank0
 21305  08CA  0859               	movf	vfpfcnvrt@fmt,w
 21306  08CB  0086               	movwf	6
 21307  08CC  0187               	clrf	7
 21308  08CD  3F40               	moviw [0]fsr1
 21309  08CE  00F1               	movwf	strncmp@_l
 21310  08CF  3F41               	moviw [1]fsr1
 21311  08D0  00F2               	movwf	strncmp@_l+1
 21312  08D1  305B               	movlw	low (STR_47| (0+32768))
 21313  08D2  00F3               	movwf	strncmp@_r
 21314  08D3  30BA               	movlw	high (STR_47| (0+32768))
 21315  08D4  00F4               	movwf	strncmp@_r+1
 21316  08D5  3002               	movlw	2
 21317  08D6  00F5               	movwf	strncmp@n
 21318  08D7  3000               	movlw	0
 21319  08D8  00F6               	movwf	strncmp@n+1
 21320  08D9  31B7  275A  3188   	fcall	_strncmp
 21321  08DC  0871               	movf	?_strncmp,w
 21322  08DD  0472               	iorwf	?_strncmp+1,w
 21323  08DE  1D03               	btfss	3,2
 21324  08DF  2929               	goto	l7089
 21325  08E0                     l7081:	
 21326                           
 21327                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
 21328  08E0  0020               	movlb	0	; select bank0
 21329  08E1  0859               	movf	vfpfcnvrt@fmt,w
 21330  08E2  0086               	movwf	6
 21331  08E3  0187               	clrf	7
 21332  08E4  3002               	movlw	2
 21333  08E5  0781               	addwf	1,f
 21334  08E6  3141               	addfsr 1,1
 21335  08E7  1803               	skipnc
 21336  08E8  0A81               	incf	1,f
 21337                           
 21338                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 21339  08E9  085A               	movf	vfpfcnvrt@ap,w
 21340  08EA  0086               	movwf	6
 21341  08EB  0187               	clrf	7
 21342  08EC  0801               	movf	1,w
 21343  08ED  0084               	movwf	4
 21344  08EE  0185               	clrf	5
 21345  08EF  3002               	movlw	2
 21346  08F0  0781               	addwf	1,f
 21347  08F1  3F00               	moviw [0]fsr0
 21348  08F2  0021               	movlb	1	; select bank1
 21349  08F3  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 21350  08F4  3F01               	moviw [1]fsr0
 21351  08F5  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 21352  08F6  01AA               	clrf	(vfpfcnvrt@ll+2)^(0+128)
 21353  08F7  01AB               	clrf	(vfpfcnvrt@ll+3)^(0+128)
 21354  08F8  01AC               	clrf	(vfpfcnvrt@ll+4)^(0+128)
 21355  08F9  01AD               	clrf	(vfpfcnvrt@ll+5)^(0+128)
 21356  08FA  01AE               	clrf	(vfpfcnvrt@ll+6)^(0+128)
 21357  08FB  01AF               	clrf	(vfpfcnvrt@ll+7)^(0+128)
 21358                           
 21359                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 889:       
      +                                return dtoa(fp, ll);
 21360  08FC  0020               	movlb	0	; select bank0
 21361  08FD  0858               	movf	vfpfcnvrt@fp+1,w
 21362  08FE  00B1               	movwf	dtoa@fp+1
 21363  08FF  0857               	movf	vfpfcnvrt@fp,w
 21364  0900  00B0               	movwf	dtoa@fp
 21365  0901  0021               	movlb	1	; select bank1
 21366  0902  0828               	movf	vfpfcnvrt@ll^(0+128),w
 21367  0903  0020               	movlb	0	; select bank0
 21368  0904  00B2               	movwf	dtoa@d
 21369  0905  0021               	movlb	1	; select bank1
 21370  0906  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 21371  0907  0020               	movlb	0	; select bank0
 21372  0908  00B3               	movwf	dtoa@d+1
 21373  0909  0021               	movlb	1	; select bank1
 21374  090A  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 21375  090B  0020               	movlb	0	; select bank0
 21376  090C  00B4               	movwf	dtoa@d+2
 21377  090D  0021               	movlb	1	; select bank1
 21378  090E  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 21379  090F  0020               	movlb	0	; select bank0
 21380  0910  00B5               	movwf	dtoa@d+3
 21381  0911  0021               	movlb	1	; select bank1
 21382  0912  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 21383  0913  0020               	movlb	0	; select bank0
 21384  0914  00B6               	movwf	dtoa@d+4
 21385  0915  0021               	movlb	1	; select bank1
 21386  0916  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 21387  0917  0020               	movlb	0	; select bank0
 21388  0918  00B7               	movwf	dtoa@d+5
 21389  0919  0021               	movlb	1	; select bank1
 21390  091A  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 21391  091B  0020               	movlb	0	; select bank0
 21392  091C  00B8               	movwf	dtoa@d+6
 21393  091D  0021               	movlb	1	; select bank1
 21394  091E  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 21395  091F  0020               	movlb	0	; select bank0
 21396  0920  00B9               	movwf	dtoa@d+7
 21397  0921  3198  209F         	fcall	_dtoa
 21398  0923  0020               	movlb	0	; select bank0
 21399  0924  0831               	movf	?_dtoa+1,w
 21400  0925  00D8               	movwf	?_vfpfcnvrt+1
 21401  0926  0830               	movf	?_dtoa,w
 21402  0927  00D7               	movwf	?_vfpfcnvrt
 21403  0928  0008               	return
 21404  0929                     l7089:	
 21405                           
 21406                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
 21407  0929  0020               	movlb	0	; select bank0
 21408  092A  0859               	movf	vfpfcnvrt@fmt,w
 21409  092B  0086               	movwf	6
 21410  092C  0187               	clrf	7
 21411  092D  3F40               	moviw [0]fsr1
 21412  092E  00F1               	movwf	strncmp@_l
 21413  092F  3F41               	moviw [1]fsr1
 21414  0930  00F2               	movwf	strncmp@_l+1
 21415  0931  3049               	movlw	low (STR_52| (0+32768))
 21416  0932  00F3               	movwf	strncmp@_r
 21417  0933  30BA               	movlw	high (STR_52| (0+32768))
 21418  0934  00F4               	movwf	strncmp@_r+1
 21419  0935  3003               	movlw	3
 21420  0936  00F5               	movwf	strncmp@n
 21421  0937  3000               	movlw	0
 21422  0938  00F6               	movwf	strncmp@n+1
 21423  0939  31B7  275A  3188   	fcall	_strncmp
 21424  093C  0871               	movf	?_strncmp,w
 21425  093D  0472               	iorwf	?_strncmp+1,w
 21426  093E  1D03               	btfss	3,2
 21427  093F  2988               	goto	l7099
 21428                           
 21429                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
 21430  0940  0020               	movlb	0	; select bank0
 21431  0941  0859               	movf	vfpfcnvrt@fmt,w
 21432  0942  0086               	movwf	6
 21433  0943  0187               	clrf	7
 21434  0944  3003               	movlw	3
 21435  0945  0781               	addwf	1,f
 21436  0946  3141               	addfsr 1,1
 21437  0947  1803               	skipnc
 21438  0948  0A81               	incf	1,f
 21439                           
 21440                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 21441  0949  085A               	movf	vfpfcnvrt@ap,w
 21442  094A  0086               	movwf	6
 21443  094B  0187               	clrf	7
 21444  094C  0801               	movf	1,w
 21445  094D  0084               	movwf	4
 21446  094E  0185               	clrf	5
 21447  094F  3002               	movlw	2
 21448  0950  0781               	addwf	1,f
 21449  0951  0800               	movf	0,w
 21450  0952  0021               	movlb	1	; select bank1
 21451  0953  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21452  0954  01B4               	clrf	(vfpfcnvrt@llu+1)^(0+128)
 21453  0955  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21454  0956  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21455  0957  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21456  0958  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21457  0959  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21458  095A  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21459                           
 21460                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
 21461  095B  0020               	movlb	0	; select bank0
 21462  095C  0858               	movf	vfpfcnvrt@fp+1,w
 21463  095D  00B1               	movwf	otoa@fp+1
 21464  095E  0857               	movf	vfpfcnvrt@fp,w
 21465  095F  00B0               	movwf	otoa@fp
 21466  0960  0021               	movlb	1	; select bank1
 21467  0961  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21468  0962  0020               	movlb	0	; select bank0
 21469  0963  00B2               	movwf	otoa@d
 21470  0964  0021               	movlb	1	; select bank1
 21471  0965  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21472  0966  0020               	movlb	0	; select bank0
 21473  0967  00B3               	movwf	otoa@d+1
 21474  0968  0021               	movlb	1	; select bank1
 21475  0969  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21476  096A  0020               	movlb	0	; select bank0
 21477  096B  00B4               	movwf	otoa@d+2
 21478  096C  0021               	movlb	1	; select bank1
 21479  096D  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21480  096E  0020               	movlb	0	; select bank0
 21481  096F  00B5               	movwf	otoa@d+3
 21482  0970  0021               	movlb	1	; select bank1
 21483  0971  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21484  0972  0020               	movlb	0	; select bank0
 21485  0973  00B6               	movwf	otoa@d+4
 21486  0974  0021               	movlb	1	; select bank1
 21487  0975  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21488  0976  0020               	movlb	0	; select bank0
 21489  0977  00B7               	movwf	otoa@d+5
 21490  0978  0021               	movlb	1	; select bank1
 21491  0979  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21492  097A  0020               	movlb	0	; select bank0
 21493  097B  00B8               	movwf	otoa@d+6
 21494  097C  0021               	movlb	1	; select bank1
 21495  097D  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21496  097E  0020               	movlb	0	; select bank0
 21497  097F  00B9               	movwf	otoa@d+7
 21498  0980  31A2  22FC         	fcall	_otoa
 21499  0982  0020               	movlb	0	; select bank0
 21500  0983  0831               	movf	?_otoa+1,w
 21501  0984  00D8               	movwf	?_vfpfcnvrt+1
 21502  0985  0830               	movf	?_otoa,w
 21503  0986  00D7               	movwf	?_vfpfcnvrt
 21504  0987  0008               	return
 21505  0988                     l7099:	
 21506                           
 21507                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
 21508  0988  0020               	movlb	0	; select bank0
 21509  0989  0859               	movf	vfpfcnvrt@fmt,w
 21510  098A  0086               	movwf	6
 21511  098B  0187               	clrf	7
 21512  098C  3F40               	moviw [0]fsr1
 21513  098D  00F1               	movwf	strncmp@_l
 21514  098E  3F41               	moviw [1]fsr1
 21515  098F  00F2               	movwf	strncmp@_l+1
 21516  0990  304A               	movlw	low ((STR_52+1)| (0+32768))
 21517  0991  00F3               	movwf	strncmp@_r
 21518  0992  30BA               	movlw	high ((STR_52+1)| (0+32768))
 21519  0993  00F4               	movwf	strncmp@_r+1
 21520  0994  3002               	movlw	2
 21521  0995  00F5               	movwf	strncmp@n
 21522  0996  3000               	movlw	0
 21523  0997  00F6               	movwf	strncmp@n+1
 21524  0998  31B7  275A  3188   	fcall	_strncmp
 21525  099B  0871               	movf	?_strncmp,w
 21526  099C  0472               	iorwf	?_strncmp+1,w
 21527  099D  1D03               	btfss	3,2
 21528  099E  29E8               	goto	l7109
 21529                           
 21530                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
 21531  099F  0020               	movlb	0	; select bank0
 21532  09A0  0859               	movf	vfpfcnvrt@fmt,w
 21533  09A1  0086               	movwf	6
 21534  09A2  0187               	clrf	7
 21535  09A3  3002               	movlw	2
 21536  09A4  0781               	addwf	1,f
 21537  09A5  3141               	addfsr 1,1
 21538  09A6  1803               	skipnc
 21539  09A7  0A81               	incf	1,f
 21540                           
 21541                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
 21542  09A8  085A               	movf	vfpfcnvrt@ap,w
 21543  09A9  0086               	movwf	6
 21544  09AA  0187               	clrf	7
 21545  09AB  0801               	movf	1,w
 21546  09AC  0084               	movwf	4
 21547  09AD  0185               	clrf	5
 21548  09AE  3002               	movlw	2
 21549  09AF  0781               	addwf	1,f
 21550  09B0  3F00               	moviw [0]fsr0
 21551  09B1  0021               	movlb	1	; select bank1
 21552  09B2  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21553  09B3  3F01               	moviw [1]fsr0
 21554  09B4  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 21555  09B5  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21556  09B6  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21557  09B7  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21558  09B8  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21559  09B9  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21560  09BA  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21561                           
 21562                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 985:       
      +                                return otoa(fp, llu);
 21563  09BB  0020               	movlb	0	; select bank0
 21564  09BC  0858               	movf	vfpfcnvrt@fp+1,w
 21565  09BD  00B1               	movwf	otoa@fp+1
 21566  09BE  0857               	movf	vfpfcnvrt@fp,w
 21567  09BF  00B0               	movwf	otoa@fp
 21568  09C0  0021               	movlb	1	; select bank1
 21569  09C1  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21570  09C2  0020               	movlb	0	; select bank0
 21571  09C3  00B2               	movwf	otoa@d
 21572  09C4  0021               	movlb	1	; select bank1
 21573  09C5  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21574  09C6  0020               	movlb	0	; select bank0
 21575  09C7  00B3               	movwf	otoa@d+1
 21576  09C8  0021               	movlb	1	; select bank1
 21577  09C9  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21578  09CA  0020               	movlb	0	; select bank0
 21579  09CB  00B4               	movwf	otoa@d+2
 21580  09CC  0021               	movlb	1	; select bank1
 21581  09CD  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21582  09CE  0020               	movlb	0	; select bank0
 21583  09CF  00B5               	movwf	otoa@d+3
 21584  09D0  0021               	movlb	1	; select bank1
 21585  09D1  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21586  09D2  0020               	movlb	0	; select bank0
 21587  09D3  00B6               	movwf	otoa@d+4
 21588  09D4  0021               	movlb	1	; select bank1
 21589  09D5  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21590  09D6  0020               	movlb	0	; select bank0
 21591  09D7  00B7               	movwf	otoa@d+5
 21592  09D8  0021               	movlb	1	; select bank1
 21593  09D9  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21594  09DA  0020               	movlb	0	; select bank0
 21595  09DB  00B8               	movwf	otoa@d+6
 21596  09DC  0021               	movlb	1	; select bank1
 21597  09DD  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21598  09DE  0020               	movlb	0	; select bank0
 21599  09DF  00B9               	movwf	otoa@d+7
 21600  09E0  31A2  22FC         	fcall	_otoa
 21601  09E2  0020               	movlb	0	; select bank0
 21602  09E3  0831               	movf	?_otoa+1,w
 21603  09E4  00D8               	movwf	?_vfpfcnvrt+1
 21604  09E5  0830               	movf	?_otoa,w
 21605  09E6  00D7               	movwf	?_vfpfcnvrt
 21606  09E7  0008               	return
 21607  09E8                     l7109:	
 21608                           
 21609                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
 21610  09E8  0020               	movlb	0	; select bank0
 21611  09E9  0859               	movf	vfpfcnvrt@fmt,w
 21612  09EA  0086               	movwf	6
 21613  09EB  0187               	clrf	7
 21614  09EC  3F40               	moviw [0]fsr1
 21615  09ED  00DB               	movwf	??_vfpfcnvrt
 21616  09EE  3F41               	moviw [1]fsr1
 21617  09EF  00DC               	movwf	??_vfpfcnvrt+1
 21618  09F0  085B               	movf	??_vfpfcnvrt,w
 21619  09F1  0084               	movwf	4
 21620  09F2  085C               	movf	??_vfpfcnvrt+1,w
 21621  09F3  0085               	movwf	5
 21622  09F4  0012               	moviw fsr0++
 21623  09F5  3A6F               	xorlw	111
 21624  09F6  1D03               	btfss	3,2
 21625  09F7  2A40               	goto	l7119
 21626                           
 21627                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
 21628  09F8  0859               	movf	vfpfcnvrt@fmt,w
 21629  09F9  0086               	movwf	6
 21630  09FA  0187               	clrf	7
 21631  09FB  3001               	movlw	1
 21632  09FC  0781               	addwf	1,f
 21633  09FD  3141               	addfsr 1,1
 21634  09FE  1803               	skipnc
 21635  09FF  0A81               	incf	1,f
 21636                           
 21637                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
 21638  0A00  085A               	movf	vfpfcnvrt@ap,w
 21639  0A01  0086               	movwf	6
 21640  0A02  0187               	clrf	7
 21641  0A03  0801               	movf	1,w
 21642  0A04  0084               	movwf	4
 21643  0A05  0185               	clrf	5
 21644  0A06  3002               	movlw	2
 21645  0A07  0781               	addwf	1,f
 21646  0A08  3F00               	moviw [0]fsr0
 21647  0A09  0021               	movlb	1	; select bank1
 21648  0A0A  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21649  0A0B  3F01               	moviw [1]fsr0
 21650  0A0C  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 21651  0A0D  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21652  0A0E  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21653  0A0F  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21654  0A10  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21655  0A11  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21656  0A12  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21657                           
 21658                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 995:       
      +                                return otoa(fp, llu);
 21659  0A13  0020               	movlb	0	; select bank0
 21660  0A14  0858               	movf	vfpfcnvrt@fp+1,w
 21661  0A15  00B1               	movwf	otoa@fp+1
 21662  0A16  0857               	movf	vfpfcnvrt@fp,w
 21663  0A17  00B0               	movwf	otoa@fp
 21664  0A18  0021               	movlb	1	; select bank1
 21665  0A19  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21666  0A1A  0020               	movlb	0	; select bank0
 21667  0A1B  00B2               	movwf	otoa@d
 21668  0A1C  0021               	movlb	1	; select bank1
 21669  0A1D  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21670  0A1E  0020               	movlb	0	; select bank0
 21671  0A1F  00B3               	movwf	otoa@d+1
 21672  0A20  0021               	movlb	1	; select bank1
 21673  0A21  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21674  0A22  0020               	movlb	0	; select bank0
 21675  0A23  00B4               	movwf	otoa@d+2
 21676  0A24  0021               	movlb	1	; select bank1
 21677  0A25  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21678  0A26  0020               	movlb	0	; select bank0
 21679  0A27  00B5               	movwf	otoa@d+3
 21680  0A28  0021               	movlb	1	; select bank1
 21681  0A29  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21682  0A2A  0020               	movlb	0	; select bank0
 21683  0A2B  00B6               	movwf	otoa@d+4
 21684  0A2C  0021               	movlb	1	; select bank1
 21685  0A2D  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21686  0A2E  0020               	movlb	0	; select bank0
 21687  0A2F  00B7               	movwf	otoa@d+5
 21688  0A30  0021               	movlb	1	; select bank1
 21689  0A31  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21690  0A32  0020               	movlb	0	; select bank0
 21691  0A33  00B8               	movwf	otoa@d+6
 21692  0A34  0021               	movlb	1	; select bank1
 21693  0A35  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21694  0A36  0020               	movlb	0	; select bank0
 21695  0A37  00B9               	movwf	otoa@d+7
 21696  0A38  31A2  22FC         	fcall	_otoa
 21697  0A3A  0020               	movlb	0	; select bank0
 21698  0A3B  0831               	movf	?_otoa+1,w
 21699  0A3C  00D8               	movwf	?_vfpfcnvrt+1
 21700  0A3D  0830               	movf	?_otoa,w
 21701  0A3E  00D7               	movwf	?_vfpfcnvrt
 21702  0A3F  0008               	return
 21703  0A40                     l7119:	
 21704                           
 21705                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
 21706  0A40  0859               	movf	vfpfcnvrt@fmt,w
 21707  0A41  0086               	movwf	6
 21708  0A42  0187               	clrf	7
 21709  0A43  3F40               	moviw [0]fsr1
 21710  0A44  00F1               	movwf	strncmp@_l
 21711  0A45  3F41               	moviw [1]fsr1
 21712  0A46  00F2               	movwf	strncmp@_l+1
 21713  0A47  3061               	movlw	low (STR_62| (0+32768))
 21714  0A48  00F3               	movwf	strncmp@_r
 21715  0A49  30BA               	movlw	high (STR_62| (0+32768))
 21716  0A4A  00F4               	movwf	strncmp@_r+1
 21717  0A4B  3002               	movlw	2
 21718  0A4C  00F5               	movwf	strncmp@n
 21719  0A4D  3000               	movlw	0
 21720  0A4E  00F6               	movwf	strncmp@n+1
 21721  0A4F  31B7  275A  3188   	fcall	_strncmp
 21722  0A52  0871               	movf	?_strncmp,w
 21723  0A53  0472               	iorwf	?_strncmp+1,w
 21724  0A54  1D03               	btfss	3,2
 21725  0A55  2A9F               	goto	l7129
 21726                           
 21727                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
 21728  0A56  0020               	movlb	0	; select bank0
 21729  0A57  0859               	movf	vfpfcnvrt@fmt,w
 21730  0A58  0086               	movwf	6
 21731  0A59  0187               	clrf	7
 21732  0A5A  3002               	movlw	2
 21733  0A5B  0781               	addwf	1,f
 21734  0A5C  3141               	addfsr 1,1
 21735  0A5D  1803               	skipnc
 21736  0A5E  0A81               	incf	1,f
 21737                           
 21738                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 21739  0A5F  085A               	movf	vfpfcnvrt@ap,w
 21740  0A60  0086               	movwf	6
 21741  0A61  0187               	clrf	7
 21742  0A62  0801               	movf	1,w
 21743  0A63  0084               	movwf	4
 21744  0A64  0185               	clrf	5
 21745  0A65  3002               	movlw	2
 21746  0A66  0781               	addwf	1,f
 21747  0A67  3F00               	moviw [0]fsr0
 21748  0A68  0021               	movlb	1	; select bank1
 21749  0A69  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21750  0A6A  3F01               	moviw [1]fsr0
 21751  0A6B  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 21752  0A6C  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21753  0A6D  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21754  0A6E  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21755  0A6F  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21756  0A70  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21757  0A71  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21758                           
 21759                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1049:      
      +                                 return otoa(fp, llu);
 21760  0A72  0020               	movlb	0	; select bank0
 21761  0A73  0858               	movf	vfpfcnvrt@fp+1,w
 21762  0A74  00B1               	movwf	otoa@fp+1
 21763  0A75  0857               	movf	vfpfcnvrt@fp,w
 21764  0A76  00B0               	movwf	otoa@fp
 21765  0A77  0021               	movlb	1	; select bank1
 21766  0A78  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21767  0A79  0020               	movlb	0	; select bank0
 21768  0A7A  00B2               	movwf	otoa@d
 21769  0A7B  0021               	movlb	1	; select bank1
 21770  0A7C  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21771  0A7D  0020               	movlb	0	; select bank0
 21772  0A7E  00B3               	movwf	otoa@d+1
 21773  0A7F  0021               	movlb	1	; select bank1
 21774  0A80  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21775  0A81  0020               	movlb	0	; select bank0
 21776  0A82  00B4               	movwf	otoa@d+2
 21777  0A83  0021               	movlb	1	; select bank1
 21778  0A84  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21779  0A85  0020               	movlb	0	; select bank0
 21780  0A86  00B5               	movwf	otoa@d+3
 21781  0A87  0021               	movlb	1	; select bank1
 21782  0A88  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21783  0A89  0020               	movlb	0	; select bank0
 21784  0A8A  00B6               	movwf	otoa@d+4
 21785  0A8B  0021               	movlb	1	; select bank1
 21786  0A8C  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21787  0A8D  0020               	movlb	0	; select bank0
 21788  0A8E  00B7               	movwf	otoa@d+5
 21789  0A8F  0021               	movlb	1	; select bank1
 21790  0A90  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21791  0A91  0020               	movlb	0	; select bank0
 21792  0A92  00B8               	movwf	otoa@d+6
 21793  0A93  0021               	movlb	1	; select bank1
 21794  0A94  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21795  0A95  0020               	movlb	0	; select bank0
 21796  0A96  00B9               	movwf	otoa@d+7
 21797  0A97  31A2  22FC         	fcall	_otoa
 21798  0A99  0020               	movlb	0	; select bank0
 21799  0A9A  0831               	movf	?_otoa+1,w
 21800  0A9B  00D8               	movwf	?_vfpfcnvrt+1
 21801  0A9C  0830               	movf	?_otoa,w
 21802  0A9D  00D7               	movwf	?_vfpfcnvrt
 21803  0A9E  0008               	return
 21804  0A9F                     l7129:	
 21805                           
 21806                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
 21807  0A9F  0020               	movlb	0	; select bank0
 21808  0AA0  0859               	movf	vfpfcnvrt@fmt,w
 21809  0AA1  0086               	movwf	6
 21810  0AA2  0187               	clrf	7
 21811  0AA3  3F40               	moviw [0]fsr1
 21812  0AA4  00F1               	movwf	strncmp@_l
 21813  0AA5  3F41               	moviw [1]fsr1
 21814  0AA6  00F2               	movwf	strncmp@_l+1
 21815  0AA7  3045               	movlw	low (STR_67| (0+32768))
 21816  0AA8  00F3               	movwf	strncmp@_r
 21817  0AA9  30BA               	movlw	high (STR_67| (0+32768))
 21818  0AAA  00F4               	movwf	strncmp@_r+1
 21819  0AAB  3003               	movlw	3
 21820  0AAC  00F5               	movwf	strncmp@n
 21821  0AAD  3000               	movlw	0
 21822  0AAE  00F6               	movwf	strncmp@n+1
 21823  0AAF  31B7  275A  3188   	fcall	_strncmp
 21824  0AB2  0871               	movf	?_strncmp,w
 21825  0AB3  0472               	iorwf	?_strncmp+1,w
 21826  0AB4  1D03               	btfss	3,2
 21827  0AB5  2B36               	goto	l7141
 21828                           
 21829                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
 21830  0AB6  0020               	movlb	0	; select bank0
 21831  0AB7  0859               	movf	vfpfcnvrt@fmt,w
 21832  0AB8  0086               	movwf	6
 21833  0AB9  0187               	clrf	7
 21834  0ABA  3003               	movlw	3
 21835  0ABB  0781               	addwf	1,f
 21836  0ABC  3141               	addfsr 1,1
 21837  0ABD  1803               	skipnc
 21838  0ABE  0A81               	incf	1,f
 21839                           
 21840                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
 21841  0ABF  085A               	movf	vfpfcnvrt@ap,w
 21842  0AC0  0086               	movwf	6
 21843  0AC1  0187               	clrf	7
 21844  0AC2  0801               	movf	1,w
 21845  0AC3  0084               	movwf	4
 21846  0AC4  0185               	clrf	5
 21847  0AC5  3002               	movlw	2
 21848  0AC6  0781               	addwf	1,f
 21849  0AC7  3F00               	moviw [0]fsr0
 21850  0AC8  0021               	movlb	1	; select bank1
 21851  0AC9  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 21852  0ACA  3F01               	moviw [1]fsr0
 21853  0ACB  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 21854                           
 21855                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
 21856  0ACC  0830               	movf	vfpfcnvrt@vp^(0+128),w
 21857  0ACD  0086               	movwf	6
 21858  0ACE  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 21859  0ACF  0087               	movwf	7
 21860  0AD0  0023               	movlb	3	; select bank3
 21861  0AD1  084A               	movf	_nout^(0+384),w
 21862  0AD2  0081               	movwf	1
 21863  0AD3  2B32               	goto	l7137
 21864  0AD4                     l7143:	
 21865                           
 21866                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
 21867  0AD4  0020               	movlb	0	; select bank0
 21868  0AD5  0859               	movf	vfpfcnvrt@fmt,w
 21869  0AD6  0086               	movwf	6
 21870  0AD7  0187               	clrf	7
 21871  0AD8  3002               	movlw	2
 21872  0AD9  0781               	addwf	1,f
 21873  0ADA  3141               	addfsr 1,1
 21874  0ADB  1803               	skipnc
 21875  0ADC  0A81               	incf	1,f
 21876                           
 21877                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
 21878  0ADD  085A               	movf	vfpfcnvrt@ap,w
 21879  0ADE  0086               	movwf	6
 21880  0ADF  0187               	clrf	7
 21881  0AE0  0801               	movf	1,w
 21882  0AE1  0084               	movwf	4
 21883  0AE2  0185               	clrf	5
 21884  0AE3  3002               	movlw	2
 21885  0AE4  0781               	addwf	1,f
 21886  0AE5  3F00               	moviw [0]fsr0
 21887  0AE6  0021               	movlb	1	; select bank1
 21888  0AE7  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 21889  0AE8  3F01               	moviw [1]fsr0
 21890  0AE9  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 21891                           
 21892                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
 21893  0AEA  0830               	movf	vfpfcnvrt@vp^(0+128),w
 21894  0AEB  0086               	movwf	6
 21895  0AEC  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 21896  0AED  0087               	movwf	7
 21897  0AEE  0023               	movlb	3	; select bank3
 21898  0AEF  084A               	movf	_nout^(0+384),w
 21899  0AF0  3FC0               	movwi [0]fsr1
 21900  0AF1  084B               	movf	(_nout+1)^(0+384),w
 21901  0AF2  3FC1               	movwi [1]fsr1
 21902  0AF3  2B32               	goto	l7137
 21903  0AF4                     l7155:	
 21904                           
 21905                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
 21906  0AF4  0859               	movf	vfpfcnvrt@fmt,w
 21907  0AF5  0086               	movwf	6
 21908  0AF6  0187               	clrf	7
 21909  0AF7  3001               	movlw	1
 21910  0AF8  0781               	addwf	1,f
 21911  0AF9  3141               	addfsr 1,1
 21912  0AFA  1803               	skipnc
 21913  0AFB  0A81               	incf	1,f
 21914                           
 21915                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
 21916  0AFC  085A               	movf	vfpfcnvrt@ap,w
 21917  0AFD  0086               	movwf	6
 21918  0AFE  0187               	clrf	7
 21919  0AFF  0801               	movf	1,w
 21920  0B00  0084               	movwf	4
 21921  0B01  0185               	clrf	5
 21922  0B02  3002               	movlw	2
 21923  0B03  0781               	addwf	1,f
 21924  0B04  3F00               	moviw [0]fsr0
 21925  0B05  0021               	movlb	1	; select bank1
 21926  0B06  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 21927  0B07  3F01               	moviw [1]fsr0
 21928  0B08  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 21929                           
 21930                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
 21931  0B09  0830               	movf	vfpfcnvrt@vp^(0+128),w
 21932  0B0A  0086               	movwf	6
 21933  0B0B  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 21934  0B0C  0087               	movwf	7
 21935  0B0D  0023               	movlb	3	; select bank3
 21936  0B0E  084A               	movf	_nout^(0+384),w
 21937  0B0F  3FC0               	movwi [0]fsr1
 21938  0B10  084B               	movf	(_nout+1)^(0+384),w
 21939  0B11  3FC1               	movwi [1]fsr1
 21940  0B12  2B32               	goto	l7137
 21941  0B13                     l7167:	
 21942                           
 21943                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
 21944  0B13  0020               	movlb	0	; select bank0
 21945  0B14  0859               	movf	vfpfcnvrt@fmt,w
 21946  0B15  0086               	movwf	6
 21947  0B16  0187               	clrf	7
 21948  0B17  3002               	movlw	2
 21949  0B18  0781               	addwf	1,f
 21950  0B19  3141               	addfsr 1,1
 21951  0B1A  1803               	skipnc
 21952  0B1B  0A81               	incf	1,f
 21953                           
 21954                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
 21955  0B1C  085A               	movf	vfpfcnvrt@ap,w
 21956  0B1D  0086               	movwf	6
 21957  0B1E  0187               	clrf	7
 21958  0B1F  0801               	movf	1,w
 21959  0B20  0084               	movwf	4
 21960  0B21  0185               	clrf	5
 21961  0B22  3002               	movlw	2
 21962  0B23  0781               	addwf	1,f
 21963  0B24  3F00               	moviw [0]fsr0
 21964  0B25  0021               	movlb	1	; select bank1
 21965  0B26  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 21966  0B27  3F01               	moviw [1]fsr0
 21967  0B28  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 21968                           
 21969                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
 21970  0B29  0830               	movf	vfpfcnvrt@vp^(0+128),w
 21971  0B2A  0086               	movwf	6
 21972  0B2B  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 21973  0B2C  0087               	movwf	7
 21974  0B2D  0023               	movlb	3	; select bank3
 21975  0B2E  084A               	movf	_nout^(0+384),w
 21976  0B2F  3FC0               	movwi [0]fsr1
 21977  0B30  084B               	movf	(_nout+1)^(0+384),w
 21978  0B31  3FC1               	movwi [1]fsr1
 21979  0B32                     l7137:	
 21980                           
 21981                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
 21982  0B32  0020               	movlb	0	; select bank0
 21983  0B33  01D7               	clrf	?_vfpfcnvrt
 21984  0B34  01D8               	clrf	?_vfpfcnvrt+1
 21985  0B35  0008               	return
 21986  0B36                     l7141:	
 21987                           
 21988                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
 21989  0B36  0020               	movlb	0	; select bank0
 21990  0B37  0859               	movf	vfpfcnvrt@fmt,w
 21991  0B38  0086               	movwf	6
 21992  0B39  0187               	clrf	7
 21993  0B3A  3F40               	moviw [0]fsr1
 21994  0B3B  00F1               	movwf	strncmp@_l
 21995  0B3C  3F41               	moviw [1]fsr1
 21996  0B3D  00F2               	movwf	strncmp@_l+1
 21997  0B3E  3046               	movlw	low ((STR_67+1)| (0+32768))
 21998  0B3F  00F3               	movwf	strncmp@_r
 21999  0B40  30BA               	movlw	high ((STR_67+1)| (0+32768))
 22000  0B41  00F4               	movwf	strncmp@_r+1
 22001  0B42  3002               	movlw	2
 22002  0B43  00F5               	movwf	strncmp@n
 22003  0B44  3000               	movlw	0
 22004  0B45  00F6               	movwf	strncmp@n+1
 22005  0B46  31B7  275A  3188   	fcall	_strncmp
 22006  0B49  0871               	movf	?_strncmp,w
 22007  0B4A  0472               	iorwf	?_strncmp+1,w
 22008  0B4B  1903               	btfsc	3,2
 22009  0B4C  2AD4               	goto	l7143
 22010                           
 22011                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
 22012  0B4D  0020               	movlb	0	; select bank0
 22013  0B4E  0859               	movf	vfpfcnvrt@fmt,w
 22014  0B4F  0086               	movwf	6
 22015  0B50  0187               	clrf	7
 22016  0B51  3F40               	moviw [0]fsr1
 22017  0B52  00DB               	movwf	??_vfpfcnvrt
 22018  0B53  3F41               	moviw [1]fsr1
 22019  0B54  00DC               	movwf	??_vfpfcnvrt+1
 22020  0B55  085B               	movf	??_vfpfcnvrt,w
 22021  0B56  0084               	movwf	4
 22022  0B57  085C               	movf	??_vfpfcnvrt+1,w
 22023  0B58  0085               	movwf	5
 22024  0B59  0012               	moviw fsr0++
 22025  0B5A  3A6E               	xorlw	110
 22026  0B5B  1903               	btfsc	3,2
 22027  0B5C  2AF4               	goto	l7155
 22028                           
 22029                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
 22030  0B5D  0859               	movf	vfpfcnvrt@fmt,w
 22031  0B5E  0086               	movwf	6
 22032  0B5F  0187               	clrf	7
 22033  0B60  3F40               	moviw [0]fsr1
 22034  0B61  00F1               	movwf	strncmp@_l
 22035  0B62  3F41               	moviw [1]fsr1
 22036  0B63  00F2               	movwf	strncmp@_l+1
 22037  0B64  305E               	movlw	low (STR_77| (0+32768))
 22038  0B65  00F3               	movwf	strncmp@_r
 22039  0B66  30BA               	movlw	high (STR_77| (0+32768))
 22040  0B67  00F4               	movwf	strncmp@_r+1
 22041  0B68  3002               	movlw	2
 22042  0B69  00F5               	movwf	strncmp@n
 22043  0B6A  3000               	movlw	0
 22044  0B6B  00F6               	movwf	strncmp@n+1
 22045  0B6C  31B7  275A  3188   	fcall	_strncmp
 22046  0B6F  0871               	movf	?_strncmp,w
 22047  0B70  0472               	iorwf	?_strncmp+1,w
 22048  0B71  1903               	btfsc	3,2
 22049  0B72  2B13               	goto	l7167
 22050                           
 22051                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
 22052  0B73  0020               	movlb	0	; select bank0
 22053  0B74  0859               	movf	vfpfcnvrt@fmt,w
 22054  0B75  0086               	movwf	6
 22055  0B76  0187               	clrf	7
 22056  0B77  3F40               	moviw [0]fsr1
 22057  0B78  00DB               	movwf	??_vfpfcnvrt
 22058  0B79  3F41               	moviw [1]fsr1
 22059  0B7A  00DC               	movwf	??_vfpfcnvrt+1
 22060  0B7B  085B               	movf	??_vfpfcnvrt,w
 22061  0B7C  0084               	movwf	4
 22062  0B7D  085C               	movf	??_vfpfcnvrt+1,w
 22063  0B7E  0085               	movwf	5
 22064  0B7F  0012               	moviw fsr0++
 22065  0B80  3A70               	xorlw	112
 22066  0B81  1D03               	btfss	3,2
 22067  0B82  2BCF               	goto	l7187
 22068                           
 22069                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
 22070  0B83  0859               	movf	vfpfcnvrt@fmt,w
 22071  0B84  0086               	movwf	6
 22072  0B85  0187               	clrf	7
 22073  0B86  3001               	movlw	1
 22074  0B87  0781               	addwf	1,f
 22075  0B88  3141               	addfsr 1,1
 22076  0B89  1803               	skipnc
 22077  0B8A  0A81               	incf	1,f
 22078                           
 22079                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
 22080  0B8B  085A               	movf	vfpfcnvrt@ap,w
 22081  0B8C  0086               	movwf	6
 22082  0B8D  0187               	clrf	7
 22083  0B8E  0801               	movf	1,w
 22084  0B8F  0084               	movwf	4
 22085  0B90  0185               	clrf	5
 22086  0B91  3002               	movlw	2
 22087  0B92  0781               	addwf	1,f
 22088  0B93  3F00               	moviw [0]fsr0
 22089  0B94  0021               	movlb	1	; select bank1
 22090  0B95  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22091  0B96  3F01               	moviw [1]fsr0
 22092  0B97  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22093  0B98  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22094  0B99  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22095  0B9A  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22096  0B9B  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22097  0B9C  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22098  0B9D  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22099                           
 22100                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
 22101  0B9E  0020               	movlb	0	; select bank0
 22102  0B9F  0858               	movf	vfpfcnvrt@fp+1,w
 22103  0BA0  00B1               	movwf	xtoa@fp+1
 22104  0BA1  0857               	movf	vfpfcnvrt@fp,w
 22105  0BA2  00B0               	movwf	xtoa@fp
 22106  0BA3  0021               	movlb	1	; select bank1
 22107  0BA4  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22108  0BA5  0020               	movlb	0	; select bank0
 22109  0BA6  00B2               	movwf	xtoa@d
 22110  0BA7  0021               	movlb	1	; select bank1
 22111  0BA8  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22112  0BA9  0020               	movlb	0	; select bank0
 22113  0BAA  00B3               	movwf	xtoa@d+1
 22114  0BAB  0021               	movlb	1	; select bank1
 22115  0BAC  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22116  0BAD  0020               	movlb	0	; select bank0
 22117  0BAE  00B4               	movwf	xtoa@d+2
 22118  0BAF  0021               	movlb	1	; select bank1
 22119  0BB0  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22120  0BB1  0020               	movlb	0	; select bank0
 22121  0BB2  00B5               	movwf	xtoa@d+3
 22122  0BB3  0021               	movlb	1	; select bank1
 22123  0BB4  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22124  0BB5  0020               	movlb	0	; select bank0
 22125  0BB6  00B6               	movwf	xtoa@d+4
 22126  0BB7  0021               	movlb	1	; select bank1
 22127  0BB8  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22128  0BB9  0020               	movlb	0	; select bank0
 22129  0BBA  00B7               	movwf	xtoa@d+5
 22130  0BBB  0021               	movlb	1	; select bank1
 22131  0BBC  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22132  0BBD  0020               	movlb	0	; select bank0
 22133  0BBE  00B8               	movwf	xtoa@d+6
 22134  0BBF  0021               	movlb	1	; select bank1
 22135  0BC0  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22136  0BC1  0020               	movlb	0	; select bank0
 22137  0BC2  00B9               	movwf	xtoa@d+7
 22138  0BC3  3078               	movlw	120
 22139  0BC4  00DB               	movwf	??_vfpfcnvrt
 22140  0BC5  085B               	movf	??_vfpfcnvrt,w
 22141  0BC6  00BA               	movwf	xtoa@x
 22142  0BC7  3199  21F2         	fcall	_xtoa
 22143  0BC9  0020               	movlb	0	; select bank0
 22144  0BCA  0831               	movf	?_xtoa+1,w
 22145  0BCB  00D8               	movwf	?_vfpfcnvrt+1
 22146  0BCC  0830               	movf	?_xtoa,w
 22147  0BCD  00D7               	movwf	?_vfpfcnvrt
 22148  0BCE  0008               	return
 22149  0BCF                     l7187:	
 22150                           
 22151                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 22152  0BCF  0859               	movf	vfpfcnvrt@fmt,w
 22153  0BD0  0086               	movwf	6
 22154  0BD1  0187               	clrf	7
 22155  0BD2  3F40               	moviw [0]fsr1
 22156  0BD3  00DB               	movwf	??_vfpfcnvrt
 22157  0BD4  3F41               	moviw [1]fsr1
 22158  0BD5  00DC               	movwf	??_vfpfcnvrt+1
 22159  0BD6  085B               	movf	??_vfpfcnvrt,w
 22160  0BD7  0084               	movwf	4
 22161  0BD8  085C               	movf	??_vfpfcnvrt+1,w
 22162  0BD9  0085               	movwf	5
 22163  0BDA  0012               	moviw fsr0++
 22164  0BDB  3A73               	xorlw	115
 22165  0BDC  1D03               	btfss	3,2
 22166  0BDD  2C08               	goto	l7197
 22167                           
 22168                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 22169  0BDE  0859               	movf	vfpfcnvrt@fmt,w
 22170  0BDF  0086               	movwf	6
 22171  0BE0  0187               	clrf	7
 22172  0BE1  3001               	movlw	1
 22173  0BE2  0781               	addwf	1,f
 22174  0BE3  3141               	addfsr 1,1
 22175  0BE4  1803               	skipnc
 22176  0BE5  0A81               	incf	1,f
 22177                           
 22178                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 22179  0BE6  085A               	movf	vfpfcnvrt@ap,w
 22180  0BE7  0086               	movwf	6
 22181  0BE8  0187               	clrf	7
 22182  0BE9  0801               	movf	1,w
 22183  0BEA  0084               	movwf	4
 22184  0BEB  0185               	clrf	5
 22185  0BEC  3002               	movlw	2
 22186  0BED  0781               	addwf	1,f
 22187  0BEE  3F00               	moviw [0]fsr0
 22188  0BEF  0021               	movlb	1	; select bank1
 22189  0BF0  00A0               	movwf	vfpfcnvrt@cp^(0+128)
 22190  0BF1  3F01               	moviw [1]fsr0
 22191  0BF2  00A1               	movwf	(vfpfcnvrt@cp+1)^(0+128)
 22192                           
 22193                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 22194  0BF3  0020               	movlb	0	; select bank0
 22195  0BF4  0858               	movf	vfpfcnvrt@fp+1,w
 22196  0BF5  00A1               	movwf	stoa@fp+1
 22197  0BF6  0857               	movf	vfpfcnvrt@fp,w
 22198  0BF7  00A0               	movwf	stoa@fp
 22199  0BF8  0021               	movlb	1	; select bank1
 22200  0BF9  0821               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 22201  0BFA  0020               	movlb	0	; select bank0
 22202  0BFB  00A3               	movwf	stoa@s+1
 22203  0BFC  0021               	movlb	1	; select bank1
 22204  0BFD  0820               	movf	vfpfcnvrt@cp^(0+128),w
 22205  0BFE  0020               	movlb	0	; select bank0
 22206  0BFF  00A2               	movwf	stoa@s
 22207  0C00  31AE  2666         	fcall	_stoa
 22208  0C02  0020               	movlb	0	; select bank0
 22209  0C03  0821               	movf	?_stoa+1,w
 22210  0C04  00D8               	movwf	?_vfpfcnvrt+1
 22211  0C05  0820               	movf	?_stoa,w
 22212  0C06  00D7               	movwf	?_vfpfcnvrt
 22213  0C07  0008               	return
 22214  0C08                     l7197:	
 22215                           
 22216                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
 22217  0C08  0859               	movf	vfpfcnvrt@fmt,w
 22218  0C09  0086               	movwf	6
 22219  0C0A  0187               	clrf	7
 22220  0C0B  3F40               	moviw [0]fsr1
 22221  0C0C  00F1               	movwf	strncmp@_l
 22222  0C0D  3F41               	moviw [1]fsr1
 22223  0C0E  00F2               	movwf	strncmp@_l+1
 22224  0C0F  304D               	movlw	low (STR_82| (0+32768))
 22225  0C10  00F3               	movwf	strncmp@_r
 22226  0C11  30BA               	movlw	high (STR_82| (0+32768))
 22227  0C12  00F4               	movwf	strncmp@_r+1
 22228  0C13  3003               	movlw	3
 22229  0C14  00F5               	movwf	strncmp@n
 22230  0C15  3000               	movlw	0
 22231  0C16  00F6               	movwf	strncmp@n+1
 22232  0C17  31B7  275A  3188   	fcall	_strncmp
 22233  0C1A  0871               	movf	?_strncmp,w
 22234  0C1B  0472               	iorwf	?_strncmp+1,w
 22235  0C1C  1D03               	btfss	3,2
 22236  0C1D  2C66               	goto	l7207
 22237                           
 22238                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
 22239  0C1E  0020               	movlb	0	; select bank0
 22240  0C1F  0859               	movf	vfpfcnvrt@fmt,w
 22241  0C20  0086               	movwf	6
 22242  0C21  0187               	clrf	7
 22243  0C22  3003               	movlw	3
 22244  0C23  0781               	addwf	1,f
 22245  0C24  3141               	addfsr 1,1
 22246  0C25  1803               	skipnc
 22247  0C26  0A81               	incf	1,f
 22248                           
 22249                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 22250  0C27  085A               	movf	vfpfcnvrt@ap,w
 22251  0C28  0086               	movwf	6
 22252  0C29  0187               	clrf	7
 22253  0C2A  0801               	movf	1,w
 22254  0C2B  0084               	movwf	4
 22255  0C2C  0185               	clrf	5
 22256  0C2D  3002               	movlw	2
 22257  0C2E  0781               	addwf	1,f
 22258  0C2F  0800               	movf	0,w
 22259  0C30  0021               	movlb	1	; select bank1
 22260  0C31  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22261  0C32  01B4               	clrf	(vfpfcnvrt@llu+1)^(0+128)
 22262  0C33  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22263  0C34  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22264  0C35  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22265  0C36  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22266  0C37  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22267  0C38  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22268                           
 22269                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
 22270  0C39  0020               	movlb	0	; select bank0
 22271  0C3A  0858               	movf	vfpfcnvrt@fp+1,w
 22272  0C3B  00B1               	movwf	utoa@fp+1
 22273  0C3C  0857               	movf	vfpfcnvrt@fp,w
 22274  0C3D  00B0               	movwf	utoa@fp
 22275  0C3E  0021               	movlb	1	; select bank1
 22276  0C3F  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22277  0C40  0020               	movlb	0	; select bank0
 22278  0C41  00B2               	movwf	utoa@d
 22279  0C42  0021               	movlb	1	; select bank1
 22280  0C43  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22281  0C44  0020               	movlb	0	; select bank0
 22282  0C45  00B3               	movwf	utoa@d+1
 22283  0C46  0021               	movlb	1	; select bank1
 22284  0C47  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22285  0C48  0020               	movlb	0	; select bank0
 22286  0C49  00B4               	movwf	utoa@d+2
 22287  0C4A  0021               	movlb	1	; select bank1
 22288  0C4B  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22289  0C4C  0020               	movlb	0	; select bank0
 22290  0C4D  00B5               	movwf	utoa@d+3
 22291  0C4E  0021               	movlb	1	; select bank1
 22292  0C4F  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22293  0C50  0020               	movlb	0	; select bank0
 22294  0C51  00B6               	movwf	utoa@d+4
 22295  0C52  0021               	movlb	1	; select bank1
 22296  0C53  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22297  0C54  0020               	movlb	0	; select bank0
 22298  0C55  00B7               	movwf	utoa@d+5
 22299  0C56  0021               	movlb	1	; select bank1
 22300  0C57  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22301  0C58  0020               	movlb	0	; select bank0
 22302  0C59  00B8               	movwf	utoa@d+6
 22303  0C5A  0021               	movlb	1	; select bank1
 22304  0C5B  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22305  0C5C  0020               	movlb	0	; select bank0
 22306  0C5D  00B9               	movwf	utoa@d+7
 22307  0C5E  31A2  221B         	fcall	_utoa
 22308  0C60  0020               	movlb	0	; select bank0
 22309  0C61  0831               	movf	?_utoa+1,w
 22310  0C62  00D8               	movwf	?_vfpfcnvrt+1
 22311  0C63  0830               	movf	?_utoa,w
 22312  0C64  00D7               	movwf	?_vfpfcnvrt
 22313  0C65  0008               	return
 22314  0C66                     l7207:	
 22315                           
 22316                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
 22317  0C66  0020               	movlb	0	; select bank0
 22318  0C67  0859               	movf	vfpfcnvrt@fmt,w
 22319  0C68  0086               	movwf	6
 22320  0C69  0187               	clrf	7
 22321  0C6A  3F40               	moviw [0]fsr1
 22322  0C6B  00F1               	movwf	strncmp@_l
 22323  0C6C  3F41               	moviw [1]fsr1
 22324  0C6D  00F2               	movwf	strncmp@_l+1
 22325  0C6E  304E               	movlw	low ((STR_82+1)| (0+32768))
 22326  0C6F  00F3               	movwf	strncmp@_r
 22327  0C70  30BA               	movlw	high ((STR_82+1)| (0+32768))
 22328  0C71  00F4               	movwf	strncmp@_r+1
 22329  0C72  3002               	movlw	2
 22330  0C73  00F5               	movwf	strncmp@n
 22331  0C74  3000               	movlw	0
 22332  0C75  00F6               	movwf	strncmp@n+1
 22333  0C76  31B7  275A  3188   	fcall	_strncmp
 22334  0C79  0871               	movf	?_strncmp,w
 22335  0C7A  0472               	iorwf	?_strncmp+1,w
 22336  0C7B  1D03               	btfss	3,2
 22337  0C7C  2CC6               	goto	l7217
 22338                           
 22339                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
 22340  0C7D  0020               	movlb	0	; select bank0
 22341  0C7E  0859               	movf	vfpfcnvrt@fmt,w
 22342  0C7F  0086               	movwf	6
 22343  0C80  0187               	clrf	7
 22344  0C81  3002               	movlw	2
 22345  0C82  0781               	addwf	1,f
 22346  0C83  3141               	addfsr 1,1
 22347  0C84  1803               	skipnc
 22348  0C85  0A81               	incf	1,f
 22349                           
 22350                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 22351  0C86  085A               	movf	vfpfcnvrt@ap,w
 22352  0C87  0086               	movwf	6
 22353  0C88  0187               	clrf	7
 22354  0C89  0801               	movf	1,w
 22355  0C8A  0084               	movwf	4
 22356  0C8B  0185               	clrf	5
 22357  0C8C  3002               	movlw	2
 22358  0C8D  0781               	addwf	1,f
 22359  0C8E  3F00               	moviw [0]fsr0
 22360  0C8F  0021               	movlb	1	; select bank1
 22361  0C90  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22362  0C91  3F01               	moviw [1]fsr0
 22363  0C92  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22364  0C93  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22365  0C94  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22366  0C95  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22367  0C96  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22368  0C97  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22369  0C98  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22370                           
 22371                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1177:      
      +                                 return utoa(fp, llu);
 22372  0C99  0020               	movlb	0	; select bank0
 22373  0C9A  0858               	movf	vfpfcnvrt@fp+1,w
 22374  0C9B  00B1               	movwf	utoa@fp+1
 22375  0C9C  0857               	movf	vfpfcnvrt@fp,w
 22376  0C9D  00B0               	movwf	utoa@fp
 22377  0C9E  0021               	movlb	1	; select bank1
 22378  0C9F  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22379  0CA0  0020               	movlb	0	; select bank0
 22380  0CA1  00B2               	movwf	utoa@d
 22381  0CA2  0021               	movlb	1	; select bank1
 22382  0CA3  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22383  0CA4  0020               	movlb	0	; select bank0
 22384  0CA5  00B3               	movwf	utoa@d+1
 22385  0CA6  0021               	movlb	1	; select bank1
 22386  0CA7  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22387  0CA8  0020               	movlb	0	; select bank0
 22388  0CA9  00B4               	movwf	utoa@d+2
 22389  0CAA  0021               	movlb	1	; select bank1
 22390  0CAB  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22391  0CAC  0020               	movlb	0	; select bank0
 22392  0CAD  00B5               	movwf	utoa@d+3
 22393  0CAE  0021               	movlb	1	; select bank1
 22394  0CAF  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22395  0CB0  0020               	movlb	0	; select bank0
 22396  0CB1  00B6               	movwf	utoa@d+4
 22397  0CB2  0021               	movlb	1	; select bank1
 22398  0CB3  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22399  0CB4  0020               	movlb	0	; select bank0
 22400  0CB5  00B7               	movwf	utoa@d+5
 22401  0CB6  0021               	movlb	1	; select bank1
 22402  0CB7  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22403  0CB8  0020               	movlb	0	; select bank0
 22404  0CB9  00B8               	movwf	utoa@d+6
 22405  0CBA  0021               	movlb	1	; select bank1
 22406  0CBB  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22407  0CBC  0020               	movlb	0	; select bank0
 22408  0CBD  00B9               	movwf	utoa@d+7
 22409  0CBE  31A2  221B         	fcall	_utoa
 22410  0CC0  0020               	movlb	0	; select bank0
 22411  0CC1  0831               	movf	?_utoa+1,w
 22412  0CC2  00D8               	movwf	?_vfpfcnvrt+1
 22413  0CC3  0830               	movf	?_utoa,w
 22414  0CC4  00D7               	movwf	?_vfpfcnvrt
 22415  0CC5  0008               	return
 22416  0CC6                     l7217:	
 22417                           
 22418                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 22419  0CC6  0020               	movlb	0	; select bank0
 22420  0CC7  0859               	movf	vfpfcnvrt@fmt,w
 22421  0CC8  0086               	movwf	6
 22422  0CC9  0187               	clrf	7
 22423  0CCA  3F40               	moviw [0]fsr1
 22424  0CCB  00DB               	movwf	??_vfpfcnvrt
 22425  0CCC  3F41               	moviw [1]fsr1
 22426  0CCD  00DC               	movwf	??_vfpfcnvrt+1
 22427  0CCE  085B               	movf	??_vfpfcnvrt,w
 22428  0CCF  0084               	movwf	4
 22429  0CD0  085C               	movf	??_vfpfcnvrt+1,w
 22430  0CD1  0085               	movwf	5
 22431  0CD2  0012               	moviw fsr0++
 22432  0CD3  3A75               	xorlw	117
 22433  0CD4  1D03               	btfss	3,2
 22434  0CD5  2D1E               	goto	l7227
 22435                           
 22436                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 22437  0CD6  0859               	movf	vfpfcnvrt@fmt,w
 22438  0CD7  0086               	movwf	6
 22439  0CD8  0187               	clrf	7
 22440  0CD9  3001               	movlw	1
 22441  0CDA  0781               	addwf	1,f
 22442  0CDB  3141               	addfsr 1,1
 22443  0CDC  1803               	skipnc
 22444  0CDD  0A81               	incf	1,f
 22445                           
 22446                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 22447  0CDE  085A               	movf	vfpfcnvrt@ap,w
 22448  0CDF  0086               	movwf	6
 22449  0CE0  0187               	clrf	7
 22450  0CE1  0801               	movf	1,w
 22451  0CE2  0084               	movwf	4
 22452  0CE3  0185               	clrf	5
 22453  0CE4  3002               	movlw	2
 22454  0CE5  0781               	addwf	1,f
 22455  0CE6  3F00               	moviw [0]fsr0
 22456  0CE7  0021               	movlb	1	; select bank1
 22457  0CE8  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22458  0CE9  3F01               	moviw [1]fsr0
 22459  0CEA  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22460  0CEB  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22461  0CEC  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22462  0CED  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22463  0CEE  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22464  0CEF  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22465  0CF0  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22466                           
 22467                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
 22468  0CF1  0020               	movlb	0	; select bank0
 22469  0CF2  0858               	movf	vfpfcnvrt@fp+1,w
 22470  0CF3  00B1               	movwf	utoa@fp+1
 22471  0CF4  0857               	movf	vfpfcnvrt@fp,w
 22472  0CF5  00B0               	movwf	utoa@fp
 22473  0CF6  0021               	movlb	1	; select bank1
 22474  0CF7  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22475  0CF8  0020               	movlb	0	; select bank0
 22476  0CF9  00B2               	movwf	utoa@d
 22477  0CFA  0021               	movlb	1	; select bank1
 22478  0CFB  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22479  0CFC  0020               	movlb	0	; select bank0
 22480  0CFD  00B3               	movwf	utoa@d+1
 22481  0CFE  0021               	movlb	1	; select bank1
 22482  0CFF  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22483  0D00  0020               	movlb	0	; select bank0
 22484  0D01  00B4               	movwf	utoa@d+2
 22485  0D02  0021               	movlb	1	; select bank1
 22486  0D03  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22487  0D04  0020               	movlb	0	; select bank0
 22488  0D05  00B5               	movwf	utoa@d+3
 22489  0D06  0021               	movlb	1	; select bank1
 22490  0D07  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22491  0D08  0020               	movlb	0	; select bank0
 22492  0D09  00B6               	movwf	utoa@d+4
 22493  0D0A  0021               	movlb	1	; select bank1
 22494  0D0B  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22495  0D0C  0020               	movlb	0	; select bank0
 22496  0D0D  00B7               	movwf	utoa@d+5
 22497  0D0E  0021               	movlb	1	; select bank1
 22498  0D0F  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22499  0D10  0020               	movlb	0	; select bank0
 22500  0D11  00B8               	movwf	utoa@d+6
 22501  0D12  0021               	movlb	1	; select bank1
 22502  0D13  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22503  0D14  0020               	movlb	0	; select bank0
 22504  0D15  00B9               	movwf	utoa@d+7
 22505  0D16  31A2  221B         	fcall	_utoa
 22506  0D18  0020               	movlb	0	; select bank0
 22507  0D19  0831               	movf	?_utoa+1,w
 22508  0D1A  00D8               	movwf	?_vfpfcnvrt+1
 22509  0D1B  0830               	movf	?_utoa,w
 22510  0D1C  00D7               	movwf	?_vfpfcnvrt
 22511  0D1D  0008               	return
 22512  0D1E                     l7227:	
 22513                           
 22514                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
 22515  0D1E  0859               	movf	vfpfcnvrt@fmt,w
 22516  0D1F  0086               	movwf	6
 22517  0D20  0187               	clrf	7
 22518  0D21  3F40               	moviw [0]fsr1
 22519  0D22  00F1               	movwf	strncmp@_l
 22520  0D23  3F41               	moviw [1]fsr1
 22521  0D24  00F2               	movwf	strncmp@_l+1
 22522  0D25  3064               	movlw	low (STR_92| (0+32768))
 22523  0D26  00F3               	movwf	strncmp@_r
 22524  0D27  30BA               	movlw	high (STR_92| (0+32768))
 22525  0D28  00F4               	movwf	strncmp@_r+1
 22526  0D29  3002               	movlw	2
 22527  0D2A  00F5               	movwf	strncmp@n
 22528  0D2B  3000               	movlw	0
 22529  0D2C  00F6               	movwf	strncmp@n+1
 22530  0D2D  31B7  275A  3188   	fcall	_strncmp
 22531  0D30  0871               	movf	?_strncmp,w
 22532  0D31  0472               	iorwf	?_strncmp+1,w
 22533  0D32  1D03               	btfss	3,2
 22534  0D33  2D7D               	goto	l7237
 22535                           
 22536                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
 22537  0D34  0020               	movlb	0	; select bank0
 22538  0D35  0859               	movf	vfpfcnvrt@fmt,w
 22539  0D36  0086               	movwf	6
 22540  0D37  0187               	clrf	7
 22541  0D38  3002               	movlw	2
 22542  0D39  0781               	addwf	1,f
 22543  0D3A  3141               	addfsr 1,1
 22544  0D3B  1803               	skipnc
 22545  0D3C  0A81               	incf	1,f
 22546                           
 22547                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 22548  0D3D  085A               	movf	vfpfcnvrt@ap,w
 22549  0D3E  0086               	movwf	6
 22550  0D3F  0187               	clrf	7
 22551  0D40  0801               	movf	1,w
 22552  0D41  0084               	movwf	4
 22553  0D42  0185               	clrf	5
 22554  0D43  3002               	movlw	2
 22555  0D44  0781               	addwf	1,f
 22556  0D45  3F00               	moviw [0]fsr0
 22557  0D46  0021               	movlb	1	; select bank1
 22558  0D47  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22559  0D48  3F01               	moviw [1]fsr0
 22560  0D49  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22561  0D4A  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22562  0D4B  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22563  0D4C  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22564  0D4D  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22565  0D4E  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22566  0D4F  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22567                           
 22568                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1241:      
      +                                 return utoa(fp, llu);
 22569  0D50  0020               	movlb	0	; select bank0
 22570  0D51  0858               	movf	vfpfcnvrt@fp+1,w
 22571  0D52  00B1               	movwf	utoa@fp+1
 22572  0D53  0857               	movf	vfpfcnvrt@fp,w
 22573  0D54  00B0               	movwf	utoa@fp
 22574  0D55  0021               	movlb	1	; select bank1
 22575  0D56  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22576  0D57  0020               	movlb	0	; select bank0
 22577  0D58  00B2               	movwf	utoa@d
 22578  0D59  0021               	movlb	1	; select bank1
 22579  0D5A  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22580  0D5B  0020               	movlb	0	; select bank0
 22581  0D5C  00B3               	movwf	utoa@d+1
 22582  0D5D  0021               	movlb	1	; select bank1
 22583  0D5E  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22584  0D5F  0020               	movlb	0	; select bank0
 22585  0D60  00B4               	movwf	utoa@d+2
 22586  0D61  0021               	movlb	1	; select bank1
 22587  0D62  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22588  0D63  0020               	movlb	0	; select bank0
 22589  0D64  00B5               	movwf	utoa@d+3
 22590  0D65  0021               	movlb	1	; select bank1
 22591  0D66  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22592  0D67  0020               	movlb	0	; select bank0
 22593  0D68  00B6               	movwf	utoa@d+4
 22594  0D69  0021               	movlb	1	; select bank1
 22595  0D6A  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22596  0D6B  0020               	movlb	0	; select bank0
 22597  0D6C  00B7               	movwf	utoa@d+5
 22598  0D6D  0021               	movlb	1	; select bank1
 22599  0D6E  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22600  0D6F  0020               	movlb	0	; select bank0
 22601  0D70  00B8               	movwf	utoa@d+6
 22602  0D71  0021               	movlb	1	; select bank1
 22603  0D72  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22604  0D73  0020               	movlb	0	; select bank0
 22605  0D74  00B9               	movwf	utoa@d+7
 22606  0D75  31A2  221B         	fcall	_utoa
 22607  0D77  0020               	movlb	0	; select bank0
 22608  0D78  0831               	movf	?_utoa+1,w
 22609  0D79  00D8               	movwf	?_vfpfcnvrt+1
 22610  0D7A  0830               	movf	?_utoa,w
 22611  0D7B  00D7               	movwf	?_vfpfcnvrt
 22612  0D7C  0008               	return
 22613  0D7D                     l7237:	
 22614                           
 22615                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
 22616  0D7D  0020               	movlb	0	; select bank0
 22617  0D7E  0859               	movf	vfpfcnvrt@fmt,w
 22618  0D7F  0086               	movwf	6
 22619  0D80  0187               	clrf	7
 22620  0D81  3F40               	moviw [0]fsr1
 22621  0D82  00F1               	movwf	strncmp@_l
 22622  0D83  3F41               	moviw [1]fsr1
 22623  0D84  00F2               	movwf	strncmp@_l+1
 22624  0D85  3051               	movlw	low (STR_97| (0+32768))
 22625  0D86  00F3               	movwf	strncmp@_r
 22626  0D87  30BA               	movlw	high (STR_97| (0+32768))
 22627  0D88  00F4               	movwf	strncmp@_r+1
 22628  0D89  3003               	movlw	3
 22629  0D8A  00F5               	movwf	strncmp@n
 22630  0D8B  3000               	movlw	0
 22631  0D8C  00F6               	movwf	strncmp@n+1
 22632  0D8D  31B7  275A  3188   	fcall	_strncmp
 22633  0D90  0871               	movf	?_strncmp,w
 22634  0D91  0472               	iorwf	?_strncmp+1,w
 22635  0D92  1903               	btfsc	3,2
 22636  0D93  2DAB               	goto	l7241
 22637  0D94  0020               	movlb	0	; select bank0
 22638  0D95  0859               	movf	vfpfcnvrt@fmt,w
 22639  0D96  0086               	movwf	6
 22640  0D97  0187               	clrf	7
 22641  0D98  3F40               	moviw [0]fsr1
 22642  0D99  00F1               	movwf	strncmp@_l
 22643  0D9A  3F41               	moviw [1]fsr1
 22644  0D9B  00F2               	movwf	strncmp@_l+1
 22645  0D9C  3039               	movlw	low (STR_101| (0+32768))
 22646  0D9D  00F3               	movwf	strncmp@_r
 22647  0D9E  30BA               	movlw	high (STR_101| (0+32768))
 22648  0D9F  00F4               	movwf	strncmp@_r+1
 22649  0DA0  3003               	movlw	3
 22650  0DA1  00F5               	movwf	strncmp@n
 22651  0DA2  3000               	movlw	0
 22652  0DA3  00F6               	movwf	strncmp@n+1
 22653  0DA4  31B7  275A  3188   	fcall	_strncmp
 22654  0DA7  0871               	movf	?_strncmp,w
 22655  0DA8  0472               	iorwf	?_strncmp+1,w
 22656  0DA9  1D03               	btfss	3,2
 22657  0DAA  2E0D               	goto	l7251
 22658  0DAB                     l7241:	
 22659                           
 22660                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
 22661  0DAB  0020               	movlb	0	; select bank0
 22662  0DAC  0859               	movf	vfpfcnvrt@fmt,w
 22663  0DAD  0086               	movwf	6
 22664  0DAE  0187               	clrf	7
 22665  0DAF  3F40               	moviw [0]fsr1
 22666  0DB0  00DB               	movwf	??_vfpfcnvrt
 22667  0DB1  3F41               	moviw [1]fsr1
 22668  0DB2  00DC               	movwf	??_vfpfcnvrt+1
 22669  0DB3  3002               	movlw	2
 22670  0DB4  075B               	addwf	??_vfpfcnvrt,w
 22671  0DB5  0084               	movwf	4
 22672  0DB6  085C               	movf	??_vfpfcnvrt+1,w
 22673  0DB7  1803               	skipnc
 22674  0DB8  0A5C               	incf	??_vfpfcnvrt+1,w
 22675  0DB9  0085               	movwf	5
 22676  0DBA  0800               	movf	0,w	;code access
 22677  0DBB  00DD               	movwf	??_vfpfcnvrt+2
 22678  0DBC  085D               	movf	??_vfpfcnvrt+2,w
 22679  0DBD  0021               	movlb	1	; select bank1
 22680  0DBE  00B2               	movwf	vfpfcnvrt@c^(0+128)
 22681                           
 22682                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
 22683  0DBF  0020               	movlb	0	; select bank0
 22684  0DC0  0859               	movf	vfpfcnvrt@fmt,w
 22685  0DC1  0086               	movwf	6
 22686  0DC2  0187               	clrf	7
 22687  0DC3  3003               	movlw	3
 22688  0DC4  0781               	addwf	1,f
 22689  0DC5  3141               	addfsr 1,1
 22690  0DC6  1803               	skipnc
 22691  0DC7  0A81               	incf	1,f
 22692                           
 22693                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 22694  0DC8  085A               	movf	vfpfcnvrt@ap,w
 22695  0DC9  0086               	movwf	6
 22696  0DCA  0187               	clrf	7
 22697  0DCB  0801               	movf	1,w
 22698  0DCC  0084               	movwf	4
 22699  0DCD  0185               	clrf	5
 22700  0DCE  3002               	movlw	2
 22701  0DCF  0781               	addwf	1,f
 22702  0DD0  0800               	movf	0,w
 22703  0DD1  0021               	movlb	1	; select bank1
 22704  0DD2  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22705  0DD3  01B4               	clrf	(vfpfcnvrt@llu+1)^(0+128)
 22706  0DD4  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22707  0DD5  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22708  0DD6  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22709  0DD7  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22710  0DD8  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22711  0DD9  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22712                           
 22713                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
 22714  0DDA  0020               	movlb	0	; select bank0
 22715  0DDB  0858               	movf	vfpfcnvrt@fp+1,w
 22716  0DDC  00B1               	movwf	xtoa@fp+1
 22717  0DDD  0857               	movf	vfpfcnvrt@fp,w
 22718  0DDE  00B0               	movwf	xtoa@fp
 22719  0DDF  0021               	movlb	1	; select bank1
 22720  0DE0  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22721  0DE1  0020               	movlb	0	; select bank0
 22722  0DE2  00B2               	movwf	xtoa@d
 22723  0DE3  0021               	movlb	1	; select bank1
 22724  0DE4  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22725  0DE5  0020               	movlb	0	; select bank0
 22726  0DE6  00B3               	movwf	xtoa@d+1
 22727  0DE7  0021               	movlb	1	; select bank1
 22728  0DE8  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22729  0DE9  0020               	movlb	0	; select bank0
 22730  0DEA  00B4               	movwf	xtoa@d+2
 22731  0DEB  0021               	movlb	1	; select bank1
 22732  0DEC  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22733  0DED  0020               	movlb	0	; select bank0
 22734  0DEE  00B5               	movwf	xtoa@d+3
 22735  0DEF  0021               	movlb	1	; select bank1
 22736  0DF0  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22737  0DF1  0020               	movlb	0	; select bank0
 22738  0DF2  00B6               	movwf	xtoa@d+4
 22739  0DF3  0021               	movlb	1	; select bank1
 22740  0DF4  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22741  0DF5  0020               	movlb	0	; select bank0
 22742  0DF6  00B7               	movwf	xtoa@d+5
 22743  0DF7  0021               	movlb	1	; select bank1
 22744  0DF8  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22745  0DF9  0020               	movlb	0	; select bank0
 22746  0DFA  00B8               	movwf	xtoa@d+6
 22747  0DFB  0021               	movlb	1	; select bank1
 22748  0DFC  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22749  0DFD  0020               	movlb	0	; select bank0
 22750  0DFE  00B9               	movwf	xtoa@d+7
 22751  0DFF  0021               	movlb	1	; select bank1
 22752  0E00  0832               	movf	vfpfcnvrt@c^(0+128),w
 22753  0E01  0020               	movlb	0	; select bank0
 22754  0E02  00DB               	movwf	??_vfpfcnvrt
 22755  0E03  085B               	movf	??_vfpfcnvrt,w
 22756  0E04  00BA               	movwf	xtoa@x
 22757  0E05  3199  21F2         	fcall	_xtoa
 22758  0E07  0020               	movlb	0	; select bank0
 22759  0E08  0831               	movf	?_xtoa+1,w
 22760  0E09  00D8               	movwf	?_vfpfcnvrt+1
 22761  0E0A  0830               	movf	?_xtoa,w
 22762  0E0B  00D7               	movwf	?_vfpfcnvrt
 22763  0E0C  0008               	return
 22764  0E0D                     l7251:	
 22765                           
 22766                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
 22767  0E0D  0020               	movlb	0	; select bank0
 22768  0E0E  0859               	movf	vfpfcnvrt@fmt,w
 22769  0E0F  0086               	movwf	6
 22770  0E10  0187               	clrf	7
 22771  0E11  3F40               	moviw [0]fsr1
 22772  0E12  00F1               	movwf	strncmp@_l
 22773  0E13  3F41               	moviw [1]fsr1
 22774  0E14  00F2               	movwf	strncmp@_l+1
 22775  0E15  3052               	movlw	low ((STR_97+1)| (0+32768))
 22776  0E16  00F3               	movwf	strncmp@_r
 22777  0E17  30BA               	movlw	high ((STR_97+1)| (0+32768))
 22778  0E18  00F4               	movwf	strncmp@_r+1
 22779  0E19  3002               	movlw	2
 22780  0E1A  00F5               	movwf	strncmp@n
 22781  0E1B  3000               	movlw	0
 22782  0E1C  00F6               	movwf	strncmp@n+1
 22783  0E1D  31B7  275A  3188   	fcall	_strncmp
 22784  0E20  0871               	movf	?_strncmp,w
 22785  0E21  0472               	iorwf	?_strncmp+1,w
 22786  0E22  1903               	btfsc	3,2
 22787  0E23  2E3B               	goto	l7255
 22788  0E24  0020               	movlb	0	; select bank0
 22789  0E25  0859               	movf	vfpfcnvrt@fmt,w
 22790  0E26  0086               	movwf	6
 22791  0E27  0187               	clrf	7
 22792  0E28  3F40               	moviw [0]fsr1
 22793  0E29  00F1               	movwf	strncmp@_l
 22794  0E2A  3F41               	moviw [1]fsr1
 22795  0E2B  00F2               	movwf	strncmp@_l+1
 22796  0E2C  303A               	movlw	low ((STR_101+1)| (0+32768))
 22797  0E2D  00F3               	movwf	strncmp@_r
 22798  0E2E  30BA               	movlw	high ((STR_101+1)| (0+32768))
 22799  0E2F  00F4               	movwf	strncmp@_r+1
 22800  0E30  3002               	movlw	2
 22801  0E31  00F5               	movwf	strncmp@n
 22802  0E32  3000               	movlw	0
 22803  0E33  00F6               	movwf	strncmp@n+1
 22804  0E34  31B7  275A  3188   	fcall	_strncmp
 22805  0E37  0871               	movf	?_strncmp,w
 22806  0E38  0472               	iorwf	?_strncmp+1,w
 22807  0E39  1D03               	btfss	3,2
 22808  0E3A  2E9E               	goto	l7265
 22809  0E3B                     l7255:	
 22810                           
 22811                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
 22812  0E3B  0020               	movlb	0	; select bank0
 22813  0E3C  0859               	movf	vfpfcnvrt@fmt,w
 22814  0E3D  0086               	movwf	6
 22815  0E3E  0187               	clrf	7
 22816  0E3F  3F40               	moviw [0]fsr1
 22817  0E40  00DB               	movwf	??_vfpfcnvrt
 22818  0E41  3F41               	moviw [1]fsr1
 22819  0E42  00DC               	movwf	??_vfpfcnvrt+1
 22820  0E43  3001               	movlw	1
 22821  0E44  075B               	addwf	??_vfpfcnvrt,w
 22822  0E45  0084               	movwf	4
 22823  0E46  085C               	movf	??_vfpfcnvrt+1,w
 22824  0E47  1803               	skipnc
 22825  0E48  0A5C               	incf	??_vfpfcnvrt+1,w
 22826  0E49  0085               	movwf	5
 22827  0E4A  0800               	movf	0,w	;code access
 22828  0E4B  00DD               	movwf	??_vfpfcnvrt+2
 22829  0E4C  085D               	movf	??_vfpfcnvrt+2,w
 22830  0E4D  0021               	movlb	1	; select bank1
 22831  0E4E  00B2               	movwf	vfpfcnvrt@c^(0+128)
 22832                           
 22833                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
 22834  0E4F  0020               	movlb	0	; select bank0
 22835  0E50  0859               	movf	vfpfcnvrt@fmt,w
 22836  0E51  0086               	movwf	6
 22837  0E52  0187               	clrf	7
 22838  0E53  3002               	movlw	2
 22839  0E54  0781               	addwf	1,f
 22840  0E55  3141               	addfsr 1,1
 22841  0E56  1803               	skipnc
 22842  0E57  0A81               	incf	1,f
 22843                           
 22844                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 22845  0E58  085A               	movf	vfpfcnvrt@ap,w
 22846  0E59  0086               	movwf	6
 22847  0E5A  0187               	clrf	7
 22848  0E5B  0801               	movf	1,w
 22849  0E5C  0084               	movwf	4
 22850  0E5D  0185               	clrf	5
 22851  0E5E  3002               	movlw	2
 22852  0E5F  0781               	addwf	1,f
 22853  0E60  3F00               	moviw [0]fsr0
 22854  0E61  0021               	movlb	1	; select bank1
 22855  0E62  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22856  0E63  3F01               	moviw [1]fsr0
 22857  0E64  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22858  0E65  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22859  0E66  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22860  0E67  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22861  0E68  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22862  0E69  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22863  0E6A  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22864                           
 22865                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1269:      
      +                                 return xtoa(fp, llu, c);
 22866  0E6B  0020               	movlb	0	; select bank0
 22867  0E6C  0858               	movf	vfpfcnvrt@fp+1,w
 22868  0E6D  00B1               	movwf	xtoa@fp+1
 22869  0E6E  0857               	movf	vfpfcnvrt@fp,w
 22870  0E6F  00B0               	movwf	xtoa@fp
 22871  0E70  0021               	movlb	1	; select bank1
 22872  0E71  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22873  0E72  0020               	movlb	0	; select bank0
 22874  0E73  00B2               	movwf	xtoa@d
 22875  0E74  0021               	movlb	1	; select bank1
 22876  0E75  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22877  0E76  0020               	movlb	0	; select bank0
 22878  0E77  00B3               	movwf	xtoa@d+1
 22879  0E78  0021               	movlb	1	; select bank1
 22880  0E79  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22881  0E7A  0020               	movlb	0	; select bank0
 22882  0E7B  00B4               	movwf	xtoa@d+2
 22883  0E7C  0021               	movlb	1	; select bank1
 22884  0E7D  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22885  0E7E  0020               	movlb	0	; select bank0
 22886  0E7F  00B5               	movwf	xtoa@d+3
 22887  0E80  0021               	movlb	1	; select bank1
 22888  0E81  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22889  0E82  0020               	movlb	0	; select bank0
 22890  0E83  00B6               	movwf	xtoa@d+4
 22891  0E84  0021               	movlb	1	; select bank1
 22892  0E85  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22893  0E86  0020               	movlb	0	; select bank0
 22894  0E87  00B7               	movwf	xtoa@d+5
 22895  0E88  0021               	movlb	1	; select bank1
 22896  0E89  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22897  0E8A  0020               	movlb	0	; select bank0
 22898  0E8B  00B8               	movwf	xtoa@d+6
 22899  0E8C  0021               	movlb	1	; select bank1
 22900  0E8D  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22901  0E8E  0020               	movlb	0	; select bank0
 22902  0E8F  00B9               	movwf	xtoa@d+7
 22903  0E90  0021               	movlb	1	; select bank1
 22904  0E91  0832               	movf	vfpfcnvrt@c^(0+128),w
 22905  0E92  0020               	movlb	0	; select bank0
 22906  0E93  00DB               	movwf	??_vfpfcnvrt
 22907  0E94  085B               	movf	??_vfpfcnvrt,w
 22908  0E95  00BA               	movwf	xtoa@x
 22909  0E96  3199  21F2         	fcall	_xtoa
 22910  0E98  0020               	movlb	0	; select bank0
 22911  0E99  0831               	movf	?_xtoa+1,w
 22912  0E9A  00D8               	movwf	?_vfpfcnvrt+1
 22913  0E9B  0830               	movf	?_xtoa,w
 22914  0E9C  00D7               	movwf	?_vfpfcnvrt
 22915  0E9D  0008               	return
 22916  0E9E                     l7265:	
 22917                           
 22918                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 22919  0E9E  0020               	movlb	0	; select bank0
 22920  0E9F  0859               	movf	vfpfcnvrt@fmt,w
 22921  0EA0  0086               	movwf	6
 22922  0EA1  0187               	clrf	7
 22923  0EA2  3F40               	moviw [0]fsr1
 22924  0EA3  00DB               	movwf	??_vfpfcnvrt
 22925  0EA4  3F41               	moviw [1]fsr1
 22926  0EA5  00DC               	movwf	??_vfpfcnvrt+1
 22927  0EA6  085B               	movf	??_vfpfcnvrt,w
 22928  0EA7  0084               	movwf	4
 22929  0EA8  085C               	movf	??_vfpfcnvrt+1,w
 22930  0EA9  0085               	movwf	5
 22931  0EAA  0012               	moviw fsr0++
 22932  0EAB  3A78               	xorlw	120
 22933  0EAC  1903               	btfsc	3,2
 22934  0EAD  2EBD               	goto	l7269
 22935  0EAE  0859               	movf	vfpfcnvrt@fmt,w
 22936  0EAF  0086               	movwf	6
 22937  0EB0  0187               	clrf	7
 22938  0EB1  3F40               	moviw [0]fsr1
 22939  0EB2  00DB               	movwf	??_vfpfcnvrt
 22940  0EB3  3F41               	moviw [1]fsr1
 22941  0EB4  00DC               	movwf	??_vfpfcnvrt+1
 22942  0EB5  085B               	movf	??_vfpfcnvrt,w
 22943  0EB6  0084               	movwf	4
 22944  0EB7  085C               	movf	??_vfpfcnvrt+1,w
 22945  0EB8  0085               	movwf	5
 22946  0EB9  0012               	moviw fsr0++
 22947  0EBA  3A58               	xorlw	88
 22948  0EBB  1D03               	btfss	3,2
 22949  0EBC  2F1C               	goto	l7279
 22950  0EBD                     l7269:	
 22951                           
 22952                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 22953  0EBD  0859               	movf	vfpfcnvrt@fmt,w
 22954  0EBE  0086               	movwf	6
 22955  0EBF  0187               	clrf	7
 22956  0EC0  3F40               	moviw [0]fsr1
 22957  0EC1  00DB               	movwf	??_vfpfcnvrt
 22958  0EC2  3F41               	moviw [1]fsr1
 22959  0EC3  00DC               	movwf	??_vfpfcnvrt+1
 22960  0EC4  085B               	movf	??_vfpfcnvrt,w
 22961  0EC5  0084               	movwf	4
 22962  0EC6  085C               	movf	??_vfpfcnvrt+1,w
 22963  0EC7  0085               	movwf	5
 22964  0EC8  0800               	movf	0,w	;code access
 22965  0EC9  00DD               	movwf	??_vfpfcnvrt+2
 22966  0ECA  085D               	movf	??_vfpfcnvrt+2,w
 22967  0ECB  0021               	movlb	1	; select bank1
 22968  0ECC  00B2               	movwf	vfpfcnvrt@c^(0+128)
 22969                           
 22970                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 22971  0ECD  0020               	movlb	0	; select bank0
 22972  0ECE  0859               	movf	vfpfcnvrt@fmt,w
 22973  0ECF  0086               	movwf	6
 22974  0ED0  0187               	clrf	7
 22975  0ED1  3001               	movlw	1
 22976  0ED2  0781               	addwf	1,f
 22977  0ED3  3141               	addfsr 1,1
 22978  0ED4  1803               	skipnc
 22979  0ED5  0A81               	incf	1,f
 22980                           
 22981                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 22982  0ED6  085A               	movf	vfpfcnvrt@ap,w
 22983  0ED7  0086               	movwf	6
 22984  0ED8  0187               	clrf	7
 22985  0ED9  0801               	movf	1,w
 22986  0EDA  0084               	movwf	4
 22987  0EDB  0185               	clrf	5
 22988  0EDC  3002               	movlw	2
 22989  0EDD  0781               	addwf	1,f
 22990  0EDE  3F00               	moviw [0]fsr0
 22991  0EDF  0021               	movlb	1	; select bank1
 22992  0EE0  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22993  0EE1  3F01               	moviw [1]fsr0
 22994  0EE2  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22995  0EE3  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22996  0EE4  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22997  0EE5  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22998  0EE6  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22999  0EE7  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 23000  0EE8  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 23001                           
 23002                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 23003  0EE9  0020               	movlb	0	; select bank0
 23004  0EEA  0858               	movf	vfpfcnvrt@fp+1,w
 23005  0EEB  00B1               	movwf	xtoa@fp+1
 23006  0EEC  0857               	movf	vfpfcnvrt@fp,w
 23007  0EED  00B0               	movwf	xtoa@fp
 23008  0EEE  0021               	movlb	1	; select bank1
 23009  0EEF  0833               	movf	vfpfcnvrt@llu^(0+128),w
 23010  0EF0  0020               	movlb	0	; select bank0
 23011  0EF1  00B2               	movwf	xtoa@d
 23012  0EF2  0021               	movlb	1	; select bank1
 23013  0EF3  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 23014  0EF4  0020               	movlb	0	; select bank0
 23015  0EF5  00B3               	movwf	xtoa@d+1
 23016  0EF6  0021               	movlb	1	; select bank1
 23017  0EF7  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 23018  0EF8  0020               	movlb	0	; select bank0
 23019  0EF9  00B4               	movwf	xtoa@d+2
 23020  0EFA  0021               	movlb	1	; select bank1
 23021  0EFB  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 23022  0EFC  0020               	movlb	0	; select bank0
 23023  0EFD  00B5               	movwf	xtoa@d+3
 23024  0EFE  0021               	movlb	1	; select bank1
 23025  0EFF  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 23026  0F00  0020               	movlb	0	; select bank0
 23027  0F01  00B6               	movwf	xtoa@d+4
 23028  0F02  0021               	movlb	1	; select bank1
 23029  0F03  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 23030  0F04  0020               	movlb	0	; select bank0
 23031  0F05  00B7               	movwf	xtoa@d+5
 23032  0F06  0021               	movlb	1	; select bank1
 23033  0F07  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 23034  0F08  0020               	movlb	0	; select bank0
 23035  0F09  00B8               	movwf	xtoa@d+6
 23036  0F0A  0021               	movlb	1	; select bank1
 23037  0F0B  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 23038  0F0C  0020               	movlb	0	; select bank0
 23039  0F0D  00B9               	movwf	xtoa@d+7
 23040  0F0E  0021               	movlb	1	; select bank1
 23041  0F0F  0832               	movf	vfpfcnvrt@c^(0+128),w
 23042  0F10  0020               	movlb	0	; select bank0
 23043  0F11  00DB               	movwf	??_vfpfcnvrt
 23044  0F12  085B               	movf	??_vfpfcnvrt,w
 23045  0F13  00BA               	movwf	xtoa@x
 23046  0F14  3199  21F2         	fcall	_xtoa
 23047  0F16  0020               	movlb	0	; select bank0
 23048  0F17  0831               	movf	?_xtoa+1,w
 23049  0F18  00D8               	movwf	?_vfpfcnvrt+1
 23050  0F19  0830               	movf	?_xtoa,w
 23051  0F1A  00D7               	movwf	?_vfpfcnvrt
 23052  0F1B  0008               	return
 23053  0F1C                     l7279:	
 23054                           
 23055                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
 23056  0F1C  0859               	movf	vfpfcnvrt@fmt,w
 23057  0F1D  0086               	movwf	6
 23058  0F1E  0187               	clrf	7
 23059  0F1F  3F40               	moviw [0]fsr1
 23060  0F20  00F1               	movwf	strncmp@_l
 23061  0F21  3F41               	moviw [1]fsr1
 23062  0F22  00F2               	movwf	strncmp@_l+1
 23063  0F23  3067               	movlw	low (STR_115| (0+32768))
 23064  0F24  00F3               	movwf	strncmp@_r
 23065  0F25  30BA               	movlw	high (STR_115| (0+32768))
 23066  0F26  00F4               	movwf	strncmp@_r+1
 23067  0F27  3002               	movlw	2
 23068  0F28  00F5               	movwf	strncmp@n
 23069  0F29  3000               	movlw	0
 23070  0F2A  00F6               	movwf	strncmp@n+1
 23071  0F2B  31B7  275A  3188   	fcall	_strncmp
 23072  0F2E  0871               	movf	?_strncmp,w
 23073  0F2F  0472               	iorwf	?_strncmp+1,w
 23074  0F30  1903               	btfsc	3,2
 23075  0F31  2F49               	goto	l7283
 23076  0F32  0020               	movlb	0	; select bank0
 23077  0F33  0859               	movf	vfpfcnvrt@fmt,w
 23078  0F34  0086               	movwf	6
 23079  0F35  0187               	clrf	7
 23080  0F36  3F40               	moviw [0]fsr1
 23081  0F37  00F1               	movwf	strncmp@_l
 23082  0F38  3F41               	moviw [1]fsr1
 23083  0F39  00F2               	movwf	strncmp@_l+1
 23084  0F3A  3055               	movlw	low (STR_119| (0+32768))
 23085  0F3B  00F3               	movwf	strncmp@_r
 23086  0F3C  30BA               	movlw	high (STR_119| (0+32768))
 23087  0F3D  00F4               	movwf	strncmp@_r+1
 23088  0F3E  3002               	movlw	2
 23089  0F3F  00F5               	movwf	strncmp@n
 23090  0F40  3000               	movlw	0
 23091  0F41  00F6               	movwf	strncmp@n+1
 23092  0F42  31B7  275A  3188   	fcall	_strncmp
 23093  0F45  0871               	movf	?_strncmp,w
 23094  0F46  0472               	iorwf	?_strncmp+1,w
 23095  0F47  1D03               	btfss	3,2
 23096  0F48  2FAC               	goto	l7293
 23097  0F49                     l7283:	
 23098                           
 23099                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
 23100  0F49  0020               	movlb	0	; select bank0
 23101  0F4A  0859               	movf	vfpfcnvrt@fmt,w
 23102  0F4B  0086               	movwf	6
 23103  0F4C  0187               	clrf	7
 23104  0F4D  3F40               	moviw [0]fsr1
 23105  0F4E  00DB               	movwf	??_vfpfcnvrt
 23106  0F4F  3F41               	moviw [1]fsr1
 23107  0F50  00DC               	movwf	??_vfpfcnvrt+1
 23108  0F51  3001               	movlw	1
 23109  0F52  075B               	addwf	??_vfpfcnvrt,w
 23110  0F53  0084               	movwf	4
 23111  0F54  085C               	movf	??_vfpfcnvrt+1,w
 23112  0F55  1803               	skipnc
 23113  0F56  0A5C               	incf	??_vfpfcnvrt+1,w
 23114  0F57  0085               	movwf	5
 23115  0F58  0800               	movf	0,w	;code access
 23116  0F59  00DD               	movwf	??_vfpfcnvrt+2
 23117  0F5A  085D               	movf	??_vfpfcnvrt+2,w
 23118  0F5B  0021               	movlb	1	; select bank1
 23119  0F5C  00B2               	movwf	vfpfcnvrt@c^(0+128)
 23120                           
 23121                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
 23122  0F5D  0020               	movlb	0	; select bank0
 23123  0F5E  0859               	movf	vfpfcnvrt@fmt,w
 23124  0F5F  0086               	movwf	6
 23125  0F60  0187               	clrf	7
 23126  0F61  3002               	movlw	2
 23127  0F62  0781               	addwf	1,f
 23128  0F63  3141               	addfsr 1,1
 23129  0F64  1803               	skipnc
 23130  0F65  0A81               	incf	1,f
 23131                           
 23132                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 23133  0F66  085A               	movf	vfpfcnvrt@ap,w
 23134  0F67  0086               	movwf	6
 23135  0F68  0187               	clrf	7
 23136  0F69  0801               	movf	1,w
 23137  0F6A  0084               	movwf	4
 23138  0F6B  0185               	clrf	5
 23139  0F6C  3002               	movlw	2
 23140  0F6D  0781               	addwf	1,f
 23141  0F6E  3F00               	moviw [0]fsr0
 23142  0F6F  0021               	movlb	1	; select bank1
 23143  0F70  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 23144  0F71  3F01               	moviw [1]fsr0
 23145  0F72  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 23146  0F73  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 23147  0F74  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 23148  0F75  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 23149  0F76  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 23150  0F77  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 23151  0F78  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 23152                           
 23153                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1344:      
      +                                 return xtoa(fp, llu, c);
 23154  0F79  0020               	movlb	0	; select bank0
 23155  0F7A  0858               	movf	vfpfcnvrt@fp+1,w
 23156  0F7B  00B1               	movwf	xtoa@fp+1
 23157  0F7C  0857               	movf	vfpfcnvrt@fp,w
 23158  0F7D  00B0               	movwf	xtoa@fp
 23159  0F7E  0021               	movlb	1	; select bank1
 23160  0F7F  0833               	movf	vfpfcnvrt@llu^(0+128),w
 23161  0F80  0020               	movlb	0	; select bank0
 23162  0F81  00B2               	movwf	xtoa@d
 23163  0F82  0021               	movlb	1	; select bank1
 23164  0F83  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 23165  0F84  0020               	movlb	0	; select bank0
 23166  0F85  00B3               	movwf	xtoa@d+1
 23167  0F86  0021               	movlb	1	; select bank1
 23168  0F87  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 23169  0F88  0020               	movlb	0	; select bank0
 23170  0F89  00B4               	movwf	xtoa@d+2
 23171  0F8A  0021               	movlb	1	; select bank1
 23172  0F8B  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 23173  0F8C  0020               	movlb	0	; select bank0
 23174  0F8D  00B5               	movwf	xtoa@d+3
 23175  0F8E  0021               	movlb	1	; select bank1
 23176  0F8F  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 23177  0F90  0020               	movlb	0	; select bank0
 23178  0F91  00B6               	movwf	xtoa@d+4
 23179  0F92  0021               	movlb	1	; select bank1
 23180  0F93  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 23181  0F94  0020               	movlb	0	; select bank0
 23182  0F95  00B7               	movwf	xtoa@d+5
 23183  0F96  0021               	movlb	1	; select bank1
 23184  0F97  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 23185  0F98  0020               	movlb	0	; select bank0
 23186  0F99  00B8               	movwf	xtoa@d+6
 23187  0F9A  0021               	movlb	1	; select bank1
 23188  0F9B  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 23189  0F9C  0020               	movlb	0	; select bank0
 23190  0F9D  00B9               	movwf	xtoa@d+7
 23191  0F9E  0021               	movlb	1	; select bank1
 23192  0F9F  0832               	movf	vfpfcnvrt@c^(0+128),w
 23193  0FA0  0020               	movlb	0	; select bank0
 23194  0FA1  00DB               	movwf	??_vfpfcnvrt
 23195  0FA2  085B               	movf	??_vfpfcnvrt,w
 23196  0FA3  00BA               	movwf	xtoa@x
 23197  0FA4  3199  21F2         	fcall	_xtoa
 23198  0FA6  0020               	movlb	0	; select bank0
 23199  0FA7  0831               	movf	?_xtoa+1,w
 23200  0FA8  00D8               	movwf	?_vfpfcnvrt+1
 23201  0FA9  0830               	movf	?_xtoa,w
 23202  0FAA  00D7               	movwf	?_vfpfcnvrt
 23203  0FAB  0008               	return
 23204  0FAC                     l7293:	
 23205                           
 23206                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 23207  0FAC  0020               	movlb	0	; select bank0
 23208  0FAD  0859               	movf	vfpfcnvrt@fmt,w
 23209  0FAE  0086               	movwf	6
 23210  0FAF  0187               	clrf	7
 23211  0FB0  3F40               	moviw [0]fsr1
 23212  0FB1  00DB               	movwf	??_vfpfcnvrt
 23213  0FB2  3F41               	moviw [1]fsr1
 23214  0FB3  00DC               	movwf	??_vfpfcnvrt+1
 23215  0FB4  085B               	movf	??_vfpfcnvrt,w
 23216  0FB5  0084               	movwf	4
 23217  0FB6  085C               	movf	??_vfpfcnvrt+1,w
 23218  0FB7  0085               	movwf	5
 23219  0FB8  0012               	moviw fsr0++
 23220  0FB9  3A25               	xorlw	37
 23221  0FBA  1D03               	btfss	3,2
 23222  0FBB  2FD4               	goto	l7303
 23223                           
 23224                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 23225  0FBC  0859               	movf	vfpfcnvrt@fmt,w
 23226  0FBD  0086               	movwf	6
 23227  0FBE  0187               	clrf	7
 23228  0FBF  3001               	movlw	1
 23229  0FC0  0781               	addwf	1,f
 23230  0FC1  3141               	addfsr 1,1
 23231  0FC2  1803               	skipnc
 23232  0FC3  0A81               	incf	1,f
 23233                           
 23234                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 23235  0FC4  3025               	movlw	37
 23236  0FC5  00F1               	movwf	fputc@c
 23237  0FC6  3000               	movlw	0
 23238  0FC7  00F2               	movwf	fputc@c+1
 23239  0FC8  0858               	movf	vfpfcnvrt@fp+1,w
 23240  0FC9  00F4               	movwf	fputc@fp+1
 23241  0FCA  0857               	movf	vfpfcnvrt@fp,w
 23242  0FCB  00F3               	movwf	fputc@fp
 23243  0FCC  31B7  27AC         	fcall	_fputc
 23244  0FCE                     l7299:	
 23245                           
 23246                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 23247  0FCE  3001               	movlw	1
 23248  0FCF  0020               	movlb	0	; select bank0
 23249  0FD0  00D7               	movwf	?_vfpfcnvrt
 23250  0FD1  3000               	movlw	0
 23251  0FD2  00D8               	movwf	?_vfpfcnvrt+1
 23252  0FD3  0008               	return
 23253  0FD4                     l7303:	
 23254                           
 23255                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 23256  0FD4  0859               	movf	vfpfcnvrt@fmt,w
 23257  0FD5  0086               	movwf	6
 23258  0FD6  0187               	clrf	7
 23259  0FD7  3001               	movlw	1
 23260  0FD8  0781               	addwf	1,f
 23261  0FD9  3141               	addfsr 1,1
 23262  0FDA  1803               	skipnc
 23263  0FDB  0A81               	incf	1,f
 23264  0FDC  2B32               	goto	l7137
 23265  0FDD                     l7309:	
 23266                           
 23267                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 23268  0FDD  0859               	movf	vfpfcnvrt@fmt,w
 23269  0FDE  0086               	movwf	6
 23270  0FDF  0187               	clrf	7
 23271  0FE0  3F40               	moviw [0]fsr1
 23272  0FE1  00DB               	movwf	??_vfpfcnvrt
 23273  0FE2  3F41               	moviw [1]fsr1
 23274  0FE3  00DC               	movwf	??_vfpfcnvrt+1
 23275  0FE4  085B               	movf	??_vfpfcnvrt,w
 23276  0FE5  0084               	movwf	4
 23277  0FE6  085C               	movf	??_vfpfcnvrt+1,w
 23278  0FE7  0085               	movwf	5
 23279  0FE8  0800               	movf	0,w	;code access
 23280  0FE9  00DD               	movwf	??_vfpfcnvrt+2
 23281  0FEA  01DE               	clrf	??_vfpfcnvrt+3
 23282  0FEB  085D               	movf	??_vfpfcnvrt+2,w
 23283  0FEC  00F1               	movwf	fputc@c
 23284  0FED  085E               	movf	??_vfpfcnvrt+3,w
 23285  0FEE  00F2               	movwf	fputc@c+1
 23286  0FEF  0858               	movf	vfpfcnvrt@fp+1,w
 23287  0FF0  00F4               	movwf	fputc@fp+1
 23288  0FF1  0857               	movf	vfpfcnvrt@fp,w
 23289  0FF2  00F3               	movwf	fputc@fp
 23290  0FF3  31B7  27AC  3188   	fcall	_fputc
 23291                           
 23292                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 23293  0FF6  0020               	movlb	0	; select bank0
 23294  0FF7  0859               	movf	vfpfcnvrt@fmt,w
 23295  0FF8  0086               	movwf	6
 23296  0FF9  0187               	clrf	7
 23297  0FFA  3001               	movlw	1
 23298  0FFB  0781               	addwf	1,f
 23299  0FFC  3141               	addfsr 1,1
 23300  0FFD  1803               	skipnc
 23301  0FFE  0A81               	incf	1,f
 23302  0FFF  2FCE               	goto	l7299
 23303  1000                     __end_of_vfpfcnvrt:	


Data Sizes:
    Strings     504
    Constant    298
    Data        9
    BSS         105
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     80      80
    BANK1            80     79      80
    BANK2            80     69      79
    BANK3            80      2      72
    BANK4            80      0      32
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           65      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    vsnprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_23(CODE[18]), STR_22(CODE[18]), STR_21(CODE[19]), STR_20(CODE[20]), 
		 -> STR_19(CODE[20]), STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[22]), STR_14(CODE[22]), STR_13(CODE[21]), STR_12(CODE[21]), 
		 -> STR_9(CODE[15]), STR_8(CODE[32]), STR_7(CODE[15]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_3(CODE[22]), STR_2(CODE[71]), 
		 -> STR_1(CODE[40]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_121(CODE[3]), STR_117(CODE[3]), STR_112(CODE[3]), STR_108(CODE[3]), 
		 -> STR_103(CODE[4]), STR_99(CODE[4]), STR_94(CODE[3]), STR_89(CODE[3]), 
		 -> STR_84(CODE[4]), STR_79(CODE[3]), STR_74(CODE[3]), STR_69(CODE[4]), 
		 -> STR_64(CODE[3]), STR_59(CODE[3]), STR_54(CODE[4]), STR_49(CODE[3]), 
		 -> STR_45(CODE[3]), STR_40(CODE[3]), STR_36(CODE[3]), STR_31(CODE[4]), 
		 -> STR_27(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_121(CODE[3]), STR_117(CODE[3]), STR_112(CODE[3]), STR_108(CODE[3]), 
		 -> STR_103(CODE[4]), STR_99(CODE[4]), STR_94(CODE[3]), STR_89(CODE[3]), 
		 -> STR_84(CODE[4]), STR_79(CODE[3]), STR_74(CODE[3]), STR_69(CODE[4]), 
		 -> STR_64(CODE[3]), STR_59(CODE[3]), STR_54(CODE[4]), STR_49(CODE[3]), 
		 -> STR_45(CODE[3]), STR_40(CODE[3]), STR_36(CODE[3]), STR_31(CODE[4]), 
		 -> STR_27(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_23(CODE[18]), STR_22(CODE[18]), STR_21(CODE[19]), STR_20(CODE[20]), 
		 -> STR_19(CODE[20]), STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[22]), STR_14(CODE[22]), STR_13(CODE[21]), STR_12(CODE[21]), 
		 -> STR_9(CODE[15]), STR_8(CODE[32]), STR_7(CODE[15]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_3(CODE[22]), STR_2(CODE[71]), 
		 -> STR_1(CODE[40]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_23(CODE[18]), STR_22(CODE[18]), STR_21(CODE[19]), STR_20(CODE[20]), 
		 -> STR_19(CODE[20]), STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[22]), STR_14(CODE[22]), STR_13(CODE[21]), STR_12(CODE[21]), 
		 -> STR_9(CODE[15]), STR_8(CODE[32]), STR_7(CODE[15]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_3(CODE[22]), STR_2(CODE[71]), 
		 -> STR_1(CODE[40]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK4[32]), sp__logf(UNKNOWN), 
		 -> adcGain(BANK2[2]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK4[32]), sp__logf(UNKNOWN), 
		 -> adcGain(BANK2[2]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_23(CODE[18]), STR_22(CODE[18]), STR_21(CODE[19]), STR_20(CODE[20]), 
		 -> STR_19(CODE[20]), STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[22]), STR_14(CODE[22]), STR_13(CODE[21]), STR_12(CODE[21]), 
		 -> STR_9(CODE[15]), STR_8(CODE[32]), STR_7(CODE[15]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_3(CODE[22]), STR_2(CODE[71]), 
		 -> STR_1(CODE[40]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    snprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_snprintf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    S1768_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_23(CODE[18]), STR_22(CODE[18]), STR_21(CODE[19]), STR_20(CODE[20]), 
		 -> STR_19(CODE[20]), STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[22]), STR_14(CODE[22]), STR_13(CODE[21]), STR_12(CODE[21]), 
		 -> STR_9(CODE[15]), STR_8(CODE[32]), STR_7(CODE[15]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_3(CODE[22]), STR_2(CODE[71]), 
		 -> STR_1(CODE[40]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_23(CODE[18]), STR_22(CODE[18]), STR_21(CODE[19]), STR_20(CODE[20]), 
		 -> STR_19(CODE[20]), STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[22]), STR_14(CODE[22]), STR_13(CODE[21]), STR_12(CODE[21]), 
		 -> STR_9(CODE[15]), STR_8(CODE[32]), STR_7(CODE[15]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_3(CODE[22]), STR_2(CODE[71]), 
		 -> STR_1(CODE[40]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 71
		 -> STR_23(CODE[18]), STR_22(CODE[18]), STR_21(CODE[19]), STR_20(CODE[20]), 
		 -> STR_19(CODE[20]), STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[22]), STR_14(CODE[22]), STR_13(CODE[21]), STR_12(CODE[21]), 
		 -> STR_9(CODE[15]), STR_8(CODE[32]), STR_7(CODE[15]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_3(CODE[22]), STR_2(CODE[71]), 
		 -> STR_1(CODE[40]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 4
		 -> ?_snprintf(BANK1[2]), sp__logf(UNKNOWN), adcGain(BANK2[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 4
		 -> ?_snprintf(BANK1[2]), sp__logf(UNKNOWN), adcGain(BANK2[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 4
		 -> ?_snprintf(BANK1[2]), sp__logf(UNKNOWN), adcGain(BANK2[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), sp__logf(UNKNOWN), adcGain(BANK2[2]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    EUSART_Write_Text@text	PTR unsigned char  size(2) Largest target is 127
		 -> STR_24(CODE[3]), STR_11(CODE[3]), STR_10(CODE[38]), messageBuffer(BIGRAM[127]), 


Critical Paths under _main in COMMON

    _main->_EUSART_Initialize
    _watchdog_timeout_shutdown->_RGB_color
    _vfpfcnvrt->_stoa
    _vfpfcnvrt->_strncmp
    _toupper->_islower
    _stoa->_fputc
    _dtoa->___aodiv
    _abs->___aomod
    _pad->_fputs
    _fputs->_fputc
    _atoi->___wmul
    _atoi->_isdigit
    _EUSART_Write_Text->_EUSART_Write
    _setTemperatureLimitsint->___wmul
    _setShortCircuitProtection->_I2C_writeRegister
    _setOverCurrentDischargeProtection->_I2C_writeRegister
    _setCellUndervoltageProtection->_I2C_writeRegister
    _setCellUndervoltageProtection->_readRegister
    _setCellOvervoltageProtection->_I2C_writeRegister
    _setCellOvervoltageProtection->_readRegister
    _beginAFEcommunication->_I2C_writeRegister
    _beginAFEcommunication->_readRegister
    _RGB_AWAIT_AFE_CONN->_RGB_color
    _AFE_UPDATE->_enableCharging
    _AFE_UPDATE->_enableDischarging
    _updateVoltages->___fltol
    _updateTemperatures->___fltol
    _updateCurrent->___fltol
    ___flmul->__Umul8_16
    _enableDischarging->_I2C_writeRegister
    _enableDischarging->_readRegister
    _enableCharging->_I2C_writeRegister
    _enableCharging->_readRegister
    _readRegister->_read_I2C_data
    _readRegister->_send_I2C_controlByte
    _I2C_writeRegister->_send_I2C_controlByte
    _EUSART_Initialize->___aldiv
    ___aldiv->___lmul

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    _statemachine->_snprintf
    _printcellParameters->_snprintf
    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _utoa->___lodiv
    _utoa->___lomod
    _utoa->_pad
    _otoa->_pad
    _dtoa->___aodiv
    _dtoa->___aomod
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _init_AFE->_setOverCurrentDischargeProtection
    _init_AFE->_setShortCircuitProtection
    _setShortCircuitProtection->___flge
    _setOverCurrentDischargeProtection->___flge
    ___flge->___fldiv
    _setCellUndervoltageProtection->___aldiv
    _setCellOvervoltageProtection->___aldiv
    _updateVoltages->___fladd
    _updateTemperatures->___fladd
    _logf->___fladd
    ___flsub->___fladd
    ___fladd->___fldiv
    ___fltol->___fladd
    ___flneg->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _EUSART_Initialize->___aldiv
    ___aldiv->___lmul

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _printcellParameters->_snprintf
    _snprintf->_vsnprintf
    _vfprintf->_vfpfcnvrt
    _init_AFE->_setOverCurrentDischargeProtection
    _init_AFE->_setShortCircuitProtection
    _AFE_UPDATE->_updateTemperatures
    _updateVoltages->___fltol
    _updateTemperatures->_logf
    _logf->___flsub
    _updateCurrent->___fltol
    ___fltol->___flsub

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_statemachine
    _updateTemperatures->_logf

Critical Paths under _myIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _myIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _myIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _myIsr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _myIsr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _myIsr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _myIsr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _myIsr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _myIsr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _myIsr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _myIsr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _myIsr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _myIsr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _myIsr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  381400
                                              0 BANK3      2     2      0
                  _EUSART_Initialize
                          _initClock
                            _initWDT
                          _init_GPIO
                           _init_I2C
                           _init_RGB
                          _init_TMR1
                       _statemachine
          _watchdog_timeout_shutdown
 ---------------------------------------------------------------------------------
 (1) _watchdog_timeout_shutdown                            2     2      0     481
                                              3 COMMON     2     2      0
                          _RGB_color
 ---------------------------------------------------------------------------------
 (1) _statemachine                                         3     3      0  378541
                                             66 BANK2      3     3      0
                         _AFE_UPDATE
                  _EUSART_Write_Text
                 _RGB_AWAIT_AFE_CONN
                          _RGB_color
              _beginAFEcommunication
                           _init_AFE
                _printcellParameters
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _printcellParameters                                  0     0      0   72944
                  _EUSART_Write_Text
                       _readRegister
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _snprintf                                            34     4     30   62033
                                             76 BANK0      4     4      0
                                             44 BANK1     30     0     30
                       _readRegister (ARG)
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (3) _vsnprintf                                           19    12      7   56076
                                             74 BANK0      2     2      0
                                             27 BANK1     17    10      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             9     4      5   55039
                                             65 BANK0      9     4      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           46    42      4   54264
                                             55 BANK0     10     6      4
                                              0 BANK1     27    27      0
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                39    28     11    8411
                                             16 BANK0     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              8     6      2     512
                                              7 COMMON     4     2      2
                                              0 BANK0      4     4      0
                            _islower
 ---------------------------------------------------------------------------------
 (8) _islower                                              6     4      2     191
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     191
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              8     6      2     191
                                              1 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (6) _utoa                                                25    15     10    7272
                                             16 BANK0     25    15     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lomod                                             18     2     16     412
                                              1 COMMON     2     2      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___lodiv                                             26    10     16     421
                                              1 COMMON    10    10      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6    5995
                                              1 COMMON    11     5      6
 ---------------------------------------------------------------------------------
 (6) _stoa                                                23    19      4    2652
                                             10 COMMON     2     2      0
                                              0 BANK0     21    17      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _otoa                                                34    24     10    6544
                                             16 BANK0     34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                31    21     10    8126
                                             16 BANK0     31    21     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                              4 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             19     3     16     613
                                              1 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             27    11     16     625
                                              1 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 8     5      3    5656
                                             16 BANK0      6     3      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 10     5      5    5396
                                              6 BANK0     10     5      5
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     242
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                8     6      2    1969
                                             10 COMMON     2     0      2
                                              0 BANK0      6     6      0
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1577
                                              1 COMMON     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    2319
                                              7 COMMON     2     0      2
                                              0 BANK0     13    13      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              5     3      2     259
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     371
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write_Text                                    5     3      2    2321
                                              2 COMMON     5     3      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _init_AFE                                             0     0      0   75706
       _setCellOvervoltageProtection
      _setCellUndervoltageProtection
  _setOverCurrentDischargeProtection
          _setShortCircuitProtection
              _setShuntResistorValue
            _setTemperatureLimitsint
 ---------------------------------------------------------------------------------
 (3) _setTemperatureLimitsint                              8     0      8    1520
                                              0 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    1036
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _setShuntResistorValue                                4     0      4     121
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) _setShortCircuitProtection                           21    15      6   19764
                                             70 BANK0      9     3      6
                                              0 BANK1     12    12      0
                  _I2C_writeRegister
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _setOverCurrentDischargeProtection                   21    15      6   19764
                                             70 BANK0      9     3      6
                                              0 BANK1     12    12      0
                  _I2C_writeRegister
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8     626
                                             58 BANK0     12     4      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _setCellUndervoltageProtection                       21    17      4   17270
                                             18 BANK0     21    17      4
                  _I2C_writeRegister
                            ___aldiv
                             ___lmul
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _setCellOvervoltageProtection                        21    17      4   17267
                                             18 BANK0     21    17      4
                  _I2C_writeRegister
                            ___aldiv
                             ___lmul
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _beginAFEcommunication                               15    13      2   13502
                                              0 BANK0     15    13      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _RGB_AWAIT_AFE_CONN                                   1     1      0     481
                                              3 COMMON     1     1      0
                          _RGB_color
 ---------------------------------------------------------------------------------
 (2) _RGB_color                                            2     0      2     481
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _AFE_UPDATE                                           0     0      0  151039
                  _calibrate_BATTSOC
                     _enableCharging
                  _enableDischarging
                      _updateCurrent
                 _updateTemperatures
                     _updateVoltages
 ---------------------------------------------------------------------------------
 (3) _updateVoltages                                      11    11      0   32513
                                             17 BANK1     11    11      0
                            ___aldiv
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                             ___lmul
                           ___xxtofl
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8    1396
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _updateTemperatures                                  59    59      0   62842
                                             20 BANK1     59    59      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                               _logf
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) _logf                                                78    74      4   27318
                                              8 BANK1     12     8      4
                                              0 BANK2     66    66      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    6067
                                              0 BANK1      8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    5462
                                             58 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _updateCurrent                                        6     6      0   28320
                                             17 BANK1      6     6      0
                  _I2C_writeRegister
                            ___fldiv
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    2096
                                              1 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             11     7      4     967
                                             10 COMMON     2     2      0
                                              8 BANK1      9     5      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     155
                                             58 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    8033
                                              6 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     980
                                              1 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             26    18      8    3663
                                             32 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _enableDischarging                                    5     3      2   13552
                                             11 COMMON     1     1      0
                                              0 BANK0      4     2      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _enableCharging                                       5     3      2   13552
                                             11 COMMON     1     1      0
                                              0 BANK0      4     2      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _readRegister                                         6     2      4    8590
                                              5 COMMON     6     2      4
                      _read_I2C_data
                      _send_I2C_NACK
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (4) _send_I2C_NACK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _read_I2C_data                                        4     2      2       0
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (4) _I2C_writeRegister                                    6     0      6    4776
                                              5 COMMON     6     0      6
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (4) _send_I2C_stopBit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _send_I2C_startBit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _send_I2C_data                                        2     0      2     301
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _send_I2C_controlByte                                 4     0      4     602
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) _calibrate_BATTSOC                                    9     9      0     260
                                              1 COMMON     9     9      0
 ---------------------------------------------------------------------------------
 (1) _init_TMR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_RGB                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_I2C                                             1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_GPIO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initWDT                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initClock                                            0     0      0       0
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Initialize                                   18    14      4    2378
                                             10 COMMON     2     2      0
                                             18 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8    2065
                                              9 COMMON     1     1      0
                                              4 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _myIsr                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Initialize
     ___aldiv
       ___lmul (ARG)
   _initClock
     _internal_16
   _initWDT
   _init_GPIO
   _init_I2C
   _init_RGB
   _init_TMR1
   _statemachine
     _AFE_UPDATE
       _calibrate_BATTSOC
       _enableCharging
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _enableDischarging
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _updateCurrent
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___flneg
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _updateTemperatures
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _logf
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___xxtofl (ARG)
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _updateVoltages
         ___aldiv
           ___lmul (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___lmul
         ___xxtofl
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
     _EUSART_Write_Text
       _EUSART_Write
     _RGB_AWAIT_AFE_CONN
       _RGB_color
     _RGB_color
     _beginAFEcommunication
       _I2C_writeRegister
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _readRegister
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
     _init_AFE
       _setCellOvervoltageProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _setCellUndervoltageProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _setOverCurrentDischargeProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
       _setShortCircuitProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
       _setShuntResistorValue
       _setTemperatureLimitsint
         ___wmul
     _printcellParameters
       _EUSART_Write_Text
         _EUSART_Write
       _readRegister
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _snprintf
         _readRegister (ARG)
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         _vsnprintf (ARG)
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _fputc
                 _putch
               _isdigit
               _otoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _stoa
                 _fputc
                   _putch
                 _strlen
               _strncmp
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _toupper
                   _islower
     _snprintf
       _readRegister (ARG)
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _vsnprintf (ARG)
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
   _watchdog_timeout_shutdown
     _RGB_color

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4F      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     45      4F       9       98.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      2      48      11       90.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      20      13       40.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     164      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     164      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              41      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Mar 15 13:56:53 2020

          __end_of_setShortCircuitProtection 26EB                               _maxCellVoltage 01CE  
                      __end_of_send_I2C_data 3315                                 ___fldiv@aexp 0059  
                               ___fldiv@bexp 0058                               _updateVoltages 124F  
                               ___fldiv@sign 0051                           ?_calibrate_BATTSOC 0070  
                                __CFG_CP$OFF 0000                          ___wmul@multiplicand 0073  
                      _setShuntResistorValue 3332                          __Umul8_16@word_mpld 0077  
                                        l302 32F7                                          l314 32FF  
                                        l170 29AC                                          l326 331A  
                                        l350 34BD                                          l351 34C2  
                    enableDischarging@enable 0020                                          l352 34D7  
                                        l249 0801                                          l290 2805  
                                        l284 3311                                          l348 34B8  
                                        l461 2D9C                                          l296 3324  
                                        l721 373F                                          l802 223D  
                                        l733 18E4                                          l813 19F9  
                                        l718 371F                                          l742 19B0  
                                        l734 18EB                                          l817 1A14  
                                        l738 1906                                          l770 23BE  
                                        l850 1E90                                          l739 191A  
                                        l763 231E                                          l851 1E93  
                                        l764 23B3                                          l852 1E96  
                                        l781 2EA8                                          l926 33F8  
                                        l790 2F03                                          l838 1B17  
                                        l854 1EC9                                          l759 2303  
                                        l847 1E81                                          l849 1E8D  
                                        l798 2222                                          l991 2B33  
                                        _Lg1 3A2D                                          _Lg2 3A29  
                                        _Lg3 3A25                                          _Lg4 3A21  
                        __size_of_AFE_UPDATE 002C                          ??_calibrate_BATTSOC 0071  
                                        _abs 3391                               RGB_color@color 0071  
                                        _pad 3709                                 __CFG_BORV$LO 0000  
                                        wreg 0009                                 __CFG_IESO$ON 0000  
                               ___flmul@aexp 0034                                 ___flmul@bexp 0039  
     setCellOvervoltageProtection@voltage_mV 0032      setCellUndervoltageProtection@voltage_mV 0032  
                               ___flmul@sign 0033                                 ___flmul@temp 003E  
                               ___flmul@prod 003A                                 _statemachine 2936  
                               __CFG_LVP$OFF 0000                                 ___fltol@exp1 007B  
                                       l1104 29C8                                         l1026 24CE  
                                       l1107 2A16                                         ?_abs 0074  
                                       l1127 28B1                                         l1231 06D3  
                                       l1039 2209                                         l1304 1C9B  
                                       l1305 1CB3                                         l1233 06B6  
                                       l1401 2C0D                                         l1307 1CC0  
                                       l1227 0640                                         l1261 07B5  
                                       l1335 1242                                         l1159 2A94  
                                       l1248 0756                                         l1361 1827  
                                       l1169 2925                                         l1283 1B94  
                                       l1269 07CD                                         l1374 1871  
                                       l1375 187B                                         l1367 185D  
                                       l1528 34A8                                         l7001 1F0E  
                                       l7003 1F17                                         l7021 1F82  
                                       ?_pad 0026                                         l7023 1F92  
                                       l7031 1FC5                                         l7041 24E0  
                                       l7025 1F9B                                         l7009 1F41  
                                       l8011 3591                                         l6411 37B8  
                                       l7141 0B36                                         l7109 09E8  
                                       l7053 2558                                         l7045 250D  
                                       l8015 359C                                         l6415 37DF  
                                       l6511 2417                                         l7303 0FD4  
                                       l7207 0C66                                         l7143 0AD4  
                                       l7119 0A40                                         l8041 2B54  
                                       l8033 2B44                                         l8113 289F  
                                       l6409 37B4                                         l6433 337E  
                                       l7241 0DAB                                         l7217 0CC6  
                                       l7137 0B32                                         l7129 0A9F  
                                       l7081 08E0                                         l7065 0843  
                                       l7057 2586                                         l8051 2B82  
                                       l8043 2B62                                         l8123 28BE  
                                       l8115 28AD                                         l8203 2691  
                                       l6427 07D9                                         l6435 338A  
                                       l6451 371D                                         l6515 243E  
                                       l6603 28DA                                         l7251 0E0D  
                                       l7227 0D1E                                         l7155 0AF4  
                                       l7341 0618                                         l6461 374B  
                                       l6517 2442                                         l6701 2316  
                                       l6605 28E9                                         l7237 0D7D  
                                       l7077 08B3                                         l7069 0862  
                                       l7309 0FDD                                         l8141 2AD4  
                                       l8133 2AB8                                         l8055 2B8D  
                                       l7407 06BE                                         l7335 060D  
                                       l8215 26A1                                         l6447 3715  
                                       l6527 2459                                         l7255 0E3B  
                                       l7167 0B13                                         l8151 2B12  
                                       l7601 1B89                                         l7505 07C5  
                                       l7433 06F3                                         l7425 06E1  
                                       l7409 06C0                                         l7417 06CE  
                                       l8313 2FE0                                         l8073 29FC  
                                       l8241 27A6                                         l6457 3721  
                                       l6537 24A1                                         l6529 2468  
                                       l6561 219D                                         l6553 2190  
                                       l6609 2919                                         l6801 2280  
                                       l7265 0E9E                                         l7089 0929  
                                       l8153 2B16                                         l8059 2B9B  
                                       l7435 06F5                                         l7443 0704  
                                       l7363 0638                                         l7339 0610  
                                       l8163 34C7                                         l8235 26FA  
                                       l8219 26CB                                         l6619 3455  
                                       l6627 3533                                         l6539 24AD  
                                       l6563 21AC                                         l6811 22E1  
                                       l7283 0F49                                         l7187 0BCF  
                                       l7099 0988                                         l8155 2B1D  
                                       l8139 2ACC                                         l7701 1CBC  
                                       l7621 1BBF                                         l7605 1B8C  
                                       l8093 2871                                         l7509 07C9  
                                       l7461 0768                                         l7453 074E  
                                       l8309 2FB8                                         l8069 29E2  
                                       l8253 27B8                                         l6493 33F2  
                                       l8181 33D8                                         l6901 2BC5  
                                       l6629 353C                                         l6549 2169  
                                       l6709 2365                                         l6813 225C  
                                       l6821 22E6                                         l7293 0FAC  
                                       l7269 0EBD                                         l7197 0C08  
                                       l7615 1BB3                                         l7519 34A2  
                                       l7359 0635                                         l6911 2BEE  
                                       l6567 21DC                                         l6655 1915  
                                       l6735 23D7                                         l6719 2340  
                                       l6583 2A40                                         l6831 1A0C  
                                       l7279 0F1C                                         l8353 2005  
                                       l7641 1C06                                         l7721 103D  
                                       l8097 287A                                         l7369 064A  
                                       l8257 27E0                                         l6569 21E8  
                                       l6681 19C4                                         l6649 18FE  
                                       l6761 2EB9                                         l6593 2A88  
                                       l6585 2A4F                                         l6841 1A3C  
                                       l8363 2044                                         l8435 367B  
                                       l8427 36B2                                         l7651 1C24  
                                       l7811 11D8                                         l7803 11AA  
                                       l7723 103F                                         l7483 0787  
                                       l7475 077C                                         l8443 34EA  
                                       l8283 20F7                                         l6915 2C11  
                                       l6907 2BD5                                         l6691 19DC  
                                       l6659 1947                                         l6747 2E81  
                                       l7299 0FCE                                         l7555 355F  
                                       l8611 35DB                                         l8365 2053  
                                       l7581 1B65                                         l7805 11C1  
                                       l7741 1062                                         l7725 1047  
                                       l8381 2E58                                         l7469 0775  
                                       l7477 077E                                         l8453 2CF3  
                                       l8197 25E7                                         l6925 2C40  
                                       l6909 2BDA                                         l6669 1922  
                                       l6677 19BC                                         l6765 2ECA  
                                       l6861 1AA4                                         l6845 1A56  
                                       l6837 1A24                                         l7557 357F  
                                       l8527 2CDB                                         l8359 2007  
                                       l7647 1C1F                                         l7815 11DA  
                                       l7751 1078                                         l7743 106A  
                                       l7487 0789                                         l7399 0686  
                                       l8287 211F                                         l6687 19CF  
                                       l6783 2F18                                         l6775 2EDA  
                                       l6767 2ED7                                         l7673 1C58  
                                       l7665 1C2A                                         l7649 1BE8  
                                       l7585 1B68                                         l7825 1203  
                                       l8377 2E41                                         l6785 2F25  
                                       l6953 379B                                         l6945 3794  
                                       l7667 1C41                                         l7587 1B70  
                                       l7835 122F                                         l7739 1060  
                                       l8379 2E50                                         l7931 00B6  
                                       l6779 2F07                                         l6947 376F  
                                       l6795 2235                                         l8555 2937  
                                       l7677 1C5A                                         l7829 1218  
                                       l7853 181F                                         l6893 2BA9  
                                       l6885 1B35                                         l6869 1AE6  
                                       l8581 297D                                         l8573 2959  
                                       l7687 1C83                                         l7863 183A  
                                       l7943 0176                                         l7951 01BF  
                                       l8487 350D                                         l6967 1E83  
                                       l6983 1E9E                                         l7873 186F  
                                       l7865 184A                                         l7937 0119  
                                       l7929 009A                                         l8489 3510  
                                       l6977 1E99                                         l8577 2969  
                                       l7875 1862                                         l7859 1836  
                                       l7963 01D9                                         l6987 1ED0  
                                       l8587 2994                                         l8781 1EB7  
                                       l7887 1896                                         l8783 2BE6  
                                       l6999 1EFE                                         l8785 34CC  
                                       l8779 299E                                         STR_1 3849  
                               __CFG_WDTE$ON 0000                                         STR_2 3802  
                                       STR_3 38ED                                         STR_4 3957  
                                       STR_5 3918                                         STR_6 392D  
                                       STR_7 39EB                                         STR_8 38B7  
                                       STR_9 39FA                                         _BRGH 0CF2  
                                       _CREN 0CEC                   enableDischarging@sys_ctrl2 007B  
                                       u8015 33F9                                         u9000 2C26  
                                       u8025 33FE                                         _SCS0 04C8  
                                       u8115 248E                                         _SCS1 04C9  
                                       u8215 21CA                                         u8080 2449  
                                       u8250 2A30                                         u9130 1F33  
                                       u9140 1F34                                         u8325 2907  
                                       u8425 18F6                                         u8370 18BA  
                                       u8380 18BB                                         u9180 1FB7  
                                       u8285 2A75                                         u8630 2E70  
                                       u7910 33B7                                         u9190 1FB8  
                                       u7815 37DD                                         u8455 19BA  
                                       u7920 33B8                                         u7840 33CE  
                                       u7905 339A                                         u8545 230E  
                                       u7930 3472                                         u7850 33CF  
                                       u8475 1936                                         u8555 2397  
                                       u8715 2F23                                         u7940 3473  
                                       u8485 1942                                         u8565 23BC  
                                       u8805 1A04                                         u9630 06A5  
                                       u7950 1011                                         u8830 1A6D  
                                       u8735 222D                                         u9640 06A6  
                                       u7960 1012                                         u8840 1A6E  
                                       u9625 069A                                         u8585 2354  
                                       u8665 2EA1                                         u8905 1AF0  
                                       u8825 1A50                                         u8595 2360  
                                       u7980 3372                                         u8860 1A8D  
                                       u7885 372B                                         u8685 2ED5  
                                       u8765 226F                                         u8925 1B06  
                                       u7990 3373                                         u8870 1A8E  
                                       u8695 2EE4                                         u8775 227B  
                                       u8935 1B12                                         u9753 0716  
                                       u9745 06F9                                         u9675 06C4  
                                       u8990 2C25                                         u8895 1ACA  
                                       _TMR1 0016                                         u9795 0769  
                                       u9975 34A9                                         u9895 07A0  
                                       _SPEN 0CEF                                         _TXEN 0CF5  
                                       _SYNC 0CF4                  ??_watchdog_timeout_shutdown 0073  
                               __CFG_WRT$OFF 0000                                         abs@a 0074  
                                       _dbuf 0220                               ?_updateCurrent 0070  
                                       _atoi 2BA4                                         _ctoa 3526  
                                       _main 35BA                                         _dtoa 189F  
                                       _logf 0069                                         _prec 0167  
                                       _otoa 22FC                                         _nout 01CA  
                                       pad@i 002C                                         pad@p 0029  
                                       fsr0h 0005                                         fsr1h 0007  
                                       indf0 0000                                         fsr0l 0004  
                                       indf1 0001                                         fsr1l 0006  
                                       pad@w 002E                                         _stoa 2E66  
                                       btemp 007E                                         _utoa 221B  
                                       _xtoa 19F2                                         start 001E  
                  __end_of_calibrate_BATTSOC 2063                              ___fldiv@new_exp 0052  
                     __end_of_updateVoltages 1527                     __end_of_send_I2C_stopBit 3303  
                          _enableDischarging 368E                                        ??_abs 0076  
                                      ??_pad 002B                         _send_I2C_controlByte 331E  
                              ?_EUSART_Write 0070                           ?_enableDischarging 0020  
                              ___fltol@sign1 007A                              __end_of___aldiv 2BA4  
                            __end_of___aodiv 24E0                                        ?_atoi 0077  
                                      ?_ctoa 0030                              __end_of___fladd 07D5  
                                      ?_main 0070                                        ?_dtoa 0030  
                            __end_of___aomod 221B                I2C_writeRegister@slaveAddress 0075  
                                      ?_logf 00A8                              __end_of___fldiv 1CC5  
                            __end_of___flneg 3332                                        STR_10 3871  
                                      STR_20 3980                                        STR_21 3994  
                                      STR_13 3903                                        STR_22 39A7  
                                      STR_14 38D7                                        STR_31 3A41  
                                      STR_23 39B9                                        STR_40 3A42  
                                      STR_25 3A3D                                        STR_18 3942  
                                      STR_27 3A3D                                        STR_43 3A58  
                                      STR_19 396C                                        STR_36 3A3E  
                                      STR_52 3A49                                        STR_45 3A58  
                                      STR_29 3A41                                        STR_54 3A49  
                                      STR_62 3A61                                        STR_47 3A5B  
                                      STR_64 3A61                                        STR_49 3A5B  
                                      STR_74 3A46                                        STR_82 3A4D  
                                      STR_59 3A4A                                        STR_67 3A45  
                                      STR_84 3A4D                                        STR_92 3A64  
                                      STR_69 3A45                                        STR_77 3A5E  
                                      STR_94 3A64                                        STR_79 3A5E  
                            __end_of___flmul 124F                                        STR_89 3A4E  
                                      STR_97 3A51                                        ?_otoa 0030  
                                      STR_99 3A51                              __end_of___flsub 3621  
                            __end_of___fltol 28CD                                        ?_stoa 0020  
                                      ?_utoa 0030                                        u10225 1C2D  
                                      u11105 28A0                                        u10315 1C71  
                                      u10155 1BF0                                        u10325 1C8C  
                                      u10245 1C36                                        u10165 1BF7  
                                      u11205 2B09                                        u10335 1CA5  
                                      u11135 28B5                                        u10185 1C00  
                                      u10505 11B6                                        u11305 20D1  
                                      u10195 1C14                                        u10435 10EE  
                                      u11075 2883                                        u11315 210F  
                            __end_of___lodiv 2AA5                                        u10445 111D  
                                      u11245 26BA                                        u10455 1173  
                                      u11335 2F99                                        ?_xtoa 0030  
                                      u11440 34E0                                        u10465 118A  
                                      u11505 2D6F                                        u11345 2FD0  
                                      u11450 34E1                                        u10475 1199  
                                      u11460 34EF                                        u11525 2C4F  
                                      u11365 2028                                        u10485 11AD  
                                      u10725 1883                                        u10645 1843  
                                      u11285 27D1                                        u11470 34F0  
                                      u11535 2C66                                        u11375 2051  
                                      u10575 11F1                                        u10815 012A  
                                      u11385 2060                                        u10585 120C  
                                      u10665 1857                                        u11617 35E4  
                                      u11555 2C9C                                        u10595 1222  
                                      u11627 3434                                        u11565 2CB3  
                                      u10685 1869                                        u11485 2D09  
                                      u11637 2976                                        u10935 2B57  
                                      u11647 335E                                        u10855 01F1  
                                      u10775 00AA                                        u10955 2B63  
                                      u10795 00C7                                        u10875 359D  
                                      u10965 2B77                                        u10885 35A4  
                                      u10975 2B83                              __end_of___lomod 2936  
                                      _IRCF0 04CB                                        _IRCF1 04CC  
                                      _IRCF2 04CD                                        _IRCF3 04CE  
                     __size_of_read_I2C_data 0010                                        i1l151 001C  
                               vfpfcnvrt@fmt 0059                                 vfpfcnvrt@llu 00B3  
                                      _SPBRG 019B                           __size_of_RGB_color 0021  
                        ___lmul@multiplicand 0075                          ??_enableDischarging 0022  
                             __CFG_FCMEN$OFF 0000                              __end_of_initWDT 32F3  
                                      _flags 0169                                        _errno 01C8  
                                      _fputc 37AC                              __end_of_isalpha 347A  
                                      _fputs 07D5                                        _myIsr 0004  
                            __end_of_isdigit 337A                                        atoi@n 002B  
                                      pad@fp 0026                                        atoi@s 0077  
                                      _width 0165                                        ctoa@c 0032  
                                      _putch 0003                                        ctoa@w 0034  
                                      dtoa@d 0032                                        dtoa@i 004D  
                                      dtoa@n 0045                                        dtoa@p 003F  
                                      dtoa@s 0043                                        dtoa@w 0041  
                            __end_of_islower 33D6                              __end_of_isspace 345D  
                                      logf@R 0120                                        logf@f 015A  
                                      logf@k 013C                                        logf@s 0146  
                                      logf@u 0156                                        logf@w 014E  
                                      logf@x 00A8                                        logf@z 014A  
         __end_of_lookupTableSamsung_voltage 30B8                   _lookupTableSamsung_voltage 305C  
                             __CFG_BOREN$OFF 0000                              __end_of_isupper 33BF  
                                      otoa@d 0032                                        otoa@i 0050  
                                      otoa@n 0048                                        otoa@p 0042  
                                      otoa@t 0044                                        otoa@w 0046  
                    enableCharging@sys_ctrl2 007B                                        stoa@i 002B  
                                      stoa@l 0033                                        stoa@p 0031  
                                      stoa@s 0022                                        stoa@w 002D  
                                      utoa@d 0032                                        utoa@i 0047  
                                      utoa@n 003F                                        utoa@p 003B  
                                      utoa@w 003D                                        status 0003  
                                      wtemp0 007E                                        xtoa@c 0055  
                                      xtoa@d 0032                                        xtoa@i 0053  
                                      xtoa@n 004B                                        xtoa@p 0047  
                                      xtoa@w 0049                                        xtoa@x 003A  
                          _SCD_delay_setting 3A19                              __end_of_strncmp 37AC  
                            __end_of_toupper 1023                             ___lodiv@dividend 0028  
                               ?_internal_16 0070                                 _toupper$1835 0079  
                             __CFG_MCLRE$OFF 0000                    __end_of_enableDischarging 36C5  
                            __initialization 0020                              ?_updateVoltages 0070  
                   updateTemperatures@adcVal 00E7        setTemperatureLimitsint@maxCharge_degC 0026  
                               __end_of_atoi 2C45                                 __end_of_ctoa 3557  
                               __end_of_main 35EC                                 __end_of_dtoa 19F2  
                               __end_of_logf 05F3                                 __end_of_otoa 23ED  
                               __end_of_stoa 2F2B                                 __end_of_utoa 22FC  
                               __end_of_xtoa 1B4B                     __end_of_UV_delay_setting 3A19  
                     ?_setShuntResistorValue 0071                       beginAFEcommunication@i 002D  
                      ?_send_I2C_controlByte 0071                               ??_EUSART_Write 0071  
                  _watchdog_timeout_shutdown 3426                               __CFG_LPBOR$OFF 0000  
                          _ATmega328_address 3800                                       ??_atoi 0020  
                                     ??_ctoa 0033                                       ??_main 01E6  
                                     ??_dtoa 003A                                       ??_logf 00AC  
                                     ??_otoa 003A                                       ??_stoa 007A  
                                     ??_utoa 003A                                       ??_xtoa 003B  
                __end_of_printcellParameters 1E5C                               __CFG_PLLEN$OFF 0000  
                           ___lodiv@quotient 0072                                ?_readRegister 0075  
                                     ?_fputc 0071                                       STR_101 3A39  
                                     ?_fputs 007A                                       STR_103 3A39  
                                     STR_112 3A3A                                       STR_121 3A55  
                                     STR_115 3A67                                       ?_myIsr 0070  
                                     STR_108 3A52                                       STR_117 3A67  
                                     STR_119 3A55                               __CFG_ZCDDIS$ON 0000  
                                     ?_putch 0070                __end_of_OCD_threshold_setting 38B7  
                            ??_updateCurrent 00B1                                       _RC1REG 0199  
                  __end_of_SCD_delay_setting 3A21                                vfpfcnvrt@done 00A2  
                               ??_AFE_UPDATE 007C                                       _TX1REG 019A  
                                     _SPLLEN 04CF       setOverCurrentDischargeProtection@i_975 00AA  
                                     _SSPADD 0212                                       _TRISC6 0476  
                                     _TRISC7 0477                                       _SSPBUF 0211  
                                     u805lld 2415                                       u816lld 2167  
                              _read_I2C_data 2801                             __end_of___xxtofl 189F  
                 __size_of_calibrate_BATTSOC 0060                               __CFG_PWRTE$OFF 0000  
                          __end_of_RGB_color 34D8                                 vfprintf@cfmt 0068  
                                     ___flge 29AD                                       ___lmul 3588  
                                  ??___aldiv 0079                                    ??___aodiv 0071  
                             _minCellVoltage 01CC                                    ??___fladd 0062  
                                  ??___aomod 0071                                       ___wmul 33F0  
                                     _ln2_hi 3A35                                    ??___fldiv 0048  
                                     _ln2_lo 3A31                                    ??___flneg 007A  
                             __CFG_STVREN$ON 0000                                    ??___flmul 002E  
                                  ??___flsub 007A                                    ??___fltol 00AC  
                                  ??___lodiv 0071                             __end_of_init_I2C 3363  
                                  ??___lomod 0071                             __end_of_init_AFE 2867  
                           __end_of_init_RGB 0800                    __end_of_ATmega328_address 3802  
                      _beginAFEcommunication 2CEE                                       pad@buf 0028  
                                     ctoa@fp 0030                                       dtoa@fp 0030  
                                     _strlen 337A                                       logf@t1 0124  
                                     logf@t2 0128                                    ??_initWDT 0071  
                                     logf@dk 0142                                       logf@ix 015E  
                                     fputc@c 0071                                       fputs@c 0022  
                                     fputs@i 0023                                       fputs@s 0025  
                                  ??_isalpha 0073                                    ??_isdigit 0073  
                         __end_of_AFE_UPDATE 3526                           __size_of__Umul8_16 001F  
                                  ??_islower 0073                                    ??_isspace 0073  
                        _updateVoltages$2078 00B4                                       otoa@fp 0030  
                             ??_readRegister 0079                                    ??_isupper 0073  
                                     stoa@cp 002F                                       stoa@fp 0020  
                                     putch@c 0070                             __end_of_vfprintf 3588  
                                     utoa@fp 0030              ??_setCellUndervoltageProtection 0036  
                           __end_of_snprintf 3426                                       xtoa@fp 0030  
                                  ??_strncmp 0077                                    ??_toupper 0020  
                                 ___flge@ff1 005A                                   ___flge@ff2 005E  
                               ___xxtofl@arg 0022                                 ___xxtofl@exp 0021  
                               ___xxtofl@val 0071                      __end_of__initialization 0065  
                             ?_read_I2C_data 0071                                   ___flneg@f1 005A  
                                 ___fltol@f1 00A8                     ?_setTemperatureLimitsint 0020  
                 __size_of_enableDischarging 0037     setTemperatureLimitsint@minDischarge_degC 0020  
                             __pcstackCOMMON 0070                       ??_send_I2C_controlByte 0075  
                               __pidataBANK3 1800                                __end_of_fputc 3800  
                              __end_of_fputs 07FB                                __end_of_myIsr 001E  
                               _cellVoltages 01AA                                __end_of_putch 0004  
                                 _batCurrent 01C0                           _RGB_AWAIT_AFE_CONN 34D8  
                     updateTemperatures@vtsx 00E9                  __size_of_updateTemperatures 02D9  
                                 _batVoltage 01C4                          ?_RGB_AWAIT_AFE_CONN 0070  
                    __size_of_enableCharging 0037                                      ??_fputc 0075  
                                    ??_fputs 0020                                      ??_myIsr 0070  
                                    ??_putch 0071            setShortCircuitProtection@delay_us 006A  
                                 __pbssBANK1 00EF                                   __pbssBANK2 0165  
                                 __pbssBANK3 01A0                                   __pbssBANK4 0220  
                       __end_of_EUSART_Write 0808                           __size_of_init_GPIO 003B  
                         __size_of_initClock 0003                           __size_of_init_TMR1 000B  
                        statemachine@success 0164                            __end_of__Umul8_16 34B7  
                                 __pmaintext 35BA                         ??_RGB_AWAIT_AFE_CONN 0073  
                       __size_of_internal_16 0009              setShortCircuitProtection@scaler 00A0  
                                    ?___flge 005A                            ?_send_I2C_stopBit 0070  
                                    ?___lmul 0071                                      ?___wmul 0071  
      setTemperatureLimitsint@minCharge_degC 0024                              __CFG_PPS1WAY$ON 0000  
                 ?_setShortCircuitProtection 0066                                   __pintentry 0004  
                     ?_beginAFEcommunication 0020                           ??_send_I2C_stopBit 0071  
                             ___lmul@product 0020                                      ?_strlen 0071  
                    _shuntResistorValue_mOhm 01B8                                    ?___xxtofl 0071  
             setShortCircuitProtection@i_966 00AA                           __size_of_vfpfcnvrt F1A4  
         __size_of_watchdog_timeout_shutdown 001B                                      _PPSLOCK 0E0F  
                     __size_of_send_I2C_NACK 0009                             ___lomod@dividend 0028  
                            ??_read_I2C_data 0073                       __size_of_send_I2C_data 0009  
                                  ?_init_I2C 0070                                    ?_init_AFE 0070  
                                  ?_init_RGB 0070         __end_of_setCellOvervoltageProtection 3000  
      __size_of_setCellOvervoltageProtection 00D5                 _setCellOvervoltageProtection 2F2B  
                           ??_updateVoltages 00B1        __end_of_setCellUndervoltageProtection 213F  
     __size_of_setCellUndervoltageProtection 00DC                _setCellUndervoltageProtection 2063  
                   readRegister@recievedData 0079                      ??_setShuntResistorValue 0075  
                         __size_of_vsnprintf 007D                         __end_of_readRegister 3657  
                                    ___aldiv 2B22                                      _adcGain 016D  
                            __size_of___flge 007C                                      ___aodiv 23ED  
                                    ___fladd 05F3                                      ___aomod 213F  
                                    ___fldiv 1B4B                                      ___flneg 3328  
                            __size_of___lmul 0032                                      ___flmul 1023  
                                    ___flsub 35EC                                      ___fltol 2867  
                            __size_of___wmul 001B                                      ___lodiv 2A29  
                                    ___lomod 28CD                                    ?_vfprintf 0061  
                                  ?_snprintf 00CC                                      _cellSOC 01A0  
                              _messageBuffer 2771                                      __ptext1 3426  
                                    __ptext2 2936                                      __ptext3 1CC5  
                                    __ptext4 340B                                      __ptext5 2AA5  
                                    __ptext6 3557                                      __ptext7 1E5C  
                                    __ptext8 19F2                                      __ptext9 1001  
                          __end_of_init_GPIO 0843                            __end_of_initClock 2003  
                          __end_of_init_TMR1 3347                              __size_of_strlen 0017  
                                  _T1CONbits 0018                                      _initWDT 32ED  
                               __size_of_abs 0017                                 __size_of_pad 0051  
                                    _isalpha 345D                                      _isdigit 3363  
                                 ??___xxtofl 0075                             ___aldiv@dividend 0028  
                                    _islower 33BF                                      _isspace 3441  
  __end_of_setOverCurrentDischargeProtection 2800   __size_of_setOverCurrentDischargeProtection 0115  
        ??_setOverCurrentDischargeProtection 006C           ?_setOverCurrentDischargeProtection 0066  
          _setOverCurrentDischargeProtection 26EB                                      _isupper 33A8  
                                    atoi@neg 0024                                      clrloop0 3348  
          __end_of_watchdog_timeout_shutdown 3441                                      _strncmp 375A  
                                    _toupper 1001                         end_of_initialization 0065  
                                 ??_init_I2C 0071                                   ??_init_AFE 007B  
                                 ??_init_RGB 0071                                      fputc@fp 0073  
                                    fputs@fp 007A                ?_setCellOvervoltageProtection 0032  
                          _EUSART_Initialize 2C45                           ?_EUSART_Initialize 0032  
                          __end_of_vfpfcnvrt 1000                                _send_I2C_NACK 3315  
                           ___aldiv@quotient 002E                   send_I2C_controlByte@RW_bit 0073  
                                    psplit$0 460090                                      psplit$1 900091  
                              _send_I2C_data 330C                                    _RGB_color 34B7  
                                 ??_vfprintf 0066                           EUSART_Initialize@x 007A  
                                 ??_snprintf 006C                                      strlen@a 0073  
                                    strlen@s 0071                          ??_EUSART_Initialize 0036  
                                ___fladd@grs 006D                             __CFG_FOSC$INTOSC 0000  
                              ___xxtofl@sign 0020                                    _TRISAbits 008C  
                                  _TRISBbits 008D                                    _TRISCbits 008E  
                                  _TRISEbits 0090                        __size_of_EUSART_Write 0008  
                             _enableCharging 3657                            __end_of_vsnprintf 2B22  
                                ___fldiv@grs 0054                                  ___fldiv@rem 004D  
               __size_of_printcellParameters 0197                __end_of_SCD_threshold_setting 39EB  
                                  _RXPPSbits 0E24                            _I2C_writeRegister 347A  
                                ___flmul@grs 0035                       _lookupTableSamsung_SOC 3000  
                  __end_of_EUSART_Initialize 2CEE                        __end_of_updateCurrent 2E66  
                      _OCD_threshold_setting 3897                           ?_I2C_writeRegister 0075  
           beginAFEcommunication@commSuccess 002B                               ?_send_I2C_NACK 0070  
                   readRegister@slaveAddress 0075               ?_setCellUndervoltageProtection 0032  
                             ?_send_I2C_data 0071                          ??_I2C_writeRegister 007B  
                                 ?_RGB_color 0071                               __end_of___flge 2A29  
                             __end_of___lmul 35BA                                  vfpfcnvrt@ap 005A  
                                vfpfcnvrt@cp 00A0                                  vfpfcnvrt@fp 0057  
                                vfpfcnvrt@ll 00A8                               __end_of___wmul 340B  
                                vfpfcnvrt@vp 00B0                               __end_of_ln2_hi 3A39  
                             __end_of_ln2_lo 3A35                                 _EUSART_Write 0800  
                I2C_writeRegister@regAddress 0077                setShuntResistorValue@res_mOhm 0071  
                     __end_of_enableCharging 368E             __size_of_setTemperatureLimitsint 0044  
                             __end_of_strlen 3391                          start_initialization 0020  
                            ___lodiv@divisor 0020                              ___lodiv@counter 007A  
                        _thermistorBetaValue 01E4                                  __end_of_Lg1 3A31  
                                __end_of_Lg2 3A2D                                  __end_of_Lg3 3A29  
                                __end_of_Lg4 3A25                                ?_statemachine 0070  
                                __end_of_abs 33A8                                  __end_of_pad 375A  
                          _minCellTempCharge 01D6                setCellOvervoltageProtection@i 0045  
                       _maxCellTempDischarge 01D0                         updateVoltages@adcVal 00B8  
                       _minCellTempDischarge 01D4                            pnum$text7_split_1 0090  
                          pnum$text7_split_2 0091                    __end_of_I2C_writeRegister 3498  
     _setOverCurrentDischargeProtection$2077 00A4          setCellOvervoltageProtection@delay_s 0034  
       setCellUndervoltageProtection@delay_s 0034                            _EUSART_Write_Text 33D6  
                      __size_of_readRegister 0036                           ?_EUSART_Write_Text 0072  
                    ??_beginAFEcommunication 0022                                  vfprintf@fmt 0063  
                                   ??___flge 0062                                     ??___lmul 0079  
                                   ??___wmul 0075               ??_setCellOvervoltageProtection 0036  
        setCellOvervoltageProtection@ov_trip 0044                                    __Umul8_16 3498  
                ??_setShortCircuitProtection 006C                                  __pdataBANK3 01DD  
                        ??_EUSART_Write_Text 0074                __size_of_send_I2C_controlByte 000A  
       setCellUndervoltageProtection@uv_trip 0044                   __end_of_updateTemperatures 1800  
                                   ??_strlen 0073                                    ___fladd@a 005E  
                                  ___fladd@b 005A                                 vsnprintf@cnt 00C4  
                               vsnprintf@fmt 00BF                                    ___fldiv@a 0040  
                                  ___fldiv@b 0044                                  __pbssBIGRAM 2771  
                            ?_enableCharging 0020                         enableCharging@enable 0020  
                                  _adcOffset 016B                                    ___flmul@a 002A  
                                  ___flmul@b 0026                                  __pbssCOMMON 007C  
                                  ___flsub@a 00A0                                    ___flsub@b 00A4  
                             ??_statemachine 0162                                    ___latbits 0003  
           send_I2C_controlByte@BlockAddress 0071                                   myIsr@count 01D8  
                              __pcstackBANK0 0020                                __pcstackBANK1 00A0  
                              __pcstackBANK2 0120                                __pcstackBANK3 01E6  
                           ___aodiv@dividend 0028                    __size_of_send_I2C_stopBit 0008  
                                snprintf@fmt 00D0                            __size_of___xxtofl 0096  
                               _readRegister 3621     setTemperatureLimitsint@maxDischarge_degC 0022  
                      updateTemperatures@tmp 00E3                        updateTemperatures@rts 00EB  
                  __end_of_EUSART_Write_Text 33F0                           calibrate_BATTSOC@i 0076  
                         calibrate_BATTSOC@j 0078                   __size_of_EUSART_Initialize 00A9  
                              ??_internal_16 0071                                    _atoi$1700 0026  
                                  _atoi$1701 002A                                    _atoi$1702 0028  
                           _OV_delay_setting 3A09                            __size_of_init_I2C 0010  
                      I2C_writeRegister@data 0079                              ??_send_I2C_NACK 0071  
                          __size_of_init_AFE 0056                            __size_of_init_RGB 0005  
                          _send_I2C_startBit 32F3                                    _dtoa$1249 003D  
                            ??_send_I2C_data 0073                  __size_of_RGB_AWAIT_AFE_CONN 0022  
             __size_of_setShuntResistorValue 000A                                     ?___aldiv 0024  
                                   ?___aodiv 0020                           ?_send_I2C_startBit 0070  
                                   ?___fladd 005A                __end_of_setShuntResistorValue 333C  
                                   ?___aomod 0020                                     ?___fldiv 0040  
                                   ?___flneg 005A                             ___aodiv@quotient 0074  
                                   ?___flmul 0026                                     ?___flsub 00A0  
                                   ?___fltol 00A8                                     ?___lodiv 0020  
                                   ?___lomod 0020                                  ??_RGB_color 0073  
                                 ?__Umul8_16 0071                    EUSART_Initialize@baudrate 0032  
                                  _logf$2090 0152                                    _logf$2091 012C  
                                  _logf$2092 0130                                    _logf$2093 0134  
                                  _logf$2094 0138                            __size_of_vfprintf 0031  
                        ??_send_I2C_startBit 0071                            __size_of_snprintf 001B  
                            ___lomod@divisor 0020                                     ?_initWDT 0070  
                            ___lomod@counter 0072                                     ?_isalpha 0071  
                                   ?_isdigit 0071                                     ?_islower 0071  
                                   ?_isspace 0071                                    _init_GPIO 0808  
                                   ?_isupper 0071                                    _initClock 2000  
                                  _init_TMR1 333C                                    _currState 01DC  
                  _setShortCircuitProtection 25DA                   __size_of_I2C_writeRegister 001E  
                             __size_of_fputc 0054                               __size_of_fputs 0026  
                             __size_of_myIsr 001A                                     ?_strncmp 0071  
                                   ?_toupper 0077                               __size_of_putch 0001  
                            ___aldiv@divisor 0024                        __end_of_read_I2C_data 2811  
                            ___aldiv@counter 002C                               ___wmul@product 0075  
                                   _LATAbits 010C                                     _LATEbits 0110  
                  __end_of_send_I2C_startBit 32FB                                    clear_ram0 3347  
                                  _tmr1_flag 01D9                                     _PIE1bits 0091  
         setOverCurrentDischargeProtection@i 00A8                                     _PIR1bits 0011  
                 setShortCircuitProtection@i 00A8                          __end_of_internal_16 330C  
                        _printcellParameters 1CC5                                    _vfpfcnvrt 1E5C  
                                  _xtoa$1285 0043                                    _xtoa$1286 0045  
                          ___wmul@multiplier 0071                      _setTemperatureLimitsint 36C5  
                                 ?_init_GPIO 0070                                   ?_initClock 0070  
                                 ?_init_TMR1 0070                                 _isspace$1727 0075  
                      send_I2C_data@databyte 0071                                   vfpfcnvrt@c 00B2  
                          ___lmul@multiplier 0071                         ?_printcellParameters 0070  
                      _temperatureThermistor 01BC                   __size_of_EUSART_Write_Text 001A  
                 ?_watchdog_timeout_shutdown 0070                                    _vsnprintf 2AA5  
                                 _AFE_UPDATE 34FA                            _OCD_delay_setting 39CB  
                       __end_of_statemachine 29AD                                   vfprintf@ap 0065  
                                 vfprintf@fp 0061                                  ??__Umul8_16 0073  
                           __size_of___aldiv 0082                             __size_of___aodiv 00F3  
                           __size_of___fladd 01E2                      __size_of_updateVoltages 02D8  
                           __size_of___aomod 00DC                             __size_of___fldiv 017A  
                           __size_of___flneg 000A               _setShortCircuitProtection$2076 00A4  
                                vsnprintf@ap 00C1                             __size_of___flmul 022C  
                           __size_of___flsub 0035                             __size_of___fltol 0066  
                     readRegister@regAddress 0077                             __size_of___lodiv 007C  
                           __size_of___lomod 0069                                   ?_vfpfcnvrt 0057  
                                 snprintf@ap 006F                              ___aodiv@divisor 0020  
                            ___aodiv@counter 0072                                   _ANSELBbits 018D  
                                 _ANSELCbits 018E                                     ___xxtofl 1809  
setOverCurrentDischargeProtection@current_mA 0066                             __size_of_initWDT 0006  
                           __size_of_isalpha 001D                             __size_of_isdigit 0017  
             __end_of_lookupTableSamsung_SOC 305C                             _send_I2C_stopBit 32FB  
                           __size_of_islower 0017                             __size_of_isspace 001C  
                                   __ptext10 33BF                                     __ptext11 33A8  
                                   __ptext20 3391                                     __ptext12 345D  
                                   __ptext21 213F                                     __ptext13 221B  
                                   __ptext30 3441                                     __ptext22 23ED  
                                   __ptext14 28CD                                     __ptext31 3363  
                                   __ptext23 3526                                     __ptext15 2A29  
                                   __ptext40 29AD                                     __ptext32 33D6  
                                   __ptext24 3709                                     __ptext16 375A  
                                   __ptext41 2063                                     __ptext33 0800  
                                   __ptext25 337A                                     __ptext17 2E66  
                                   __ptext50 0069                                     __ptext42 2F2B  
                                   __ptext34 2811                                     __ptext26 07D5  
                                   __ptext18 22FC                                     __ptext51 35EC  
                                   __ptext43 2CEE                                     __ptext35 36C5  
                                   __ptext27 37AC                                     __ptext19 189F  
                                   __ptext60 368E                                     __ptext52 05F3  
                                   __ptext44 34D8                                     __ptext36 33F0  
                                   __ptext28 0003                                     __ptext61 3657  
                                   __ptext53 2DA2                                     __ptext45 34B7  
                                   __ptext37 3332                                     __ptext29 2BA4  
                                   __ptext70 2003                                     __ptext62 3621  
                                   __ptext54 1809                                     __ptext46 34FA  
                                   __ptext38 25DA                                     __ptext71 333C  
                                   __ptext63 3315                                     __ptext55 2867  
                                   __ptext47 124F                                     __ptext39 26EB  
                                   __ptext72 07FB                                     __ptext64 2801  
                                   __ptext56 3328                                     __ptext48 3588  
                                   __ptext73 3353                                     __ptext65 347A  
                                   __ptext57 1023                                     __ptext49 1527  
                                   __ptext74 0808                                     __ptext66 32FB  
                                   __ptext58 3498                                     __ptext75 32ED  
                                   __ptext67 32F3                                     __ptext59 1B4B  
                                   __ptext76 2000                                     __ptext68 330C  
                                   __ptext77 3303                                     __ptext69 331E  
                                   __ptext78 2C45                                     __ptext79 2B22  
                           __size_of_isupper 0017                        ??_printcellParameters 007C  
             setCellUndervoltageProtection@i 0045                    __end_of_OCD_delay_setting 39DB  
                           __size_of_strncmp 0052                             __size_of_toupper 0022  
                                 ?_vsnprintf 00BB                          updateCurrent@adcVal 00B5  
                                   _init_I2C 3353                                     _init_AFE 2811  
                                   _init_RGB 07FB                                __size_of_atoi 00A1  
                              __size_of_ctoa 0031                                __size_of_main 0032  
                              __size_of_dtoa 0153                                _SSPDATPPSbits 0E21  
                                  pnum$text7 0046                                __size_of_logf 058A  
                              __size_of_otoa 00F1                        _SCD_threshold_setting 39DB  
                              __size_of_stoa 00C5                                __size_of_utoa 00E1  
                 __size_of_send_I2C_startBit 0008                                __size_of_xtoa 0159  
                                _internal_16 3303                                   _RB2PPSbits 0E9A  
                                 _RC1STAbits 019D                                    stoa@F1152 01DD  
                                 _RC4PPSbits 0EA4               __size_of_beginAFEcommunication 00B4  
                              _SSPCLKPPSbits 0E20                __end_of_beginAFEcommunication 2DA2  
                                   int$flags 007E                                   _RC5PPSbits 0EA5  
                                   _protect1 00EF                                     _protect2 01DB  
                                   _protect3 01DA                    ??_setTemperatureLimitsint 0077  
                                   _vfprintf 3557                             ??_enableCharging 0022  
                                   _snprintf 340B                             ___aomod@dividend 0028  
                                   logf@F469 01B4                       __size_of_updateCurrent 00C4  
  setOverCurrentDischargeProtection@delay_ms 006A                     __end_of_OV_delay_setting 3A11  
                             _vfpfcnvrt$1300 00A4                               _vfpfcnvrt$1301 00A6  
                                 _INTCONbits 000B                                  ??_init_GPIO 0071  
                                ??_initClock 0071                                  ??_init_TMR1 0071  
                                   logf@hfsq 013E                               __pstringtext10 3A25  
                             __pstringtext11 3A29                               __pstringtext20 38ED  
                             __pstringtext12 3A2D                               __pstringtext21 3903  
                             __pstringtext13 3A31                               __pstringtext30 39B9  
                             __pstringtext22 3918                               __pstringtext14 3A35  
                             __pstringtext31 39EB                               __pstringtext23 392D  
                             __pstringtext15 3800                               __pstringtext40 3A55  
                             __pstringtext32 39FA                               __pstringtext24 3942  
                             __pstringtext16 3849                               __pstringtext41 3A58  
                             __pstringtext33 3A39                               __pstringtext25 3957  
                             __pstringtext17 3871                               __pstringtext42 3A5B  
                             __pstringtext34 3A3D                               __pstringtext26 396C  
                             __pstringtext18 38B7                               __pstringtext43 3A5E  
                             __pstringtext35 3A41                               __pstringtext27 3980  
                             __pstringtext19 38D7                               __pstringtext44 3A61  
                             __pstringtext36 3A45                               __pstringtext28 3994  
                             __pstringtext45 3A64                               __pstringtext37 3A49  
                             __pstringtext29 39A7                               __pstringtext46 3A67  
                             __pstringtext38 3A4D                               __pstringtext47 0000  
                             __pstringtext39 3A51                                     isalpha@c 0071  
                                   isdigit@c 0071                                   vsnprintf@f 00C6  
                                 vsnprintf@n 00BD                                   vsnprintf@s 00BB  
                         _updateTemperatures 1527                             _UV_delay_setting 3A11  
                                  snprintf@n 00CE                                    snprintf@s 00CC  
               __end_of_send_I2C_controlByte 3328                                     intlevel1 0000  
        setShortCircuitProtection@current_mA 0066                                     islower@c 0071  
                                ?_AFE_UPDATE 0070                                     isspace@c 0071  
                        ?_updateTemperatures 0070                            __CFG_CLKOUTEN$OFF 0000  
                                _PPSLOCKbits 0E0F                                     isupper@c 0071  
         __size_of_setShortCircuitProtection 0111                                    strncmp@_l 0071  
                                  strncmp@_r 0073                            _maxCellTempCharge 01D2  
                            ___aomod@divisor 0020                                  ??_vfpfcnvrt 005B  
                                   stoa@nuls 0024                              ___aomod@counter 0072  
                              __pstringtext1 3000                                __pstringtext2 305C  
                              __pstringtext3 3897                                __pstringtext4 39CB  
                              __pstringtext5 39DB                                __pstringtext6 3A09  
                              __pstringtext7 3A11                                __pstringtext8 3A19  
                              __pstringtext9 3A21                         ??_updateTemperatures 00B4  
                     __Umul8_16@multiplicand 0071                               _vsnprintf$1872 00C2  
                                   strncmp@l 0078                                     strncmp@n 0075  
                                   strncmp@r 007A                                     toupper@c 0077  
                      EUSART_Write_Text@text 0072                                 ___aldiv@sign 002D  
                                _SSPCON2bits 0216                                   _WDTCONbits 0097  
                              ___fladd@signs 006A              __end_of_setTemperatureLimitsint 3709  
                         EUSART_Write@txData 0071                                 ___aodiv@sign 0073  
    setOverCurrentDischargeProtection@scaler 00A0                                  ??_vsnprintf 006A  
                    _updateTemperatures$2080 00BB                      _updateTemperatures$2081 00BF  
                    _updateTemperatures$2082 00C3                      _updateTemperatures$2083 00C7  
                    _updateTemperatures$2084 00CB                      _updateTemperatures$2085 00CF  
                    _updateTemperatures$2086 00D3                      _updateTemperatures$2087 00D7  
                    _updateTemperatures$2079 00B7                      _updateTemperatures$2088 00DB  
                    _updateTemperatures$2089 00DF                                 ___fladd@aexp 006B  
                               ___fladd@bexp 006C                        __size_of_statemachine 0077  
                                 _STATUSbits 0003                                  _toggleColor 007C  
                       __Umul8_16@multiplier 0079                                _updateCurrent 2DA2  
                                 _SSPCONbits 0215                   __end_of_RGB_AWAIT_AFE_CONN 34FA  
                               ___aomod@sign 0073                           EUSART_Write_Text@i 0075  
                      __end_of_send_I2C_NACK 331E                            __Umul8_16@product 0075  
                          _calibrate_BATTSOC 2003  
