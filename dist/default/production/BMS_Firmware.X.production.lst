

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Mar 16 00:12:00 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1719
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	idataBANK4,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	stringtext4,global,class=STRCODE,delta=2
    10                           	psect	stringtext5,global,class=STRCODE,delta=2
    11                           	psect	stringtext6,global,class=STRCODE,delta=2
    12                           	psect	stringtext7,global,class=STRCODE,delta=2
    13                           	psect	stringtext8,global,class=STRCODE,delta=2
    14                           	psect	stringtext9,global,class=STRCODE,delta=2
    15                           	psect	stringtext10,global,class=STRCODE,delta=2
    16                           	psect	stringtext11,global,class=STRCODE,delta=2
    17                           	psect	stringtext12,global,class=STRCODE,delta=2
    18                           	psect	stringtext13,global,class=STRCODE,delta=2
    19                           	psect	stringtext14,global,class=STRCODE,delta=2
    20                           	psect	stringtext15,global,class=STRCODE,delta=2
    21                           	psect	stringtext16,global,class=STRCODE,delta=2
    22                           	psect	stringtext17,global,class=STRCODE,delta=2
    23                           	psect	stringtext18,global,class=STRCODE,delta=2
    24                           	psect	stringtext19,global,class=STRCODE,delta=2
    25                           	psect	stringtext20,global,class=STRCODE,delta=2
    26                           	psect	stringtext21,global,class=STRCODE,delta=2
    27                           	psect	stringtext22,global,class=STRCODE,delta=2
    28                           	psect	stringtext23,global,class=STRCODE,delta=2
    29                           	psect	stringtext24,global,class=STRCODE,delta=2
    30                           	psect	stringtext25,global,class=STRCODE,delta=2
    31                           	psect	stringtext26,global,class=STRCODE,delta=2
    32                           	psect	stringtext27,global,class=STRCODE,delta=2
    33                           	psect	stringtext28,global,class=STRCODE,delta=2
    34                           	psect	stringtext29,global,class=STRCODE,delta=2
    35                           	psect	stringtext30,global,class=STRCODE,delta=2
    36                           	psect	stringtext31,global,class=STRCODE,delta=2
    37                           	psect	stringtext32,global,class=STRCODE,delta=2
    38                           	psect	stringtext33,global,class=STRCODE,delta=2
    39                           	psect	stringtext34,global,class=STRCODE,delta=2
    40                           	psect	stringtext35,global,class=STRCODE,delta=2
    41                           	psect	stringtext36,global,class=STRCODE,delta=2
    42                           	psect	stringtext37,global,class=STRCODE,delta=2
    43                           	psect	stringtext38,global,class=STRCODE,delta=2
    44                           	psect	stringtext39,global,class=STRCODE,delta=2
    45                           	psect	stringtext40,global,class=STRCODE,delta=2
    46                           	psect	stringtext41,global,class=STRCODE,delta=2
    47                           	psect	stringtext42,global,class=STRCODE,delta=2
    48                           	psect	stringtext43,global,class=STRCODE,delta=2
    49                           	psect	stringtext44,global,class=STRCODE,delta=2
    50                           	psect	stringtext45,global,class=STRCODE,delta=2
    51                           	psect	stringtext46,global,class=STRCODE,delta=2
    52                           	psect	cinit,global,class=CODE,merge=1,delta=2
    53                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    54                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    55                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    56                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    57                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    58                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    59                           	psect	clrtext,global,class=CODE,delta=2
    60                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    61                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    62                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    63                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    64                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    65                           	psect	text1,local,class=CODE,merge=1,delta=2
    66                           	psect	text2,local,class=CODE,merge=1,delta=2
    67                           	psect	text3,local,class=CODE,merge=1,delta=2
    68                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    69                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    70                           	psect	text6,local,class=CODE,merge=1,delta=2
    71                           	psect	text7,local,class=CODE,merge=1,delta=2
    72                           	psect	text8,local,class=CODE,merge=1,delta=2
    73                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    74                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    75                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    76                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    77                           	psect	text13,local,class=CODE,merge=1,delta=2
    78                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    79                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    80                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    81                           	psect	text17,local,class=CODE,merge=1,delta=2
    82                           	psect	text18,local,class=CODE,merge=1,delta=2
    83                           	psect	text19,local,class=CODE,merge=1,delta=2
    84                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    85                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    86                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    87                           	psect	text23,local,class=CODE,merge=1,delta=2
    88                           	psect	text24,local,class=CODE,merge=1,delta=2
    89                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    90                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    91                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    92                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    93                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    94                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    95                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    96                           	psect	text32,local,class=CODE,merge=1,delta=2
    97                           	psect	text33,local,class=CODE,merge=1,delta=2
    98                           	psect	text34,local,class=CODE,merge=1,delta=2
    99                           	psect	text35,local,class=CODE,merge=1,delta=2
   100                           	psect	text36,local,class=CODE,merge=1,delta=2,group=1
   101                           	psect	text37,local,class=CODE,merge=1,delta=2
   102                           	psect	text38,local,class=CODE,merge=1,delta=2
   103                           	psect	text39,local,class=CODE,merge=1,delta=2
   104                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
   105                           	psect	text41,local,class=CODE,merge=1,delta=2
   106                           	psect	text42,local,class=CODE,merge=1,delta=2
   107                           	psect	text43,local,class=CODE,merge=1,delta=2
   108                           	psect	text44,local,class=CODE,merge=1,delta=2
   109                           	psect	text45,local,class=CODE,merge=1,delta=2
   110                           	psect	text46,local,class=CODE,merge=1,delta=2
   111                           	psect	text47,local,class=CODE,merge=1,delta=2
   112                           	psect	text48,local,class=CODE,merge=1,delta=2,group=1
   113                           	psect	text49,local,class=CODE,merge=1,delta=2
   114                           	psect	text50,local,class=CODE,merge=1,delta=2,group=2
   115                           	psect	text51,local,class=CODE,merge=1,delta=2
   116                           	psect	text52,local,class=CODE,merge=1,delta=2,group=1
   117                           	psect	text53,local,class=CODE,merge=1,delta=2
   118                           	psect	text54,local,class=CODE,merge=1,delta=2
   119                           	psect	text55,local,class=CODE,merge=1,delta=2
   120                           	psect	text56,local,class=CODE,merge=1,delta=2
   121                           	psect	text57,local,class=CODE,merge=1,delta=2,group=1
   122                           	psect	text58,local,class=CODE,merge=1,delta=2,group=1
   123                           	psect	text59,local,class=CODE,merge=1,delta=2
   124                           	psect	text60,local,class=CODE,merge=1,delta=2,group=1
   125                           	psect	text61,local,class=CODE,merge=1,delta=2,group=1
   126                           	psect	text62,local,class=CODE,merge=1,delta=2,group=1
   127                           	psect	text63,local,class=CODE,merge=1,delta=2,group=1
   128                           	psect	text64,local,class=CODE,merge=1,delta=2,group=1
   129                           	psect	text65,local,class=CODE,merge=1,delta=2
   130                           	psect	text66,local,class=CODE,merge=1,delta=2
   131                           	psect	text67,local,class=CODE,merge=1,delta=2
   132                           	psect	text68,local,class=CODE,merge=1,delta=2
   133                           	psect	text69,local,class=CODE,merge=1,delta=2
   134                           	psect	text70,local,class=CODE,merge=1,delta=2
   135                           	psect	text71,local,class=CODE,merge=1,delta=2
   136                           	psect	text72,local,class=CODE,merge=1,delta=2
   137                           	psect	text73,local,class=CODE,merge=1,delta=2
   138                           	psect	text74,local,class=CODE,merge=1,delta=2
   139                           	psect	text75,local,class=CODE,merge=1,delta=2
   140                           	psect	text76,local,class=CODE,merge=1,delta=2
   141                           	psect	text77,local,class=CODE,merge=1,delta=2
   142                           	psect	text78,local,class=CODE,merge=1,delta=2
   143                           	psect	text79,local,class=CODE,merge=1,delta=2
   144                           	psect	text80,local,class=CODE,merge=1,delta=2
   145                           	psect	text81,local,class=CODE,merge=1,delta=2,group=1
   146                           	psect	intentry,global,class=CODE,delta=2
   147                           	psect	text7_split_1,local,class=CODE,merge=1,delta=2
   148                           	psect	text7_split_2,local,class=CODE,merge=1,delta=2
   149                           	dabs	1,0xCA0,32
   150                           	dabs	1,0xC20,80
   151                           	dabs	1,0xBE1,15
   152                           	dabs	1,0x2771,0,_messageBuffer
   153                           	dabs	1,0x7E,2
   154  0000                     
   155                           ; Version 2.05
   156                           ; Generated 20/12/2018 GMT
   157                           ; 
   158                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   159                           ; All rights reserved.
   160                           ; 
   161                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   162                           ; 
   163                           ; Redistribution and use in source and binary forms, with or without modification, are
   164                           ; permitted provided that the following conditions are met:
   165                           ; 
   166                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   167                           ;        conditions and the following disclaimer.
   168                           ; 
   169                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   170                           ;        of conditions and the following disclaimer in the documentation and/or other
   171                           ;        materials provided with the distribution.
   172                           ; 
   173                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   174                           ;        software without specific prior written permission.
   175                           ; 
   176                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   177                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   178                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   179                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   180                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   181                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   182                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   183                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   184                           ; 
   185                           ; 
   186                           ; Code-generator required, PIC16F1719 Definitions
   187                           ; 
   188                           ; SFR Addresses
   189  0000                     	;# 
   190  0001                     	;# 
   191  0002                     	;# 
   192  0003                     	;# 
   193  0004                     	;# 
   194  0005                     	;# 
   195  0006                     	;# 
   196  0007                     	;# 
   197  0008                     	;# 
   198  0009                     	;# 
   199  000A                     	;# 
   200  000B                     	;# 
   201  000C                     	;# 
   202  000D                     	;# 
   203  000E                     	;# 
   204  000F                     	;# 
   205  0010                     	;# 
   206  0011                     	;# 
   207  0012                     	;# 
   208  0013                     	;# 
   209  0015                     	;# 
   210  0016                     	;# 
   211  0016                     	;# 
   212  0017                     	;# 
   213  0018                     	;# 
   214  0019                     	;# 
   215  001A                     	;# 
   216  001B                     	;# 
   217  001C                     	;# 
   218  008C                     	;# 
   219  008D                     	;# 
   220  008E                     	;# 
   221  008F                     	;# 
   222  0090                     	;# 
   223  0091                     	;# 
   224  0092                     	;# 
   225  0093                     	;# 
   226  0095                     	;# 
   227  0096                     	;# 
   228  0097                     	;# 
   229  0098                     	;# 
   230  0099                     	;# 
   231  009A                     	;# 
   232  009B                     	;# 
   233  009B                     	;# 
   234  009C                     	;# 
   235  009D                     	;# 
   236  009E                     	;# 
   237  009F                     	;# 
   238  010C                     	;# 
   239  010D                     	;# 
   240  010E                     	;# 
   241  010F                     	;# 
   242  0110                     	;# 
   243  0111                     	;# 
   244  0112                     	;# 
   245  0113                     	;# 
   246  0114                     	;# 
   247  0115                     	;# 
   248  0116                     	;# 
   249  0117                     	;# 
   250  0118                     	;# 
   251  0119                     	;# 
   252  011A                     	;# 
   253  011B                     	;# 
   254  011B                     	;# 
   255  011C                     	;# 
   256  018C                     	;# 
   257  018D                     	;# 
   258  018E                     	;# 
   259  018F                     	;# 
   260  0190                     	;# 
   261  0191                     	;# 
   262  0191                     	;# 
   263  0192                     	;# 
   264  0193                     	;# 
   265  0193                     	;# 
   266  0194                     	;# 
   267  0195                     	;# 
   268  0196                     	;# 
   269  0197                     	;# 
   270  0199                     	;# 
   271  0199                     	;# 
   272  0199                     	;# 
   273  019A                     	;# 
   274  019A                     	;# 
   275  019A                     	;# 
   276  019B                     	;# 
   277  019B                     	;# 
   278  019B                     	;# 
   279  019B                     	;# 
   280  019B                     	;# 
   281  019C                     	;# 
   282  019C                     	;# 
   283  019C                     	;# 
   284  019D                     	;# 
   285  019D                     	;# 
   286  019D                     	;# 
   287  019E                     	;# 
   288  019E                     	;# 
   289  019E                     	;# 
   290  019F                     	;# 
   291  019F                     	;# 
   292  019F                     	;# 
   293  019F                     	;# 
   294  019F                     	;# 
   295  020C                     	;# 
   296  020D                     	;# 
   297  020E                     	;# 
   298  020F                     	;# 
   299  0210                     	;# 
   300  0211                     	;# 
   301  0211                     	;# 
   302  0212                     	;# 
   303  0212                     	;# 
   304  0213                     	;# 
   305  0213                     	;# 
   306  0214                     	;# 
   307  0214                     	;# 
   308  0215                     	;# 
   309  0215                     	;# 
   310  0215                     	;# 
   311  0215                     	;# 
   312  0216                     	;# 
   313  0216                     	;# 
   314  0217                     	;# 
   315  0217                     	;# 
   316  028C                     	;# 
   317  028D                     	;# 
   318  028E                     	;# 
   319  028F                     	;# 
   320  0290                     	;# 
   321  0291                     	;# 
   322  0291                     	;# 
   323  0292                     	;# 
   324  0293                     	;# 
   325  0293                     	;# 
   326  0298                     	;# 
   327  0298                     	;# 
   328  0299                     	;# 
   329  029A                     	;# 
   330  029A                     	;# 
   331  029E                     	;# 
   332  030C                     	;# 
   333  030D                     	;# 
   334  030E                     	;# 
   335  030F                     	;# 
   336  0310                     	;# 
   337  038C                     	;# 
   338  038D                     	;# 
   339  038E                     	;# 
   340  038F                     	;# 
   341  0390                     	;# 
   342  0391                     	;# 
   343  0392                     	;# 
   344  0393                     	;# 
   345  0394                     	;# 
   346  0395                     	;# 
   347  0396                     	;# 
   348  0397                     	;# 
   349  0398                     	;# 
   350  0399                     	;# 
   351  039D                     	;# 
   352  039E                     	;# 
   353  039F                     	;# 
   354  0415                     	;# 
   355  0416                     	;# 
   356  0417                     	;# 
   357  041C                     	;# 
   358  041D                     	;# 
   359  041E                     	;# 
   360  0498                     	;# 
   361  0498                     	;# 
   362  0499                     	;# 
   363  049A                     	;# 
   364  049B                     	;# 
   365  049B                     	;# 
   366  049C                     	;# 
   367  049D                     	;# 
   368  049E                     	;# 
   369  049F                     	;# 
   370  0511                     	;# 
   371  0515                     	;# 
   372  0617                     	;# 
   373  0618                     	;# 
   374  0619                     	;# 
   375  0619                     	;# 
   376  061A                     	;# 
   377  061B                     	;# 
   378  061C                     	;# 
   379  061C                     	;# 
   380  0691                     	;# 
   381  0692                     	;# 
   382  0693                     	;# 
   383  0694                     	;# 
   384  0695                     	;# 
   385  0696                     	;# 
   386  0697                     	;# 
   387  0698                     	;# 
   388  0699                     	;# 
   389  069A                     	;# 
   390  069B                     	;# 
   391  069C                     	;# 
   392  069D                     	;# 
   393  069E                     	;# 
   394  069F                     	;# 
   395  0E0F                     	;# 
   396  0E10                     	;# 
   397  0E11                     	;# 
   398  0E12                     	;# 
   399  0E13                     	;# 
   400  0E14                     	;# 
   401  0E15                     	;# 
   402  0E17                     	;# 
   403  0E20                     	;# 
   404  0E21                     	;# 
   405  0E22                     	;# 
   406  0E24                     	;# 
   407  0E25                     	;# 
   408  0E28                     	;# 
   409  0E29                     	;# 
   410  0E2A                     	;# 
   411  0E2B                     	;# 
   412  0E90                     	;# 
   413  0E91                     	;# 
   414  0E92                     	;# 
   415  0E93                     	;# 
   416  0E94                     	;# 
   417  0E95                     	;# 
   418  0E96                     	;# 
   419  0E97                     	;# 
   420  0E98                     	;# 
   421  0E99                     	;# 
   422  0E9A                     	;# 
   423  0E9B                     	;# 
   424  0E9C                     	;# 
   425  0E9D                     	;# 
   426  0E9E                     	;# 
   427  0E9F                     	;# 
   428  0EA0                     	;# 
   429  0EA1                     	;# 
   430  0EA2                     	;# 
   431  0EA3                     	;# 
   432  0EA4                     	;# 
   433  0EA5                     	;# 
   434  0EA6                     	;# 
   435  0EA7                     	;# 
   436  0EA8                     	;# 
   437  0EA9                     	;# 
   438  0EAA                     	;# 
   439  0EAB                     	;# 
   440  0EAC                     	;# 
   441  0EAD                     	;# 
   442  0EAE                     	;# 
   443  0EAF                     	;# 
   444  0EB0                     	;# 
   445  0EB1                     	;# 
   446  0EB2                     	;# 
   447  0F0F                     	;# 
   448  0F10                     	;# 
   449  0F11                     	;# 
   450  0F12                     	;# 
   451  0F13                     	;# 
   452  0F14                     	;# 
   453  0F15                     	;# 
   454  0F16                     	;# 
   455  0F17                     	;# 
   456  0F18                     	;# 
   457  0F19                     	;# 
   458  0F1A                     	;# 
   459  0F1B                     	;# 
   460  0F1C                     	;# 
   461  0F1D                     	;# 
   462  0F1E                     	;# 
   463  0F1F                     	;# 
   464  0F20                     	;# 
   465  0F21                     	;# 
   466  0F22                     	;# 
   467  0F23                     	;# 
   468  0F24                     	;# 
   469  0F25                     	;# 
   470  0F26                     	;# 
   471  0F27                     	;# 
   472  0F28                     	;# 
   473  0F29                     	;# 
   474  0F2A                     	;# 
   475  0F2B                     	;# 
   476  0F2C                     	;# 
   477  0F2D                     	;# 
   478  0F2E                     	;# 
   479  0F2F                     	;# 
   480  0F30                     	;# 
   481  0F31                     	;# 
   482  0F32                     	;# 
   483  0F33                     	;# 
   484  0F34                     	;# 
   485  0F35                     	;# 
   486  0F36                     	;# 
   487  0F37                     	;# 
   488  0FE4                     	;# 
   489  0FE5                     	;# 
   490  0FE6                     	;# 
   491  0FE7                     	;# 
   492  0FE8                     	;# 
   493  0FE9                     	;# 
   494  0FEA                     	;# 
   495  0FEB                     	;# 
   496  0FED                     	;# 
   497  0FEE                     	;# 
   498  0FEF                     	;# 
   499  0000                     	;# 
   500  0001                     	;# 
   501  0002                     	;# 
   502  0003                     	;# 
   503  0004                     	;# 
   504  0005                     	;# 
   505  0006                     	;# 
   506  0007                     	;# 
   507  0008                     	;# 
   508  0009                     	;# 
   509  000A                     	;# 
   510  000B                     	;# 
   511  000C                     	;# 
   512  000D                     	;# 
   513  000E                     	;# 
   514  000F                     	;# 
   515  0010                     	;# 
   516  0011                     	;# 
   517  0012                     	;# 
   518  0013                     	;# 
   519  0015                     	;# 
   520  0016                     	;# 
   521  0016                     	;# 
   522  0017                     	;# 
   523  0018                     	;# 
   524  0019                     	;# 
   525  001A                     	;# 
   526  001B                     	;# 
   527  001C                     	;# 
   528  008C                     	;# 
   529  008D                     	;# 
   530  008E                     	;# 
   531  008F                     	;# 
   532  0090                     	;# 
   533  0091                     	;# 
   534  0092                     	;# 
   535  0093                     	;# 
   536  0095                     	;# 
   537  0096                     	;# 
   538  0097                     	;# 
   539  0098                     	;# 
   540  0099                     	;# 
   541  009A                     	;# 
   542  009B                     	;# 
   543  009B                     	;# 
   544  009C                     	;# 
   545  009D                     	;# 
   546  009E                     	;# 
   547  009F                     	;# 
   548  010C                     	;# 
   549  010D                     	;# 
   550  010E                     	;# 
   551  010F                     	;# 
   552  0110                     	;# 
   553  0111                     	;# 
   554  0112                     	;# 
   555  0113                     	;# 
   556  0114                     	;# 
   557  0115                     	;# 
   558  0116                     	;# 
   559  0117                     	;# 
   560  0118                     	;# 
   561  0119                     	;# 
   562  011A                     	;# 
   563  011B                     	;# 
   564  011B                     	;# 
   565  011C                     	;# 
   566  018C                     	;# 
   567  018D                     	;# 
   568  018E                     	;# 
   569  018F                     	;# 
   570  0190                     	;# 
   571  0191                     	;# 
   572  0191                     	;# 
   573  0192                     	;# 
   574  0193                     	;# 
   575  0193                     	;# 
   576  0194                     	;# 
   577  0195                     	;# 
   578  0196                     	;# 
   579  0197                     	;# 
   580  0199                     	;# 
   581  0199                     	;# 
   582  0199                     	;# 
   583  019A                     	;# 
   584  019A                     	;# 
   585  019A                     	;# 
   586  019B                     	;# 
   587  019B                     	;# 
   588  019B                     	;# 
   589  019B                     	;# 
   590  019B                     	;# 
   591  019C                     	;# 
   592  019C                     	;# 
   593  019C                     	;# 
   594  019D                     	;# 
   595  019D                     	;# 
   596  019D                     	;# 
   597  019E                     	;# 
   598  019E                     	;# 
   599  019E                     	;# 
   600  019F                     	;# 
   601  019F                     	;# 
   602  019F                     	;# 
   603  019F                     	;# 
   604  019F                     	;# 
   605  020C                     	;# 
   606  020D                     	;# 
   607  020E                     	;# 
   608  020F                     	;# 
   609  0210                     	;# 
   610  0211                     	;# 
   611  0211                     	;# 
   612  0212                     	;# 
   613  0212                     	;# 
   614  0213                     	;# 
   615  0213                     	;# 
   616  0214                     	;# 
   617  0214                     	;# 
   618  0215                     	;# 
   619  0215                     	;# 
   620  0215                     	;# 
   621  0215                     	;# 
   622  0216                     	;# 
   623  0216                     	;# 
   624  0217                     	;# 
   625  0217                     	;# 
   626  028C                     	;# 
   627  028D                     	;# 
   628  028E                     	;# 
   629  028F                     	;# 
   630  0290                     	;# 
   631  0291                     	;# 
   632  0291                     	;# 
   633  0292                     	;# 
   634  0293                     	;# 
   635  0293                     	;# 
   636  0298                     	;# 
   637  0298                     	;# 
   638  0299                     	;# 
   639  029A                     	;# 
   640  029A                     	;# 
   641  029E                     	;# 
   642  030C                     	;# 
   643  030D                     	;# 
   644  030E                     	;# 
   645  030F                     	;# 
   646  0310                     	;# 
   647  038C                     	;# 
   648  038D                     	;# 
   649  038E                     	;# 
   650  038F                     	;# 
   651  0390                     	;# 
   652  0391                     	;# 
   653  0392                     	;# 
   654  0393                     	;# 
   655  0394                     	;# 
   656  0395                     	;# 
   657  0396                     	;# 
   658  0397                     	;# 
   659  0398                     	;# 
   660  0399                     	;# 
   661  039D                     	;# 
   662  039E                     	;# 
   663  039F                     	;# 
   664  0415                     	;# 
   665  0416                     	;# 
   666  0417                     	;# 
   667  041C                     	;# 
   668  041D                     	;# 
   669  041E                     	;# 
   670  0498                     	;# 
   671  0498                     	;# 
   672  0499                     	;# 
   673  049A                     	;# 
   674  049B                     	;# 
   675  049B                     	;# 
   676  049C                     	;# 
   677  049D                     	;# 
   678  049E                     	;# 
   679  049F                     	;# 
   680  0511                     	;# 
   681  0515                     	;# 
   682  0617                     	;# 
   683  0618                     	;# 
   684  0619                     	;# 
   685  0619                     	;# 
   686  061A                     	;# 
   687  061B                     	;# 
   688  061C                     	;# 
   689  061C                     	;# 
   690  0691                     	;# 
   691  0692                     	;# 
   692  0693                     	;# 
   693  0694                     	;# 
   694  0695                     	;# 
   695  0696                     	;# 
   696  0697                     	;# 
   697  0698                     	;# 
   698  0699                     	;# 
   699  069A                     	;# 
   700  069B                     	;# 
   701  069C                     	;# 
   702  069D                     	;# 
   703  069E                     	;# 
   704  069F                     	;# 
   705  0E0F                     	;# 
   706  0E10                     	;# 
   707  0E11                     	;# 
   708  0E12                     	;# 
   709  0E13                     	;# 
   710  0E14                     	;# 
   711  0E15                     	;# 
   712  0E17                     	;# 
   713  0E20                     	;# 
   714  0E21                     	;# 
   715  0E22                     	;# 
   716  0E24                     	;# 
   717  0E25                     	;# 
   718  0E28                     	;# 
   719  0E29                     	;# 
   720  0E2A                     	;# 
   721  0E2B                     	;# 
   722  0E90                     	;# 
   723  0E91                     	;# 
   724  0E92                     	;# 
   725  0E93                     	;# 
   726  0E94                     	;# 
   727  0E95                     	;# 
   728  0E96                     	;# 
   729  0E97                     	;# 
   730  0E98                     	;# 
   731  0E99                     	;# 
   732  0E9A                     	;# 
   733  0E9B                     	;# 
   734  0E9C                     	;# 
   735  0E9D                     	;# 
   736  0E9E                     	;# 
   737  0E9F                     	;# 
   738  0EA0                     	;# 
   739  0EA1                     	;# 
   740  0EA2                     	;# 
   741  0EA3                     	;# 
   742  0EA4                     	;# 
   743  0EA5                     	;# 
   744  0EA6                     	;# 
   745  0EA7                     	;# 
   746  0EA8                     	;# 
   747  0EA9                     	;# 
   748  0EAA                     	;# 
   749  0EAB                     	;# 
   750  0EAC                     	;# 
   751  0EAD                     	;# 
   752  0EAE                     	;# 
   753  0EAF                     	;# 
   754  0EB0                     	;# 
   755  0EB1                     	;# 
   756  0EB2                     	;# 
   757  0F0F                     	;# 
   758  0F10                     	;# 
   759  0F11                     	;# 
   760  0F12                     	;# 
   761  0F13                     	;# 
   762  0F14                     	;# 
   763  0F15                     	;# 
   764  0F16                     	;# 
   765  0F17                     	;# 
   766  0F18                     	;# 
   767  0F19                     	;# 
   768  0F1A                     	;# 
   769  0F1B                     	;# 
   770  0F1C                     	;# 
   771  0F1D                     	;# 
   772  0F1E                     	;# 
   773  0F1F                     	;# 
   774  0F20                     	;# 
   775  0F21                     	;# 
   776  0F22                     	;# 
   777  0F23                     	;# 
   778  0F24                     	;# 
   779  0F25                     	;# 
   780  0F26                     	;# 
   781  0F27                     	;# 
   782  0F28                     	;# 
   783  0F29                     	;# 
   784  0F2A                     	;# 
   785  0F2B                     	;# 
   786  0F2C                     	;# 
   787  0F2D                     	;# 
   788  0F2E                     	;# 
   789  0F2F                     	;# 
   790  0F30                     	;# 
   791  0F31                     	;# 
   792  0F32                     	;# 
   793  0F33                     	;# 
   794  0F34                     	;# 
   795  0F35                     	;# 
   796  0F36                     	;# 
   797  0F37                     	;# 
   798  0FE4                     	;# 
   799  0FE5                     	;# 
   800  0FE6                     	;# 
   801  0FE7                     	;# 
   802  0FE8                     	;# 
   803  0FE9                     	;# 
   804  0FEA                     	;# 
   805  0FEB                     	;# 
   806  0FED                     	;# 
   807  0FEE                     	;# 
   808  0FEF                     	;# 
   809  0000                     	;# 
   810  0001                     	;# 
   811  0002                     	;# 
   812  0003                     	;# 
   813  0004                     	;# 
   814  0005                     	;# 
   815  0006                     	;# 
   816  0007                     	;# 
   817  0008                     	;# 
   818  0009                     	;# 
   819  000A                     	;# 
   820  000B                     	;# 
   821  000C                     	;# 
   822  000D                     	;# 
   823  000E                     	;# 
   824  000F                     	;# 
   825  0010                     	;# 
   826  0011                     	;# 
   827  0012                     	;# 
   828  0013                     	;# 
   829  0015                     	;# 
   830  0016                     	;# 
   831  0016                     	;# 
   832  0017                     	;# 
   833  0018                     	;# 
   834  0019                     	;# 
   835  001A                     	;# 
   836  001B                     	;# 
   837  001C                     	;# 
   838  008C                     	;# 
   839  008D                     	;# 
   840  008E                     	;# 
   841  008F                     	;# 
   842  0090                     	;# 
   843  0091                     	;# 
   844  0092                     	;# 
   845  0093                     	;# 
   846  0095                     	;# 
   847  0096                     	;# 
   848  0097                     	;# 
   849  0098                     	;# 
   850  0099                     	;# 
   851  009A                     	;# 
   852  009B                     	;# 
   853  009B                     	;# 
   854  009C                     	;# 
   855  009D                     	;# 
   856  009E                     	;# 
   857  009F                     	;# 
   858  010C                     	;# 
   859  010D                     	;# 
   860  010E                     	;# 
   861  010F                     	;# 
   862  0110                     	;# 
   863  0111                     	;# 
   864  0112                     	;# 
   865  0113                     	;# 
   866  0114                     	;# 
   867  0115                     	;# 
   868  0116                     	;# 
   869  0117                     	;# 
   870  0118                     	;# 
   871  0119                     	;# 
   872  011A                     	;# 
   873  011B                     	;# 
   874  011B                     	;# 
   875  011C                     	;# 
   876  018C                     	;# 
   877  018D                     	;# 
   878  018E                     	;# 
   879  018F                     	;# 
   880  0190                     	;# 
   881  0191                     	;# 
   882  0191                     	;# 
   883  0192                     	;# 
   884  0193                     	;# 
   885  0193                     	;# 
   886  0194                     	;# 
   887  0195                     	;# 
   888  0196                     	;# 
   889  0197                     	;# 
   890  0199                     	;# 
   891  0199                     	;# 
   892  0199                     	;# 
   893  019A                     	;# 
   894  019A                     	;# 
   895  019A                     	;# 
   896  019B                     	;# 
   897  019B                     	;# 
   898  019B                     	;# 
   899  019B                     	;# 
   900  019B                     	;# 
   901  019C                     	;# 
   902  019C                     	;# 
   903  019C                     	;# 
   904  019D                     	;# 
   905  019D                     	;# 
   906  019D                     	;# 
   907  019E                     	;# 
   908  019E                     	;# 
   909  019E                     	;# 
   910  019F                     	;# 
   911  019F                     	;# 
   912  019F                     	;# 
   913  019F                     	;# 
   914  019F                     	;# 
   915  020C                     	;# 
   916  020D                     	;# 
   917  020E                     	;# 
   918  020F                     	;# 
   919  0210                     	;# 
   920  0211                     	;# 
   921  0211                     	;# 
   922  0212                     	;# 
   923  0212                     	;# 
   924  0213                     	;# 
   925  0213                     	;# 
   926  0214                     	;# 
   927  0214                     	;# 
   928  0215                     	;# 
   929  0215                     	;# 
   930  0215                     	;# 
   931  0215                     	;# 
   932  0216                     	;# 
   933  0216                     	;# 
   934  0217                     	;# 
   935  0217                     	;# 
   936  028C                     	;# 
   937  028D                     	;# 
   938  028E                     	;# 
   939  028F                     	;# 
   940  0290                     	;# 
   941  0291                     	;# 
   942  0291                     	;# 
   943  0292                     	;# 
   944  0293                     	;# 
   945  0293                     	;# 
   946  0298                     	;# 
   947  0298                     	;# 
   948  0299                     	;# 
   949  029A                     	;# 
   950  029A                     	;# 
   951  029E                     	;# 
   952  030C                     	;# 
   953  030D                     	;# 
   954  030E                     	;# 
   955  030F                     	;# 
   956  0310                     	;# 
   957  038C                     	;# 
   958  038D                     	;# 
   959  038E                     	;# 
   960  038F                     	;# 
   961  0390                     	;# 
   962  0391                     	;# 
   963  0392                     	;# 
   964  0393                     	;# 
   965  0394                     	;# 
   966  0395                     	;# 
   967  0396                     	;# 
   968  0397                     	;# 
   969  0398                     	;# 
   970  0399                     	;# 
   971  039D                     	;# 
   972  039E                     	;# 
   973  039F                     	;# 
   974  0415                     	;# 
   975  0416                     	;# 
   976  0417                     	;# 
   977  041C                     	;# 
   978  041D                     	;# 
   979  041E                     	;# 
   980  0498                     	;# 
   981  0498                     	;# 
   982  0499                     	;# 
   983  049A                     	;# 
   984  049B                     	;# 
   985  049B                     	;# 
   986  049C                     	;# 
   987  049D                     	;# 
   988  049E                     	;# 
   989  049F                     	;# 
   990  0511                     	;# 
   991  0515                     	;# 
   992  0617                     	;# 
   993  0618                     	;# 
   994  0619                     	;# 
   995  0619                     	;# 
   996  061A                     	;# 
   997  061B                     	;# 
   998  061C                     	;# 
   999  061C                     	;# 
  1000  0691                     	;# 
  1001  0692                     	;# 
  1002  0693                     	;# 
  1003  0694                     	;# 
  1004  0695                     	;# 
  1005  0696                     	;# 
  1006  0697                     	;# 
  1007  0698                     	;# 
  1008  0699                     	;# 
  1009  069A                     	;# 
  1010  069B                     	;# 
  1011  069C                     	;# 
  1012  069D                     	;# 
  1013  069E                     	;# 
  1014  069F                     	;# 
  1015  0E0F                     	;# 
  1016  0E10                     	;# 
  1017  0E11                     	;# 
  1018  0E12                     	;# 
  1019  0E13                     	;# 
  1020  0E14                     	;# 
  1021  0E15                     	;# 
  1022  0E17                     	;# 
  1023  0E20                     	;# 
  1024  0E21                     	;# 
  1025  0E22                     	;# 
  1026  0E24                     	;# 
  1027  0E25                     	;# 
  1028  0E28                     	;# 
  1029  0E29                     	;# 
  1030  0E2A                     	;# 
  1031  0E2B                     	;# 
  1032  0E90                     	;# 
  1033  0E91                     	;# 
  1034  0E92                     	;# 
  1035  0E93                     	;# 
  1036  0E94                     	;# 
  1037  0E95                     	;# 
  1038  0E96                     	;# 
  1039  0E97                     	;# 
  1040  0E98                     	;# 
  1041  0E99                     	;# 
  1042  0E9A                     	;# 
  1043  0E9B                     	;# 
  1044  0E9C                     	;# 
  1045  0E9D                     	;# 
  1046  0E9E                     	;# 
  1047  0E9F                     	;# 
  1048  0EA0                     	;# 
  1049  0EA1                     	;# 
  1050  0EA2                     	;# 
  1051  0EA3                     	;# 
  1052  0EA4                     	;# 
  1053  0EA5                     	;# 
  1054  0EA6                     	;# 
  1055  0EA7                     	;# 
  1056  0EA8                     	;# 
  1057  0EA9                     	;# 
  1058  0EAA                     	;# 
  1059  0EAB                     	;# 
  1060  0EAC                     	;# 
  1061  0EAD                     	;# 
  1062  0EAE                     	;# 
  1063  0EAF                     	;# 
  1064  0EB0                     	;# 
  1065  0EB1                     	;# 
  1066  0EB2                     	;# 
  1067  0F0F                     	;# 
  1068  0F10                     	;# 
  1069  0F11                     	;# 
  1070  0F12                     	;# 
  1071  0F13                     	;# 
  1072  0F14                     	;# 
  1073  0F15                     	;# 
  1074  0F16                     	;# 
  1075  0F17                     	;# 
  1076  0F18                     	;# 
  1077  0F19                     	;# 
  1078  0F1A                     	;# 
  1079  0F1B                     	;# 
  1080  0F1C                     	;# 
  1081  0F1D                     	;# 
  1082  0F1E                     	;# 
  1083  0F1F                     	;# 
  1084  0F20                     	;# 
  1085  0F21                     	;# 
  1086  0F22                     	;# 
  1087  0F23                     	;# 
  1088  0F24                     	;# 
  1089  0F25                     	;# 
  1090  0F26                     	;# 
  1091  0F27                     	;# 
  1092  0F28                     	;# 
  1093  0F29                     	;# 
  1094  0F2A                     	;# 
  1095  0F2B                     	;# 
  1096  0F2C                     	;# 
  1097  0F2D                     	;# 
  1098  0F2E                     	;# 
  1099  0F2F                     	;# 
  1100  0F30                     	;# 
  1101  0F31                     	;# 
  1102  0F32                     	;# 
  1103  0F33                     	;# 
  1104  0F34                     	;# 
  1105  0F35                     	;# 
  1106  0F36                     	;# 
  1107  0F37                     	;# 
  1108  0FE4                     	;# 
  1109  0FE5                     	;# 
  1110  0FE6                     	;# 
  1111  0FE7                     	;# 
  1112  0FE8                     	;# 
  1113  0FE9                     	;# 
  1114  0FEA                     	;# 
  1115  0FEB                     	;# 
  1116  0FED                     	;# 
  1117  0FEE                     	;# 
  1118  0FEF                     	;# 
  1119  0000                     	;# 
  1120  0001                     	;# 
  1121  0002                     	;# 
  1122  0003                     	;# 
  1123  0004                     	;# 
  1124  0005                     	;# 
  1125  0006                     	;# 
  1126  0007                     	;# 
  1127  0008                     	;# 
  1128  0009                     	;# 
  1129  000A                     	;# 
  1130  000B                     	;# 
  1131  000C                     	;# 
  1132  000D                     	;# 
  1133  000E                     	;# 
  1134  000F                     	;# 
  1135  0010                     	;# 
  1136  0011                     	;# 
  1137  0012                     	;# 
  1138  0013                     	;# 
  1139  0015                     	;# 
  1140  0016                     	;# 
  1141  0016                     	;# 
  1142  0017                     	;# 
  1143  0018                     	;# 
  1144  0019                     	;# 
  1145  001A                     	;# 
  1146  001B                     	;# 
  1147  001C                     	;# 
  1148  008C                     	;# 
  1149  008D                     	;# 
  1150  008E                     	;# 
  1151  008F                     	;# 
  1152  0090                     	;# 
  1153  0091                     	;# 
  1154  0092                     	;# 
  1155  0093                     	;# 
  1156  0095                     	;# 
  1157  0096                     	;# 
  1158  0097                     	;# 
  1159  0098                     	;# 
  1160  0099                     	;# 
  1161  009A                     	;# 
  1162  009B                     	;# 
  1163  009B                     	;# 
  1164  009C                     	;# 
  1165  009D                     	;# 
  1166  009E                     	;# 
  1167  009F                     	;# 
  1168  010C                     	;# 
  1169  010D                     	;# 
  1170  010E                     	;# 
  1171  010F                     	;# 
  1172  0110                     	;# 
  1173  0111                     	;# 
  1174  0112                     	;# 
  1175  0113                     	;# 
  1176  0114                     	;# 
  1177  0115                     	;# 
  1178  0116                     	;# 
  1179  0117                     	;# 
  1180  0118                     	;# 
  1181  0119                     	;# 
  1182  011A                     	;# 
  1183  011B                     	;# 
  1184  011B                     	;# 
  1185  011C                     	;# 
  1186  018C                     	;# 
  1187  018D                     	;# 
  1188  018E                     	;# 
  1189  018F                     	;# 
  1190  0190                     	;# 
  1191  0191                     	;# 
  1192  0191                     	;# 
  1193  0192                     	;# 
  1194  0193                     	;# 
  1195  0193                     	;# 
  1196  0194                     	;# 
  1197  0195                     	;# 
  1198  0196                     	;# 
  1199  0197                     	;# 
  1200  0199                     	;# 
  1201  0199                     	;# 
  1202  0199                     	;# 
  1203  019A                     	;# 
  1204  019A                     	;# 
  1205  019A                     	;# 
  1206  019B                     	;# 
  1207  019B                     	;# 
  1208  019B                     	;# 
  1209  019B                     	;# 
  1210  019B                     	;# 
  1211  019C                     	;# 
  1212  019C                     	;# 
  1213  019C                     	;# 
  1214  019D                     	;# 
  1215  019D                     	;# 
  1216  019D                     	;# 
  1217  019E                     	;# 
  1218  019E                     	;# 
  1219  019E                     	;# 
  1220  019F                     	;# 
  1221  019F                     	;# 
  1222  019F                     	;# 
  1223  019F                     	;# 
  1224  019F                     	;# 
  1225  020C                     	;# 
  1226  020D                     	;# 
  1227  020E                     	;# 
  1228  020F                     	;# 
  1229  0210                     	;# 
  1230  0211                     	;# 
  1231  0211                     	;# 
  1232  0212                     	;# 
  1233  0212                     	;# 
  1234  0213                     	;# 
  1235  0213                     	;# 
  1236  0214                     	;# 
  1237  0214                     	;# 
  1238  0215                     	;# 
  1239  0215                     	;# 
  1240  0215                     	;# 
  1241  0215                     	;# 
  1242  0216                     	;# 
  1243  0216                     	;# 
  1244  0217                     	;# 
  1245  0217                     	;# 
  1246  028C                     	;# 
  1247  028D                     	;# 
  1248  028E                     	;# 
  1249  028F                     	;# 
  1250  0290                     	;# 
  1251  0291                     	;# 
  1252  0291                     	;# 
  1253  0292                     	;# 
  1254  0293                     	;# 
  1255  0293                     	;# 
  1256  0298                     	;# 
  1257  0298                     	;# 
  1258  0299                     	;# 
  1259  029A                     	;# 
  1260  029A                     	;# 
  1261  029E                     	;# 
  1262  030C                     	;# 
  1263  030D                     	;# 
  1264  030E                     	;# 
  1265  030F                     	;# 
  1266  0310                     	;# 
  1267  038C                     	;# 
  1268  038D                     	;# 
  1269  038E                     	;# 
  1270  038F                     	;# 
  1271  0390                     	;# 
  1272  0391                     	;# 
  1273  0392                     	;# 
  1274  0393                     	;# 
  1275  0394                     	;# 
  1276  0395                     	;# 
  1277  0396                     	;# 
  1278  0397                     	;# 
  1279  0398                     	;# 
  1280  0399                     	;# 
  1281  039D                     	;# 
  1282  039E                     	;# 
  1283  039F                     	;# 
  1284  0415                     	;# 
  1285  0416                     	;# 
  1286  0417                     	;# 
  1287  041C                     	;# 
  1288  041D                     	;# 
  1289  041E                     	;# 
  1290  0498                     	;# 
  1291  0498                     	;# 
  1292  0499                     	;# 
  1293  049A                     	;# 
  1294  049B                     	;# 
  1295  049B                     	;# 
  1296  049C                     	;# 
  1297  049D                     	;# 
  1298  049E                     	;# 
  1299  049F                     	;# 
  1300  0511                     	;# 
  1301  0515                     	;# 
  1302  0617                     	;# 
  1303  0618                     	;# 
  1304  0619                     	;# 
  1305  0619                     	;# 
  1306  061A                     	;# 
  1307  061B                     	;# 
  1308  061C                     	;# 
  1309  061C                     	;# 
  1310  0691                     	;# 
  1311  0692                     	;# 
  1312  0693                     	;# 
  1313  0694                     	;# 
  1314  0695                     	;# 
  1315  0696                     	;# 
  1316  0697                     	;# 
  1317  0698                     	;# 
  1318  0699                     	;# 
  1319  069A                     	;# 
  1320  069B                     	;# 
  1321  069C                     	;# 
  1322  069D                     	;# 
  1323  069E                     	;# 
  1324  069F                     	;# 
  1325  0E0F                     	;# 
  1326  0E10                     	;# 
  1327  0E11                     	;# 
  1328  0E12                     	;# 
  1329  0E13                     	;# 
  1330  0E14                     	;# 
  1331  0E15                     	;# 
  1332  0E17                     	;# 
  1333  0E20                     	;# 
  1334  0E21                     	;# 
  1335  0E22                     	;# 
  1336  0E24                     	;# 
  1337  0E25                     	;# 
  1338  0E28                     	;# 
  1339  0E29                     	;# 
  1340  0E2A                     	;# 
  1341  0E2B                     	;# 
  1342  0E90                     	;# 
  1343  0E91                     	;# 
  1344  0E92                     	;# 
  1345  0E93                     	;# 
  1346  0E94                     	;# 
  1347  0E95                     	;# 
  1348  0E96                     	;# 
  1349  0E97                     	;# 
  1350  0E98                     	;# 
  1351  0E99                     	;# 
  1352  0E9A                     	;# 
  1353  0E9B                     	;# 
  1354  0E9C                     	;# 
  1355  0E9D                     	;# 
  1356  0E9E                     	;# 
  1357  0E9F                     	;# 
  1358  0EA0                     	;# 
  1359  0EA1                     	;# 
  1360  0EA2                     	;# 
  1361  0EA3                     	;# 
  1362  0EA4                     	;# 
  1363  0EA5                     	;# 
  1364  0EA6                     	;# 
  1365  0EA7                     	;# 
  1366  0EA8                     	;# 
  1367  0EA9                     	;# 
  1368  0EAA                     	;# 
  1369  0EAB                     	;# 
  1370  0EAC                     	;# 
  1371  0EAD                     	;# 
  1372  0EAE                     	;# 
  1373  0EAF                     	;# 
  1374  0EB0                     	;# 
  1375  0EB1                     	;# 
  1376  0EB2                     	;# 
  1377  0F0F                     	;# 
  1378  0F10                     	;# 
  1379  0F11                     	;# 
  1380  0F12                     	;# 
  1381  0F13                     	;# 
  1382  0F14                     	;# 
  1383  0F15                     	;# 
  1384  0F16                     	;# 
  1385  0F17                     	;# 
  1386  0F18                     	;# 
  1387  0F19                     	;# 
  1388  0F1A                     	;# 
  1389  0F1B                     	;# 
  1390  0F1C                     	;# 
  1391  0F1D                     	;# 
  1392  0F1E                     	;# 
  1393  0F1F                     	;# 
  1394  0F20                     	;# 
  1395  0F21                     	;# 
  1396  0F22                     	;# 
  1397  0F23                     	;# 
  1398  0F24                     	;# 
  1399  0F25                     	;# 
  1400  0F26                     	;# 
  1401  0F27                     	;# 
  1402  0F28                     	;# 
  1403  0F29                     	;# 
  1404  0F2A                     	;# 
  1405  0F2B                     	;# 
  1406  0F2C                     	;# 
  1407  0F2D                     	;# 
  1408  0F2E                     	;# 
  1409  0F2F                     	;# 
  1410  0F30                     	;# 
  1411  0F31                     	;# 
  1412  0F32                     	;# 
  1413  0F33                     	;# 
  1414  0F34                     	;# 
  1415  0F35                     	;# 
  1416  0F36                     	;# 
  1417  0F37                     	;# 
  1418  0FE4                     	;# 
  1419  0FE5                     	;# 
  1420  0FE6                     	;# 
  1421  0FE7                     	;# 
  1422  0FE8                     	;# 
  1423  0FE9                     	;# 
  1424  0FEA                     	;# 
  1425  0FEB                     	;# 
  1426  0FED                     	;# 
  1427  0FEE                     	;# 
  1428  0FEF                     	;# 
  1429  0000                     	;# 
  1430  0001                     	;# 
  1431  0002                     	;# 
  1432  0003                     	;# 
  1433  0004                     	;# 
  1434  0005                     	;# 
  1435  0006                     	;# 
  1436  0007                     	;# 
  1437  0008                     	;# 
  1438  0009                     	;# 
  1439  000A                     	;# 
  1440  000B                     	;# 
  1441  000C                     	;# 
  1442  000D                     	;# 
  1443  000E                     	;# 
  1444  000F                     	;# 
  1445  0010                     	;# 
  1446  0011                     	;# 
  1447  0012                     	;# 
  1448  0013                     	;# 
  1449  0015                     	;# 
  1450  0016                     	;# 
  1451  0016                     	;# 
  1452  0017                     	;# 
  1453  0018                     	;# 
  1454  0019                     	;# 
  1455  001A                     	;# 
  1456  001B                     	;# 
  1457  001C                     	;# 
  1458  008C                     	;# 
  1459  008D                     	;# 
  1460  008E                     	;# 
  1461  008F                     	;# 
  1462  0090                     	;# 
  1463  0091                     	;# 
  1464  0092                     	;# 
  1465  0093                     	;# 
  1466  0095                     	;# 
  1467  0096                     	;# 
  1468  0097                     	;# 
  1469  0098                     	;# 
  1470  0099                     	;# 
  1471  009A                     	;# 
  1472  009B                     	;# 
  1473  009B                     	;# 
  1474  009C                     	;# 
  1475  009D                     	;# 
  1476  009E                     	;# 
  1477  009F                     	;# 
  1478  010C                     	;# 
  1479  010D                     	;# 
  1480  010E                     	;# 
  1481  010F                     	;# 
  1482  0110                     	;# 
  1483  0111                     	;# 
  1484  0112                     	;# 
  1485  0113                     	;# 
  1486  0114                     	;# 
  1487  0115                     	;# 
  1488  0116                     	;# 
  1489  0117                     	;# 
  1490  0118                     	;# 
  1491  0119                     	;# 
  1492  011A                     	;# 
  1493  011B                     	;# 
  1494  011B                     	;# 
  1495  011C                     	;# 
  1496  018C                     	;# 
  1497  018D                     	;# 
  1498  018E                     	;# 
  1499  018F                     	;# 
  1500  0190                     	;# 
  1501  0191                     	;# 
  1502  0191                     	;# 
  1503  0192                     	;# 
  1504  0193                     	;# 
  1505  0193                     	;# 
  1506  0194                     	;# 
  1507  0195                     	;# 
  1508  0196                     	;# 
  1509  0197                     	;# 
  1510  0199                     	;# 
  1511  0199                     	;# 
  1512  0199                     	;# 
  1513  019A                     	;# 
  1514  019A                     	;# 
  1515  019A                     	;# 
  1516  019B                     	;# 
  1517  019B                     	;# 
  1518  019B                     	;# 
  1519  019B                     	;# 
  1520  019B                     	;# 
  1521  019C                     	;# 
  1522  019C                     	;# 
  1523  019C                     	;# 
  1524  019D                     	;# 
  1525  019D                     	;# 
  1526  019D                     	;# 
  1527  019E                     	;# 
  1528  019E                     	;# 
  1529  019E                     	;# 
  1530  019F                     	;# 
  1531  019F                     	;# 
  1532  019F                     	;# 
  1533  019F                     	;# 
  1534  019F                     	;# 
  1535  020C                     	;# 
  1536  020D                     	;# 
  1537  020E                     	;# 
  1538  020F                     	;# 
  1539  0210                     	;# 
  1540  0211                     	;# 
  1541  0211                     	;# 
  1542  0212                     	;# 
  1543  0212                     	;# 
  1544  0213                     	;# 
  1545  0213                     	;# 
  1546  0214                     	;# 
  1547  0214                     	;# 
  1548  0215                     	;# 
  1549  0215                     	;# 
  1550  0215                     	;# 
  1551  0215                     	;# 
  1552  0216                     	;# 
  1553  0216                     	;# 
  1554  0217                     	;# 
  1555  0217                     	;# 
  1556  028C                     	;# 
  1557  028D                     	;# 
  1558  028E                     	;# 
  1559  028F                     	;# 
  1560  0290                     	;# 
  1561  0291                     	;# 
  1562  0291                     	;# 
  1563  0292                     	;# 
  1564  0293                     	;# 
  1565  0293                     	;# 
  1566  0298                     	;# 
  1567  0298                     	;# 
  1568  0299                     	;# 
  1569  029A                     	;# 
  1570  029A                     	;# 
  1571  029E                     	;# 
  1572  030C                     	;# 
  1573  030D                     	;# 
  1574  030E                     	;# 
  1575  030F                     	;# 
  1576  0310                     	;# 
  1577  038C                     	;# 
  1578  038D                     	;# 
  1579  038E                     	;# 
  1580  038F                     	;# 
  1581  0390                     	;# 
  1582  0391                     	;# 
  1583  0392                     	;# 
  1584  0393                     	;# 
  1585  0394                     	;# 
  1586  0395                     	;# 
  1587  0396                     	;# 
  1588  0397                     	;# 
  1589  0398                     	;# 
  1590  0399                     	;# 
  1591  039D                     	;# 
  1592  039E                     	;# 
  1593  039F                     	;# 
  1594  0415                     	;# 
  1595  0416                     	;# 
  1596  0417                     	;# 
  1597  041C                     	;# 
  1598  041D                     	;# 
  1599  041E                     	;# 
  1600  0498                     	;# 
  1601  0498                     	;# 
  1602  0499                     	;# 
  1603  049A                     	;# 
  1604  049B                     	;# 
  1605  049B                     	;# 
  1606  049C                     	;# 
  1607  049D                     	;# 
  1608  049E                     	;# 
  1609  049F                     	;# 
  1610  0511                     	;# 
  1611  0515                     	;# 
  1612  0617                     	;# 
  1613  0618                     	;# 
  1614  0619                     	;# 
  1615  0619                     	;# 
  1616  061A                     	;# 
  1617  061B                     	;# 
  1618  061C                     	;# 
  1619  061C                     	;# 
  1620  0691                     	;# 
  1621  0692                     	;# 
  1622  0693                     	;# 
  1623  0694                     	;# 
  1624  0695                     	;# 
  1625  0696                     	;# 
  1626  0697                     	;# 
  1627  0698                     	;# 
  1628  0699                     	;# 
  1629  069A                     	;# 
  1630  069B                     	;# 
  1631  069C                     	;# 
  1632  069D                     	;# 
  1633  069E                     	;# 
  1634  069F                     	;# 
  1635  0E0F                     	;# 
  1636  0E10                     	;# 
  1637  0E11                     	;# 
  1638  0E12                     	;# 
  1639  0E13                     	;# 
  1640  0E14                     	;# 
  1641  0E15                     	;# 
  1642  0E17                     	;# 
  1643  0E20                     	;# 
  1644  0E21                     	;# 
  1645  0E22                     	;# 
  1646  0E24                     	;# 
  1647  0E25                     	;# 
  1648  0E28                     	;# 
  1649  0E29                     	;# 
  1650  0E2A                     	;# 
  1651  0E2B                     	;# 
  1652  0E90                     	;# 
  1653  0E91                     	;# 
  1654  0E92                     	;# 
  1655  0E93                     	;# 
  1656  0E94                     	;# 
  1657  0E95                     	;# 
  1658  0E96                     	;# 
  1659  0E97                     	;# 
  1660  0E98                     	;# 
  1661  0E99                     	;# 
  1662  0E9A                     	;# 
  1663  0E9B                     	;# 
  1664  0E9C                     	;# 
  1665  0E9D                     	;# 
  1666  0E9E                     	;# 
  1667  0E9F                     	;# 
  1668  0EA0                     	;# 
  1669  0EA1                     	;# 
  1670  0EA2                     	;# 
  1671  0EA3                     	;# 
  1672  0EA4                     	;# 
  1673  0EA5                     	;# 
  1674  0EA6                     	;# 
  1675  0EA7                     	;# 
  1676  0EA8                     	;# 
  1677  0EA9                     	;# 
  1678  0EAA                     	;# 
  1679  0EAB                     	;# 
  1680  0EAC                     	;# 
  1681  0EAD                     	;# 
  1682  0EAE                     	;# 
  1683  0EAF                     	;# 
  1684  0EB0                     	;# 
  1685  0EB1                     	;# 
  1686  0EB2                     	;# 
  1687  0F0F                     	;# 
  1688  0F10                     	;# 
  1689  0F11                     	;# 
  1690  0F12                     	;# 
  1691  0F13                     	;# 
  1692  0F14                     	;# 
  1693  0F15                     	;# 
  1694  0F16                     	;# 
  1695  0F17                     	;# 
  1696  0F18                     	;# 
  1697  0F19                     	;# 
  1698  0F1A                     	;# 
  1699  0F1B                     	;# 
  1700  0F1C                     	;# 
  1701  0F1D                     	;# 
  1702  0F1E                     	;# 
  1703  0F1F                     	;# 
  1704  0F20                     	;# 
  1705  0F21                     	;# 
  1706  0F22                     	;# 
  1707  0F23                     	;# 
  1708  0F24                     	;# 
  1709  0F25                     	;# 
  1710  0F26                     	;# 
  1711  0F27                     	;# 
  1712  0F28                     	;# 
  1713  0F29                     	;# 
  1714  0F2A                     	;# 
  1715  0F2B                     	;# 
  1716  0F2C                     	;# 
  1717  0F2D                     	;# 
  1718  0F2E                     	;# 
  1719  0F2F                     	;# 
  1720  0F30                     	;# 
  1721  0F31                     	;# 
  1722  0F32                     	;# 
  1723  0F33                     	;# 
  1724  0F34                     	;# 
  1725  0F35                     	;# 
  1726  0F36                     	;# 
  1727  0F37                     	;# 
  1728  0FE4                     	;# 
  1729  0FE5                     	;# 
  1730  0FE6                     	;# 
  1731  0FE7                     	;# 
  1732  0FE8                     	;# 
  1733  0FE9                     	;# 
  1734  0FEA                     	;# 
  1735  0FEB                     	;# 
  1736  0FED                     	;# 
  1737  0FEE                     	;# 
  1738  0FEF                     	;# 
  1739  0000                     	;# 
  1740  0001                     	;# 
  1741  0002                     	;# 
  1742  0003                     	;# 
  1743  0004                     	;# 
  1744  0005                     	;# 
  1745  0006                     	;# 
  1746  0007                     	;# 
  1747  0008                     	;# 
  1748  0009                     	;# 
  1749  000A                     	;# 
  1750  000B                     	;# 
  1751  000C                     	;# 
  1752  000D                     	;# 
  1753  000E                     	;# 
  1754  000F                     	;# 
  1755  0010                     	;# 
  1756  0011                     	;# 
  1757  0012                     	;# 
  1758  0013                     	;# 
  1759  0015                     	;# 
  1760  0016                     	;# 
  1761  0016                     	;# 
  1762  0017                     	;# 
  1763  0018                     	;# 
  1764  0019                     	;# 
  1765  001A                     	;# 
  1766  001B                     	;# 
  1767  001C                     	;# 
  1768  008C                     	;# 
  1769  008D                     	;# 
  1770  008E                     	;# 
  1771  008F                     	;# 
  1772  0090                     	;# 
  1773  0091                     	;# 
  1774  0092                     	;# 
  1775  0093                     	;# 
  1776  0095                     	;# 
  1777  0096                     	;# 
  1778  0097                     	;# 
  1779  0098                     	;# 
  1780  0099                     	;# 
  1781  009A                     	;# 
  1782  009B                     	;# 
  1783  009B                     	;# 
  1784  009C                     	;# 
  1785  009D                     	;# 
  1786  009E                     	;# 
  1787  009F                     	;# 
  1788  010C                     	;# 
  1789  010D                     	;# 
  1790  010E                     	;# 
  1791  010F                     	;# 
  1792  0110                     	;# 
  1793  0111                     	;# 
  1794  0112                     	;# 
  1795  0113                     	;# 
  1796  0114                     	;# 
  1797  0115                     	;# 
  1798  0116                     	;# 
  1799  0117                     	;# 
  1800  0118                     	;# 
  1801  0119                     	;# 
  1802  011A                     	;# 
  1803  011B                     	;# 
  1804  011B                     	;# 
  1805  011C                     	;# 
  1806  018C                     	;# 
  1807  018D                     	;# 
  1808  018E                     	;# 
  1809  018F                     	;# 
  1810  0190                     	;# 
  1811  0191                     	;# 
  1812  0191                     	;# 
  1813  0192                     	;# 
  1814  0193                     	;# 
  1815  0193                     	;# 
  1816  0194                     	;# 
  1817  0195                     	;# 
  1818  0196                     	;# 
  1819  0197                     	;# 
  1820  0199                     	;# 
  1821  0199                     	;# 
  1822  0199                     	;# 
  1823  019A                     	;# 
  1824  019A                     	;# 
  1825  019A                     	;# 
  1826  019B                     	;# 
  1827  019B                     	;# 
  1828  019B                     	;# 
  1829  019B                     	;# 
  1830  019B                     	;# 
  1831  019C                     	;# 
  1832  019C                     	;# 
  1833  019C                     	;# 
  1834  019D                     	;# 
  1835  019D                     	;# 
  1836  019D                     	;# 
  1837  019E                     	;# 
  1838  019E                     	;# 
  1839  019E                     	;# 
  1840  019F                     	;# 
  1841  019F                     	;# 
  1842  019F                     	;# 
  1843  019F                     	;# 
  1844  019F                     	;# 
  1845  020C                     	;# 
  1846  020D                     	;# 
  1847  020E                     	;# 
  1848  020F                     	;# 
  1849  0210                     	;# 
  1850  0211                     	;# 
  1851  0211                     	;# 
  1852  0212                     	;# 
  1853  0212                     	;# 
  1854  0213                     	;# 
  1855  0213                     	;# 
  1856  0214                     	;# 
  1857  0214                     	;# 
  1858  0215                     	;# 
  1859  0215                     	;# 
  1860  0215                     	;# 
  1861  0215                     	;# 
  1862  0216                     	;# 
  1863  0216                     	;# 
  1864  0217                     	;# 
  1865  0217                     	;# 
  1866  028C                     	;# 
  1867  028D                     	;# 
  1868  028E                     	;# 
  1869  028F                     	;# 
  1870  0290                     	;# 
  1871  0291                     	;# 
  1872  0291                     	;# 
  1873  0292                     	;# 
  1874  0293                     	;# 
  1875  0293                     	;# 
  1876  0298                     	;# 
  1877  0298                     	;# 
  1878  0299                     	;# 
  1879  029A                     	;# 
  1880  029A                     	;# 
  1881  029E                     	;# 
  1882  030C                     	;# 
  1883  030D                     	;# 
  1884  030E                     	;# 
  1885  030F                     	;# 
  1886  0310                     	;# 
  1887  038C                     	;# 
  1888  038D                     	;# 
  1889  038E                     	;# 
  1890  038F                     	;# 
  1891  0390                     	;# 
  1892  0391                     	;# 
  1893  0392                     	;# 
  1894  0393                     	;# 
  1895  0394                     	;# 
  1896  0395                     	;# 
  1897  0396                     	;# 
  1898  0397                     	;# 
  1899  0398                     	;# 
  1900  0399                     	;# 
  1901  039D                     	;# 
  1902  039E                     	;# 
  1903  039F                     	;# 
  1904  0415                     	;# 
  1905  0416                     	;# 
  1906  0417                     	;# 
  1907  041C                     	;# 
  1908  041D                     	;# 
  1909  041E                     	;# 
  1910  0498                     	;# 
  1911  0498                     	;# 
  1912  0499                     	;# 
  1913  049A                     	;# 
  1914  049B                     	;# 
  1915  049B                     	;# 
  1916  049C                     	;# 
  1917  049D                     	;# 
  1918  049E                     	;# 
  1919  049F                     	;# 
  1920  0511                     	;# 
  1921  0515                     	;# 
  1922  0617                     	;# 
  1923  0618                     	;# 
  1924  0619                     	;# 
  1925  0619                     	;# 
  1926  061A                     	;# 
  1927  061B                     	;# 
  1928  061C                     	;# 
  1929  061C                     	;# 
  1930  0691                     	;# 
  1931  0692                     	;# 
  1932  0693                     	;# 
  1933  0694                     	;# 
  1934  0695                     	;# 
  1935  0696                     	;# 
  1936  0697                     	;# 
  1937  0698                     	;# 
  1938  0699                     	;# 
  1939  069A                     	;# 
  1940  069B                     	;# 
  1941  069C                     	;# 
  1942  069D                     	;# 
  1943  069E                     	;# 
  1944  069F                     	;# 
  1945  0E0F                     	;# 
  1946  0E10                     	;# 
  1947  0E11                     	;# 
  1948  0E12                     	;# 
  1949  0E13                     	;# 
  1950  0E14                     	;# 
  1951  0E15                     	;# 
  1952  0E17                     	;# 
  1953  0E20                     	;# 
  1954  0E21                     	;# 
  1955  0E22                     	;# 
  1956  0E24                     	;# 
  1957  0E25                     	;# 
  1958  0E28                     	;# 
  1959  0E29                     	;# 
  1960  0E2A                     	;# 
  1961  0E2B                     	;# 
  1962  0E90                     	;# 
  1963  0E91                     	;# 
  1964  0E92                     	;# 
  1965  0E93                     	;# 
  1966  0E94                     	;# 
  1967  0E95                     	;# 
  1968  0E96                     	;# 
  1969  0E97                     	;# 
  1970  0E98                     	;# 
  1971  0E99                     	;# 
  1972  0E9A                     	;# 
  1973  0E9B                     	;# 
  1974  0E9C                     	;# 
  1975  0E9D                     	;# 
  1976  0E9E                     	;# 
  1977  0E9F                     	;# 
  1978  0EA0                     	;# 
  1979  0EA1                     	;# 
  1980  0EA2                     	;# 
  1981  0EA3                     	;# 
  1982  0EA4                     	;# 
  1983  0EA5                     	;# 
  1984  0EA6                     	;# 
  1985  0EA7                     	;# 
  1986  0EA8                     	;# 
  1987  0EA9                     	;# 
  1988  0EAA                     	;# 
  1989  0EAB                     	;# 
  1990  0EAC                     	;# 
  1991  0EAD                     	;# 
  1992  0EAE                     	;# 
  1993  0EAF                     	;# 
  1994  0EB0                     	;# 
  1995  0EB1                     	;# 
  1996  0EB2                     	;# 
  1997  0F0F                     	;# 
  1998  0F10                     	;# 
  1999  0F11                     	;# 
  2000  0F12                     	;# 
  2001  0F13                     	;# 
  2002  0F14                     	;# 
  2003  0F15                     	;# 
  2004  0F16                     	;# 
  2005  0F17                     	;# 
  2006  0F18                     	;# 
  2007  0F19                     	;# 
  2008  0F1A                     	;# 
  2009  0F1B                     	;# 
  2010  0F1C                     	;# 
  2011  0F1D                     	;# 
  2012  0F1E                     	;# 
  2013  0F1F                     	;# 
  2014  0F20                     	;# 
  2015  0F21                     	;# 
  2016  0F22                     	;# 
  2017  0F23                     	;# 
  2018  0F24                     	;# 
  2019  0F25                     	;# 
  2020  0F26                     	;# 
  2021  0F27                     	;# 
  2022  0F28                     	;# 
  2023  0F29                     	;# 
  2024  0F2A                     	;# 
  2025  0F2B                     	;# 
  2026  0F2C                     	;# 
  2027  0F2D                     	;# 
  2028  0F2E                     	;# 
  2029  0F2F                     	;# 
  2030  0F30                     	;# 
  2031  0F31                     	;# 
  2032  0F32                     	;# 
  2033  0F33                     	;# 
  2034  0F34                     	;# 
  2035  0F35                     	;# 
  2036  0F36                     	;# 
  2037  0F37                     	;# 
  2038  0FE4                     	;# 
  2039  0FE5                     	;# 
  2040  0FE6                     	;# 
  2041  0FE7                     	;# 
  2042  0FE8                     	;# 
  2043  0FE9                     	;# 
  2044  0FEA                     	;# 
  2045  0FEB                     	;# 
  2046  0FED                     	;# 
  2047  0FEE                     	;# 
  2048  0FEF                     	;# 
  2049  0000                     	;# 
  2050  0001                     	;# 
  2051  0002                     	;# 
  2052  0003                     	;# 
  2053  0004                     	;# 
  2054  0005                     	;# 
  2055  0006                     	;# 
  2056  0007                     	;# 
  2057  0008                     	;# 
  2058  0009                     	;# 
  2059  000A                     	;# 
  2060  000B                     	;# 
  2061  000C                     	;# 
  2062  000D                     	;# 
  2063  000E                     	;# 
  2064  000F                     	;# 
  2065  0010                     	;# 
  2066  0011                     	;# 
  2067  0012                     	;# 
  2068  0013                     	;# 
  2069  0015                     	;# 
  2070  0016                     	;# 
  2071  0016                     	;# 
  2072  0017                     	;# 
  2073  0018                     	;# 
  2074  0019                     	;# 
  2075  001A                     	;# 
  2076  001B                     	;# 
  2077  001C                     	;# 
  2078  008C                     	;# 
  2079  008D                     	;# 
  2080  008E                     	;# 
  2081  008F                     	;# 
  2082  0090                     	;# 
  2083  0091                     	;# 
  2084  0092                     	;# 
  2085  0093                     	;# 
  2086  0095                     	;# 
  2087  0096                     	;# 
  2088  0097                     	;# 
  2089  0098                     	;# 
  2090  0099                     	;# 
  2091  009A                     	;# 
  2092  009B                     	;# 
  2093  009B                     	;# 
  2094  009C                     	;# 
  2095  009D                     	;# 
  2096  009E                     	;# 
  2097  009F                     	;# 
  2098  010C                     	;# 
  2099  010D                     	;# 
  2100  010E                     	;# 
  2101  010F                     	;# 
  2102  0110                     	;# 
  2103  0111                     	;# 
  2104  0112                     	;# 
  2105  0113                     	;# 
  2106  0114                     	;# 
  2107  0115                     	;# 
  2108  0116                     	;# 
  2109  0117                     	;# 
  2110  0118                     	;# 
  2111  0119                     	;# 
  2112  011A                     	;# 
  2113  011B                     	;# 
  2114  011B                     	;# 
  2115  011C                     	;# 
  2116  018C                     	;# 
  2117  018D                     	;# 
  2118  018E                     	;# 
  2119  018F                     	;# 
  2120  0190                     	;# 
  2121  0191                     	;# 
  2122  0191                     	;# 
  2123  0192                     	;# 
  2124  0193                     	;# 
  2125  0193                     	;# 
  2126  0194                     	;# 
  2127  0195                     	;# 
  2128  0196                     	;# 
  2129  0197                     	;# 
  2130  0199                     	;# 
  2131  0199                     	;# 
  2132  0199                     	;# 
  2133  019A                     	;# 
  2134  019A                     	;# 
  2135  019A                     	;# 
  2136  019B                     	;# 
  2137  019B                     	;# 
  2138  019B                     	;# 
  2139  019B                     	;# 
  2140  019B                     	;# 
  2141  019C                     	;# 
  2142  019C                     	;# 
  2143  019C                     	;# 
  2144  019D                     	;# 
  2145  019D                     	;# 
  2146  019D                     	;# 
  2147  019E                     	;# 
  2148  019E                     	;# 
  2149  019E                     	;# 
  2150  019F                     	;# 
  2151  019F                     	;# 
  2152  019F                     	;# 
  2153  019F                     	;# 
  2154  019F                     	;# 
  2155  020C                     	;# 
  2156  020D                     	;# 
  2157  020E                     	;# 
  2158  020F                     	;# 
  2159  0210                     	;# 
  2160  0211                     	;# 
  2161  0211                     	;# 
  2162  0212                     	;# 
  2163  0212                     	;# 
  2164  0213                     	;# 
  2165  0213                     	;# 
  2166  0214                     	;# 
  2167  0214                     	;# 
  2168  0215                     	;# 
  2169  0215                     	;# 
  2170  0215                     	;# 
  2171  0215                     	;# 
  2172  0216                     	;# 
  2173  0216                     	;# 
  2174  0217                     	;# 
  2175  0217                     	;# 
  2176  028C                     	;# 
  2177  028D                     	;# 
  2178  028E                     	;# 
  2179  028F                     	;# 
  2180  0290                     	;# 
  2181  0291                     	;# 
  2182  0291                     	;# 
  2183  0292                     	;# 
  2184  0293                     	;# 
  2185  0293                     	;# 
  2186  0298                     	;# 
  2187  0298                     	;# 
  2188  0299                     	;# 
  2189  029A                     	;# 
  2190  029A                     	;# 
  2191  029E                     	;# 
  2192  030C                     	;# 
  2193  030D                     	;# 
  2194  030E                     	;# 
  2195  030F                     	;# 
  2196  0310                     	;# 
  2197  038C                     	;# 
  2198  038D                     	;# 
  2199  038E                     	;# 
  2200  038F                     	;# 
  2201  0390                     	;# 
  2202  0391                     	;# 
  2203  0392                     	;# 
  2204  0393                     	;# 
  2205  0394                     	;# 
  2206  0395                     	;# 
  2207  0396                     	;# 
  2208  0397                     	;# 
  2209  0398                     	;# 
  2210  0399                     	;# 
  2211  039D                     	;# 
  2212  039E                     	;# 
  2213  039F                     	;# 
  2214  0415                     	;# 
  2215  0416                     	;# 
  2216  0417                     	;# 
  2217  041C                     	;# 
  2218  041D                     	;# 
  2219  041E                     	;# 
  2220  0498                     	;# 
  2221  0498                     	;# 
  2222  0499                     	;# 
  2223  049A                     	;# 
  2224  049B                     	;# 
  2225  049B                     	;# 
  2226  049C                     	;# 
  2227  049D                     	;# 
  2228  049E                     	;# 
  2229  049F                     	;# 
  2230  0511                     	;# 
  2231  0515                     	;# 
  2232  0617                     	;# 
  2233  0618                     	;# 
  2234  0619                     	;# 
  2235  0619                     	;# 
  2236  061A                     	;# 
  2237  061B                     	;# 
  2238  061C                     	;# 
  2239  061C                     	;# 
  2240  0691                     	;# 
  2241  0692                     	;# 
  2242  0693                     	;# 
  2243  0694                     	;# 
  2244  0695                     	;# 
  2245  0696                     	;# 
  2246  0697                     	;# 
  2247  0698                     	;# 
  2248  0699                     	;# 
  2249  069A                     	;# 
  2250  069B                     	;# 
  2251  069C                     	;# 
  2252  069D                     	;# 
  2253  069E                     	;# 
  2254  069F                     	;# 
  2255  0E0F                     	;# 
  2256  0E10                     	;# 
  2257  0E11                     	;# 
  2258  0E12                     	;# 
  2259  0E13                     	;# 
  2260  0E14                     	;# 
  2261  0E15                     	;# 
  2262  0E17                     	;# 
  2263  0E20                     	;# 
  2264  0E21                     	;# 
  2265  0E22                     	;# 
  2266  0E24                     	;# 
  2267  0E25                     	;# 
  2268  0E28                     	;# 
  2269  0E29                     	;# 
  2270  0E2A                     	;# 
  2271  0E2B                     	;# 
  2272  0E90                     	;# 
  2273  0E91                     	;# 
  2274  0E92                     	;# 
  2275  0E93                     	;# 
  2276  0E94                     	;# 
  2277  0E95                     	;# 
  2278  0E96                     	;# 
  2279  0E97                     	;# 
  2280  0E98                     	;# 
  2281  0E99                     	;# 
  2282  0E9A                     	;# 
  2283  0E9B                     	;# 
  2284  0E9C                     	;# 
  2285  0E9D                     	;# 
  2286  0E9E                     	;# 
  2287  0E9F                     	;# 
  2288  0EA0                     	;# 
  2289  0EA1                     	;# 
  2290  0EA2                     	;# 
  2291  0EA3                     	;# 
  2292  0EA4                     	;# 
  2293  0EA5                     	;# 
  2294  0EA6                     	;# 
  2295  0EA7                     	;# 
  2296  0EA8                     	;# 
  2297  0EA9                     	;# 
  2298  0EAA                     	;# 
  2299  0EAB                     	;# 
  2300  0EAC                     	;# 
  2301  0EAD                     	;# 
  2302  0EAE                     	;# 
  2303  0EAF                     	;# 
  2304  0EB0                     	;# 
  2305  0EB1                     	;# 
  2306  0EB2                     	;# 
  2307  0F0F                     	;# 
  2308  0F10                     	;# 
  2309  0F11                     	;# 
  2310  0F12                     	;# 
  2311  0F13                     	;# 
  2312  0F14                     	;# 
  2313  0F15                     	;# 
  2314  0F16                     	;# 
  2315  0F17                     	;# 
  2316  0F18                     	;# 
  2317  0F19                     	;# 
  2318  0F1A                     	;# 
  2319  0F1B                     	;# 
  2320  0F1C                     	;# 
  2321  0F1D                     	;# 
  2322  0F1E                     	;# 
  2323  0F1F                     	;# 
  2324  0F20                     	;# 
  2325  0F21                     	;# 
  2326  0F22                     	;# 
  2327  0F23                     	;# 
  2328  0F24                     	;# 
  2329  0F25                     	;# 
  2330  0F26                     	;# 
  2331  0F27                     	;# 
  2332  0F28                     	;# 
  2333  0F29                     	;# 
  2334  0F2A                     	;# 
  2335  0F2B                     	;# 
  2336  0F2C                     	;# 
  2337  0F2D                     	;# 
  2338  0F2E                     	;# 
  2339  0F2F                     	;# 
  2340  0F30                     	;# 
  2341  0F31                     	;# 
  2342  0F32                     	;# 
  2343  0F33                     	;# 
  2344  0F34                     	;# 
  2345  0F35                     	;# 
  2346  0F36                     	;# 
  2347  0F37                     	;# 
  2348  0FE4                     	;# 
  2349  0FE5                     	;# 
  2350  0FE6                     	;# 
  2351  0FE7                     	;# 
  2352  0FE8                     	;# 
  2353  0FE9                     	;# 
  2354  0FEA                     	;# 
  2355  0FEB                     	;# 
  2356  0FED                     	;# 
  2357  0FEE                     	;# 
  2358  0FEF                     	;_messageBuffer
  2359                           
  2360                           	psect	idataBANK3
  2361  1800                     __pidataBANK3:	
  2362                           
  2363                           ;initializer for _samsung_cell_max_charge
  2364  1800  34C4               	retlw	196
  2365  1801  3409               	retlw	9
  2366                           
  2367                           ;initializer for _thermistorBetaValue
  2368  1802  346B               	retlw	107
  2369  1803  340D               	retlw	13
  2370                           
  2371                           	psect	idataBANK4
  2372  317E                     __pidataBANK4:	
  2373                           
  2374                           ;initializer for stoa@F1152
  2375  317E  3428               	retlw	40
  2376  317F  346E               	retlw	110
  2377  3180  3475               	retlw	117
  2378  3181  346C               	retlw	108
  2379  3182  346C               	retlw	108
  2380  3183  3429               	retlw	41
  2381  3184  3400               	retlw	0
  2382                           
  2383                           	psect	stringtext1
  2384  3800                     __pstringtext1:	
  2385  3800                     _lookupTableSamsung_SOC:	
  2386  3800  3464               	retlw	100
  2387  3801  3400               	retlw	0
  2388  3802  3462               	retlw	98
  2389  3803  3400               	retlw	0
  2390  3804  3460               	retlw	96
  2391  3805  3400               	retlw	0
  2392  3806  345D               	retlw	93
  2393  3807  3400               	retlw	0
  2394  3808  345B               	retlw	91
  2395  3809  3400               	retlw	0
  2396  380A  3457               	retlw	87
  2397  380B  3400               	retlw	0
  2398  380C  3454               	retlw	84
  2399  380D  3400               	retlw	0
  2400  380E  3452               	retlw	82
  2401  380F  3400               	retlw	0
  2402  3810  3450               	retlw	80
  2403  3811  3400               	retlw	0
  2404  3812  344E               	retlw	78
  2405  3813  3400               	retlw	0
  2406  3814  344C               	retlw	76
  2407  3815  3400               	retlw	0
  2408  3816  3449               	retlw	73
  2409  3817  3400               	retlw	0
  2410  3818  3447               	retlw	71
  2411  3819  3400               	retlw	0
  2412  381A  3445               	retlw	69
  2413  381B  3400               	retlw	0
  2414  381C  3443               	retlw	67
  2415  381D  3400               	retlw	0
  2416  381E  3440               	retlw	64
  2417  381F  3400               	retlw	0
  2418  3820  343E               	retlw	62
  2419  3821  3400               	retlw	0
  2420  3822  343C               	retlw	60
  2421  3823  3400               	retlw	0
  2422  3824  343A               	retlw	58
  2423  3825  3400               	retlw	0
  2424  3826  3438               	retlw	56
  2425  3827  3400               	retlw	0
  2426  3828  3435               	retlw	53
  2427  3829  3400               	retlw	0
  2428  382A  3433               	retlw	51
  2429  382B  3400               	retlw	0
  2430  382C  3431               	retlw	49
  2431  382D  3400               	retlw	0
  2432  382E  342F               	retlw	47
  2433  382F  3400               	retlw	0
  2434  3830  342C               	retlw	44
  2435  3831  3400               	retlw	0
  2436  3832  342A               	retlw	42
  2437  3833  3400               	retlw	0
  2438  3834  3428               	retlw	40
  2439  3835  3400               	retlw	0
  2440  3836  3426               	retlw	38
  2441  3837  3400               	retlw	0
  2442  3838  3424               	retlw	36
  2443  3839  3400               	retlw	0
  2444  383A  3421               	retlw	33
  2445  383B  3400               	retlw	0
  2446  383C  341F               	retlw	31
  2447  383D  3400               	retlw	0
  2448  383E  341D               	retlw	29
  2449  383F  3400               	retlw	0
  2450  3840  341B               	retlw	27
  2451  3841  3400               	retlw	0
  2452  3842  3418               	retlw	24
  2453  3843  3400               	retlw	0
  2454  3844  3416               	retlw	22
  2455  3845  3400               	retlw	0
  2456  3846  3414               	retlw	20
  2457  3847  3400               	retlw	0
  2458  3848  3412               	retlw	18
  2459  3849  3400               	retlw	0
  2460  384A  3410               	retlw	16
  2461  384B  3400               	retlw	0
  2462  384C  340D               	retlw	13
  2463  384D  3400               	retlw	0
  2464  384E  340B               	retlw	11
  2465  384F  3400               	retlw	0
  2466  3850  3409               	retlw	9
  2467  3851  3400               	retlw	0
  2468  3852  3407               	retlw	7
  2469  3853  3400               	retlw	0
  2470  3854  3404               	retlw	4
  2471  3855  3400               	retlw	0
  2472  3856  3402               	retlw	2
  2473  3857  3400               	retlw	0
  2474  3858  3400               	retlw	0
  2475  3859  3400               	retlw	0
  2476  385A  3400               	retlw	0
  2477  385B  3400               	retlw	0
  2478  385C                     __end_of_lookupTableSamsung_SOC:	
  2479                           
  2480                           	psect	stringtext2
  2481  385C                     __pstringtext2:	
  2482  385C                     _lookupTableSamsung_voltage:	
  2483  385C  3451               	retlw	81
  2484  385D  3410               	retlw	16
  2485  385E  345B               	retlw	91
  2486  385F  340F               	retlw	15
  2487  3860  341F               	retlw	31
  2488  3861  340F               	retlw	15
  2489  3862  340F               	retlw	15
  2490  3863  340F               	retlw	15
  2491  3864  340A               	retlw	10
  2492  3865  340F               	retlw	15
  2493  3866  3406               	retlw	6
  2494  3867  340F               	retlw	15
  2495  3868  3405               	retlw	5
  2496  3869  340F               	retlw	15
  2497  386A  3403               	retlw	3
  2498  386B  340F               	retlw	15
  2499  386C  3401               	retlw	1
  2500  386D  340F               	retlw	15
  2501  386E  3400               	retlw	0
  2502  386F  340F               	retlw	15
  2503  3870  34FE               	retlw	254
  2504  3871  340E               	retlw	14
  2505  3872  34FC               	retlw	252
  2506  3873  340E               	retlw	14
  2507  3874  34FA               	retlw	250
  2508  3875  340E               	retlw	14
  2509  3876  34F8               	retlw	248
  2510  3877  340E               	retlw	14
  2511  3878  34F6               	retlw	246
  2512  3879  340E               	retlw	14
  2513  387A  34F3               	retlw	243
  2514  387B  340E               	retlw	14
  2515  387C  34F1               	retlw	241
  2516  387D  340E               	retlw	14
  2517  387E  34EE               	retlw	238
  2518  387F  340E               	retlw	14
  2519  3880  34EB               	retlw	235
  2520  3881  340E               	retlw	14
  2521  3882  34E8               	retlw	232
  2522  3883  340E               	retlw	14
  2523  3884  34E5               	retlw	229
  2524  3885  340E               	retlw	14
  2525  3886  34E1               	retlw	225
  2526  3887  340E               	retlw	14
  2527  3888  34DD               	retlw	221
  2528  3889  340E               	retlw	14
  2529  388A  34D9               	retlw	217
  2530  388B  340E               	retlw	14
  2531  388C  34D4               	retlw	212
  2532  388D  340E               	retlw	14
  2533  388E  34CF               	retlw	207
  2534  388F  340E               	retlw	14
  2535  3890  34C9               	retlw	201
  2536  3891  340E               	retlw	14
  2537  3892  34C3               	retlw	195
  2538  3893  340E               	retlw	14
  2539  3894  34BB               	retlw	187
  2540  3895  340E               	retlw	14
  2541  3896  34B4               	retlw	180
  2542  3897  340E               	retlw	14
  2543  3898  34AB               	retlw	171
  2544  3899  340E               	retlw	14
  2545  389A  34A0               	retlw	160
  2546  389B  340E               	retlw	14
  2547  389C  3495               	retlw	149
  2548  389D  340E               	retlw	14
  2549  389E  3487               	retlw	135
  2550  389F  340E               	retlw	14
  2551  38A0  3477               	retlw	119
  2552  38A1  340E               	retlw	14
  2553  38A2  3464               	retlw	100
  2554  38A3  340E               	retlw	14
  2555  38A4  344D               	retlw	77
  2556  38A5  340E               	retlw	14
  2557  38A6  3431               	retlw	49
  2558  38A7  340E               	retlw	14
  2559  38A8  340D               	retlw	13
  2560  38A9  340E               	retlw	14
  2561  38AA  34DE               	retlw	222
  2562  38AB  340D               	retlw	13
  2563  38AC  349F               	retlw	159
  2564  38AD  340D               	retlw	13
  2565  38AE  3443               	retlw	67
  2566  38AF  340D               	retlw	13
  2567  38B0  34B3               	retlw	179
  2568  38B1  340C               	retlw	12
  2569  38B2  34B1               	retlw	177
  2570  38B3  340B               	retlw	11
  2571  38B4  345E               	retlw	94
  2572  38B5  3409               	retlw	9
  2573  38B6  3400               	retlw	0
  2574  38B7  3400               	retlw	0
  2575  38B8                     __end_of_lookupTableSamsung_voltage:	
  2576                           
  2577                           	psect	stringtext3
  2578  3908                     __pstringtext3:	
  2579  3908                     _OCD_threshold_setting:	
  2580  3908  3411               	retlw	17
  2581  3909  3400               	retlw	0
  2582  390A  3416               	retlw	22
  2583  390B  3400               	retlw	0
  2584  390C  341C               	retlw	28
  2585  390D  3400               	retlw	0
  2586  390E  3421               	retlw	33
  2587  390F  3400               	retlw	0
  2588  3910  3427               	retlw	39
  2589  3911  3400               	retlw	0
  2590  3912  342C               	retlw	44
  2591  3913  3400               	retlw	0
  2592  3914  3432               	retlw	50
  2593  3915  3400               	retlw	0
  2594  3916  3438               	retlw	56
  2595  3917  3400               	retlw	0
  2596  3918  343D               	retlw	61
  2597  3919  3400               	retlw	0
  2598  391A  3443               	retlw	67
  2599  391B  3400               	retlw	0
  2600  391C  3448               	retlw	72
  2601  391D  3400               	retlw	0
  2602  391E  344E               	retlw	78
  2603  391F  3400               	retlw	0
  2604  3920  3453               	retlw	83
  2605  3921  3400               	retlw	0
  2606  3922  3459               	retlw	89
  2607  3923  3400               	retlw	0
  2608  3924  345E               	retlw	94
  2609  3925  3400               	retlw	0
  2610  3926  3464               	retlw	100
  2611  3927  3400               	retlw	0
  2612  3928                     __end_of_OCD_threshold_setting:	
  2613                           
  2614                           	psect	stringtext4
  2615  3A30                     __pstringtext4:	
  2616  3A30                     _OCD_delay_setting:	
  2617  3A30  3408               	retlw	8
  2618  3A31  3400               	retlw	0
  2619  3A32  3414               	retlw	20
  2620  3A33  3400               	retlw	0
  2621  3A34  3428               	retlw	40
  2622  3A35  3400               	retlw	0
  2623  3A36  3450               	retlw	80
  2624  3A37  3400               	retlw	0
  2625  3A38  34A0               	retlw	160
  2626  3A39  3400               	retlw	0
  2627  3A3A  3440               	retlw	64
  2628  3A3B  3401               	retlw	1
  2629  3A3C  3480               	retlw	128
  2630  3A3D  3402               	retlw	2
  2631  3A3E  3400               	retlw	0
  2632  3A3F  3405               	retlw	5
  2633  3A40                     __end_of_OCD_delay_setting:	
  2634                           
  2635                           	psect	stringtext5
  2636  3A40                     __pstringtext5:	
  2637  3A40                     _SCD_threshold_setting:	
  2638  3A40  342C               	retlw	44
  2639  3A41  3400               	retlw	0
  2640  3A42  3443               	retlw	67
  2641  3A43  3400               	retlw	0
  2642  3A44  3459               	retlw	89
  2643  3A45  3400               	retlw	0
  2644  3A46  346F               	retlw	111
  2645  3A47  3400               	retlw	0
  2646  3A48  3485               	retlw	133
  2647  3A49  3400               	retlw	0
  2648  3A4A  349B               	retlw	155
  2649  3A4B  3400               	retlw	0
  2650  3A4C  34B2               	retlw	178
  2651  3A4D  3400               	retlw	0
  2652  3A4E  34C8               	retlw	200
  2653  3A4F  3400               	retlw	0
  2654  3A50                     __end_of_SCD_threshold_setting:	
  2655                           
  2656                           	psect	stringtext6
  2657  3A60                     __pstringtext6:	
  2658  3A60                     _OV_delay_setting:	
  2659  3A60  3401               	retlw	1
  2660  3A61  3400               	retlw	0
  2661  3A62  3402               	retlw	2
  2662  3A63  3400               	retlw	0
  2663  3A64  3404               	retlw	4
  2664  3A65  3400               	retlw	0
  2665  3A66  3408               	retlw	8
  2666  3A67  3400               	retlw	0
  2667  3A68                     __end_of_OV_delay_setting:	
  2668                           
  2669                           	psect	stringtext7
  2670  3A68                     __pstringtext7:	
  2671  3A68                     _UV_delay_setting:	
  2672  3A68  3401               	retlw	1
  2673  3A69  3400               	retlw	0
  2674  3A6A  3404               	retlw	4
  2675  3A6B  3400               	retlw	0
  2676  3A6C  3408               	retlw	8
  2677  3A6D  3400               	retlw	0
  2678  3A6E  3410               	retlw	16
  2679  3A6F  3400               	retlw	0
  2680  3A70                     __end_of_UV_delay_setting:	
  2681                           
  2682                           	psect	stringtext8
  2683  3A70                     __pstringtext8:	
  2684  3A70                     _SCD_delay_setting:	
  2685  3A70  3446               	retlw	70
  2686  3A71  3400               	retlw	0
  2687  3A72  3464               	retlw	100
  2688  3A73  3400               	retlw	0
  2689  3A74  34C8               	retlw	200
  2690  3A75  3400               	retlw	0
  2691  3A76  3490               	retlw	144
  2692  3A77  3401               	retlw	1
  2693  3A78                     __end_of_SCD_delay_setting:	
  2694                           
  2695                           	psect	stringtext9
  2696  3A78                     __pstringtext9:	
  2697  3A78                     _Lg4:	
  2698  3A78  3426               	retlw	38
  2699  3A79  349E               	retlw	158
  2700  3A7A  3478               	retlw	120
  2701  3A7B  343E               	retlw	62
  2702  3A7C                     __end_of_Lg4:	
  2703                           
  2704                           	psect	stringtext10
  2705  3A7C                     __pstringtext10:	
  2706  3A7C                     _Lg3:	
  2707  3A7C  34EE               	retlw	238
  2708  3A7D  34E9               	retlw	233
  2709  3A7E  3491               	retlw	145
  2710  3A7F  343E               	retlw	62
  2711  3A80                     __end_of_Lg3:	
  2712                           
  2713                           	psect	stringtext11
  2714  3A80                     __pstringtext11:	
  2715  3A80                     _Lg2:	
  2716  3A80  3413               	retlw	19
  2717  3A81  34CE               	retlw	206
  2718  3A82  34CC               	retlw	204
  2719  3A83  343E               	retlw	62
  2720  3A84                     __end_of_Lg2:	
  2721                           
  2722                           	psect	stringtext12
  2723  3A84                     __pstringtext12:	
  2724  3A84                     _Lg1:	
  2725  3A84  34AA               	retlw	170
  2726  3A85  34AA               	retlw	170
  2727  3A86  342A               	retlw	42
  2728  3A87  343F               	retlw	63
  2729  3A88                     __end_of_Lg1:	
  2730                           
  2731                           	psect	stringtext13
  2732  3A88                     __pstringtext13:	
  2733  3A88                     _ln2_lo:	
  2734  3A88  34D1               	retlw	209
  2735  3A89  34F7               	retlw	247
  2736  3A8A  3417               	retlw	23
  2737  3A8B  3437               	retlw	55
  2738  3A8C                     __end_of_ln2_lo:	
  2739                           
  2740                           	psect	stringtext14
  2741  3A8C                     __pstringtext14:	
  2742  3A8C                     _ln2_hi:	
  2743  3A8C  3480               	retlw	128
  2744  3A8D  3471               	retlw	113
  2745  3A8E  3431               	retlw	49
  2746  3A8F  343F               	retlw	63
  2747  3A90                     __end_of_ln2_hi:	
  2748                           
  2749                           	psect	stringtext15
  2750  38B8                     __pstringtext15:	
  2751  38B8                     _ATmega328_address:	
  2752  38B8  3402               	retlw	2
  2753  38B9  3400               	retlw	0
  2754  38BA                     __end_of_ATmega328_address:	
  2755  0016                     _TMR1	set	22
  2756  0003                     _STATUSbits	set	3
  2757  000B                     _INTCONbits	set	11
  2758  0018                     _T1CONbits	set	24
  2759  0011                     _PIR1bits	set	17
  2760  0097                     _WDTCONbits	set	151
  2761  0090                     _TRISEbits	set	144
  2762  008C                     _TRISAbits	set	140
  2763  008E                     _TRISCbits	set	142
  2764  008D                     _TRISBbits	set	141
  2765  0091                     _PIE1bits	set	145
  2766  0476                     _TRISC6	set	1142
  2767  0477                     _TRISC7	set	1143
  2768  04CF                     _SPLLEN	set	1231
  2769  04CE                     _IRCF3	set	1230
  2770  04CD                     _IRCF2	set	1229
  2771  04CC                     _IRCF1	set	1228
  2772  04CB                     _IRCF0	set	1227
  2773  04C9                     _SCS1	set	1225
  2774  04C8                     _SCS0	set	1224
  2775  0110                     _LATEbits	set	272
  2776  010C                     _LATAbits	set	268
  2777  019A                     _TX1REG	set	410
  2778  0199                     _RC1REG	set	409
  2779  019D                     _RC1STAbits	set	413
  2780  019B                     _SPBRG	set	411
  2781  018E                     _ANSELCbits	set	398
  2782  018D                     _ANSELBbits	set	397
  2783  0CF5                     _TXEN	set	3317
  2784  0CEC                     _CREN	set	3308
  2785  0CEF                     _SPEN	set	3311
  2786  0CF4                     _SYNC	set	3316
  2787  0CF2                     _BRGH	set	3314
  2788  0216                     _SSPCON2bits	set	534
  2789  0211                     _SSPBUF	set	529
  2790  0212                     _SSPADD	set	530
  2791  0215                     _SSPCONbits	set	533
  2792  0E24                     _RXPPSbits	set	3620
  2793  0E20                     _SSPCLKPPSbits	set	3616
  2794  0E21                     _SSPDATPPSbits	set	3617
  2795  0E0F                     _PPSLOCKbits	set	3599
  2796  0E0F                     _PPSLOCK	set	3599
  2797  0E9A                     _RB2PPSbits	set	3738
  2798  0EA5                     _RC5PPSbits	set	3749
  2799  0EA4                     _RC4PPSbits	set	3748
  2800  38BA                     STR_1:	
  2801  38BA  3457               	retlw	87	;'W'
  2802  38BB  3441               	retlw	65	;'A'
  2803  38BC  3454               	retlw	84	;'T'
  2804  38BD  3443               	retlw	67	;'C'
  2805  38BE  3448               	retlw	72	;'H'
  2806  38BF  3444               	retlw	68	;'D'
  2807  38C0  344F               	retlw	79	;'O'
  2808  38C1  3447               	retlw	71	;'G'
  2809  38C2  3420               	retlw	32	;' '
  2810  38C3  344E               	retlw	78	;'N'
  2811  38C4  344F               	retlw	79	;'O'
  2812  38C5  3454               	retlw	84	;'T'
  2813  38C6  3420               	retlw	32	;' '
  2814  38C7  344B               	retlw	75	;'K'
  2815  38C8  3449               	retlw	73	;'I'
  2816  38C9  3443               	retlw	67	;'C'
  2817  38CA  344B               	retlw	75	;'K'
  2818  38CB  3445               	retlw	69	;'E'
  2819  38CC  3444               	retlw	68	;'D'
  2820  38CD  343A               	retlw	58	;':'
  2821  38CE  3420               	retlw	32	;' '
  2822  38CF  3441               	retlw	65	;'A'
  2823  38D0  3446               	retlw	70	;'F'
  2824  38D1  3445               	retlw	69	;'E'
  2825  38D2  3420               	retlw	32	;' '
  2826  38D3  3463               	retlw	99	;'c'
  2827  38D4  346F               	retlw	111	;'o'
  2828  38D5  346D               	retlw	109	;'m'
  2829  38D6  346D               	retlw	109	;'m'
  2830  38D7  3473               	retlw	115	;'s'
  2831  38D8  3420               	retlw	32	;' '
  2832  38D9  3465               	retlw	101	;'e'
  2833  38DA  3472               	retlw	114	;'r'
  2834  38DB  3472               	retlw	114	;'r'
  2835  38DC  346F               	retlw	111	;'o'
  2836  38DD  3472               	retlw	114	;'r'
  2837  38DE  3420               	retlw	32	;' '
  2838  38DF  340A               	retlw	10
  2839  38E0  340D               	retlw	13
  2840  38E1  3400               	retlw	0
  2841                           
  2842                           	psect	stringtext16
  2843  38E2                     __pstringtext16:	
  2844  38E2                     STR_9:	
  2845  38E2  3450               	retlw	80	;'P'
  2846  38E3  3472               	retlw	114	;'r'
  2847  38E4  3469               	retlw	105	;'i'
  2848  38E5  346E               	retlw	110	;'n'
  2849  38E6  3474               	retlw	116	;'t'
  2850  38E7  3469               	retlw	105	;'i'
  2851  38E8  346E               	retlw	110	;'n'
  2852  38E9  3467               	retlw	103	;'g'
  2853  38EA  3420               	retlw	32	;' '
  2854  38EB  346F               	retlw	111	;'o'
  2855  38EC  3475               	retlw	117	;'u'
  2856  38ED  3474               	retlw	116	;'t'
  2857  38EE  3420               	retlw	32	;' '
  2858  38EF  3441               	retlw	65	;'A'
  2859  38F0  3446               	retlw	70	;'F'
  2860  38F1  3445               	retlw	69	;'E'
  2861  38F2  3420               	retlw	32	;' '
  2862  38F3  3472               	retlw	114	;'r'
  2863  38F4  3465               	retlw	101	;'e'
  2864  38F5  3467               	retlw	103	;'g'
  2865  38F6  3469               	retlw	105	;'i'
  2866  38F7  3473               	retlw	115	;'s'
  2867  38F8  3474               	retlw	116	;'t'
  2868  38F9  3465               	retlw	101	;'e'
  2869  38FA  3472               	retlw	114	;'r'
  2870  38FB  3420               	retlw	32	;' '
  2871  38FC  3476               	retlw	118	;'v'
  2872  38FD  3461               	retlw	97	;'a'
  2873  38FE  346C               	retlw	108	;'l'
  2874  38FF  3475               	retlw	117	;'u'
  2875  3900  3465               	retlw	101	;'e'
  2876  3901  3473               	retlw	115	;'s'
  2877  3902  342E               	retlw	46	;'.'
  2878  3903  342E               	retlw	46	;'.'
  2879  3904  342E               	retlw	46	;'.'
  2880  3905  340A               	retlw	10
  2881  3906  340D               	retlw	13
  2882  3907  3400               	retlw	0
  2883                           
  2884                           	psect	stringtext17
  2885  3928                     __pstringtext17:	
  2886  3928                     STR_13:	
  2887  3928  3430               	retlw	48	;'0'
  2888  3929  3478               	retlw	120	;'x'
  2889  392A  3430               	retlw	48	;'0'
  2890  392B  3434               	retlw	52	;'4'
  2891  392C  3420               	retlw	32	;' '
  2892  392D  3453               	retlw	83	;'S'
  2893  392E  3459               	retlw	89	;'Y'
  2894  392F  3453               	retlw	83	;'S'
  2895  3930  345F               	retlw	95	;'_'
  2896  3931  3443               	retlw	67	;'C'
  2897  3932  3454               	retlw	84	;'T'
  2898  3933  3452               	retlw	82	;'R'
  2899  3934  344C               	retlw	76	;'L'
  2900  3935  3431               	retlw	49	;'1'
  2901  3936  343A               	retlw	58	;':'
  2902  3937  3420               	retlw	32	;' '
  2903  3938  3425               	retlw	37	;'%'
  2904  3939  3469               	retlw	105	;'i'
  2905  393A  3420               	retlw	32	;' '
  2906  393B  340A               	retlw	10
  2907  393C  340D               	retlw	13
  2908  393D  3400               	retlw	0
  2909                           
  2910                           	psect	stringtext18
  2911  393E                     __pstringtext18:	
  2912  393E                     STR_14:	
  2913  393E  3430               	retlw	48	;'0'
  2914  393F  3478               	retlw	120	;'x'
  2915  3940  3430               	retlw	48	;'0'
  2916  3941  3435               	retlw	53	;'5'
  2917  3942  3420               	retlw	32	;' '
  2918  3943  3453               	retlw	83	;'S'
  2919  3944  3459               	retlw	89	;'Y'
  2920  3945  3453               	retlw	83	;'S'
  2921  3946  345F               	retlw	95	;'_'
  2922  3947  3443               	retlw	67	;'C'
  2923  3948  3454               	retlw	84	;'T'
  2924  3949  3452               	retlw	82	;'R'
  2925  394A  344C               	retlw	76	;'L'
  2926  394B  3432               	retlw	50	;'2'
  2927  394C  343A               	retlw	58	;':'
  2928  394D  3420               	retlw	32	;' '
  2929  394E  3425               	retlw	37	;'%'
  2930  394F  3469               	retlw	105	;'i'
  2931  3950  3420               	retlw	32	;' '
  2932  3951  340A               	retlw	10
  2933  3952  340D               	retlw	13
  2934  3953  3400               	retlw	0
  2935                           
  2936                           	psect	stringtext19
  2937  3954                     __pstringtext19:	
  2938  3954                     STR_12:	
  2939  3954  3430               	retlw	48	;'0'
  2940  3955  3478               	retlw	120	;'x'
  2941  3956  3430               	retlw	48	;'0'
  2942  3957  3431               	retlw	49	;'1'
  2943  3958  3420               	retlw	32	;' '
  2944  3959  3443               	retlw	67	;'C'
  2945  395A  3445               	retlw	69	;'E'
  2946  395B  344C               	retlw	76	;'L'
  2947  395C  344C               	retlw	76	;'L'
  2948  395D  3442               	retlw	66	;'B'
  2949  395E  3441               	retlw	65	;'A'
  2950  395F  344C               	retlw	76	;'L'
  2951  3960  3431               	retlw	49	;'1'
  2952  3961  343A               	retlw	58	;':'
  2953  3962  3420               	retlw	32	;' '
  2954  3963  3425               	retlw	37	;'%'
  2955  3964  3469               	retlw	105	;'i'
  2956  3965  3420               	retlw	32	;' '
  2957  3966  340A               	retlw	10
  2958  3967  340D               	retlw	13
  2959  3968  3400               	retlw	0
  2960                           
  2961                           	psect	stringtext20
  2962  3969                     __pstringtext20:	
  2963  3969                     STR_15:	
  2964  3969  3430               	retlw	48	;'0'
  2965  396A  3478               	retlw	120	;'x'
  2966  396B  3430               	retlw	48	;'0'
  2967  396C  3436               	retlw	54	;'6'
  2968  396D  3420               	retlw	32	;' '
  2969  396E  3450               	retlw	80	;'P'
  2970  396F  3452               	retlw	82	;'R'
  2971  3970  344F               	retlw	79	;'O'
  2972  3971  3454               	retlw	84	;'T'
  2973  3972  3445               	retlw	69	;'E'
  2974  3973  3443               	retlw	67	;'C'
  2975  3974  3454               	retlw	84	;'T'
  2976  3975  3431               	retlw	49	;'1'
  2977  3976  343A               	retlw	58	;':'
  2978  3977  3420               	retlw	32	;' '
  2979  3978  3425               	retlw	37	;'%'
  2980  3979  3469               	retlw	105	;'i'
  2981  397A  3420               	retlw	32	;' '
  2982  397B  340A               	retlw	10
  2983  397C  340D               	retlw	13
  2984  397D  3400               	retlw	0
  2985                           
  2986                           	psect	stringtext21
  2987  397E                     __pstringtext21:	
  2988  397E                     STR_16:	
  2989  397E  3430               	retlw	48	;'0'
  2990  397F  3478               	retlw	120	;'x'
  2991  3980  3430               	retlw	48	;'0'
  2992  3981  3437               	retlw	55	;'7'
  2993  3982  3420               	retlw	32	;' '
  2994  3983  3450               	retlw	80	;'P'
  2995  3984  3452               	retlw	82	;'R'
  2996  3985  344F               	retlw	79	;'O'
  2997  3986  3454               	retlw	84	;'T'
  2998  3987  3445               	retlw	69	;'E'
  2999  3988  3443               	retlw	67	;'C'
  3000  3989  3454               	retlw	84	;'T'
  3001  398A  3432               	retlw	50	;'2'
  3002  398B  343A               	retlw	58	;':'
  3003  398C  3420               	retlw	32	;' '
  3004  398D  3425               	retlw	37	;'%'
  3005  398E  3469               	retlw	105	;'i'
  3006  398F  3420               	retlw	32	;' '
  3007  3990  340A               	retlw	10
  3008  3991  340D               	retlw	13
  3009  3992  3400               	retlw	0
  3010                           
  3011                           	psect	stringtext22
  3012  3993                     __pstringtext22:	
  3013  3993                     STR_17:	
  3014  3993  3430               	retlw	48	;'0'
  3015  3994  3478               	retlw	120	;'x'
  3016  3995  3430               	retlw	48	;'0'
  3017  3996  3438               	retlw	56	;'8'
  3018  3997  3420               	retlw	32	;' '
  3019  3998  3450               	retlw	80	;'P'
  3020  3999  3452               	retlw	82	;'R'
  3021  399A  344F               	retlw	79	;'O'
  3022  399B  3454               	retlw	84	;'T'
  3023  399C  3445               	retlw	69	;'E'
  3024  399D  3443               	retlw	67	;'C'
  3025  399E  3454               	retlw	84	;'T'
  3026  399F  3433               	retlw	51	;'3'
  3027  39A0  343A               	retlw	58	;':'
  3028  39A1  3420               	retlw	32	;' '
  3029  39A2  3425               	retlw	37	;'%'
  3030  39A3  3469               	retlw	105	;'i'
  3031  39A4  3420               	retlw	32	;' '
  3032  39A5  340A               	retlw	10
  3033  39A6  340D               	retlw	13
  3034  39A7  3400               	retlw	0
  3035                           
  3036                           	psect	stringtext23
  3037  39A8                     __pstringtext23:	
  3038  39A8                     STR_11:	
  3039  39A8  3430               	retlw	48	;'0'
  3040  39A9  3478               	retlw	120	;'x'
  3041  39AA  3430               	retlw	48	;'0'
  3042  39AB  3430               	retlw	48	;'0'
  3043  39AC  3420               	retlw	32	;' '
  3044  39AD  3453               	retlw	83	;'S'
  3045  39AE  3459               	retlw	89	;'Y'
  3046  39AF  3453               	retlw	83	;'S'
  3047  39B0  345F               	retlw	95	;'_'
  3048  39B1  3453               	retlw	83	;'S'
  3049  39B2  3454               	retlw	84	;'T'
  3050  39B3  3441               	retlw	65	;'A'
  3051  39B4  3454               	retlw	84	;'T'
  3052  39B5  343A               	retlw	58	;':'
  3053  39B6  3420               	retlw	32	;' '
  3054  39B7  3425               	retlw	37	;'%'
  3055  39B8  3469               	retlw	105	;'i'
  3056  39B9  3420               	retlw	32	;' '
  3057  39BA  340A               	retlw	10
  3058  39BB  340D               	retlw	13
  3059  39BC  3400               	retlw	0
  3060                           
  3061                           	psect	stringtext24
  3062  39BD                     __pstringtext24:	
  3063  39BD                     STR_18:	
  3064  39BD  3430               	retlw	48	;'0'
  3065  39BE  3478               	retlw	120	;'x'
  3066  39BF  3430               	retlw	48	;'0'
  3067  39C0  3439               	retlw	57	;'9'
  3068  39C1  3420               	retlw	32	;' '
  3069  39C2  344F               	retlw	79	;'O'
  3070  39C3  3456               	retlw	86	;'V'
  3071  39C4  345F               	retlw	95	;'_'
  3072  39C5  3454               	retlw	84	;'T'
  3073  39C6  3452               	retlw	82	;'R'
  3074  39C7  3449               	retlw	73	;'I'
  3075  39C8  3450               	retlw	80	;'P'
  3076  39C9  343A               	retlw	58	;':'
  3077  39CA  3420               	retlw	32	;' '
  3078  39CB  3425               	retlw	37	;'%'
  3079  39CC  3469               	retlw	105	;'i'
  3080  39CD  3420               	retlw	32	;' '
  3081  39CE  340A               	retlw	10
  3082  39CF  340D               	retlw	13
  3083  39D0  3400               	retlw	0
  3084                           
  3085                           	psect	stringtext25
  3086  39D1                     __pstringtext25:	
  3087  39D1                     STR_19:	
  3088  39D1  3430               	retlw	48	;'0'
  3089  39D2  3478               	retlw	120	;'x'
  3090  39D3  3430               	retlw	48	;'0'
  3091  39D4  3441               	retlw	65	;'A'
  3092  39D5  3420               	retlw	32	;' '
  3093  39D6  3455               	retlw	85	;'U'
  3094  39D7  3456               	retlw	86	;'V'
  3095  39D8  345F               	retlw	95	;'_'
  3096  39D9  3454               	retlw	84	;'T'
  3097  39DA  3452               	retlw	82	;'R'
  3098  39DB  3449               	retlw	73	;'I'
  3099  39DC  3450               	retlw	80	;'P'
  3100  39DD  343A               	retlw	58	;':'
  3101  39DE  3420               	retlw	32	;' '
  3102  39DF  3425               	retlw	37	;'%'
  3103  39E0  3469               	retlw	105	;'i'
  3104  39E1  3420               	retlw	32	;' '
  3105  39E2  340A               	retlw	10
  3106  39E3  340D               	retlw	13
  3107  39E4  3400               	retlw	0
  3108                           
  3109                           	psect	stringtext26
  3110  39E5                     __pstringtext26:	
  3111  39E5                     STR_8:	
  3112  39E5  3425               	retlw	37	;'%'
  3113  39E6  3464               	retlw	100	;'d'
  3114  39E7  342C               	retlw	44	;','
  3115  39E8  3425               	retlw	37	;'%'
  3116  39E9  3464               	retlw	100	;'d'
  3117  39EA  342C               	retlw	44	;','
  3118  39EB  3425               	retlw	37	;'%'
  3119  39EC  3464               	retlw	100	;'d'
  3120  39ED  342C               	retlw	44	;','
  3121  39EE  3425               	retlw	37	;'%'
  3122  39EF  3464               	retlw	100	;'d'
  3123  39F0  342C               	retlw	44	;','
  3124  39F1  3425               	retlw	37	;'%'
  3125  39F2  3464               	retlw	100	;'d'
  3126  39F3  342C               	retlw	44	;','
  3127  39F4  3425               	retlw	37	;'%'
  3128  39F5  3464               	retlw	100	;'d'
  3129  39F6  340A               	retlw	10
  3130  39F7  340D               	retlw	13
  3131  39F8  3400               	retlw	0
  3132                           
  3133                           	psect	stringtext27
  3134  39F9                     __pstringtext27:	
  3135  39F9                     STR_20:	
  3136  39F9  3430               	retlw	48	;'0'
  3137  39FA  3478               	retlw	120	;'x'
  3138  39FB  3430               	retlw	48	;'0'
  3139  39FC  3442               	retlw	66	;'B'
  3140  39FD  3420               	retlw	32	;' '
  3141  39FE  3443               	retlw	67	;'C'
  3142  39FF  3443               	retlw	67	;'C'
  3143  3A00  345F               	retlw	95	;'_'
  3144  3A01  3443               	retlw	67	;'C'
  3145  3A02  3446               	retlw	70	;'F'
  3146  3A03  3447               	retlw	71	;'G'
  3147  3A04  343A               	retlw	58	;':'
  3148  3A05  3420               	retlw	32	;' '
  3149  3A06  3425               	retlw	37	;'%'
  3150  3A07  3469               	retlw	105	;'i'
  3151  3A08  3420               	retlw	32	;' '
  3152  3A09  340A               	retlw	10
  3153  3A0A  340D               	retlw	13
  3154  3A0B  3400               	retlw	0
  3155                           
  3156                           	psect	stringtext28
  3157  3A0C                     __pstringtext28:	
  3158  3A0C                     STR_21:	
  3159  3A0C  3430               	retlw	48	;'0'
  3160  3A0D  3478               	retlw	120	;'x'
  3161  3A0E  3433               	retlw	51	;'3'
  3162  3A0F  3432               	retlw	50	;'2'
  3163  3A10  3420               	retlw	32	;' '
  3164  3A11  3443               	retlw	67	;'C'
  3165  3A12  3443               	retlw	67	;'C'
  3166  3A13  345F               	retlw	95	;'_'
  3167  3A14  3448               	retlw	72	;'H'
  3168  3A15  3449               	retlw	73	;'I'
  3169  3A16  343A               	retlw	58	;':'
  3170  3A17  3420               	retlw	32	;' '
  3171  3A18  3425               	retlw	37	;'%'
  3172  3A19  3469               	retlw	105	;'i'
  3173  3A1A  3420               	retlw	32	;' '
  3174  3A1B  340A               	retlw	10
  3175  3A1C  340D               	retlw	13
  3176  3A1D  3400               	retlw	0
  3177                           
  3178                           	psect	stringtext29
  3179  3A1E                     __pstringtext29:	
  3180  3A1E                     STR_22:	
  3181  3A1E  3430               	retlw	48	;'0'
  3182  3A1F  3478               	retlw	120	;'x'
  3183  3A20  3433               	retlw	51	;'3'
  3184  3A21  3433               	retlw	51	;'3'
  3185  3A22  3420               	retlw	32	;' '
  3186  3A23  3443               	retlw	67	;'C'
  3187  3A24  3443               	retlw	67	;'C'
  3188  3A25  345F               	retlw	95	;'_'
  3189  3A26  344C               	retlw	76	;'L'
  3190  3A27  344F               	retlw	79	;'O'
  3191  3A28  343A               	retlw	58	;':'
  3192  3A29  3420               	retlw	32	;' '
  3193  3A2A  3425               	retlw	37	;'%'
  3194  3A2B  3469               	retlw	105	;'i'
  3195  3A2C  3420               	retlw	32	;' '
  3196  3A2D  340A               	retlw	10
  3197  3A2E  340D               	retlw	13
  3198  3A2F  3400               	retlw	0
  3199                           
  3200                           	psect	stringtext30
  3201  3A50                     __pstringtext30:	
  3202  3A50                     STR_6:	
  3203  3A50  3425               	retlw	37	;'%'
  3204  3A51  3464               	retlw	100	;'d'
  3205  3A52  342C               	retlw	44	;','
  3206  3A53  3425               	retlw	37	;'%'
  3207  3A54  3464               	retlw	100	;'d'
  3208  3A55  342C               	retlw	44	;','
  3209  3A56  3425               	retlw	37	;'%'
  3210  3A57  3464               	retlw	100	;'d'
  3211  3A58  342C               	retlw	44	;','
  3212  3A59  3425               	retlw	37	;'%'
  3213  3A5A  3464               	retlw	100	;'d'
  3214  3A5B  342C               	retlw	44	;','
  3215  3A5C  3425               	retlw	37	;'%'
  3216  3A5D  3464               	retlw	100	;'d'
  3217  3A5E  342C               	retlw	44	;','
  3218  3A5F  3400               	retlw	0
  3219                           
  3220                           	psect	stringtext31
  3221  3A90                     __pstringtext31:	
  3222  3A90                     STR_100:	
  3223  3A90  3468               	retlw	104	;'h'
  3224  3A91  3468               	retlw	104	;'h'
  3225  3A92  3458               	retlw	88	;'X'
  3226  3A93  3400               	retlw	0
  3227                           
  3228                           	psect	stringtext32
  3229  3A94                     __pstringtext32:	
  3230  3A94                     STR_24:	
  3231  3A94  3468               	retlw	104	;'h'
  3232  3A95  3468               	retlw	104	;'h'
  3233  3A96  3464               	retlw	100	;'d'
  3234  3A97  3400               	retlw	0
  3235                           
  3236                           	psect	stringtext33
  3237  3A98                     __pstringtext33:	
  3238  3A98                     STR_28:	
  3239  3A98  3468               	retlw	104	;'h'
  3240  3A99  3468               	retlw	104	;'h'
  3241  3A9A  3469               	retlw	105	;'i'
  3242  3A9B  3400               	retlw	0
  3243                           
  3244                           	psect	stringtext34
  3245  3A9C                     __pstringtext34:	
  3246  3A9C                     STR_66:	
  3247  3A9C  3468               	retlw	104	;'h'
  3248  3A9D  3468               	retlw	104	;'h'
  3249  3A9E  346E               	retlw	110	;'n'
  3250  3A9F  3400               	retlw	0
  3251                           
  3252                           	psect	stringtext35
  3253  3AA0                     __pstringtext35:	
  3254  3AA0                     STR_51:	
  3255  3AA0  3468               	retlw	104	;'h'
  3256  3AA1  3468               	retlw	104	;'h'
  3257  3AA2  346F               	retlw	111	;'o'
  3258  3AA3  3400               	retlw	0
  3259                           
  3260                           	psect	stringtext36
  3261  3AA4                     __pstringtext36:	
  3262  3AA4                     STR_81:	
  3263  3AA4  3468               	retlw	104	;'h'
  3264  3AA5  3468               	retlw	104	;'h'
  3265  3AA6  3475               	retlw	117	;'u'
  3266  3AA7  3400               	retlw	0
  3267                           
  3268                           	psect	stringtext37
  3269  3AA8                     __pstringtext37:	
  3270  3AA8                     STR_96:	
  3271  3AA8  3468               	retlw	104	;'h'
  3272  3AA9  3468               	retlw	104	;'h'
  3273  3AAA  3478               	retlw	120	;'x'
  3274  3AAB  3400               	retlw	0
  3275                           
  3276                           	psect	stringtext38
  3277  3AAC                     __pstringtext38:	
  3278  3AAC                     STR_118:	
  3279  3AAC  347A               	retlw	122	;'z'
  3280  3AAD  3458               	retlw	88	;'X'
  3281  3AAE  3400               	retlw	0
  3282                           
  3283                           	psect	stringtext39
  3284  3AAF                     __pstringtext39:	
  3285  3AAF                     STR_42:	
  3286  3AAF  347A               	retlw	122	;'z'
  3287  3AB0  3464               	retlw	100	;'d'
  3288  3AB1  3400               	retlw	0
  3289                           
  3290                           	psect	stringtext40
  3291  3AB2                     __pstringtext40:	
  3292  3AB2                     STR_46:	
  3293  3AB2  347A               	retlw	122	;'z'
  3294  3AB3  3469               	retlw	105	;'i'
  3295  3AB4  3400               	retlw	0
  3296                           
  3297                           	psect	stringtext41
  3298  3AB5                     __pstringtext41:	
  3299  3AB5                     STR_76:	
  3300  3AB5  347A               	retlw	122	;'z'
  3301  3AB6  346E               	retlw	110	;'n'
  3302  3AB7  3400               	retlw	0
  3303                           
  3304                           	psect	stringtext42
  3305  3AB8                     __pstringtext42:	
  3306  3AB8                     STR_61:	
  3307  3AB8  347A               	retlw	122	;'z'
  3308  3AB9  346F               	retlw	111	;'o'
  3309  3ABA  3400               	retlw	0
  3310                           
  3311                           	psect	stringtext43
  3312  3ABB                     __pstringtext43:	
  3313  3ABB                     STR_91:	
  3314  3ABB  347A               	retlw	122	;'z'
  3315  3ABC  3475               	retlw	117	;'u'
  3316  3ABD  3400               	retlw	0
  3317                           
  3318                           	psect	stringtext44
  3319  3ABE                     __pstringtext44:	
  3320  3ABE                     STR_114:	
  3321  3ABE  347A               	retlw	122	;'z'
  3322  3ABF  3478               	retlw	120	;'x'
  3323  3AC0  3400               	retlw	0
  3324                           
  3325                           	psect	stringtext45
  3326  3AC1                     __pstringtext45:	
  3327  3AC1                     STR_5:	
  3328  3AC1  3430               	retlw	48	;'0'
  3329  3AC2  342C               	retlw	44	;','
  3330  3AC3  3400               	retlw	0
  3331                           
  3332                           	psect	stringtext46
  3333  0000                     __pstringtext46:	
  3334  3966                     
  3335                           ; #config settings
  3336  0000                     
  3337                           	psect	cinit
  3338  0020                     start_initialization:	
  3339  0020                     __initialization:		;BIGRAM
  3340                           
  3341                           ; Initialize objects allocated to BANK3
  3342  0020  0023               	movlb	3	; select bank3
  3343  0021  3198  2000  3180   	fcall	__pidataBANK3	;fetch initializer
  3344  0024  00EB               	movwf	__pdataBANK3& (0+127)
  3345  0025  3198  2001  3180   	fcall	__pidataBANK3+1	;fetch initializer
  3346  0028  00EC               	movwf	(__pdataBANK3+1)& (0+127)
  3347  0029  3198  2002  3180   	fcall	__pidataBANK3+2	;fetch initializer
  3348  002C  00ED               	movwf	(__pdataBANK3+2)& (0+127)
  3349  002D  3198  2003  3180   	fcall	__pidataBANK3+3	;fetch initializer
  3350  0030  00EE               	movwf	(__pdataBANK3+3)& (0+127)
  3351                           
  3352                           ; Initialize objects allocated to BANK4
  3353  0031  307E               	movlw	low __pidataBANK4
  3354  0032  0084               	movwf	4
  3355  0033  30B1               	movlw	(high __pidataBANK4)| (0+128)
  3356  0034  0085               	movwf	5
  3357  0035  0024               	movlb	4	; select bank4
  3358  0036  0012               	moviw fsr0++
  3359  0037  00CA               	movwf	__pdataBANK4& (0+127)
  3360  0038  0012               	moviw fsr0++
  3361  0039  00CB               	movwf	(__pdataBANK4+1)& (0+127)
  3362  003A  0012               	moviw fsr0++
  3363  003B  00CC               	movwf	(__pdataBANK4+2)& (0+127)
  3364  003C  0012               	moviw fsr0++
  3365  003D  00CD               	movwf	(__pdataBANK4+3)& (0+127)
  3366  003E  0012               	moviw fsr0++
  3367  003F  00CE               	movwf	(__pdataBANK4+4)& (0+127)
  3368  0040  0012               	moviw fsr0++
  3369  0041  00CF               	movwf	(__pdataBANK4+5)& (0+127)
  3370  0042  0012               	moviw fsr0++
  3371  0043  00D0               	movwf	(__pdataBANK4+6)& (0+127)
  3372                           
  3373                           ; Clear objects allocated to BIGRAM
  3374  0044  3071               	movlw	low (0+10097)
  3375  0045  0084               	movwf	4
  3376  0046  3027               	movlw	high (0+10097)
  3377  0047  0085               	movwf	5
  3378  0048  307F               	movlw	127
  3379  0049  00FE               	movwf	btemp
  3380  004A  3000               	movlw	0
  3381  004B  00FF               	movwf	btemp+1
  3382  004C  31B1  21D9  3180   	fcall	clear_ram0
  3383                           
  3384                           ; Clear objects allocated to COMMON
  3385  004F  01FC               	clrf	__pbssCOMMON& (0+127)
  3386                           
  3387                           ; Clear objects allocated to BANK2
  3388  0050  3066               	movlw	low __pbssBANK2
  3389  0051  0084               	movwf	4
  3390  0052  3001               	movlw	high __pbssBANK2
  3391  0053  0085               	movwf	5
  3392  0054  300A               	movlw	10
  3393  0055  00FE               	movwf	btemp
  3394  0056  3000               	movlw	0
  3395  0057  00FF               	movwf	btemp+1
  3396  0058  31B1  21D9  3180   	fcall	clear_ram0
  3397                           
  3398                           ; Clear objects allocated to BANK3
  3399  005B  30A0               	movlw	low __pbssBANK3
  3400  005C  0084               	movwf	4
  3401  005D  3001               	movlw	high __pbssBANK3
  3402  005E  0085               	movwf	5
  3403  005F  304B               	movlw	75
  3404  0060  00FE               	movwf	btemp
  3405  0061  3000               	movlw	0
  3406  0062  00FF               	movwf	btemp+1
  3407  0063  31B1  21D9  3180   	fcall	clear_ram0
  3408                           
  3409                           ; Clear objects allocated to BANK4
  3410  0066  3020               	movlw	low __pbssBANK4
  3411  0067  0084               	movwf	4
  3412  0068  3002               	movlw	high __pbssBANK4
  3413  0069  0085               	movwf	5
  3414  006A  302A               	movlw	42
  3415  006B  00FE               	movwf	btemp
  3416  006C  3000               	movlw	0
  3417  006D  00FF               	movwf	btemp+1
  3418  006E  31B1  21D9         	fcall	clear_ram0
  3419  0070                     end_of_initialization:	
  3420                           ;End of C runtime variable initialization code
  3421                           
  3422  0070                     __end_of__initialization:	
  3423  0070  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3424  0071  0020               	movlb	0
  3425  0072  31B4  2C37         	ljmp	_main	;jump to C main() function
  3426                           
  3427                           	psect	bssCOMMON
  3428  007C                     __pbssCOMMON:	
  3429  007C                     _sys_stat:	
  3430  007C                     	ds	1
  3431                           
  3432                           	psect	bssBANK2
  3433  0166                     __pbssBANK2:	
  3434  0166                     _width:	
  3435  0166                     	ds	2
  3436  0168                     _prec:	
  3437  0168                     	ds	2
  3438  016A                     _flags:	
  3439  016A                     	ds	2
  3440  016C                     _adcOffset:	
  3441  016C                     	ds	2
  3442  016E                     _adcGain:	
  3443  016E                     	ds	2
  3444                           
  3445                           	psect	bssBANK3
  3446  01A0                     __pbssBANK3:	
  3447  01A0                     _cellSOC:	
  3448  01A0                     	ds	10
  3449  01AA                     _cellVoltages:	
  3450  01AA                     	ds	10
  3451  01B4                     logf@F469:	
  3452  01B4                     	ds	4
  3453  01B8                     _shuntResistorValue_mOhm:	
  3454  01B8                     	ds	4
  3455  01BC                     _temperatureThermistor:	
  3456  01BC                     	ds	4
  3457  01C0                     _batCurrent:	
  3458  01C0                     	ds	4
  3459  01C4                     _batVoltage:	
  3460  01C4                     	ds	4
  3461  01C8                     _errno:	
  3462  01C8                     	ds	2
  3463  01CA                     _nout:	
  3464  01CA                     	ds	2
  3465  01CC                     _minCellVoltage:	
  3466  01CC                     	ds	2
  3467  01CE                     _maxCellVoltage:	
  3468  01CE                     	ds	2
  3469  01D0                     _ocd_error:	
  3470  01D0                     	ds	2
  3471  01D2                     _scd_error:	
  3472  01D2                     	ds	2
  3473  01D4                     _ov_error:	
  3474  01D4                     	ds	2
  3475  01D6                     _uv_error:	
  3476  01D6                     	ds	2
  3477  01D8                     _alert_error:	
  3478  01D8                     	ds	2
  3479  01DA                     _XR_error:	
  3480  01DA                     	ds	2
  3481  01DC                     _maxCellTempDischarge:	
  3482  01DC                     	ds	2
  3483  01DE                     _maxCellTempCharge:	
  3484  01DE                     	ds	2
  3485  01E0                     _minCellTempDischarge:	
  3486  01E0                     	ds	2
  3487  01E2                     _minCellTempCharge:	
  3488  01E2                     	ds	2
  3489  01E4                     myIsr@count:	
  3490  01E4                     	ds	1
  3491  01E5                     _tmr1_flag:	
  3492  01E5                     	ds	1
  3493  01E6                     _protect3:	
  3494  01E6                     	ds	1
  3495  01E7                     _protect2:	
  3496  01E7                     	ds	1
  3497  01E8                     _protect1:	
  3498  01E8                     	ds	1
  3499  01E9                     _currState:	
  3500  01E9                     	ds	1
  3501  01EA                     _toggleColor:	
  3502  01EA                     	ds	1
  3503                           
  3504                           	psect	dataBANK3
  3505  01EB                     __pdataBANK3:	
  3506  01EB                     _samsung_cell_max_charge:	
  3507  01EB                     	ds	2
  3508  01ED                     _thermistorBetaValue:	
  3509  01ED                     	ds	2
  3510                           
  3511                           	psect	bssBANK4
  3512  0220                     __pbssBANK4:	
  3513  0220                     _cellCharge:	
  3514  0220                     	ds	10
  3515  022A                     _dbuf:	
  3516  022A                     	ds	32
  3517                           
  3518                           	psect	dataBANK4
  3519  024A                     __pdataBANK4:	
  3520  024A                     stoa@F1152:	
  3521  024A                     	ds	7
  3522                           
  3523                           	psect	clrtext
  3524  31D9                     clear_ram0:	
  3525                           ;	Called with FSR0 containing the base address, and
  3526                           ;	btemp/btemp+1 has the size to clear
  3527                           
  3528  31D9  0064               	clrwdt	;clear the watchdog before getting into this loop
  3529  31DA                     clrloop0:	
  3530  31DA  0180               	clrf	0	;clear RAM location pointed to by FSR
  3531  31DB  3101               	addfsr 0,1
  3532  31DC  3001               	movlw	1
  3533  31DD  02FE               	subwf	126,f
  3534  31DE  3000               	movlw	0
  3535  31DF  3BFF               	subwfb	127,f
  3536  31E0  087F               	movf	127,w
  3537  31E1  047E               	iorwf	126,w
  3538  31E2  1903               	btfsc	3,2
  3539  31E3  3400               	retlw	0	;all done for this memory range, return
  3540  31E4  29DA               	goto	clrloop0	;have we reached the end yet?
  3541                           
  3542                           	psect	cstackBANK2
  3543  0120                     __pcstackBANK2:	
  3544  0120                     logf@R:	
  3545                           
  3546                           ; 4 bytes @ 0x0
  3547  0120                     	ds	4
  3548  0124                     logf@t1:	
  3549                           
  3550                           ; 4 bytes @ 0x4
  3551  0124                     	ds	4
  3552  0128                     logf@t2:	
  3553                           
  3554                           ; 4 bytes @ 0x8
  3555  0128                     	ds	4
  3556  012C                     _logf$2164:	
  3557                           
  3558                           ; 4 bytes @ 0xC
  3559  012C                     	ds	4
  3560  0130                     _logf$2165:	
  3561                           
  3562                           ; 4 bytes @ 0x10
  3563  0130                     	ds	4
  3564  0134                     _logf$2166:	
  3565                           
  3566                           ; 4 bytes @ 0x14
  3567  0134                     	ds	4
  3568  0138                     _logf$2167:	
  3569                           
  3570                           ; 4 bytes @ 0x18
  3571  0138                     	ds	4
  3572  013C                     logf@k:	
  3573                           
  3574                           ; 2 bytes @ 0x1C
  3575  013C                     	ds	2
  3576  013E                     logf@hfsq:	
  3577                           
  3578                           ; 4 bytes @ 0x1E
  3579  013E                     	ds	4
  3580  0142                     logf@dk:	
  3581                           
  3582                           ; 4 bytes @ 0x22
  3583  0142                     	ds	4
  3584  0146                     logf@s:	
  3585                           
  3586                           ; 4 bytes @ 0x26
  3587  0146                     	ds	4
  3588  014A                     logf@z:	
  3589                           
  3590                           ; 4 bytes @ 0x2A
  3591  014A                     	ds	4
  3592  014E                     logf@w:	
  3593                           
  3594                           ; 4 bytes @ 0x2E
  3595  014E                     	ds	4
  3596  0152                     _logf$2163:	
  3597                           
  3598                           ; 4 bytes @ 0x32
  3599  0152                     	ds	4
  3600  0156                     logf@u:	
  3601                           
  3602                           ; 4 bytes @ 0x36
  3603  0156                     	ds	4
  3604  015A                     logf@f:	
  3605                           
  3606                           ; 4 bytes @ 0x3A
  3607  015A                     	ds	4
  3608  015E                     logf@ix:	
  3609                           
  3610                           ; 4 bytes @ 0x3E
  3611  015E                     	ds	4
  3612  0162                     ??_statemachine:	
  3613                           
  3614                           ; 1 bytes @ 0x42
  3615  0162                     	ds	2
  3616  0164                     ??_main:	
  3617                           
  3618                           ; 1 bytes @ 0x44
  3619  0164                     	ds	2
  3620                           
  3621                           	psect	cstackBANK1
  3622  00A0                     __pcstackBANK1:	
  3623  00A0                     ?___flsub:	
  3624  00A0                     vfpfcnvrt@cp:	
  3625                           ; 4 bytes @ 0x0
  3626                           
  3627  00A0                     setShortCircuitProtection@scaler:	
  3628                           ; 2 bytes @ 0x0
  3629                           
  3630  00A0                     setOverCurrentDischargeProtection@scaler:	
  3631                           ; 4 bytes @ 0x0
  3632                           
  3633  00A0                     ___flsub@a:	
  3634                           ; 4 bytes @ 0x0
  3635                           
  3636                           
  3637                           ; 4 bytes @ 0x0
  3638  00A0                     	ds	2
  3639  00A2                     vfpfcnvrt@done:	
  3640                           
  3641                           ; 2 bytes @ 0x2
  3642  00A2                     	ds	2
  3643  00A4                     _vfpfcnvrt$1373:	
  3644  00A4                     ___flsub@b:	
  3645                           ; 2 bytes @ 0x4
  3646                           
  3647  00A4                     _setShortCircuitProtection$2149:	
  3648                           ; 4 bytes @ 0x4
  3649                           
  3650  00A4                     _setOverCurrentDischargeProtection$2150:	
  3651                           ; 4 bytes @ 0x4
  3652                           
  3653                           
  3654                           ; 4 bytes @ 0x4
  3655  00A4                     	ds	2
  3656  00A6                     _vfpfcnvrt$1374:	
  3657                           
  3658                           ; 2 bytes @ 0x6
  3659  00A6                     	ds	2
  3660  00A8                     ?_logf:	
  3661  00A8                     ?___fltol:	
  3662                           ; 4 bytes @ 0x8
  3663                           
  3664  00A8                     setShortCircuitProtection@i:	
  3665                           ; 4 bytes @ 0x8
  3666                           
  3667  00A8                     setOverCurrentDischargeProtection@i:	
  3668                           ; 2 bytes @ 0x8
  3669                           
  3670  00A8                     ___fltol@f1:	
  3671                           ; 2 bytes @ 0x8
  3672                           
  3673  00A8                     logf@x:	
  3674                           ; 4 bytes @ 0x8
  3675                           
  3676  00A8                     vfpfcnvrt@ll:	
  3677                           ; 4 bytes @ 0x8
  3678                           
  3679                           
  3680                           ; 8 bytes @ 0x8
  3681  00A8                     	ds	2
  3682  00AA                     setShortCircuitProtection@i_1014:	
  3683  00AA                     setOverCurrentDischargeProtection@i_1023:	
  3684                           ; 2 bytes @ 0xA
  3685                           
  3686                           
  3687                           ; 2 bytes @ 0xA
  3688  00AA                     	ds	2
  3689  00AC                     ??_logf:	
  3690  00AC                     ??___fltol:	
  3691                           ; 1 bytes @ 0xC
  3692                           
  3693                           
  3694                           ; 1 bytes @ 0xC
  3695  00AC                     	ds	4
  3696  00B0                     vfpfcnvrt@vp:	
  3697                           
  3698                           ; 2 bytes @ 0x10
  3699  00B0                     	ds	1
  3700  00B1                     ??_updateVoltages:	
  3701  00B1                     ??_calibrate_BATTSOC:	
  3702                           ; 1 bytes @ 0x11
  3703                           
  3704  00B1                     ??_updateCurrent:	
  3705                           ; 1 bytes @ 0x11
  3706                           
  3707  00B1                     coulomb_counter@i:	
  3708                           ; 1 bytes @ 0x11
  3709                           
  3710                           
  3711                           ; 2 bytes @ 0x11
  3712  00B1                     	ds	1
  3713  00B2                     vfpfcnvrt@c:	
  3714                           
  3715                           ; 1 bytes @ 0x12
  3716  00B2                     	ds	1
  3717  00B3                     vfpfcnvrt@llu:	
  3718                           
  3719                           ; 8 bytes @ 0x13
  3720  00B3                     	ds	1
  3721  00B4                     ??_updateTemperatures:	
  3722  00B4                     _updateVoltages$2151:	
  3723                           ; 1 bytes @ 0x14
  3724                           
  3725                           
  3726                           ; 4 bytes @ 0x14
  3727  00B4                     	ds	1
  3728  00B5                     updateCurrent@adcVal:	
  3729                           
  3730                           ; 2 bytes @ 0x15
  3731  00B5                     	ds	1
  3732  00B6                     calibrate_BATTSOC@i:	
  3733                           
  3734                           ; 2 bytes @ 0x16
  3735  00B6                     	ds	1
  3736  00B7                     _updateTemperatures$2152:	
  3737                           
  3738                           ; 4 bytes @ 0x17
  3739  00B7                     	ds	1
  3740  00B8                     calibrate_BATTSOC@j:	
  3741  00B8                     updateVoltages@adcVal:	
  3742                           ; 2 bytes @ 0x18
  3743                           
  3744                           
  3745                           ; 4 bytes @ 0x18
  3746  00B8                     	ds	3
  3747  00BB                     ?_vsnprintf:	
  3748  00BB                     vsnprintf@s:	
  3749                           ; 2 bytes @ 0x1B
  3750                           
  3751  00BB                     _updateTemperatures$2153:	
  3752                           ; 2 bytes @ 0x1B
  3753                           
  3754                           
  3755                           ; 4 bytes @ 0x1B
  3756  00BB                     	ds	2
  3757  00BD                     vsnprintf@n:	
  3758                           
  3759                           ; 2 bytes @ 0x1D
  3760  00BD                     	ds	2
  3761  00BF                     vsnprintf@fmt:	
  3762  00BF                     _updateTemperatures$2154:	
  3763                           ; 2 bytes @ 0x1F
  3764                           
  3765                           
  3766                           ; 4 bytes @ 0x1F
  3767  00BF                     	ds	2
  3768  00C1                     vsnprintf@ap:	
  3769                           
  3770                           ; 1 bytes @ 0x21
  3771  00C1                     	ds	1
  3772  00C2                     _vsnprintf$1945:	
  3773                           
  3774                           ; 2 bytes @ 0x22
  3775  00C2                     	ds	1
  3776  00C3                     _updateTemperatures$2155:	
  3777                           
  3778                           ; 4 bytes @ 0x23
  3779  00C3                     	ds	1
  3780  00C4                     vsnprintf@cnt:	
  3781                           
  3782                           ; 2 bytes @ 0x24
  3783  00C4                     	ds	2
  3784  00C6                     vsnprintf@f:	
  3785                           
  3786                           ; 6 bytes @ 0x26
  3787  00C6                     	ds	1
  3788  00C7                     _updateTemperatures$2156:	
  3789                           
  3790                           ; 4 bytes @ 0x27
  3791  00C7                     	ds	4
  3792  00CB                     _updateTemperatures$2157:	
  3793                           
  3794                           ; 4 bytes @ 0x2B
  3795  00CB                     	ds	1
  3796  00CC                     ?_snprintf:	
  3797  00CC                     snprintf@s:	
  3798                           ; 2 bytes @ 0x2C
  3799                           
  3800                           
  3801                           ; 2 bytes @ 0x2C
  3802  00CC                     	ds	2
  3803  00CE                     snprintf@n:	
  3804                           
  3805                           ; 2 bytes @ 0x2E
  3806  00CE                     	ds	1
  3807  00CF                     _updateTemperatures$2158:	
  3808                           
  3809                           ; 4 bytes @ 0x2F
  3810  00CF                     	ds	1
  3811  00D0                     snprintf@fmt:	
  3812                           
  3813                           ; 2 bytes @ 0x30
  3814  00D0                     	ds	3
  3815  00D3                     _updateTemperatures$2159:	
  3816                           
  3817                           ; 4 bytes @ 0x33
  3818  00D3                     	ds	4
  3819  00D7                     _updateTemperatures$2160:	
  3820                           
  3821                           ; 4 bytes @ 0x37
  3822  00D7                     	ds	4
  3823  00DB                     _updateTemperatures$2161:	
  3824                           
  3825                           ; 4 bytes @ 0x3B
  3826  00DB                     	ds	4
  3827  00DF                     _updateTemperatures$2162:	
  3828                           
  3829                           ; 4 bytes @ 0x3F
  3830  00DF                     	ds	4
  3831  00E3                     updateTemperatures@tmp:	
  3832                           
  3833                           ; 4 bytes @ 0x43
  3834  00E3                     	ds	4
  3835  00E7                     updateTemperatures@adcVal:	
  3836                           
  3837                           ; 2 bytes @ 0x47
  3838  00E7                     	ds	2
  3839  00E9                     updateTemperatures@vtsx:	
  3840                           
  3841                           ; 2 bytes @ 0x49
  3842  00E9                     	ds	2
  3843  00EB                     updateTemperatures@rts:	
  3844                           
  3845                           ; 4 bytes @ 0x4B
  3846  00EB                     	ds	4
  3847  00EF                     statemachine@success:	
  3848                           
  3849                           ; 1 bytes @ 0x4F
  3850  00EF                     	ds	1
  3851                           
  3852                           	psect	cstackCOMMON
  3853  0070                     __pcstackCOMMON:	
  3854  0070                     ?_initClock:	
  3855  0070                     ?_init_GPIO:	
  3856                           ; 1 bytes @ 0x0
  3857                           
  3858  0070                     ?_initWDT:	
  3859                           ; 1 bytes @ 0x0
  3860                           
  3861  0070                     ?_init_I2C:	
  3862                           ; 1 bytes @ 0x0
  3863                           
  3864  0070                     ?_init_TMR1:	
  3865                           ; 1 bytes @ 0x0
  3866                           
  3867  0070                     ?_init_RGB:	
  3868                           ; 1 bytes @ 0x0
  3869                           
  3870  0070                     ?_watchdog_timeout_shutdown:	
  3871                           ; 1 bytes @ 0x0
  3872                           
  3873  0070                     ?_statemachine:	
  3874                           ; 1 bytes @ 0x0
  3875                           
  3876  0070                     ?_RGB_AWAIT_AFE_CONN:	
  3877                           ; 1 bytes @ 0x0
  3878                           
  3879  0070                     ?_init_AFE:	
  3880                           ; 1 bytes @ 0x0
  3881                           
  3882  0070                     ?_AFE_UPDATE:	
  3883                           ; 1 bytes @ 0x0
  3884                           
  3885  0070                     ?_printcellParameters:	
  3886                           ; 1 bytes @ 0x0
  3887                           
  3888  0070                     ?_internal_16:	
  3889                           ; 1 bytes @ 0x0
  3890                           
  3891  0070                     ?_updateVoltages:	
  3892                           ; 1 bytes @ 0x0
  3893                           
  3894  0070                     ?_calibrate_BATTSOC:	
  3895                           ; 1 bytes @ 0x0
  3896                           
  3897  0070                     ?_coulomb_counter:	
  3898                           ; 1 bytes @ 0x0
  3899                           
  3900  0070                     ?_updateCurrent:	
  3901                           ; 1 bytes @ 0x0
  3902                           
  3903  0070                     ?_updateTemperatures:	
  3904                           ; 1 bytes @ 0x0
  3905                           
  3906  0070                     ?_putch:	
  3907                           ; 1 bytes @ 0x0
  3908                           
  3909  0070                     ?_myIsr:	
  3910                           ; 1 bytes @ 0x0
  3911                           
  3912  0070                     ??_myIsr:	
  3913                           ; 1 bytes @ 0x0
  3914                           
  3915  0070                     ?_main:	
  3916                           ; 1 bytes @ 0x0
  3917                           
  3918  0070                     ?_EUSART_Write:	
  3919                           ; 1 bytes @ 0x0
  3920                           
  3921  0070                     ?_send_I2C_startBit:	
  3922                           ; 1 bytes @ 0x0
  3923                           
  3924  0070                     ?_send_I2C_stopBit:	
  3925                           ; 1 bytes @ 0x0
  3926                           
  3927  0070                     ?_send_I2C_NACK:	
  3928                           ; 1 bytes @ 0x0
  3929                           
  3930  0070                     putch@c:	
  3931                           ; 1 bytes @ 0x0
  3932                           
  3933                           
  3934                           ; 1 bytes @ 0x0
  3935  0070                     	ds	1
  3936  0071                     ??_initClock:	
  3937  0071                     ??_init_GPIO:	
  3938                           ; 1 bytes @ 0x1
  3939                           
  3940  0071                     ??_initWDT:	
  3941                           ; 1 bytes @ 0x1
  3942                           
  3943  0071                     ??_init_I2C:	
  3944                           ; 1 bytes @ 0x1
  3945                           
  3946  0071                     ??_init_TMR1:	
  3947                           ; 1 bytes @ 0x1
  3948                           
  3949  0071                     ??_init_RGB:	
  3950                           ; 1 bytes @ 0x1
  3951                           
  3952  0071                     ?_RGB_color:	
  3953                           ; 1 bytes @ 0x1
  3954                           
  3955  0071                     ??_internal_16:	
  3956                           ; 1 bytes @ 0x1
  3957                           
  3958  0071                     ?_setShuntResistorValue:	
  3959                           ; 1 bytes @ 0x1
  3960                           
  3961  0071                     ??_putch:	
  3962                           ; 1 bytes @ 0x1
  3963                           
  3964  0071                     ??_EUSART_Write:	
  3965                           ; 1 bytes @ 0x1
  3966                           
  3967  0071                     ?_send_I2C_data:	
  3968                           ; 1 bytes @ 0x1
  3969                           
  3970  0071                     ?_send_I2C_controlByte:	
  3971                           ; 1 bytes @ 0x1
  3972                           
  3973  0071                     ??_send_I2C_startBit:	
  3974                           ; 1 bytes @ 0x1
  3975                           
  3976  0071                     ??_send_I2C_stopBit:	
  3977                           ; 1 bytes @ 0x1
  3978                           
  3979  0071                     ??_send_I2C_NACK:	
  3980                           ; 1 bytes @ 0x1
  3981                           
  3982  0071                     ??___aodiv:	
  3983                           ; 1 bytes @ 0x1
  3984                           
  3985  0071                     ??___aomod:	
  3986                           ; 1 bytes @ 0x1
  3987                           
  3988  0071                     ??___lodiv:	
  3989                           ; 1 bytes @ 0x1
  3990                           
  3991  0071                     ??___lomod:	
  3992                           ; 1 bytes @ 0x1
  3993                           
  3994  0071                     ?_fputc:	
  3995                           ; 1 bytes @ 0x1
  3996                           
  3997  0071                     ?_strlen:	
  3998                           ; 2 bytes @ 0x1
  3999                           
  4000  0071                     ?_isupper:	
  4001                           ; 2 bytes @ 0x1
  4002                           
  4003  0071                     ?_isalpha:	
  4004                           ; 2 bytes @ 0x1
  4005                           
  4006  0071                     ?_isdigit:	
  4007                           ; 2 bytes @ 0x1
  4008                           
  4009  0071                     ?_strncmp:	
  4010                           ; 2 bytes @ 0x1
  4011                           
  4012  0071                     ?__Umul8_16:	
  4013                           ; 2 bytes @ 0x1
  4014                           
  4015  0071                     ?_isspace:	
  4016                           ; 2 bytes @ 0x1
  4017                           
  4018  0071                     ?_islower:	
  4019                           ; 2 bytes @ 0x1
  4020                           
  4021  0071                     ?_read_I2C_data:	
  4022                           ; 2 bytes @ 0x1
  4023                           
  4024  0071                     ?___wmul:	
  4025                           ; 2 bytes @ 0x1
  4026                           
  4027  0071                     ?___lmul:	
  4028                           ; 2 bytes @ 0x1
  4029                           
  4030  0071                     ?___xxtofl:	
  4031                           ; 4 bytes @ 0x1
  4032                           
  4033  0071                     EUSART_Write@txData:	
  4034                           ; 4 bytes @ 0x1
  4035                           
  4036  0071                     __Umul8_16@multiplicand:	
  4037                           ; 1 bytes @ 0x1
  4038                           
  4039  0071                     send_I2C_data@databyte:	
  4040                           ; 1 bytes @ 0x1
  4041                           
  4042  0071                     send_I2C_controlByte@BlockAddress:	
  4043                           ; 2 bytes @ 0x1
  4044                           
  4045  0071                     RGB_color@color:	
  4046                           ; 2 bytes @ 0x1
  4047                           
  4048  0071                     ___wmul@multiplier:	
  4049                           ; 2 bytes @ 0x1
  4050                           
  4051  0071                     isalpha@c:	
  4052                           ; 2 bytes @ 0x1
  4053                           
  4054  0071                     isdigit@c:	
  4055                           ; 2 bytes @ 0x1
  4056                           
  4057  0071                     isspace@c:	
  4058                           ; 2 bytes @ 0x1
  4059                           
  4060  0071                     isupper@c:	
  4061                           ; 2 bytes @ 0x1
  4062                           
  4063  0071                     fputc@c:	
  4064                           ; 2 bytes @ 0x1
  4065                           
  4066  0071                     strlen@s:	
  4067                           ; 2 bytes @ 0x1
  4068                           
  4069  0071                     strncmp@_l:	
  4070                           ; 2 bytes @ 0x1
  4071                           
  4072  0071                     islower@c:	
  4073                           ; 2 bytes @ 0x1
  4074                           
  4075  0071                     setShuntResistorValue@res_mOhm:	
  4076                           ; 2 bytes @ 0x1
  4077                           
  4078  0071                     ___lmul@multiplier:	
  4079                           ; 4 bytes @ 0x1
  4080                           
  4081  0071                     ___xxtofl@val:	
  4082                           ; 4 bytes @ 0x1
  4083                           
  4084                           
  4085                           ; 4 bytes @ 0x1
  4086  0071                     	ds	1
  4087  0072                     ?_EUSART_Write_Text:	
  4088  0072                     ___aodiv@counter:	
  4089                           ; 1 bytes @ 0x2
  4090                           
  4091  0072                     ___aomod@counter:	
  4092                           ; 1 bytes @ 0x2
  4093                           
  4094  0072                     ___lomod@counter:	
  4095                           ; 1 bytes @ 0x2
  4096                           
  4097  0072                     EUSART_Write_Text@text:	
  4098                           ; 1 bytes @ 0x2
  4099                           
  4100  0072                     ___lodiv@quotient:	
  4101                           ; 2 bytes @ 0x2
  4102                           
  4103                           
  4104                           ; 8 bytes @ 0x2
  4105  0072                     	ds	1
  4106  0073                     ??_watchdog_timeout_shutdown:	
  4107  0073                     ??_RGB_AWAIT_AFE_CONN:	
  4108                           ; 1 bytes @ 0x3
  4109                           
  4110  0073                     ??_RGB_color:	
  4111                           ; 1 bytes @ 0x3
  4112                           
  4113  0073                     ??_strlen:	
  4114                           ; 1 bytes @ 0x3
  4115                           
  4116  0073                     ??_isupper:	
  4117                           ; 1 bytes @ 0x3
  4118                           
  4119  0073                     ??_isalpha:	
  4120                           ; 1 bytes @ 0x3
  4121                           
  4122  0073                     ??_isdigit:	
  4123                           ; 1 bytes @ 0x3
  4124                           
  4125  0073                     ??__Umul8_16:	
  4126                           ; 1 bytes @ 0x3
  4127                           
  4128  0073                     ??_isspace:	
  4129                           ; 1 bytes @ 0x3
  4130                           
  4131  0073                     ??_islower:	
  4132                           ; 1 bytes @ 0x3
  4133                           
  4134  0073                     ??_send_I2C_data:	
  4135                           ; 1 bytes @ 0x3
  4136                           
  4137  0073                     ??_read_I2C_data:	
  4138                           ; 1 bytes @ 0x3
  4139                           
  4140  0073                     ___aodiv@sign:	
  4141                           ; 1 bytes @ 0x3
  4142                           
  4143  0073                     ___aomod@sign:	
  4144                           ; 1 bytes @ 0x3
  4145                           
  4146  0073                     send_I2C_controlByte@RW_bit:	
  4147                           ; 1 bytes @ 0x3
  4148                           
  4149  0073                     ___wmul@multiplicand:	
  4150                           ; 2 bytes @ 0x3
  4151                           
  4152  0073                     fputc@fp:	
  4153                           ; 2 bytes @ 0x3
  4154                           
  4155  0073                     strlen@a:	
  4156                           ; 2 bytes @ 0x3
  4157                           
  4158  0073                     strncmp@_r:	
  4159                           ; 2 bytes @ 0x3
  4160                           
  4161                           
  4162                           ; 2 bytes @ 0x3
  4163  0073                     	ds	1
  4164  0074                     ??_EUSART_Write_Text:	
  4165  0074                     ?_abs:	
  4166                           ; 1 bytes @ 0x4
  4167                           
  4168  0074                     abs@a:	
  4169                           ; 2 bytes @ 0x4
  4170                           
  4171  0074                     ___aodiv@quotient:	
  4172                           ; 2 bytes @ 0x4
  4173                           
  4174                           
  4175                           ; 8 bytes @ 0x4
  4176  0074                     	ds	1
  4177  0075                     ??_setShuntResistorValue:	
  4178  0075                     ??_fputc:	
  4179                           ; 1 bytes @ 0x5
  4180                           
  4181  0075                     ??_send_I2C_controlByte:	
  4182                           ; 1 bytes @ 0x5
  4183                           
  4184  0075                     ?_I2C_writeRegister:	
  4185                           ; 1 bytes @ 0x5
  4186                           
  4187  0075                     ??___wmul:	
  4188                           ; 1 bytes @ 0x5
  4189                           
  4190  0075                     ??___xxtofl:	
  4191                           ; 1 bytes @ 0x5
  4192                           
  4193  0075                     ?_readRegister:	
  4194                           ; 1 bytes @ 0x5
  4195                           
  4196  0075                     _isspace$1800:	
  4197                           ; 2 bytes @ 0x5
  4198                           
  4199  0075                     EUSART_Write_Text@i:	
  4200                           ; 1 bytes @ 0x5
  4201                           
  4202  0075                     I2C_writeRegister@slaveAddress:	
  4203                           ; 2 bytes @ 0x5
  4204                           
  4205  0075                     readRegister@slaveAddress:	
  4206                           ; 2 bytes @ 0x5
  4207                           
  4208  0075                     ___wmul@product:	
  4209                           ; 2 bytes @ 0x5
  4210                           
  4211  0075                     strncmp@n:	
  4212                           ; 2 bytes @ 0x5
  4213                           
  4214  0075                     __Umul8_16@product:	
  4215                           ; 2 bytes @ 0x5
  4216                           
  4217  0075                     ___lmul@multiplicand:	
  4218                           ; 2 bytes @ 0x5
  4219                           
  4220                           
  4221                           ; 4 bytes @ 0x5
  4222  0075                     	ds	1
  4223  0076                     ??_abs:	
  4224                           
  4225                           ; 1 bytes @ 0x6
  4226  0076                     	ds	1
  4227  0077                     ??_setTemperatureLimitsint:	
  4228  0077                     ??_strncmp:	
  4229                           ; 1 bytes @ 0x7
  4230                           
  4231  0077                     ?_toupper:	
  4232                           ; 1 bytes @ 0x7
  4233                           
  4234  0077                     ?_atoi:	
  4235                           ; 2 bytes @ 0x7
  4236                           
  4237  0077                     I2C_writeRegister@regAddress:	
  4238                           ; 2 bytes @ 0x7
  4239                           
  4240  0077                     readRegister@regAddress:	
  4241                           ; 2 bytes @ 0x7
  4242                           
  4243  0077                     atoi@s:	
  4244                           ; 2 bytes @ 0x7
  4245                           
  4246  0077                     toupper@c:	
  4247                           ; 2 bytes @ 0x7
  4248                           
  4249  0077                     __Umul8_16@word_mpld:	
  4250                           ; 2 bytes @ 0x7
  4251                           
  4252                           
  4253                           ; 2 bytes @ 0x7
  4254  0077                     	ds	1
  4255  0078                     strncmp@l:	
  4256                           
  4257                           ; 2 bytes @ 0x8
  4258  0078                     	ds	1
  4259  0079                     ??_readRegister:	
  4260  0079                     ??___lmul:	
  4261                           ; 1 bytes @ 0x9
  4262                           
  4263  0079                     ??___aldiv:	
  4264                           ; 1 bytes @ 0x9
  4265                           
  4266  0079                     __Umul8_16@multiplier:	
  4267                           ; 1 bytes @ 0x9
  4268                           
  4269  0079                     I2C_writeRegister@data:	
  4270                           ; 1 bytes @ 0x9
  4271                           
  4272  0079                     readRegister@recievedData:	
  4273                           ; 2 bytes @ 0x9
  4274                           
  4275  0079                     _toupper$1908:	
  4276                           ; 2 bytes @ 0x9
  4277                           
  4278                           
  4279                           ; 2 bytes @ 0x9
  4280  0079                     	ds	1
  4281  007A                     ??_stoa:	
  4282  007A                     ??___flneg:	
  4283                           ; 1 bytes @ 0xA
  4284                           
  4285  007A                     ??___flsub:	
  4286                           ; 1 bytes @ 0xA
  4287                           
  4288  007A                     ?_fputs:	
  4289                           ; 1 bytes @ 0xA
  4290                           
  4291  007A                     ___fltol@sign1:	
  4292                           ; 2 bytes @ 0xA
  4293                           
  4294  007A                     ___lodiv@counter:	
  4295                           ; 1 bytes @ 0xA
  4296                           
  4297  007A                     EUSART_Initialize@x:	
  4298                           ; 1 bytes @ 0xA
  4299                           
  4300  007A                     fputs@fp:	
  4301                           ; 2 bytes @ 0xA
  4302                           
  4303  007A                     strncmp@r:	
  4304                           ; 2 bytes @ 0xA
  4305                           
  4306                           
  4307                           ; 2 bytes @ 0xA
  4308  007A                     	ds	1
  4309  007B                     ??_init_AFE:	
  4310  007B                     ??_AFE_Status:	
  4311                           ; 1 bytes @ 0xB
  4312                           
  4313  007B                     ??_I2C_writeRegister:	
  4314                           ; 1 bytes @ 0xB
  4315                           
  4316  007B                     enableDischarging@sys_ctrl2:	
  4317                           ; 1 bytes @ 0xB
  4318                           
  4319  007B                     enableCharging@sys_ctrl2:	
  4320                           ; 1 bytes @ 0xB
  4321                           
  4322  007B                     ___fltol@exp1:	
  4323                           ; 1 bytes @ 0xB
  4324                           
  4325                           
  4326                           ; 1 bytes @ 0xB
  4327  007B                     	ds	1
  4328  007C                     ??_AFE_UPDATE:	
  4329  007C                     ??_printcellParameters:	
  4330                           ; 1 bytes @ 0xC
  4331                           
  4332                           
  4333                           	psect	cstackBANK0
  4334  0020                     __pcstackBANK0:	
  4335                           ; 1 bytes @ 0xC
  4336                           
  4337  0020                     ?_setTemperatureLimitsint:	
  4338  0020                     ?_enableDischarging:	
  4339                           ; 1 bytes @ 0x0
  4340                           
  4341  0020                     ?_enableCharging:	
  4342                           ; 1 bytes @ 0x0
  4343                           
  4344  0020                     ??_fputs:	
  4345                           ; 1 bytes @ 0x0
  4346                           
  4347  0020                     ??_toupper:	
  4348                           ; 1 bytes @ 0x0
  4349                           
  4350  0020                     ??_atoi:	
  4351                           ; 1 bytes @ 0x0
  4352                           
  4353  0020                     ?_beginAFEcommunication:	
  4354                           ; 1 bytes @ 0x0
  4355                           
  4356  0020                     ?_AFE_Status:	
  4357                           ; 2 bytes @ 0x0
  4358                           
  4359  0020                     ?_stoa:	
  4360                           ; 2 bytes @ 0x0
  4361                           
  4362  0020                     ?___aodiv:	
  4363                           ; 2 bytes @ 0x0
  4364                           
  4365  0020                     ?___aomod:	
  4366                           ; 8 bytes @ 0x0
  4367                           
  4368  0020                     ?___lodiv:	
  4369                           ; 8 bytes @ 0x0
  4370                           
  4371  0020                     ?___lomod:	
  4372                           ; 8 bytes @ 0x0
  4373                           
  4374  0020                     ___xxtofl@sign:	
  4375                           ; 8 bytes @ 0x0
  4376                           
  4377  0020                     setTemperatureLimitsint@minDischarge_degC:	
  4378                           ; 1 bytes @ 0x0
  4379                           
  4380  0020                     enableDischarging@enable:	
  4381                           ; 2 bytes @ 0x0
  4382                           
  4383  0020                     enableCharging@enable:	
  4384                           ; 2 bytes @ 0x0
  4385                           
  4386  0020                     stoa@fp:	
  4387                           ; 2 bytes @ 0x0
  4388                           
  4389  0020                     ___lmul@product:	
  4390                           ; 2 bytes @ 0x0
  4391                           
  4392  0020                     ___aodiv@divisor:	
  4393                           ; 4 bytes @ 0x0
  4394                           
  4395  0020                     ___aomod@divisor:	
  4396                           ; 8 bytes @ 0x0
  4397                           
  4398  0020                     ___lodiv@divisor:	
  4399                           ; 8 bytes @ 0x0
  4400                           
  4401  0020                     ___lomod@divisor:	
  4402                           ; 8 bytes @ 0x0
  4403                           
  4404                           
  4405                           ; 8 bytes @ 0x0
  4406  0020                     	ds	1
  4407  0021                     ___xxtofl@exp:	
  4408                           
  4409                           ; 1 bytes @ 0x1
  4410  0021                     	ds	1
  4411  0022                     ??_beginAFEcommunication:	
  4412  0022                     ??_enableDischarging:	
  4413                           ; 1 bytes @ 0x2
  4414                           
  4415  0022                     ??_enableCharging:	
  4416                           ; 1 bytes @ 0x2
  4417                           
  4418  0022                     fputs@c:	
  4419                           ; 1 bytes @ 0x2
  4420                           
  4421  0022                     setTemperatureLimitsint@maxDischarge_degC:	
  4422                           ; 1 bytes @ 0x2
  4423                           
  4424  0022                     AFE_Status@error_flag:	
  4425                           ; 2 bytes @ 0x2
  4426                           
  4427  0022                     stoa@s:	
  4428                           ; 2 bytes @ 0x2
  4429                           
  4430  0022                     ___xxtofl@arg:	
  4431                           ; 2 bytes @ 0x2
  4432                           
  4433                           
  4434                           ; 4 bytes @ 0x2
  4435  0022                     	ds	1
  4436  0023                     fputs@i:	
  4437                           
  4438                           ; 2 bytes @ 0x3
  4439  0023                     	ds	1
  4440  0024                     ?___aldiv:	
  4441  0024                     setTemperatureLimitsint@minCharge_degC:	
  4442                           ; 4 bytes @ 0x4
  4443                           
  4444  0024                     atoi@neg:	
  4445                           ; 2 bytes @ 0x4
  4446                           
  4447  0024                     ___aldiv@divisor:	
  4448                           ; 2 bytes @ 0x4
  4449                           
  4450  0024                     stoa@nuls:	
  4451                           ; 4 bytes @ 0x4
  4452                           
  4453                           
  4454                           ; 7 bytes @ 0x4
  4455  0024                     	ds	1
  4456  0025                     fputs@s:	
  4457                           
  4458                           ; 1 bytes @ 0x5
  4459  0025                     	ds	1
  4460  0026                     ?_pad:	
  4461  0026                     ?___flmul:	
  4462                           ; 2 bytes @ 0x6
  4463                           
  4464  0026                     setTemperatureLimitsint@maxCharge_degC:	
  4465                           ; 4 bytes @ 0x6
  4466                           
  4467  0026                     pad@fp:	
  4468                           ; 2 bytes @ 0x6
  4469                           
  4470  0026                     _atoi$1773:	
  4471                           ; 2 bytes @ 0x6
  4472                           
  4473  0026                     ___flmul@b:	
  4474                           ; 2 bytes @ 0x6
  4475                           
  4476                           
  4477                           ; 4 bytes @ 0x6
  4478  0026                     	ds	2
  4479  0028                     pad@buf:	
  4480  0028                     _atoi$1775:	
  4481                           ; 1 bytes @ 0x8
  4482                           
  4483  0028                     ___aldiv@dividend:	
  4484                           ; 2 bytes @ 0x8
  4485                           
  4486  0028                     ___aodiv@dividend:	
  4487                           ; 4 bytes @ 0x8
  4488                           
  4489  0028                     ___aomod@dividend:	
  4490                           ; 8 bytes @ 0x8
  4491                           
  4492  0028                     ___lodiv@dividend:	
  4493                           ; 8 bytes @ 0x8
  4494                           
  4495  0028                     ___lomod@dividend:	
  4496                           ; 8 bytes @ 0x8
  4497                           
  4498                           
  4499                           ; 8 bytes @ 0x8
  4500  0028                     	ds	1
  4501  0029                     pad@p:	
  4502                           
  4503                           ; 2 bytes @ 0x9
  4504  0029                     	ds	1
  4505  002A                     _atoi$1774:	
  4506  002A                     ___flmul@a:	
  4507                           ; 1 bytes @ 0xA
  4508                           
  4509                           
  4510                           ; 4 bytes @ 0xA
  4511  002A                     	ds	1
  4512  002B                     ??_pad:	
  4513  002B                     beginAFEcommunication@commSuccess:	
  4514                           ; 1 bytes @ 0xB
  4515                           
  4516  002B                     stoa@i:	
  4517                           ; 2 bytes @ 0xB
  4518                           
  4519  002B                     atoi@n:	
  4520                           ; 2 bytes @ 0xB
  4521                           
  4522                           
  4523                           ; 2 bytes @ 0xB
  4524  002B                     	ds	1
  4525  002C                     ___aldiv@counter:	
  4526  002C                     pad@i:	
  4527                           ; 1 bytes @ 0xC
  4528                           
  4529                           
  4530                           ; 2 bytes @ 0xC
  4531  002C                     	ds	1
  4532  002D                     ___aldiv@sign:	
  4533  002D                     beginAFEcommunication@i:	
  4534                           ; 1 bytes @ 0xD
  4535                           
  4536  002D                     stoa@w:	
  4537                           ; 2 bytes @ 0xD
  4538                           
  4539                           
  4540                           ; 2 bytes @ 0xD
  4541  002D                     	ds	1
  4542  002E                     ??___flmul:	
  4543  002E                     pad@w:	
  4544                           ; 1 bytes @ 0xE
  4545                           
  4546  002E                     ___aldiv@quotient:	
  4547                           ; 2 bytes @ 0xE
  4548                           
  4549                           
  4550                           ; 4 bytes @ 0xE
  4551  002E                     	ds	1
  4552  002F                     stoa@cp:	
  4553                           
  4554                           ; 2 bytes @ 0xF
  4555  002F                     	ds	1
  4556  0030                     ?_ctoa:	
  4557  0030                     ?_dtoa:	
  4558                           ; 2 bytes @ 0x10
  4559                           
  4560  0030                     ?_otoa:	
  4561                           ; 2 bytes @ 0x10
  4562                           
  4563  0030                     ?_utoa:	
  4564                           ; 2 bytes @ 0x10
  4565                           
  4566  0030                     ?_xtoa:	
  4567                           ; 2 bytes @ 0x10
  4568                           
  4569  0030                     ctoa@fp:	
  4570                           ; 2 bytes @ 0x10
  4571                           
  4572  0030                     dtoa@fp:	
  4573                           ; 2 bytes @ 0x10
  4574                           
  4575  0030                     otoa@fp:	
  4576                           ; 2 bytes @ 0x10
  4577                           
  4578  0030                     utoa@fp:	
  4579                           ; 2 bytes @ 0x10
  4580                           
  4581  0030                     xtoa@fp:	
  4582                           ; 2 bytes @ 0x10
  4583                           
  4584                           
  4585                           ; 2 bytes @ 0x10
  4586  0030                     	ds	1
  4587  0031                     stoa@p:	
  4588                           
  4589                           ; 2 bytes @ 0x11
  4590  0031                     	ds	1
  4591  0032                     ?_EUSART_Initialize:	
  4592  0032                     ?_setCellUndervoltageProtection:	
  4593                           ; 1 bytes @ 0x12
  4594                           
  4595  0032                     ?_setCellOvervoltageProtection:	
  4596                           ; 1 bytes @ 0x12
  4597                           
  4598  0032                     ctoa@c:	
  4599                           ; 1 bytes @ 0x12
  4600                           
  4601  0032                     setCellUndervoltageProtection@voltage_mV:	
  4602                           ; 1 bytes @ 0x12
  4603                           
  4604  0032                     setCellOvervoltageProtection@voltage_mV:	
  4605                           ; 2 bytes @ 0x12
  4606                           
  4607  0032                     EUSART_Initialize@baudrate:	
  4608                           ; 2 bytes @ 0x12
  4609                           
  4610  0032                     dtoa@d:	
  4611                           ; 4 bytes @ 0x12
  4612                           
  4613  0032                     otoa@d:	
  4614                           ; 8 bytes @ 0x12
  4615                           
  4616  0032                     utoa@d:	
  4617                           ; 8 bytes @ 0x12
  4618                           
  4619  0032                     xtoa@d:	
  4620                           ; 8 bytes @ 0x12
  4621                           
  4622                           
  4623                           ; 8 bytes @ 0x12
  4624  0032                     	ds	1
  4625  0033                     ??_ctoa:	
  4626  0033                     ___flmul@sign:	
  4627                           ; 1 bytes @ 0x13
  4628                           
  4629  0033                     stoa@l:	
  4630                           ; 1 bytes @ 0x13
  4631                           
  4632                           
  4633                           ; 2 bytes @ 0x13
  4634  0033                     	ds	1
  4635  0034                     setCellUndervoltageProtection@delay_s:	
  4636  0034                     setCellOvervoltageProtection@delay_s:	
  4637                           ; 2 bytes @ 0x14
  4638                           
  4639  0034                     ctoa@w:	
  4640                           ; 2 bytes @ 0x14
  4641                           
  4642  0034                     ___flmul@grs:	
  4643                           ; 2 bytes @ 0x14
  4644                           
  4645                           
  4646                           ; 4 bytes @ 0x14
  4647  0034                     	ds	2
  4648  0036                     ??_EUSART_Initialize:	
  4649  0036                     ??_setCellUndervoltageProtection:	
  4650                           ; 1 bytes @ 0x16
  4651                           
  4652  0036                     ??_setCellOvervoltageProtection:	
  4653                           ; 1 bytes @ 0x16
  4654                           
  4655                           
  4656                           ; 1 bytes @ 0x16
  4657  0036                     	ds	2
  4658  0038                     ___flmul@aexp:	
  4659                           
  4660                           ; 1 bytes @ 0x18
  4661  0038                     	ds	1
  4662  0039                     ___flmul@bexp:	
  4663                           
  4664                           ; 1 bytes @ 0x19
  4665  0039                     	ds	1
  4666  003A                     ??_dtoa:	
  4667  003A                     ??_otoa:	
  4668                           ; 1 bytes @ 0x1A
  4669                           
  4670  003A                     ??_utoa:	
  4671                           ; 1 bytes @ 0x1A
  4672                           
  4673  003A                     xtoa@x:	
  4674                           ; 1 bytes @ 0x1A
  4675                           
  4676  003A                     ___flmul@prod:	
  4677                           ; 1 bytes @ 0x1A
  4678                           
  4679                           
  4680                           ; 4 bytes @ 0x1A
  4681  003A                     	ds	1
  4682  003B                     ??_xtoa:	
  4683  003B                     utoa@p:	
  4684                           ; 1 bytes @ 0x1B
  4685                           
  4686                           
  4687                           ; 2 bytes @ 0x1B
  4688  003B                     	ds	2
  4689  003D                     _dtoa$1322:	
  4690  003D                     utoa@w:	
  4691                           ; 2 bytes @ 0x1D
  4692                           
  4693                           
  4694                           ; 2 bytes @ 0x1D
  4695  003D                     	ds	1
  4696  003E                     ___flmul@temp:	
  4697                           
  4698                           ; 2 bytes @ 0x1E
  4699  003E                     	ds	1
  4700  003F                     dtoa@p:	
  4701  003F                     utoa@n:	
  4702                           ; 2 bytes @ 0x1F
  4703                           
  4704                           
  4705                           ; 8 bytes @ 0x1F
  4706  003F                     	ds	1
  4707  0040                     ?___fldiv:	
  4708  0040                     ___fldiv@a:	
  4709                           ; 4 bytes @ 0x20
  4710                           
  4711                           
  4712                           ; 4 bytes @ 0x20
  4713  0040                     	ds	1
  4714  0041                     dtoa@w:	
  4715                           
  4716                           ; 2 bytes @ 0x21
  4717  0041                     	ds	1
  4718  0042                     otoa@p:	
  4719                           
  4720                           ; 2 bytes @ 0x22
  4721  0042                     	ds	1
  4722  0043                     dtoa@s:	
  4723  0043                     _xtoa$1358:	
  4724                           ; 2 bytes @ 0x23
  4725                           
  4726                           
  4727                           ; 2 bytes @ 0x23
  4728  0043                     	ds	1
  4729  0044                     setCellUndervoltageProtection@uv_trip:	
  4730  0044                     setCellOvervoltageProtection@ov_trip:	
  4731                           ; 1 bytes @ 0x24
  4732                           
  4733  0044                     otoa@t:	
  4734                           ; 1 bytes @ 0x24
  4735                           
  4736  0044                     ___fldiv@b:	
  4737                           ; 2 bytes @ 0x24
  4738                           
  4739                           
  4740                           ; 4 bytes @ 0x24
  4741  0044                     	ds	1
  4742  0045                     setCellUndervoltageProtection@i:	
  4743  0045                     setCellOvervoltageProtection@i:	
  4744                           ; 2 bytes @ 0x25
  4745                           
  4746  0045                     _xtoa$1359:	
  4747                           ; 2 bytes @ 0x25
  4748                           
  4749  0045                     dtoa@n:	
  4750                           ; 2 bytes @ 0x25
  4751                           
  4752                           
  4753                           ; 8 bytes @ 0x25
  4754  0045                     	ds	1
  4755  0046                     otoa@w:	
  4756                           
  4757                           ; 2 bytes @ 0x26
  4758  0046                     	ds	1
  4759  0047                     utoa@i:	
  4760  0047                     xtoa@p:	
  4761                           ; 2 bytes @ 0x27
  4762                           
  4763                           
  4764                           ; 2 bytes @ 0x27
  4765  0047                     	ds	1
  4766  0048                     ??___fldiv:	
  4767  0048                     otoa@n:	
  4768                           ; 1 bytes @ 0x28
  4769                           
  4770                           
  4771                           ; 8 bytes @ 0x28
  4772  0048                     	ds	1
  4773  0049                     xtoa@w:	
  4774                           
  4775                           ; 2 bytes @ 0x29
  4776  0049                     	ds	2
  4777  004B                     xtoa@n:	
  4778                           
  4779                           ; 8 bytes @ 0x2B
  4780  004B                     	ds	2
  4781  004D                     dtoa@i:	
  4782  004D                     ___fldiv@rem:	
  4783                           ; 2 bytes @ 0x2D
  4784                           
  4785                           
  4786                           ; 4 bytes @ 0x2D
  4787  004D                     	ds	3
  4788  0050                     otoa@i:	
  4789                           
  4790                           ; 2 bytes @ 0x30
  4791  0050                     	ds	1
  4792  0051                     ___fldiv@sign:	
  4793                           
  4794                           ; 1 bytes @ 0x31
  4795  0051                     	ds	1
  4796  0052                     ___fldiv@new_exp:	
  4797                           
  4798                           ; 2 bytes @ 0x32
  4799  0052                     	ds	1
  4800  0053                     xtoa@i:	
  4801                           
  4802                           ; 2 bytes @ 0x33
  4803  0053                     	ds	1
  4804  0054                     ___fldiv@grs:	
  4805                           
  4806                           ; 4 bytes @ 0x34
  4807  0054                     	ds	1
  4808  0055                     xtoa@c:	
  4809                           
  4810                           ; 2 bytes @ 0x35
  4811  0055                     	ds	2
  4812  0057                     ?_vfpfcnvrt:	
  4813  0057                     vfpfcnvrt@fp:	
  4814                           ; 2 bytes @ 0x37
  4815                           
  4816                           
  4817                           ; 2 bytes @ 0x37
  4818  0057                     	ds	1
  4819  0058                     ___fldiv@bexp:	
  4820                           
  4821                           ; 1 bytes @ 0x38
  4822  0058                     	ds	1
  4823  0059                     vfpfcnvrt@fmt:	
  4824  0059                     ___fldiv@aexp:	
  4825                           ; 1 bytes @ 0x39
  4826                           
  4827                           
  4828                           ; 1 bytes @ 0x39
  4829  0059                     	ds	1
  4830  005A                     ?___flge:	
  4831  005A                     ?___flneg:	
  4832                           ; 1 bit 
  4833                           
  4834  005A                     ?___fladd:	
  4835                           ; 4 bytes @ 0x3A
  4836                           
  4837  005A                     vfpfcnvrt@ap:	
  4838                           ; 4 bytes @ 0x3A
  4839                           
  4840  005A                     ___flge@ff1:	
  4841                           ; 1 bytes @ 0x3A
  4842                           
  4843  005A                     ___flneg@f1:	
  4844                           ; 4 bytes @ 0x3A
  4845                           
  4846  005A                     ___fladd@b:	
  4847                           ; 4 bytes @ 0x3A
  4848                           
  4849                           
  4850                           ; 4 bytes @ 0x3A
  4851  005A                     	ds	1
  4852  005B                     ??_vfpfcnvrt:	
  4853                           
  4854                           ; 1 bytes @ 0x3B
  4855  005B                     	ds	3
  4856  005E                     ___flge@ff2:	
  4857  005E                     ___fladd@a:	
  4858                           ; 4 bytes @ 0x3E
  4859                           
  4860                           
  4861                           ; 4 bytes @ 0x3E
  4862  005E                     	ds	3
  4863  0061                     ?_vfprintf:	
  4864  0061                     vfprintf@fp:	
  4865                           ; 2 bytes @ 0x41
  4866                           
  4867                           
  4868                           ; 2 bytes @ 0x41
  4869  0061                     	ds	1
  4870  0062                     ??___flge:	
  4871  0062                     ??___fladd:	
  4872                           ; 1 bytes @ 0x42
  4873                           
  4874                           
  4875                           ; 1 bytes @ 0x42
  4876  0062                     	ds	1
  4877  0063                     vfprintf@fmt:	
  4878                           
  4879                           ; 2 bytes @ 0x43
  4880  0063                     	ds	2
  4881  0065                     vfprintf@ap:	
  4882                           
  4883                           ; 1 bytes @ 0x45
  4884  0065                     	ds	1
  4885  0066                     ?_setShortCircuitProtection:	
  4886  0066                     ?_setOverCurrentDischargeProtection:	
  4887                           ; 1 bytes @ 0x46
  4888                           
  4889  0066                     ??_vfprintf:	
  4890                           ; 1 bytes @ 0x46
  4891                           
  4892  0066                     setShortCircuitProtection@current_mA:	
  4893                           ; 1 bytes @ 0x46
  4894                           
  4895  0066                     setOverCurrentDischargeProtection@current_mA:	
  4896                           ; 4 bytes @ 0x46
  4897                           
  4898                           
  4899                           ; 4 bytes @ 0x46
  4900  0066                     	ds	2
  4901  0068                     vfprintf@cfmt:	
  4902                           
  4903                           ; 2 bytes @ 0x48
  4904  0068                     	ds	2
  4905  006A                     ??_vsnprintf:	
  4906  006A                     ___fladd@signs:	
  4907                           ; 1 bytes @ 0x4A
  4908                           
  4909  006A                     setShortCircuitProtection@delay_us:	
  4910                           ; 1 bytes @ 0x4A
  4911                           
  4912  006A                     setOverCurrentDischargeProtection@delay_ms:	
  4913                           ; 2 bytes @ 0x4A
  4914                           
  4915                           
  4916                           ; 2 bytes @ 0x4A
  4917  006A                     	ds	1
  4918  006B                     ___fladd@aexp:	
  4919                           
  4920                           ; 1 bytes @ 0x4B
  4921  006B                     	ds	1
  4922  006C                     ??_snprintf:	
  4923  006C                     ??_setShortCircuitProtection:	
  4924                           ; 1 bytes @ 0x4C
  4925                           
  4926  006C                     ??_setOverCurrentDischargeProtection:	
  4927                           ; 1 bytes @ 0x4C
  4928                           
  4929  006C                     ___fladd@bexp:	
  4930                           ; 1 bytes @ 0x4C
  4931                           
  4932                           
  4933                           ; 1 bytes @ 0x4C
  4934  006C                     	ds	1
  4935  006D                     ___fladd@grs:	
  4936                           
  4937                           ; 1 bytes @ 0x4D
  4938  006D                     	ds	1
  4939  006E                     ??_coulomb_counter:	
  4940                           
  4941                           ; 1 bytes @ 0x4E
  4942  006E                     	ds	1
  4943  006F                     snprintf@ap:	
  4944                           
  4945                           ; 1 bytes @ 0x4F
  4946  006F                     	ds	1
  4947                           
  4948                           	psect	maintext
  4949  3437                     __pmaintext:	
  4950 ;;
  4951 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4952 ;;
  4953 ;; *************** function _main *****************
  4954 ;; Defined at:
  4955 ;;		line 72 in file "main.c"
  4956 ;; Parameters:    Size  Location     Type
  4957 ;;		None
  4958 ;; Auto vars:     Size  Location     Type
  4959 ;;		None
  4960 ;; Return value:  Size  Location     Type
  4961 ;;                  1    wreg      void 
  4962 ;; Registers used:
  4963 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4964 ;; Tracked objects:
  4965 ;;		On entry : B1F/0
  4966 ;;		On exit  : 0/0
  4967 ;;		Unchanged: 0/0
  4968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4971 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4972 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4973 ;;Total ram usage:        2 bytes
  4974 ;; Hardware stack levels required when called:   12
  4975 ;; This function calls:
  4976 ;;		_EUSART_Initialize
  4977 ;;		_initClock
  4978 ;;		_initWDT
  4979 ;;		_init_GPIO
  4980 ;;		_init_I2C
  4981 ;;		_init_RGB
  4982 ;;		_init_TMR1
  4983 ;;		_statemachine
  4984 ;;		_watchdog_timeout_shutdown
  4985 ;; This function is called by:
  4986 ;;		Startup code after reset
  4987 ;; This function uses a non-reentrant model
  4988 ;;
  4989                           
  4990                           
  4991                           ;psect for function _main
  4992  3437                     _main:	
  4993                           
  4994                           ;main.c: 75:     initClock();
  4995                           
  4996                           ;incstack = 0
  4997                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4998  3437  31B1  2170  31B4   	fcall	_initClock
  4999                           
  5000                           ;main.c: 76:     init_GPIO();
  5001  343A  3188  2008  31B4   	fcall	_init_GPIO
  5002                           
  5003                           ;main.c: 77:     initWDT();
  5004  343D  31B1  2178  31B4   	fcall	_initWDT
  5005                           
  5006                           ;main.c: 78:     init_I2C();
  5007  3440  31B1  21E5  31B4   	fcall	_init_I2C
  5008                           
  5009                           ;main.c: 79:     EUSART_Initialize(9600);
  5010  3443  3000               	movlw	0
  5011  3444  0020               	movlb	0	; select bank0
  5012  3445  00B5               	movwf	EUSART_Initialize@baudrate+3
  5013  3446  3000               	movlw	0
  5014  3447  00B4               	movwf	EUSART_Initialize@baudrate+2
  5015  3448  3025               	movlw	37
  5016  3449  00B3               	movwf	EUSART_Initialize@baudrate+1
  5017  344A  3080               	movlw	128
  5018  344B  00B2               	movwf	EUSART_Initialize@baudrate
  5019  344C  31AB  237F  31B4   	fcall	_EUSART_Initialize
  5020                           
  5021                           ;main.c: 80:     init_TMR1();
  5022  344F  31B1  21CE  31B4   	fcall	_init_TMR1
  5023                           
  5024                           ;main.c: 81:     init_RGB();
  5025  3452  31B1  2173  31B4   	fcall	_init_RGB
  5026                           
  5027                           ;main.c: 84:     watchdog_timeout_shutdown();
  5028  3455  31B2  22C8  31B4   	fcall	_watchdog_timeout_shutdown
  5029  3458                     l7799:	
  5030                           
  5031                           ;main.c: 88:         statemachine();
  5032  3458  31B7  2788  31B4   	fcall	_statemachine
  5033                           
  5034                           ;main.c: 90:         _delay((unsigned long)((1000)*(16000000/4000.0)));
  5035  345B  3015               	movlw	21
  5036  345C  0022               	movlb	2	; select bank2
  5037  345D  00E5               	movwf	(??_main^(0+256)+1)
  5038  345E  304B               	movlw	75
  5039  345F  00E4               	movwf	??_main^(0+256)
  5040  3460  30BE               	movlw	190
  5041  3461                     u9697:	
  5042  3461  0B89               	decfsz	9,f
  5043  3462  2C61               	goto	u9697
  5044  3463  0BE4               	decfsz	??_main^(0+256),f
  5045  3464  2C61               	goto	u9697
  5046  3465  0BE5               	decfsz	(??_main^(0+256)+1),f
  5047  3466  2C61               	goto	u9697
  5048  3467  0000               	nop
  5049  3468  2C58               	goto	l7799
  5050  3469                     __end_of_main:	
  5051                           
  5052                           	psect	text1
  5053  32C8                     __ptext1:	
  5054 ;; *************** function _watchdog_timeout_shutdown *****************
  5055 ;; Defined at:
  5056 ;;		line 3 in file "algorithms.c"
  5057 ;; Parameters:    Size  Location     Type
  5058 ;;		None
  5059 ;; Auto vars:     Size  Location     Type
  5060 ;;		None
  5061 ;; Return value:  Size  Location     Type
  5062 ;;                  1    wreg      void 
  5063 ;; Registers used:
  5064 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5065 ;; Tracked objects:
  5066 ;;		On entry : 0/0
  5067 ;;		On exit  : 0/0
  5068 ;;		Unchanged: 0/0
  5069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5072 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5073 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5074 ;;Total ram usage:        2 bytes
  5075 ;; Hardware stack levels used:    1
  5076 ;; Hardware stack levels required when called:    2
  5077 ;; This function calls:
  5078 ;;		_RGB_color
  5079 ;; This function is called by:
  5080 ;;		_main
  5081 ;; This function uses a non-reentrant model
  5082 ;;
  5083                           
  5084                           
  5085                           ;psect for function _watchdog_timeout_shutdown
  5086  32C8                     _watchdog_timeout_shutdown:	
  5087                           
  5088                           ;algorithms.c: 5:     if (!STATUSbits.nTO) {
  5089                           
  5090                           ;incstack = 0
  5091                           ; Regs used in _watchdog_timeout_shutdown: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5092  32C8  0020               	movlb	0	; select bank0
  5093  32C9  1A03               	btfsc	3,4	;volatile
  5094  32CA  0008               	return
  5095                           
  5096                           ;algorithms.c: 6:         RGB_color(0);
  5097  32CB  3000               	movlw	0
  5098  32CC  00F1               	movwf	RGB_color@color
  5099  32CD  00F2               	movwf	RGB_color@color+1
  5100  32CE  31B3  233A  31B2   	fcall	_RGB_color
  5101                           
  5102                           ;algorithms.c: 7:          _delay((unsigned long)((2000)*(16000000/4000.0)));
  5103  32D1  3029               	movlw	41
  5104  32D2  00F4               	movwf	??_watchdog_timeout_shutdown+1
  5105  32D3  3096               	movlw	150
  5106  32D4  00F3               	movwf	??_watchdog_timeout_shutdown
  5107  32D5  307F               	movlw	127
  5108  32D6                     u9707:	
  5109  32D6  0B89               	decfsz	9,f
  5110  32D7  2AD6               	goto	u9707
  5111  32D8  0BF3               	decfsz	??_watchdog_timeout_shutdown,f
  5112  32D9  2AD6               	goto	u9707
  5113  32DA  0BF4               	decfsz	??_watchdog_timeout_shutdown+1,f
  5114  32DB  2AD6               	goto	u9707
  5115  32DC  0000               	nop
  5116                           
  5117                           ;algorithms.c: 8:          currState = 3;
  5118  32DD  3003               	movlw	3
  5119  32DE  00F3               	movwf	??_watchdog_timeout_shutdown
  5120  32DF  0873               	movf	??_watchdog_timeout_shutdown,w
  5121  32E0  0023               	movlb	3	; select bank3
  5122  32E1  00E9               	movwf	_currState^(0+384)
  5123  32E2  0008               	return
  5124  32E3                     __end_of_watchdog_timeout_shutdown:	
  5125                           
  5126                           	psect	text2
  5127  3788                     __ptext2:	
  5128 ;; *************** function _statemachine *****************
  5129 ;; Defined at:
  5130 ;;		line 96 in file "main.c"
  5131 ;; Parameters:    Size  Location     Type
  5132 ;;		None
  5133 ;; Auto vars:     Size  Location     Type
  5134 ;;  success         1   79[BANK1 ] unsigned char 
  5135 ;; Return value:  Size  Location     Type
  5136 ;;                  1    wreg      void 
  5137 ;; Registers used:
  5138 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5139 ;; Tracked objects:
  5140 ;;		On entry : 0/0
  5141 ;;		On exit  : 0/0
  5142 ;;		Unchanged: 0/0
  5143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5145 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5146 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5147 ;;      Totals:         0       0       1       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5148 ;;Total ram usage:        3 bytes
  5149 ;; Hardware stack levels used:    1
  5150 ;; Hardware stack levels required when called:   11
  5151 ;; This function calls:
  5152 ;;		_AFE_UPDATE
  5153 ;;		_EUSART_Write_Text
  5154 ;;		_RGB_AWAIT_AFE_CONN
  5155 ;;		_RGB_color
  5156 ;;		_beginAFEcommunication
  5157 ;;		_init_AFE
  5158 ;;		_printcellParameters
  5159 ;;		_snprintf
  5160 ;; This function is called by:
  5161 ;;		_main
  5162 ;; This function uses a non-reentrant model
  5163 ;;
  5164                           
  5165                           
  5166                           ;psect for function _statemachine
  5167  3788                     _statemachine:	
  5168                           
  5169                           ;main.c: 98:     switch (currState) {
  5170                           
  5171                           ;incstack = 0
  5172                           ; Regs used in _statemachine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5173  3788  2FE7               	goto	l7775
  5174  3789                     l7743:	
  5175                           
  5176                           ;main.c: 101:             if (tmr1_flag) {
  5177  3789  0023               	movlb	3	; select bank3
  5178  378A  0865               	movf	_tmr1_flag^(0+384),w	;volatile
  5179  378B  1903               	btfsc	3,2
  5180  378C  0008               	return
  5181                           
  5182                           ;main.c: 102:                 tmr1_flag = 0;
  5183  378D  01E5               	clrf	_tmr1_flag^(0+384)	;volatile
  5184                           
  5185                           ;main.c: 103:                 RGB_AWAIT_AFE_CONN();
  5186  378E  3190  2000  31B7   	fcall	_RGB_AWAIT_AFE_CONN
  5187                           
  5188                           ;main.c: 104:                 uint8_t success = beginAFEcommunication();
  5189  3791  31AC  2428  31B7   	fcall	_beginAFEcommunication
  5190  3794  0020               	movlb	0	; select bank0
  5191  3795  0820               	movf	?_beginAFEcommunication,w
  5192  3796  0022               	movlb	2	; select bank2
  5193  3797  00E2               	movwf	??_statemachine^(0+256)
  5194  3798  0862               	movf	??_statemachine^(0+256),w
  5195  3799  0021               	movlb	1	; select bank1
  5196  379A  00EF               	movwf	statemachine@success^(0+128)
  5197                           
  5198                           ;main.c: 109:                 if (success) {
  5199  379B  086F               	movf	statemachine@success^(0+128),w
  5200  379C  1903               	btfsc	3,2
  5201  379D  0008               	return
  5202                           
  5203                           ;main.c: 110:                     T1CONbits.TMR1ON = 0;
  5204  379E  0020               	movlb	0	; select bank0
  5205  379F  1018               	bcf	24,0	;volatile
  5206                           
  5207                           ;main.c: 111:                     PIE1bits.TMR1IE = 0;
  5208  37A0  0021               	movlb	1	; select bank1
  5209  37A1  1011               	bcf	17,0	;volatile
  5210                           
  5211                           ;main.c: 112:                     RGB_color(0);
  5212  37A2  3000               	movlw	0
  5213  37A3  00F1               	movwf	RGB_color@color
  5214  37A4  00F2               	movwf	RGB_color@color+1
  5215  37A5  31B3  233A         	fcall	_RGB_color
  5216                           
  5217                           ;main.c: 113:                     tmr1_flag = 0;
  5218  37A7  0023               	movlb	3	; select bank3
  5219  37A8  01E5               	clrf	_tmr1_flag^(0+384)	;volatile
  5220                           
  5221                           ;main.c: 126:                     currState = 1;
  5222  37A9  01E9               	clrf	_currState^(0+384)
  5223  37AA  0AE9               	incf	_currState^(0+384),f
  5224  37AB  0008               	return
  5225  37AC                     l7761:	
  5226                           
  5227                           ;main.c: 135:             init_AFE();
  5228  37AC  31B6  2663  31B7   	fcall	_init_AFE
  5229                           
  5230                           ;main.c: 154:             RGB_color(1);
  5231  37AF  3001               	movlw	1
  5232  37B0  00F1               	movwf	RGB_color@color
  5233  37B1  3000               	movlw	0
  5234  37B2  00F2               	movwf	RGB_color@color+1
  5235  37B3  31B3  233A         	fcall	_RGB_color
  5236                           
  5237                           ;main.c: 155:             currState = 2;
  5238  37B5  3002               	movlw	2
  5239  37B6  0022               	movlb	2	; select bank2
  5240  37B7  00E2               	movwf	??_statemachine^(0+256)
  5241  37B8  0862               	movf	??_statemachine^(0+256),w
  5242  37B9  0023               	movlb	3	; select bank3
  5243  37BA  00E9               	movwf	_currState^(0+384)
  5244                           
  5245                           ;main.c: 156:             break;
  5246  37BB  0008               	return
  5247  37BC                     l7765:	
  5248                           
  5249                           ;main.c: 160:             AFE_UPDATE();
  5250  37BC  31B5  2542  31B7   	fcall	_AFE_UPDATE
  5251  37BF  0064               	clrwdt	;# 
  5252                           
  5253                           ;main.c: 164:             printcellParameters();
  5254  37C0  3198  20E5  31B7   	fcall	_printcellParameters
  5255                           
  5256                           ;main.c: 166:             _delay((unsigned long)((5000)*(16000000/4000.0)));
  5257  37C3  3066               	movlw	102
  5258  37C4  0022               	movlb	2	; select bank2
  5259  37C5  00E3               	movwf	(??_statemachine^(0+256)+1)
  5260  37C6  3076               	movlw	118
  5261  37C7  00E2               	movwf	??_statemachine^(0+256)
  5262  37C8  30C1               	movlw	193
  5263  37C9                     u9717:	
  5264  37C9  0B89               	decfsz	9,f
  5265  37CA  2FC9               	goto	u9717
  5266  37CB  0BE2               	decfsz	??_statemachine^(0+256),f
  5267  37CC  2FC9               	goto	u9717
  5268  37CD  0BE3               	decfsz	(??_statemachine^(0+256)+1),f
  5269  37CE  2FC9               	goto	u9717
  5270                           
  5271                           ;main.c: 168:             break;
  5272  37CF  0008               	return
  5273  37D0                     l7769:	
  5274                           
  5275                           ;main.c: 172:              snprintf(messageBuffer, 127, "WATCHDOG NOT KICKED: AFE comms 
      +                          error \n\r");
  5276  37D0  3071               	movlw	113
  5277  37D1  0021               	movlb	1	; select bank1
  5278  37D2  00CC               	movwf	snprintf@s^(0+128)
  5279  37D3  3027               	movlw	39
  5280  37D4  00CD               	movwf	(snprintf@s^(0+128)+1)
  5281  37D5  307F               	movlw	127
  5282  37D6  00CE               	movwf	snprintf@n^(0+128)
  5283  37D7  3000               	movlw	0
  5284  37D8  00CF               	movwf	(snprintf@n^(0+128)+1)
  5285  37D9  30BA               	movlw	low (STR_1| (0+32768))
  5286  37DA  00D0               	movwf	snprintf@fmt^(0+128)
  5287  37DB  30B8               	movlw	high (STR_1| (0+32768))
  5288  37DC  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5289  37DD  31B2  22AD  31B7   	fcall	_snprintf
  5290                           
  5291                           ;main.c: 173:              EUSART_Write_Text(messageBuffer);
  5292  37E0  3071               	movlw	113
  5293  37E1  00F2               	movwf	EUSART_Write_Text@text
  5294  37E2  3027               	movlw	39
  5295  37E3  00F3               	movwf	EUSART_Write_Text@text+1
  5296  37E4  31B2  2278         	fcall	_EUSART_Write_Text
  5297                           
  5298                           ;main.c: 174:             break;
  5299  37E6  0008               	return
  5300  37E7                     l7775:	
  5301  37E7  0023               	movlb	3	; select bank3
  5302  37E8  0869               	movf	_currState^(0+384),w
  5303  37E9  0022               	movlb	2	; select bank2
  5304  37EA  00E2               	movwf	??_statemachine^(0+256)
  5305  37EB  01E3               	clrf	(??_statemachine^(0+256)+1)
  5306                           
  5307                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5308                           ; Switch size 1, requested type "simple"
  5309                           ; Number of cases is 1, Range of values is 0 to 0
  5310                           ; switch strategies available:
  5311                           ; Name         Instructions Cycles
  5312                           ; simple_byte            4     3 (average)
  5313                           ; direct_byte            8     6 (fixed)
  5314                           ; jumptable            260     6 (fixed)
  5315                           ;	Chosen strategy is simple_byte
  5316  37EC  0863               	movf	(??_statemachine+1)^(0+256),w
  5317  37ED  3A00               	xorlw	0	; case 0
  5318  37EE  1903               	skipnz
  5319  37EF  2FF1               	goto	l7959
  5320  37F0  2FFF               	goto	l188
  5321  37F1                     l7959:	
  5322                           
  5323                           ; Switch size 1, requested type "simple"
  5324                           ; Number of cases is 4, Range of values is 0 to 3
  5325                           ; switch strategies available:
  5326                           ; Name         Instructions Cycles
  5327                           ; simple_byte           13     7 (average)
  5328                           ; direct_byte           14     6 (fixed)
  5329                           ; jumptable            260     6 (fixed)
  5330                           ;	Chosen strategy is simple_byte
  5331  37F1  0862               	movf	??_statemachine^(0+256),w
  5332  37F2  3A00               	xorlw	0	; case 0
  5333  37F3  1903               	skipnz
  5334  37F4  2F89               	goto	l7743
  5335  37F5  3A01               	xorlw	1	; case 1
  5336  37F6  1903               	skipnz
  5337  37F7  2FAC               	goto	l7761
  5338  37F8  3A03               	xorlw	3	; case 2
  5339  37F9  1903               	skipnz
  5340  37FA  2FBC               	goto	l7765
  5341  37FB  3A01               	xorlw	1	; case 3
  5342  37FC  1903               	skipnz
  5343  37FD  2FD0               	goto	l7769
  5344  37FE  2FFF               	goto	l188
  5345  37FF                     l188:	
  5346  37FF  0008               	return
  5347  3800                     __end_of_statemachine:	
  5348                           
  5349                           	psect	text3
  5350  18E5                     __ptext3:	
  5351 ;; *************** function _printcellParameters *****************
  5352 ;; Defined at:
  5353 ;;		line 326 in file "BQ76920.c"
  5354 ;; Parameters:    Size  Location     Type
  5355 ;;		None
  5356 ;; Auto vars:     Size  Location     Type
  5357 ;;		None
  5358 ;; Return value:  Size  Location     Type
  5359 ;;                  1    wreg      void 
  5360 ;; Registers used:
  5361 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5362 ;; Tracked objects:
  5363 ;;		On entry : 0/0
  5364 ;;		On exit  : 0/0
  5365 ;;		Unchanged: 0/0
  5366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5371 ;;Total ram usage:        0 bytes
  5372 ;; Hardware stack levels used:    1
  5373 ;; Hardware stack levels required when called:   10
  5374 ;; This function calls:
  5375 ;;		_EUSART_Write_Text
  5376 ;;		_snprintf
  5377 ;; This function is called by:
  5378 ;;		_statemachine
  5379 ;; This function uses a non-reentrant model
  5380 ;;
  5381                           
  5382                           
  5383                           ;psect for function _printcellParameters
  5384  18E5                     _printcellParameters:	
  5385                           
  5386                           ;BQ76920.c: 351:     snprintf(messageBuffer, 127, "%d,",batVoltage);
  5387                           
  5388                           ;incstack = 0
  5389                           ; Regs used in _printcellParameters: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5390  18E5  3071               	movlw	113
  5391  18E6  0021               	movlb	1	; select bank1
  5392  18E7  00CC               	movwf	snprintf@s^(0+128)
  5393  18E8  3027               	movlw	39
  5394  18E9  00CD               	movwf	(snprintf@s^(0+128)+1)
  5395  18EA  307F               	movlw	127
  5396  18EB  00CE               	movwf	snprintf@n^(0+128)
  5397  18EC  3000               	movlw	0
  5398  18ED  00CF               	movwf	(snprintf@n^(0+128)+1)
  5399  18EE  305C               	movlw	low ((STR_6+12)| (0+32768))
  5400  18EF  00D0               	movwf	snprintf@fmt^(0+128)
  5401  18F0  30BA               	movlw	high ((STR_6+12)| (0+32768))
  5402  18F1  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5403  18F2  0023               	movlb	3	; select bank3
  5404  18F3  0847               	movf	(_batVoltage+3)^(0+384),w
  5405  18F4  0021               	movlb	1	; select bank1
  5406  18F5  00D5               	movwf	((?_snprintf+3)^(0+128)+6)
  5407  18F6  0023               	movlb	3	; select bank3
  5408  18F7  0846               	movf	(_batVoltage+2)^(0+384),w
  5409  18F8  0021               	movlb	1	; select bank1
  5410  18F9  00D4               	movwf	((?_snprintf+2)^(0+128)+6)
  5411  18FA  0023               	movlb	3	; select bank3
  5412  18FB  0845               	movf	(_batVoltage+1)^(0+384),w
  5413  18FC  0021               	movlb	1	; select bank1
  5414  18FD  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5415  18FE  0023               	movlb	3	; select bank3
  5416  18FF  0844               	movf	_batVoltage^(0+384),w
  5417  1900  0021               	movlb	1	; select bank1
  5418  1901  00D2               	movwf	(?_snprintf^(0+128)+6)
  5419  1902  31B2  22AD  3198   	fcall	_snprintf
  5420                           
  5421                           ;BQ76920.c: 352:     EUSART_Write_Text(messageBuffer);
  5422  1905  3071               	movlw	113
  5423  1906  00F2               	movwf	EUSART_Write_Text@text
  5424  1907  3027               	movlw	39
  5425  1908  00F3               	movwf	EUSART_Write_Text@text+1
  5426  1909  31B2  2278  3198   	fcall	_EUSART_Write_Text
  5427                           
  5428                           ;BQ76920.c: 353:     snprintf(messageBuffer, 127, "%d,",batCurrent);
  5429  190C  3071               	movlw	113
  5430  190D  0021               	movlb	1	; select bank1
  5431  190E  00CC               	movwf	snprintf@s^(0+128)
  5432  190F  3027               	movlw	39
  5433  1910  00CD               	movwf	(snprintf@s^(0+128)+1)
  5434  1911  307F               	movlw	127
  5435  1912  00CE               	movwf	snprintf@n^(0+128)
  5436  1913  3000               	movlw	0
  5437  1914  00CF               	movwf	(snprintf@n^(0+128)+1)
  5438  1915  305C               	movlw	low ((STR_6+12)| (0+32768))
  5439  1916  00D0               	movwf	snprintf@fmt^(0+128)
  5440  1917  30BA               	movlw	high ((STR_6+12)| (0+32768))
  5441  1918  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5442  1919  0023               	movlb	3	; select bank3
  5443  191A  0843               	movf	(_batCurrent+3)^(0+384),w
  5444  191B  0021               	movlb	1	; select bank1
  5445  191C  00D5               	movwf	((?_snprintf+3)^(0+128)+6)
  5446  191D  0023               	movlb	3	; select bank3
  5447  191E  0842               	movf	(_batCurrent+2)^(0+384),w
  5448  191F  0021               	movlb	1	; select bank1
  5449  1920  00D4               	movwf	((?_snprintf+2)^(0+128)+6)
  5450  1921  0023               	movlb	3	; select bank3
  5451  1922  0841               	movf	(_batCurrent+1)^(0+384),w
  5452  1923  0021               	movlb	1	; select bank1
  5453  1924  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5454  1925  0023               	movlb	3	; select bank3
  5455  1926  0840               	movf	_batCurrent^(0+384),w
  5456  1927  0021               	movlb	1	; select bank1
  5457  1928  00D2               	movwf	(?_snprintf^(0+128)+6)
  5458  1929  31B2  22AD  3198   	fcall	_snprintf
  5459                           
  5460                           ;BQ76920.c: 354:     EUSART_Write_Text(messageBuffer);
  5461  192C  3071               	movlw	113
  5462  192D  00F2               	movwf	EUSART_Write_Text@text
  5463  192E  3027               	movlw	39
  5464  192F  00F3               	movwf	EUSART_Write_Text@text+1
  5465  1930  31B2  2278  3198   	fcall	_EUSART_Write_Text
  5466                           
  5467                           ;BQ76920.c: 355:     snprintf(messageBuffer, 127, "%d,",temperatureThermistor);
  5468  1933  3071               	movlw	113
  5469  1934  0021               	movlb	1	; select bank1
  5470  1935  00CC               	movwf	snprintf@s^(0+128)
  5471  1936  3027               	movlw	39
  5472  1937  00CD               	movwf	(snprintf@s^(0+128)+1)
  5473  1938  307F               	movlw	127
  5474  1939  00CE               	movwf	snprintf@n^(0+128)
  5475  193A  3000               	movlw	0
  5476  193B  00CF               	movwf	(snprintf@n^(0+128)+1)
  5477  193C  305C               	movlw	low ((STR_6+12)| (0+32768))
  5478  193D  00D0               	movwf	snprintf@fmt^(0+128)
  5479  193E  30BA               	movlw	high ((STR_6+12)| (0+32768))
  5480  193F  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5481  1940  0023               	movlb	3	; select bank3
  5482  1941  083F               	movf	(_temperatureThermistor+3)^(0+384),w
  5483  1942  0021               	movlb	1	; select bank1
  5484  1943  00D5               	movwf	((?_snprintf+3)^(0+128)+6)
  5485  1944  0023               	movlb	3	; select bank3
  5486  1945  083E               	movf	(_temperatureThermistor+2)^(0+384),w
  5487  1946  0021               	movlb	1	; select bank1
  5488  1947  00D4               	movwf	((?_snprintf+2)^(0+128)+6)
  5489  1948  0023               	movlb	3	; select bank3
  5490  1949  083D               	movf	(_temperatureThermistor+1)^(0+384),w
  5491  194A  0021               	movlb	1	; select bank1
  5492  194B  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5493  194C  0023               	movlb	3	; select bank3
  5494  194D  083C               	movf	_temperatureThermistor^(0+384),w
  5495  194E  0021               	movlb	1	; select bank1
  5496  194F  00D2               	movwf	(?_snprintf^(0+128)+6)
  5497  1950  31B2  22AD  3198   	fcall	_snprintf
  5498                           
  5499                           ;BQ76920.c: 356:     EUSART_Write_Text(messageBuffer);
  5500  1953  3071               	movlw	113
  5501  1954  00F2               	movwf	EUSART_Write_Text@text
  5502  1955  3027               	movlw	39
  5503  1956  00F3               	movwf	EUSART_Write_Text@text+1
  5504  1957  31B2  2278  3198   	fcall	_EUSART_Write_Text
  5505                           
  5506                           ;BQ76920.c: 357:     snprintf(messageBuffer, 127, "0,");
  5507  195A  3071               	movlw	113
  5508  195B  0021               	movlb	1	; select bank1
  5509  195C  00CC               	movwf	snprintf@s^(0+128)
  5510  195D  3027               	movlw	39
  5511  195E  00CD               	movwf	(snprintf@s^(0+128)+1)
  5512  195F  307F               	movlw	127
  5513  1960  00CE               	movwf	snprintf@n^(0+128)
  5514  1961  3000               	movlw	0
  5515  1962  00CF               	movwf	(snprintf@n^(0+128)+1)
  5516  1963  30C1               	movlw	low (STR_5| (0+32768))
  5517  1964  00D0               	movwf	snprintf@fmt^(0+128)
  5518  1965  30BA               	movlw	high (STR_5| (0+32768))
  5519  1966  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5520  1967  31B2  22AD  3198   	fcall	_snprintf
  5521                           
  5522                           ;BQ76920.c: 358:     EUSART_Write_Text(messageBuffer);
  5523  196A  3071               	movlw	113
  5524  196B  00F2               	movwf	EUSART_Write_Text@text
  5525  196C  3027               	movlw	39
  5526  196D  00F3               	movwf	EUSART_Write_Text@text+1
  5527  196E  31B2  2278  3198   	fcall	_EUSART_Write_Text
  5528                           
  5529                           ;BQ76920.c: 359:     snprintf(messageBuffer, 127, "%d,%d,%d,%d,%d,",cellVoltages[0],cell
      +                          Voltages[1],cellVoltages[2],cellVoltages[3],cellVoltages[4]);
  5530  1971  3071               	movlw	113
  5531  1972  0021               	movlb	1	; select bank1
  5532  1973  00CC               	movwf	snprintf@s^(0+128)
  5533  1974  3027               	movlw	39
  5534  1975  00CD               	movwf	(snprintf@s^(0+128)+1)
  5535  1976  307F               	movlw	127
  5536  1977  00CE               	movwf	snprintf@n^(0+128)
  5537  1978  3000               	movlw	0
  5538  1979  00CF               	movwf	(snprintf@n^(0+128)+1)
  5539  197A  3050               	movlw	low (STR_6| (0+32768))
  5540  197B  00D0               	movwf	snprintf@fmt^(0+128)
  5541  197C  30BA               	movlw	high (STR_6| (0+32768))
  5542  197D  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5543  197E  0023               	movlb	3	; select bank3
  5544  197F  082B               	movf	(_cellVoltages+1)^(0+384),w
  5545  1980  0021               	movlb	1	; select bank1
  5546  1981  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5547  1982  0023               	movlb	3	; select bank3
  5548  1983  082A               	movf	_cellVoltages^(0+384),w
  5549  1984  0021               	movlb	1	; select bank1
  5550  1985  00D2               	movwf	(?_snprintf^(0+128)+6)
  5551  1986  0023               	movlb	3	; select bank3
  5552  1987  082D               	movf	((_cellVoltages+1)^(0+384)+2),w
  5553  1988  0021               	movlb	1	; select bank1
  5554  1989  00D5               	movwf	((?_snprintf+1)^(0+128)+8)
  5555  198A  0023               	movlb	3	; select bank3
  5556  198B  082C               	movf	(_cellVoltages^(0+384)+2),w
  5557  198C  0021               	movlb	1	; select bank1
  5558  198D  00D4               	movwf	(?_snprintf^(0+128)+8)
  5559  198E  0023               	movlb	3	; select bank3
  5560  198F  082F               	movf	((_cellVoltages+1)^(0+384)+4),w
  5561  1990  0021               	movlb	1	; select bank1
  5562  1991  00D7               	movwf	((?_snprintf+1)^(0+128)+10)
  5563  1992  0023               	movlb	3	; select bank3
  5564  1993  082E               	movf	(_cellVoltages^(0+384)+4),w
  5565  1994  0021               	movlb	1	; select bank1
  5566  1995  00D6               	movwf	(?_snprintf^(0+128)+10)
  5567  1996  0023               	movlb	3	; select bank3
  5568  1997  0831               	movf	((_cellVoltages+1)^(0+384)+6),w
  5569  1998  0021               	movlb	1	; select bank1
  5570  1999  00D9               	movwf	((?_snprintf+1)^(0+128)+12)
  5571  199A  0023               	movlb	3	; select bank3
  5572  199B  0830               	movf	(_cellVoltages^(0+384)+6),w
  5573  199C  0021               	movlb	1	; select bank1
  5574  199D  00D8               	movwf	(?_snprintf^(0+128)+12)
  5575  199E  0023               	movlb	3	; select bank3
  5576  199F  0833               	movf	((_cellVoltages+1)^(0+384)+8),w
  5577  19A0  0021               	movlb	1	; select bank1
  5578  19A1  00DB               	movwf	((?_snprintf+1)^(0+128)+14)
  5579  19A2  0023               	movlb	3	; select bank3
  5580  19A3  0832               	movf	(_cellVoltages^(0+384)+8),w
  5581  19A4  0021               	movlb	1	; select bank1
  5582  19A5  00DA               	movwf	(?_snprintf^(0+128)+14)
  5583  19A6  31B2  22AD  3198   	fcall	_snprintf
  5584                           
  5585                           ;BQ76920.c: 360:     EUSART_Write_Text(messageBuffer);
  5586  19A9  3071               	movlw	113
  5587  19AA  00F2               	movwf	EUSART_Write_Text@text
  5588  19AB  3027               	movlw	39
  5589  19AC  00F3               	movwf	EUSART_Write_Text@text+1
  5590  19AD  31B2  2278  3198   	fcall	_EUSART_Write_Text
  5591                           
  5592                           ;BQ76920.c: 361:     snprintf(messageBuffer, 127, "%d,%d,%d,%d,%d,",cellSOC[0],cellSOC[1
      +                          ],cellSOC[2],cellSOC[3],cellSOC[4]);
  5593  19B0  3071               	movlw	113
  5594  19B1  0021               	movlb	1	; select bank1
  5595  19B2  00CC               	movwf	snprintf@s^(0+128)
  5596  19B3  3027               	movlw	39
  5597  19B4  00CD               	movwf	(snprintf@s^(0+128)+1)
  5598  19B5  307F               	movlw	127
  5599  19B6  00CE               	movwf	snprintf@n^(0+128)
  5600  19B7  3000               	movlw	0
  5601  19B8  00CF               	movwf	(snprintf@n^(0+128)+1)
  5602  19B9  3050               	movlw	low (STR_6| (0+32768))
  5603  19BA  00D0               	movwf	snprintf@fmt^(0+128)
  5604  19BB  30BA               	movlw	high (STR_6| (0+32768))
  5605  19BC  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5606  19BD  0023               	movlb	3	; select bank3
  5607  19BE  0821               	movf	(_cellSOC+1)^(0+384),w
  5608  19BF  0021               	movlb	1	; select bank1
  5609  19C0  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5610  19C1  0023               	movlb	3	; select bank3
  5611  19C2  0820               	movf	_cellSOC^(0+384),w
  5612  19C3  0021               	movlb	1	; select bank1
  5613  19C4  00D2               	movwf	(?_snprintf^(0+128)+6)
  5614  19C5  0023               	movlb	3	; select bank3
  5615  19C6  0823               	movf	((_cellSOC+1)^(0+384)+2),w
  5616  19C7  0021               	movlb	1	; select bank1
  5617  19C8  00D5               	movwf	((?_snprintf+1)^(0+128)+8)
  5618  19C9  0023               	movlb	3	; select bank3
  5619  19CA  0822               	movf	(_cellSOC^(0+384)+2),w
  5620  19CB  0021               	movlb	1	; select bank1
  5621  19CC  00D4               	movwf	(?_snprintf^(0+128)+8)
  5622  19CD  0023               	movlb	3	; select bank3
  5623  19CE  0825               	movf	((_cellSOC+1)^(0+384)+4),w
  5624  19CF  0021               	movlb	1	; select bank1
  5625  19D0  00D7               	movwf	((?_snprintf+1)^(0+128)+10)
  5626  19D1  0023               	movlb	3	; select bank3
  5627  19D2  0824               	movf	(_cellSOC^(0+384)+4),w
  5628  19D3  0021               	movlb	1	; select bank1
  5629  19D4  00D6               	movwf	(?_snprintf^(0+128)+10)
  5630  19D5  0023               	movlb	3	; select bank3
  5631  19D6  0827               	movf	((_cellSOC+1)^(0+384)+6),w
  5632  19D7  0021               	movlb	1	; select bank1
  5633  19D8  00D9               	movwf	((?_snprintf+1)^(0+128)+12)
  5634  19D9  0023               	movlb	3	; select bank3
  5635  19DA  0826               	movf	(_cellSOC^(0+384)+6),w
  5636  19DB  0021               	movlb	1	; select bank1
  5637  19DC  00D8               	movwf	(?_snprintf^(0+128)+12)
  5638  19DD  0023               	movlb	3	; select bank3
  5639  19DE  0829               	movf	((_cellSOC+1)^(0+384)+8),w
  5640  19DF  0021               	movlb	1	; select bank1
  5641  19E0  00DB               	movwf	((?_snprintf+1)^(0+128)+14)
  5642  19E1  0023               	movlb	3	; select bank3
  5643  19E2  0828               	movf	(_cellSOC^(0+384)+8),w
  5644  19E3  0021               	movlb	1	; select bank1
  5645  19E4  00DA               	movwf	(?_snprintf^(0+128)+14)
  5646  19E5  31B2  22AD  3198   	fcall	_snprintf
  5647                           
  5648                           ;BQ76920.c: 362:     EUSART_Write_Text(messageBuffer);
  5649  19E8  3071               	movlw	113
  5650  19E9  00F2               	movwf	EUSART_Write_Text@text
  5651  19EA  3027               	movlw	39
  5652  19EB  00F3               	movwf	EUSART_Write_Text@text+1
  5653  19EC  31B2  2278  3198   	fcall	_EUSART_Write_Text
  5654                           
  5655                           ;BQ76920.c: 363:     snprintf(messageBuffer, 127, "%d,%d,%d,%d,%d,%d\n\r",XR_error,alert
      +                          _error,uv_error,ov_error,scd_error,ocd_error);
  5656  19EF  3071               	movlw	113
  5657  19F0  0021               	movlb	1	; select bank1
  5658  19F1  00CC               	movwf	snprintf@s^(0+128)
  5659  19F2  3027               	movlw	39
  5660  19F3  00CD               	movwf	(snprintf@s^(0+128)+1)
  5661  19F4  307F               	movlw	127
  5662  19F5  00CE               	movwf	snprintf@n^(0+128)
  5663  19F6  3000               	movlw	0
  5664  19F7  00CF               	movwf	(snprintf@n^(0+128)+1)
  5665  19F8  30E5               	movlw	low (STR_8| (0+32768))
  5666  19F9  00D0               	movwf	snprintf@fmt^(0+128)
  5667  19FA  30B9               	movlw	high (STR_8| (0+32768))
  5668  19FB  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5669  19FC  0023               	movlb	3	; select bank3
  5670  19FD  085B               	movf	(_XR_error+1)^(0+384),w
  5671  19FE  0021               	movlb	1	; select bank1
  5672  19FF  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5673  1A00  0023               	movlb	3	; select bank3
  5674  1A01  085A               	movf	_XR_error^(0+384),w
  5675  1A02  0021               	movlb	1	; select bank1
  5676  1A03  00D2               	movwf	(?_snprintf^(0+128)+6)
  5677  1A04  0023               	movlb	3	; select bank3
  5678  1A05  0859               	movf	(_alert_error+1)^(0+384),w
  5679  1A06  0021               	movlb	1	; select bank1
  5680  1A07  00D5               	movwf	((?_snprintf+1)^(0+128)+8)
  5681  1A08  0023               	movlb	3	; select bank3
  5682  1A09  0858               	movf	_alert_error^(0+384),w
  5683  1A0A  0021               	movlb	1	; select bank1
  5684  1A0B  00D4               	movwf	(?_snprintf^(0+128)+8)
  5685  1A0C  0023               	movlb	3	; select bank3
  5686  1A0D  0857               	movf	(_uv_error+1)^(0+384),w
  5687  1A0E  0021               	movlb	1	; select bank1
  5688  1A0F  00D7               	movwf	((?_snprintf+1)^(0+128)+10)
  5689  1A10  0023               	movlb	3	; select bank3
  5690  1A11  0856               	movf	_uv_error^(0+384),w
  5691  1A12  0021               	movlb	1	; select bank1
  5692  1A13  00D6               	movwf	(?_snprintf^(0+128)+10)
  5693  1A14  0023               	movlb	3	; select bank3
  5694  1A15  0855               	movf	(_ov_error+1)^(0+384),w
  5695  1A16  0021               	movlb	1	; select bank1
  5696  1A17  00D9               	movwf	((?_snprintf+1)^(0+128)+12)
  5697  1A18  0023               	movlb	3	; select bank3
  5698  1A19  0854               	movf	_ov_error^(0+384),w
  5699  1A1A  0021               	movlb	1	; select bank1
  5700  1A1B  00D8               	movwf	(?_snprintf^(0+128)+12)
  5701  1A1C  0023               	movlb	3	; select bank3
  5702  1A1D  0853               	movf	(_scd_error+1)^(0+384),w
  5703  1A1E  0021               	movlb	1	; select bank1
  5704  1A1F  00DB               	movwf	((?_snprintf+1)^(0+128)+14)
  5705  1A20  0023               	movlb	3	; select bank3
  5706  1A21  0852               	movf	_scd_error^(0+384),w
  5707  1A22  0021               	movlb	1	; select bank1
  5708  1A23  00DA               	movwf	(?_snprintf^(0+128)+14)
  5709  1A24  0023               	movlb	3	; select bank3
  5710  1A25  0851               	movf	(_ocd_error+1)^(0+384),w
  5711  1A26  0021               	movlb	1	; select bank1
  5712  1A27  00DD               	movwf	((?_snprintf+1)^(0+128)+16)
  5713  1A28  0023               	movlb	3	; select bank3
  5714  1A29  0850               	movf	_ocd_error^(0+384),w
  5715  1A2A  0021               	movlb	1	; select bank1
  5716  1A2B  00DC               	movwf	(?_snprintf^(0+128)+16)
  5717  1A2C  31B2  22AD  3198   	fcall	_snprintf
  5718                           
  5719                           ;BQ76920.c: 364:     EUSART_Write_Text(messageBuffer);
  5720  1A2F  3071               	movlw	113
  5721  1A30  00F2               	movwf	EUSART_Write_Text@text
  5722  1A31  3027               	movlw	39
  5723  1A32  00F3               	movwf	EUSART_Write_Text@text+1
  5724  1A33  31B2  2278         	fcall	_EUSART_Write_Text
  5725  1A35  0008               	return
  5726  1A36                     __end_of_printcellParameters:	
  5727                           
  5728                           	psect	text4
  5729  32AD                     __ptext4:	
  5730 ;; *************** function _snprintf *****************
  5731 ;; Defined at:
  5732 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\snprintf.c"
  5733 ;; Parameters:    Size  Location     Type
  5734 ;;  s               2   44[BANK1 ] PTR unsigned char 
  5735 ;;		 -> messageBuffer(127), 
  5736 ;;  n               2   46[BANK1 ] unsigned int 
  5737 ;;  fmt             2   48[BANK1 ] PTR const unsigned char 
  5738 ;;		 -> STR_22(18), STR_21(18), STR_20(19), STR_19(20), 
  5739 ;;		 -> STR_18(20), STR_17(21), STR_16(21), STR_15(21), 
  5740 ;;		 -> STR_14(22), STR_13(22), STR_12(21), STR_11(21), 
  5741 ;;		 -> STR_8(20), STR_7(16), STR_6(16), STR_5(3), 
  5742 ;;		 -> STR_4(4), STR_3(4), STR_2(4), STR_1(40), 
  5743 ;; Auto vars:     Size  Location     Type
  5744 ;;  ret             2    0        int 
  5745 ;;  ap              1   79[BANK0 ] PTR void [1]
  5746 ;;		 -> ?_snprintf(2), 
  5747 ;; Return value:  Size  Location     Type
  5748 ;;                  2   44[BANK1 ] int 
  5749 ;; Registers used:
  5750 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5751 ;; Tracked objects:
  5752 ;;		On entry : 0/0
  5753 ;;		On exit  : 0/0
  5754 ;;		Unchanged: 0/0
  5755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5756 ;;      Params:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5757 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5758 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5759 ;;      Totals:         0       4      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5760 ;;Total ram usage:       22 bytes
  5761 ;; Hardware stack levels used:    1
  5762 ;; Hardware stack levels required when called:    9
  5763 ;; This function calls:
  5764 ;;		_vsnprintf
  5765 ;; This function is called by:
  5766 ;;		_statemachine
  5767 ;;		_printcellParameters
  5768 ;;		_printotAFERegisters
  5769 ;; This function uses a non-reentrant model
  5770 ;;
  5771                           
  5772                           
  5773                           ;psect for function _snprintf
  5774  32AD                     _snprintf:	
  5775                           
  5776                           ;incstack = 0
  5777                           ; Regs used in _snprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5778  32AD  30D2               	movlw	(low ((?_snprintf| 0+6)))& (0+255)
  5779  32AE  0020               	movlb	0	; select bank0
  5780  32AF  00EC               	movwf	??_snprintf
  5781  32B0  086C               	movf	??_snprintf,w
  5782  32B1  00EF               	movwf	snprintf@ap
  5783  32B2  0021               	movlb	1	; select bank1
  5784  32B3  084D               	movf	(snprintf@s+1)^(0+128),w
  5785  32B4  00BC               	movwf	(vsnprintf@s+1)^(0+128)
  5786  32B5  084C               	movf	snprintf@s^(0+128),w
  5787  32B6  00BB               	movwf	vsnprintf@s^(0+128)
  5788  32B7  084F               	movf	(snprintf@n+1)^(0+128),w
  5789  32B8  00BE               	movwf	(vsnprintf@n+1)^(0+128)
  5790  32B9  084E               	movf	snprintf@n^(0+128),w
  5791  32BA  00BD               	movwf	vsnprintf@n^(0+128)
  5792  32BB  0851               	movf	(snprintf@fmt+1)^(0+128),w
  5793  32BC  00C0               	movwf	(vsnprintf@fmt+1)^(0+128)
  5794  32BD  0850               	movf	snprintf@fmt^(0+128),w
  5795  32BE  00BF               	movwf	vsnprintf@fmt^(0+128)
  5796  32BF  306F               	movlw	(low (snprintf@ap| 0))& (0+255)
  5797  32C0  0020               	movlb	0	; select bank0
  5798  32C1  00EC               	movwf	??_snprintf
  5799  32C2  086C               	movf	??_snprintf,w
  5800  32C3  0021               	movlb	1	; select bank1
  5801  32C4  00C1               	movwf	vsnprintf@ap^(0+128)
  5802  32C5  31A9  2149         	fcall	_vsnprintf
  5803  32C7  0008               	return
  5804  32C8                     __end_of_snprintf:	
  5805                           
  5806                           	psect	text5
  5807  2949                     __ptext5:	
  5808 ;; *************** function _vsnprintf *****************
  5809 ;; Defined at:
  5810 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_vsnprintf.c"
  5811 ;; Parameters:    Size  Location     Type
  5812 ;;  s               2   27[BANK1 ] PTR unsigned char 
  5813 ;;		 -> messageBuffer(127), 
  5814 ;;  n               2   29[BANK1 ] unsigned int 
  5815 ;;  fmt             2   31[BANK1 ] PTR const unsigned char 
  5816 ;;		 -> STR_22(18), STR_21(18), STR_20(19), STR_19(20), 
  5817 ;;		 -> STR_18(20), STR_17(21), STR_16(21), STR_15(21), 
  5818 ;;		 -> STR_14(22), STR_13(22), STR_12(21), STR_11(21), 
  5819 ;;		 -> STR_8(20), STR_7(16), STR_6(16), STR_5(3), 
  5820 ;;		 -> STR_4(4), STR_3(4), STR_2(4), STR_1(40), 
  5821 ;;  ap              1   33[BANK1 ] PTR PTR void 
  5822 ;;		 -> snprintf@ap(1), 
  5823 ;; Auto vars:     Size  Location     Type
  5824 ;;  f               6   38[BANK1 ] struct _IO_FILE
  5825 ;;  cnt             2   36[BANK1 ] int 
  5826 ;; Return value:  Size  Location     Type
  5827 ;;                  2   27[BANK1 ] int 
  5828 ;; Registers used:
  5829 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5830 ;; Tracked objects:
  5831 ;;		On entry : 0/0
  5832 ;;		On exit  : 0/0
  5833 ;;		Unchanged: 0/0
  5834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5835 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5836 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5837 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5838 ;;      Totals:         0       2      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5839 ;;Total ram usage:       19 bytes
  5840 ;; Hardware stack levels used:    1
  5841 ;; Hardware stack levels required when called:    8
  5842 ;; This function calls:
  5843 ;;		_vfprintf
  5844 ;; This function is called by:
  5845 ;;		_snprintf
  5846 ;; This function uses a non-reentrant model
  5847 ;;
  5848                           
  5849                           
  5850                           ;psect for function _vsnprintf
  5851  2949                     _vsnprintf:	
  5852                           
  5853                           ;incstack = 0
  5854                           ; Regs used in _vsnprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5855  2949  3080               	movlw	128
  5856  294A  0021               	movlb	1	; select bank1
  5857  294B  023E               	subwf	(vsnprintf@n+1)^(0+128),w
  5858  294C  3000               	movlw	0
  5859  294D  1903               	skipnz
  5860  294E  023D               	subwf	vsnprintf@n^(0+128),w
  5861  294F  1C03               	skipc
  5862  2950  295C               	goto	l7351
  5863  2951  304B               	movlw	75
  5864  2952  0023               	movlb	3	; select bank3
  5865  2953  00C8               	movwf	_errno^(0+384)
  5866  2954  3000               	movlw	0
  5867  2955  00C9               	movwf	(_errno^(0+384)+1)
  5868  2956  30FF               	movlw	255
  5869  2957  0021               	movlb	1	; select bank1
  5870  2958  00BB               	movwf	?_vsnprintf^(0+128)
  5871  2959  30FF               	movlw	255
  5872  295A  00BC               	movwf	(?_vsnprintf^(0+128)+1)
  5873  295B  0008               	return
  5874  295C                     l7351:	
  5875  295C  083C               	movf	(vsnprintf@s+1)^(0+128),w
  5876  295D  00C7               	movwf	(vsnprintf@f+1)^(0+128)
  5877  295E  083B               	movf	vsnprintf@s^(0+128),w
  5878  295F  00C6               	movwf	vsnprintf@f^(0+128)
  5879  2960  3000               	movlw	0
  5880  2961  023E               	subwf	(vsnprintf@n+1)^(0+128),w
  5881  2962  3002               	movlw	2
  5882  2963  1903               	skipnz
  5883  2964  023D               	subwf	vsnprintf@n^(0+128),w
  5884  2965  1C03               	skipc
  5885  2966  2970               	goto	l7357
  5886  2967  083D               	movf	vsnprintf@n^(0+128),w
  5887  2968  3EFF               	addlw	255
  5888  2969  00CA               	movwf	(vsnprintf@f^(0+128)+4)
  5889  296A  30FF               	movlw	255
  5890  296B  3D3E               	addwfc	(vsnprintf@n+1)^(0+128),w
  5891  296C  00CB               	movwf	((vsnprintf@f+1)^(0+128)+4)
  5892  296D  01C8               	clrf	(vsnprintf@f^(0+128)+2)
  5893  296E  01C9               	clrf	((vsnprintf@f+1)^(0+128)+2)
  5894  296F  2978               	goto	l7359
  5895  2970                     l7357:	
  5896  2970  3001               	movlw	1
  5897  2971  00CA               	movwf	(vsnprintf@f^(0+128)+4)
  5898  2972  3000               	movlw	0
  5899  2973  00CB               	movwf	(vsnprintf@f^(0+128)+5)
  5900  2974  3001               	movlw	1
  5901  2975  00C8               	movwf	(vsnprintf@f^(0+128)+2)
  5902  2976  3000               	movlw	0
  5903  2977  00C9               	movwf	(vsnprintf@f^(0+128)+3)
  5904  2978                     l7359:	
  5905  2978  30C6               	movlw	low vsnprintf@f
  5906  2979  0020               	movlb	0	; select bank0
  5907  297A  00E1               	movwf	vfprintf@fp
  5908  297B  3000               	movlw	high vsnprintf@f
  5909  297C  00E2               	movwf	vfprintf@fp+1
  5910  297D  0021               	movlb	1	; select bank1
  5911  297E  0840               	movf	(vsnprintf@fmt+1)^(0+128),w
  5912  297F  0020               	movlb	0	; select bank0
  5913  2980  00E4               	movwf	vfprintf@fmt+1
  5914  2981  0021               	movlb	1	; select bank1
  5915  2982  083F               	movf	vsnprintf@fmt^(0+128),w
  5916  2983  0020               	movlb	0	; select bank0
  5917  2984  00E3               	movwf	vfprintf@fmt
  5918  2985  0021               	movlb	1	; select bank1
  5919  2986  0841               	movf	vsnprintf@ap^(0+128),w
  5920  2987  0020               	movlb	0	; select bank0
  5921  2988  00EA               	movwf	??_vsnprintf
  5922  2989  086A               	movf	??_vsnprintf,w
  5923  298A  00E5               	movwf	vfprintf@ap
  5924  298B  31B3  23D4  31A9   	fcall	_vfprintf
  5925  298E  0020               	movlb	0	; select bank0
  5926  298F  0862               	movf	?_vfprintf+1,w
  5927  2990  0021               	movlb	1	; select bank1
  5928  2991  00C5               	movwf	(vsnprintf@cnt+1)^(0+128)
  5929  2992  0020               	movlb	0	; select bank0
  5930  2993  0861               	movf	?_vfprintf,w
  5931  2994  0021               	movlb	1	; select bank1
  5932  2995  00C4               	movwf	vsnprintf@cnt^(0+128)
  5933  2996  083D               	movf	vsnprintf@n^(0+128),w
  5934  2997  043E               	iorwf	(vsnprintf@n+1)^(0+128),w
  5935  2998  1D03               	btfss	3,2
  5936  2999  1BC5               	btfsc	(vsnprintf@cnt+1)^(0+128),7
  5937  299A  29C1               	goto	l7373
  5938  299B  083D               	movf	vsnprintf@n^(0+128),w
  5939  299C  3EFF               	addlw	255
  5940  299D  0020               	movlb	0	; select bank0
  5941  299E  00EA               	movwf	??_vsnprintf
  5942  299F  30FF               	movlw	255
  5943  29A0  0021               	movlb	1	; select bank1
  5944  29A1  3D3E               	addwfc	(vsnprintf@n+1)^(0+128),w
  5945  29A2  0020               	movlb	0	; select bank0
  5946  29A3  00EB               	movwf	??_vsnprintf+1
  5947  29A4  086B               	movf	??_vsnprintf+1,w
  5948  29A5  0021               	movlb	1	; select bank1
  5949  29A6  0245               	subwf	(vsnprintf@cnt+1)^(0+128),w
  5950  29A7  1D03               	skipz
  5951  29A8  29AD               	goto	u9315
  5952  29A9  0020               	movlb	0	; select bank0
  5953  29AA  086A               	movf	??_vsnprintf,w
  5954  29AB  0021               	movlb	1	; select bank1
  5955  29AC  0244               	subwf	vsnprintf@cnt^(0+128),w
  5956  29AD                     u9315:	
  5957  29AD  1C03               	skipc
  5958  29AE  29B6               	goto	l7369
  5959  29AF  083D               	movf	vsnprintf@n^(0+128),w
  5960  29B0  3EFF               	addlw	255
  5961  29B1  00C2               	movwf	_vsnprintf$1945^(0+128)
  5962  29B2  30FF               	movlw	255
  5963  29B3  3D3E               	addwfc	(vsnprintf@n+1)^(0+128),w
  5964  29B4  00C3               	movwf	(_vsnprintf$1945+1)^(0+128)
  5965  29B5  29BA               	goto	l7371
  5966  29B6                     l7369:	
  5967  29B6  0845               	movf	(vsnprintf@cnt+1)^(0+128),w
  5968  29B7  00C3               	movwf	(_vsnprintf$1945+1)^(0+128)
  5969  29B8  0844               	movf	vsnprintf@cnt^(0+128),w
  5970  29B9  00C2               	movwf	_vsnprintf$1945^(0+128)
  5971  29BA                     l7371:	
  5972  29BA  0842               	movf	_vsnprintf$1945^(0+128),w
  5973  29BB  073B               	addwf	vsnprintf@s^(0+128),w
  5974  29BC  0086               	movwf	6
  5975  29BD  0843               	movf	(_vsnprintf$1945+1)^(0+128),w
  5976  29BE  3D3C               	addwfc	(vsnprintf@s+1)^(0+128),w
  5977  29BF  0087               	movwf	7
  5978  29C0  0181               	clrf	1
  5979  29C1                     l7373:	
  5980  29C1  0845               	movf	(vsnprintf@cnt+1)^(0+128),w
  5981  29C2  00BC               	movwf	(?_vsnprintf+1)^(0+128)
  5982  29C3  0844               	movf	vsnprintf@cnt^(0+128),w
  5983  29C4  00BB               	movwf	?_vsnprintf^(0+128)
  5984  29C5  0008               	return
  5985  29C6                     __end_of_vsnprintf:	
  5986                           
  5987                           	psect	text6
  5988  33D4                     __ptext6:	
  5989 ;; *************** function _vfprintf *****************
  5990 ;; Defined at:
  5991 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5992 ;; Parameters:    Size  Location     Type
  5993 ;;  fp              2   65[BANK0 ] PTR struct _IO_FILE
  5994 ;;		 -> vsnprintf@f(6), 
  5995 ;;  fmt             2   67[BANK0 ] PTR const unsigned char 
  5996 ;;		 -> STR_22(18), STR_21(18), STR_20(19), STR_19(20), 
  5997 ;;		 -> STR_18(20), STR_17(21), STR_16(21), STR_15(21), 
  5998 ;;		 -> STR_14(22), STR_13(22), STR_12(21), STR_11(21), 
  5999 ;;		 -> STR_8(20), STR_7(16), STR_6(16), STR_5(3), 
  6000 ;;		 -> STR_4(4), STR_3(4), STR_2(4), STR_1(40), 
  6001 ;;  ap              1   69[BANK0 ] PTR PTR void 
  6002 ;;		 -> snprintf@ap(1), 
  6003 ;; Auto vars:     Size  Location     Type
  6004 ;;  cfmt            2   72[BANK0 ] PTR unsigned char 
  6005 ;;		 -> STR_22(18), STR_21(18), STR_20(19), STR_19(20), 
  6006 ;;		 -> STR_18(20), STR_17(21), STR_16(21), STR_15(21), 
  6007 ;;		 -> STR_14(22), STR_13(22), STR_12(21), STR_11(21), 
  6008 ;;		 -> STR_8(20), STR_7(16), STR_6(16), STR_5(3), 
  6009 ;;		 -> STR_4(4), STR_3(4), STR_2(4), STR_1(40), 
  6010 ;; Return value:  Size  Location     Type
  6011 ;;                  2   65[BANK0 ] int 
  6012 ;; Registers used:
  6013 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6014 ;; Tracked objects:
  6015 ;;		On entry : 0/0
  6016 ;;		On exit  : 0/0
  6017 ;;		Unchanged: 0/0
  6018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6019 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6020 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6021 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6022 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6023 ;;Total ram usage:        9 bytes
  6024 ;; Hardware stack levels used:    1
  6025 ;; Hardware stack levels required when called:    7
  6026 ;; This function calls:
  6027 ;;		_vfpfcnvrt
  6028 ;; This function is called by:
  6029 ;;		_vsnprintf
  6030 ;; This function uses a non-reentrant model
  6031 ;;
  6032                           
  6033                           
  6034                           ;psect for function _vfprintf
  6035  33D4                     _vfprintf:	
  6036                           
  6037                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  6038                           
  6039                           ;incstack = 0
  6040                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6041  33D4  0020               	movlb	0	; select bank0
  6042  33D5  0864               	movf	vfprintf@fmt+1,w
  6043  33D6  00E9               	movwf	vfprintf@cfmt+1
  6044  33D7  0863               	movf	vfprintf@fmt,w
  6045  33D8  00E8               	movwf	vfprintf@cfmt
  6046                           
  6047                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  6048  33D9  0023               	movlb	3	; select bank3
  6049  33DA  01CA               	clrf	_nout^(0+384)
  6050  33DB  01CB               	clrf	(_nout+1)^(0+384)
  6051  33DC                     l7257:	
  6052                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  6053                           
  6054                           
  6055                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  6056  33DC  0020               	movlb	0	; select bank0
  6057  33DD  0868               	movf	vfprintf@cfmt,w
  6058  33DE  0084               	movwf	4
  6059  33DF  0869               	movf	vfprintf@cfmt+1,w
  6060  33E0  0085               	movwf	5
  6061  33E1  0012               	moviw fsr0++
  6062  33E2  1903               	btfsc	3,2
  6063  33E3  2BFC               	goto	l7259
  6064                           
  6065                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  6066  33E4  0862               	movf	vfprintf@fp+1,w
  6067  33E5  00D8               	movwf	vfpfcnvrt@fp+1
  6068  33E6  0861               	movf	vfprintf@fp,w
  6069  33E7  00D7               	movwf	vfpfcnvrt@fp
  6070  33E8  3068               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  6071  33E9  00E6               	movwf	??_vfprintf
  6072  33EA  0866               	movf	??_vfprintf,w
  6073  33EB  00D9               	movwf	vfpfcnvrt@fmt
  6074  33EC  0865               	movf	vfprintf@ap,w
  6075  33ED  00E7               	movwf	??_vfprintf+1
  6076  33EE  0867               	movf	??_vfprintf+1,w
  6077  33EF  00DA               	movwf	vfpfcnvrt@ap
  6078  33F0  319E  265C  31B3   	fcall	_vfpfcnvrt
  6079  33F3  0020               	movlb	0	; select bank0
  6080  33F4  0857               	movf	?_vfpfcnvrt,w
  6081  33F5  0023               	movlb	3	; select bank3
  6082  33F6  07CA               	addwf	_nout^(0+384),f
  6083  33F7  0020               	movlb	0	; select bank0
  6084  33F8  0858               	movf	?_vfpfcnvrt+1,w
  6085  33F9  0023               	movlb	3	; select bank3
  6086  33FA  3DCB               	addwfc	(_nout+1)^(0+384),f
  6087  33FB  2BDC               	goto	l7257
  6088  33FC                     l7259:	
  6089                           
  6090                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  6091  33FC  0023               	movlb	3	; select bank3
  6092  33FD  084B               	movf	(_nout+1)^(0+384),w
  6093  33FE  0020               	movlb	0	; select bank0
  6094  33FF  00E2               	movwf	?_vfprintf+1
  6095  3400  0023               	movlb	3	; select bank3
  6096  3401  084A               	movf	_nout^(0+384),w
  6097  3402  0020               	movlb	0	; select bank0
  6098  3403  00E1               	movwf	?_vfprintf
  6099  3404  0008               	return
  6100  3405                     __end_of_vfprintf:	
  6101                           
  6102                           	psect	text7
  6103  1E5C                     __ptext7:	
  6104 ;; *************** function _vfpfcnvrt *****************
  6105 ;; Defined at:
  6106 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6107 ;; Parameters:    Size  Location     Type
  6108 ;;  fp              2   55[BANK0 ] PTR struct _IO_FILE
  6109 ;;		 -> vsnprintf@f(6), 
  6110 ;;  fmt             1   57[BANK0 ] PTR PTR unsigned char 
  6111 ;;		 -> vfprintf@cfmt(2), 
  6112 ;;  ap              1   58[BANK0 ] PTR PTR void 
  6113 ;;		 -> snprintf@ap(1), 
  6114 ;; Auto vars:     Size  Location     Type
  6115 ;;  llu             8   19[BANK1 ] unsigned long long 
  6116 ;;  ll              8    8[BANK1 ] long long 
  6117 ;;  f               4    0        long long 
  6118 ;;  ct              3    0        unsigned char [3]
  6119 ;;  vp              2   16[BANK1 ] PTR void 
  6120 ;;		 -> ?_snprintf(2), sp__logf(4), adcGain(2), 
  6121 ;;  done            2    2[BANK1 ] int 
  6122 ;;  cp              2    0[BANK1 ] PTR unsigned char 
  6123 ;;		 -> ?_snprintf(2), sp__logf(4), adcGain(2), 
  6124 ;;  i               2    0        int 
  6125 ;;  c               1   18[BANK1 ] unsigned char 
  6126 ;; Return value:  Size  Location     Type
  6127 ;;                  2   55[BANK0 ] int 
  6128 ;; Registers used:
  6129 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6130 ;; Tracked objects:
  6131 ;;		On entry : 0/0
  6132 ;;		On exit  : 0/0
  6133 ;;		Unchanged: 0/0
  6134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6135 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6136 ;;      Locals:         0       0      27       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6137 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6138 ;;      Totals:         0      10      27       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6139 ;;Total ram usage:       37 bytes
  6140 ;; Hardware stack levels used:    1
  6141 ;; Hardware stack levels required when called:    6
  6142 ;; This function calls:
  6143 ;;		_atoi
  6144 ;;		_ctoa
  6145 ;;		_dtoa
  6146 ;;		_fputc
  6147 ;;		_isdigit
  6148 ;;		_otoa
  6149 ;;		_stoa
  6150 ;;		_strncmp
  6151 ;;		_utoa
  6152 ;;		_xtoa
  6153 ;; This function is called by:
  6154 ;;		_vfprintf
  6155 ;; This function uses a non-reentrant model
  6156 ;;
  6157                           
  6158                           
  6159                           ;psect for function _vfpfcnvrt
  6160  1E5C                     _vfpfcnvrt:	
  6161                           
  6162                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  6163                           
  6164                           ;incstack = 0
  6165                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6166  1E5C  0020               	movlb	0	; select bank0
  6167  1E5D  0859               	movf	vfpfcnvrt@fmt,w
  6168  1E5E  0086               	movwf	6
  6169  1E5F  0187               	clrf	7
  6170  1E60  3F40               	moviw [0]fsr1
  6171  1E61  00DB               	movwf	??_vfpfcnvrt
  6172  1E62  3F41               	moviw [1]fsr1
  6173  1E63  00DC               	movwf	??_vfpfcnvrt+1
  6174  1E64  085B               	movf	??_vfpfcnvrt,w
  6175  1E65  0084               	movwf	4
  6176  1E66  085C               	movf	??_vfpfcnvrt+1,w
  6177  1E67  0085               	movwf	5
  6178  1E68  0012               	moviw fsr0++
  6179  1E69  3A25               	xorlw	37
  6180  1E6A  1D03               	btfss	3,2
  6181  1E6B  2FFE               	goto	L7
  6182                           
  6183                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  6184  1E6C  0859               	movf	vfpfcnvrt@fmt,w
  6185  1E6D  0086               	movwf	6
  6186  1E6E  0187               	clrf	7
  6187  1E6F  3001               	movlw	1
  6188  1E70  0781               	addwf	1,f
  6189  1E71  3141               	addfsr 1,1
  6190  1E72  1803               	skipnc
  6191  1E73  0A81               	incf	1,f
  6192                           
  6193                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  6194  1E74  0022               	movlb	2	; select bank2
  6195  1E75  01E6               	clrf	_width^(0+256)
  6196  1E76  01E7               	clrf	(_width+1)^(0+256)
  6197  1E77  01EA               	clrf	_flags^(0+256)
  6198  1E78  01EB               	clrf	(_flags+1)^(0+256)
  6199                           
  6200                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  6201  1E79  30FF               	movlw	255
  6202  1E7A  00E8               	movwf	_prec^(0+256)
  6203  1E7B  30FF               	movlw	255
  6204  1E7C  00E9               	movwf	(_prec^(0+256)+1)
  6205                           
  6206                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  6207  1E7D  0021               	movlb	1	; select bank1
  6208  1E7E  01A2               	clrf	vfpfcnvrt@done^(0+128)
  6209  1E7F  01A3               	clrf	(vfpfcnvrt@done+1)^(0+128)
  6210                           
  6211                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  6212  1E80  2E9E               	goto	l6893
  6213  1E81                     l923:	
  6214                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 691:       
      +                                    case '-' :
  6215                           
  6216                           
  6217                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  6218  1E81  0022               	movlb	2	; select bank2
  6219  1E82  146A               	bsf	_flags^(0+256),0
  6220  1E83                     l6877:	
  6221                           
  6222                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  6223  1E83  0020               	movlb	0	; select bank0
  6224  1E84  0859               	movf	vfpfcnvrt@fmt,w
  6225  1E85  0086               	movwf	6
  6226  1E86  0187               	clrf	7
  6227  1E87  3001               	movlw	1
  6228  1E88  0781               	addwf	1,f
  6229  1E89  3141               	addfsr 1,1
  6230  1E8A  1803               	skipnc
  6231  1E8B  0A81               	incf	1,f
  6232                           
  6233                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  6234  1E8C  2E9E               	goto	l6893
  6235  1E8D                     l925:	
  6236                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 695:       
      +                                    case '0' :
  6237                           
  6238                           
  6239                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  6240  1E8D  0022               	movlb	2	; select bank2
  6241  1E8E  14EA               	bsf	_flags^(0+256),1
  6242  1E8F  2E83               	goto	l6877
  6243  1E90                     l926:	
  6244                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 699:       
      +                                    case '+' :
  6245                           
  6246                           
  6247                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  6248  1E90  0022               	movlb	2	; select bank2
  6249  1E91  156A               	bsf	_flags^(0+256),2
  6250  1E92  2E83               	goto	l6877
  6251  1E93                     l927:	
  6252                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 703:       
      +                                    case ' ' :
  6253                           
  6254                           
  6255                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  6256  1E93  0022               	movlb	2	; select bank2
  6257  1E94  15EA               	bsf	_flags^(0+256),3
  6258  1E95  2E83               	goto	l6877
  6259  1E96                     l928:	
  6260                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 707:       
      +                                    case '#' :
  6261                           
  6262                           
  6263                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  6264  1E96  0022               	movlb	2	; select bank2
  6265  1E97  166A               	bsf	_flags^(0+256),4
  6266  1E98  2E83               	goto	l6877
  6267  1E99                     l6887:	
  6268                           
  6269                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  6270  1E99  3001               	movlw	1
  6271  1E9A  0021               	movlb	1	; select bank1
  6272  1E9B  00A2               	movwf	vfpfcnvrt@done^(0+128)
  6273  1E9C  3000               	movlw	0
  6274  1E9D  00A3               	movwf	(vfpfcnvrt@done^(0+128)+1)
  6275  1E9E                     l6893:	
  6276                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  6277                           
  6278                           
  6279                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  6280  1E9E  0021               	movlb	1	; select bank1
  6281  1E9F  0822               	movf	vfpfcnvrt@done^(0+128),w
  6282  1EA0  0423               	iorwf	(vfpfcnvrt@done+1)^(0+128),w
  6283  1EA1  1D03               	btfss	3,2
  6284  1EA2  2EC9               	goto	l930
  6285  1EA3  0020               	movlb	0	; select bank0
  6286  1EA4  0859               	movf	vfpfcnvrt@fmt,w
  6287  1EA5  0086               	movwf	6
  6288  1EA6  0187               	clrf	7
  6289  1EA7  3F40               	moviw [0]fsr1
  6290  1EA8  00DB               	movwf	??_vfpfcnvrt
  6291  1EA9  3F41               	moviw [1]fsr1
  6292  1EAA  00DC               	movwf	??_vfpfcnvrt+1
  6293  1EAB  085B               	movf	??_vfpfcnvrt,w
  6294  1EAC  0084               	movwf	4
  6295  1EAD  085C               	movf	??_vfpfcnvrt+1,w
  6296  1EAE  0085               	movwf	5
  6297  1EAF  0800               	movf	0,w	;code access
  6298  1EB0  00DD               	movwf	??_vfpfcnvrt+2
  6299  1EB1  01DE               	clrf	??_vfpfcnvrt+3
  6300                           
  6301                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6302                           ; Switch size 1, requested type "simple"
  6303                           ; Number of cases is 1, Range of values is 0 to 0
  6304                           ; switch strategies available:
  6305                           ; Name         Instructions Cycles
  6306                           ; simple_byte            4     3 (average)
  6307                           ; direct_byte            8     6 (fixed)
  6308                           ; jumptable            260     6 (fixed)
  6309                           ;	Chosen strategy is simple_byte
  6310  1EB2  085E               	movf	??_vfpfcnvrt+3,w
  6311  1EB3  3A00               	xorlw	0	; case 0
  6312  1EB4  1903               	skipnz
  6313  1EB5  2EB7               	goto	l7961
  6314  1EB6  2E99               	goto	l6887
  6315  1EB7                     l7961:	
  6316                           
  6317                           ; Switch size 1, requested type "simple"
  6318                           ; Number of cases is 5, Range of values is 32 to 48
  6319                           ; switch strategies available:
  6320                           ; Name         Instructions Cycles
  6321                           ; simple_byte           16     9 (average)
  6322                           ; direct_byte           43     9 (fixed)
  6323                           ; jumptable            263     9 (fixed)
  6324                           ;	Chosen strategy is simple_byte
  6325  1EB7  085D               	movf	??_vfpfcnvrt+2,w
  6326  1EB8  3A20               	xorlw	32	; case 32
  6327  1EB9  1903               	skipnz
  6328  1EBA  2E93               	goto	l927
  6329  1EBB  3A03               	xorlw	3	; case 35
  6330  1EBC  1903               	skipnz
  6331  1EBD  2E96               	goto	l928
  6332  1EBE  3A08               	xorlw	8	; case 43
  6333  1EBF  1903               	skipnz
  6334  1EC0  2E90               	goto	l926
  6335  1EC1  3A06               	xorlw	6	; case 45
  6336  1EC2  1903               	skipnz
  6337  1EC3  2E81               	goto	l923
  6338  1EC4  3A1D               	xorlw	29	; case 48
  6339  1EC5  1903               	skipnz
  6340  1EC6  2E8D               	goto	l925
  6341  1EC7  2E99               	goto	l6887
  6342  1EC8  2E9E               	goto	l6893
  6343  1EC9                     l930:	
  6344                           
  6345                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  6346  1EC9  0022               	movlb	2	; select bank2
  6347  1ECA  1C6A               	btfss	_flags^(0+256),0
  6348  1ECB  2ED0               	goto	l6897
  6349                           
  6350                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  6351  1ECC  30FD               	movlw	253
  6352  1ECD  05EA               	andwf	_flags^(0+256),f
  6353  1ECE  30FF               	movlw	255
  6354  1ECF  05EB               	andwf	(_flags+1)^(0+256),f
  6355  1ED0                     l6897:	
  6356                           
  6357                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  6358  1ED0  0020               	movlb	0	; select bank0
  6359  1ED1  0859               	movf	vfpfcnvrt@fmt,w
  6360  1ED2  0086               	movwf	6
  6361  1ED3  0187               	clrf	7
  6362  1ED4  3F40               	moviw [0]fsr1
  6363  1ED5  00DB               	movwf	??_vfpfcnvrt
  6364  1ED6  3F41               	moviw [1]fsr1
  6365  1ED7  00DC               	movwf	??_vfpfcnvrt+1
  6366  1ED8  085B               	movf	??_vfpfcnvrt,w
  6367  1ED9  0084               	movwf	4
  6368  1EDA  085C               	movf	??_vfpfcnvrt+1,w
  6369  1EDB  0085               	movwf	5
  6370  1EDC  0012               	moviw fsr0++
  6371  1EDD  3A2A               	xorlw	42
  6372  1EDE  1D03               	btfss	3,2
  6373  1EDF  2EFE               	goto	l6909
  6374                           
  6375                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  6376  1EE0  0859               	movf	vfpfcnvrt@fmt,w
  6377  1EE1  0086               	movwf	6
  6378  1EE2  0187               	clrf	7
  6379  1EE3  3001               	movlw	1
  6380  1EE4  0781               	addwf	1,f
  6381  1EE5  3141               	addfsr 1,1
  6382  1EE6  1803               	skipnc
  6383  1EE7  0A81               	incf	1,f
  6384                           
  6385                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  6386  1EE8  085A               	movf	vfpfcnvrt@ap,w
  6387  1EE9  0086               	movwf	6
  6388  1EEA  0187               	clrf	7
  6389  1EEB  0801               	movf	1,w
  6390  1EEC  0084               	movwf	4
  6391  1EED  0185               	clrf	5
  6392  1EEE  3002               	movlw	2
  6393  1EEF  0781               	addwf	1,f
  6394  1EF0  3F00               	moviw [0]fsr0
  6395  1EF1  0022               	movlb	2	; select bank2
  6396  1EF2  00E6               	movwf	_width^(0+256)
  6397  1EF3  3F01               	moviw [1]fsr0
  6398  1EF4  00E7               	movwf	(_width+1)^(0+256)
  6399                           
  6400                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  6401  1EF5  1FE7               	btfss	(_width+1)^(0+256),7
  6402  1EF6  2F41               	goto	l6919
  6403                           
  6404                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  6405  1EF7  146A               	bsf	_flags^(0+256),0
  6406                           
  6407                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  6408  1EF8  09E6               	comf	_width^(0+256),f
  6409  1EF9  09E7               	comf	(_width+1)^(0+256),f
  6410  1EFA  0AE6               	incf	_width^(0+256),f
  6411  1EFB  1903               	skipnz
  6412  1EFC  0AE7               	incf	(_width+1)^(0+256),f
  6413  1EFD  2F41               	goto	l6919
  6414  1EFE                     l6909:	
  6415                           
  6416                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  6417  1EFE  0859               	movf	vfpfcnvrt@fmt,w
  6418  1EFF  0086               	movwf	6
  6419  1F00  0187               	clrf	7
  6420  1F01  3F40               	moviw [0]fsr1
  6421  1F02  00F7               	movwf	atoi@s
  6422  1F03  3F41               	moviw [1]fsr1
  6423  1F04  00F8               	movwf	atoi@s+1
  6424  1F05  31AA  22DE  319E   	fcall	_atoi
  6425  1F08  0878               	movf	?_atoi+1,w
  6426  1F09  0022               	movlb	2	; select bank2
  6427  1F0A  00E7               	movwf	(_width+1)^(0+256)
  6428  1F0B  0877               	movf	?_atoi,w
  6429  1F0C  00E6               	movwf	_width^(0+256)
  6430                           
  6431                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6432  1F0D  2F17               	goto	l6913
  6433  1F0E                     l6911:	
  6434                           
  6435                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  6436  1F0E  0020               	movlb	0	; select bank0
  6437  1F0F  0859               	movf	vfpfcnvrt@fmt,w
  6438  1F10  0086               	movwf	6
  6439  1F11  0187               	clrf	7
  6440  1F12  3001               	movlw	1
  6441  1F13  0781               	addwf	1,f
  6442  1F14  3141               	addfsr 1,1
  6443  1F15  1803               	skipnc
  6444  1F16  0A81               	incf	1,f
  6445  1F17                     l6913:	
  6446  1F17  0020               	movlb	0	; select bank0
  6447  1F18  0859               	movf	vfpfcnvrt@fmt,w
  6448  1F19  0086               	movwf	6
  6449  1F1A  0187               	clrf	7
  6450  1F1B  3F40               	moviw [0]fsr1
  6451  1F1C  00DB               	movwf	??_vfpfcnvrt
  6452  1F1D  3F41               	moviw [1]fsr1
  6453  1F1E  00DC               	movwf	??_vfpfcnvrt+1
  6454  1F1F  085B               	movf	??_vfpfcnvrt,w
  6455  1F20  0084               	movwf	4
  6456  1F21  085C               	movf	??_vfpfcnvrt+1,w
  6457  1F22  0085               	movwf	5
  6458  1F23  0800               	movf	0,w	;code access
  6459  1F24  3ED0               	addlw	208
  6460  1F25  00DD               	movwf	??_vfpfcnvrt+2
  6461  1F26  30FF               	movlw	255
  6462  1F27  1803               	skipnc
  6463  1F28  3000               	movlw	0
  6464  1F29  00DE               	movwf	??_vfpfcnvrt+3
  6465  1F2A  3000               	movlw	0
  6466  1F2B  025E               	subwf	??_vfpfcnvrt+3,w
  6467  1F2C  300A               	movlw	10
  6468  1F2D  1903               	skipnz
  6469  1F2E  025D               	subwf	??_vfpfcnvrt+2,w
  6470  1F2F  1803               	btfsc	3,0
  6471  1F30  2F33               	goto	u8660
  6472  1F31  3001               	movlw	1
  6473  1F32  2F34               	goto	u8670
  6474  1F33                     u8660:	
  6475  1F33  3000               	movlw	0
  6476  1F34                     u8670:	
  6477  1F34  00DF               	movwf	??_vfpfcnvrt+4
  6478  1F35  01E0               	clrf	??_vfpfcnvrt+5
  6479  1F36  085F               	movf	??_vfpfcnvrt+4,w
  6480  1F37  0021               	movlb	1	; select bank1
  6481  1F38  00A4               	movwf	_vfpfcnvrt$1373^(0+128)
  6482  1F39  0020               	movlb	0	; select bank0
  6483  1F3A  0860               	movf	??_vfpfcnvrt+5,w
  6484  1F3B  0021               	movlb	1	; select bank1
  6485  1F3C  00A5               	movwf	(_vfpfcnvrt$1373+1)^(0+128)
  6486  1F3D  0824               	movf	_vfpfcnvrt$1373^(0+128),w
  6487  1F3E  0425               	iorwf	(_vfpfcnvrt$1373+1)^(0+128),w
  6488  1F3F  1D03               	btfss	3,2
  6489  1F40  2F0E               	goto	l6911
  6490  1F41                     l6919:	
  6491                           
  6492                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  6493  1F41  0020               	movlb	0	; select bank0
  6494  1F42  0859               	movf	vfpfcnvrt@fmt,w
  6495  1F43  0086               	movwf	6
  6496  1F44  0187               	clrf	7
  6497  1F45  3F40               	moviw [0]fsr1
  6498  1F46  00DB               	movwf	??_vfpfcnvrt
  6499  1F47  3F41               	moviw [1]fsr1
  6500  1F48  00DC               	movwf	??_vfpfcnvrt+1
  6501  1F49  085B               	movf	??_vfpfcnvrt,w
  6502  1F4A  0084               	movwf	4
  6503  1F4B  085C               	movf	??_vfpfcnvrt+1,w
  6504  1F4C  0085               	movwf	5
  6505  1F4D  0012               	moviw fsr0++
  6506  1F4E  3A2E               	xorlw	46
  6507  1F4F  1D03               	btfss	3,2
  6508  1F50  2FC5               	goto	l6941
  6509                           
  6510                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  6511  1F51  0022               	movlb	2	; select bank2
  6512  1F52  01E8               	clrf	_prec^(0+256)
  6513  1F53  01E9               	clrf	(_prec+1)^(0+256)
  6514                           
  6515                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  6516  1F54  0020               	movlb	0	; select bank0
  6517  1F55  0859               	movf	vfpfcnvrt@fmt,w
  6518  1F56  0086               	movwf	6
  6519  1F57  0187               	clrf	7
  6520  1F58  3001               	movlw	1
  6521  1F59  0781               	addwf	1,f
  6522  1F5A  3141               	addfsr 1,1
  6523  1F5B  1803               	skipnc
  6524  1F5C  0A81               	incf	1,f
  6525                           
  6526                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  6527  1F5D  0859               	movf	vfpfcnvrt@fmt,w
  6528  1F5E  0086               	movwf	6
  6529  1F5F  0187               	clrf	7
  6530  1F60  3F40               	moviw [0]fsr1
  6531  1F61  00DB               	movwf	??_vfpfcnvrt
  6532  1F62  3F41               	moviw [1]fsr1
  6533  1F63  00DC               	movwf	??_vfpfcnvrt+1
  6534  1F64  085B               	movf	??_vfpfcnvrt,w
  6535  1F65  0084               	movwf	4
  6536  1F66  085C               	movf	??_vfpfcnvrt+1,w
  6537  1F67  0085               	movwf	5
  6538  1F68  0012               	moviw fsr0++
  6539  1F69  3A2A               	xorlw	42
  6540  1F6A  1D03               	btfss	3,2
  6541  1F6B  2F82               	goto	l6931
  6542                           
  6543                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  6544  1F6C  0859               	movf	vfpfcnvrt@fmt,w
  6545  1F6D  0086               	movwf	6
  6546  1F6E  0187               	clrf	7
  6547  1F6F  3001               	movlw	1
  6548  1F70  0781               	addwf	1,f
  6549  1F71  3141               	addfsr 1,1
  6550  1F72  1803               	skipnc
  6551  1F73  0A81               	incf	1,f
  6552                           
  6553                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  6554  1F74  085A               	movf	vfpfcnvrt@ap,w
  6555  1F75  0086               	movwf	6
  6556  1F76  0187               	clrf	7
  6557  1F77  0801               	movf	1,w
  6558  1F78  0084               	movwf	4
  6559  1F79  0185               	clrf	5
  6560  1F7A  3002               	movlw	2
  6561  1F7B  0781               	addwf	1,f
  6562  1F7C  3F00               	moviw [0]fsr0
  6563  1F7D  0022               	movlb	2	; select bank2
  6564  1F7E  00E8               	movwf	_prec^(0+256)
  6565  1F7F  3F01               	moviw [1]fsr0
  6566  1F80  00E9               	movwf	(_prec+1)^(0+256)
  6567                           
  6568                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  6569  1F81  2FC5               	goto	l6941
  6570  1F82                     l6931:	
  6571                           
  6572                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  6573  1F82  0859               	movf	vfpfcnvrt@fmt,w
  6574  1F83  0086               	movwf	6
  6575  1F84  0187               	clrf	7
  6576  1F85  3F40               	moviw [0]fsr1
  6577  1F86  00F7               	movwf	atoi@s
  6578  1F87  3F41               	moviw [1]fsr1
  6579  1F88  00F8               	movwf	atoi@s+1
  6580  1F89  31AA  22DE  319E   	fcall	_atoi
  6581  1F8C  0878               	movf	?_atoi+1,w
  6582  1F8D  0022               	movlb	2	; select bank2
  6583  1F8E  00E9               	movwf	(_prec+1)^(0+256)
  6584  1F8F  0877               	movf	?_atoi,w
  6585  1F90  00E8               	movwf	_prec^(0+256)
  6586                           
  6587                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6588  1F91  2F9B               	goto	l6935
  6589  1F92                     l6933:	
  6590                           
  6591                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  6592  1F92  0020               	movlb	0	; select bank0
  6593  1F93  0859               	movf	vfpfcnvrt@fmt,w
  6594  1F94  0086               	movwf	6
  6595  1F95  0187               	clrf	7
  6596  1F96  3001               	movlw	1
  6597  1F97  0781               	addwf	1,f
  6598  1F98  3141               	addfsr 1,1
  6599  1F99  1803               	skipnc
  6600  1F9A  0A81               	incf	1,f
  6601  1F9B                     l6935:	
  6602  1F9B  0020               	movlb	0	; select bank0
  6603  1F9C  0859               	movf	vfpfcnvrt@fmt,w
  6604  1F9D  0086               	movwf	6
  6605  1F9E  0187               	clrf	7
  6606  1F9F  3F40               	moviw [0]fsr1
  6607  1FA0  00DB               	movwf	??_vfpfcnvrt
  6608  1FA1  3F41               	moviw [1]fsr1
  6609  1FA2  00DC               	movwf	??_vfpfcnvrt+1
  6610  1FA3  085B               	movf	??_vfpfcnvrt,w
  6611  1FA4  0084               	movwf	4
  6612  1FA5  085C               	movf	??_vfpfcnvrt+1,w
  6613  1FA6  0085               	movwf	5
  6614  1FA7  0800               	movf	0,w	;code access
  6615  1FA8  3ED0               	addlw	208
  6616  1FA9  00DD               	movwf	??_vfpfcnvrt+2
  6617  1FAA  30FF               	movlw	255
  6618  1FAB  1803               	skipnc
  6619  1FAC  3000               	movlw	0
  6620  1FAD  00DE               	movwf	??_vfpfcnvrt+3
  6621  1FAE  3000               	movlw	0
  6622  1FAF  025E               	subwf	??_vfpfcnvrt+3,w
  6623  1FB0  300A               	movlw	10
  6624  1FB1  1903               	skipnz
  6625  1FB2  025D               	subwf	??_vfpfcnvrt+2,w
  6626  1FB3  1803               	btfsc	3,0
  6627  1FB4  2FB7               	goto	u8710
  6628  1FB5  3001               	movlw	1
  6629  1FB6  2FB8               	goto	u8720
  6630  1FB7                     u8710:	
  6631  1FB7  3000               	movlw	0
  6632  1FB8                     u8720:	
  6633  1FB8  00DF               	movwf	??_vfpfcnvrt+4
  6634  1FB9  01E0               	clrf	??_vfpfcnvrt+5
  6635  1FBA  085F               	movf	??_vfpfcnvrt+4,w
  6636  1FBB  0021               	movlb	1	; select bank1
  6637  1FBC  00A6               	movwf	_vfpfcnvrt$1374^(0+128)
  6638  1FBD  0020               	movlb	0	; select bank0
  6639  1FBE  0860               	movf	??_vfpfcnvrt+5,w
  6640  1FBF  0021               	movlb	1	; select bank1
  6641  1FC0  00A7               	movwf	(_vfpfcnvrt$1374+1)^(0+128)
  6642  1FC1  0826               	movf	_vfpfcnvrt$1374^(0+128),w
  6643  1FC2  0427               	iorwf	(_vfpfcnvrt$1374+1)^(0+128),w
  6644  1FC3  1D03               	btfss	3,2
  6645  1FC4  2F92               	goto	l6933
  6646  1FC5                     l6941:	
  6647                           
  6648                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  6649  1FC5  0020               	movlb	0	; select bank0
  6650  1FC6  0859               	movf	vfpfcnvrt@fmt,w
  6651  1FC7  0086               	movwf	6
  6652  1FC8  0187               	clrf	7
  6653  1FC9  3F40               	moviw [0]fsr1
  6654  1FCA  00DB               	movwf	??_vfpfcnvrt
  6655  1FCB  3F41               	moviw [1]fsr1
  6656  1FCC  00DC               	movwf	??_vfpfcnvrt+1
  6657  1FCD  085B               	movf	??_vfpfcnvrt,w
  6658  1FCE  0084               	movwf	4
  6659  1FCF  085C               	movf	??_vfpfcnvrt+1,w
  6660  1FD0  0085               	movwf	5
  6661  1FD1  0012               	moviw fsr0++
  6662  1FD2  3A63               	xorlw	99
  6663  1FD3  31A4  1D03         	btfss	3,2
  6664  1FD5  2CD9               	goto	l6951
  6665                           
  6666                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  6667  1FD6  0859               	movf	vfpfcnvrt@fmt,w
  6668  1FD7  0086               	movwf	6
  6669  1FD8  0187               	clrf	7
  6670  1FD9  3001               	movlw	1
  6671  1FDA  0781               	addwf	1,f
  6672  1FDB  3141               	addfsr 1,1
  6673  1FDC  1803               	skipnc
  6674  1FDD  0A81               	incf	1,f
  6675                           
  6676                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6677  1FDE  085A               	movf	vfpfcnvrt@ap,w
  6678  1FDF  0086               	movwf	6
  6679  1FE0  0187               	clrf	7
  6680  1FE1  0801               	movf	1,w
  6681  1FE2  0084               	movwf	4
  6682  1FE3  0185               	clrf	5
  6683  1FE4  3002               	movlw	2
  6684  1FE5  0781               	addwf	1,f
  6685  1FE6  0800               	movf	0,w
  6686  1FE7  00DB               	movwf	??_vfpfcnvrt
  6687  1FE8  085B               	movf	??_vfpfcnvrt,w
  6688  1FE9  0021               	movlb	1	; select bank1
  6689  1FEA  00B2               	movwf	vfpfcnvrt@c^(0+128)
  6690                           
  6691                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  6692  1FEB  0020               	movlb	0	; select bank0
  6693  1FEC  0858               	movf	vfpfcnvrt@fp+1,w
  6694  1FED  00B1               	movwf	ctoa@fp+1
  6695  1FEE  0857               	movf	vfpfcnvrt@fp,w
  6696  1FEF  00B0               	movwf	ctoa@fp
  6697  1FF0  0021               	movlb	1	; select bank1
  6698  1FF1  0832               	movf	vfpfcnvrt@c^(0+128),w
  6699  1FF2  0020               	movlb	0	; select bank0
  6700  1FF3  00DB               	movwf	??_vfpfcnvrt
  6701  1FF4  085B               	movf	??_vfpfcnvrt,w
  6702  1FF5  00B2               	movwf	ctoa@c
  6703  1FF6  31B3  23A3         	fcall	_ctoa
  6704  1FF8  0020               	movlb	0	; select bank0
  6705  1FF9  0831               	movf	?_ctoa+1,w
  6706  1FFA  00D8               	movwf	?_vfpfcnvrt+1
  6707  1FFB  0830               	movf	?_ctoa,w
  6708  1FFC  00D7               	movwf	?_vfpfcnvrt
  6709  1FFD  0008               	return
  6710  1FFE                     L7:	
  6711  1FFE                     L6:	
  6712  1FFE  318F  2FDD         	ljmp	l7219
  6713                           
  6714                           	psect	text8
  6715  1B89                     __ptext8:	
  6716 ;; *************** function _xtoa *****************
  6717 ;; Defined at:
  6718 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6719 ;; Parameters:    Size  Location     Type
  6720 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  6721 ;;		 -> vsnprintf@f(6), 
  6722 ;;  d               8   18[BANK0 ] unsigned long long 
  6723 ;;  x               1   26[BANK0 ] unsigned char 
  6724 ;; Auto vars:     Size  Location     Type
  6725 ;;  n               8   43[BANK0 ] unsigned long long 
  6726 ;;  c               2   53[BANK0 ] int 
  6727 ;;  i               2   51[BANK0 ] int 
  6728 ;;  w               2   41[BANK0 ] int 
  6729 ;;  p               2   39[BANK0 ] int 
  6730 ;; Return value:  Size  Location     Type
  6731 ;;                  2   16[BANK0 ] int 
  6732 ;; Registers used:
  6733 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6734 ;; Tracked objects:
  6735 ;;		On entry : 0/0
  6736 ;;		On exit  : 0/0
  6737 ;;		Unchanged: 0/0
  6738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6739 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6740 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6741 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6742 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6743 ;;Total ram usage:       39 bytes
  6744 ;; Hardware stack levels used:    1
  6745 ;; Hardware stack levels required when called:    5
  6746 ;; This function calls:
  6747 ;;		_isalpha
  6748 ;;		_isupper
  6749 ;;		_pad
  6750 ;;		_toupper
  6751 ;; This function is called by:
  6752 ;;		_vfpfcnvrt
  6753 ;; This function uses a non-reentrant model
  6754 ;;
  6755                           
  6756                           
  6757                           ;psect for function _xtoa
  6758  1B89                     _xtoa:	
  6759                           
  6760                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  6761                           
  6762                           ;incstack = 0
  6763                           ; Regs used in _xtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6764  1B89  0022               	movlb	2	; select bank2
  6765  1B8A  1BE9               	btfsc	(_prec+1)^(0+256),7
  6766  1B8B  2B90               	goto	l889
  6767                           
  6768                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  6769  1B8C  30FD               	movlw	253
  6770  1B8D  05EA               	andwf	_flags^(0+256),f
  6771  1B8E  30FF               	movlw	255
  6772  1B8F  05EB               	andwf	(_flags+1)^(0+256),f
  6773  1B90                     l889:	
  6774                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 631:     }
  6775                           
  6776                           
  6777                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  6778  1B90  0869               	movf	(_prec+1)^(0+256),w
  6779  1B91  3A80               	xorlw	128
  6780  1B92  0020               	movlb	0	; select bank0
  6781  1B93  00BB               	movwf	??_xtoa
  6782  1B94  3080               	movlw	128
  6783  1B95  023B               	subwf	??_xtoa,w
  6784  1B96  1D03               	skipz
  6785  1B97  2B9B               	goto	u8385
  6786  1B98  3001               	movlw	1
  6787  1B99  0022               	movlb	2	; select bank2
  6788  1B9A  0268               	subwf	_prec^(0+256),w
  6789  1B9B                     u8385:	
  6790  1B9B  1803               	skipnc
  6791  1B9C  2BA3               	goto	l6763
  6792  1B9D  3001               	movlw	1
  6793  1B9E  0020               	movlb	0	; select bank0
  6794  1B9F  00C7               	movwf	xtoa@p
  6795  1BA0  3000               	movlw	0
  6796  1BA1  00C8               	movwf	xtoa@p+1
  6797  1BA2  2BAB               	goto	l893
  6798  1BA3                     l6763:	
  6799  1BA3  0022               	movlb	2	; select bank2
  6800  1BA4  0869               	movf	(_prec+1)^(0+256),w
  6801  1BA5  0020               	movlb	0	; select bank0
  6802  1BA6  00C8               	movwf	xtoa@p+1
  6803  1BA7  0022               	movlb	2	; select bank2
  6804  1BA8  0868               	movf	_prec^(0+256),w
  6805  1BA9  0020               	movlb	0	; select bank0
  6806  1BAA  00C7               	movwf	xtoa@p
  6807  1BAB                     l893:	
  6808                           
  6809                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  6810  1BAB  0022               	movlb	2	; select bank2
  6811  1BAC  0867               	movf	(_width+1)^(0+256),w
  6812  1BAD  0020               	movlb	0	; select bank0
  6813  1BAE  00CA               	movwf	xtoa@w+1
  6814  1BAF  0022               	movlb	2	; select bank2
  6815  1BB0  0866               	movf	_width^(0+256),w
  6816  1BB1  0020               	movlb	0	; select bank0
  6817  1BB2  00C9               	movwf	xtoa@w
  6818                           
  6819                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  6820  1BB3  0022               	movlb	2	; select bank2
  6821  1BB4  1E6A               	btfss	_flags^(0+256),4
  6822  1BB5  2BBB               	goto	l6769
  6823                           
  6824                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  6825  1BB6  30FE               	movlw	254
  6826  1BB7  0020               	movlb	0	; select bank0
  6827  1BB8  07C9               	addwf	xtoa@w,f
  6828  1BB9  30FF               	movlw	255
  6829  1BBA  3DCA               	addwfc	xtoa@w+1,f
  6830  1BBB                     l6769:	
  6831                           
  6832                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  6833  1BBB  0020               	movlb	0	; select bank0
  6834  1BBC  0832               	movf	xtoa@d,w
  6835  1BBD  00CB               	movwf	xtoa@n
  6836  1BBE  0833               	movf	xtoa@d+1,w
  6837  1BBF  00CC               	movwf	xtoa@n+1
  6838  1BC0  0834               	movf	xtoa@d+2,w
  6839  1BC1  00CD               	movwf	xtoa@n+2
  6840  1BC2  0835               	movf	xtoa@d+3,w
  6841  1BC3  00CE               	movwf	xtoa@n+3
  6842  1BC4  0836               	movf	xtoa@d+4,w
  6843  1BC5  00CF               	movwf	xtoa@n+4
  6844  1BC6  0837               	movf	xtoa@d+5,w
  6845  1BC7  00D0               	movwf	xtoa@n+5
  6846  1BC8  0838               	movf	xtoa@d+6,w
  6847  1BC9  00D1               	movwf	xtoa@n+6
  6848  1BCA  0839               	movf	xtoa@d+7,w
  6849  1BCB  00D2               	movwf	xtoa@n+7
  6850                           
  6851                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  6852  1BCC  301F               	movlw	31
  6853  1BCD  00D3               	movwf	xtoa@i
  6854  1BCE  3000               	movlw	0
  6855  1BCF  00D4               	movwf	xtoa@i+1
  6856                           
  6857                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  6858  1BD0  0024               	movlb	4	; select bank4
  6859  1BD1  01C9               	clrf	(_dbuf^(0+512)+31)
  6860                           
  6861                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6862  1BD2  2C7D               	goto	l6801
  6863  1BD3                     l6773:	
  6864                           
  6865                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  6866  1BD3  30FF               	movlw	255
  6867  1BD4  0020               	movlb	0	; select bank0
  6868  1BD5  07D3               	addwf	xtoa@i,f
  6869  1BD6  30FF               	movlw	255
  6870  1BD7  3DD4               	addwfc	xtoa@i+1,f
  6871                           
  6872                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  6873  1BD8  300F               	movlw	15
  6874  1BD9  054B               	andwf	xtoa@n,w
  6875  1BDA  00D5               	movwf	xtoa@c
  6876  1BDB  3000               	movlw	0
  6877  1BDC  054C               	andwf	xtoa@n+1,w
  6878  1BDD  00D6               	movwf	xtoa@c+1
  6879                           
  6880                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  6881  1BDE  0856               	movf	xtoa@c+1,w
  6882  1BDF  3A80               	xorlw	128
  6883  1BE0  00BB               	movwf	??_xtoa
  6884  1BE1  3080               	movlw	128
  6885  1BE2  023B               	subwf	??_xtoa,w
  6886  1BE3  1D03               	skipz
  6887  1BE4  2BE7               	goto	u8405
  6888  1BE5  300A               	movlw	10
  6889  1BE6  0255               	subwf	xtoa@c,w
  6890  1BE7                     u8405:	
  6891  1BE7  1C03               	skipc
  6892  1BE8  2BED               	goto	l6777
  6893  1BE9  0020               	movlb	0	; select bank0
  6894  1BEA  0855               	movf	xtoa@c,w
  6895  1BEB  3E57               	addlw	87
  6896  1BEC  2BF0               	goto	L1
  6897  1BED                     l6777:	
  6898  1BED  0020               	movlb	0	; select bank0
  6899  1BEE  0855               	movf	xtoa@c,w
  6900  1BEF  3E30               	addlw	48
  6901  1BF0                     L1:	
  6902  1BF0  00D5               	movwf	xtoa@c
  6903  1BF1  3000               	movlw	0
  6904  1BF2  3D56               	addwfc	xtoa@c+1,w
  6905  1BF3  00D6               	movwf	xtoa@c+1
  6906  1BF4  083A               	movf	xtoa@x,w
  6907  1BF5  3EBF               	addlw	191
  6908  1BF6  00BB               	movwf	??_xtoa
  6909  1BF7  30FF               	movlw	255
  6910  1BF8  1803               	skipnc
  6911  1BF9  3000               	movlw	0
  6912  1BFA  00BC               	movwf	??_xtoa+1
  6913  1BFB  3000               	movlw	0
  6914  1BFC  023C               	subwf	??_xtoa+1,w
  6915  1BFD  301A               	movlw	26
  6916  1BFE  1903               	skipnz
  6917  1BFF  023B               	subwf	??_xtoa,w
  6918  1C00  1803               	btfsc	3,0
  6919  1C01  2C04               	goto	u8410
  6920  1C02  3001               	movlw	1
  6921  1C03  2C05               	goto	u8420
  6922  1C04                     u8410:	
  6923  1C04  3000               	movlw	0
  6924  1C05                     u8420:	
  6925  1C05  00BD               	movwf	??_xtoa+2
  6926  1C06  01BE               	clrf	??_xtoa+3
  6927  1C07  083D               	movf	??_xtoa+2,w
  6928  1C08  00C3               	movwf	_xtoa$1358
  6929  1C09  083E               	movf	??_xtoa+3,w
  6930  1C0A  00C4               	movwf	_xtoa$1358+1
  6931  1C0B  0843               	movf	_xtoa$1358,w
  6932  1C0C  0444               	iorwf	_xtoa$1358+1,w
  6933  1C0D  1903               	btfsc	3,2
  6934  1C0E  2C3B               	goto	l6793
  6935  1C0F  3020               	movlw	32
  6936  1C10  0455               	iorwf	xtoa@c,w
  6937  1C11  00BB               	movwf	??_xtoa
  6938  1C12  3000               	movlw	0
  6939  1C13  0456               	iorwf	xtoa@c+1,w
  6940  1C14  00BC               	movwf	??_xtoa+1
  6941  1C15  083B               	movf	??_xtoa,w
  6942  1C16  3E9F               	addlw	159
  6943  1C17  00BD               	movwf	??_xtoa+2
  6944  1C18  30FF               	movlw	255
  6945  1C19  3D3C               	addwfc	??_xtoa+1,w
  6946  1C1A  00BE               	movwf	??_xtoa+3
  6947  1C1B  3000               	movlw	0
  6948  1C1C  023E               	subwf	??_xtoa+3,w
  6949  1C1D  301A               	movlw	26
  6950  1C1E  1903               	skipnz
  6951  1C1F  023D               	subwf	??_xtoa+2,w
  6952  1C20  1803               	btfsc	3,0
  6953  1C21  2C24               	goto	u8440
  6954  1C22  3001               	movlw	1
  6955  1C23  2C25               	goto	u8450
  6956  1C24                     u8440:	
  6957  1C24  3000               	movlw	0
  6958  1C25                     u8450:	
  6959  1C25  00BF               	movwf	??_xtoa+4
  6960  1C26  01C0               	clrf	??_xtoa+5
  6961  1C27  083F               	movf	??_xtoa+4,w
  6962  1C28  00C5               	movwf	_xtoa$1359
  6963  1C29  0840               	movf	??_xtoa+5,w
  6964  1C2A  00C6               	movwf	_xtoa$1359+1
  6965  1C2B  0845               	movf	_xtoa$1359,w
  6966  1C2C  0446               	iorwf	_xtoa$1359+1,w
  6967  1C2D  1903               	btfsc	3,2
  6968  1C2E  2C3B               	goto	l6793
  6969                           
  6970                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  6971  1C2F  0856               	movf	xtoa@c+1,w
  6972  1C30  00F8               	movwf	toupper@c+1
  6973  1C31  0855               	movf	xtoa@c,w
  6974  1C32  00F7               	movwf	toupper@c
  6975  1C33  31B3  235B  319B   	fcall	_toupper
  6976  1C36  0878               	movf	?_toupper+1,w
  6977  1C37  0020               	movlb	0	; select bank0
  6978  1C38  00D6               	movwf	xtoa@c+1
  6979  1C39  0877               	movf	?_toupper,w
  6980  1C3A  00D5               	movwf	xtoa@c
  6981  1C3B                     l6793:	
  6982                           
  6983                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  6984  1C3B  0855               	movf	xtoa@c,w
  6985  1C3C  00BB               	movwf	??_xtoa
  6986  1C3D  0853               	movf	xtoa@i,w
  6987  1C3E  3E2A               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6988  1C3F  0086               	movwf	6
  6989  1C40  3002               	movlw	2	; select bank4/5
  6990  1C41  0087               	movwf	7
  6991  1C42  083B               	movf	??_xtoa,w
  6992  1C43  0081               	movwf	1
  6993                           
  6994                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  6995  1C44  30FF               	movlw	255
  6996  1C45  07C7               	addwf	xtoa@p,f
  6997  1C46  30FF               	movlw	255
  6998  1C47  3DC8               	addwfc	xtoa@p+1,f
  6999                           
  7000                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  7001  1C48  30FF               	movlw	255
  7002  1C49  07C9               	addwf	xtoa@w,f
  7003  1C4A  30FF               	movlw	255
  7004  1C4B  3DCA               	addwfc	xtoa@w+1,f
  7005                           
  7006                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  7007  1C4C  304B               	movlw	low xtoa@n
  7008  1C4D  0086               	movwf	6
  7009  1C4E  3000               	movlw	high xtoa@n
  7010  1C4F  0087               	movwf	7
  7011  1C50  3F40               	moviw [0]fsr1
  7012  1C51  00BB               	movwf	??_xtoa
  7013  1C52  3F41               	moviw [1]fsr1
  7014  1C53  00BC               	movwf	??_xtoa+1
  7015  1C54  3F42               	moviw [2]fsr1
  7016  1C55  00BD               	movwf	??_xtoa+2
  7017  1C56  3F43               	moviw [3]fsr1
  7018  1C57  00BE               	movwf	??_xtoa+3
  7019  1C58  3F44               	moviw [4]fsr1
  7020  1C59  00BF               	movwf	??_xtoa+4
  7021  1C5A  3F45               	moviw [5]fsr1
  7022  1C5B  00C0               	movwf	??_xtoa+5
  7023  1C5C  3F46               	moviw [6]fsr1
  7024  1C5D  00C1               	movwf	??_xtoa+6
  7025  1C5E  3F47               	moviw [7]fsr1
  7026  1C5F  00C2               	movwf	??_xtoa+7
  7027  1C60  3004               	movlw	4
  7028  1C61                     u8475:	
  7029  1C61  0020               	movlb	0	; select bank0
  7030  1C62  36C2               	lsrf	??_xtoa+7,f
  7031  1C63  0CC1               	rrf	??_xtoa+6,f
  7032  1C64  0CC0               	rrf	??_xtoa+5,f
  7033  1C65  0CBF               	rrf	??_xtoa+4,f
  7034  1C66  0CBE               	rrf	??_xtoa+3,f
  7035  1C67  0CBD               	rrf	??_xtoa+2,f
  7036  1C68  0CBC               	rrf	??_xtoa+1,f
  7037  1C69  0CBB               	rrf	??_xtoa,f
  7038  1C6A  0B89               	decfsz	9,f
  7039  1C6B  2C61               	goto	u8475
  7040  1C6C  0020               	movlb	0	; select bank0
  7041  1C6D  0842               	movf	??_xtoa+7,w
  7042  1C6E  00D2               	movwf	xtoa@n+7
  7043  1C6F  0841               	movf	??_xtoa+6,w
  7044  1C70  00D1               	movwf	xtoa@n+6
  7045  1C71  0840               	movf	??_xtoa+5,w
  7046  1C72  00D0               	movwf	xtoa@n+5
  7047  1C73  083F               	movf	??_xtoa+4,w
  7048  1C74  00CF               	movwf	xtoa@n+4
  7049  1C75  083E               	movf	??_xtoa+3,w
  7050  1C76  00CE               	movwf	xtoa@n+3
  7051  1C77  083D               	movf	??_xtoa+2,w
  7052  1C78  00CD               	movwf	xtoa@n+2
  7053  1C79  083C               	movf	??_xtoa+1,w
  7054  1C7A  00CC               	movwf	xtoa@n+1
  7055  1C7B  083B               	movf	??_xtoa,w
  7056  1C7C  00CB               	movwf	xtoa@n
  7057  1C7D                     l6801:	
  7058                           
  7059                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7060  1C7D  0020               	movlb	0	; select bank0
  7061  1C7E  0854               	movf	xtoa@i+1,w
  7062  1C7F  3A80               	xorlw	128
  7063  1C80  00BB               	movwf	??_xtoa
  7064  1C81  3080               	movlw	128
  7065  1C82  023B               	subwf	??_xtoa,w
  7066  1C83  1D03               	skipz
  7067  1C84  2C87               	goto	u8485
  7068  1C85  3002               	movlw	2
  7069  1C86  0253               	subwf	xtoa@i,w
  7070  1C87                     u8485:	
  7071  1C87  1C03               	skipc
  7072  1C88  2CAE               	goto	l914
  7073  1C89  0020               	movlb	0	; select bank0
  7074  1C8A  084B               	movf	xtoa@n,w
  7075  1C8B  044C               	iorwf	xtoa@n+1,w
  7076  1C8C  044D               	iorwf	xtoa@n+2,w
  7077  1C8D  044E               	iorwf	xtoa@n+3,w
  7078  1C8E  044F               	iorwf	xtoa@n+4,w
  7079  1C8F  0450               	iorwf	xtoa@n+5,w
  7080  1C90  0451               	iorwf	xtoa@n+6,w
  7081  1C91  0452               	iorwf	xtoa@n+7,w
  7082  1C92  1D03               	skipz
  7083  1C93  2BD3               	goto	l6773
  7084  1C94  0848               	movf	xtoa@p+1,w
  7085  1C95  3A80               	xorlw	128
  7086  1C96  00BB               	movwf	??_xtoa
  7087  1C97  3080               	movlw	128
  7088  1C98  023B               	subwf	??_xtoa,w
  7089  1C99  1D03               	skipz
  7090  1C9A  2C9D               	goto	u8505
  7091  1C9B  3001               	movlw	1
  7092  1C9C  0247               	subwf	xtoa@p,w
  7093  1C9D                     u8505:	
  7094  1C9D  1803               	skipnc
  7095  1C9E  2BD3               	goto	l6773
  7096  1C9F  0020               	movlb	0	; select bank0
  7097  1CA0  084A               	movf	xtoa@w+1,w
  7098  1CA1  3A80               	xorlw	128
  7099  1CA2  00BB               	movwf	??_xtoa
  7100  1CA3  3080               	movlw	128
  7101  1CA4  023B               	subwf	??_xtoa,w
  7102  1CA5  1D03               	skipz
  7103  1CA6  2CA9               	goto	u8515
  7104  1CA7  3001               	movlw	1
  7105  1CA8  0249               	subwf	xtoa@w,w
  7106  1CA9                     u8515:	
  7107  1CA9  1C03               	skipc
  7108  1CAA  2CAE               	goto	l914
  7109  1CAB  0022               	movlb	2	; select bank2
  7110  1CAC  18EA               	btfsc	_flags^(0+256),1
  7111  1CAD  2BD3               	goto	l6773
  7112  1CAE                     l914:	
  7113                           
  7114                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  7115  1CAE  0022               	movlb	2	; select bank2
  7116  1CAF  1E6A               	btfss	_flags^(0+256),4
  7117  1CB0  2CCC               	goto	l6817
  7118                           
  7119                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  7120  1CB1  30FF               	movlw	255
  7121  1CB2  0020               	movlb	0	; select bank0
  7122  1CB3  07D3               	addwf	xtoa@i,f
  7123  1CB4  30FF               	movlw	255
  7124  1CB5  3DD4               	addwfc	xtoa@i+1,f
  7125                           
  7126                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  7127  1CB6  083A               	movf	xtoa@x,w
  7128  1CB7  00BB               	movwf	??_xtoa
  7129  1CB8  0853               	movf	xtoa@i,w
  7130  1CB9  3E2A               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7131  1CBA  0086               	movwf	6
  7132  1CBB  3002               	movlw	2	; select bank4/5
  7133  1CBC  0087               	movwf	7
  7134  1CBD  083B               	movf	??_xtoa,w
  7135  1CBE  0081               	movwf	1
  7136                           
  7137                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  7138  1CBF  30FF               	movlw	255
  7139  1CC0  07D3               	addwf	xtoa@i,f
  7140  1CC1  30FF               	movlw	255
  7141  1CC2  3DD4               	addwfc	xtoa@i+1,f
  7142                           
  7143                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  7144  1CC3  3030               	movlw	48
  7145  1CC4  00BB               	movwf	??_xtoa
  7146  1CC5  0853               	movf	xtoa@i,w
  7147  1CC6  3E2A               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7148  1CC7  0086               	movwf	6
  7149  1CC8  3002               	movlw	2	; select bank4/5
  7150  1CC9  0087               	movwf	7
  7151  1CCA  083B               	movf	??_xtoa,w
  7152  1CCB  0081               	movwf	1
  7153  1CCC                     l6817:	
  7154                           
  7155                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  7156  1CCC  0020               	movlb	0	; select bank0
  7157  1CCD  0831               	movf	xtoa@fp+1,w
  7158  1CCE  00A7               	movwf	pad@fp+1
  7159  1CCF  0830               	movf	xtoa@fp,w
  7160  1CD0  00A6               	movwf	pad@fp
  7161  1CD1  0853               	movf	xtoa@i,w
  7162  1CD2  3E2A               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7163  1CD3  00BB               	movwf	??_xtoa
  7164  1CD4  083B               	movf	??_xtoa,w
  7165  1CD5  00A8               	movwf	pad@buf
  7166  1CD6  084A               	movf	xtoa@w+1,w
  7167  1CD7  00AA               	movwf	pad@p+1
  7168  1CD8  0849               	movf	xtoa@w,w
  7169  1CD9  00A9               	movwf	pad@p
  7170  1CDA  31A8  2000         	fcall	_pad
  7171  1CDC  0020               	movlb	0	; select bank0
  7172  1CDD  0827               	movf	?_pad+1,w
  7173  1CDE  00B1               	movwf	?_xtoa+1
  7174  1CDF  0826               	movf	?_pad,w
  7175  1CE0  00B0               	movwf	?_xtoa
  7176  1CE1  0008               	return
  7177  1CE2                     __end_of_xtoa:	
  7178                           
  7179                           	psect	text9
  7180  335B                     __ptext9:	
  7181 ;; *************** function _toupper *****************
  7182 ;; Defined at:
  7183 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  7184 ;; Parameters:    Size  Location     Type
  7185 ;;  c               2    7[COMMON] int 
  7186 ;; Auto vars:     Size  Location     Type
  7187 ;;		None
  7188 ;; Return value:  Size  Location     Type
  7189 ;;                  2    7[COMMON] int 
  7190 ;; Registers used:
  7191 ;;		wreg, status,2, status,0
  7192 ;; Tracked objects:
  7193 ;;		On entry : 0/0
  7194 ;;		On exit  : 0/0
  7195 ;;		Unchanged: 0/0
  7196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7197 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7198 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7199 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7200 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7201 ;;Total ram usage:        8 bytes
  7202 ;; Hardware stack levels used:    1
  7203 ;; Hardware stack levels required when called:    2
  7204 ;; This function calls:
  7205 ;;		_islower
  7206 ;; This function is called by:
  7207 ;;		_xtoa
  7208 ;; This function uses a non-reentrant model
  7209 ;;
  7210                           
  7211                           
  7212                           ;psect for function _toupper
  7213  335B                     _toupper:	
  7214                           
  7215                           ;incstack = 0
  7216                           ; Regs used in _toupper: [wreg+status,2+status,0]
  7217  335B  0877               	movf	toupper@c,w
  7218  335C  3E9F               	addlw	159
  7219  335D  0020               	movlb	0	; select bank0
  7220  335E  00A0               	movwf	??_toupper
  7221  335F  30FF               	movlw	255
  7222  3360  3D78               	addwfc	toupper@c+1,w
  7223  3361  00A1               	movwf	??_toupper+1
  7224  3362  3000               	movlw	0
  7225  3363  0221               	subwf	??_toupper+1,w
  7226  3364  301A               	movlw	26
  7227  3365  1903               	skipnz
  7228  3366  0220               	subwf	??_toupper,w
  7229  3367  1803               	btfsc	3,0
  7230  3368  2B6B               	goto	u8000
  7231  3369  3001               	movlw	1
  7232  336A  2B6C               	goto	u8010
  7233  336B                     u8000:	
  7234  336B  3000               	movlw	0
  7235  336C                     u8010:	
  7236  336C  00A2               	movwf	??_toupper+2
  7237  336D  01A3               	clrf	??_toupper+3
  7238  336E  0822               	movf	??_toupper+2,w
  7239  336F  00F9               	movwf	_toupper$1908
  7240  3370  0823               	movf	??_toupper+3,w
  7241  3371  00FA               	movwf	_toupper$1908+1
  7242  3372  0879               	movf	_toupper$1908,w
  7243  3373  047A               	iorwf	_toupper$1908+1,w
  7244  3374  1903               	btfsc	3,2
  7245  3375  0008               	return
  7246  3376  305F               	movlw	95
  7247  3377  0577               	andwf	toupper@c,w
  7248  3378  00F7               	movwf	?_toupper
  7249  3379  3000               	movlw	0
  7250  337A  0578               	andwf	toupper@c+1,w
  7251  337B  00F8               	movwf	?_toupper+1
  7252  337C  0008               	return
  7253  337D                     __end_of_toupper:	
  7254                           
  7255                           	psect	text10
  7256  3261                     __ptext10:	
  7257 ;; *************** function _islower *****************
  7258 ;; Defined at:
  7259 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  7260 ;; Parameters:    Size  Location     Type
  7261 ;;  c               2    1[COMMON] int 
  7262 ;; Auto vars:     Size  Location     Type
  7263 ;;		None
  7264 ;; Return value:  Size  Location     Type
  7265 ;;                  2    1[COMMON] int 
  7266 ;; Registers used:
  7267 ;;		wreg, status,2, status,0
  7268 ;; Tracked objects:
  7269 ;;		On entry : 0/0
  7270 ;;		On exit  : 0/0
  7271 ;;		Unchanged: 0/0
  7272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7273 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7275 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7276 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7277 ;;Total ram usage:        6 bytes
  7278 ;; Hardware stack levels used:    1
  7279 ;; Hardware stack levels required when called:    1
  7280 ;; This function calls:
  7281 ;;		Nothing
  7282 ;; This function is called by:
  7283 ;;		_toupper
  7284 ;; This function uses a non-reentrant model
  7285 ;;
  7286                           
  7287                           
  7288                           ;psect for function _islower
  7289  3261                     _islower:	
  7290                           
  7291                           ;incstack = 0
  7292                           ; Regs used in _islower: [wreg+status,2+status,0]
  7293  3261  0871               	movf	islower@c,w
  7294  3262  3E9F               	addlw	159
  7295  3263  00F3               	movwf	??_islower
  7296  3264  30FF               	movlw	255
  7297  3265  3D72               	addwfc	islower@c+1,w
  7298  3266  00F4               	movwf	??_islower+1
  7299  3267  3000               	movlw	0
  7300  3268  0274               	subwf	??_islower+1,w
  7301  3269  301A               	movlw	26
  7302  326A  1903               	skipnz
  7303  326B  0273               	subwf	??_islower,w
  7304  326C  1803               	btfsc	3,0
  7305  326D  2A70               	goto	u7940
  7306  326E  3001               	movlw	1
  7307  326F  2A71               	goto	u7950
  7308  3270                     u7940:	
  7309  3270  3000               	movlw	0
  7310  3271                     u7950:	
  7311  3271  00F5               	movwf	??_islower+2
  7312  3272  01F6               	clrf	??_islower+3
  7313  3273  0875               	movf	??_islower+2,w
  7314  3274  00F1               	movwf	?_islower
  7315  3275  0876               	movf	??_islower+3,w
  7316  3276  00F2               	movwf	?_islower+1
  7317  3277  0008               	return
  7318  3278                     __end_of_islower:	
  7319                           
  7320                           	psect	text11
  7321  324A                     __ptext11:	
  7322 ;; *************** function _isupper *****************
  7323 ;; Defined at:
  7324 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  7325 ;; Parameters:    Size  Location     Type
  7326 ;;  c               2    1[COMMON] int 
  7327 ;; Auto vars:     Size  Location     Type
  7328 ;;		None
  7329 ;; Return value:  Size  Location     Type
  7330 ;;                  2    1[COMMON] int 
  7331 ;; Registers used:
  7332 ;;		wreg, status,2, status,0
  7333 ;; Tracked objects:
  7334 ;;		On entry : 0/0
  7335 ;;		On exit  : 0/0
  7336 ;;		Unchanged: 0/0
  7337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7338 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7340 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7341 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7342 ;;Total ram usage:        6 bytes
  7343 ;; Hardware stack levels used:    1
  7344 ;; Hardware stack levels required when called:    1
  7345 ;; This function calls:
  7346 ;;		Nothing
  7347 ;; This function is called by:
  7348 ;;		_xtoa
  7349 ;; This function uses a non-reentrant model
  7350 ;;
  7351                           
  7352                           
  7353                           ;psect for function _isupper
  7354  324A                     _isupper:	
  7355                           
  7356                           ;incstack = 0
  7357                           ; Regs used in _isupper: [wreg+status,2+status,0]
  7358  324A  0871               	movf	isupper@c,w
  7359  324B  3EBF               	addlw	191
  7360  324C  00F3               	movwf	??_isupper
  7361  324D  30FF               	movlw	255
  7362  324E  3D72               	addwfc	isupper@c+1,w
  7363  324F  00F4               	movwf	??_isupper+1
  7364  3250  3000               	movlw	0
  7365  3251  0274               	subwf	??_isupper+1,w
  7366  3252  301A               	movlw	26
  7367  3253  1903               	skipnz
  7368  3254  0273               	subwf	??_isupper,w
  7369  3255  1803               	btfsc	3,0
  7370  3256  2A59               	goto	u4130
  7371  3257  3001               	movlw	1
  7372  3258  2A5A               	goto	u4140
  7373  3259                     u4130:	
  7374  3259  3000               	movlw	0
  7375  325A                     u4140:	
  7376  325A  00F5               	movwf	??_isupper+2
  7377  325B  01F6               	clrf	??_isupper+3
  7378  325C  0875               	movf	??_isupper+2,w
  7379  325D  00F1               	movwf	?_isupper
  7380  325E  0876               	movf	??_isupper+3,w
  7381  325F  00F2               	movwf	?_isupper+1
  7382  3260  0008               	return
  7383  3261                     __end_of_isupper:	
  7384                           
  7385                           	psect	text12
  7386  32FF                     __ptext12:	
  7387 ;; *************** function _isalpha *****************
  7388 ;; Defined at:
  7389 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  7390 ;; Parameters:    Size  Location     Type
  7391 ;;  c               2    1[COMMON] int 
  7392 ;; Auto vars:     Size  Location     Type
  7393 ;;		None
  7394 ;; Return value:  Size  Location     Type
  7395 ;;                  2    1[COMMON] int 
  7396 ;; Registers used:
  7397 ;;		wreg, status,2, status,0
  7398 ;; Tracked objects:
  7399 ;;		On entry : 0/0
  7400 ;;		On exit  : 0/0
  7401 ;;		Unchanged: 0/0
  7402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7403 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7405 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7406 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7407 ;;Total ram usage:        8 bytes
  7408 ;; Hardware stack levels used:    1
  7409 ;; Hardware stack levels required when called:    1
  7410 ;; This function calls:
  7411 ;;		Nothing
  7412 ;; This function is called by:
  7413 ;;		_xtoa
  7414 ;; This function uses a non-reentrant model
  7415 ;;
  7416                           
  7417                           
  7418                           ;psect for function _isalpha
  7419  32FF                     _isalpha:	
  7420                           
  7421                           ;incstack = 0
  7422                           ; Regs used in _isalpha: [wreg+status,2+status,0]
  7423  32FF  3020               	movlw	32
  7424  3300  0471               	iorwf	isalpha@c,w
  7425  3301  00F3               	movwf	??_isalpha
  7426  3302  3000               	movlw	0
  7427  3303  0472               	iorwf	isalpha@c+1,w
  7428  3304  00F4               	movwf	??_isalpha+1
  7429  3305  0873               	movf	??_isalpha,w
  7430  3306  3E9F               	addlw	159
  7431  3307  00F5               	movwf	??_isalpha+2
  7432  3308  30FF               	movlw	255
  7433  3309  3D74               	addwfc	??_isalpha+1,w
  7434  330A  00F6               	movwf	??_isalpha+3
  7435  330B  3000               	movlw	0
  7436  330C  0276               	subwf	??_isalpha+3,w
  7437  330D  301A               	movlw	26
  7438  330E  1903               	skipnz
  7439  330F  0275               	subwf	??_isalpha+2,w
  7440  3310  1803               	btfsc	3,0
  7441  3311  2B14               	goto	u4150
  7442  3312  3001               	movlw	1
  7443  3313  2B15               	goto	u4160
  7444  3314                     u4150:	
  7445  3314  3000               	movlw	0
  7446  3315                     u4160:	
  7447  3315  00F7               	movwf	??_isalpha+4
  7448  3316  01F8               	clrf	??_isalpha+5
  7449  3317  0877               	movf	??_isalpha+4,w
  7450  3318  00F1               	movwf	?_isalpha
  7451  3319  0878               	movf	??_isalpha+5,w
  7452  331A  00F2               	movwf	?_isalpha+1
  7453  331B  0008               	return
  7454  331C                     __end_of_isalpha:	
  7455                           
  7456                           	psect	text13
  7457  1804                     __ptext13:	
  7458 ;; *************** function _utoa *****************
  7459 ;; Defined at:
  7460 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7461 ;; Parameters:    Size  Location     Type
  7462 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  7463 ;;		 -> vsnprintf@f(6), 
  7464 ;;  d               8   18[BANK0 ] unsigned long long 
  7465 ;; Auto vars:     Size  Location     Type
  7466 ;;  n               8   31[BANK0 ] unsigned long long 
  7467 ;;  i               2   39[BANK0 ] int 
  7468 ;;  w               2   29[BANK0 ] int 
  7469 ;;  p               2   27[BANK0 ] int 
  7470 ;; Return value:  Size  Location     Type
  7471 ;;                  2   16[BANK0 ] int 
  7472 ;; Registers used:
  7473 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7474 ;; Tracked objects:
  7475 ;;		On entry : 0/0
  7476 ;;		On exit  : 0/0
  7477 ;;		Unchanged: 0/0
  7478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7479 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7480 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7481 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7482 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7483 ;;Total ram usage:       25 bytes
  7484 ;; Hardware stack levels used:    1
  7485 ;; Hardware stack levels required when called:    5
  7486 ;; This function calls:
  7487 ;;		___lodiv
  7488 ;;		___lomod
  7489 ;;		_pad
  7490 ;; This function is called by:
  7491 ;;		_vfpfcnvrt
  7492 ;; This function uses a non-reentrant model
  7493 ;;
  7494                           
  7495                           
  7496                           ;psect for function _utoa
  7497  1804                     _utoa:	
  7498                           
  7499                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  7500                           
  7501                           ;incstack = 0
  7502                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7503  1804  0022               	movlb	2	; select bank2
  7504  1805  1BE9               	btfsc	(_prec+1)^(0+256),7
  7505  1806  280B               	goto	l874
  7506                           
  7507                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  7508  1807  30FD               	movlw	253
  7509  1808  05EA               	andwf	_flags^(0+256),f
  7510  1809  30FF               	movlw	255
  7511  180A  05EB               	andwf	(_flags+1)^(0+256),f
  7512  180B                     l874:	
  7513                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 601:     }
  7514                           
  7515                           
  7516                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  7517  180B  0869               	movf	(_prec+1)^(0+256),w
  7518  180C  3A80               	xorlw	128
  7519  180D  0020               	movlb	0	; select bank0
  7520  180E  00BA               	movwf	??_utoa
  7521  180F  3080               	movlw	128
  7522  1810  023A               	subwf	??_utoa,w
  7523  1811  1D03               	skipz
  7524  1812  2816               	goto	u8315
  7525  1813  3001               	movlw	1
  7526  1814  0022               	movlb	2	; select bank2
  7527  1815  0268               	subwf	_prec^(0+256),w
  7528  1816                     u8315:	
  7529  1816  1803               	skipnc
  7530  1817  281E               	goto	l6727
  7531  1818  3001               	movlw	1
  7532  1819  0020               	movlb	0	; select bank0
  7533  181A  00BB               	movwf	utoa@p
  7534  181B  3000               	movlw	0
  7535  181C  00BC               	movwf	utoa@p+1
  7536  181D  2826               	goto	l878
  7537  181E                     l6727:	
  7538  181E  0022               	movlb	2	; select bank2
  7539  181F  0869               	movf	(_prec+1)^(0+256),w
  7540  1820  0020               	movlb	0	; select bank0
  7541  1821  00BC               	movwf	utoa@p+1
  7542  1822  0022               	movlb	2	; select bank2
  7543  1823  0868               	movf	_prec^(0+256),w
  7544  1824  0020               	movlb	0	; select bank0
  7545  1825  00BB               	movwf	utoa@p
  7546  1826                     l878:	
  7547                           
  7548                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  7549  1826  0022               	movlb	2	; select bank2
  7550  1827  0867               	movf	(_width+1)^(0+256),w
  7551  1828  0020               	movlb	0	; select bank0
  7552  1829  00BE               	movwf	utoa@w+1
  7553  182A  0022               	movlb	2	; select bank2
  7554  182B  0866               	movf	_width^(0+256),w
  7555  182C  0020               	movlb	0	; select bank0
  7556  182D  00BD               	movwf	utoa@w
  7557                           
  7558                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  7559  182E  0832               	movf	utoa@d,w
  7560  182F  00BF               	movwf	utoa@n
  7561  1830  0833               	movf	utoa@d+1,w
  7562  1831  00C0               	movwf	utoa@n+1
  7563  1832  0834               	movf	utoa@d+2,w
  7564  1833  00C1               	movwf	utoa@n+2
  7565  1834  0835               	movf	utoa@d+3,w
  7566  1835  00C2               	movwf	utoa@n+3
  7567  1836  0836               	movf	utoa@d+4,w
  7568  1837  00C3               	movwf	utoa@n+4
  7569  1838  0837               	movf	utoa@d+5,w
  7570  1839  00C4               	movwf	utoa@n+5
  7571  183A  0838               	movf	utoa@d+6,w
  7572  183B  00C5               	movwf	utoa@n+6
  7573  183C  0839               	movf	utoa@d+7,w
  7574  183D  00C6               	movwf	utoa@n+7
  7575                           
  7576                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  7577  183E  301F               	movlw	31
  7578  183F  00C7               	movwf	utoa@i
  7579  1840  3000               	movlw	0
  7580  1841  00C8               	movwf	utoa@i+1
  7581                           
  7582                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  7583  1842  0024               	movlb	4	; select bank4
  7584  1843  01C9               	clrf	(_dbuf^(0+512)+31)
  7585                           
  7586                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7587  1844  28CA               	goto	l6743
  7588  1845                     l6745:	
  7589  1845  083F               	movf	utoa@n,w
  7590  1846  0440               	iorwf	utoa@n+1,w
  7591  1847  0441               	iorwf	utoa@n+2,w
  7592  1848  0442               	iorwf	utoa@n+3,w
  7593  1849  0443               	iorwf	utoa@n+4,w
  7594  184A  0444               	iorwf	utoa@n+5,w
  7595  184B  0445               	iorwf	utoa@n+6,w
  7596  184C  0446               	iorwf	utoa@n+7,w
  7597  184D  1D03               	skipz
  7598  184E  2869               	goto	l6733
  7599  184F  083C               	movf	utoa@p+1,w
  7600  1850  3A80               	xorlw	128
  7601  1851  00BA               	movwf	??_utoa
  7602  1852  3080               	movlw	128
  7603  1853  023A               	subwf	??_utoa,w
  7604  1854  1D03               	skipz
  7605  1855  2858               	goto	u8345
  7606  1856  3001               	movlw	1
  7607  1857  023B               	subwf	utoa@p,w
  7608  1858                     u8345:	
  7609  1858  1803               	skipnc
  7610  1859  2869               	goto	l6733
  7611  185A  0020               	movlb	0	; select bank0
  7612  185B  083E               	movf	utoa@w+1,w
  7613  185C  3A80               	xorlw	128
  7614  185D  00BA               	movwf	??_utoa
  7615  185E  3080               	movlw	128
  7616  185F  023A               	subwf	??_utoa,w
  7617  1860  1D03               	skipz
  7618  1861  2864               	goto	u8355
  7619  1862  3001               	movlw	1
  7620  1863  023D               	subwf	utoa@w,w
  7621  1864                     u8355:	
  7622  1864  1C03               	skipc
  7623  1865  28CF               	goto	l6753
  7624  1866  0022               	movlb	2	; select bank2
  7625  1867  1CEA               	btfss	_flags^(0+256),1
  7626  1868  28CF               	goto	l6753
  7627  1869                     l6733:	
  7628                           
  7629                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  7630  1869  30FF               	movlw	255
  7631  186A  0020               	movlb	0	; select bank0
  7632  186B  07C7               	addwf	utoa@i,f
  7633  186C  30FF               	movlw	255
  7634  186D  3DC8               	addwfc	utoa@i+1,f
  7635                           
  7636                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  7637  186E  300A               	movlw	10
  7638  186F  00A0               	movwf	___lomod@divisor
  7639  1870  01A1               	clrf	___lomod@divisor+1
  7640  1871  01A2               	clrf	___lomod@divisor+2
  7641  1872  01A3               	clrf	___lomod@divisor+3
  7642  1873  01A4               	clrf	___lomod@divisor+4
  7643  1874  01A5               	clrf	___lomod@divisor+5
  7644  1875  01A6               	clrf	___lomod@divisor+6
  7645  1876  01A7               	clrf	___lomod@divisor+7
  7646  1877  083F               	movf	utoa@n,w
  7647  1878  00A8               	movwf	___lomod@dividend
  7648  1879  0840               	movf	utoa@n+1,w
  7649  187A  00A9               	movwf	___lomod@dividend+1
  7650  187B  0841               	movf	utoa@n+2,w
  7651  187C  00AA               	movwf	___lomod@dividend+2
  7652  187D  0842               	movf	utoa@n+3,w
  7653  187E  00AB               	movwf	___lomod@dividend+3
  7654  187F  0843               	movf	utoa@n+4,w
  7655  1880  00AC               	movwf	___lomod@dividend+4
  7656  1881  0844               	movf	utoa@n+5,w
  7657  1882  00AD               	movwf	___lomod@dividend+5
  7658  1883  0845               	movf	utoa@n+6,w
  7659  1884  00AE               	movwf	___lomod@dividend+6
  7660  1885  0846               	movf	utoa@n+7,w
  7661  1886  00AF               	movwf	___lomod@dividend+7
  7662  1887  31B7  271F  3198   	fcall	___lomod
  7663  188A  0020               	movlb	0	; select bank0
  7664  188B  0820               	movf	?___lomod,w
  7665  188C  3E30               	addlw	48
  7666  188D  00BA               	movwf	??_utoa
  7667  188E  0847               	movf	utoa@i,w
  7668  188F  3E2A               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7669  1890  0086               	movwf	6
  7670  1891  3002               	movlw	2	; select bank4/5
  7671  1892  0087               	movwf	7
  7672  1893  083A               	movf	??_utoa,w
  7673  1894  0081               	movwf	1
  7674                           
  7675                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  7676  1895  30FF               	movlw	255
  7677  1896  07BB               	addwf	utoa@p,f
  7678  1897  30FF               	movlw	255
  7679  1898  3DBC               	addwfc	utoa@p+1,f
  7680                           
  7681                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  7682  1899  30FF               	movlw	255
  7683  189A  07BD               	addwf	utoa@w,f
  7684  189B  30FF               	movlw	255
  7685  189C  3DBE               	addwfc	utoa@w+1,f
  7686                           
  7687                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  7688  189D  300A               	movlw	10
  7689  189E  00A0               	movwf	___lodiv@divisor
  7690  189F  01A1               	clrf	___lodiv@divisor+1
  7691  18A0  01A2               	clrf	___lodiv@divisor+2
  7692  18A1  01A3               	clrf	___lodiv@divisor+3
  7693  18A2  01A4               	clrf	___lodiv@divisor+4
  7694  18A3  01A5               	clrf	___lodiv@divisor+5
  7695  18A4  01A6               	clrf	___lodiv@divisor+6
  7696  18A5  01A7               	clrf	___lodiv@divisor+7
  7697  18A6  083F               	movf	utoa@n,w
  7698  18A7  00A8               	movwf	___lodiv@dividend
  7699  18A8  0840               	movf	utoa@n+1,w
  7700  18A9  00A9               	movwf	___lodiv@dividend+1
  7701  18AA  0841               	movf	utoa@n+2,w
  7702  18AB  00AA               	movwf	___lodiv@dividend+2
  7703  18AC  0842               	movf	utoa@n+3,w
  7704  18AD  00AB               	movwf	___lodiv@dividend+3
  7705  18AE  0843               	movf	utoa@n+4,w
  7706  18AF  00AC               	movwf	___lodiv@dividend+4
  7707  18B0  0844               	movf	utoa@n+5,w
  7708  18B1  00AD               	movwf	___lodiv@dividend+5
  7709  18B2  0845               	movf	utoa@n+6,w
  7710  18B3  00AE               	movwf	___lodiv@dividend+6
  7711  18B4  0846               	movf	utoa@n+7,w
  7712  18B5  00AF               	movwf	___lodiv@dividend+7
  7713  18B6  31A8  20CD  3198   	fcall	___lodiv
  7714  18B9  0020               	movlb	0	; select bank0
  7715  18BA  0820               	movf	?___lodiv,w
  7716  18BB  00BF               	movwf	utoa@n
  7717  18BC  0821               	movf	?___lodiv+1,w
  7718  18BD  00C0               	movwf	utoa@n+1
  7719  18BE  0822               	movf	?___lodiv+2,w
  7720  18BF  00C1               	movwf	utoa@n+2
  7721  18C0  0823               	movf	?___lodiv+3,w
  7722  18C1  00C2               	movwf	utoa@n+3
  7723  18C2  0824               	movf	?___lodiv+4,w
  7724  18C3  00C3               	movwf	utoa@n+4
  7725  18C4  0825               	movf	?___lodiv+5,w
  7726  18C5  00C4               	movwf	utoa@n+5
  7727  18C6  0826               	movf	?___lodiv+6,w
  7728  18C7  00C5               	movwf	utoa@n+6
  7729  18C8  0827               	movf	?___lodiv+7,w
  7730  18C9  00C6               	movwf	utoa@n+7
  7731  18CA                     l6743:	
  7732                           
  7733                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7734  18CA  0020               	movlb	0	; select bank0
  7735  18CB  0847               	movf	utoa@i,w
  7736  18CC  0448               	iorwf	utoa@i+1,w
  7737  18CD  1D03               	btfss	3,2
  7738  18CE  2845               	goto	l6745
  7739  18CF                     l6753:	
  7740                           
  7741                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  7742  18CF  0020               	movlb	0	; select bank0
  7743  18D0  0831               	movf	utoa@fp+1,w
  7744  18D1  00A7               	movwf	pad@fp+1
  7745  18D2  0830               	movf	utoa@fp,w
  7746  18D3  00A6               	movwf	pad@fp
  7747  18D4  0847               	movf	utoa@i,w
  7748  18D5  3E2A               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7749  18D6  00BA               	movwf	??_utoa
  7750  18D7  083A               	movf	??_utoa,w
  7751  18D8  00A8               	movwf	pad@buf
  7752  18D9  083E               	movf	utoa@w+1,w
  7753  18DA  00AA               	movwf	pad@p+1
  7754  18DB  083D               	movf	utoa@w,w
  7755  18DC  00A9               	movwf	pad@p
  7756  18DD  31A8  2000         	fcall	_pad
  7757  18DF  0020               	movlb	0	; select bank0
  7758  18E0  0827               	movf	?_pad+1,w
  7759  18E1  00B1               	movwf	?_utoa+1
  7760  18E2  0826               	movf	?_pad,w
  7761  18E3  00B0               	movwf	?_utoa
  7762  18E4  0008               	return
  7763  18E5                     __end_of_utoa:	
  7764                           
  7765                           	psect	text14
  7766  371F                     __ptext14:	
  7767 ;; *************** function ___lomod *****************
  7768 ;; Defined at:
  7769 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lomod.c"
  7770 ;; Parameters:    Size  Location     Type
  7771 ;;  divisor         8    0[BANK0 ] unsigned long long 
  7772 ;;  dividend        8    8[BANK0 ] unsigned long long 
  7773 ;; Auto vars:     Size  Location     Type
  7774 ;;  counter         1    2[COMMON] unsigned char 
  7775 ;; Return value:  Size  Location     Type
  7776 ;;                  8    0[BANK0 ] unsigned long long 
  7777 ;; Registers used:
  7778 ;;		wreg, status,2, status,0
  7779 ;; Tracked objects:
  7780 ;;		On entry : 0/0
  7781 ;;		On exit  : 0/0
  7782 ;;		Unchanged: 0/0
  7783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7784 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7785 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7786 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7787 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7788 ;;Total ram usage:       18 bytes
  7789 ;; Hardware stack levels used:    1
  7790 ;; Hardware stack levels required when called:    1
  7791 ;; This function calls:
  7792 ;;		Nothing
  7793 ;; This function is called by:
  7794 ;;		_utoa
  7795 ;; This function uses a non-reentrant model
  7796 ;;
  7797                           
  7798                           
  7799                           ;psect for function ___lomod
  7800  371F                     ___lomod:	
  7801                           
  7802                           ;incstack = 0
  7803                           ; Regs used in ___lomod: [wreg+status,2+status,0]
  7804  371F  0020               	movlb	0	; select bank0
  7805  3720  0820               	movf	___lomod@divisor,w
  7806  3721  0421               	iorwf	___lomod@divisor+1,w
  7807  3722  0422               	iorwf	___lomod@divisor+2,w
  7808  3723  0423               	iorwf	___lomod@divisor+3,w
  7809  3724  0424               	iorwf	___lomod@divisor+4,w
  7810  3725  0425               	iorwf	___lomod@divisor+5,w
  7811  3726  0426               	iorwf	___lomod@divisor+6,w
  7812  3727  0427               	iorwf	___lomod@divisor+7,w
  7813  3728  1903               	skipnz
  7814  3729  2F77               	goto	l1245
  7815  372A  01F2               	clrf	___lomod@counter
  7816  372B  0AF2               	incf	___lomod@counter,f
  7817  372C                     l4337:	
  7818  372C  1BA7               	btfsc	___lomod@divisor+7,7
  7819  372D  2F3B               	goto	l4339
  7820  372E  35A0               	lslf	___lomod@divisor,f
  7821  372F  0DA1               	rlf	___lomod@divisor+1,f
  7822  3730  0DA2               	rlf	___lomod@divisor+2,f
  7823  3731  0DA3               	rlf	___lomod@divisor+3,f
  7824  3732  0DA4               	rlf	___lomod@divisor+4,f
  7825  3733  0DA5               	rlf	___lomod@divisor+5,f
  7826  3734  0DA6               	rlf	___lomod@divisor+6,f
  7827  3735  0DA7               	rlf	___lomod@divisor+7,f
  7828  3736  3001               	movlw	1
  7829  3737  00F1               	movwf	??___lomod
  7830  3738  0871               	movf	??___lomod,w
  7831  3739  07F2               	addwf	___lomod@counter,f
  7832  373A  2F2C               	goto	l4337
  7833  373B                     l4339:	
  7834  373B  0827               	movf	___lomod@divisor+7,w
  7835  373C  022F               	subwf	___lomod@dividend+7,w
  7836  373D  1D03               	skipz
  7837  373E  2F59               	goto	u4545
  7838  373F  0826               	movf	___lomod@divisor+6,w
  7839  3740  022E               	subwf	___lomod@dividend+6,w
  7840  3741  1D03               	skipz
  7841  3742  2F59               	goto	u4545
  7842  3743  0825               	movf	___lomod@divisor+5,w
  7843  3744  022D               	subwf	___lomod@dividend+5,w
  7844  3745  1D03               	skipz
  7845  3746  2F59               	goto	u4545
  7846  3747  0824               	movf	___lomod@divisor+4,w
  7847  3748  022C               	subwf	___lomod@dividend+4,w
  7848  3749  1D03               	skipz
  7849  374A  2F59               	goto	u4545
  7850  374B  0823               	movf	___lomod@divisor+3,w
  7851  374C  022B               	subwf	___lomod@dividend+3,w
  7852  374D  1D03               	skipz
  7853  374E  2F59               	goto	u4545
  7854  374F  0822               	movf	___lomod@divisor+2,w
  7855  3750  022A               	subwf	___lomod@dividend+2,w
  7856  3751  1D03               	skipz
  7857  3752  2F59               	goto	u4545
  7858  3753  0821               	movf	___lomod@divisor+1,w
  7859  3754  0229               	subwf	___lomod@dividend+1,w
  7860  3755  1D03               	skipz
  7861  3756  2F59               	goto	u4545
  7862  3757  0820               	movf	___lomod@divisor,w
  7863  3758  0228               	subwf	___lomod@dividend,w
  7864  3759                     u4545:	
  7865  3759  1C03               	skipc
  7866  375A  2F6B               	goto	l4343
  7867  375B  0820               	movf	___lomod@divisor,w
  7868  375C  02A8               	subwf	___lomod@dividend,f
  7869  375D  0821               	movf	___lomod@divisor+1,w
  7870  375E  3BA9               	subwfb	___lomod@dividend+1,f
  7871  375F  0822               	movf	___lomod@divisor+2,w
  7872  3760  3BAA               	subwfb	___lomod@dividend+2,f
  7873  3761  0823               	movf	___lomod@divisor+3,w
  7874  3762  3BAB               	subwfb	___lomod@dividend+3,f
  7875  3763  0824               	movf	___lomod@divisor+4,w
  7876  3764  3BAC               	subwfb	___lomod@dividend+4,f
  7877  3765  0825               	movf	___lomod@divisor+5,w
  7878  3766  3BAD               	subwfb	___lomod@dividend+5,f
  7879  3767  0826               	movf	___lomod@divisor+6,w
  7880  3768  3BAE               	subwfb	___lomod@dividend+6,f
  7881  3769  0827               	movf	___lomod@divisor+7,w
  7882  376A  3BAF               	subwfb	___lomod@dividend+7,f
  7883  376B                     l4343:	
  7884  376B  36A7               	lsrf	___lomod@divisor+7,f
  7885  376C  0CA6               	rrf	___lomod@divisor+6,f
  7886  376D  0CA5               	rrf	___lomod@divisor+5,f
  7887  376E  0CA4               	rrf	___lomod@divisor+4,f
  7888  376F  0CA3               	rrf	___lomod@divisor+3,f
  7889  3770  0CA2               	rrf	___lomod@divisor+2,f
  7890  3771  0CA1               	rrf	___lomod@divisor+1,f
  7891  3772  0CA0               	rrf	___lomod@divisor,f
  7892  3773  3001               	movlw	1
  7893  3774  02F2               	subwf	___lomod@counter,f
  7894  3775  1D03               	btfss	3,2
  7895  3776  2F3B               	goto	l4339
  7896  3777                     l1245:	
  7897  3777  0828               	movf	___lomod@dividend,w
  7898  3778  00A0               	movwf	?___lomod
  7899  3779  0829               	movf	___lomod@dividend+1,w
  7900  377A  00A1               	movwf	?___lomod+1
  7901  377B  082A               	movf	___lomod@dividend+2,w
  7902  377C  00A2               	movwf	?___lomod+2
  7903  377D  082B               	movf	___lomod@dividend+3,w
  7904  377E  00A3               	movwf	?___lomod+3
  7905  377F  082C               	movf	___lomod@dividend+4,w
  7906  3780  00A4               	movwf	?___lomod+4
  7907  3781  082D               	movf	___lomod@dividend+5,w
  7908  3782  00A5               	movwf	?___lomod+5
  7909  3783  082E               	movf	___lomod@dividend+6,w
  7910  3784  00A6               	movwf	?___lomod+6
  7911  3785  082F               	movf	___lomod@dividend+7,w
  7912  3786  00A7               	movwf	?___lomod+7
  7913  3787  0008               	return
  7914  3788                     __end_of___lomod:	
  7915                           
  7916                           	psect	text15
  7917  28CD                     __ptext15:	
  7918 ;; *************** function ___lodiv *****************
  7919 ;; Defined at:
  7920 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lodiv.c"
  7921 ;; Parameters:    Size  Location     Type
  7922 ;;  divisor         8    0[BANK0 ] unsigned long long 
  7923 ;;  dividend        8    8[BANK0 ] unsigned long long 
  7924 ;; Auto vars:     Size  Location     Type
  7925 ;;  quotient        8    2[COMMON] unsigned long long 
  7926 ;;  counter         1   10[COMMON] unsigned char 
  7927 ;; Return value:  Size  Location     Type
  7928 ;;                  8    0[BANK0 ] unsigned long long 
  7929 ;; Registers used:
  7930 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7931 ;; Tracked objects:
  7932 ;;		On entry : 0/0
  7933 ;;		On exit  : 0/0
  7934 ;;		Unchanged: 0/0
  7935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7936 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7937 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7938 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7939 ;;      Totals:        10      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7940 ;;Total ram usage:       26 bytes
  7941 ;; Hardware stack levels used:    1
  7942 ;; Hardware stack levels required when called:    1
  7943 ;; This function calls:
  7944 ;;		Nothing
  7945 ;; This function is called by:
  7946 ;;		_utoa
  7947 ;; This function uses a non-reentrant model
  7948 ;;
  7949                           
  7950                           
  7951                           ;psect for function ___lodiv
  7952  28CD                     ___lodiv:	
  7953                           
  7954                           ;incstack = 0
  7955                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  7956  28CD  3072               	movlw	low ___lodiv@quotient
  7957  28CE  0086               	movwf	6
  7958  28CF  3000               	movlw	high ___lodiv@quotient
  7959  28D0  0087               	movwf	7
  7960  28D1  3008               	movlw	8
  7961  28D2  00F1               	movwf	??___lodiv
  7962  28D3  3000               	movlw	0
  7963  28D4                     u4470:	
  7964  28D4  001E               	movwi fsr1++
  7965  28D5  0BF1               	decfsz	??___lodiv,f
  7966  28D6  28D4               	goto	u4470
  7967  28D7  0020               	movlb	0	; select bank0
  7968  28D8  0820               	movf	___lodiv@divisor,w
  7969  28D9  0421               	iorwf	___lodiv@divisor+1,w
  7970  28DA  0422               	iorwf	___lodiv@divisor+2,w
  7971  28DB  0423               	iorwf	___lodiv@divisor+3,w
  7972  28DC  0424               	iorwf	___lodiv@divisor+4,w
  7973  28DD  0425               	iorwf	___lodiv@divisor+5,w
  7974  28DE  0426               	iorwf	___lodiv@divisor+6,w
  7975  28DF  0427               	iorwf	___lodiv@divisor+7,w
  7976  28E0  1903               	skipnz
  7977  28E1  2938               	goto	l1235
  7978  28E2  01FA               	clrf	___lodiv@counter
  7979  28E3  0AFA               	incf	___lodiv@counter,f
  7980  28E4                     l4317:	
  7981  28E4  1BA7               	btfsc	___lodiv@divisor+7,7
  7982  28E5  28F3               	goto	l4319
  7983  28E6  35A0               	lslf	___lodiv@divisor,f
  7984  28E7  0DA1               	rlf	___lodiv@divisor+1,f
  7985  28E8  0DA2               	rlf	___lodiv@divisor+2,f
  7986  28E9  0DA3               	rlf	___lodiv@divisor+3,f
  7987  28EA  0DA4               	rlf	___lodiv@divisor+4,f
  7988  28EB  0DA5               	rlf	___lodiv@divisor+5,f
  7989  28EC  0DA6               	rlf	___lodiv@divisor+6,f
  7990  28ED  0DA7               	rlf	___lodiv@divisor+7,f
  7991  28EE  3001               	movlw	1
  7992  28EF  00F1               	movwf	??___lodiv
  7993  28F0  0871               	movf	??___lodiv,w
  7994  28F1  07FA               	addwf	___lodiv@counter,f
  7995  28F2  28E4               	goto	l4317
  7996  28F3                     l4319:	
  7997  28F3  35F2               	lslf	___lodiv@quotient,f
  7998  28F4  0DF3               	rlf	___lodiv@quotient+1,f
  7999  28F5  0DF4               	rlf	___lodiv@quotient+2,f
  8000  28F6  0DF5               	rlf	___lodiv@quotient+3,f
  8001  28F7  0DF6               	rlf	___lodiv@quotient+4,f
  8002  28F8  0DF7               	rlf	___lodiv@quotient+5,f
  8003  28F9  0DF8               	rlf	___lodiv@quotient+6,f
  8004  28FA  0DF9               	rlf	___lodiv@quotient+7,f
  8005  28FB  0827               	movf	___lodiv@divisor+7,w
  8006  28FC  022F               	subwf	___lodiv@dividend+7,w
  8007  28FD  1D03               	skipz
  8008  28FE  2919               	goto	u4505
  8009  28FF  0826               	movf	___lodiv@divisor+6,w
  8010  2900  022E               	subwf	___lodiv@dividend+6,w
  8011  2901  1D03               	skipz
  8012  2902  2919               	goto	u4505
  8013  2903  0825               	movf	___lodiv@divisor+5,w
  8014  2904  022D               	subwf	___lodiv@dividend+5,w
  8015  2905  1D03               	skipz
  8016  2906  2919               	goto	u4505
  8017  2907  0824               	movf	___lodiv@divisor+4,w
  8018  2908  022C               	subwf	___lodiv@dividend+4,w
  8019  2909  1D03               	skipz
  8020  290A  2919               	goto	u4505
  8021  290B  0823               	movf	___lodiv@divisor+3,w
  8022  290C  022B               	subwf	___lodiv@dividend+3,w
  8023  290D  1D03               	skipz
  8024  290E  2919               	goto	u4505
  8025  290F  0822               	movf	___lodiv@divisor+2,w
  8026  2910  022A               	subwf	___lodiv@dividend+2,w
  8027  2911  1D03               	skipz
  8028  2912  2919               	goto	u4505
  8029  2913  0821               	movf	___lodiv@divisor+1,w
  8030  2914  0229               	subwf	___lodiv@dividend+1,w
  8031  2915  1D03               	skipz
  8032  2916  2919               	goto	u4505
  8033  2917  0820               	movf	___lodiv@divisor,w
  8034  2918  0228               	subwf	___lodiv@dividend,w
  8035  2919                     u4505:	
  8036  2919  1C03               	skipc
  8037  291A  292C               	goto	l4327
  8038  291B  0820               	movf	___lodiv@divisor,w
  8039  291C  02A8               	subwf	___lodiv@dividend,f
  8040  291D  0821               	movf	___lodiv@divisor+1,w
  8041  291E  3BA9               	subwfb	___lodiv@dividend+1,f
  8042  291F  0822               	movf	___lodiv@divisor+2,w
  8043  2920  3BAA               	subwfb	___lodiv@dividend+2,f
  8044  2921  0823               	movf	___lodiv@divisor+3,w
  8045  2922  3BAB               	subwfb	___lodiv@dividend+3,f
  8046  2923  0824               	movf	___lodiv@divisor+4,w
  8047  2924  3BAC               	subwfb	___lodiv@dividend+4,f
  8048  2925  0825               	movf	___lodiv@divisor+5,w
  8049  2926  3BAD               	subwfb	___lodiv@dividend+5,f
  8050  2927  0826               	movf	___lodiv@divisor+6,w
  8051  2928  3BAE               	subwfb	___lodiv@dividend+6,f
  8052  2929  0827               	movf	___lodiv@divisor+7,w
  8053  292A  3BAF               	subwfb	___lodiv@dividend+7,f
  8054  292B  1472               	bsf	___lodiv@quotient,0
  8055  292C                     l4327:	
  8056  292C  36A7               	lsrf	___lodiv@divisor+7,f
  8057  292D  0CA6               	rrf	___lodiv@divisor+6,f
  8058  292E  0CA5               	rrf	___lodiv@divisor+5,f
  8059  292F  0CA4               	rrf	___lodiv@divisor+4,f
  8060  2930  0CA3               	rrf	___lodiv@divisor+3,f
  8061  2931  0CA2               	rrf	___lodiv@divisor+2,f
  8062  2932  0CA1               	rrf	___lodiv@divisor+1,f
  8063  2933  0CA0               	rrf	___lodiv@divisor,f
  8064  2934  3001               	movlw	1
  8065  2935  02FA               	subwf	___lodiv@counter,f
  8066  2936  1D03               	btfss	3,2
  8067  2937  28F3               	goto	l4319
  8068  2938                     l1235:	
  8069  2938  0872               	movf	___lodiv@quotient,w
  8070  2939  00A0               	movwf	?___lodiv
  8071  293A  0873               	movf	___lodiv@quotient+1,w
  8072  293B  00A1               	movwf	?___lodiv+1
  8073  293C  0874               	movf	___lodiv@quotient+2,w
  8074  293D  00A2               	movwf	?___lodiv+2
  8075  293E  0875               	movf	___lodiv@quotient+3,w
  8076  293F  00A3               	movwf	?___lodiv+3
  8077  2940  0876               	movf	___lodiv@quotient+4,w
  8078  2941  00A4               	movwf	?___lodiv+4
  8079  2942  0877               	movf	___lodiv@quotient+5,w
  8080  2943  00A5               	movwf	?___lodiv+5
  8081  2944  0878               	movf	___lodiv@quotient+6,w
  8082  2945  00A6               	movwf	?___lodiv+6
  8083  2946  0879               	movf	___lodiv@quotient+7,w
  8084  2947  00A7               	movwf	?___lodiv+7
  8085  2948  0008               	return
  8086  2949                     __end_of___lodiv:	
  8087                           
  8088                           	psect	text16
  8089  35BD                     __ptext16:	
  8090 ;; *************** function _strncmp *****************
  8091 ;; Defined at:
  8092 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  8093 ;; Parameters:    Size  Location     Type
  8094 ;;  _l              2    1[COMMON] PTR const unsigned char 
  8095 ;;		 -> STR_22(18), STR_21(18), STR_20(19), STR_19(20), 
  8096 ;;		 -> STR_18(20), STR_17(21), STR_16(21), STR_15(21), 
  8097 ;;		 -> STR_14(22), STR_13(22), STR_12(21), STR_11(21), 
  8098 ;;		 -> STR_8(20), STR_7(16), STR_6(16), STR_5(3), 
  8099 ;;		 -> STR_4(4), STR_3(4), STR_2(4), STR_1(40), 
  8100 ;;  _r              2    3[COMMON] PTR const unsigned char 
  8101 ;;		 -> STR_120(3), STR_116(3), STR_111(3), STR_107(3), 
  8102 ;;		 -> STR_102(4), STR_98(4), STR_93(3), STR_88(3), 
  8103 ;;		 -> STR_83(4), STR_78(3), STR_73(3), STR_68(4), 
  8104 ;;		 -> STR_63(3), STR_58(3), STR_53(4), STR_48(3), 
  8105 ;;		 -> STR_44(3), STR_39(3), STR_35(3), STR_30(4), 
  8106 ;;		 -> STR_26(4), 
  8107 ;;  n               2    5[COMMON] unsigned int 
  8108 ;; Auto vars:     Size  Location     Type
  8109 ;;  r               2   10[COMMON] PTR const unsigned char 
  8110 ;;		 -> STR_120(3), STR_116(3), STR_111(3), STR_107(3), 
  8111 ;;		 -> STR_102(4), STR_98(4), STR_93(3), STR_88(3), 
  8112 ;;		 -> STR_83(4), STR_78(3), STR_73(3), STR_68(4), 
  8113 ;;		 -> STR_63(3), STR_58(3), STR_53(4), STR_48(3), 
  8114 ;;		 -> STR_44(3), STR_39(3), STR_35(3), STR_30(4), 
  8115 ;;		 -> STR_26(4), 
  8116 ;;  l               2    8[COMMON] PTR const unsigned char 
  8117 ;;		 -> STR_22(18), STR_21(18), STR_20(19), STR_19(20), 
  8118 ;;		 -> STR_18(20), STR_17(21), STR_16(21), STR_15(21), 
  8119 ;;		 -> STR_14(22), STR_13(22), STR_12(21), STR_11(21), 
  8120 ;;		 -> STR_8(20), STR_7(16), STR_6(16), STR_5(3), 
  8121 ;;		 -> STR_4(4), STR_3(4), STR_2(4), STR_1(40), 
  8122 ;; Return value:  Size  Location     Type
  8123 ;;                  2    1[COMMON] int 
  8124 ;; Registers used:
  8125 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  8126 ;; Tracked objects:
  8127 ;;		On entry : 0/0
  8128 ;;		On exit  : 0/0
  8129 ;;		Unchanged: 0/0
  8130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8131 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8132 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8133 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8134 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8135 ;;Total ram usage:       11 bytes
  8136 ;; Hardware stack levels used:    1
  8137 ;; Hardware stack levels required when called:    1
  8138 ;; This function calls:
  8139 ;;		Nothing
  8140 ;; This function is called by:
  8141 ;;		_vfpfcnvrt
  8142 ;; This function uses a non-reentrant model
  8143 ;;
  8144                           
  8145                           
  8146                           ;psect for function _strncmp
  8147  35BD                     _strncmp:	
  8148                           
  8149                           ;incstack = 0
  8150                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  8151  35BD  0872               	movf	strncmp@_l+1,w
  8152  35BE  00F9               	movwf	strncmp@l+1
  8153  35BF  0871               	movf	strncmp@_l,w
  8154  35C0  00F8               	movwf	strncmp@l
  8155  35C1  0874               	movf	strncmp@_r+1,w
  8156  35C2  00FB               	movwf	strncmp@r+1
  8157  35C3  0873               	movf	strncmp@_r,w
  8158  35C4  00FA               	movwf	strncmp@r
  8159  35C5  3001               	movlw	1
  8160  35C6  02F5               	subwf	strncmp@n,f
  8161  35C7  3000               	movlw	0
  8162  35C8  3BF6               	subwfb	strncmp@n+1,f
  8163  35C9  0A75               	incf	strncmp@n,w
  8164  35CA  1D03               	skipz
  8165  35CB  2DF7               	goto	l4679
  8166  35CC  0A76               	incf	strncmp@n+1,w
  8167  35CD  1D03               	btfss	3,2
  8168  35CE  2DF7               	goto	l4679
  8169  35CF  01F1               	clrf	?_strncmp
  8170  35D0  01F2               	clrf	?_strncmp+1
  8171  35D1  0008               	return
  8172  35D2                     l4681:	
  8173  35D2  087A               	movf	strncmp@r,w
  8174  35D3  0084               	movwf	4
  8175  35D4  087B               	movf	strncmp@r+1,w
  8176  35D5  0085               	movwf	5
  8177  35D6  0012               	moviw fsr0++
  8178  35D7  1903               	btfsc	3,2
  8179  35D8  2DFE               	goto	l4687
  8180  35D9  0875               	movf	strncmp@n,w
  8181  35DA  0476               	iorwf	strncmp@n+1,w
  8182  35DB  1903               	btfsc	3,2
  8183  35DC  2DFE               	goto	l4687
  8184  35DD  087A               	movf	strncmp@r,w
  8185  35DE  0084               	movwf	4
  8186  35DF  087B               	movf	strncmp@r+1,w
  8187  35E0  0085               	movwf	5
  8188  35E1  0800               	movf	0,w	;code access
  8189  35E2  00F7               	movwf	??_strncmp
  8190  35E3  0878               	movf	strncmp@l,w
  8191  35E4  0084               	movwf	4
  8192  35E5  0879               	movf	strncmp@l+1,w
  8193  35E6  0085               	movwf	5
  8194  35E7  0800               	movf	0,w	;code access
  8195  35E8  0677               	xorwf	??_strncmp,w
  8196  35E9  1D03               	btfss	3,2
  8197  35EA  2DFE               	goto	l4687
  8198  35EB  3001               	movlw	1
  8199  35EC  07F8               	addwf	strncmp@l,f
  8200  35ED  3000               	movlw	0
  8201  35EE  3DF9               	addwfc	strncmp@l+1,f
  8202  35EF  3001               	movlw	1
  8203  35F0  07FA               	addwf	strncmp@r,f
  8204  35F1  3000               	movlw	0
  8205  35F2  3DFB               	addwfc	strncmp@r+1,f
  8206  35F3  3001               	movlw	1
  8207  35F4  02F5               	subwf	strncmp@n,f
  8208  35F5  3000               	movlw	0
  8209  35F6  3BF6               	subwfb	strncmp@n+1,f
  8210  35F7                     l4679:	
  8211  35F7  0878               	movf	strncmp@l,w
  8212  35F8  0084               	movwf	4
  8213  35F9  0879               	movf	strncmp@l+1,w
  8214  35FA  0085               	movwf	5
  8215  35FB  0012               	moviw fsr0++
  8216  35FC  1D03               	btfss	3,2
  8217  35FD  2DD2               	goto	l4681
  8218  35FE                     l4687:	
  8219  35FE  0878               	movf	strncmp@l,w
  8220  35FF  0084               	movwf	4
  8221  3600  0879               	movf	strncmp@l+1,w
  8222  3601  0085               	movwf	5
  8223  3602  0800               	movf	0,w	;code access
  8224  3603  00F7               	movwf	??_strncmp
  8225  3604  087A               	movf	strncmp@r,w
  8226  3605  0084               	movwf	4
  8227  3606  087B               	movf	strncmp@r+1,w
  8228  3607  0085               	movwf	5
  8229  3608  0800               	movf	0,w	;code access
  8230  3609  0277               	subwf	??_strncmp,w
  8231  360A  00F1               	movwf	?_strncmp
  8232  360B  01F2               	clrf	?_strncmp+1
  8233  360C  1C03               	skipc
  8234  360D  03F2               	decf	?_strncmp+1,f
  8235  360E  0008               	return
  8236  360F                     __end_of_strncmp:	
  8237                           
  8238                           	psect	text17
  8239  2DA0                     __ptext17:	
  8240 ;; *************** function _stoa *****************
  8241 ;; Defined at:
  8242 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8243 ;; Parameters:    Size  Location     Type
  8244 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  8245 ;;		 -> vsnprintf@f(6), 
  8246 ;;  s               2    2[BANK0 ] PTR unsigned char 
  8247 ;;		 -> ?_snprintf(2), sp__logf(4), adcGain(2), 
  8248 ;; Auto vars:     Size  Location     Type
  8249 ;;  nuls            7    4[BANK0 ] unsigned char [7]
  8250 ;;  l               2   19[BANK0 ] int 
  8251 ;;  p               2   17[BANK0 ] int 
  8252 ;;  cp              2   15[BANK0 ] PTR unsigned char 
  8253 ;;		 -> ?_snprintf(2), stoa@nuls(7), sp__logf(4), adcGain(2), 
  8254 ;;  w               2   13[BANK0 ] int 
  8255 ;;  i               2   11[BANK0 ] int 
  8256 ;; Return value:  Size  Location     Type
  8257 ;;                  2    0[BANK0 ] int 
  8258 ;; Registers used:
  8259 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8260 ;; Tracked objects:
  8261 ;;		On entry : 0/0
  8262 ;;		On exit  : 0/0
  8263 ;;		Unchanged: 0/0
  8264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8265 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8266 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8267 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8268 ;;      Totals:         2      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8269 ;;Total ram usage:       23 bytes
  8270 ;; Hardware stack levels used:    1
  8271 ;; Hardware stack levels required when called:    3
  8272 ;; This function calls:
  8273 ;;		_fputc
  8274 ;;		_strlen
  8275 ;; This function is called by:
  8276 ;;		_vfpfcnvrt
  8277 ;; This function uses a non-reentrant model
  8278 ;;
  8279                           
  8280                           
  8281                           ;psect for function _stoa
  8282  2DA0                     _stoa:	
  8283                           
  8284                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  8285                           
  8286                           ;incstack = 0
  8287                           ; Regs used in _stoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8288  2DA0  304A               	movlw	low stoa@F1152
  8289  2DA1  0086               	movwf	6
  8290  2DA2  3002               	movlw	high stoa@F1152
  8291  2DA3  0087               	movwf	7
  8292  2DA4  3024               	movlw	low stoa@nuls
  8293  2DA5  0084               	movwf	4
  8294  2DA6  3000               	movlw	high stoa@nuls
  8295  2DA7  0085               	movwf	5
  8296  2DA8  3007               	movlw	7
  8297  2DA9  00FA               	movwf	??_stoa
  8298  2DAA                     u4850:	
  8299  2DAA  0016               	moviw fsr1++
  8300  2DAB  001A               	movwi fsr0++
  8301  2DAC  0BFA               	decfsz	??_stoa,f
  8302  2DAD  2DAA               	goto	u4850
  8303                           
  8304                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  8305  2DAE  0020               	movlb	0	; select bank0
  8306  2DAF  0823               	movf	stoa@s+1,w
  8307  2DB0  00B0               	movwf	stoa@cp+1
  8308  2DB1  0822               	movf	stoa@s,w
  8309  2DB2  00AF               	movwf	stoa@cp
  8310                           
  8311                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  8312  2DB3  082F               	movf	stoa@cp,w
  8313  2DB4  0430               	iorwf	stoa@cp+1,w
  8314  2DB5  1D03               	btfss	3,2
  8315  2DB6  2DBB               	goto	l4481
  8316                           
  8317                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  8318  2DB7  3024               	movlw	low stoa@nuls
  8319  2DB8  00AF               	movwf	stoa@cp
  8320  2DB9  3000               	movlw	high stoa@nuls
  8321  2DBA  00B0               	movwf	stoa@cp+1
  8322  2DBB                     l4481:	
  8323                           
  8324                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  8325  2DBB  0830               	movf	stoa@cp+1,w
  8326  2DBC  00F2               	movwf	strlen@s+1
  8327  2DBD  082F               	movf	stoa@cp,w
  8328  2DBE  00F1               	movwf	strlen@s
  8329  2DBF  31B2  221C  31AD   	fcall	_strlen
  8330  2DC2  0872               	movf	?_strlen+1,w
  8331  2DC3  0020               	movlb	0	; select bank0
  8332  2DC4  00B4               	movwf	stoa@l+1
  8333  2DC5  0871               	movf	?_strlen,w
  8334  2DC6  00B3               	movwf	stoa@l
  8335                           
  8336                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  8337  2DC7  0022               	movlb	2	; select bank2
  8338  2DC8  0869               	movf	(_prec+1)^(0+256),w
  8339  2DC9  0020               	movlb	0	; select bank0
  8340  2DCA  00B2               	movwf	stoa@p+1
  8341  2DCB  0022               	movlb	2	; select bank2
  8342  2DCC  0868               	movf	_prec^(0+256),w
  8343  2DCD  0020               	movlb	0	; select bank0
  8344  2DCE  00B1               	movwf	stoa@p
  8345                           
  8346                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  8347  2DCF  1BB2               	btfsc	stoa@p+1,7
  8348  2DD0  2DE2               	goto	l857
  8349  2DD1  0832               	movf	stoa@p+1,w
  8350  2DD2  3A80               	xorlw	128
  8351  2DD3  00FA               	movwf	??_stoa
  8352  2DD4  0834               	movf	stoa@l+1,w
  8353  2DD5  3A80               	xorlw	128
  8354  2DD6  027A               	subwf	??_stoa,w
  8355  2DD7  1D03               	skipz
  8356  2DD8  2DDB               	goto	u4885
  8357  2DD9  0833               	movf	stoa@l,w
  8358  2DDA  0231               	subwf	stoa@p,w
  8359  2DDB                     u4885:	
  8360  2DDB  1803               	btfsc	3,0
  8361  2DDC  2DE2               	goto	l857
  8362  2DDD  0020               	movlb	0	; select bank0
  8363  2DDE  0832               	movf	stoa@p+1,w
  8364  2DDF  00B4               	movwf	stoa@l+1
  8365  2DE0  0831               	movf	stoa@p,w
  8366  2DE1  00B3               	movwf	stoa@l
  8367  2DE2                     l857:	
  8368                           
  8369                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  8370  2DE2  0020               	movlb	0	; select bank0
  8371  2DE3  0834               	movf	stoa@l+1,w
  8372  2DE4  00B2               	movwf	stoa@p+1
  8373  2DE5  0833               	movf	stoa@l,w
  8374  2DE6  00B1               	movwf	stoa@p
  8375                           
  8376                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  8377  2DE7  0022               	movlb	2	; select bank2
  8378  2DE8  0867               	movf	(_width+1)^(0+256),w
  8379  2DE9  0020               	movlb	0	; select bank0
  8380  2DEA  00AE               	movwf	stoa@w+1
  8381  2DEB  0022               	movlb	2	; select bank2
  8382  2DEC  0866               	movf	_width^(0+256),w
  8383  2DED  0020               	movlb	0	; select bank0
  8384  2DEE  00AD               	movwf	stoa@w
  8385                           
  8386                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  8387  2DEF  0022               	movlb	2	; select bank2
  8388  2DF0  1C6A               	btfss	_flags^(0+256),0
  8389  2DF1  2E04               	goto	l4499
  8390  2DF2  2E11               	goto	l4501
  8391  2DF3                     l4495:	
  8392                           
  8393                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  8394  2DF3  3020               	movlw	32
  8395  2DF4  00F1               	movwf	fputc@c
  8396  2DF5  3000               	movlw	0
  8397  2DF6  00F2               	movwf	fputc@c+1
  8398  2DF7  0020               	movlb	0	; select bank0
  8399  2DF8  0821               	movf	stoa@fp+1,w
  8400  2DF9  00F4               	movwf	fputc@fp+1
  8401  2DFA  0820               	movf	stoa@fp,w
  8402  2DFB  00F3               	movwf	fputc@fp
  8403  2DFC  31B6  260F  31AD   	fcall	_fputc
  8404                           
  8405                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  8406  2DFF  3001               	movlw	1
  8407  2E00  0020               	movlb	0	; select bank0
  8408  2E01  07B3               	addwf	stoa@l,f
  8409  2E02  3000               	movlw	0
  8410  2E03  3DB4               	addwfc	stoa@l+1,f
  8411  2E04                     l4499:	
  8412                           
  8413                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  8414  2E04  0020               	movlb	0	; select bank0
  8415  2E05  0834               	movf	stoa@l+1,w
  8416  2E06  3A80               	xorlw	128
  8417  2E07  00FA               	movwf	??_stoa
  8418  2E08  082E               	movf	stoa@w+1,w
  8419  2E09  3A80               	xorlw	128
  8420  2E0A  027A               	subwf	??_stoa,w
  8421  2E0B  1D03               	skipz
  8422  2E0C  2E0F               	goto	u4905
  8423  2E0D  082D               	movf	stoa@w,w
  8424  2E0E  0233               	subwf	stoa@l,w
  8425  2E0F                     u4905:	
  8426  2E0F  1C03               	skipc
  8427  2E10  2DF3               	goto	l4495
  8428  2E11                     l4501:	
  8429                           
  8430                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  8431  2E11  0020               	movlb	0	; select bank0
  8432  2E12  01AB               	clrf	stoa@i
  8433  2E13  01AC               	clrf	stoa@i+1
  8434  2E14                     l4509:	
  8435                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8436                           
  8437                           
  8438                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8439  2E14  082C               	movf	stoa@i+1,w
  8440  2E15  3A80               	xorlw	128
  8441  2E16  00FA               	movwf	??_stoa
  8442  2E17  0832               	movf	stoa@p+1,w
  8443  2E18  3A80               	xorlw	128
  8444  2E19  027A               	subwf	??_stoa,w
  8445  2E1A  1D03               	skipz
  8446  2E1B  2E1E               	goto	u4915
  8447  2E1C  0831               	movf	stoa@p,w
  8448  2E1D  022B               	subwf	stoa@i,w
  8449  2E1E                     u4915:	
  8450  2E1E  1803               	btfsc	3,0
  8451  2E1F  2E3D               	goto	l866
  8452                           
  8453                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  8454  2E20  0020               	movlb	0	; select bank0
  8455  2E21  082F               	movf	stoa@cp,w
  8456  2E22  0086               	movwf	6
  8457  2E23  0830               	movf	stoa@cp+1,w
  8458  2E24  0087               	movwf	7
  8459  2E25  0801               	movf	1,w
  8460  2E26  00FA               	movwf	??_stoa
  8461  2E27  01FB               	clrf	??_stoa+1
  8462  2E28  087A               	movf	??_stoa,w
  8463  2E29  00F1               	movwf	fputc@c
  8464  2E2A  087B               	movf	??_stoa+1,w
  8465  2E2B  00F2               	movwf	fputc@c+1
  8466  2E2C  0821               	movf	stoa@fp+1,w
  8467  2E2D  00F4               	movwf	fputc@fp+1
  8468  2E2E  0820               	movf	stoa@fp,w
  8469  2E2F  00F3               	movwf	fputc@fp
  8470  2E30  31B6  260F  31AD   	fcall	_fputc
  8471                           
  8472                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  8473  2E33  3001               	movlw	1
  8474  2E34  0020               	movlb	0	; select bank0
  8475  2E35  07AF               	addwf	stoa@cp,f
  8476  2E36  3000               	movlw	0
  8477  2E37  3DB0               	addwfc	stoa@cp+1,f
  8478                           
  8479                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  8480  2E38  3001               	movlw	1
  8481  2E39  07AB               	addwf	stoa@i,f
  8482  2E3A  3000               	movlw	0
  8483  2E3B  3DAC               	addwfc	stoa@i+1,f
  8484  2E3C  2E14               	goto	l4509
  8485  2E3D                     l866:	
  8486                           
  8487                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  8488  2E3D  0022               	movlb	2	; select bank2
  8489  2E3E  186A               	btfsc	_flags^(0+256),0
  8490  2E3F  2E52               	goto	l4517
  8491  2E40  2E5F               	goto	l4519
  8492  2E41                     l4513:	
  8493                           
  8494                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  8495  2E41  3020               	movlw	32
  8496  2E42  00F1               	movwf	fputc@c
  8497  2E43  3000               	movlw	0
  8498  2E44  00F2               	movwf	fputc@c+1
  8499  2E45  0020               	movlb	0	; select bank0
  8500  2E46  0821               	movf	stoa@fp+1,w
  8501  2E47  00F4               	movwf	fputc@fp+1
  8502  2E48  0820               	movf	stoa@fp,w
  8503  2E49  00F3               	movwf	fputc@fp
  8504  2E4A  31B6  260F  31AD   	fcall	_fputc
  8505                           
  8506                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  8507  2E4D  3001               	movlw	1
  8508  2E4E  0020               	movlb	0	; select bank0
  8509  2E4F  07B3               	addwf	stoa@l,f
  8510  2E50  3000               	movlw	0
  8511  2E51  3DB4               	addwfc	stoa@l+1,f
  8512  2E52                     l4517:	
  8513                           
  8514                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  8515  2E52  0020               	movlb	0	; select bank0
  8516  2E53  0834               	movf	stoa@l+1,w
  8517  2E54  3A80               	xorlw	128
  8518  2E55  00FA               	movwf	??_stoa
  8519  2E56  082E               	movf	stoa@w+1,w
  8520  2E57  3A80               	xorlw	128
  8521  2E58  027A               	subwf	??_stoa,w
  8522  2E59  1D03               	skipz
  8523  2E5A  2E5D               	goto	u4935
  8524  2E5B  082D               	movf	stoa@w,w
  8525  2E5C  0233               	subwf	stoa@l,w
  8526  2E5D                     u4935:	
  8527  2E5D  1C03               	skipc
  8528  2E5E  2E41               	goto	l4513
  8529  2E5F                     l4519:	
  8530                           
  8531                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  8532  2E5F  0020               	movlb	0	; select bank0
  8533  2E60  0834               	movf	stoa@l+1,w
  8534  2E61  00A1               	movwf	?_stoa+1
  8535  2E62  0833               	movf	stoa@l,w
  8536  2E63  00A0               	movwf	?_stoa
  8537  2E64  0008               	return
  8538  2E65                     __end_of_stoa:	
  8539                           
  8540                           	psect	text18
  8541  22F5                     __ptext18:	
  8542 ;; *************** function _otoa *****************
  8543 ;; Defined at:
  8544 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8545 ;; Parameters:    Size  Location     Type
  8546 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  8547 ;;		 -> vsnprintf@f(6), 
  8548 ;;  d               8   18[BANK0 ] unsigned long long 
  8549 ;; Auto vars:     Size  Location     Type
  8550 ;;  n               8   40[BANK0 ] unsigned long long 
  8551 ;;  i               2   48[BANK0 ] int 
  8552 ;;  w               2   38[BANK0 ] int 
  8553 ;;  t               2   36[BANK0 ] int 
  8554 ;;  p               2   34[BANK0 ] int 
  8555 ;; Return value:  Size  Location     Type
  8556 ;;                  2   16[BANK0 ] int 
  8557 ;; Registers used:
  8558 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8559 ;; Tracked objects:
  8560 ;;		On entry : 0/0
  8561 ;;		On exit  : 0/0
  8562 ;;		Unchanged: 0/0
  8563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8564 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8565 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8566 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8567 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8568 ;;Total ram usage:       34 bytes
  8569 ;; Hardware stack levels used:    1
  8570 ;; Hardware stack levels required when called:    5
  8571 ;; This function calls:
  8572 ;;		_pad
  8573 ;; This function is called by:
  8574 ;;		_vfpfcnvrt
  8575 ;; This function uses a non-reentrant model
  8576 ;;
  8577                           
  8578                           
  8579                           ;psect for function _otoa
  8580  22F5                     _otoa:	
  8581                           
  8582                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  8583                           
  8584                           ;incstack = 0
  8585                           ; Regs used in _otoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8586  22F5  0022               	movlb	2	; select bank2
  8587  22F6  1BE9               	btfsc	(_prec+1)^(0+256),7
  8588  22F7  2AFC               	goto	l835
  8589                           
  8590                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
  8591  22F8  30FD               	movlw	253
  8592  22F9  05EA               	andwf	_flags^(0+256),f
  8593  22FA  30FF               	movlw	255
  8594  22FB  05EB               	andwf	(_flags+1)^(0+256),f
  8595  22FC                     l835:	
  8596                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 515:     }
  8597                           
  8598                           
  8599                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
  8600  22FC  0869               	movf	(_prec+1)^(0+256),w
  8601  22FD  3A80               	xorlw	128
  8602  22FE  0020               	movlb	0	; select bank0
  8603  22FF  00BA               	movwf	??_otoa
  8604  2300  3080               	movlw	128
  8605  2301  023A               	subwf	??_otoa,w
  8606  2302  1D03               	skipz
  8607  2303  2B07               	goto	u8215
  8608  2304  3001               	movlw	1
  8609  2305  0022               	movlb	2	; select bank2
  8610  2306  0268               	subwf	_prec^(0+256),w
  8611  2307                     u8215:	
  8612  2307  1803               	skipnc
  8613  2308  2B0F               	goto	l6683
  8614  2309  3001               	movlw	1
  8615  230A  0020               	movlb	0	; select bank0
  8616  230B  00C2               	movwf	otoa@p
  8617  230C  3000               	movlw	0
  8618  230D  00C3               	movwf	otoa@p+1
  8619  230E  2B17               	goto	l839
  8620  230F                     l6683:	
  8621  230F  0022               	movlb	2	; select bank2
  8622  2310  0869               	movf	(_prec+1)^(0+256),w
  8623  2311  0020               	movlb	0	; select bank0
  8624  2312  00C3               	movwf	otoa@p+1
  8625  2313  0022               	movlb	2	; select bank2
  8626  2314  0868               	movf	_prec^(0+256),w
  8627  2315  0020               	movlb	0	; select bank0
  8628  2316  00C2               	movwf	otoa@p
  8629  2317                     l839:	
  8630                           
  8631                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
  8632  2317  0022               	movlb	2	; select bank2
  8633  2318  0867               	movf	(_width+1)^(0+256),w
  8634  2319  0020               	movlb	0	; select bank0
  8635  231A  00C7               	movwf	otoa@w+1
  8636  231B  0022               	movlb	2	; select bank2
  8637  231C  0866               	movf	_width^(0+256),w
  8638  231D  0020               	movlb	0	; select bank0
  8639  231E  00C6               	movwf	otoa@w
  8640                           
  8641                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
  8642  231F  0832               	movf	otoa@d,w
  8643  2320  00C8               	movwf	otoa@n
  8644  2321  0833               	movf	otoa@d+1,w
  8645  2322  00C9               	movwf	otoa@n+1
  8646  2323  0834               	movf	otoa@d+2,w
  8647  2324  00CA               	movwf	otoa@n+2
  8648  2325  0835               	movf	otoa@d+3,w
  8649  2326  00CB               	movwf	otoa@n+3
  8650  2327  0836               	movf	otoa@d+4,w
  8651  2328  00CC               	movwf	otoa@n+4
  8652  2329  0837               	movf	otoa@d+5,w
  8653  232A  00CD               	movwf	otoa@n+5
  8654  232B  0838               	movf	otoa@d+6,w
  8655  232C  00CE               	movwf	otoa@n+6
  8656  232D  0839               	movf	otoa@d+7,w
  8657  232E  00CF               	movwf	otoa@n+7
  8658                           
  8659                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
  8660  232F  301F               	movlw	31
  8661  2330  00D0               	movwf	otoa@i
  8662  2331  3000               	movlw	0
  8663  2332  00D1               	movwf	otoa@i+1
  8664                           
  8665                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
  8666  2333  0024               	movlb	4	; select bank4
  8667  2334  01C9               	clrf	(_dbuf^(0+512)+31)
  8668                           
  8669                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
  8670  2335  0020               	movlb	0	; select bank0
  8671  2336  01C4               	clrf	otoa@t
  8672  2337  01C5               	clrf	otoa@t+1
  8673                           
  8674                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8675  2338  2BAC               	goto	l840
  8676  2339                     l6701:	
  8677  2339  0020               	movlb	0	; select bank0
  8678  233A  0848               	movf	otoa@n,w
  8679  233B  0449               	iorwf	otoa@n+1,w
  8680  233C  044A               	iorwf	otoa@n+2,w
  8681  233D  044B               	iorwf	otoa@n+3,w
  8682  233E  044C               	iorwf	otoa@n+4,w
  8683  233F  044D               	iorwf	otoa@n+5,w
  8684  2340  044E               	iorwf	otoa@n+6,w
  8685  2341  044F               	iorwf	otoa@n+7,w
  8686  2342  1D03               	skipz
  8687  2343  2B5E               	goto	l6691
  8688  2344  0843               	movf	otoa@p+1,w
  8689  2345  3A80               	xorlw	128
  8690  2346  00BA               	movwf	??_otoa
  8691  2347  3080               	movlw	128
  8692  2348  023A               	subwf	??_otoa,w
  8693  2349  1D03               	skipz
  8694  234A  2B4D               	goto	u8255
  8695  234B  3001               	movlw	1
  8696  234C  0242               	subwf	otoa@p,w
  8697  234D                     u8255:	
  8698  234D  1803               	skipnc
  8699  234E  2B5E               	goto	l6691
  8700  234F  0020               	movlb	0	; select bank0
  8701  2350  0847               	movf	otoa@w+1,w
  8702  2351  3A80               	xorlw	128
  8703  2352  00BA               	movwf	??_otoa
  8704  2353  3080               	movlw	128
  8705  2354  023A               	subwf	??_otoa,w
  8706  2355  1D03               	skipz
  8707  2356  2B59               	goto	u8265
  8708  2357  3001               	movlw	1
  8709  2358  0246               	subwf	otoa@w,w
  8710  2359                     u8265:	
  8711  2359  1C03               	skipc
  8712  235A  2BB7               	goto	l846
  8713  235B  0022               	movlb	2	; select bank2
  8714  235C  1CEA               	btfss	_flags^(0+256),1
  8715  235D  2BB7               	goto	l846
  8716  235E                     l6691:	
  8717                           
  8718                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
  8719  235E  30FF               	movlw	255
  8720  235F  0020               	movlb	0	; select bank0
  8721  2360  07D0               	addwf	otoa@i,f
  8722  2361  30FF               	movlw	255
  8723  2362  3DD1               	addwfc	otoa@i+1,f
  8724                           
  8725                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
  8726  2363  3007               	movlw	7
  8727  2364  0548               	andwf	otoa@n,w
  8728  2365  00C4               	movwf	otoa@t
  8729  2366  3000               	movlw	0
  8730  2367  0549               	andwf	otoa@n+1,w
  8731  2368  00C5               	movwf	otoa@t+1
  8732                           
  8733                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
  8734  2369  0844               	movf	otoa@t,w
  8735  236A  3E30               	addlw	48
  8736  236B  00BA               	movwf	??_otoa
  8737  236C  0850               	movf	otoa@i,w
  8738  236D  3E2A               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8739  236E  0086               	movwf	6
  8740  236F  3002               	movlw	2	; select bank4/5
  8741  2370  0087               	movwf	7
  8742  2371  083A               	movf	??_otoa,w
  8743  2372  0081               	movwf	1
  8744                           
  8745                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
  8746  2373  30FF               	movlw	255
  8747  2374  07C2               	addwf	otoa@p,f
  8748  2375  30FF               	movlw	255
  8749  2376  3DC3               	addwfc	otoa@p+1,f
  8750                           
  8751                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
  8752  2377  30FF               	movlw	255
  8753  2378  07C6               	addwf	otoa@w,f
  8754  2379  30FF               	movlw	255
  8755  237A  3DC7               	addwfc	otoa@w+1,f
  8756                           
  8757                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
  8758  237B  3048               	movlw	low otoa@n
  8759  237C  0086               	movwf	6
  8760  237D  3000               	movlw	high otoa@n
  8761  237E  0087               	movwf	7
  8762  237F  3F40               	moviw [0]fsr1
  8763  2380  00BA               	movwf	??_otoa
  8764  2381  3F41               	moviw [1]fsr1
  8765  2382  00BB               	movwf	??_otoa+1
  8766  2383  3F42               	moviw [2]fsr1
  8767  2384  00BC               	movwf	??_otoa+2
  8768  2385  3F43               	moviw [3]fsr1
  8769  2386  00BD               	movwf	??_otoa+3
  8770  2387  3F44               	moviw [4]fsr1
  8771  2388  00BE               	movwf	??_otoa+4
  8772  2389  3F45               	moviw [5]fsr1
  8773  238A  00BF               	movwf	??_otoa+5
  8774  238B  3F46               	moviw [6]fsr1
  8775  238C  00C0               	movwf	??_otoa+6
  8776  238D  3F47               	moviw [7]fsr1
  8777  238E  00C1               	movwf	??_otoa+7
  8778  238F  3003               	movlw	3
  8779  2390                     u8225:	
  8780  2390  0020               	movlb	0	; select bank0
  8781  2391  36C1               	lsrf	??_otoa+7,f
  8782  2392  0CC0               	rrf	??_otoa+6,f
  8783  2393  0CBF               	rrf	??_otoa+5,f
  8784  2394  0CBE               	rrf	??_otoa+4,f
  8785  2395  0CBD               	rrf	??_otoa+3,f
  8786  2396  0CBC               	rrf	??_otoa+2,f
  8787  2397  0CBB               	rrf	??_otoa+1,f
  8788  2398  0CBA               	rrf	??_otoa,f
  8789  2399  0B89               	decfsz	9,f
  8790  239A  2B90               	goto	u8225
  8791  239B  0020               	movlb	0	; select bank0
  8792  239C  0841               	movf	??_otoa+7,w
  8793  239D  00CF               	movwf	otoa@n+7
  8794  239E  0840               	movf	??_otoa+6,w
  8795  239F  00CE               	movwf	otoa@n+6
  8796  23A0  083F               	movf	??_otoa+5,w
  8797  23A1  00CD               	movwf	otoa@n+5
  8798  23A2  083E               	movf	??_otoa+4,w
  8799  23A3  00CC               	movwf	otoa@n+4
  8800  23A4  083D               	movf	??_otoa+3,w
  8801  23A5  00CB               	movwf	otoa@n+3
  8802  23A6  083C               	movf	??_otoa+2,w
  8803  23A7  00CA               	movwf	otoa@n+2
  8804  23A8  083B               	movf	??_otoa+1,w
  8805  23A9  00C9               	movwf	otoa@n+1
  8806  23AA  083A               	movf	??_otoa,w
  8807  23AB  00C8               	movwf	otoa@n
  8808  23AC                     l840:	
  8809                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 531:     }
  8810                           
  8811                           
  8812                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8813  23AC  0851               	movf	otoa@i+1,w
  8814  23AD  3A80               	xorlw	128
  8815  23AE  00BA               	movwf	??_otoa
  8816  23AF  3080               	movlw	128
  8817  23B0  023A               	subwf	??_otoa,w
  8818  23B1  1D03               	skipz
  8819  23B2  2BB5               	goto	u8235
  8820  23B3  3001               	movlw	1
  8821  23B4  0250               	subwf	otoa@i,w
  8822  23B5                     u8235:	
  8823  23B5  1803               	btfsc	3,0
  8824  23B6  2B39               	goto	l6701
  8825  23B7                     l846:	
  8826                           
  8827                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
  8828  23B7  0022               	movlb	2	; select bank2
  8829  23B8  1E6A               	btfss	_flags^(0+256),4
  8830  23B9  2BD0               	goto	l6717
  8831  23BA  0020               	movlb	0	; select bank0
  8832  23BB  0844               	movf	otoa@t,w
  8833  23BC  0445               	iorwf	otoa@t+1,w
  8834  23BD  1903               	btfsc	3,2
  8835  23BE  2BD0               	goto	l6717
  8836                           
  8837                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
  8838  23BF  30FF               	movlw	255
  8839  23C0  07D0               	addwf	otoa@i,f
  8840  23C1  30FF               	movlw	255
  8841  23C2  3DD1               	addwfc	otoa@i+1,f
  8842                           
  8843                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
  8844  23C3  3030               	movlw	48
  8845  23C4  00BA               	movwf	??_otoa
  8846  23C5  0850               	movf	otoa@i,w
  8847  23C6  3E2A               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8848  23C7  0086               	movwf	6
  8849  23C8  3002               	movlw	2	; select bank4/5
  8850  23C9  0087               	movwf	7
  8851  23CA  083A               	movf	??_otoa,w
  8852  23CB  0081               	movwf	1
  8853                           
  8854                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
  8855  23CC  30FF               	movlw	255
  8856  23CD  07C6               	addwf	otoa@w,f
  8857  23CE  30FF               	movlw	255
  8858  23CF  3DC7               	addwfc	otoa@w+1,f
  8859  23D0                     l6717:	
  8860                           
  8861                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
  8862  23D0  0020               	movlb	0	; select bank0
  8863  23D1  0831               	movf	otoa@fp+1,w
  8864  23D2  00A7               	movwf	pad@fp+1
  8865  23D3  0830               	movf	otoa@fp,w
  8866  23D4  00A6               	movwf	pad@fp
  8867  23D5  0850               	movf	otoa@i,w
  8868  23D6  3E2A               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8869  23D7  00BA               	movwf	??_otoa
  8870  23D8  083A               	movf	??_otoa,w
  8871  23D9  00A8               	movwf	pad@buf
  8872  23DA  0847               	movf	otoa@w+1,w
  8873  23DB  00AA               	movwf	pad@p+1
  8874  23DC  0846               	movf	otoa@w,w
  8875  23DD  00A9               	movwf	pad@p
  8876  23DE  31A8  2000         	fcall	_pad
  8877  23E0  0020               	movlb	0	; select bank0
  8878  23E1  0827               	movf	?_pad+1,w
  8879  23E2  00B1               	movwf	?_otoa+1
  8880  23E3  0826               	movf	?_pad,w
  8881  23E4  00B0               	movwf	?_otoa
  8882  23E5  0008               	return
  8883  23E6                     __end_of_otoa:	
  8884                           
  8885                           	psect	text19
  8886  1A36                     __ptext19:	
  8887 ;; *************** function _dtoa *****************
  8888 ;; Defined at:
  8889 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8890 ;; Parameters:    Size  Location     Type
  8891 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  8892 ;;		 -> vsnprintf@f(6), 
  8893 ;;  d               8   18[BANK0 ] long long 
  8894 ;; Auto vars:     Size  Location     Type
  8895 ;;  n               8   37[BANK0 ] long long 
  8896 ;;  i               2   45[BANK0 ] int 
  8897 ;;  s               2   35[BANK0 ] int 
  8898 ;;  w               2   33[BANK0 ] int 
  8899 ;;  p               2   31[BANK0 ] int 
  8900 ;; Return value:  Size  Location     Type
  8901 ;;                  2   16[BANK0 ] int 
  8902 ;; Registers used:
  8903 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8904 ;; Tracked objects:
  8905 ;;		On entry : 0/0
  8906 ;;		On exit  : 0/0
  8907 ;;		Unchanged: 0/0
  8908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8909 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8910 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8911 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8912 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8913 ;;Total ram usage:       31 bytes
  8914 ;; Hardware stack levels used:    1
  8915 ;; Hardware stack levels required when called:    5
  8916 ;; This function calls:
  8917 ;;		___aodiv
  8918 ;;		___aomod
  8919 ;;		_abs
  8920 ;;		_pad
  8921 ;; This function is called by:
  8922 ;;		_vfpfcnvrt
  8923 ;; This function uses a non-reentrant model
  8924 ;;
  8925                           
  8926                           
  8927                           ;psect for function _dtoa
  8928  1A36                     _dtoa:	
  8929                           
  8930                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  8931                           
  8932                           ;incstack = 0
  8933                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8934  1A36  0020               	movlb	0	; select bank0
  8935  1A37  0832               	movf	dtoa@d,w
  8936  1A38  00C5               	movwf	dtoa@n
  8937  1A39  0833               	movf	dtoa@d+1,w
  8938  1A3A  00C6               	movwf	dtoa@n+1
  8939  1A3B  0834               	movf	dtoa@d+2,w
  8940  1A3C  00C7               	movwf	dtoa@n+2
  8941  1A3D  0835               	movf	dtoa@d+3,w
  8942  1A3E  00C8               	movwf	dtoa@n+3
  8943  1A3F  0836               	movf	dtoa@d+4,w
  8944  1A40  00C9               	movwf	dtoa@n+4
  8945  1A41  0837               	movf	dtoa@d+5,w
  8946  1A42  00CA               	movwf	dtoa@n+5
  8947  1A43  0838               	movf	dtoa@d+6,w
  8948  1A44  00CB               	movwf	dtoa@n+6
  8949  1A45  0839               	movf	dtoa@d+7,w
  8950  1A46  00CC               	movwf	dtoa@n+7
  8951                           
  8952                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  8953  1A47  3045               	movlw	low dtoa@n
  8954  1A48  0086               	movwf	6
  8955  1A49  3000               	movlw	high dtoa@n
  8956  1A4A  0087               	movwf	7
  8957  1A4B  3F47               	moviw [7]fsr1
  8958  1A4C  00BA               	movwf	??_dtoa
  8959  1A4D  1FBA               	btfss	??_dtoa,7
  8960  1A4E  2A51               	goto	u8040
  8961  1A4F  3001               	movlw	1
  8962  1A50  2A52               	goto	u8050
  8963  1A51                     u8040:	
  8964  1A51  3000               	movlw	0
  8965  1A52                     u8050:	
  8966  1A52  0020               	movlb	0	; select bank0
  8967  1A53  00BB               	movwf	??_dtoa+1
  8968  1A54  01BC               	clrf	??_dtoa+2
  8969  1A55  083B               	movf	??_dtoa+1,w
  8970  1A56  00C3               	movwf	dtoa@s
  8971  1A57  083C               	movf	??_dtoa+2,w
  8972  1A58  00C4               	movwf	dtoa@s+1
  8973                           
  8974                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  8975  1A59  0843               	movf	dtoa@s,w
  8976  1A5A  0444               	iorwf	dtoa@s+1,w
  8977  1A5B  1903               	btfsc	3,2
  8978  1A5C  2A7B               	goto	l809
  8979                           
  8980                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  8981  1A5D  09C5               	comf	dtoa@n,f
  8982  1A5E  09C6               	comf	dtoa@n+1,f
  8983  1A5F  09C7               	comf	dtoa@n+2,f
  8984  1A60  09C8               	comf	dtoa@n+3,f
  8985  1A61  09C9               	comf	dtoa@n+4,f
  8986  1A62  09CA               	comf	dtoa@n+5,f
  8987  1A63  09CB               	comf	dtoa@n+6,f
  8988  1A64  09CC               	comf	dtoa@n+7,f
  8989  1A65  0AC5               	incf	dtoa@n,f
  8990  1A66  1D03               	skipz
  8991  1A67  2A7B               	goto	l809
  8992  1A68  0AC6               	incf	dtoa@n+1,f
  8993  1A69  1D03               	skipz
  8994  1A6A  2A7B               	goto	l809
  8995  1A6B  0AC7               	incf	dtoa@n+2,f
  8996  1A6C  1D03               	skipz
  8997  1A6D  2A7B               	goto	l809
  8998  1A6E  0AC8               	incf	dtoa@n+3,f
  8999  1A6F  1D03               	skipz
  9000  1A70  2A7B               	goto	l809
  9001  1A71  0AC9               	incf	dtoa@n+4,f
  9002  1A72  1D03               	skipz
  9003  1A73  2A7B               	goto	l809
  9004  1A74  0ACA               	incf	dtoa@n+5,f
  9005  1A75  1D03               	skipz
  9006  1A76  2A7B               	goto	l809
  9007  1A77  0ACB               	incf	dtoa@n+6,f
  9008  1A78  1D03               	skipz
  9009  1A79  2A7B               	goto	l809
  9010  1A7A  0ACC               	incf	dtoa@n+7,f
  9011  1A7B                     l809:	
  9012                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
  9013                           
  9014                           
  9015                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  9016  1A7B  0022               	movlb	2	; select bank2
  9017  1A7C  1BE9               	btfsc	(_prec+1)^(0+256),7
  9018  1A7D  2A82               	goto	l810
  9019                           
  9020                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  9021  1A7E  30FD               	movlw	253
  9022  1A7F  05EA               	andwf	_flags^(0+256),f
  9023  1A80  30FF               	movlw	255
  9024  1A81  05EB               	andwf	(_flags+1)^(0+256),f
  9025  1A82                     l810:	
  9026                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
  9027                           
  9028                           
  9029                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  9030  1A82  0869               	movf	(_prec+1)^(0+256),w
  9031  1A83  3A80               	xorlw	128
  9032  1A84  0020               	movlb	0	; select bank0
  9033  1A85  00BA               	movwf	??_dtoa
  9034  1A86  3080               	movlw	128
  9035  1A87  023A               	subwf	??_dtoa,w
  9036  1A88  1D03               	skipz
  9037  1A89  2A8D               	goto	u8095
  9038  1A8A  3001               	movlw	1
  9039  1A8B  0022               	movlb	2	; select bank2
  9040  1A8C  0268               	subwf	_prec^(0+256),w
  9041  1A8D                     u8095:	
  9042  1A8D  1803               	skipnc
  9043  1A8E  2A95               	goto	l6631
  9044  1A8F  3001               	movlw	1
  9045  1A90  0020               	movlb	0	; select bank0
  9046  1A91  00BF               	movwf	dtoa@p
  9047  1A92  3000               	movlw	0
  9048  1A93  00C0               	movwf	dtoa@p+1
  9049  1A94  2A9D               	goto	l814
  9050  1A95                     l6631:	
  9051  1A95  0022               	movlb	2	; select bank2
  9052  1A96  0869               	movf	(_prec+1)^(0+256),w
  9053  1A97  0020               	movlb	0	; select bank0
  9054  1A98  00C0               	movwf	dtoa@p+1
  9055  1A99  0022               	movlb	2	; select bank2
  9056  1A9A  0868               	movf	_prec^(0+256),w
  9057  1A9B  0020               	movlb	0	; select bank0
  9058  1A9C  00BF               	movwf	dtoa@p
  9059  1A9D                     l814:	
  9060                           
  9061                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  9062  1A9D  0022               	movlb	2	; select bank2
  9063  1A9E  0867               	movf	(_width+1)^(0+256),w
  9064  1A9F  0020               	movlb	0	; select bank0
  9065  1AA0  00C2               	movwf	dtoa@w+1
  9066  1AA1  0022               	movlb	2	; select bank2
  9067  1AA2  0866               	movf	_width^(0+256),w
  9068  1AA3  0020               	movlb	0	; select bank0
  9069  1AA4  00C1               	movwf	dtoa@w
  9070                           
  9071                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  9072  1AA5  0843               	movf	dtoa@s,w
  9073  1AA6  0444               	iorwf	dtoa@s+1,w
  9074  1AA7  1D03               	btfss	3,2
  9075  1AA8  2AAC               	goto	l6637
  9076  1AA9  0022               	movlb	2	; select bank2
  9077  1AAA  1D6A               	btfss	_flags^(0+256),2
  9078  1AAB  2AB1               	goto	l815
  9079  1AAC                     l6637:	
  9080                           
  9081                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  9082  1AAC  30FF               	movlw	255
  9083  1AAD  0020               	movlb	0	; select bank0
  9084  1AAE  07C1               	addwf	dtoa@w,f
  9085  1AAF  30FF               	movlw	255
  9086  1AB0  3DC2               	addwfc	dtoa@w+1,f
  9087  1AB1                     l815:	
  9088                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
  9089                           
  9090                           
  9091                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  9092  1AB1  301F               	movlw	31
  9093  1AB2  0020               	movlb	0	; select bank0
  9094  1AB3  00CD               	movwf	dtoa@i
  9095  1AB4  3000               	movlw	0
  9096  1AB5  00CE               	movwf	dtoa@i+1
  9097                           
  9098                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  9099  1AB6  0024               	movlb	4	; select bank4
  9100  1AB7  01C9               	clrf	(_dbuf^(0+512)+31)
  9101                           
  9102                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9103  1AB8  2B47               	goto	l818
  9104  1AB9                     l6651:	
  9105  1AB9  0020               	movlb	0	; select bank0
  9106  1ABA  0845               	movf	dtoa@n,w
  9107  1ABB  0446               	iorwf	dtoa@n+1,w
  9108  1ABC  0447               	iorwf	dtoa@n+2,w
  9109  1ABD  0448               	iorwf	dtoa@n+3,w
  9110  1ABE  0449               	iorwf	dtoa@n+4,w
  9111  1ABF  044A               	iorwf	dtoa@n+5,w
  9112  1AC0  044B               	iorwf	dtoa@n+6,w
  9113  1AC1  044C               	iorwf	dtoa@n+7,w
  9114  1AC2  1D03               	skipz
  9115  1AC3  2ADE               	goto	l6641
  9116  1AC4  0840               	movf	dtoa@p+1,w
  9117  1AC5  3A80               	xorlw	128
  9118  1AC6  00BA               	movwf	??_dtoa
  9119  1AC7  3080               	movlw	128
  9120  1AC8  023A               	subwf	??_dtoa,w
  9121  1AC9  1D03               	skipz
  9122  1ACA  2ACD               	goto	u8145
  9123  1ACB  3001               	movlw	1
  9124  1ACC  023F               	subwf	dtoa@p,w
  9125  1ACD                     u8145:	
  9126  1ACD  1803               	skipnc
  9127  1ACE  2ADE               	goto	l6641
  9128  1ACF  0020               	movlb	0	; select bank0
  9129  1AD0  0842               	movf	dtoa@w+1,w
  9130  1AD1  3A80               	xorlw	128
  9131  1AD2  00BA               	movwf	??_dtoa
  9132  1AD3  3080               	movlw	128
  9133  1AD4  023A               	subwf	??_dtoa,w
  9134  1AD5  1D03               	skipz
  9135  1AD6  2AD9               	goto	u8155
  9136  1AD7  3001               	movlw	1
  9137  1AD8  0241               	subwf	dtoa@w,w
  9138  1AD9                     u8155:	
  9139  1AD9  1C03               	skipc
  9140  1ADA  2B53               	goto	l6659
  9141  1ADB  0022               	movlb	2	; select bank2
  9142  1ADC  1CEA               	btfss	_flags^(0+256),1
  9143  1ADD  2B53               	goto	l6659
  9144  1ADE                     l6641:	
  9145                           
  9146                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  9147  1ADE  30FF               	movlw	255
  9148  1ADF  0020               	movlb	0	; select bank0
  9149  1AE0  07CD               	addwf	dtoa@i,f
  9150  1AE1  30FF               	movlw	255
  9151  1AE2  3DCE               	addwfc	dtoa@i+1,f
  9152                           
  9153                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  9154  1AE3  300A               	movlw	10
  9155  1AE4  00A0               	movwf	___aomod@divisor
  9156  1AE5  01A1               	clrf	___aomod@divisor+1
  9157  1AE6  01A2               	clrf	___aomod@divisor+2
  9158  1AE7  01A3               	clrf	___aomod@divisor+3
  9159  1AE8  01A4               	clrf	___aomod@divisor+4
  9160  1AE9  01A5               	clrf	___aomod@divisor+5
  9161  1AEA  01A6               	clrf	___aomod@divisor+6
  9162  1AEB  01A7               	clrf	___aomod@divisor+7
  9163  1AEC  0845               	movf	dtoa@n,w
  9164  1AED  00A8               	movwf	___aomod@dividend
  9165  1AEE  0846               	movf	dtoa@n+1,w
  9166  1AEF  00A9               	movwf	___aomod@dividend+1
  9167  1AF0  0847               	movf	dtoa@n+2,w
  9168  1AF1  00AA               	movwf	___aomod@dividend+2
  9169  1AF2  0848               	movf	dtoa@n+3,w
  9170  1AF3  00AB               	movwf	___aomod@dividend+3
  9171  1AF4  0849               	movf	dtoa@n+4,w
  9172  1AF5  00AC               	movwf	___aomod@dividend+4
  9173  1AF6  084A               	movf	dtoa@n+5,w
  9174  1AF7  00AD               	movwf	___aomod@dividend+5
  9175  1AF8  084B               	movf	dtoa@n+6,w
  9176  1AF9  00AE               	movwf	___aomod@dividend+6
  9177  1AFA  084C               	movf	dtoa@n+7,w
  9178  1AFB  00AF               	movwf	___aomod@dividend+7
  9179  1AFC  31A2  2219  319A   	fcall	___aomod
  9180  1AFF  0020               	movlb	0	; select bank0
  9181  1B00  0821               	movf	?___aomod+1,w
  9182  1B01  00F5               	movwf	abs@a+1
  9183  1B02  0820               	movf	?___aomod,w
  9184  1B03  00F4               	movwf	abs@a
  9185  1B04  31B2  2233  319A   	fcall	_abs
  9186  1B07  0874               	movf	?_abs,w
  9187  1B08  3E30               	addlw	48
  9188  1B09  0020               	movlb	0	; select bank0
  9189  1B0A  00BA               	movwf	??_dtoa
  9190  1B0B  084D               	movf	dtoa@i,w
  9191  1B0C  3E2A               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9192  1B0D  0086               	movwf	6
  9193  1B0E  3002               	movlw	2	; select bank4/5
  9194  1B0F  0087               	movwf	7
  9195  1B10  083A               	movf	??_dtoa,w
  9196  1B11  0081               	movwf	1
  9197                           
  9198                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  9199  1B12  30FF               	movlw	255
  9200  1B13  07BF               	addwf	dtoa@p,f
  9201  1B14  30FF               	movlw	255
  9202  1B15  3DC0               	addwfc	dtoa@p+1,f
  9203                           
  9204                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  9205  1B16  30FF               	movlw	255
  9206  1B17  07C1               	addwf	dtoa@w,f
  9207  1B18  30FF               	movlw	255
  9208  1B19  3DC2               	addwfc	dtoa@w+1,f
  9209                           
  9210                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  9211  1B1A  300A               	movlw	10
  9212  1B1B  00A0               	movwf	___aodiv@divisor
  9213  1B1C  01A1               	clrf	___aodiv@divisor+1
  9214  1B1D  01A2               	clrf	___aodiv@divisor+2
  9215  1B1E  01A3               	clrf	___aodiv@divisor+3
  9216  1B1F  01A4               	clrf	___aodiv@divisor+4
  9217  1B20  01A5               	clrf	___aodiv@divisor+5
  9218  1B21  01A6               	clrf	___aodiv@divisor+6
  9219  1B22  01A7               	clrf	___aodiv@divisor+7
  9220  1B23  0845               	movf	dtoa@n,w
  9221  1B24  00A8               	movwf	___aodiv@dividend
  9222  1B25  0846               	movf	dtoa@n+1,w
  9223  1B26  00A9               	movwf	___aodiv@dividend+1
  9224  1B27  0847               	movf	dtoa@n+2,w
  9225  1B28  00AA               	movwf	___aodiv@dividend+2
  9226  1B29  0848               	movf	dtoa@n+3,w
  9227  1B2A  00AB               	movwf	___aodiv@dividend+3
  9228  1B2B  0849               	movf	dtoa@n+4,w
  9229  1B2C  00AC               	movwf	___aodiv@dividend+4
  9230  1B2D  084A               	movf	dtoa@n+5,w
  9231  1B2E  00AD               	movwf	___aodiv@dividend+5
  9232  1B2F  084B               	movf	dtoa@n+6,w
  9233  1B30  00AE               	movwf	___aodiv@dividend+6
  9234  1B31  084C               	movf	dtoa@n+7,w
  9235  1B32  00AF               	movwf	___aodiv@dividend+7
  9236  1B33  31A3  23E6  319A   	fcall	___aodiv
  9237  1B36  0020               	movlb	0	; select bank0
  9238  1B37  0820               	movf	?___aodiv,w
  9239  1B38  00C5               	movwf	dtoa@n
  9240  1B39  0821               	movf	?___aodiv+1,w
  9241  1B3A  00C6               	movwf	dtoa@n+1
  9242  1B3B  0822               	movf	?___aodiv+2,w
  9243  1B3C  00C7               	movwf	dtoa@n+2
  9244  1B3D  0823               	movf	?___aodiv+3,w
  9245  1B3E  00C8               	movwf	dtoa@n+3
  9246  1B3F  0824               	movf	?___aodiv+4,w
  9247  1B40  00C9               	movwf	dtoa@n+4
  9248  1B41  0825               	movf	?___aodiv+5,w
  9249  1B42  00CA               	movwf	dtoa@n+5
  9250  1B43  0826               	movf	?___aodiv+6,w
  9251  1B44  00CB               	movwf	dtoa@n+6
  9252  1B45  0827               	movf	?___aodiv+7,w
  9253  1B46  00CC               	movwf	dtoa@n+7
  9254  1B47                     l818:	
  9255                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
  9256                           
  9257                           
  9258                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9259  1B47  0020               	movlb	0	; select bank0
  9260  1B48  084E               	movf	dtoa@i+1,w
  9261  1B49  3A80               	xorlw	128
  9262  1B4A  00BA               	movwf	??_dtoa
  9263  1B4B  3080               	movlw	128
  9264  1B4C  023A               	subwf	??_dtoa,w
  9265  1B4D  1D03               	skipz
  9266  1B4E  2B51               	goto	u8125
  9267  1B4F  3001               	movlw	1
  9268  1B50  024D               	subwf	dtoa@i,w
  9269  1B51                     u8125:	
  9270  1B51  1803               	btfsc	3,0
  9271  1B52  2AB9               	goto	l6651
  9272  1B53                     l6659:	
  9273                           
  9274                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  9275  1B53  0020               	movlb	0	; select bank0
  9276  1B54  0843               	movf	dtoa@s,w
  9277  1B55  0444               	iorwf	dtoa@s+1,w
  9278  1B56  1D03               	btfss	3,2
  9279  1B57  2B5B               	goto	l6663
  9280  1B58  0022               	movlb	2	; select bank2
  9281  1B59  1D6A               	btfss	_flags^(0+256),2
  9282  1B5A  2B73               	goto	l6673
  9283  1B5B                     l6663:	
  9284                           
  9285                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  9286  1B5B  30FF               	movlw	255
  9287  1B5C  0020               	movlb	0	; select bank0
  9288  1B5D  07CD               	addwf	dtoa@i,f
  9289  1B5E  30FF               	movlw	255
  9290  1B5F  3DCE               	addwfc	dtoa@i+1,f
  9291                           
  9292                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  9293  1B60  0843               	movf	dtoa@s,w
  9294  1B61  0444               	iorwf	dtoa@s+1,w
  9295  1B62  1D03               	btfss	3,2
  9296  1B63  2B66               	goto	l6669
  9297  1B64  302B               	movlw	43
  9298  1B65  2B67               	goto	L2
  9299  1B66                     l6669:	
  9300  1B66  302D               	movlw	45
  9301  1B67                     L2:	
  9302  1B67  00BD               	movwf	_dtoa$1322
  9303  1B68  3000               	movlw	0
  9304  1B69  00BE               	movwf	_dtoa$1322+1
  9305  1B6A  083D               	movf	_dtoa$1322,w
  9306  1B6B  00BA               	movwf	??_dtoa
  9307  1B6C  084D               	movf	dtoa@i,w
  9308  1B6D  3E2A               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9309  1B6E  0086               	movwf	6
  9310  1B6F  3002               	movlw	2	; select bank4/5
  9311  1B70  0087               	movwf	7
  9312  1B71  083A               	movf	??_dtoa,w
  9313  1B72  0081               	movwf	1
  9314  1B73                     l6673:	
  9315                           
  9316                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  9317  1B73  0020               	movlb	0	; select bank0
  9318  1B74  0831               	movf	dtoa@fp+1,w
  9319  1B75  00A7               	movwf	pad@fp+1
  9320  1B76  0830               	movf	dtoa@fp,w
  9321  1B77  00A6               	movwf	pad@fp
  9322  1B78  084D               	movf	dtoa@i,w
  9323  1B79  3E2A               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9324  1B7A  00BA               	movwf	??_dtoa
  9325  1B7B  083A               	movf	??_dtoa,w
  9326  1B7C  00A8               	movwf	pad@buf
  9327  1B7D  0842               	movf	dtoa@w+1,w
  9328  1B7E  00AA               	movwf	pad@p+1
  9329  1B7F  0841               	movf	dtoa@w,w
  9330  1B80  00A9               	movwf	pad@p
  9331  1B81  31A8  2000         	fcall	_pad
  9332  1B83  0020               	movlb	0	; select bank0
  9333  1B84  0827               	movf	?_pad+1,w
  9334  1B85  00B1               	movwf	?_dtoa+1
  9335  1B86  0826               	movf	?_pad,w
  9336  1B87  00B0               	movwf	?_dtoa
  9337  1B88  0008               	return
  9338  1B89                     __end_of_dtoa:	
  9339                           
  9340                           	psect	text20
  9341  3233                     __ptext20:	
  9342 ;; *************** function _abs *****************
  9343 ;; Defined at:
  9344 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  9345 ;; Parameters:    Size  Location     Type
  9346 ;;  a               2    4[COMMON] int 
  9347 ;; Auto vars:     Size  Location     Type
  9348 ;;		None
  9349 ;; Return value:  Size  Location     Type
  9350 ;;                  2    4[COMMON] int 
  9351 ;; Registers used:
  9352 ;;		wreg, status,2, status,0
  9353 ;; Tracked objects:
  9354 ;;		On entry : 0/0
  9355 ;;		On exit  : 0/0
  9356 ;;		Unchanged: 0/0
  9357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9358 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9360 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9361 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9362 ;;Total ram usage:        4 bytes
  9363 ;; Hardware stack levels used:    1
  9364 ;; Hardware stack levels required when called:    1
  9365 ;; This function calls:
  9366 ;;		Nothing
  9367 ;; This function is called by:
  9368 ;;		_dtoa
  9369 ;; This function uses a non-reentrant model
  9370 ;;
  9371                           
  9372                           
  9373                           ;psect for function _abs
  9374  3233                     _abs:	
  9375                           
  9376                           ;incstack = 0
  9377                           ; Regs used in _abs: [wreg+status,2+status,0]
  9378  3233  0875               	movf	abs@a+1,w
  9379  3234  3A80               	xorlw	128
  9380  3235  00F6               	movwf	??_abs
  9381  3236  3080               	movlw	128
  9382  3237  0276               	subwf	??_abs,w
  9383  3238  1D03               	skipz
  9384  3239  2A3C               	goto	u4125
  9385  323A  3001               	movlw	1
  9386  323B  0274               	subwf	abs@a,w
  9387  323C                     u4125:	
  9388  323C  1803               	skipnc
  9389  323D  0008               	return
  9390  323E  0974               	comf	abs@a,w
  9391  323F  00F6               	movwf	??_abs
  9392  3240  0975               	comf	abs@a+1,w
  9393  3241  00F7               	movwf	??_abs+1
  9394  3242  0AF6               	incf	??_abs,f
  9395  3243  1903               	skipnz
  9396  3244  0AF7               	incf	??_abs+1,f
  9397  3245  0876               	movf	??_abs,w
  9398  3246  00F4               	movwf	?_abs
  9399  3247  0877               	movf	??_abs+1,w
  9400  3248  00F5               	movwf	?_abs+1
  9401  3249  0008               	return
  9402  324A                     __end_of_abs:	
  9403                           
  9404                           	psect	text21
  9405  2219                     __ptext21:	
  9406 ;; *************** function ___aomod *****************
  9407 ;; Defined at:
  9408 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  9409 ;; Parameters:    Size  Location     Type
  9410 ;;  divisor         8    0[BANK0 ] long long 
  9411 ;;  dividend        8    8[BANK0 ] long long 
  9412 ;; Auto vars:     Size  Location     Type
  9413 ;;  sign            1    3[COMMON] unsigned char 
  9414 ;;  counter         1    2[COMMON] unsigned char 
  9415 ;; Return value:  Size  Location     Type
  9416 ;;                  8    0[BANK0 ] long long 
  9417 ;; Registers used:
  9418 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9419 ;; Tracked objects:
  9420 ;;		On entry : 0/0
  9421 ;;		On exit  : 0/0
  9422 ;;		Unchanged: 0/0
  9423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9424 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9425 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9426 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9427 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9428 ;;Total ram usage:       19 bytes
  9429 ;; Hardware stack levels used:    1
  9430 ;; Hardware stack levels required when called:    1
  9431 ;; This function calls:
  9432 ;;		Nothing
  9433 ;; This function is called by:
  9434 ;;		_dtoa
  9435 ;; This function uses a non-reentrant model
  9436 ;;
  9437                           
  9438                           
  9439                           ;psect for function ___aomod
  9440  2219                     ___aomod:	
  9441                           
  9442                           ;incstack = 0
  9443                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  9444  2219  01F3               	clrf	___aomod@sign
  9445  221A  3028               	movlw	low ___aomod@dividend
  9446  221B  0086               	movwf	6
  9447  221C  3000               	movlw	high ___aomod@dividend
  9448  221D  0087               	movwf	7
  9449  221E  3F47               	moviw [7]fsr1
  9450  221F  00F1               	movwf	??___aomod
  9451  2220  1FF1               	btfss	??___aomod,7
  9452  2221  2A43               	goto	l4283
  9453  2222  0020               	movlb	0	; select bank0
  9454  2223  09A8               	comf	___aomod@dividend,f
  9455  2224  09A9               	comf	___aomod@dividend+1,f
  9456  2225  09AA               	comf	___aomod@dividend+2,f
  9457  2226  09AB               	comf	___aomod@dividend+3,f
  9458  2227  09AC               	comf	___aomod@dividend+4,f
  9459  2228  09AD               	comf	___aomod@dividend+5,f
  9460  2229  09AE               	comf	___aomod@dividend+6,f
  9461  222A  09AF               	comf	___aomod@dividend+7,f
  9462  222B  0AA8               	incf	___aomod@dividend,f
  9463  222C  1D03               	skipz
  9464  222D  2A41               	goto	u438lld
  9465  222E  0AA9               	incf	___aomod@dividend+1,f
  9466  222F  1D03               	skipz
  9467  2230  2A41               	goto	u438lld
  9468  2231  0AAA               	incf	___aomod@dividend+2,f
  9469  2232  1D03               	skipz
  9470  2233  2A41               	goto	u438lld
  9471  2234  0AAB               	incf	___aomod@dividend+3,f
  9472  2235  1D03               	skipz
  9473  2236  2A41               	goto	u438lld
  9474  2237  0AAC               	incf	___aomod@dividend+4,f
  9475  2238  1D03               	skipz
  9476  2239  2A41               	goto	u438lld
  9477  223A  0AAD               	incf	___aomod@dividend+5,f
  9478  223B  1D03               	skipz
  9479  223C  2A41               	goto	u438lld
  9480  223D  0AAE               	incf	___aomod@dividend+6,f
  9481  223E  1D03               	skipz
  9482  223F  2A41               	goto	u438lld
  9483  2240  0AAF               	incf	___aomod@dividend+7,f
  9484  2241                     u438lld:	
  9485  2241  01F3               	clrf	___aomod@sign
  9486  2242  0AF3               	incf	___aomod@sign,f
  9487  2243                     l4283:	
  9488  2243  3020               	movlw	low ___aomod@divisor
  9489  2244  0086               	movwf	6
  9490  2245  3000               	movlw	high ___aomod@divisor
  9491  2246  0087               	movwf	7
  9492  2247  3F47               	moviw [7]fsr1
  9493  2248  00F1               	movwf	??___aomod
  9494  2249  1FF1               	btfss	??___aomod,7
  9495  224A  2A6A               	goto	l4287
  9496  224B  0020               	movlb	0	; select bank0
  9497  224C  09A0               	comf	___aomod@divisor,f
  9498  224D  09A1               	comf	___aomod@divisor+1,f
  9499  224E  09A2               	comf	___aomod@divisor+2,f
  9500  224F  09A3               	comf	___aomod@divisor+3,f
  9501  2250  09A4               	comf	___aomod@divisor+4,f
  9502  2251  09A5               	comf	___aomod@divisor+5,f
  9503  2252  09A6               	comf	___aomod@divisor+6,f
  9504  2253  09A7               	comf	___aomod@divisor+7,f
  9505  2254  0AA0               	incf	___aomod@divisor,f
  9506  2255  1D03               	skipz
  9507  2256  2A6A               	goto	l4287
  9508  2257  0AA1               	incf	___aomod@divisor+1,f
  9509  2258  1D03               	skipz
  9510  2259  2A6A               	goto	l4287
  9511  225A  0AA2               	incf	___aomod@divisor+2,f
  9512  225B  1D03               	skipz
  9513  225C  2A6A               	goto	l4287
  9514  225D  0AA3               	incf	___aomod@divisor+3,f
  9515  225E  1D03               	skipz
  9516  225F  2A6A               	goto	l4287
  9517  2260  0AA4               	incf	___aomod@divisor+4,f
  9518  2261  1D03               	skipz
  9519  2262  2A6A               	goto	l4287
  9520  2263  0AA5               	incf	___aomod@divisor+5,f
  9521  2264  1D03               	skipz
  9522  2265  2A6A               	goto	l4287
  9523  2266  0AA6               	incf	___aomod@divisor+6,f
  9524  2267  1D03               	skipz
  9525  2268  2A6A               	goto	l4287
  9526  2269  0AA7               	incf	___aomod@divisor+7,f
  9527  226A                     l4287:	
  9528  226A  0020               	movlb	0	; select bank0
  9529  226B  0820               	movf	___aomod@divisor,w
  9530  226C  0421               	iorwf	___aomod@divisor+1,w
  9531  226D  0422               	iorwf	___aomod@divisor+2,w
  9532  226E  0423               	iorwf	___aomod@divisor+3,w
  9533  226F  0424               	iorwf	___aomod@divisor+4,w
  9534  2270  0425               	iorwf	___aomod@divisor+5,w
  9535  2271  0426               	iorwf	___aomod@divisor+6,w
  9536  2272  0427               	iorwf	___aomod@divisor+7,w
  9537  2273  1903               	skipnz
  9538  2274  2AC2               	goto	l4303
  9539  2275  01F2               	clrf	___aomod@counter
  9540  2276  0AF2               	incf	___aomod@counter,f
  9541  2277                     l4295:	
  9542  2277  1BA7               	btfsc	___aomod@divisor+7,7
  9543  2278  2A86               	goto	l4297
  9544  2279  35A0               	lslf	___aomod@divisor,f
  9545  227A  0DA1               	rlf	___aomod@divisor+1,f
  9546  227B  0DA2               	rlf	___aomod@divisor+2,f
  9547  227C  0DA3               	rlf	___aomod@divisor+3,f
  9548  227D  0DA4               	rlf	___aomod@divisor+4,f
  9549  227E  0DA5               	rlf	___aomod@divisor+5,f
  9550  227F  0DA6               	rlf	___aomod@divisor+6,f
  9551  2280  0DA7               	rlf	___aomod@divisor+7,f
  9552  2281  3001               	movlw	1
  9553  2282  00F1               	movwf	??___aomod
  9554  2283  0871               	movf	??___aomod,w
  9555  2284  07F2               	addwf	___aomod@counter,f
  9556  2285  2A77               	goto	l4295
  9557  2286                     l4297:	
  9558  2286  0827               	movf	___aomod@divisor+7,w
  9559  2287  022F               	subwf	___aomod@dividend+7,w
  9560  2288  1D03               	skipz
  9561  2289  2AA4               	goto	u4435
  9562  228A  0826               	movf	___aomod@divisor+6,w
  9563  228B  022E               	subwf	___aomod@dividend+6,w
  9564  228C  1D03               	skipz
  9565  228D  2AA4               	goto	u4435
  9566  228E  0825               	movf	___aomod@divisor+5,w
  9567  228F  022D               	subwf	___aomod@dividend+5,w
  9568  2290  1D03               	skipz
  9569  2291  2AA4               	goto	u4435
  9570  2292  0824               	movf	___aomod@divisor+4,w
  9571  2293  022C               	subwf	___aomod@dividend+4,w
  9572  2294  1D03               	skipz
  9573  2295  2AA4               	goto	u4435
  9574  2296  0823               	movf	___aomod@divisor+3,w
  9575  2297  022B               	subwf	___aomod@dividend+3,w
  9576  2298  1D03               	skipz
  9577  2299  2AA4               	goto	u4435
  9578  229A  0822               	movf	___aomod@divisor+2,w
  9579  229B  022A               	subwf	___aomod@dividend+2,w
  9580  229C  1D03               	skipz
  9581  229D  2AA4               	goto	u4435
  9582  229E  0821               	movf	___aomod@divisor+1,w
  9583  229F  0229               	subwf	___aomod@dividend+1,w
  9584  22A0  1D03               	skipz
  9585  22A1  2AA4               	goto	u4435
  9586  22A2  0820               	movf	___aomod@divisor,w
  9587  22A3  0228               	subwf	___aomod@dividend,w
  9588  22A4                     u4435:	
  9589  22A4  1C03               	skipc
  9590  22A5  2AB6               	goto	l4301
  9591  22A6  0820               	movf	___aomod@divisor,w
  9592  22A7  02A8               	subwf	___aomod@dividend,f
  9593  22A8  0821               	movf	___aomod@divisor+1,w
  9594  22A9  3BA9               	subwfb	___aomod@dividend+1,f
  9595  22AA  0822               	movf	___aomod@divisor+2,w
  9596  22AB  3BAA               	subwfb	___aomod@dividend+2,f
  9597  22AC  0823               	movf	___aomod@divisor+3,w
  9598  22AD  3BAB               	subwfb	___aomod@dividend+3,f
  9599  22AE  0824               	movf	___aomod@divisor+4,w
  9600  22AF  3BAC               	subwfb	___aomod@dividend+4,f
  9601  22B0  0825               	movf	___aomod@divisor+5,w
  9602  22B1  3BAD               	subwfb	___aomod@dividend+5,f
  9603  22B2  0826               	movf	___aomod@divisor+6,w
  9604  22B3  3BAE               	subwfb	___aomod@dividend+6,f
  9605  22B4  0827               	movf	___aomod@divisor+7,w
  9606  22B5  3BAF               	subwfb	___aomod@dividend+7,f
  9607  22B6                     l4301:	
  9608  22B6  36A7               	lsrf	___aomod@divisor+7,f
  9609  22B7  0CA6               	rrf	___aomod@divisor+6,f
  9610  22B8  0CA5               	rrf	___aomod@divisor+5,f
  9611  22B9  0CA4               	rrf	___aomod@divisor+4,f
  9612  22BA  0CA3               	rrf	___aomod@divisor+3,f
  9613  22BB  0CA2               	rrf	___aomod@divisor+2,f
  9614  22BC  0CA1               	rrf	___aomod@divisor+1,f
  9615  22BD  0CA0               	rrf	___aomod@divisor,f
  9616  22BE  3001               	movlw	1
  9617  22BF  02F2               	subwf	___aomod@counter,f
  9618  22C0  1D03               	btfss	3,2
  9619  22C1  2A86               	goto	l4297
  9620  22C2                     l4303:	
  9621  22C2  0873               	movf	___aomod@sign,w
  9622  22C3  1903               	btfsc	3,2
  9623  22C4  2AE3               	goto	l1115
  9624  22C5  09A8               	comf	___aomod@dividend,f
  9625  22C6  09A9               	comf	___aomod@dividend+1,f
  9626  22C7  09AA               	comf	___aomod@dividend+2,f
  9627  22C8  09AB               	comf	___aomod@dividend+3,f
  9628  22C9  09AC               	comf	___aomod@dividend+4,f
  9629  22CA  09AD               	comf	___aomod@dividend+5,f
  9630  22CB  09AE               	comf	___aomod@dividend+6,f
  9631  22CC  09AF               	comf	___aomod@dividend+7,f
  9632  22CD  0AA8               	incf	___aomod@dividend,f
  9633  22CE  1D03               	skipz
  9634  22CF  2AE3               	goto	l1115
  9635  22D0  0AA9               	incf	___aomod@dividend+1,f
  9636  22D1  1D03               	skipz
  9637  22D2  2AE3               	goto	l1115
  9638  22D3  0AAA               	incf	___aomod@dividend+2,f
  9639  22D4  1D03               	skipz
  9640  22D5  2AE3               	goto	l1115
  9641  22D6  0AAB               	incf	___aomod@dividend+3,f
  9642  22D7  1D03               	skipz
  9643  22D8  2AE3               	goto	l1115
  9644  22D9  0AAC               	incf	___aomod@dividend+4,f
  9645  22DA  1D03               	skipz
  9646  22DB  2AE3               	goto	l1115
  9647  22DC  0AAD               	incf	___aomod@dividend+5,f
  9648  22DD  1D03               	skipz
  9649  22DE  2AE3               	goto	l1115
  9650  22DF  0AAE               	incf	___aomod@dividend+6,f
  9651  22E0  1D03               	skipz
  9652  22E1  2AE3               	goto	l1115
  9653  22E2  0AAF               	incf	___aomod@dividend+7,f
  9654  22E3                     l1115:	
  9655  22E3  0020               	movlb	0	; select bank0
  9656  22E4  0828               	movf	___aomod@dividend,w
  9657  22E5  00A0               	movwf	?___aomod
  9658  22E6  0829               	movf	___aomod@dividend+1,w
  9659  22E7  00A1               	movwf	?___aomod+1
  9660  22E8  082A               	movf	___aomod@dividend+2,w
  9661  22E9  00A2               	movwf	?___aomod+2
  9662  22EA  082B               	movf	___aomod@dividend+3,w
  9663  22EB  00A3               	movwf	?___aomod+3
  9664  22EC  082C               	movf	___aomod@dividend+4,w
  9665  22ED  00A4               	movwf	?___aomod+4
  9666  22EE  082D               	movf	___aomod@dividend+5,w
  9667  22EF  00A5               	movwf	?___aomod+5
  9668  22F0  082E               	movf	___aomod@dividend+6,w
  9669  22F1  00A6               	movwf	?___aomod+6
  9670  22F2  082F               	movf	___aomod@dividend+7,w
  9671  22F3  00A7               	movwf	?___aomod+7
  9672  22F4  0008               	return
  9673  22F5                     __end_of___aomod:	
  9674                           
  9675                           	psect	text22
  9676  23E6                     __ptext22:	
  9677 ;; *************** function ___aodiv *****************
  9678 ;; Defined at:
  9679 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  9680 ;; Parameters:    Size  Location     Type
  9681 ;;  divisor         8    0[BANK0 ] long long 
  9682 ;;  dividend        8    8[BANK0 ] long long 
  9683 ;; Auto vars:     Size  Location     Type
  9684 ;;  quotient        8    4[COMMON] long long 
  9685 ;;  sign            1    3[COMMON] unsigned char 
  9686 ;;  counter         1    2[COMMON] unsigned char 
  9687 ;; Return value:  Size  Location     Type
  9688 ;;                  8    0[BANK0 ] long long 
  9689 ;; Registers used:
  9690 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9691 ;; Tracked objects:
  9692 ;;		On entry : 0/0
  9693 ;;		On exit  : 0/0
  9694 ;;		Unchanged: 0/0
  9695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9696 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9697 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9698 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9699 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9700 ;;Total ram usage:       27 bytes
  9701 ;; Hardware stack levels used:    1
  9702 ;; Hardware stack levels required when called:    1
  9703 ;; This function calls:
  9704 ;;		Nothing
  9705 ;; This function is called by:
  9706 ;;		_dtoa
  9707 ;; This function uses a non-reentrant model
  9708 ;;
  9709                           
  9710                           
  9711                           ;psect for function ___aodiv
  9712  23E6                     ___aodiv:	
  9713                           
  9714                           ;incstack = 0
  9715                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  9716  23E6  01F3               	clrf	___aodiv@sign
  9717  23E7  3020               	movlw	low ___aodiv@divisor
  9718  23E8  0086               	movwf	6
  9719  23E9  3000               	movlw	high ___aodiv@divisor
  9720  23EA  0087               	movwf	7
  9721  23EB  3F47               	moviw [7]fsr1
  9722  23EC  00F1               	movwf	??___aodiv
  9723  23ED  1FF1               	btfss	??___aodiv,7
  9724  23EE  2C10               	goto	l4245
  9725  23EF  0020               	movlb	0	; select bank0
  9726  23F0  09A0               	comf	___aodiv@divisor,f
  9727  23F1  09A1               	comf	___aodiv@divisor+1,f
  9728  23F2  09A2               	comf	___aodiv@divisor+2,f
  9729  23F3  09A3               	comf	___aodiv@divisor+3,f
  9730  23F4  09A4               	comf	___aodiv@divisor+4,f
  9731  23F5  09A5               	comf	___aodiv@divisor+5,f
  9732  23F6  09A6               	comf	___aodiv@divisor+6,f
  9733  23F7  09A7               	comf	___aodiv@divisor+7,f
  9734  23F8  0AA0               	incf	___aodiv@divisor,f
  9735  23F9  1D03               	skipz
  9736  23FA  2C0E               	goto	u427lld
  9737  23FB  0AA1               	incf	___aodiv@divisor+1,f
  9738  23FC  1D03               	skipz
  9739  23FD  2C0E               	goto	u427lld
  9740  23FE  0AA2               	incf	___aodiv@divisor+2,f
  9741  23FF  1D03               	skipz
  9742  2400  2C0E               	goto	u427lld
  9743  2401  0AA3               	incf	___aodiv@divisor+3,f
  9744  2402  1D03               	skipz
  9745  2403  2C0E               	goto	u427lld
  9746  2404  0AA4               	incf	___aodiv@divisor+4,f
  9747  2405  1D03               	skipz
  9748  2406  2C0E               	goto	u427lld
  9749  2407  0AA5               	incf	___aodiv@divisor+5,f
  9750  2408  1D03               	skipz
  9751  2409  2C0E               	goto	u427lld
  9752  240A  0AA6               	incf	___aodiv@divisor+6,f
  9753  240B  1D03               	skipz
  9754  240C  2C0E               	goto	u427lld
  9755  240D  0AA7               	incf	___aodiv@divisor+7,f
  9756  240E                     u427lld:	
  9757  240E  01F3               	clrf	___aodiv@sign
  9758  240F  0AF3               	incf	___aodiv@sign,f
  9759  2410                     l4245:	
  9760  2410  3028               	movlw	low ___aodiv@dividend
  9761  2411  0086               	movwf	6
  9762  2412  3000               	movlw	high ___aodiv@dividend
  9763  2413  0087               	movwf	7
  9764  2414  3F47               	moviw [7]fsr1
  9765  2415  00F1               	movwf	??___aodiv
  9766  2416  1FF1               	btfss	??___aodiv,7
  9767  2417  2C3B               	goto	l4251
  9768  2418  0020               	movlb	0	; select bank0
  9769  2419  09A8               	comf	___aodiv@dividend,f
  9770  241A  09A9               	comf	___aodiv@dividend+1,f
  9771  241B  09AA               	comf	___aodiv@dividend+2,f
  9772  241C  09AB               	comf	___aodiv@dividend+3,f
  9773  241D  09AC               	comf	___aodiv@dividend+4,f
  9774  241E  09AD               	comf	___aodiv@dividend+5,f
  9775  241F  09AE               	comf	___aodiv@dividend+6,f
  9776  2420  09AF               	comf	___aodiv@dividend+7,f
  9777  2421  0AA8               	incf	___aodiv@dividend,f
  9778  2422  1D03               	skipz
  9779  2423  2C37               	goto	l4249
  9780  2424  0AA9               	incf	___aodiv@dividend+1,f
  9781  2425  1D03               	skipz
  9782  2426  2C37               	goto	l4249
  9783  2427  0AAA               	incf	___aodiv@dividend+2,f
  9784  2428  1D03               	skipz
  9785  2429  2C37               	goto	l4249
  9786  242A  0AAB               	incf	___aodiv@dividend+3,f
  9787  242B  1D03               	skipz
  9788  242C  2C37               	goto	l4249
  9789  242D  0AAC               	incf	___aodiv@dividend+4,f
  9790  242E  1D03               	skipz
  9791  242F  2C37               	goto	l4249
  9792  2430  0AAD               	incf	___aodiv@dividend+5,f
  9793  2431  1D03               	skipz
  9794  2432  2C37               	goto	l4249
  9795  2433  0AAE               	incf	___aodiv@dividend+6,f
  9796  2434  1D03               	skipz
  9797  2435  2C37               	goto	l4249
  9798  2436  0AAF               	incf	___aodiv@dividend+7,f
  9799  2437                     l4249:	
  9800  2437  3001               	movlw	1
  9801  2438  00F1               	movwf	??___aodiv
  9802  2439  0871               	movf	??___aodiv,w
  9803  243A  06F3               	xorwf	___aodiv@sign,f
  9804  243B                     l4251:	
  9805  243B  3074               	movlw	low ___aodiv@quotient
  9806  243C  0086               	movwf	6
  9807  243D  3000               	movlw	high ___aodiv@quotient
  9808  243E  0087               	movwf	7
  9809  243F  3008               	movlw	8
  9810  2440  00F1               	movwf	??___aodiv
  9811  2441  3000               	movlw	0
  9812  2442                     u4300:	
  9813  2442  001E               	movwi fsr1++
  9814  2443  0BF1               	decfsz	??___aodiv,f
  9815  2444  2C42               	goto	u4300
  9816  2445  0020               	movlb	0	; select bank0
  9817  2446  0820               	movf	___aodiv@divisor,w
  9818  2447  0421               	iorwf	___aodiv@divisor+1,w
  9819  2448  0422               	iorwf	___aodiv@divisor+2,w
  9820  2449  0423               	iorwf	___aodiv@divisor+3,w
  9821  244A  0424               	iorwf	___aodiv@divisor+4,w
  9822  244B  0425               	iorwf	___aodiv@divisor+5,w
  9823  244C  0426               	iorwf	___aodiv@divisor+6,w
  9824  244D  0427               	iorwf	___aodiv@divisor+7,w
  9825  244E  1903               	skipnz
  9826  244F  2CA6               	goto	l4273
  9827  2450  01F2               	clrf	___aodiv@counter
  9828  2451  0AF2               	incf	___aodiv@counter,f
  9829  2452                     l4261:	
  9830  2452  1BA7               	btfsc	___aodiv@divisor+7,7
  9831  2453  2C61               	goto	l4263
  9832  2454  35A0               	lslf	___aodiv@divisor,f
  9833  2455  0DA1               	rlf	___aodiv@divisor+1,f
  9834  2456  0DA2               	rlf	___aodiv@divisor+2,f
  9835  2457  0DA3               	rlf	___aodiv@divisor+3,f
  9836  2458  0DA4               	rlf	___aodiv@divisor+4,f
  9837  2459  0DA5               	rlf	___aodiv@divisor+5,f
  9838  245A  0DA6               	rlf	___aodiv@divisor+6,f
  9839  245B  0DA7               	rlf	___aodiv@divisor+7,f
  9840  245C  3001               	movlw	1
  9841  245D  00F1               	movwf	??___aodiv
  9842  245E  0871               	movf	??___aodiv,w
  9843  245F  07F2               	addwf	___aodiv@counter,f
  9844  2460  2C52               	goto	l4261
  9845  2461                     l4263:	
  9846  2461  35F4               	lslf	___aodiv@quotient,f
  9847  2462  0DF5               	rlf	___aodiv@quotient+1,f
  9848  2463  0DF6               	rlf	___aodiv@quotient+2,f
  9849  2464  0DF7               	rlf	___aodiv@quotient+3,f
  9850  2465  0DF8               	rlf	___aodiv@quotient+4,f
  9851  2466  0DF9               	rlf	___aodiv@quotient+5,f
  9852  2467  0DFA               	rlf	___aodiv@quotient+6,f
  9853  2468  0DFB               	rlf	___aodiv@quotient+7,f
  9854  2469  0827               	movf	___aodiv@divisor+7,w
  9855  246A  022F               	subwf	___aodiv@dividend+7,w
  9856  246B  1D03               	skipz
  9857  246C  2C87               	goto	u4335
  9858  246D  0826               	movf	___aodiv@divisor+6,w
  9859  246E  022E               	subwf	___aodiv@dividend+6,w
  9860  246F  1D03               	skipz
  9861  2470  2C87               	goto	u4335
  9862  2471  0825               	movf	___aodiv@divisor+5,w
  9863  2472  022D               	subwf	___aodiv@dividend+5,w
  9864  2473  1D03               	skipz
  9865  2474  2C87               	goto	u4335
  9866  2475  0824               	movf	___aodiv@divisor+4,w
  9867  2476  022C               	subwf	___aodiv@dividend+4,w
  9868  2477  1D03               	skipz
  9869  2478  2C87               	goto	u4335
  9870  2479  0823               	movf	___aodiv@divisor+3,w
  9871  247A  022B               	subwf	___aodiv@dividend+3,w
  9872  247B  1D03               	skipz
  9873  247C  2C87               	goto	u4335
  9874  247D  0822               	movf	___aodiv@divisor+2,w
  9875  247E  022A               	subwf	___aodiv@dividend+2,w
  9876  247F  1D03               	skipz
  9877  2480  2C87               	goto	u4335
  9878  2481  0821               	movf	___aodiv@divisor+1,w
  9879  2482  0229               	subwf	___aodiv@dividend+1,w
  9880  2483  1D03               	skipz
  9881  2484  2C87               	goto	u4335
  9882  2485  0820               	movf	___aodiv@divisor,w
  9883  2486  0228               	subwf	___aodiv@dividend,w
  9884  2487                     u4335:	
  9885  2487  1C03               	skipc
  9886  2488  2C9A               	goto	l4271
  9887  2489  0820               	movf	___aodiv@divisor,w
  9888  248A  02A8               	subwf	___aodiv@dividend,f
  9889  248B  0821               	movf	___aodiv@divisor+1,w
  9890  248C  3BA9               	subwfb	___aodiv@dividend+1,f
  9891  248D  0822               	movf	___aodiv@divisor+2,w
  9892  248E  3BAA               	subwfb	___aodiv@dividend+2,f
  9893  248F  0823               	movf	___aodiv@divisor+3,w
  9894  2490  3BAB               	subwfb	___aodiv@dividend+3,f
  9895  2491  0824               	movf	___aodiv@divisor+4,w
  9896  2492  3BAC               	subwfb	___aodiv@dividend+4,f
  9897  2493  0825               	movf	___aodiv@divisor+5,w
  9898  2494  3BAD               	subwfb	___aodiv@dividend+5,f
  9899  2495  0826               	movf	___aodiv@divisor+6,w
  9900  2496  3BAE               	subwfb	___aodiv@dividend+6,f
  9901  2497  0827               	movf	___aodiv@divisor+7,w
  9902  2498  3BAF               	subwfb	___aodiv@dividend+7,f
  9903  2499  1474               	bsf	___aodiv@quotient,0
  9904  249A                     l4271:	
  9905  249A  36A7               	lsrf	___aodiv@divisor+7,f
  9906  249B  0CA6               	rrf	___aodiv@divisor+6,f
  9907  249C  0CA5               	rrf	___aodiv@divisor+5,f
  9908  249D  0CA4               	rrf	___aodiv@divisor+4,f
  9909  249E  0CA3               	rrf	___aodiv@divisor+3,f
  9910  249F  0CA2               	rrf	___aodiv@divisor+2,f
  9911  24A0  0CA1               	rrf	___aodiv@divisor+1,f
  9912  24A1  0CA0               	rrf	___aodiv@divisor,f
  9913  24A2  3001               	movlw	1
  9914  24A3  02F2               	subwf	___aodiv@counter,f
  9915  24A4  1D03               	btfss	3,2
  9916  24A5  2C61               	goto	l4263
  9917  24A6                     l4273:	
  9918  24A6  0873               	movf	___aodiv@sign,w
  9919  24A7  1903               	btfsc	3,2
  9920  24A8  2CC7               	goto	l1102
  9921  24A9  09F4               	comf	___aodiv@quotient,f
  9922  24AA  09F5               	comf	___aodiv@quotient+1,f
  9923  24AB  09F6               	comf	___aodiv@quotient+2,f
  9924  24AC  09F7               	comf	___aodiv@quotient+3,f
  9925  24AD  09F8               	comf	___aodiv@quotient+4,f
  9926  24AE  09F9               	comf	___aodiv@quotient+5,f
  9927  24AF  09FA               	comf	___aodiv@quotient+6,f
  9928  24B0  09FB               	comf	___aodiv@quotient+7,f
  9929  24B1  0AF4               	incf	___aodiv@quotient,f
  9930  24B2  1D03               	skipz
  9931  24B3  2CC7               	goto	l1102
  9932  24B4  0AF5               	incf	___aodiv@quotient+1,f
  9933  24B5  1D03               	skipz
  9934  24B6  2CC7               	goto	l1102
  9935  24B7  0AF6               	incf	___aodiv@quotient+2,f
  9936  24B8  1D03               	skipz
  9937  24B9  2CC7               	goto	l1102
  9938  24BA  0AF7               	incf	___aodiv@quotient+3,f
  9939  24BB  1D03               	skipz
  9940  24BC  2CC7               	goto	l1102
  9941  24BD  0AF8               	incf	___aodiv@quotient+4,f
  9942  24BE  1D03               	skipz
  9943  24BF  2CC7               	goto	l1102
  9944  24C0  0AF9               	incf	___aodiv@quotient+5,f
  9945  24C1  1D03               	skipz
  9946  24C2  2CC7               	goto	l1102
  9947  24C3  0AFA               	incf	___aodiv@quotient+6,f
  9948  24C4  1D03               	skipz
  9949  24C5  2CC7               	goto	l1102
  9950  24C6  0AFB               	incf	___aodiv@quotient+7,f
  9951  24C7                     l1102:	
  9952  24C7  0874               	movf	___aodiv@quotient,w
  9953  24C8  0020               	movlb	0	; select bank0
  9954  24C9  00A0               	movwf	?___aodiv
  9955  24CA  0875               	movf	___aodiv@quotient+1,w
  9956  24CB  00A1               	movwf	?___aodiv+1
  9957  24CC  0876               	movf	___aodiv@quotient+2,w
  9958  24CD  00A2               	movwf	?___aodiv+2
  9959  24CE  0877               	movf	___aodiv@quotient+3,w
  9960  24CF  00A3               	movwf	?___aodiv+3
  9961  24D0  0878               	movf	___aodiv@quotient+4,w
  9962  24D1  00A4               	movwf	?___aodiv+4
  9963  24D2  0879               	movf	___aodiv@quotient+5,w
  9964  24D3  00A5               	movwf	?___aodiv+5
  9965  24D4  087A               	movf	___aodiv@quotient+6,w
  9966  24D5  00A6               	movwf	?___aodiv+6
  9967  24D6  087B               	movf	___aodiv@quotient+7,w
  9968  24D7  00A7               	movwf	?___aodiv+7
  9969  24D8  0008               	return
  9970  24D9                     __end_of___aodiv:	
  9971                           
  9972                           	psect	text23
  9973  33A3                     __ptext23:	
  9974 ;; *************** function _ctoa *****************
  9975 ;; Defined at:
  9976 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9977 ;; Parameters:    Size  Location     Type
  9978 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  9979 ;;		 -> vsnprintf@f(6), 
  9980 ;;  c               1   18[BANK0 ] unsigned char 
  9981 ;; Auto vars:     Size  Location     Type
  9982 ;;  w               2   20[BANK0 ] int 
  9983 ;;  l               2    0        int 
  9984 ;; Return value:  Size  Location     Type
  9985 ;;                  2   16[BANK0 ] int 
  9986 ;; Registers used:
  9987 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9988 ;; Tracked objects:
  9989 ;;		On entry : 0/0
  9990 ;;		On exit  : 0/0
  9991 ;;		Unchanged: 0/0
  9992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9993 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9994 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9995 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9996 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9997 ;;Total ram usage:        6 bytes
  9998 ;; Hardware stack levels used:    1
  9999 ;; Hardware stack levels required when called:    5
 10000 ;; This function calls:
 10001 ;;		_pad
 10002 ;; This function is called by:
 10003 ;;		_vfpfcnvrt
 10004 ;; This function uses a non-reentrant model
 10005 ;;
 10006                           
 10007                           
 10008                           ;psect for function _ctoa
 10009  33A3                     _ctoa:	
 10010                           
 10011                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 10012                           
 10013                           ;incstack = 0
 10014                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10015  33A3  0022               	movlb	2	; select bank2
 10016  33A4  0866               	movf	_width^(0+256),w
 10017  33A5  0467               	iorwf	(_width+1)^(0+256),w
 10018  33A6  1D03               	btfss	3,2
 10019  33A7  2BB0               	goto	l6609
 10020  33A8  0867               	movf	(_width+1)^(0+256),w
 10021  33A9  0020               	movlb	0	; select bank0
 10022  33AA  00B5               	movwf	ctoa@w+1
 10023  33AB  0022               	movlb	2	; select bank2
 10024  33AC  0866               	movf	_width^(0+256),w
 10025  33AD  0020               	movlb	0	; select bank0
 10026  33AE  00B4               	movwf	ctoa@w
 10027  33AF  2BB9               	goto	l6611
 10028  33B0                     l6609:	
 10029  33B0  0866               	movf	_width^(0+256),w
 10030  33B1  3EFF               	addlw	255
 10031  33B2  0020               	movlb	0	; select bank0
 10032  33B3  00B4               	movwf	ctoa@w
 10033  33B4  30FF               	movlw	255
 10034  33B5  0022               	movlb	2	; select bank2
 10035  33B6  3D67               	addwfc	(_width+1)^(0+256),w
 10036  33B7  0020               	movlb	0	; select bank0
 10037  33B8  00B5               	movwf	ctoa@w+1
 10038  33B9                     l6611:	
 10039                           
 10040                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 10041  33B9  0832               	movf	ctoa@c,w
 10042  33BA  00B3               	movwf	??_ctoa
 10043  33BB  0833               	movf	??_ctoa,w
 10044  33BC  0024               	movlb	4	; select bank4
 10045  33BD  00AA               	movwf	_dbuf^(0+512)
 10046                           
 10047                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 10048  33BE  01AB               	clrf	(_dbuf^(0+512)+1)
 10049                           
 10050                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 10051  33BF  0020               	movlb	0	; select bank0
 10052  33C0  0831               	movf	ctoa@fp+1,w
 10053  33C1  00A7               	movwf	pad@fp+1
 10054  33C2  0830               	movf	ctoa@fp,w
 10055  33C3  00A6               	movwf	pad@fp
 10056  33C4  302A               	movlw	(low (_dbuf| (0+512)))& (0+255)
 10057  33C5  00B3               	movwf	??_ctoa
 10058  33C6  0833               	movf	??_ctoa,w
 10059  33C7  00A8               	movwf	pad@buf
 10060  33C8  0835               	movf	ctoa@w+1,w
 10061  33C9  00AA               	movwf	pad@p+1
 10062  33CA  0834               	movf	ctoa@w,w
 10063  33CB  00A9               	movwf	pad@p
 10064  33CC  31A8  2000         	fcall	_pad
 10065  33CE  0020               	movlb	0	; select bank0
 10066  33CF  0827               	movf	?_pad+1,w
 10067  33D0  00B1               	movwf	?_ctoa+1
 10068  33D1  0826               	movf	?_pad,w
 10069  33D2  00B0               	movwf	?_ctoa
 10070  33D3  0008               	return
 10071  33D4                     __end_of_ctoa:	
 10072                           
 10073                           	psect	text24
 10074  2800                     __ptext24:	
 10075 ;; *************** function _pad *****************
 10076 ;; Defined at:
 10077 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 10078 ;; Parameters:    Size  Location     Type
 10079 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
 10080 ;;		 -> vsnprintf@f(6), 
 10081 ;;  buf             1    8[BANK0 ] PTR unsigned char 
 10082 ;;		 -> dbuf(32), 
 10083 ;;  p               2    9[BANK0 ] int 
 10084 ;; Auto vars:     Size  Location     Type
 10085 ;;  w               2   14[BANK0 ] int 
 10086 ;;  i               2   12[BANK0 ] int 
 10087 ;; Return value:  Size  Location     Type
 10088 ;;                  2    6[BANK0 ] int 
 10089 ;; Registers used:
 10090 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10091 ;; Tracked objects:
 10092 ;;		On entry : 0/0
 10093 ;;		On exit  : 0/0
 10094 ;;		Unchanged: 0/0
 10095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10096 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10097 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10098 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10099 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10100 ;;Total ram usage:       10 bytes
 10101 ;; Hardware stack levels used:    1
 10102 ;; Hardware stack levels required when called:    4
 10103 ;; This function calls:
 10104 ;;		_fputc
 10105 ;;		_fputs
 10106 ;;		_strlen
 10107 ;; This function is called by:
 10108 ;;		_ctoa
 10109 ;;		_dtoa
 10110 ;;		_otoa
 10111 ;;		_utoa
 10112 ;;		_xtoa
 10113 ;; This function uses a non-reentrant model
 10114 ;;
 10115                           
 10116                           
 10117                           ;psect for function _pad
 10118  2800                     _pad:	
 10119                           
 10120                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 10121                           
 10122                           ;incstack = 0
 10123                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10124  2800  0022               	movlb	2	; select bank2
 10125  2801  1C6A               	btfss	_flags^(0+256),0
 10126  2802  280C               	goto	l6577
 10127                           
 10128                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 10129  2803  0020               	movlb	0	; select bank0
 10130  2804  0827               	movf	pad@fp+1,w
 10131  2805  00FB               	movwf	fputs@fp+1
 10132  2806  0826               	movf	pad@fp,w
 10133  2807  00FA               	movwf	fputs@fp
 10134  2808  0828               	movf	pad@buf,w
 10135  2809  31B3  237D  31A8   	fcall	_fputs
 10136  280C                     l6577:	
 10137                           
 10138                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 10139  280C  0020               	movlb	0	; select bank0
 10140  280D  1BAA               	btfsc	pad@p+1,7
 10141  280E  2814               	goto	l6581
 10142  280F  082A               	movf	pad@p+1,w
 10143  2810  00AF               	movwf	pad@w+1
 10144  2811  0829               	movf	pad@p,w
 10145  2812  00AE               	movwf	pad@w
 10146  2813  2816               	goto	l794
 10147  2814                     l6581:	
 10148  2814  01AE               	clrf	pad@w
 10149  2815  01AF               	clrf	pad@w+1
 10150  2816                     l794:	
 10151                           
 10152                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 10153  2816  01AC               	clrf	pad@i
 10154  2817  01AD               	clrf	pad@i+1
 10155  2818                     l6587:	
 10156                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 10157                           
 10158                           
 10159                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 10160  2818  082D               	movf	pad@i+1,w
 10161  2819  3A80               	xorlw	128
 10162  281A  00AB               	movwf	??_pad
 10163  281B  082F               	movf	pad@w+1,w
 10164  281C  3A80               	xorlw	128
 10165  281D  022B               	subwf	??_pad,w
 10166  281E  1D03               	skipz
 10167  281F  2822               	goto	u7985
 10168  2820  082E               	movf	pad@w,w
 10169  2821  022C               	subwf	pad@i,w
 10170  2822                     u7985:	
 10171  2822  1803               	btfsc	3,0
 10172  2823  2836               	goto	l797
 10173                           
 10174                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 10175  2824  3020               	movlw	32
 10176  2825  00F1               	movwf	fputc@c
 10177  2826  3000               	movlw	0
 10178  2827  00F2               	movwf	fputc@c+1
 10179  2828  0020               	movlb	0	; select bank0
 10180  2829  0827               	movf	pad@fp+1,w
 10181  282A  00F4               	movwf	fputc@fp+1
 10182  282B  0826               	movf	pad@fp,w
 10183  282C  00F3               	movwf	fputc@fp
 10184  282D  31B6  260F  31A8   	fcall	_fputc
 10185                           
 10186                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 10187  2830  3001               	movlw	1
 10188  2831  0020               	movlb	0	; select bank0
 10189  2832  07AC               	addwf	pad@i,f
 10190  2833  3000               	movlw	0
 10191  2834  3DAD               	addwfc	pad@i+1,f
 10192  2835  2818               	goto	l6587
 10193  2836                     l797:	
 10194                           
 10195                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 10196  2836  0022               	movlb	2	; select bank2
 10197  2837  186A               	btfsc	_flags^(0+256),0
 10198  2838  2842               	goto	l6591
 10199                           
 10200                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 10201  2839  0020               	movlb	0	; select bank0
 10202  283A  0827               	movf	pad@fp+1,w
 10203  283B  00FB               	movwf	fputs@fp+1
 10204  283C  0826               	movf	pad@fp,w
 10205  283D  00FA               	movwf	fputs@fp
 10206  283E  0828               	movf	pad@buf,w
 10207  283F  31B3  237D  31A8   	fcall	_fputs
 10208  2842                     l6591:	
 10209                           
 10210                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 10211  2842  0020               	movlb	0	; select bank0
 10212  2843  0828               	movf	pad@buf,w
 10213  2844  00F1               	movwf	strlen@s
 10214  2845  3002               	movlw	2
 10215  2846  00F2               	movwf	strlen@s+1
 10216  2847  31B2  221C         	fcall	_strlen
 10217  2849  0020               	movlb	0	; select bank0
 10218  284A  082E               	movf	pad@w,w
 10219  284B  0771               	addwf	?_strlen,w
 10220  284C  00A6               	movwf	?_pad
 10221  284D  082F               	movf	pad@w+1,w
 10222  284E  3D72               	addwfc	?_strlen+1,w
 10223  284F  00A7               	movwf	?_pad+1
 10224  2850  0008               	return
 10225  2851                     __end_of_pad:	
 10226                           
 10227                           	psect	text25
 10228  321C                     __ptext25:	
 10229 ;; *************** function _strlen *****************
 10230 ;; Defined at:
 10231 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 10232 ;; Parameters:    Size  Location     Type
 10233 ;;  s               2    1[COMMON] PTR const unsigned char 
 10234 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(32), sp__logf(4), 
 10235 ;;		 -> adcGain(2), 
 10236 ;; Auto vars:     Size  Location     Type
 10237 ;;  a               2    3[COMMON] PTR const unsigned char 
 10238 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(32), sp__logf(4), 
 10239 ;;		 -> adcGain(2), 
 10240 ;; Return value:  Size  Location     Type
 10241 ;;                  2    1[COMMON] unsigned int 
 10242 ;; Registers used:
 10243 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10244 ;; Tracked objects:
 10245 ;;		On entry : 0/0
 10246 ;;		On exit  : 0/0
 10247 ;;		Unchanged: 0/0
 10248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10249 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10250 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10252 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10253 ;;Total ram usage:        4 bytes
 10254 ;; Hardware stack levels used:    1
 10255 ;; Hardware stack levels required when called:    1
 10256 ;; This function calls:
 10257 ;;		Nothing
 10258 ;; This function is called by:
 10259 ;;		_pad
 10260 ;;		_stoa
 10261 ;; This function uses a non-reentrant model
 10262 ;;
 10263                           
 10264                           
 10265                           ;psect for function _strlen
 10266  321C                     _strlen:	
 10267                           
 10268                           ;incstack = 0
 10269                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 10270  321C  0872               	movf	strlen@s+1,w
 10271  321D  00F4               	movwf	strlen@a+1
 10272  321E  0871               	movf	strlen@s,w
 10273  321F  00F3               	movwf	strlen@a
 10274  3220                     l4167:	
 10275  3220  0871               	movf	strlen@s,w
 10276  3221  0086               	movwf	6
 10277  3222  0872               	movf	strlen@s+1,w
 10278  3223  0087               	movwf	7
 10279  3224  0801               	movf	1,w
 10280  3225  1903               	btfsc	3,2
 10281  3226  2A2C               	goto	l4169
 10282  3227  3001               	movlw	1
 10283  3228  07F1               	addwf	strlen@s,f
 10284  3229  3000               	movlw	0
 10285  322A  3DF2               	addwfc	strlen@s+1,f
 10286  322B  2A20               	goto	l4167
 10287  322C                     l4169:	
 10288  322C  0873               	movf	strlen@a,w
 10289  322D  0271               	subwf	strlen@s,w
 10290  322E  00F1               	movwf	?_strlen
 10291  322F  0874               	movf	strlen@a+1,w
 10292  3230  3B72               	subwfb	strlen@s+1,w
 10293  3231  00F2               	movwf	?_strlen+1
 10294  3232  0008               	return
 10295  3233                     __end_of_strlen:	
 10296                           
 10297                           	psect	text26
 10298  337D                     __ptext26:	
 10299 ;; *************** function _fputs *****************
 10300 ;; Defined at:
 10301 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 10302 ;; Parameters:    Size  Location     Type
 10303 ;;  s               1    wreg     PTR const unsigned char 
 10304 ;;		 -> dbuf(32), 
 10305 ;;  fp              2   10[COMMON] PTR struct _IO_FILE
 10306 ;;		 -> vsnprintf@f(6), 
 10307 ;; Auto vars:     Size  Location     Type
 10308 ;;  s               1    5[BANK0 ] PTR const unsigned char 
 10309 ;;		 -> dbuf(32), 
 10310 ;;  i               2    3[BANK0 ] int 
 10311 ;;  c               1    2[BANK0 ] unsigned char 
 10312 ;; Return value:  Size  Location     Type
 10313 ;;                  2   10[COMMON] int 
 10314 ;; Registers used:
 10315 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10316 ;; Tracked objects:
 10317 ;;		On entry : 0/0
 10318 ;;		On exit  : 0/0
 10319 ;;		Unchanged: 0/0
 10320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10321 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10322 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10323 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10324 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10325 ;;Total ram usage:        8 bytes
 10326 ;; Hardware stack levels used:    1
 10327 ;; Hardware stack levels required when called:    3
 10328 ;; This function calls:
 10329 ;;		_fputc
 10330 ;; This function is called by:
 10331 ;;		_pad
 10332 ;; This function uses a non-reentrant model
 10333 ;;
 10334                           
 10335                           
 10336                           ;psect for function _fputs
 10337  337D                     _fputs:	
 10338                           
 10339                           ;incstack = 0
 10340                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10341                           ;fputs@s stored from wreg
 10342  337D  0020               	movlb	0	; select bank0
 10343  337E  00A5               	movwf	fputs@s
 10344  337F  01A3               	clrf	fputs@i
 10345  3380  01A4               	clrf	fputs@i+1
 10346  3381                     l4161:	
 10347  3381  0823               	movf	fputs@i,w
 10348  3382  0725               	addwf	fputs@s,w
 10349  3383  00A0               	movwf	??_fputs
 10350  3384  0820               	movf	??_fputs,w
 10351  3385  0086               	movwf	6
 10352  3386  3002               	movlw	2	; select bank4/5
 10353  3387  0087               	movwf	7
 10354  3388  0801               	movf	1,w
 10355  3389  00A1               	movwf	??_fputs+1
 10356  338A  0821               	movf	??_fputs+1,w
 10357  338B  00A2               	movwf	fputs@c
 10358  338C  0822               	movf	fputs@c,w
 10359  338D  1903               	btfsc	3,2
 10360  338E  0008               	return
 10361  338F  0822               	movf	fputs@c,w
 10362  3390  00A0               	movwf	??_fputs
 10363  3391  01A1               	clrf	??_fputs+1
 10364  3392  0820               	movf	??_fputs,w
 10365  3393  00F1               	movwf	fputc@c
 10366  3394  0821               	movf	??_fputs+1,w
 10367  3395  00F2               	movwf	fputc@c+1
 10368  3396  087B               	movf	fputs@fp+1,w
 10369  3397  00F4               	movwf	fputc@fp+1
 10370  3398  087A               	movf	fputs@fp,w
 10371  3399  00F3               	movwf	fputc@fp
 10372  339A  31B6  260F  31B3   	fcall	_fputc
 10373  339D  3001               	movlw	1
 10374  339E  0020               	movlb	0	; select bank0
 10375  339F  07A3               	addwf	fputs@i,f
 10376  33A0  3000               	movlw	0
 10377  33A1  3DA4               	addwfc	fputs@i+1,f
 10378  33A2  2B81               	goto	l4161
 10379  33A3                     __end_of_fputs:	
 10380                           
 10381                           	psect	text27
 10382  360F                     __ptext27:	
 10383 ;; *************** function _fputc *****************
 10384 ;; Defined at:
 10385 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 10386 ;; Parameters:    Size  Location     Type
 10387 ;;  c               2    1[COMMON] int 
 10388 ;;  fp              2    3[COMMON] PTR struct _IO_FILE
 10389 ;;		 -> vsnprintf@f(6), 
 10390 ;; Auto vars:     Size  Location     Type
 10391 ;;		None
 10392 ;; Return value:  Size  Location     Type
 10393 ;;                  2    1[COMMON] int 
 10394 ;; Registers used:
 10395 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10396 ;; Tracked objects:
 10397 ;;		On entry : 0/0
 10398 ;;		On exit  : 0/0
 10399 ;;		Unchanged: 0/0
 10400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10401 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10403 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10404 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10405 ;;Total ram usage:        9 bytes
 10406 ;; Hardware stack levels used:    1
 10407 ;; Hardware stack levels required when called:    2
 10408 ;; This function calls:
 10409 ;;		_putch
 10410 ;; This function is called by:
 10411 ;;		_pad
 10412 ;;		_stoa
 10413 ;;		_vfpfcnvrt
 10414 ;;		_fputs
 10415 ;; This function uses a non-reentrant model
 10416 ;;
 10417                           
 10418                           
 10419                           ;psect for function _fputc
 10420  360F                     _fputc:	
 10421                           
 10422                           ;incstack = 0
 10423                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10424  360F  0873               	movf	fputc@fp,w
 10425  3610  0474               	iorwf	fputc@fp+1,w
 10426  3611  1903               	btfsc	3,2
 10427  3612  2E17               	goto	l4143
 10428  3613  0873               	movf	fputc@fp,w
 10429  3614  0474               	iorwf	fputc@fp+1,w
 10430  3615  1D03               	btfss	3,2
 10431  3616  2E1B               	goto	l4145
 10432  3617                     l4143:	
 10433  3617  0871               	movf	fputc@c,w
 10434  3618  3187  27FF         	fcall	_putch
 10435  361A  0008               	return
 10436  361B                     l4145:	
 10437  361B  0873               	movf	fputc@fp,w
 10438  361C  0086               	movwf	6
 10439  361D  0874               	movf	fputc@fp+1,w
 10440  361E  0087               	movwf	7
 10441  361F  3144               	addfsr 1,4
 10442  3620  0016               	moviw fsr1++
 10443  3621  0401               	iorwf	1,w
 10444  3622  1903               	btfsc	3,2
 10445  3623  2E42               	goto	l4149
 10446  3624  0873               	movf	fputc@fp,w
 10447  3625  0086               	movwf	6
 10448  3626  0874               	movf	fputc@fp+1,w
 10449  3627  0087               	movwf	7
 10450  3628  3144               	addfsr 1,4
 10451  3629  3F40               	moviw [0]fsr1
 10452  362A  00F5               	movwf	??_fputc
 10453  362B  3F41               	moviw [1]fsr1
 10454  362C  00F6               	movwf	??_fputc+1
 10455  362D  0873               	movf	fputc@fp,w
 10456  362E  0086               	movwf	6
 10457  362F  0874               	movf	fputc@fp+1,w
 10458  3630  0087               	movwf	7
 10459  3631  3142               	addfsr 1,2
 10460  3632  3F40               	moviw [0]fsr1
 10461  3633  00F7               	movwf	??_fputc+2
 10462  3634  3F41               	moviw [1]fsr1
 10463  3635  00F8               	movwf	??_fputc+3
 10464  3636  0878               	movf	??_fputc+3,w
 10465  3637  3A80               	xorlw	128
 10466  3638  00F9               	movwf	??_fputc+4
 10467  3639  0876               	movf	??_fputc+1,w
 10468  363A  3A80               	xorlw	128
 10469  363B  0279               	subwf	??_fputc+4,w
 10470  363C  1D03               	skipz
 10471  363D  2E40               	goto	u4035
 10472  363E  0875               	movf	??_fputc,w
 10473  363F  0277               	subwf	??_fputc+2,w
 10474  3640                     u4035:	
 10475  3640  1803               	skipnc
 10476  3641  0008               	return
 10477  3642                     l4149:	
 10478  3642  0873               	movf	fputc@fp,w
 10479  3643  0086               	movwf	6
 10480  3644  0874               	movf	fputc@fp+1,w
 10481  3645  0087               	movwf	7
 10482  3646  3142               	addfsr 1,2
 10483  3647  0873               	movf	fputc@fp,w
 10484  3648  0084               	movwf	4
 10485  3649  0874               	movf	fputc@fp+1,w
 10486  364A  0085               	movwf	5
 10487  364B  3F40               	moviw [0]fsr1
 10488  364C  0700               	addwf	0,w
 10489  364D  00F5               	movwf	??_fputc
 10490  364E  3101               	addfsr 0,1
 10491  364F  3F41               	moviw [1]fsr1
 10492  3650  3D00               	addwfc	0,w
 10493  3651  00F6               	movwf	??_fputc+1
 10494  3652  0875               	movf	??_fputc,w
 10495  3653  0086               	movwf	6
 10496  3654  0876               	movf	??_fputc+1,w
 10497  3655  0087               	movwf	7
 10498  3656  0871               	movf	fputc@c,w
 10499  3657  0081               	movwf	1
 10500  3658  0873               	movf	fputc@fp,w
 10501  3659  0086               	movwf	6
 10502  365A  0874               	movf	fputc@fp+1,w
 10503  365B  0087               	movwf	7
 10504  365C  3142               	addfsr 1,2
 10505  365D  3001               	movlw	1
 10506  365E  0781               	addwf	1,f
 10507  365F  3141               	addfsr 1,1
 10508  3660  1803               	skipnc
 10509  3661  0A81               	incf	1,f
 10510  3662  0008               	return
 10511  3663                     __end_of_fputc:	
 10512                           
 10513                           	psect	text28
 10514  07FF                     __ptext28:	
 10515 ;; *************** function _putch *****************
 10516 ;; Defined at:
 10517 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
 10518 ;; Parameters:    Size  Location     Type
 10519 ;;  c               1    wreg     unsigned char 
 10520 ;; Auto vars:     Size  Location     Type
 10521 ;;  c               1    0[COMMON] unsigned char 
 10522 ;; Return value:  Size  Location     Type
 10523 ;;                  1    wreg      void 
 10524 ;; Registers used:
 10525 ;;		wreg
 10526 ;; Tracked objects:
 10527 ;;		On entry : 0/0
 10528 ;;		On exit  : 0/0
 10529 ;;		Unchanged: 0/0
 10530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10535 ;;Total ram usage:        0 bytes
 10536 ;; Hardware stack levels used:    1
 10537 ;; Hardware stack levels required when called:    1
 10538 ;; This function calls:
 10539 ;;		Nothing
 10540 ;; This function is called by:
 10541 ;;		_fputc
 10542 ;; This function uses a non-reentrant model
 10543 ;;
 10544                           
 10545                           
 10546                           ;psect for function _putch
 10547  07FF                     _putch:	
 10548                           
 10549                           ;incstack = 0
 10550                           ; Regs used in _putch: [wreg]
 10551  07FF  0008               	return
 10552  0800                     __end_of_putch:	
 10553                           
 10554                           	psect	text29
 10555  2ADE                     __ptext29:	
 10556 ;; *************** function _atoi *****************
 10557 ;; Defined at:
 10558 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 10559 ;; Parameters:    Size  Location     Type
 10560 ;;  s               2    7[COMMON] PTR const unsigned char 
 10561 ;;		 -> STR_22(18), STR_21(18), STR_20(19), STR_19(20), 
 10562 ;;		 -> STR_18(20), STR_17(21), STR_16(21), STR_15(21), 
 10563 ;;		 -> STR_14(22), STR_13(22), STR_12(21), STR_11(21), 
 10564 ;;		 -> STR_8(20), STR_7(16), STR_6(16), STR_5(3), 
 10565 ;;		 -> STR_4(4), STR_3(4), STR_2(4), STR_1(40), 
 10566 ;; Auto vars:     Size  Location     Type
 10567 ;;  n               2   11[BANK0 ] int 
 10568 ;;  neg             2    4[BANK0 ] int 
 10569 ;; Return value:  Size  Location     Type
 10570 ;;                  2    7[COMMON] int 
 10571 ;; Registers used:
 10572 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10573 ;; Tracked objects:
 10574 ;;		On entry : 0/0
 10575 ;;		On exit  : 0/0
 10576 ;;		Unchanged: 0/0
 10577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10578 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10579 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10580 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10581 ;;      Totals:         2      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10582 ;;Total ram usage:       15 bytes
 10583 ;; Hardware stack levels used:    1
 10584 ;; Hardware stack levels required when called:    2
 10585 ;; This function calls:
 10586 ;;		___wmul
 10587 ;;		_isdigit
 10588 ;;		_isspace
 10589 ;; This function is called by:
 10590 ;;		_vfpfcnvrt
 10591 ;; This function uses a non-reentrant model
 10592 ;;
 10593                           
 10594                           
 10595                           ;psect for function _atoi
 10596  2ADE                     _atoi:	
 10597                           
 10598                           ;incstack = 0
 10599                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10600  2ADE  0020               	movlb	0	; select bank0
 10601  2ADF  01AB               	clrf	atoi@n
 10602  2AE0  01AC               	clrf	atoi@n+1
 10603  2AE1  01A4               	clrf	atoi@neg
 10604  2AE2  01A5               	clrf	atoi@neg+1
 10605  2AE3                     l6825:	
 10606  2AE3  01AA               	clrf	_atoi$1774
 10607  2AE4  0AAA               	incf	_atoi$1774,f
 10608  2AE5  0877               	movf	atoi@s,w
 10609  2AE6  0084               	movwf	4
 10610  2AE7  0878               	movf	atoi@s+1,w
 10611  2AE8  0085               	movwf	5
 10612  2AE9  0012               	moviw fsr0++
 10613  2AEA  3A20               	xorlw	32
 10614  2AEB  1903               	btfsc	3,2
 10615  2AEC  2AFF               	goto	l6833
 10616  2AED  0877               	movf	atoi@s,w
 10617  2AEE  0084               	movwf	4
 10618  2AEF  0878               	movf	atoi@s+1,w
 10619  2AF0  0085               	movwf	5
 10620  2AF1  0800               	movf	0,w	;code access
 10621  2AF2  3EF7               	addlw	247
 10622  2AF3  00A0               	movwf	??_atoi
 10623  2AF4  30FF               	movlw	255
 10624  2AF5  1803               	skipnc
 10625  2AF6  3000               	movlw	0
 10626  2AF7  00A1               	movwf	??_atoi+1
 10627  2AF8  3000               	movlw	0
 10628  2AF9  0221               	subwf	??_atoi+1,w
 10629  2AFA  3005               	movlw	5
 10630  2AFB  1903               	skipnz
 10631  2AFC  0220               	subwf	??_atoi,w
 10632  2AFD  1803               	btfsc	3,0
 10633  2AFE  01AA               	clrf	_atoi$1774
 10634  2AFF                     l6833:	
 10635  2AFF  082A               	movf	_atoi$1774,w
 10636  2B00  00A0               	movwf	??_atoi
 10637  2B01  01A1               	clrf	??_atoi+1
 10638  2B02  0820               	movf	??_atoi,w
 10639  2B03  00A6               	movwf	_atoi$1773
 10640  2B04  0821               	movf	??_atoi+1,w
 10641  2B05  00A7               	movwf	_atoi$1773+1
 10642  2B06  0826               	movf	_atoi$1773,w
 10643  2B07  0427               	iorwf	_atoi$1773+1,w
 10644  2B08  1903               	btfsc	3,2
 10645  2B09  2B14               	goto	l6841
 10646  2B0A  3001               	movlw	1
 10647  2B0B  07F7               	addwf	atoi@s,f
 10648  2B0C  3000               	movlw	0
 10649  2B0D  3DF8               	addwfc	atoi@s+1,f
 10650  2B0E  2AE3               	goto	l6825
 10651  2B0F                     l6839:	
 10652  2B0F  3001               	movlw	1
 10653  2B10  00A4               	movwf	atoi@neg
 10654  2B11  3000               	movlw	0
 10655  2B12  00A5               	movwf	atoi@neg+1
 10656  2B13  2B47               	goto	l1477
 10657  2B14                     l6841:	
 10658  2B14  0877               	movf	atoi@s,w
 10659  2B15  0084               	movwf	4
 10660  2B16  0878               	movf	atoi@s+1,w
 10661  2B17  0085               	movwf	5
 10662  2B18  0800               	movf	0,w	;code access
 10663  2B19  00A0               	movwf	??_atoi
 10664  2B1A  01A1               	clrf	??_atoi+1
 10665                           
 10666                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10667                           ; Switch size 1, requested type "simple"
 10668                           ; Number of cases is 1, Range of values is 0 to 0
 10669                           ; switch strategies available:
 10670                           ; Name         Instructions Cycles
 10671                           ; simple_byte            4     3 (average)
 10672                           ; direct_byte            8     6 (fixed)
 10673                           ; jumptable            260     6 (fixed)
 10674                           ;	Chosen strategy is simple_byte
 10675  2B1B  0821               	movf	??_atoi+1,w
 10676  2B1C  3A00               	xorlw	0	; case 0
 10677  2B1D  1903               	skipnz
 10678  2B1E  2B20               	goto	l7963
 10679  2B1F  2B4B               	goto	l6847
 10680  2B20                     l7963:	
 10681                           
 10682                           ; Switch size 1, requested type "simple"
 10683                           ; Number of cases is 2, Range of values is 43 to 45
 10684                           ; switch strategies available:
 10685                           ; Name         Instructions Cycles
 10686                           ; simple_byte            7     4 (average)
 10687                           ; direct_byte           15     9 (fixed)
 10688                           ; jumptable            263     9 (fixed)
 10689                           ;	Chosen strategy is simple_byte
 10690  2B20  0820               	movf	??_atoi,w
 10691  2B21  3A2B               	xorlw	43	; case 43
 10692  2B22  1903               	skipnz
 10693  2B23  2B47               	goto	l1477
 10694  2B24  3A06               	xorlw	6	; case 45
 10695  2B25  1903               	skipnz
 10696  2B26  2B0F               	goto	l6839
 10697  2B27  2B4B               	goto	l6847
 10698  2B28                     l6843:	
 10699  2B28  0877               	movf	atoi@s,w
 10700  2B29  0084               	movwf	4
 10701  2B2A  0878               	movf	atoi@s+1,w
 10702  2B2B  0085               	movwf	5
 10703  2B2C  0800               	movf	0,w	;code access
 10704  2B2D  00A0               	movwf	??_atoi
 10705  2B2E  082C               	movf	atoi@n+1,w
 10706  2B2F  00F2               	movwf	___wmul@multiplier+1
 10707  2B30  082B               	movf	atoi@n,w
 10708  2B31  00F1               	movwf	___wmul@multiplier
 10709  2B32  300A               	movlw	10
 10710  2B33  00F3               	movwf	___wmul@multiplicand
 10711  2B34  3000               	movlw	0
 10712  2B35  00F4               	movwf	___wmul@multiplicand+1
 10713  2B36  31B2  2292  31AA   	fcall	___wmul
 10714  2B39  0872               	movf	?___wmul+1,w
 10715  2B3A  0020               	movlb	0	; select bank0
 10716  2B3B  00A2               	movwf	??_atoi+2
 10717  2B3C  0820               	movf	??_atoi,w
 10718  2B3D  0271               	subwf	?___wmul,w
 10719  2B3E  00A1               	movwf	??_atoi+1
 10720  2B3F  1C03               	skipc
 10721  2B40  03A2               	decf	??_atoi+2,f
 10722  2B41  0821               	movf	??_atoi+1,w
 10723  2B42  3E30               	addlw	48
 10724  2B43  00AB               	movwf	atoi@n
 10725  2B44  3000               	movlw	0
 10726  2B45  3D22               	addwfc	??_atoi+2,w
 10727  2B46  00AC               	movwf	atoi@n+1
 10728  2B47                     l1477:	
 10729  2B47  3001               	movlw	1
 10730  2B48  07F7               	addwf	atoi@s,f
 10731  2B49  3000               	movlw	0
 10732  2B4A  3DF8               	addwfc	atoi@s+1,f
 10733  2B4B                     l6847:	
 10734  2B4B  0877               	movf	atoi@s,w
 10735  2B4C  0084               	movwf	4
 10736  2B4D  0878               	movf	atoi@s+1,w
 10737  2B4E  0085               	movwf	5
 10738  2B4F  0800               	movf	0,w	;code access
 10739  2B50  3ED0               	addlw	208
 10740  2B51  00A0               	movwf	??_atoi
 10741  2B52  30FF               	movlw	255
 10742  2B53  1803               	skipnc
 10743  2B54  3000               	movlw	0
 10744  2B55  00A1               	movwf	??_atoi+1
 10745  2B56  3000               	movlw	0
 10746  2B57  0221               	subwf	??_atoi+1,w
 10747  2B58  300A               	movlw	10
 10748  2B59  1903               	skipnz
 10749  2B5A  0220               	subwf	??_atoi,w
 10750  2B5B  1803               	btfsc	3,0
 10751  2B5C  2B5F               	goto	u8570
 10752  2B5D  3001               	movlw	1
 10753  2B5E  2B60               	goto	u8580
 10754  2B5F                     u8570:	
 10755  2B5F  3000               	movlw	0
 10756  2B60                     u8580:	
 10757  2B60  00A2               	movwf	??_atoi+2
 10758  2B61  01A3               	clrf	??_atoi+3
 10759  2B62  0822               	movf	??_atoi+2,w
 10760  2B63  00A8               	movwf	_atoi$1775
 10761  2B64  0823               	movf	??_atoi+3,w
 10762  2B65  00A9               	movwf	_atoi$1775+1
 10763  2B66  0828               	movf	_atoi$1775,w
 10764  2B67  0429               	iorwf	_atoi$1775+1,w
 10765  2B68  1D03               	btfss	3,2
 10766  2B69  2B28               	goto	l6843
 10767  2B6A  0824               	movf	atoi@neg,w
 10768  2B6B  0425               	iorwf	atoi@neg+1,w
 10769  2B6C  1D03               	btfss	3,2
 10770  2B6D  2B7A               	goto	l6857
 10771  2B6E  092B               	comf	atoi@n,w
 10772  2B6F  00A0               	movwf	??_atoi
 10773  2B70  092C               	comf	atoi@n+1,w
 10774  2B71  00A1               	movwf	??_atoi+1
 10775  2B72  0AA0               	incf	??_atoi,f
 10776  2B73  1903               	skipnz
 10777  2B74  0AA1               	incf	??_atoi+1,f
 10778  2B75  0820               	movf	??_atoi,w
 10779  2B76  00F7               	movwf	?_atoi
 10780  2B77  0821               	movf	??_atoi+1,w
 10781  2B78  00F8               	movwf	?_atoi+1
 10782  2B79  0008               	return
 10783  2B7A                     l6857:	
 10784  2B7A  082C               	movf	atoi@n+1,w
 10785  2B7B  00F8               	movwf	?_atoi+1
 10786  2B7C  082B               	movf	atoi@n,w
 10787  2B7D  00F7               	movwf	?_atoi
 10788  2B7E  0008               	return
 10789  2B7F                     __end_of_atoi:	
 10790                           
 10791                           	psect	text30
 10792  32E3                     __ptext30:	
 10793 ;; *************** function _isspace *****************
 10794 ;; Defined at:
 10795 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 10796 ;; Parameters:    Size  Location     Type
 10797 ;;  c               2    1[COMMON] int 
 10798 ;; Auto vars:     Size  Location     Type
 10799 ;;		None
 10800 ;; Return value:  Size  Location     Type
 10801 ;;                  2    1[COMMON] int 
 10802 ;; Registers used:
 10803 ;;		wreg, status,2, status,0
 10804 ;; Tracked objects:
 10805 ;;		On entry : 0/0
 10806 ;;		On exit  : 0/0
 10807 ;;		Unchanged: 0/0
 10808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10809 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10810 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10811 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10812 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10813 ;;Total ram usage:        5 bytes
 10814 ;; Hardware stack levels used:    1
 10815 ;; Hardware stack levels required when called:    1
 10816 ;; This function calls:
 10817 ;;		Nothing
 10818 ;; This function is called by:
 10819 ;;		_atoi
 10820 ;; This function uses a non-reentrant model
 10821 ;;
 10822                           
 10823                           
 10824                           ;psect for function _isspace
 10825  32E3                     _isspace:	
 10826                           
 10827                           ;incstack = 0
 10828                           ; Regs used in _isspace: [wreg+status,2+status,0]
 10829  32E3  01F5               	clrf	_isspace$1800
 10830  32E4  0AF5               	incf	_isspace$1800,f
 10831  32E5  3020               	movlw	32
 10832  32E6  0671               	xorwf	isspace@c,w
 10833  32E7  0472               	iorwf	isspace@c+1,w
 10834  32E8  1903               	btfsc	3,2
 10835  32E9  2AF7               	goto	l4353
 10836  32EA  0871               	movf	isspace@c,w
 10837  32EB  3EF7               	addlw	247
 10838  32EC  00F3               	movwf	??_isspace
 10839  32ED  30FF               	movlw	255
 10840  32EE  3D72               	addwfc	isspace@c+1,w
 10841  32EF  00F4               	movwf	??_isspace+1
 10842  32F0  3000               	movlw	0
 10843  32F1  0274               	subwf	??_isspace+1,w
 10844  32F2  3005               	movlw	5
 10845  32F3  1903               	skipnz
 10846  32F4  0273               	subwf	??_isspace,w
 10847  32F5  1803               	btfsc	3,0
 10848  32F6  01F5               	clrf	_isspace$1800
 10849  32F7                     l4353:	
 10850  32F7  0875               	movf	_isspace$1800,w
 10851  32F8  00F3               	movwf	??_isspace
 10852  32F9  01F4               	clrf	??_isspace+1
 10853  32FA  0873               	movf	??_isspace,w
 10854  32FB  00F1               	movwf	?_isspace
 10855  32FC  0874               	movf	??_isspace+1,w
 10856  32FD  00F2               	movwf	?_isspace+1
 10857  32FE  0008               	return
 10858  32FF                     __end_of_isspace:	
 10859                           
 10860                           	psect	text31
 10861  3205                     __ptext31:	
 10862 ;; *************** function _isdigit *****************
 10863 ;; Defined at:
 10864 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 10865 ;; Parameters:    Size  Location     Type
 10866 ;;  c               2    1[COMMON] int 
 10867 ;; Auto vars:     Size  Location     Type
 10868 ;;		None
 10869 ;; Return value:  Size  Location     Type
 10870 ;;                  2    1[COMMON] int 
 10871 ;; Registers used:
 10872 ;;		wreg, status,2, status,0
 10873 ;; Tracked objects:
 10874 ;;		On entry : 0/0
 10875 ;;		On exit  : 0/0
 10876 ;;		Unchanged: 0/0
 10877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10878 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10880 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10881 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10882 ;;Total ram usage:        6 bytes
 10883 ;; Hardware stack levels used:    1
 10884 ;; Hardware stack levels required when called:    1
 10885 ;; This function calls:
 10886 ;;		Nothing
 10887 ;; This function is called by:
 10888 ;;		_vfpfcnvrt
 10889 ;;		_atoi
 10890 ;; This function uses a non-reentrant model
 10891 ;;
 10892                           
 10893                           
 10894                           ;psect for function _isdigit
 10895  3205                     _isdigit:	
 10896                           
 10897                           ;incstack = 0
 10898                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 10899  3205  0871               	movf	isdigit@c,w
 10900  3206  3ED0               	addlw	208
 10901  3207  00F3               	movwf	??_isdigit
 10902  3208  30FF               	movlw	255
 10903  3209  3D72               	addwfc	isdigit@c+1,w
 10904  320A  00F4               	movwf	??_isdigit+1
 10905  320B  3000               	movlw	0
 10906  320C  0274               	subwf	??_isdigit+1,w
 10907  320D  300A               	movlw	10
 10908  320E  1903               	skipnz
 10909  320F  0273               	subwf	??_isdigit,w
 10910  3210  1803               	btfsc	3,0
 10911  3211  2A14               	goto	u4200
 10912  3212  3001               	movlw	1
 10913  3213  2A15               	goto	u4210
 10914  3214                     u4200:	
 10915  3214  3000               	movlw	0
 10916  3215                     u4210:	
 10917  3215  00F5               	movwf	??_isdigit+2
 10918  3216  01F6               	clrf	??_isdigit+3
 10919  3217  0875               	movf	??_isdigit+2,w
 10920  3218  00F1               	movwf	?_isdigit
 10921  3219  0876               	movf	??_isdigit+3,w
 10922  321A  00F2               	movwf	?_isdigit+1
 10923  321B  0008               	return
 10924  321C                     __end_of_isdigit:	
 10925                           
 10926                           	psect	text32
 10927  3278                     __ptext32:	
 10928 ;; *************** function _EUSART_Write_Text *****************
 10929 ;; Defined at:
 10930 ;;		line 75 in file "EUSART.c"
 10931 ;; Parameters:    Size  Location     Type
 10932 ;;  text            2    2[COMMON] PTR unsigned char 
 10933 ;;		 -> STR_23(3), STR_10(3), STR_9(38), messageBuffer(127), 
 10934 ;; Auto vars:     Size  Location     Type
 10935 ;;  i               2    5[COMMON] int 
 10936 ;; Return value:  Size  Location     Type
 10937 ;;                  1    wreg      void 
 10938 ;; Registers used:
 10939 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10940 ;; Tracked objects:
 10941 ;;		On entry : 0/0
 10942 ;;		On exit  : 0/0
 10943 ;;		Unchanged: 0/0
 10944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10945 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10946 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10947 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10948 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10949 ;;Total ram usage:        5 bytes
 10950 ;; Hardware stack levels used:    1
 10951 ;; Hardware stack levels required when called:    2
 10952 ;; This function calls:
 10953 ;;		_EUSART_Write
 10954 ;; This function is called by:
 10955 ;;		_statemachine
 10956 ;;		_printcellParameters
 10957 ;;		_printotAFERegisters
 10958 ;; This function uses a non-reentrant model
 10959 ;;
 10960                           
 10961                           
 10962                           ;psect for function _EUSART_Write_Text
 10963  3278                     _EUSART_Write_Text:	
 10964                           
 10965                           ;EUSART.c: 75: void EUSART_Write_Text(char *text);EUSART.c: 76: {;EUSART.c: 77:   int i;
      +                          ;EUSART.c: 78:   for(i=0;text[i]!='\0';i++)
 10966                           
 10967                           ;incstack = 0
 10968                           ; Regs used in _EUSART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10969  3278  01F5               	clrf	EUSART_Write_Text@i
 10970  3279  01F6               	clrf	EUSART_Write_Text@i+1
 10971  327A                     l5915:	
 10972  327A  0872               	movf	EUSART_Write_Text@text,w
 10973  327B  0775               	addwf	EUSART_Write_Text@i,w
 10974  327C  0084               	movwf	4
 10975  327D  0873               	movf	EUSART_Write_Text@text+1,w
 10976  327E  3D76               	addwfc	EUSART_Write_Text@i+1,w
 10977  327F  0085               	movwf	5
 10978  3280  0012               	moviw fsr0++
 10979  3281  1903               	btfsc	3,2
 10980  3282  0008               	return
 10981                           
 10982                           ;EUSART.c: 79:    EUSART_Write(text[i]);
 10983  3283  0872               	movf	EUSART_Write_Text@text,w
 10984  3284  0775               	addwf	EUSART_Write_Text@i,w
 10985  3285  0084               	movwf	4
 10986  3286  0873               	movf	EUSART_Write_Text@text+1,w
 10987  3287  3D76               	addwfc	EUSART_Write_Text@i+1,w
 10988  3288  0085               	movwf	5
 10989  3289  0800               	movf	0,w	;code access
 10990  328A  3188  2000  31B2   	fcall	_EUSART_Write
 10991  328D  3001               	movlw	1
 10992  328E  07F5               	addwf	EUSART_Write_Text@i,f
 10993  328F  3000               	movlw	0
 10994  3290  3DF6               	addwfc	EUSART_Write_Text@i+1,f
 10995  3291  2A7A               	goto	l5915
 10996  3292                     __end_of_EUSART_Write_Text:	
 10997                           
 10998                           	psect	text33
 10999  0800                     __ptext33:	
 11000 ;; *************** function _EUSART_Write *****************
 11001 ;; Defined at:
 11002 ;;		line 56 in file "EUSART.c"
 11003 ;; Parameters:    Size  Location     Type
 11004 ;;  txData          1    wreg     unsigned char 
 11005 ;; Auto vars:     Size  Location     Type
 11006 ;;  txData          1    1[COMMON] unsigned char 
 11007 ;; Return value:  Size  Location     Type
 11008 ;;                  1    wreg      void 
 11009 ;; Registers used:
 11010 ;;		wreg
 11011 ;; Tracked objects:
 11012 ;;		On entry : 0/0
 11013 ;;		On exit  : 0/0
 11014 ;;		Unchanged: 0/0
 11015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11017 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11019 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11020 ;;Total ram usage:        1 bytes
 11021 ;; Hardware stack levels used:    1
 11022 ;; Hardware stack levels required when called:    1
 11023 ;; This function calls:
 11024 ;;		Nothing
 11025 ;; This function is called by:
 11026 ;;		_EUSART_Write_Text
 11027 ;; This function uses a non-reentrant model
 11028 ;;
 11029                           
 11030                           
 11031                           ;psect for function _EUSART_Write
 11032  0800                     _EUSART_Write:	
 11033                           
 11034                           ;incstack = 0
 11035                           ; Regs used in _EUSART_Write: [wreg]
 11036                           ;EUSART_Write@txData stored from wreg
 11037  0800  00F1               	movwf	EUSART_Write@txData
 11038  0801                     l267:	
 11039                           ;EUSART.c: 59:     {;EUSART.c: 60:     }
 11040                           
 11041                           
 11042                           ;EUSART.c: 58:     while(0 == PIR1bits.TXIF)
 11043  0801  0020               	movlb	0	; select bank0
 11044  0802  1E11               	btfss	17,4	;volatile
 11045  0803  2801               	goto	l267
 11046                           
 11047                           ;EUSART.c: 62:     TX1REG = txData;
 11048  0804  0871               	movf	EUSART_Write@txData,w
 11049  0805  0023               	movlb	3	; select bank3
 11050  0806  009A               	movwf	26	;volatile
 11051  0807  0008               	return
 11052  0808                     __end_of_EUSART_Write:	
 11053                           
 11054                           	psect	text34
 11055  3663                     __ptext34:	
 11056 ;; *************** function _init_AFE *****************
 11057 ;; Defined at:
 11058 ;;		line 3 in file "BQ76920.c"
 11059 ;; Parameters:    Size  Location     Type
 11060 ;;		None
 11061 ;; Auto vars:     Size  Location     Type
 11062 ;;		None
 11063 ;; Return value:  Size  Location     Type
 11064 ;;                  1    wreg      void 
 11065 ;; Registers used:
 11066 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11067 ;; Tracked objects:
 11068 ;;		On entry : 0/0
 11069 ;;		On exit  : 0/0
 11070 ;;		Unchanged: 0/0
 11071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11076 ;;Total ram usage:        0 bytes
 11077 ;; Hardware stack levels used:    1
 11078 ;; Hardware stack levels required when called:    4
 11079 ;; This function calls:
 11080 ;;		_setCellOvervoltageProtection
 11081 ;;		_setCellUndervoltageProtection
 11082 ;;		_setOverCurrentDischargeProtection
 11083 ;;		_setShortCircuitProtection
 11084 ;;		_setShuntResistorValue
 11085 ;;		_setTemperatureLimitsint
 11086 ;; This function is called by:
 11087 ;;		_statemachine
 11088 ;; This function uses a non-reentrant model
 11089 ;;
 11090                           
 11091                           
 11092                           ;psect for function _init_AFE
 11093  3663                     _init_AFE:	
 11094                           
 11095                           ;BQ76920.c: 5:     setTemperatureLimitsint(-20, 45, 0, 45);
 11096                           
 11097                           ;incstack = 0
 11098                           ; Regs used in _init_AFE: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11099  3663  30EC               	movlw	236
 11100  3664  0020               	movlb	0	; select bank0
 11101  3665  00A0               	movwf	setTemperatureLimitsint@minDischarge_degC
 11102  3666  30FF               	movlw	255
 11103  3667  00A1               	movwf	setTemperatureLimitsint@minDischarge_degC+1
 11104  3668  302D               	movlw	45
 11105  3669  00A2               	movwf	setTemperatureLimitsint@maxDischarge_degC
 11106  366A  3000               	movlw	0
 11107  366B  00A3               	movwf	setTemperatureLimitsint@maxDischarge_degC+1
 11108  366C  3000               	movlw	0
 11109  366D  00A4               	movwf	setTemperatureLimitsint@minCharge_degC
 11110  366E  00A5               	movwf	setTemperatureLimitsint@minCharge_degC+1
 11111  366F  302D               	movlw	45
 11112  3670  00A6               	movwf	setTemperatureLimitsint@maxCharge_degC
 11113  3671  3000               	movlw	0
 11114  3672  00A7               	movwf	setTemperatureLimitsint@maxCharge_degC+1
 11115  3673  31B5  2579  31B6   	fcall	_setTemperatureLimitsint
 11116                           
 11117                           ;BQ76920.c: 6:     setShuntResistorValue(0.02);
 11118  3676  303C               	movlw	60
 11119  3677  00F4               	movwf	setShuntResistorValue@res_mOhm+3
 11120  3678  30A3               	movlw	163
 11121  3679  00F3               	movwf	setShuntResistorValue@res_mOhm+2
 11122  367A  30D7               	movlw	215
 11123  367B  00F2               	movwf	setShuntResistorValue@res_mOhm+1
 11124  367C  300A               	movlw	10
 11125  367D  00F1               	movwf	setShuntResistorValue@res_mOhm
 11126  367E  31B1  21C4  31B6   	fcall	_setShuntResistorValue
 11127                           
 11128                           ;BQ76920.c: 9:     setShortCircuitProtection(500, 200);
 11129  3681  3000               	movlw	0
 11130  3682  0020               	movlb	0	; select bank0
 11131  3683  00E9               	movwf	setShortCircuitProtection@current_mA+3
 11132  3684  3000               	movlw	0
 11133  3685  00E8               	movwf	setShortCircuitProtection@current_mA+2
 11134  3686  3001               	movlw	1
 11135  3687  00E7               	movwf	setShortCircuitProtection@current_mA+1
 11136  3688  30F4               	movlw	244
 11137  3689  00E6               	movwf	setShortCircuitProtection@current_mA
 11138  368A  30C8               	movlw	200
 11139  368B  00EA               	movwf	setShortCircuitProtection@delay_us
 11140  368C  3000               	movlw	0
 11141  368D  00EB               	movwf	setShortCircuitProtection@delay_us+1
 11142  368E  31A6  26E8  31B6   	fcall	_setShortCircuitProtection
 11143                           
 11144                           ;BQ76920.c: 14:     setOverCurrentDischargeProtection(10, 320);
 11145  3691  3000               	movlw	0
 11146  3692  0020               	movlb	0	; select bank0
 11147  3693  00E9               	movwf	setOverCurrentDischargeProtection@current_mA+3
 11148  3694  3000               	movlw	0
 11149  3695  00E8               	movwf	setOverCurrentDischargeProtection@current_mA+2
 11150  3696  3000               	movlw	0
 11151  3697  00E7               	movwf	setOverCurrentDischargeProtection@current_mA+1
 11152  3698  300A               	movlw	10
 11153  3699  00E6               	movwf	setOverCurrentDischargeProtection@current_mA
 11154  369A  3040               	movlw	64
 11155  369B  00EA               	movwf	setOverCurrentDischargeProtection@delay_ms
 11156  369C  3001               	movlw	1
 11157  369D  00EB               	movwf	setOverCurrentDischargeProtection@delay_ms+1
 11158  369E  31A5  25D3  31B6   	fcall	_setOverCurrentDischargeProtection
 11159                           
 11160                           ;BQ76920.c: 15:     setCellUndervoltageProtection(2900, 2);
 11161  36A1  3054               	movlw	84
 11162  36A2  0020               	movlb	0	; select bank0
 11163  36A3  00B2               	movwf	setCellUndervoltageProtection@voltage_mV
 11164  36A4  300B               	movlw	11
 11165  36A5  00B3               	movwf	setCellUndervoltageProtection@voltage_mV+1
 11166  36A6  3002               	movlw	2
 11167  36A7  00B4               	movwf	setCellUndervoltageProtection@delay_s
 11168  36A8  3000               	movlw	0
 11169  36A9  00B5               	movwf	setCellUndervoltageProtection@delay_s+1
 11170  36AA  31A1  213D  31B6   	fcall	_setCellUndervoltageProtection
 11171                           
 11172                           ;BQ76920.c: 16:     setCellOvervoltageProtection(4100,2);
 11173  36AD  3004               	movlw	4
 11174  36AE  0020               	movlb	0	; select bank0
 11175  36AF  00B2               	movwf	setCellOvervoltageProtection@voltage_mV
 11176  36B0  3010               	movlw	16
 11177  36B1  00B3               	movwf	setCellOvervoltageProtection@voltage_mV+1
 11178  36B2  3002               	movlw	2
 11179  36B3  00B4               	movwf	setCellOvervoltageProtection@delay_s
 11180  36B4  3000               	movlw	0
 11181  36B5  00B5               	movwf	setCellOvervoltageProtection@delay_s+1
 11182  36B6  31AF  272B         	fcall	_setCellOvervoltageProtection
 11183  36B8  0008               	return
 11184  36B9                     __end_of_init_AFE:	
 11185                           
 11186                           	psect	text35
 11187  3579                     __ptext35:	
 11188 ;; *************** function _setTemperatureLimitsint *****************
 11189 ;; Defined at:
 11190 ;;		line 61 in file "BQ76920.c"
 11191 ;; Parameters:    Size  Location     Type
 11192 ;;  minDischarge    2    0[BANK0 ] int 
 11193 ;;  maxDischarge    2    2[BANK0 ] int 
 11194 ;;  minCharge_de    2    4[BANK0 ] int 
 11195 ;;  maxCharge_de    2    6[BANK0 ] int 
 11196 ;; Auto vars:     Size  Location     Type
 11197 ;;		None
 11198 ;; Return value:  Size  Location     Type
 11199 ;;                  1    wreg      void 
 11200 ;; Registers used:
 11201 ;;		wreg, status,2, status,0, pclath, cstack
 11202 ;; Tracked objects:
 11203 ;;		On entry : 0/0
 11204 ;;		On exit  : 0/0
 11205 ;;		Unchanged: 0/0
 11206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11207 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11210 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11211 ;;Total ram usage:        8 bytes
 11212 ;; Hardware stack levels used:    1
 11213 ;; Hardware stack levels required when called:    2
 11214 ;; This function calls:
 11215 ;;		___wmul
 11216 ;; This function is called by:
 11217 ;;		_init_AFE
 11218 ;; This function uses a non-reentrant model
 11219 ;;
 11220                           
 11221                           
 11222                           ;psect for function _setTemperatureLimitsint
 11223  3579                     _setTemperatureLimitsint:	
 11224                           
 11225                           ;BQ76920.c: 63:     minCellTempDischarge = minDischarge_degC * 10;
 11226                           
 11227                           ;incstack = 0
 11228                           ; Regs used in _setTemperatureLimitsint: [wreg+status,2+status,0+pclath+cstack]
 11229  3579  0020               	movlb	0	; select bank0
 11230  357A  0821               	movf	setTemperatureLimitsint@minDischarge_degC+1,w
 11231  357B  00F2               	movwf	___wmul@multiplier+1
 11232  357C  0820               	movf	setTemperatureLimitsint@minDischarge_degC,w
 11233  357D  00F1               	movwf	___wmul@multiplier
 11234  357E  300A               	movlw	10
 11235  357F  00F3               	movwf	___wmul@multiplicand
 11236  3580  3000               	movlw	0
 11237  3581  00F4               	movwf	___wmul@multiplicand+1
 11238  3582  31B2  2292  31B5   	fcall	___wmul
 11239  3585  0872               	movf	?___wmul+1,w
 11240  3586  0023               	movlb	3	; select bank3
 11241  3587  00E1               	movwf	(_minCellTempDischarge+1)^(0+384)
 11242  3588  0871               	movf	?___wmul,w
 11243  3589  00E0               	movwf	_minCellTempDischarge^(0+384)
 11244                           
 11245                           ;BQ76920.c: 64:     maxCellTempDischarge = maxDischarge_degC * 10;
 11246  358A  0020               	movlb	0	; select bank0
 11247  358B  0823               	movf	setTemperatureLimitsint@maxDischarge_degC+1,w
 11248  358C  00F2               	movwf	___wmul@multiplier+1
 11249  358D  0822               	movf	setTemperatureLimitsint@maxDischarge_degC,w
 11250  358E  00F1               	movwf	___wmul@multiplier
 11251  358F  300A               	movlw	10
 11252  3590  00F3               	movwf	___wmul@multiplicand
 11253  3591  3000               	movlw	0
 11254  3592  00F4               	movwf	___wmul@multiplicand+1
 11255  3593  31B2  2292  31B5   	fcall	___wmul
 11256  3596  0872               	movf	?___wmul+1,w
 11257  3597  0023               	movlb	3	; select bank3
 11258  3598  00DD               	movwf	(_maxCellTempDischarge+1)^(0+384)
 11259  3599  0871               	movf	?___wmul,w
 11260  359A  00DC               	movwf	_maxCellTempDischarge^(0+384)
 11261                           
 11262                           ;BQ76920.c: 65:     minCellTempCharge = minCharge_degC * 10;
 11263  359B  0020               	movlb	0	; select bank0
 11264  359C  0825               	movf	setTemperatureLimitsint@minCharge_degC+1,w
 11265  359D  00F2               	movwf	___wmul@multiplier+1
 11266  359E  0824               	movf	setTemperatureLimitsint@minCharge_degC,w
 11267  359F  00F1               	movwf	___wmul@multiplier
 11268  35A0  300A               	movlw	10
 11269  35A1  00F3               	movwf	___wmul@multiplicand
 11270  35A2  3000               	movlw	0
 11271  35A3  00F4               	movwf	___wmul@multiplicand+1
 11272  35A4  31B2  2292  31B5   	fcall	___wmul
 11273  35A7  0872               	movf	?___wmul+1,w
 11274  35A8  0023               	movlb	3	; select bank3
 11275  35A9  00E3               	movwf	(_minCellTempCharge+1)^(0+384)
 11276  35AA  0871               	movf	?___wmul,w
 11277  35AB  00E2               	movwf	_minCellTempCharge^(0+384)
 11278                           
 11279                           ;BQ76920.c: 66:     maxCellTempCharge = maxCharge_degC * 10;
 11280  35AC  0020               	movlb	0	; select bank0
 11281  35AD  0827               	movf	setTemperatureLimitsint@maxCharge_degC+1,w
 11282  35AE  00F2               	movwf	___wmul@multiplier+1
 11283  35AF  0826               	movf	setTemperatureLimitsint@maxCharge_degC,w
 11284  35B0  00F1               	movwf	___wmul@multiplier
 11285  35B1  300A               	movlw	10
 11286  35B2  00F3               	movwf	___wmul@multiplicand
 11287  35B3  3000               	movlw	0
 11288  35B4  00F4               	movwf	___wmul@multiplicand+1
 11289  35B5  31B2  2292         	fcall	___wmul
 11290  35B7  0872               	movf	?___wmul+1,w
 11291  35B8  0023               	movlb	3	; select bank3
 11292  35B9  00DF               	movwf	(_maxCellTempCharge+1)^(0+384)
 11293  35BA  0871               	movf	?___wmul,w
 11294  35BB  00DE               	movwf	_maxCellTempCharge^(0+384)
 11295  35BC  0008               	return
 11296  35BD                     __end_of_setTemperatureLimitsint:	
 11297                           
 11298                           	psect	text36
 11299  3292                     __ptext36:	
 11300 ;; *************** function ___wmul *****************
 11301 ;; Defined at:
 11302 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 11303 ;; Parameters:    Size  Location     Type
 11304 ;;  multiplier      2    1[COMMON] unsigned int 
 11305 ;;  multiplicand    2    3[COMMON] unsigned int 
 11306 ;; Auto vars:     Size  Location     Type
 11307 ;;  product         2    5[COMMON] unsigned int 
 11308 ;; Return value:  Size  Location     Type
 11309 ;;                  2    1[COMMON] unsigned int 
 11310 ;; Registers used:
 11311 ;;		wreg, status,2, status,0
 11312 ;; Tracked objects:
 11313 ;;		On entry : 0/0
 11314 ;;		On exit  : 0/0
 11315 ;;		Unchanged: 0/0
 11316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11317 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11318 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11320 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11321 ;;Total ram usage:        6 bytes
 11322 ;; Hardware stack levels used:    1
 11323 ;; Hardware stack levels required when called:    1
 11324 ;; This function calls:
 11325 ;;		Nothing
 11326 ;; This function is called by:
 11327 ;;		_setTemperatureLimitsint
 11328 ;;		_atoi
 11329 ;; This function uses a non-reentrant model
 11330 ;;
 11331                           
 11332                           
 11333                           ;psect for function ___wmul
 11334  3292                     ___wmul:	
 11335                           
 11336                           ;incstack = 0
 11337                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 11338  3292  01F5               	clrf	___wmul@product
 11339  3293  01F6               	clrf	___wmul@product+1
 11340  3294                     l4227:	
 11341  3294  1C71               	btfss	___wmul@multiplier,0
 11342  3295  2A9A               	goto	l1002
 11343  3296  0873               	movf	___wmul@multiplicand,w
 11344  3297  07F5               	addwf	___wmul@product,f
 11345  3298  0874               	movf	___wmul@multiplicand+1,w
 11346  3299  3DF6               	addwfc	___wmul@product+1,f
 11347  329A                     l1002:	
 11348  329A  3001               	movlw	1
 11349  329B                     u4235:	
 11350  329B  35F3               	lslf	___wmul@multiplicand,f
 11351  329C  0DF4               	rlf	___wmul@multiplicand+1,f
 11352  329D  0B89               	decfsz	9,f
 11353  329E  2A9B               	goto	u4235
 11354  329F  3001               	movlw	1
 11355  32A0                     u4245:	
 11356  32A0  36F2               	lsrf	___wmul@multiplier+1,f
 11357  32A1  0CF1               	rrf	___wmul@multiplier,f
 11358  32A2  0B89               	decfsz	9,f
 11359  32A3  2AA0               	goto	u4245
 11360  32A4  0871               	movf	___wmul@multiplier,w
 11361  32A5  0472               	iorwf	___wmul@multiplier+1,w
 11362  32A6  1D03               	btfss	3,2
 11363  32A7  2A94               	goto	l4227
 11364  32A8  0876               	movf	___wmul@product+1,w
 11365  32A9  00F2               	movwf	?___wmul+1
 11366  32AA  0875               	movf	___wmul@product,w
 11367  32AB  00F1               	movwf	?___wmul
 11368  32AC  0008               	return
 11369  32AD                     __end_of___wmul:	
 11370                           
 11371                           	psect	text37
 11372  31C4                     __ptext37:	
 11373 ;; *************** function _setShuntResistorValue *****************
 11374 ;; Defined at:
 11375 ;;		line 73 in file "BQ76920.c"
 11376 ;; Parameters:    Size  Location     Type
 11377 ;;  res_mOhm        4    1[COMMON] float 
 11378 ;; Auto vars:     Size  Location     Type
 11379 ;;		None
 11380 ;; Return value:  Size  Location     Type
 11381 ;;                  1    wreg      void 
 11382 ;; Registers used:
 11383 ;;		wreg
 11384 ;; Tracked objects:
 11385 ;;		On entry : 0/0
 11386 ;;		On exit  : 0/0
 11387 ;;		Unchanged: 0/0
 11388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11389 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11392 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11393 ;;Total ram usage:        4 bytes
 11394 ;; Hardware stack levels used:    1
 11395 ;; Hardware stack levels required when called:    1
 11396 ;; This function calls:
 11397 ;;		Nothing
 11398 ;; This function is called by:
 11399 ;;		_init_AFE
 11400 ;; This function uses a non-reentrant model
 11401 ;;
 11402                           
 11403                           
 11404                           ;psect for function _setShuntResistorValue
 11405  31C4                     _setShuntResistorValue:	
 11406                           
 11407                           ;BQ76920.c: 74:     shuntResistorValue_mOhm = res_mOhm;
 11408                           
 11409                           ;incstack = 0
 11410                           ; Regs used in _setShuntResistorValue: [wreg]
 11411  31C4  0874               	movf	setShuntResistorValue@res_mOhm+3,w
 11412  31C5  0023               	movlb	3	; select bank3
 11413  31C6  00BB               	movwf	(_shuntResistorValue_mOhm+3)^(0+384)
 11414  31C7  0873               	movf	setShuntResistorValue@res_mOhm+2,w
 11415  31C8  00BA               	movwf	(_shuntResistorValue_mOhm+2)^(0+384)
 11416  31C9  0872               	movf	setShuntResistorValue@res_mOhm+1,w
 11417  31CA  00B9               	movwf	(_shuntResistorValue_mOhm+1)^(0+384)
 11418  31CB  0871               	movf	setShuntResistorValue@res_mOhm,w
 11419  31CC  00B8               	movwf	_shuntResistorValue_mOhm^(0+384)
 11420  31CD  0008               	return
 11421  31CE                     __end_of_setShuntResistorValue:	
 11422                           
 11423                           	psect	text38
 11424  26E8                     __ptext38:	
 11425 ;; *************** function _setShortCircuitProtection *****************
 11426 ;; Defined at:
 11427 ;;		line 81 in file "BQ76920.c"
 11428 ;; Parameters:    Size  Location     Type
 11429 ;;  current_mA      4   70[BANK0 ] long 
 11430 ;;  delay_us        2   74[BANK0 ] int 
 11431 ;; Auto vars:     Size  Location     Type
 11432 ;;  i               2   10[BANK1 ] int 
 11433 ;;  i               2    8[BANK1 ] int 
 11434 ;;  scaler          4    0[BANK1 ] float 
 11435 ;; Return value:  Size  Location     Type
 11436 ;;                  1    wreg      void 
 11437 ;; Registers used:
 11438 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11439 ;; Tracked objects:
 11440 ;;		On entry : 0/0
 11441 ;;		On exit  : 0/0
 11442 ;;		Unchanged: 0/0
 11443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11444 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11445 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11446 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11447 ;;      Totals:         0       9      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11448 ;;Total ram usage:       21 bytes
 11449 ;; Hardware stack levels used:    1
 11450 ;; Hardware stack levels required when called:    3
 11451 ;; This function calls:
 11452 ;;		_I2C_writeRegister
 11453 ;;		___fldiv
 11454 ;;		___flge
 11455 ;;		___flmul
 11456 ;;		___xxtofl
 11457 ;; This function is called by:
 11458 ;;		_init_AFE
 11459 ;; This function uses a non-reentrant model
 11460 ;;
 11461                           
 11462                           
 11463                           ;psect for function _setShortCircuitProtection
 11464  26E8                     _setShortCircuitProtection:	
 11465                           
 11466                           ;BQ76920.c: 86:     float scaler = 1000.0;
 11467                           
 11468                           ;incstack = 0
 11469                           ; Regs used in _setShortCircuitProtection: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11470  26E8  3044               	movlw	68
 11471  26E9  0021               	movlb	1	; select bank1
 11472  26EA  00A3               	movwf	(setShortCircuitProtection@scaler+3)^(0+128)
 11473  26EB  307A               	movlw	122
 11474  26EC  00A2               	movwf	(setShortCircuitProtection@scaler+2)^(0+128)
 11475  26ED  3000               	movlw	0
 11476  26EE  00A1               	movwf	(setShortCircuitProtection@scaler+1)^(0+128)
 11477  26EF  3000               	movlw	0
 11478  26F0  00A0               	movwf	setShortCircuitProtection@scaler^(0+128)
 11479                           
 11480                           ;BQ76920.c: 87:     protect1.bits.SCD_THRESH = 0;
 11481  26F1  30F8               	movlw	-8
 11482  26F2  0023               	movlb	3	; select bank3
 11483  26F3  05E8               	andwf	_protect1^(0+384),f
 11484                           
 11485                           ;BQ76920.c: 88:     for (int i = 0; i < (sizeof(SCD_threshold_setting) / sizeof((SCD_thr
      +                          eshold_setting)[0])) - 1; i++) {
 11486  26F4  0021               	movlb	1	; select bank1
 11487  26F5  01A8               	clrf	setShortCircuitProtection@i^(0+128)
 11488  26F6  01A9               	clrf	(setShortCircuitProtection@i+1)^(0+128)
 11489  26F7                     l7393:	
 11490                           
 11491                           ;BQ76920.c: 89:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) >
      +                          = SCD_threshold_setting[i]) {
 11492  26F7  0023               	movlb	3	; select bank3
 11493  26F8  083B               	movf	(_shuntResistorValue_mOhm+3)^(0+384),w
 11494  26F9  0020               	movlb	0	; select bank0
 11495  26FA  00A9               	movwf	___flmul@b+3
 11496  26FB  0023               	movlb	3	; select bank3
 11497  26FC  083A               	movf	(_shuntResistorValue_mOhm+2)^(0+384),w
 11498  26FD  0020               	movlb	0	; select bank0
 11499  26FE  00A8               	movwf	___flmul@b+2
 11500  26FF  0023               	movlb	3	; select bank3
 11501  2700  0839               	movf	(_shuntResistorValue_mOhm+1)^(0+384),w
 11502  2701  0020               	movlb	0	; select bank0
 11503  2702  00A7               	movwf	___flmul@b+1
 11504  2703  0023               	movlb	3	; select bank3
 11505  2704  0838               	movf	_shuntResistorValue_mOhm^(0+384),w
 11506  2705  0020               	movlb	0	; select bank0
 11507  2706  00A6               	movwf	___flmul@b
 11508  2707  0869               	movf	setShortCircuitProtection@current_mA+3,w
 11509  2708  00F4               	movwf	___xxtofl@val+3
 11510  2709  0868               	movf	setShortCircuitProtection@current_mA+2,w
 11511  270A  00F3               	movwf	___xxtofl@val+2
 11512  270B  0867               	movf	setShortCircuitProtection@current_mA+1,w
 11513  270C  00F2               	movwf	___xxtofl@val+1
 11514  270D  0866               	movf	setShortCircuitProtection@current_mA,w
 11515  270E  00F1               	movwf	___xxtofl@val
 11516  270F  3001               	movlw	1
 11517  2710  31AA  2248  31A6   	fcall	___xxtofl
 11518  2713  0874               	movf	?___xxtofl+3,w
 11519  2714  0020               	movlb	0	; select bank0
 11520  2715  00AD               	movwf	___flmul@a+3
 11521  2716  0873               	movf	?___xxtofl+2,w
 11522  2717  00AC               	movwf	___flmul@a+2
 11523  2718  0872               	movf	?___xxtofl+1,w
 11524  2719  00AB               	movwf	___flmul@a+1
 11525  271A  0871               	movf	?___xxtofl,w
 11526  271B  00AA               	movwf	___flmul@a
 11527  271C  3190  2023  31A6   	fcall	___flmul
 11528  271F  0020               	movlb	0	; select bank0
 11529  2720  0829               	movf	?___flmul+3,w
 11530  2721  0021               	movlb	1	; select bank1
 11531  2722  00A7               	movwf	(_setShortCircuitProtection$2149+3)^(0+128)
 11532  2723  0020               	movlb	0	; select bank0
 11533  2724  0828               	movf	?___flmul+2,w
 11534  2725  0021               	movlb	1	; select bank1
 11535  2726  00A6               	movwf	(_setShortCircuitProtection$2149+2)^(0+128)
 11536  2727  0020               	movlb	0	; select bank0
 11537  2728  0827               	movf	?___flmul+1,w
 11538  2729  0021               	movlb	1	; select bank1
 11539  272A  00A5               	movwf	(_setShortCircuitProtection$2149+1)^(0+128)
 11540  272B  0020               	movlb	0	; select bank0
 11541  272C  0826               	movf	?___flmul,w
 11542  272D  0021               	movlb	1	; select bank1
 11543  272E  00A4               	movwf	_setShortCircuitProtection$2149^(0+128)
 11544                           
 11545                           ;BQ76920.c: 89:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) >
      +                          = SCD_threshold_setting[i]) {
 11546  272F  3044               	movlw	68
 11547  2730  0020               	movlb	0	; select bank0
 11548  2731  00C3               	movwf	___fldiv@a+3
 11549  2732  307A               	movlw	122
 11550  2733  00C2               	movwf	___fldiv@a+2
 11551  2734  3000               	movlw	0
 11552  2735  00C1               	movwf	___fldiv@a+1
 11553  2736  3000               	movlw	0
 11554  2737  00C0               	movwf	___fldiv@a
 11555  2738  0021               	movlb	1	; select bank1
 11556  2739  0823               	movf	(setShortCircuitProtection@scaler+3)^(0+128),w
 11557  273A  0020               	movlb	0	; select bank0
 11558  273B  00A9               	movwf	___flmul@b+3
 11559  273C  0021               	movlb	1	; select bank1
 11560  273D  0822               	movf	(setShortCircuitProtection@scaler+2)^(0+128),w
 11561  273E  0020               	movlb	0	; select bank0
 11562  273F  00A8               	movwf	___flmul@b+2
 11563  2740  0021               	movlb	1	; select bank1
 11564  2741  0821               	movf	(setShortCircuitProtection@scaler+1)^(0+128),w
 11565  2742  0020               	movlb	0	; select bank0
 11566  2743  00A7               	movwf	___flmul@b+1
 11567  2744  0021               	movlb	1	; select bank1
 11568  2745  0820               	movf	setShortCircuitProtection@scaler^(0+128),w
 11569  2746  0020               	movlb	0	; select bank0
 11570  2747  00A6               	movwf	___flmul@b
 11571  2748  0021               	movlb	1	; select bank1
 11572  2749  0827               	movf	(_setShortCircuitProtection$2149+3)^(0+128),w
 11573  274A  0020               	movlb	0	; select bank0
 11574  274B  00AD               	movwf	___flmul@a+3
 11575  274C  0021               	movlb	1	; select bank1
 11576  274D  0826               	movf	(_setShortCircuitProtection$2149+2)^(0+128),w
 11577  274E  0020               	movlb	0	; select bank0
 11578  274F  00AC               	movwf	___flmul@a+2
 11579  2750  0021               	movlb	1	; select bank1
 11580  2751  0825               	movf	(_setShortCircuitProtection$2149+1)^(0+128),w
 11581  2752  0020               	movlb	0	; select bank0
 11582  2753  00AB               	movwf	___flmul@a+1
 11583  2754  0021               	movlb	1	; select bank1
 11584  2755  0824               	movf	_setShortCircuitProtection$2149^(0+128),w
 11585  2756  0020               	movlb	0	; select bank0
 11586  2757  00AA               	movwf	___flmul@a
 11587  2758  3190  2023  31A6   	fcall	___flmul
 11588  275B  0020               	movlb	0	; select bank0
 11589  275C  0829               	movf	?___flmul+3,w
 11590  275D  00C7               	movwf	___fldiv@b+3
 11591  275E  0828               	movf	?___flmul+2,w
 11592  275F  00C6               	movwf	___fldiv@b+2
 11593  2760  0827               	movf	?___flmul+1,w
 11594  2761  00C5               	movwf	___fldiv@b+1
 11595  2762  0826               	movf	?___flmul,w
 11596  2763  00C4               	movwf	___fldiv@b
 11597  2764  319C  24E2  31A6   	fcall	___fldiv
 11598  2767  0020               	movlb	0	; select bank0
 11599  2768  0843               	movf	?___fldiv+3,w
 11600  2769  00DD               	movwf	___flge@ff1+3
 11601  276A  0842               	movf	?___fldiv+2,w
 11602  276B  00DC               	movwf	___flge@ff1+2
 11603  276C  0841               	movf	?___fldiv+1,w
 11604  276D  00DB               	movwf	___flge@ff1+1
 11605  276E  0840               	movf	?___fldiv,w
 11606  276F  00DA               	movwf	___flge@ff1
 11607  2770  0021               	movlb	1	; select bank1
 11608  2771  0829               	movf	(setShortCircuitProtection@i+1)^(0+128),w
 11609  2772  0085               	movwf	5
 11610  2773  0828               	movf	setShortCircuitProtection@i^(0+128),w
 11611  2774  0084               	movwf	4
 11612  2775  3584               	lslf	4,f
 11613  2776  0D85               	rlf	5,f
 11614  2777  3040               	movlw	low (_SCD_threshold_setting| (0+32768))
 11615  2778  0784               	addwf	4,f
 11616  2779  30BA               	movlw	high (_SCD_threshold_setting| (0+32768))
 11617  277A  3D85               	addwfc	5,f
 11618  277B  3F00               	moviw [0]fsr0
 11619  277C  0020               	movlb	0	; select bank0
 11620  277D  00EC               	movwf	??_setShortCircuitProtection
 11621  277E  3F01               	moviw [1]fsr0
 11622  277F  00ED               	movwf	??_setShortCircuitProtection+1
 11623  2780  086C               	movf	??_setShortCircuitProtection,w
 11624  2781  00F1               	movwf	___xxtofl@val
 11625  2782  086D               	movf	??_setShortCircuitProtection+1,w
 11626  2783  00F2               	movwf	___xxtofl@val+1
 11627  2784  0D89               	rlf	9,f
 11628  2785  3B89               	subwfb	9,f
 11629  2786  0989               	comf	9,f
 11630  2787  00F3               	movwf	___xxtofl@val+2
 11631  2788  00F4               	movwf	___xxtofl@val+3
 11632  2789  3001               	movlw	1
 11633  278A  31AA  2248  31A6   	fcall	___xxtofl
 11634  278D  0874               	movf	?___xxtofl+3,w
 11635  278E  0020               	movlb	0	; select bank0
 11636  278F  00E1               	movwf	___flge@ff2+3
 11637  2790  0873               	movf	?___xxtofl+2,w
 11638  2791  00E0               	movwf	___flge@ff2+2
 11639  2792  0872               	movf	?___xxtofl+1,w
 11640  2793  00DF               	movwf	___flge@ff2+1
 11641  2794  0871               	movf	?___xxtofl,w
 11642  2795  00DE               	movwf	___flge@ff2
 11643  2796  31A8  2051  31A6   	fcall	___flge
 11644  2799  1C03               	btfss	3,0
 11645  279A  2FA3               	goto	l7399
 11646                           
 11647                           ;BQ76920.c: 90:             protect1.bits.SCD_THRESH = i;
 11648  279B  0023               	movlb	3	; select bank3
 11649  279C  0868               	movf	_protect1^(0+384),w
 11650  279D  0021               	movlb	1	; select bank1
 11651  279E  0628               	xorwf	setShortCircuitProtection@i^(0+128),w
 11652  279F  39F8               	andlw	-8
 11653  27A0  0628               	xorwf	setShortCircuitProtection@i^(0+128),w
 11654  27A1  0023               	movlb	3	; select bank3
 11655  27A2  00E8               	movwf	_protect1^(0+384)
 11656  27A3                     l7399:	
 11657                           
 11658                           ;BQ76920.c: 92:     }
 11659  27A3  3001               	movlw	1
 11660  27A4  0021               	movlb	1	; select bank1
 11661  27A5  07A8               	addwf	setShortCircuitProtection@i^(0+128),f
 11662  27A6  3000               	movlw	0
 11663  27A7  3DA9               	addwfc	(setShortCircuitProtection@i+1)^(0+128),f
 11664  27A8  3000               	movlw	0
 11665  27A9  0229               	subwf	(setShortCircuitProtection@i+1)^(0+128),w
 11666  27AA  3007               	movlw	7
 11667  27AB  1903               	skipnz
 11668  27AC  0228               	subwf	setShortCircuitProtection@i^(0+128),w
 11669  27AD  1C03               	skipc
 11670  27AE  2EF7               	goto	l7393
 11671                           
 11672                           ;BQ76920.c: 94:     protect1.bits.SCD_DELAY = 0;
 11673  27AF  30E7               	movlw	-25
 11674  27B0  0023               	movlb	3	; select bank3
 11675  27B1  05E8               	andwf	_protect1^(0+384),f
 11676                           
 11677                           ;BQ76920.c: 95:     for (int i = 0; i < (sizeof(SCD_threshold_setting) / sizeof((SCD_thr
      +                          eshold_setting)[0])) - 1; i++) {
 11678  27B2  0021               	movlb	1	; select bank1
 11679  27B3  01AA               	clrf	setShortCircuitProtection@i_1014^(0+128)
 11680  27B4  01AB               	clrf	(setShortCircuitProtection@i_1014+1)^(0+128)
 11681  27B5                     l7411:	
 11682                           
 11683                           ;BQ76920.c: 96:         if (delay_us >= SCD_delay_setting[i]) {
 11684  27B5  082B               	movf	(setShortCircuitProtection@i_1014+1)^(0+128),w
 11685  27B6  0085               	movwf	5
 11686  27B7  082A               	movf	setShortCircuitProtection@i_1014^(0+128),w
 11687  27B8  0084               	movwf	4
 11688  27B9  3584               	lslf	4,f
 11689  27BA  0D85               	rlf	5,f
 11690  27BB  3070               	movlw	low (_SCD_delay_setting| (0+32768))
 11691  27BC  0784               	addwf	4,f
 11692  27BD  30BA               	movlw	high (_SCD_delay_setting| (0+32768))
 11693  27BE  3D85               	addwfc	5,f
 11694  27BF  3F00               	moviw [0]fsr0
 11695  27C0  0020               	movlb	0	; select bank0
 11696  27C1  00EC               	movwf	??_setShortCircuitProtection
 11697  27C2  3F01               	moviw [1]fsr0
 11698  27C3  00ED               	movwf	??_setShortCircuitProtection+1
 11699  27C4  086B               	movf	setShortCircuitProtection@delay_us+1,w
 11700  27C5  3A80               	xorlw	128
 11701  27C6  00EE               	movwf	??_setShortCircuitProtection+2
 11702  27C7  086D               	movf	??_setShortCircuitProtection+1,w
 11703  27C8  3A80               	xorlw	128
 11704  27C9  026E               	subwf	??_setShortCircuitProtection+2,w
 11705  27CA  1D03               	skipz
 11706  27CB  2FCE               	goto	u9345
 11707  27CC  086C               	movf	??_setShortCircuitProtection,w
 11708  27CD  026A               	subwf	setShortCircuitProtection@delay_us,w
 11709  27CE                     u9345:	
 11710  27CE  1C03               	skipc
 11711  27CF  2FDF               	goto	l7415
 11712                           
 11713                           ;BQ76920.c: 97:             protect1.bits.SCD_DELAY = i;
 11714  27D0  0021               	movlb	1	; select bank1
 11715  27D1  082A               	movf	setShortCircuitProtection@i_1014^(0+128),w
 11716  27D2  0020               	movlb	0	; select bank0
 11717  27D3  00EC               	movwf	??_setShortCircuitProtection
 11718  27D4  0DEC               	rlf	??_setShortCircuitProtection,f
 11719  27D5  0DEC               	rlf	??_setShortCircuitProtection,f
 11720  27D6  0DEC               	rlf	??_setShortCircuitProtection,f
 11721  27D7  0023               	movlb	3	; select bank3
 11722  27D8  0868               	movf	_protect1^(0+384),w
 11723  27D9  0020               	movlb	0	; select bank0
 11724  27DA  066C               	xorwf	??_setShortCircuitProtection,w
 11725  27DB  39E7               	andlw	-25
 11726  27DC  066C               	xorwf	??_setShortCircuitProtection,w
 11727  27DD  0023               	movlb	3	; select bank3
 11728  27DE  00E8               	movwf	_protect1^(0+384)
 11729  27DF                     l7415:	
 11730                           
 11731                           ;BQ76920.c: 99:     }
 11732  27DF  3001               	movlw	1
 11733  27E0  0021               	movlb	1	; select bank1
 11734  27E1  07AA               	addwf	setShortCircuitProtection@i_1014^(0+128),f
 11735  27E2  3000               	movlw	0
 11736  27E3  3DAB               	addwfc	(setShortCircuitProtection@i_1014+1)^(0+128),f
 11737  27E4  3000               	movlw	0
 11738  27E5  022B               	subwf	(setShortCircuitProtection@i_1014+1)^(0+128),w
 11739  27E6  3007               	movlw	7
 11740  27E7  1903               	skipnz
 11741  27E8  022A               	subwf	setShortCircuitProtection@i_1014^(0+128),w
 11742  27E9  1C03               	skipc
 11743  27EA  2FB5               	goto	l7411
 11744                           
 11745                           ;BQ76920.c: 100:     protect1.bits.RSNS = 0;
 11746  27EB  0023               	movlb	3	; select bank3
 11747  27EC  13E8               	bcf	_protect1^(0+384),7
 11748                           
 11749                           ;BQ76920.c: 102:     I2C_writeRegister(0x18, 0x06, protect1.regByte);
 11750  27ED  3018               	movlw	24
 11751  27EE  00F5               	movwf	I2C_writeRegister@slaveAddress
 11752  27EF  3000               	movlw	0
 11753  27F0  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 11754  27F1  3006               	movlw	6
 11755  27F2  00F7               	movwf	I2C_writeRegister@regAddress
 11756  27F3  3000               	movlw	0
 11757  27F4  00F8               	movwf	I2C_writeRegister@regAddress+1
 11758  27F5  0868               	movf	_protect1^(0+384),w
 11759  27F6  0020               	movlb	0	; select bank0
 11760  27F7  00EC               	movwf	??_setShortCircuitProtection
 11761  27F8  01ED               	clrf	??_setShortCircuitProtection+1
 11762  27F9  086C               	movf	??_setShortCircuitProtection,w
 11763  27FA  00F9               	movwf	I2C_writeRegister@data
 11764  27FB  086D               	movf	??_setShortCircuitProtection+1,w
 11765  27FC  00FA               	movwf	I2C_writeRegister@data+1
 11766  27FD  31B3  231C         	fcall	_I2C_writeRegister
 11767  27FF  0008               	return
 11768  2800                     __end_of_setShortCircuitProtection:	
 11769                           
 11770                           	psect	text39
 11771  25D3                     __ptext39:	
 11772 ;; *************** function _setOverCurrentDischargeProtection *****************
 11773 ;; Defined at:
 11774 ;;		line 109 in file "BQ76920.c"
 11775 ;; Parameters:    Size  Location     Type
 11776 ;;  current_mA      4   70[BANK0 ] long 
 11777 ;;  delay_ms        2   74[BANK0 ] int 
 11778 ;; Auto vars:     Size  Location     Type
 11779 ;;  i               2   10[BANK1 ] int 
 11780 ;;  i               2    8[BANK1 ] int 
 11781 ;;  scaler          4    0[BANK1 ] float 
 11782 ;; Return value:  Size  Location     Type
 11783 ;;                  1    wreg      void 
 11784 ;; Registers used:
 11785 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11786 ;; Tracked objects:
 11787 ;;		On entry : 0/0
 11788 ;;		On exit  : 0/0
 11789 ;;		Unchanged: 0/0
 11790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11791 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11792 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11793 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11794 ;;      Totals:         0       9      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11795 ;;Total ram usage:       21 bytes
 11796 ;; Hardware stack levels used:    1
 11797 ;; Hardware stack levels required when called:    3
 11798 ;; This function calls:
 11799 ;;		_I2C_writeRegister
 11800 ;;		___fldiv
 11801 ;;		___flge
 11802 ;;		___flmul
 11803 ;;		___xxtofl
 11804 ;; This function is called by:
 11805 ;;		_init_AFE
 11806 ;; This function uses a non-reentrant model
 11807 ;;
 11808                           
 11809                           
 11810                           ;psect for function _setOverCurrentDischargeProtection
 11811  25D3                     _setOverCurrentDischargeProtection:	
 11812                           
 11813                           ;BQ76920.c: 112:     float scaler = 1000.0;
 11814                           
 11815                           ;incstack = 0
 11816                           ; Regs used in _setOverCurrentDischargeProtection: [wreg-fsr0h+status,2+status,0+pclath+
      +                          cstack]
 11817  25D3  3044               	movlw	68
 11818  25D4  0021               	movlb	1	; select bank1
 11819  25D5  00A3               	movwf	(setOverCurrentDischargeProtection@scaler+3)^(0+128)
 11820  25D6  307A               	movlw	122
 11821  25D7  00A2               	movwf	(setOverCurrentDischargeProtection@scaler+2)^(0+128)
 11822  25D8  3000               	movlw	0
 11823  25D9  00A1               	movwf	(setOverCurrentDischargeProtection@scaler+1)^(0+128)
 11824  25DA  3000               	movlw	0
 11825  25DB  00A0               	movwf	setOverCurrentDischargeProtection@scaler^(0+128)
 11826                           
 11827                           ;BQ76920.c: 113:     protect2.bits.OCD_THRESH = 0;
 11828  25DC  30F0               	movlw	-16
 11829  25DD  0023               	movlb	3	; select bank3
 11830  25DE  05E7               	andwf	_protect2^(0+384),f
 11831                           
 11832                           ;BQ76920.c: 114:     for (int i = 0; i < (sizeof(OCD_threshold_setting) / sizeof((OCD_th
      +                          reshold_setting)[0])) - 1; i++) {
 11833  25DF  0021               	movlb	1	; select bank1
 11834  25E0  01A8               	clrf	setOverCurrentDischargeProtection@i^(0+128)
 11835  25E1  01A9               	clrf	(setOverCurrentDischargeProtection@i+1)^(0+128)
 11836  25E2                     l7431:	
 11837                           
 11838                           ;BQ76920.c: 115:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) 
      +                          >= OCD_threshold_setting[i]) {
 11839  25E2  0023               	movlb	3	; select bank3
 11840  25E3  083B               	movf	(_shuntResistorValue_mOhm+3)^(0+384),w
 11841  25E4  0020               	movlb	0	; select bank0
 11842  25E5  00A9               	movwf	___flmul@b+3
 11843  25E6  0023               	movlb	3	; select bank3
 11844  25E7  083A               	movf	(_shuntResistorValue_mOhm+2)^(0+384),w
 11845  25E8  0020               	movlb	0	; select bank0
 11846  25E9  00A8               	movwf	___flmul@b+2
 11847  25EA  0023               	movlb	3	; select bank3
 11848  25EB  0839               	movf	(_shuntResistorValue_mOhm+1)^(0+384),w
 11849  25EC  0020               	movlb	0	; select bank0
 11850  25ED  00A7               	movwf	___flmul@b+1
 11851  25EE  0023               	movlb	3	; select bank3
 11852  25EF  0838               	movf	_shuntResistorValue_mOhm^(0+384),w
 11853  25F0  0020               	movlb	0	; select bank0
 11854  25F1  00A6               	movwf	___flmul@b
 11855  25F2  0869               	movf	setOverCurrentDischargeProtection@current_mA+3,w
 11856  25F3  00F4               	movwf	___xxtofl@val+3
 11857  25F4  0868               	movf	setOverCurrentDischargeProtection@current_mA+2,w
 11858  25F5  00F3               	movwf	___xxtofl@val+2
 11859  25F6  0867               	movf	setOverCurrentDischargeProtection@current_mA+1,w
 11860  25F7  00F2               	movwf	___xxtofl@val+1
 11861  25F8  0866               	movf	setOverCurrentDischargeProtection@current_mA,w
 11862  25F9  00F1               	movwf	___xxtofl@val
 11863  25FA  3001               	movlw	1
 11864  25FB  31AA  2248  31A5   	fcall	___xxtofl
 11865  25FE  0874               	movf	?___xxtofl+3,w
 11866  25FF  0020               	movlb	0	; select bank0
 11867  2600  00AD               	movwf	___flmul@a+3
 11868  2601  0873               	movf	?___xxtofl+2,w
 11869  2602  00AC               	movwf	___flmul@a+2
 11870  2603  0872               	movf	?___xxtofl+1,w
 11871  2604  00AB               	movwf	___flmul@a+1
 11872  2605  0871               	movf	?___xxtofl,w
 11873  2606  00AA               	movwf	___flmul@a
 11874  2607  3190  2023  31A5   	fcall	___flmul
 11875  260A  0020               	movlb	0	; select bank0
 11876  260B  0829               	movf	?___flmul+3,w
 11877  260C  0021               	movlb	1	; select bank1
 11878  260D  00A7               	movwf	(_setOverCurrentDischargeProtection$2150+3)^(0+128)
 11879  260E  0020               	movlb	0	; select bank0
 11880  260F  0828               	movf	?___flmul+2,w
 11881  2610  0021               	movlb	1	; select bank1
 11882  2611  00A6               	movwf	(_setOverCurrentDischargeProtection$2150+2)^(0+128)
 11883  2612  0020               	movlb	0	; select bank0
 11884  2613  0827               	movf	?___flmul+1,w
 11885  2614  0021               	movlb	1	; select bank1
 11886  2615  00A5               	movwf	(_setOverCurrentDischargeProtection$2150+1)^(0+128)
 11887  2616  0020               	movlb	0	; select bank0
 11888  2617  0826               	movf	?___flmul,w
 11889  2618  0021               	movlb	1	; select bank1
 11890  2619  00A4               	movwf	_setOverCurrentDischargeProtection$2150^(0+128)
 11891                           
 11892                           ;BQ76920.c: 115:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) 
      +                          >= OCD_threshold_setting[i]) {
 11893  261A  3044               	movlw	68
 11894  261B  0020               	movlb	0	; select bank0
 11895  261C  00C3               	movwf	___fldiv@a+3
 11896  261D  307A               	movlw	122
 11897  261E  00C2               	movwf	___fldiv@a+2
 11898  261F  3000               	movlw	0
 11899  2620  00C1               	movwf	___fldiv@a+1
 11900  2621  3000               	movlw	0
 11901  2622  00C0               	movwf	___fldiv@a
 11902  2623  0021               	movlb	1	; select bank1
 11903  2624  0823               	movf	(setOverCurrentDischargeProtection@scaler+3)^(0+128),w
 11904  2625  0020               	movlb	0	; select bank0
 11905  2626  00A9               	movwf	___flmul@b+3
 11906  2627  0021               	movlb	1	; select bank1
 11907  2628  0822               	movf	(setOverCurrentDischargeProtection@scaler+2)^(0+128),w
 11908  2629  0020               	movlb	0	; select bank0
 11909  262A  00A8               	movwf	___flmul@b+2
 11910  262B  0021               	movlb	1	; select bank1
 11911  262C  0821               	movf	(setOverCurrentDischargeProtection@scaler+1)^(0+128),w
 11912  262D  0020               	movlb	0	; select bank0
 11913  262E  00A7               	movwf	___flmul@b+1
 11914  262F  0021               	movlb	1	; select bank1
 11915  2630  0820               	movf	setOverCurrentDischargeProtection@scaler^(0+128),w
 11916  2631  0020               	movlb	0	; select bank0
 11917  2632  00A6               	movwf	___flmul@b
 11918  2633  0021               	movlb	1	; select bank1
 11919  2634  0827               	movf	(_setOverCurrentDischargeProtection$2150+3)^(0+128),w
 11920  2635  0020               	movlb	0	; select bank0
 11921  2636  00AD               	movwf	___flmul@a+3
 11922  2637  0021               	movlb	1	; select bank1
 11923  2638  0826               	movf	(_setOverCurrentDischargeProtection$2150+2)^(0+128),w
 11924  2639  0020               	movlb	0	; select bank0
 11925  263A  00AC               	movwf	___flmul@a+2
 11926  263B  0021               	movlb	1	; select bank1
 11927  263C  0825               	movf	(_setOverCurrentDischargeProtection$2150+1)^(0+128),w
 11928  263D  0020               	movlb	0	; select bank0
 11929  263E  00AB               	movwf	___flmul@a+1
 11930  263F  0021               	movlb	1	; select bank1
 11931  2640  0824               	movf	_setOverCurrentDischargeProtection$2150^(0+128),w
 11932  2641  0020               	movlb	0	; select bank0
 11933  2642  00AA               	movwf	___flmul@a
 11934  2643  3190  2023  31A5   	fcall	___flmul
 11935  2646  0020               	movlb	0	; select bank0
 11936  2647  0829               	movf	?___flmul+3,w
 11937  2648  00C7               	movwf	___fldiv@b+3
 11938  2649  0828               	movf	?___flmul+2,w
 11939  264A  00C6               	movwf	___fldiv@b+2
 11940  264B  0827               	movf	?___flmul+1,w
 11941  264C  00C5               	movwf	___fldiv@b+1
 11942  264D  0826               	movf	?___flmul,w
 11943  264E  00C4               	movwf	___fldiv@b
 11944  264F  319C  24E2  31A5   	fcall	___fldiv
 11945  2652  0020               	movlb	0	; select bank0
 11946  2653  0843               	movf	?___fldiv+3,w
 11947  2654  00DD               	movwf	___flge@ff1+3
 11948  2655  0842               	movf	?___fldiv+2,w
 11949  2656  00DC               	movwf	___flge@ff1+2
 11950  2657  0841               	movf	?___fldiv+1,w
 11951  2658  00DB               	movwf	___flge@ff1+1
 11952  2659  0840               	movf	?___fldiv,w
 11953  265A  00DA               	movwf	___flge@ff1
 11954  265B  0021               	movlb	1	; select bank1
 11955  265C  0829               	movf	(setOverCurrentDischargeProtection@i+1)^(0+128),w
 11956  265D  0085               	movwf	5
 11957  265E  0828               	movf	setOverCurrentDischargeProtection@i^(0+128),w
 11958  265F  0084               	movwf	4
 11959  2660  3584               	lslf	4,f
 11960  2661  0D85               	rlf	5,f
 11961  2662  3008               	movlw	low (_OCD_threshold_setting| (0+32768))
 11962  2663  0784               	addwf	4,f
 11963  2664  30B9               	movlw	high (_OCD_threshold_setting| (0+32768))
 11964  2665  3D85               	addwfc	5,f
 11965  2666  3F00               	moviw [0]fsr0
 11966  2667  0020               	movlb	0	; select bank0
 11967  2668  00EC               	movwf	??_setOverCurrentDischargeProtection
 11968  2669  3F01               	moviw [1]fsr0
 11969  266A  00ED               	movwf	??_setOverCurrentDischargeProtection+1
 11970  266B  086C               	movf	??_setOverCurrentDischargeProtection,w
 11971  266C  00F1               	movwf	___xxtofl@val
 11972  266D  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 11973  266E  00F2               	movwf	___xxtofl@val+1
 11974  266F  0D89               	rlf	9,f
 11975  2670  3B89               	subwfb	9,f
 11976  2671  0989               	comf	9,f
 11977  2672  00F3               	movwf	___xxtofl@val+2
 11978  2673  00F4               	movwf	___xxtofl@val+3
 11979  2674  3001               	movlw	1
 11980  2675  31AA  2248  31A5   	fcall	___xxtofl
 11981  2678  0874               	movf	?___xxtofl+3,w
 11982  2679  0020               	movlb	0	; select bank0
 11983  267A  00E1               	movwf	___flge@ff2+3
 11984  267B  0873               	movf	?___xxtofl+2,w
 11985  267C  00E0               	movwf	___flge@ff2+2
 11986  267D  0872               	movf	?___xxtofl+1,w
 11987  267E  00DF               	movwf	___flge@ff2+1
 11988  267F  0871               	movf	?___xxtofl,w
 11989  2680  00DE               	movwf	___flge@ff2
 11990  2681  31A8  2051  31A5   	fcall	___flge
 11991  2684  1C03               	btfss	3,0
 11992  2685  2E8E               	goto	l7437
 11993                           
 11994                           ;BQ76920.c: 116:             protect2.bits.OCD_THRESH = i;
 11995  2686  0023               	movlb	3	; select bank3
 11996  2687  0867               	movf	_protect2^(0+384),w
 11997  2688  0021               	movlb	1	; select bank1
 11998  2689  0628               	xorwf	setOverCurrentDischargeProtection@i^(0+128),w
 11999  268A  39F0               	andlw	-16
 12000  268B  0628               	xorwf	setOverCurrentDischargeProtection@i^(0+128),w
 12001  268C  0023               	movlb	3	; select bank3
 12002  268D  00E7               	movwf	_protect2^(0+384)
 12003  268E                     l7437:	
 12004                           
 12005                           ;BQ76920.c: 118:     }
 12006  268E  3001               	movlw	1
 12007  268F  0021               	movlb	1	; select bank1
 12008  2690  07A8               	addwf	setOverCurrentDischargeProtection@i^(0+128),f
 12009  2691  3000               	movlw	0
 12010  2692  3DA9               	addwfc	(setOverCurrentDischargeProtection@i+1)^(0+128),f
 12011  2693  3000               	movlw	0
 12012  2694  0229               	subwf	(setOverCurrentDischargeProtection@i+1)^(0+128),w
 12013  2695  300F               	movlw	15
 12014  2696  1903               	skipnz
 12015  2697  0228               	subwf	setOverCurrentDischargeProtection@i^(0+128),w
 12016  2698  1C03               	skipc
 12017  2699  2DE2               	goto	l7431
 12018                           
 12019                           ;BQ76920.c: 120:     protect2.bits.OCD_DELAY = 0;
 12020  269A  308F               	movlw	-113
 12021  269B  0023               	movlb	3	; select bank3
 12022  269C  05E7               	andwf	_protect2^(0+384),f
 12023                           
 12024                           ;BQ76920.c: 121:     for (int i = 0; i < (sizeof(OCD_delay_setting) / sizeof((OCD_delay_
      +                          setting)[0])) - 1; i++) {
 12025  269D  0021               	movlb	1	; select bank1
 12026  269E  01AA               	clrf	setOverCurrentDischargeProtection@i_1023^(0+128)
 12027  269F  01AB               	clrf	(setOverCurrentDischargeProtection@i_1023+1)^(0+128)
 12028  26A0                     l7449:	
 12029                           
 12030                           ;BQ76920.c: 122:         if (delay_ms >= OCD_delay_setting[i]) {
 12031  26A0  082B               	movf	(setOverCurrentDischargeProtection@i_1023+1)^(0+128),w
 12032  26A1  0085               	movwf	5
 12033  26A2  082A               	movf	setOverCurrentDischargeProtection@i_1023^(0+128),w
 12034  26A3  0084               	movwf	4
 12035  26A4  3584               	lslf	4,f
 12036  26A5  0D85               	rlf	5,f
 12037  26A6  3030               	movlw	low (_OCD_delay_setting| (0+32768))
 12038  26A7  0784               	addwf	4,f
 12039  26A8  30BA               	movlw	high (_OCD_delay_setting| (0+32768))
 12040  26A9  3D85               	addwfc	5,f
 12041  26AA  3F00               	moviw [0]fsr0
 12042  26AB  0020               	movlb	0	; select bank0
 12043  26AC  00EC               	movwf	??_setOverCurrentDischargeProtection
 12044  26AD  3F01               	moviw [1]fsr0
 12045  26AE  00ED               	movwf	??_setOverCurrentDischargeProtection+1
 12046  26AF  086B               	movf	setOverCurrentDischargeProtection@delay_ms+1,w
 12047  26B0  3A80               	xorlw	128
 12048  26B1  00EE               	movwf	??_setOverCurrentDischargeProtection+2
 12049  26B2  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 12050  26B3  3A80               	xorlw	128
 12051  26B4  026E               	subwf	??_setOverCurrentDischargeProtection+2,w
 12052  26B5  1D03               	skipz
 12053  26B6  2EB9               	goto	u9385
 12054  26B7  086C               	movf	??_setOverCurrentDischargeProtection,w
 12055  26B8  026A               	subwf	setOverCurrentDischargeProtection@delay_ms,w
 12056  26B9                     u9385:	
 12057  26B9  1C03               	skipc
 12058  26BA  2EC8               	goto	l7453
 12059                           
 12060                           ;BQ76920.c: 123:             protect2.bits.OCD_DELAY = i;
 12061  26BB  0021               	movlb	1	; select bank1
 12062  26BC  082A               	movf	setOverCurrentDischargeProtection@i_1023^(0+128),w
 12063  26BD  0020               	movlb	0	; select bank0
 12064  26BE  00EC               	movwf	??_setOverCurrentDischargeProtection
 12065  26BF  0EEC               	swapf	??_setOverCurrentDischargeProtection,f
 12066  26C0  0023               	movlb	3	; select bank3
 12067  26C1  0867               	movf	_protect2^(0+384),w
 12068  26C2  0020               	movlb	0	; select bank0
 12069  26C3  066C               	xorwf	??_setOverCurrentDischargeProtection,w
 12070  26C4  398F               	andlw	-113
 12071  26C5  066C               	xorwf	??_setOverCurrentDischargeProtection,w
 12072  26C6  0023               	movlb	3	; select bank3
 12073  26C7  00E7               	movwf	_protect2^(0+384)
 12074  26C8                     l7453:	
 12075                           
 12076                           ;BQ76920.c: 125:     }
 12077  26C8  3001               	movlw	1
 12078  26C9  0021               	movlb	1	; select bank1
 12079  26CA  07AA               	addwf	setOverCurrentDischargeProtection@i_1023^(0+128),f
 12080  26CB  3000               	movlw	0
 12081  26CC  3DAB               	addwfc	(setOverCurrentDischargeProtection@i_1023+1)^(0+128),f
 12082  26CD  3000               	movlw	0
 12083  26CE  022B               	subwf	(setOverCurrentDischargeProtection@i_1023+1)^(0+128),w
 12084  26CF  3007               	movlw	7
 12085  26D0  1903               	skipnz
 12086  26D1  022A               	subwf	setOverCurrentDischargeProtection@i_1023^(0+128),w
 12087  26D2  1C03               	skipc
 12088  26D3  2EA0               	goto	l7449
 12089                           
 12090                           ;BQ76920.c: 127:     I2C_writeRegister(0x18, 0x07, protect2.regByte);
 12091  26D4  3018               	movlw	24
 12092  26D5  00F5               	movwf	I2C_writeRegister@slaveAddress
 12093  26D6  3000               	movlw	0
 12094  26D7  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12095  26D8  3007               	movlw	7
 12096  26D9  00F7               	movwf	I2C_writeRegister@regAddress
 12097  26DA  3000               	movlw	0
 12098  26DB  00F8               	movwf	I2C_writeRegister@regAddress+1
 12099  26DC  0023               	movlb	3	; select bank3
 12100  26DD  0867               	movf	_protect2^(0+384),w
 12101  26DE  0020               	movlb	0	; select bank0
 12102  26DF  00EC               	movwf	??_setOverCurrentDischargeProtection
 12103  26E0  01ED               	clrf	??_setOverCurrentDischargeProtection+1
 12104  26E1  086C               	movf	??_setOverCurrentDischargeProtection,w
 12105  26E2  00F9               	movwf	I2C_writeRegister@data
 12106  26E3  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 12107  26E4  00FA               	movwf	I2C_writeRegister@data+1
 12108  26E5  31B3  231C         	fcall	_I2C_writeRegister
 12109  26E7  0008               	return
 12110  26E8                     __end_of_setOverCurrentDischargeProtection:	
 12111                           
 12112                           	psect	text40
 12113  2851                     __ptext40:	
 12114 ;; *************** function ___flge *****************
 12115 ;; Defined at:
 12116 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
 12117 ;; Parameters:    Size  Location     Type
 12118 ;;  ff1             4   58[BANK0 ] void 
 12119 ;;  ff2             4   62[BANK0 ] void 
 12120 ;; Auto vars:     Size  Location     Type
 12121 ;;		None
 12122 ;; Return value:  Size  Location     Type
 12123 ;;		None               void
 12124 ;; Registers used:
 12125 ;;		wreg, status,2, status,0
 12126 ;; Tracked objects:
 12127 ;;		On entry : 0/0
 12128 ;;		On exit  : 0/0
 12129 ;;		Unchanged: 0/0
 12130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12131 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12133 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12134 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12135 ;;Total ram usage:       12 bytes
 12136 ;; Hardware stack levels used:    1
 12137 ;; Hardware stack levels required when called:    1
 12138 ;; This function calls:
 12139 ;;		Nothing
 12140 ;; This function is called by:
 12141 ;;		_setShortCircuitProtection
 12142 ;;		_setOverCurrentDischargeProtection
 12143 ;; This function uses a non-reentrant model
 12144 ;;
 12145                           
 12146                           
 12147                           ;psect for function ___flge
 12148  2851                     ___flge:	
 12149                           
 12150                           ;incstack = 0
 12151                           ; Regs used in ___flge: [wreg+status,2+status,0]
 12152  2851  3000               	movlw	0
 12153  2852  0020               	movlb	0	; select bank0
 12154  2853  055A               	andwf	___flge@ff1,w
 12155  2854  00E2               	movwf	??___flge
 12156  2855  3000               	movlw	0
 12157  2856  055B               	andwf	___flge@ff1+1,w
 12158  2857  00E3               	movwf	??___flge+1
 12159  2858  3080               	movlw	128
 12160  2859  055C               	andwf	___flge@ff1+2,w
 12161  285A  00E4               	movwf	??___flge+2
 12162  285B  307F               	movlw	127
 12163  285C  055D               	andwf	___flge@ff1+3,w
 12164  285D  00E5               	movwf	??___flge+3
 12165  285E  0865               	movf	??___flge+3,w
 12166  285F  0464               	iorwf	??___flge+2,w
 12167  2860  0463               	iorwf	??___flge+1,w
 12168  2861  0462               	iorwf	??___flge,w
 12169  2862  1D03               	skipz
 12170  2863  286C               	goto	l1180
 12171  2864  3000               	movlw	0
 12172  2865  00DD               	movwf	___flge@ff1+3
 12173  2866  3000               	movlw	0
 12174  2867  00DC               	movwf	___flge@ff1+2
 12175  2868  3000               	movlw	0
 12176  2869  00DB               	movwf	___flge@ff1+1
 12177  286A  3000               	movlw	0
 12178  286B  00DA               	movwf	___flge@ff1
 12179  286C                     l1180:	
 12180  286C  3000               	movlw	0
 12181  286D  055E               	andwf	___flge@ff2,w
 12182  286E  00E2               	movwf	??___flge
 12183  286F  3000               	movlw	0
 12184  2870  055F               	andwf	___flge@ff2+1,w
 12185  2871  00E3               	movwf	??___flge+1
 12186  2872  3080               	movlw	128
 12187  2873  0560               	andwf	___flge@ff2+2,w
 12188  2874  00E4               	movwf	??___flge+2
 12189  2875  307F               	movlw	127
 12190  2876  0561               	andwf	___flge@ff2+3,w
 12191  2877  00E5               	movwf	??___flge+3
 12192  2878  0865               	movf	??___flge+3,w
 12193  2879  0464               	iorwf	??___flge+2,w
 12194  287A  0463               	iorwf	??___flge+1,w
 12195  287B  0462               	iorwf	??___flge,w
 12196  287C  1D03               	skipz
 12197  287D  2886               	goto	l5803
 12198  287E  3000               	movlw	0
 12199  287F  00E1               	movwf	___flge@ff2+3
 12200  2880  3000               	movlw	0
 12201  2881  00E0               	movwf	___flge@ff2+2
 12202  2882  3000               	movlw	0
 12203  2883  00DF               	movwf	___flge@ff2+1
 12204  2884  3000               	movlw	0
 12205  2885  00DE               	movwf	___flge@ff2
 12206  2886                     l5803:	
 12207  2886  1FDD               	btfss	___flge@ff1+3,7
 12208  2887  28A0               	goto	l5807
 12209  2888  3000               	movlw	0
 12210  2889  00E2               	movwf	??___flge
 12211  288A  3000               	movlw	0
 12212  288B  00E3               	movwf	??___flge+1
 12213  288C  3000               	movlw	0
 12214  288D  00E4               	movwf	??___flge+2
 12215  288E  3080               	movlw	128
 12216  288F  00E5               	movwf	??___flge+3
 12217  2890  085A               	movf	___flge@ff1,w
 12218  2891  02E2               	subwf	??___flge,f
 12219  2892  085B               	movf	___flge@ff1+1,w
 12220  2893  3BE3               	subwfb	??___flge+1,f
 12221  2894  085C               	movf	___flge@ff1+2,w
 12222  2895  3BE4               	subwfb	??___flge+2,f
 12223  2896  085D               	movf	___flge@ff1+3,w
 12224  2897  3BE5               	subwfb	??___flge+3,f
 12225  2898  0865               	movf	??___flge+3,w
 12226  2899  00DD               	movwf	___flge@ff1+3
 12227  289A  0864               	movf	??___flge+2,w
 12228  289B  00DC               	movwf	___flge@ff1+2
 12229  289C  0863               	movf	??___flge+1,w
 12230  289D  00DB               	movwf	___flge@ff1+1
 12231  289E  0862               	movf	??___flge,w
 12232  289F  00DA               	movwf	___flge@ff1
 12233  28A0                     l5807:	
 12234  28A0  1FE1               	btfss	___flge@ff2+3,7
 12235  28A1  28BA               	goto	l1183
 12236  28A2  3000               	movlw	0
 12237  28A3  00E2               	movwf	??___flge
 12238  28A4  3000               	movlw	0
 12239  28A5  00E3               	movwf	??___flge+1
 12240  28A6  3000               	movlw	0
 12241  28A7  00E4               	movwf	??___flge+2
 12242  28A8  3080               	movlw	128
 12243  28A9  00E5               	movwf	??___flge+3
 12244  28AA  085E               	movf	___flge@ff2,w
 12245  28AB  02E2               	subwf	??___flge,f
 12246  28AC  085F               	movf	___flge@ff2+1,w
 12247  28AD  3BE3               	subwfb	??___flge+1,f
 12248  28AE  0860               	movf	___flge@ff2+2,w
 12249  28AF  3BE4               	subwfb	??___flge+2,f
 12250  28B0  0861               	movf	___flge@ff2+3,w
 12251  28B1  3BE5               	subwfb	??___flge+3,f
 12252  28B2  0865               	movf	??___flge+3,w
 12253  28B3  00E1               	movwf	___flge@ff2+3
 12254  28B4  0864               	movf	??___flge+2,w
 12255  28B5  00E0               	movwf	___flge@ff2+2
 12256  28B6  0863               	movf	??___flge+1,w
 12257  28B7  00DF               	movwf	___flge@ff2+1
 12258  28B8  0862               	movf	??___flge,w
 12259  28B9  00DE               	movwf	___flge@ff2
 12260  28BA                     l1183:	
 12261  28BA  3080               	movlw	128
 12262  28BB  06DD               	xorwf	___flge@ff1+3,f
 12263  28BC  3080               	movlw	128
 12264  28BD  06E1               	xorwf	___flge@ff2+3,f
 12265  28BE  0861               	movf	___flge@ff2+3,w
 12266  28BF  025D               	subwf	___flge@ff1+3,w
 12267  28C0  1D03               	skipz
 12268  28C1  0008               	return
 12269  28C2  0860               	movf	___flge@ff2+2,w
 12270  28C3  025C               	subwf	___flge@ff1+2,w
 12271  28C4  1D03               	skipz
 12272  28C5  0008               	return
 12273  28C6  085F               	movf	___flge@ff2+1,w
 12274  28C7  025B               	subwf	___flge@ff1+1,w
 12275  28C8  1D03               	skipz
 12276  28C9  0008               	return
 12277  28CA  085E               	movf	___flge@ff2,w
 12278  28CB  025A               	subwf	___flge@ff1,w
 12279  28CC  0008               	return
 12280  28CD                     __end_of___flge:	
 12281                           
 12282                           	psect	text41
 12283  213D                     __ptext41:	
 12284 ;; *************** function _setCellUndervoltageProtection *****************
 12285 ;; Defined at:
 12286 ;;		line 133 in file "BQ76920.c"
 12287 ;; Parameters:    Size  Location     Type
 12288 ;;  voltage_mV      2   18[BANK0 ] int 
 12289 ;;  delay_s         2   20[BANK0 ] int 
 12290 ;; Auto vars:     Size  Location     Type
 12291 ;;  i               2   37[BANK0 ] int 
 12292 ;;  uv_trip         1   36[BANK0 ] unsigned char 
 12293 ;; Return value:  Size  Location     Type
 12294 ;;                  1    wreg      void 
 12295 ;; Registers used:
 12296 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12297 ;; Tracked objects:
 12298 ;;		On entry : 0/0
 12299 ;;		On exit  : 0/0
 12300 ;;		Unchanged: 0/0
 12301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12302 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12303 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12304 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12305 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12306 ;;Total ram usage:       21 bytes
 12307 ;; Hardware stack levels used:    1
 12308 ;; Hardware stack levels required when called:    3
 12309 ;; This function calls:
 12310 ;;		_I2C_writeRegister
 12311 ;;		___aldiv
 12312 ;;		___lmul
 12313 ;;		_readRegister
 12314 ;; This function is called by:
 12315 ;;		_init_AFE
 12316 ;; This function uses a non-reentrant model
 12317 ;;
 12318                           
 12319                           
 12320                           ;psect for function _setCellUndervoltageProtection
 12321  213D                     _setCellUndervoltageProtection:	
 12322                           
 12323                           ;BQ76920.c: 135:     minCellVoltage = voltage_mV;
 12324                           
 12325                           ;incstack = 0
 12326                           ; Regs used in _setCellUndervoltageProtection: [wreg-fsr0h+status,2+status,0+pclath+csta
      +                          ck]
 12327  213D  0020               	movlb	0	; select bank0
 12328  213E  0833               	movf	setCellUndervoltageProtection@voltage_mV+1,w
 12329  213F  0023               	movlb	3	; select bank3
 12330  2140  00CD               	movwf	(_minCellVoltage+1)^(0+384)
 12331  2141  0020               	movlb	0	; select bank0
 12332  2142  0832               	movf	setCellUndervoltageProtection@voltage_mV,w
 12333  2143  0023               	movlb	3	; select bank3
 12334  2144  00CC               	movwf	_minCellVoltage^(0+384)
 12335                           
 12336                           ;BQ76920.c: 137:     protect3.regByte = readRegister(0x18, 0x08);
 12337  2145  3018               	movlw	24
 12338  2146  00F5               	movwf	readRegister@slaveAddress
 12339  2147  3000               	movlw	0
 12340  2148  00F6               	movwf	readRegister@slaveAddress+1
 12341  2149  3008               	movlw	8
 12342  214A  00F7               	movwf	readRegister@regAddress
 12343  214B  3000               	movlw	0
 12344  214C  00F8               	movwf	readRegister@regAddress+1
 12345  214D  31B4  249E  31A1   	fcall	_readRegister
 12346  2150  0875               	movf	?_readRegister,w
 12347  2151  0020               	movlb	0	; select bank0
 12348  2152  00B6               	movwf	??_setCellUndervoltageProtection
 12349  2153  0836               	movf	??_setCellUndervoltageProtection,w
 12350  2154  0023               	movlb	3	; select bank3
 12351  2155  00E6               	movwf	_protect3^(0+384)
 12352                           
 12353                           ;BQ76920.c: 138:     uv_trip = ((((long) voltage_mV - adcOffset) * 1000 / adcGain) >> 4)
      +                           & 0x00FF;
 12354  2156  0022               	movlb	2	; select bank2
 12355  2157  086E               	movf	_adcGain^(0+256),w
 12356  2158  0020               	movlb	0	; select bank0
 12357  2159  00A4               	movwf	___aldiv@divisor
 12358  215A  0022               	movlb	2	; select bank2
 12359  215B  086F               	movf	(_adcGain+1)^(0+256),w
 12360  215C  0020               	movlb	0	; select bank0
 12361  215D  00A5               	movwf	___aldiv@divisor+1
 12362  215E  0D89               	rlf	9,f
 12363  215F  3B89               	subwfb	9,f
 12364  2160  0989               	comf	9,f
 12365  2161  00A6               	movwf	___aldiv@divisor+2
 12366  2162  00A7               	movwf	___aldiv@divisor+3
 12367  2163  0022               	movlb	2	; select bank2
 12368  2164  086C               	movf	_adcOffset^(0+256),w
 12369  2165  0020               	movlb	0	; select bank0
 12370  2166  00B6               	movwf	??_setCellUndervoltageProtection
 12371  2167  0022               	movlb	2	; select bank2
 12372  2168  086D               	movf	(_adcOffset+1)^(0+256),w
 12373  2169  0020               	movlb	0	; select bank0
 12374  216A  00B7               	movwf	??_setCellUndervoltageProtection+1
 12375  216B  3000               	movlw	0
 12376  216C  1BB7               	btfsc	??_setCellUndervoltageProtection+1,7
 12377  216D  30FF               	movlw	255
 12378  216E  00B8               	movwf	??_setCellUndervoltageProtection+2
 12379  216F  00B9               	movwf	??_setCellUndervoltageProtection+3
 12380  2170  0832               	movf	setCellUndervoltageProtection@voltage_mV,w
 12381  2171  00BA               	movwf	??_setCellUndervoltageProtection+4
 12382  2172  0833               	movf	setCellUndervoltageProtection@voltage_mV+1,w
 12383  2173  00BB               	movwf	??_setCellUndervoltageProtection+5
 12384  2174  3000               	movlw	0
 12385  2175  1BBB               	btfsc	??_setCellUndervoltageProtection+5,7
 12386  2176  30FF               	movlw	255
 12387  2177  00BC               	movwf	??_setCellUndervoltageProtection+6
 12388  2178  00BD               	movwf	??_setCellUndervoltageProtection+7
 12389  2179  0836               	movf	??_setCellUndervoltageProtection,w
 12390  217A  02BA               	subwf	??_setCellUndervoltageProtection+4,f
 12391  217B  0837               	movf	??_setCellUndervoltageProtection+1,w
 12392  217C  3BBB               	subwfb	??_setCellUndervoltageProtection+5,f
 12393  217D  0838               	movf	??_setCellUndervoltageProtection+2,w
 12394  217E  3BBC               	subwfb	??_setCellUndervoltageProtection+6,f
 12395  217F  0839               	movf	??_setCellUndervoltageProtection+3,w
 12396  2180  3BBD               	subwfb	??_setCellUndervoltageProtection+7,f
 12397  2181  083D               	movf	??_setCellUndervoltageProtection+7,w
 12398  2182  00F4               	movwf	___lmul@multiplier+3
 12399  2183  083C               	movf	??_setCellUndervoltageProtection+6,w
 12400  2184  00F3               	movwf	___lmul@multiplier+2
 12401  2185  083B               	movf	??_setCellUndervoltageProtection+5,w
 12402  2186  00F2               	movwf	___lmul@multiplier+1
 12403  2187  083A               	movf	??_setCellUndervoltageProtection+4,w
 12404  2188  00F1               	movwf	___lmul@multiplier
 12405  2189  3000               	movlw	0
 12406  218A  00F8               	movwf	___lmul@multiplicand+3
 12407  218B  3000               	movlw	0
 12408  218C  00F7               	movwf	___lmul@multiplicand+2
 12409  218D  3003               	movlw	3
 12410  218E  00F6               	movwf	___lmul@multiplicand+1
 12411  218F  30E8               	movlw	232
 12412  2190  00F5               	movwf	___lmul@multiplicand
 12413  2191  31B4  2405  31A1   	fcall	___lmul
 12414  2194  0874               	movf	?___lmul+3,w
 12415  2195  0020               	movlb	0	; select bank0
 12416  2196  00AB               	movwf	___aldiv@dividend+3
 12417  2197  0873               	movf	?___lmul+2,w
 12418  2198  00AA               	movwf	___aldiv@dividend+2
 12419  2199  0872               	movf	?___lmul+1,w
 12420  219A  00A9               	movwf	___aldiv@dividend+1
 12421  219B  0871               	movf	?___lmul,w
 12422  219C  00A8               	movwf	___aldiv@dividend
 12423  219D  31A9  21C6  31A1   	fcall	___aldiv
 12424  21A0  0020               	movlb	0	; select bank0
 12425  21A1  0824               	movf	?___aldiv,w
 12426  21A2  00BE               	movwf	??_setCellUndervoltageProtection+8
 12427  21A3  0825               	movf	?___aldiv+1,w
 12428  21A4  00BF               	movwf	??_setCellUndervoltageProtection+9
 12429  21A5  0826               	movf	?___aldiv+2,w
 12430  21A6  00C0               	movwf	??_setCellUndervoltageProtection+10
 12431  21A7  0827               	movf	?___aldiv+3,w
 12432  21A8  00C1               	movwf	??_setCellUndervoltageProtection+11
 12433  21A9  3004               	movlw	4
 12434  21AA  00C2               	movwf	??_setCellUndervoltageProtection+12
 12435  21AB                     u9405:	
 12436  21AB  37C1               	asrf	??_setCellUndervoltageProtection+11,f
 12437  21AC  0CC0               	rrf	??_setCellUndervoltageProtection+10,f
 12438  21AD  0CBF               	rrf	??_setCellUndervoltageProtection+9,f
 12439  21AE  0CBE               	rrf	??_setCellUndervoltageProtection+8,f
 12440  21AF  0BC2               	decfsz	??_setCellUndervoltageProtection+12,f
 12441  21B0  29AB               	goto	u9405
 12442  21B1  083E               	movf	??_setCellUndervoltageProtection+8,w
 12443  21B2  00C3               	movwf	??_setCellUndervoltageProtection+13
 12444  21B3  0843               	movf	??_setCellUndervoltageProtection+13,w
 12445  21B4  00C4               	movwf	setCellUndervoltageProtection@uv_trip
 12446                           
 12447                           ;BQ76920.c: 139:     uv_trip += 1;
 12448  21B5  3001               	movlw	1
 12449  21B6  00B6               	movwf	??_setCellUndervoltageProtection
 12450  21B7  0836               	movf	??_setCellUndervoltageProtection,w
 12451  21B8  07C4               	addwf	setCellUndervoltageProtection@uv_trip,f
 12452                           
 12453                           ;BQ76920.c: 140:     I2C_writeRegister(0x18, 0x0A, uv_trip);
 12454  21B9  3018               	movlw	24
 12455  21BA  00F5               	movwf	I2C_writeRegister@slaveAddress
 12456  21BB  3000               	movlw	0
 12457  21BC  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12458  21BD  300A               	movlw	10
 12459  21BE  00F7               	movwf	I2C_writeRegister@regAddress
 12460  21BF  3000               	movlw	0
 12461  21C0  00F8               	movwf	I2C_writeRegister@regAddress+1
 12462  21C1  0844               	movf	setCellUndervoltageProtection@uv_trip,w
 12463  21C2  00B6               	movwf	??_setCellUndervoltageProtection
 12464  21C3  01B7               	clrf	??_setCellUndervoltageProtection+1
 12465  21C4  0836               	movf	??_setCellUndervoltageProtection,w
 12466  21C5  00F9               	movwf	I2C_writeRegister@data
 12467  21C6  0837               	movf	??_setCellUndervoltageProtection+1,w
 12468  21C7  00FA               	movwf	I2C_writeRegister@data+1
 12469  21C8  31B3  231C  31A1   	fcall	_I2C_writeRegister
 12470                           
 12471                           ;BQ76920.c: 142:     protect3.bits.UV_DELAY = 0;
 12472  21CB  303F               	movlw	-193
 12473  21CC  0023               	movlb	3	; select bank3
 12474  21CD  05E6               	andwf	_protect3^(0+384),f
 12475                           
 12476                           ;BQ76920.c: 143:     for (int i = 0; i < (sizeof(UV_delay_setting) / sizeof((UV_delay_se
      +                          tting)[0])) - 1; i++) {
 12477  21CE  0020               	movlb	0	; select bank0
 12478  21CF  01C5               	clrf	setCellUndervoltageProtection@i
 12479  21D0  01C6               	clrf	setCellUndervoltageProtection@i+1
 12480  21D1                     l7479:	
 12481                           
 12482                           ;BQ76920.c: 144:         if (delay_s >= UV_delay_setting[i]) {
 12483  21D1  0846               	movf	setCellUndervoltageProtection@i+1,w
 12484  21D2  0085               	movwf	5
 12485  21D3  0845               	movf	setCellUndervoltageProtection@i,w
 12486  21D4  0084               	movwf	4
 12487  21D5  3584               	lslf	4,f
 12488  21D6  0D85               	rlf	5,f
 12489  21D7  3068               	movlw	low (_UV_delay_setting| (0+32768))
 12490  21D8  0784               	addwf	4,f
 12491  21D9  30BA               	movlw	high (_UV_delay_setting| (0+32768))
 12492  21DA  3D85               	addwfc	5,f
 12493  21DB  3F00               	moviw [0]fsr0
 12494  21DC  00B6               	movwf	??_setCellUndervoltageProtection
 12495  21DD  3F01               	moviw [1]fsr0
 12496  21DE  00B7               	movwf	??_setCellUndervoltageProtection+1
 12497  21DF  0835               	movf	setCellUndervoltageProtection@delay_s+1,w
 12498  21E0  3A80               	xorlw	128
 12499  21E1  00B8               	movwf	??_setCellUndervoltageProtection+2
 12500  21E2  0837               	movf	??_setCellUndervoltageProtection+1,w
 12501  21E3  3A80               	xorlw	128
 12502  21E4  0238               	subwf	??_setCellUndervoltageProtection+2,w
 12503  21E5  1D03               	skipz
 12504  21E6  29E9               	goto	u9415
 12505  21E7  0836               	movf	??_setCellUndervoltageProtection,w
 12506  21E8  0234               	subwf	setCellUndervoltageProtection@delay_s,w
 12507  21E9                     u9415:	
 12508  21E9  1C03               	skipc
 12509  21EA  29F9               	goto	l7483
 12510                           
 12511                           ;BQ76920.c: 145:             protect3.bits.UV_DELAY = i;
 12512  21EB  0020               	movlb	0	; select bank0
 12513  21EC  0845               	movf	setCellUndervoltageProtection@i,w
 12514  21ED  00B6               	movwf	??_setCellUndervoltageProtection
 12515  21EE  0EB6               	swapf	??_setCellUndervoltageProtection,f
 12516  21EF  0DB6               	rlf	??_setCellUndervoltageProtection,f
 12517  21F0  0DB6               	rlf	??_setCellUndervoltageProtection,f
 12518  21F1  0023               	movlb	3	; select bank3
 12519  21F2  0866               	movf	_protect3^(0+384),w
 12520  21F3  0020               	movlb	0	; select bank0
 12521  21F4  0636               	xorwf	??_setCellUndervoltageProtection,w
 12522  21F5  393F               	andlw	-193
 12523  21F6  0636               	xorwf	??_setCellUndervoltageProtection,w
 12524  21F7  0023               	movlb	3	; select bank3
 12525  21F8  00E6               	movwf	_protect3^(0+384)
 12526  21F9                     l7483:	
 12527                           
 12528                           ;BQ76920.c: 147:     }
 12529  21F9  3001               	movlw	1
 12530  21FA  0020               	movlb	0	; select bank0
 12531  21FB  07C5               	addwf	setCellUndervoltageProtection@i,f
 12532  21FC  3000               	movlw	0
 12533  21FD  3DC6               	addwfc	setCellUndervoltageProtection@i+1,f
 12534  21FE  3000               	movlw	0
 12535  21FF  0246               	subwf	setCellUndervoltageProtection@i+1,w
 12536  2200  3003               	movlw	3
 12537  2201  1903               	skipnz
 12538  2202  0245               	subwf	setCellUndervoltageProtection@i,w
 12539  2203  1C03               	skipc
 12540  2204  29D1               	goto	l7479
 12541                           
 12542                           ;BQ76920.c: 148:     I2C_writeRegister(0x18, 0x08, protect3.regByte);
 12543  2205  3018               	movlw	24
 12544  2206  00F5               	movwf	I2C_writeRegister@slaveAddress
 12545  2207  3000               	movlw	0
 12546  2208  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12547  2209  3008               	movlw	8
 12548  220A  00F7               	movwf	I2C_writeRegister@regAddress
 12549  220B  3000               	movlw	0
 12550  220C  00F8               	movwf	I2C_writeRegister@regAddress+1
 12551  220D  0023               	movlb	3	; select bank3
 12552  220E  0866               	movf	_protect3^(0+384),w
 12553  220F  0020               	movlb	0	; select bank0
 12554  2210  00B6               	movwf	??_setCellUndervoltageProtection
 12555  2211  01B7               	clrf	??_setCellUndervoltageProtection+1
 12556  2212  0836               	movf	??_setCellUndervoltageProtection,w
 12557  2213  00F9               	movwf	I2C_writeRegister@data
 12558  2214  0837               	movf	??_setCellUndervoltageProtection+1,w
 12559  2215  00FA               	movwf	I2C_writeRegister@data+1
 12560  2216  31B3  231C         	fcall	_I2C_writeRegister
 12561  2218  0008               	return
 12562  2219                     __end_of_setCellUndervoltageProtection:	
 12563                           
 12564                           	psect	text42
 12565  2F2B                     __ptext42:	
 12566 ;; *************** function _setCellOvervoltageProtection *****************
 12567 ;; Defined at:
 12568 ;;		line 154 in file "BQ76920.c"
 12569 ;; Parameters:    Size  Location     Type
 12570 ;;  voltage_mV      2   18[BANK0 ] int 
 12571 ;;  delay_s         2   20[BANK0 ] int 
 12572 ;; Auto vars:     Size  Location     Type
 12573 ;;  i               2   37[BANK0 ] int 
 12574 ;;  ov_trip         1   36[BANK0 ] unsigned char 
 12575 ;; Return value:  Size  Location     Type
 12576 ;;                  1    wreg      void 
 12577 ;; Registers used:
 12578 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12579 ;; Tracked objects:
 12580 ;;		On entry : 0/0
 12581 ;;		On exit  : 0/0
 12582 ;;		Unchanged: 0/0
 12583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12584 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12585 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12586 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12587 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12588 ;;Total ram usage:       21 bytes
 12589 ;; Hardware stack levels used:    1
 12590 ;; Hardware stack levels required when called:    3
 12591 ;; This function calls:
 12592 ;;		_I2C_writeRegister
 12593 ;;		___aldiv
 12594 ;;		___lmul
 12595 ;;		_readRegister
 12596 ;; This function is called by:
 12597 ;;		_init_AFE
 12598 ;; This function uses a non-reentrant model
 12599 ;;
 12600                           
 12601                           
 12602                           ;psect for function _setCellOvervoltageProtection
 12603  2F2B                     _setCellOvervoltageProtection:	
 12604                           
 12605                           ;BQ76920.c: 156:     maxCellVoltage = voltage_mV;
 12606                           
 12607                           ;incstack = 0
 12608                           ; Regs used in _setCellOvervoltageProtection: [wreg-fsr0h+status,2+status,0+pclath+cstac
      +                          k]
 12609  2F2B  0020               	movlb	0	; select bank0
 12610  2F2C  0833               	movf	setCellOvervoltageProtection@voltage_mV+1,w
 12611  2F2D  0023               	movlb	3	; select bank3
 12612  2F2E  00CF               	movwf	(_maxCellVoltage+1)^(0+384)
 12613  2F2F  0020               	movlb	0	; select bank0
 12614  2F30  0832               	movf	setCellOvervoltageProtection@voltage_mV,w
 12615  2F31  0023               	movlb	3	; select bank3
 12616  2F32  00CE               	movwf	_maxCellVoltage^(0+384)
 12617                           
 12618                           ;BQ76920.c: 157:     protect3.regByte = readRegister(0x18, 0x08);
 12619  2F33  3018               	movlw	24
 12620  2F34  00F5               	movwf	readRegister@slaveAddress
 12621  2F35  3000               	movlw	0
 12622  2F36  00F6               	movwf	readRegister@slaveAddress+1
 12623  2F37  3008               	movlw	8
 12624  2F38  00F7               	movwf	readRegister@regAddress
 12625  2F39  3000               	movlw	0
 12626  2F3A  00F8               	movwf	readRegister@regAddress+1
 12627  2F3B  31B4  249E  31AF   	fcall	_readRegister
 12628  2F3E  0875               	movf	?_readRegister,w
 12629  2F3F  0020               	movlb	0	; select bank0
 12630  2F40  00B6               	movwf	??_setCellOvervoltageProtection
 12631  2F41  0836               	movf	??_setCellOvervoltageProtection,w
 12632  2F42  0023               	movlb	3	; select bank3
 12633  2F43  00E6               	movwf	_protect3^(0+384)
 12634                           
 12635                           ;BQ76920.c: 158:     ov_trip = ((((long) voltage_mV - adcOffset) * 1000 / adcGain) >> 4)
      +                           & 0x00FF;
 12636  2F44  0022               	movlb	2	; select bank2
 12637  2F45  086E               	movf	_adcGain^(0+256),w
 12638  2F46  0020               	movlb	0	; select bank0
 12639  2F47  00A4               	movwf	___aldiv@divisor
 12640  2F48  0022               	movlb	2	; select bank2
 12641  2F49  086F               	movf	(_adcGain+1)^(0+256),w
 12642  2F4A  0020               	movlb	0	; select bank0
 12643  2F4B  00A5               	movwf	___aldiv@divisor+1
 12644  2F4C  0D89               	rlf	9,f
 12645  2F4D  3B89               	subwfb	9,f
 12646  2F4E  0989               	comf	9,f
 12647  2F4F  00A6               	movwf	___aldiv@divisor+2
 12648  2F50  00A7               	movwf	___aldiv@divisor+3
 12649  2F51  0022               	movlb	2	; select bank2
 12650  2F52  086C               	movf	_adcOffset^(0+256),w
 12651  2F53  0020               	movlb	0	; select bank0
 12652  2F54  00B6               	movwf	??_setCellOvervoltageProtection
 12653  2F55  0022               	movlb	2	; select bank2
 12654  2F56  086D               	movf	(_adcOffset+1)^(0+256),w
 12655  2F57  0020               	movlb	0	; select bank0
 12656  2F58  00B7               	movwf	??_setCellOvervoltageProtection+1
 12657  2F59  3000               	movlw	0
 12658  2F5A  1BB7               	btfsc	??_setCellOvervoltageProtection+1,7
 12659  2F5B  30FF               	movlw	255
 12660  2F5C  00B8               	movwf	??_setCellOvervoltageProtection+2
 12661  2F5D  00B9               	movwf	??_setCellOvervoltageProtection+3
 12662  2F5E  0832               	movf	setCellOvervoltageProtection@voltage_mV,w
 12663  2F5F  00BA               	movwf	??_setCellOvervoltageProtection+4
 12664  2F60  0833               	movf	setCellOvervoltageProtection@voltage_mV+1,w
 12665  2F61  00BB               	movwf	??_setCellOvervoltageProtection+5
 12666  2F62  3000               	movlw	0
 12667  2F63  1BBB               	btfsc	??_setCellOvervoltageProtection+5,7
 12668  2F64  30FF               	movlw	255
 12669  2F65  00BC               	movwf	??_setCellOvervoltageProtection+6
 12670  2F66  00BD               	movwf	??_setCellOvervoltageProtection+7
 12671  2F67  0836               	movf	??_setCellOvervoltageProtection,w
 12672  2F68  02BA               	subwf	??_setCellOvervoltageProtection+4,f
 12673  2F69  0837               	movf	??_setCellOvervoltageProtection+1,w
 12674  2F6A  3BBB               	subwfb	??_setCellOvervoltageProtection+5,f
 12675  2F6B  0838               	movf	??_setCellOvervoltageProtection+2,w
 12676  2F6C  3BBC               	subwfb	??_setCellOvervoltageProtection+6,f
 12677  2F6D  0839               	movf	??_setCellOvervoltageProtection+3,w
 12678  2F6E  3BBD               	subwfb	??_setCellOvervoltageProtection+7,f
 12679  2F6F  083D               	movf	??_setCellOvervoltageProtection+7,w
 12680  2F70  00F4               	movwf	___lmul@multiplier+3
 12681  2F71  083C               	movf	??_setCellOvervoltageProtection+6,w
 12682  2F72  00F3               	movwf	___lmul@multiplier+2
 12683  2F73  083B               	movf	??_setCellOvervoltageProtection+5,w
 12684  2F74  00F2               	movwf	___lmul@multiplier+1
 12685  2F75  083A               	movf	??_setCellOvervoltageProtection+4,w
 12686  2F76  00F1               	movwf	___lmul@multiplier
 12687  2F77  3000               	movlw	0
 12688  2F78  00F8               	movwf	___lmul@multiplicand+3
 12689  2F79  3000               	movlw	0
 12690  2F7A  00F7               	movwf	___lmul@multiplicand+2
 12691  2F7B  3003               	movlw	3
 12692  2F7C  00F6               	movwf	___lmul@multiplicand+1
 12693  2F7D  30E8               	movlw	232
 12694  2F7E  00F5               	movwf	___lmul@multiplicand
 12695  2F7F  31B4  2405  31AF   	fcall	___lmul
 12696  2F82  0874               	movf	?___lmul+3,w
 12697  2F83  0020               	movlb	0	; select bank0
 12698  2F84  00AB               	movwf	___aldiv@dividend+3
 12699  2F85  0873               	movf	?___lmul+2,w
 12700  2F86  00AA               	movwf	___aldiv@dividend+2
 12701  2F87  0872               	movf	?___lmul+1,w
 12702  2F88  00A9               	movwf	___aldiv@dividend+1
 12703  2F89  0871               	movf	?___lmul,w
 12704  2F8A  00A8               	movwf	___aldiv@dividend
 12705  2F8B  31A9  21C6  31AF   	fcall	___aldiv
 12706  2F8E  0020               	movlb	0	; select bank0
 12707  2F8F  0824               	movf	?___aldiv,w
 12708  2F90  00BE               	movwf	??_setCellOvervoltageProtection+8
 12709  2F91  0825               	movf	?___aldiv+1,w
 12710  2F92  00BF               	movwf	??_setCellOvervoltageProtection+9
 12711  2F93  0826               	movf	?___aldiv+2,w
 12712  2F94  00C0               	movwf	??_setCellOvervoltageProtection+10
 12713  2F95  0827               	movf	?___aldiv+3,w
 12714  2F96  00C1               	movwf	??_setCellOvervoltageProtection+11
 12715  2F97  3004               	movlw	4
 12716  2F98  00C2               	movwf	??_setCellOvervoltageProtection+12
 12717  2F99                     u9435:	
 12718  2F99  37C1               	asrf	??_setCellOvervoltageProtection+11,f
 12719  2F9A  0CC0               	rrf	??_setCellOvervoltageProtection+10,f
 12720  2F9B  0CBF               	rrf	??_setCellOvervoltageProtection+9,f
 12721  2F9C  0CBE               	rrf	??_setCellOvervoltageProtection+8,f
 12722  2F9D  0BC2               	decfsz	??_setCellOvervoltageProtection+12,f
 12723  2F9E  2F99               	goto	u9435
 12724  2F9F  083E               	movf	??_setCellOvervoltageProtection+8,w
 12725  2FA0  00C3               	movwf	??_setCellOvervoltageProtection+13
 12726  2FA1  0843               	movf	??_setCellOvervoltageProtection+13,w
 12727  2FA2  00C4               	movwf	setCellOvervoltageProtection@ov_trip
 12728                           
 12729                           ;BQ76920.c: 159:     I2C_writeRegister(0x18, 0x09, ov_trip);
 12730  2FA3  3018               	movlw	24
 12731  2FA4  00F5               	movwf	I2C_writeRegister@slaveAddress
 12732  2FA5  3000               	movlw	0
 12733  2FA6  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12734  2FA7  3009               	movlw	9
 12735  2FA8  00F7               	movwf	I2C_writeRegister@regAddress
 12736  2FA9  3000               	movlw	0
 12737  2FAA  00F8               	movwf	I2C_writeRegister@regAddress+1
 12738  2FAB  0844               	movf	setCellOvervoltageProtection@ov_trip,w
 12739  2FAC  00B6               	movwf	??_setCellOvervoltageProtection
 12740  2FAD  01B7               	clrf	??_setCellOvervoltageProtection+1
 12741  2FAE  0836               	movf	??_setCellOvervoltageProtection,w
 12742  2FAF  00F9               	movwf	I2C_writeRegister@data
 12743  2FB0  0837               	movf	??_setCellOvervoltageProtection+1,w
 12744  2FB1  00FA               	movwf	I2C_writeRegister@data+1
 12745  2FB2  31B3  231C  31AF   	fcall	_I2C_writeRegister
 12746                           
 12747                           ;BQ76920.c: 161:     for (int i = 0; i < (sizeof(OV_delay_setting) / sizeof((OV_delay_se
      +                          tting)[0])) - 1; i++) {
 12748  2FB5  0020               	movlb	0	; select bank0
 12749  2FB6  01C5               	clrf	setCellOvervoltageProtection@i
 12750  2FB7  01C6               	clrf	setCellOvervoltageProtection@i+1
 12751  2FB8                     l7505:	
 12752                           
 12753                           ;BQ76920.c: 162:         if (delay_s >= OV_delay_setting[i]) {
 12754  2FB8  0846               	movf	setCellOvervoltageProtection@i+1,w
 12755  2FB9  0085               	movwf	5
 12756  2FBA  0845               	movf	setCellOvervoltageProtection@i,w
 12757  2FBB  0084               	movwf	4
 12758  2FBC  3584               	lslf	4,f
 12759  2FBD  0D85               	rlf	5,f
 12760  2FBE  3060               	movlw	low (_OV_delay_setting| (0+32768))
 12761  2FBF  0784               	addwf	4,f
 12762  2FC0  30BA               	movlw	high (_OV_delay_setting| (0+32768))
 12763  2FC1  3D85               	addwfc	5,f
 12764  2FC2  3F00               	moviw [0]fsr0
 12765  2FC3  00B6               	movwf	??_setCellOvervoltageProtection
 12766  2FC4  3F01               	moviw [1]fsr0
 12767  2FC5  00B7               	movwf	??_setCellOvervoltageProtection+1
 12768  2FC6  0835               	movf	setCellOvervoltageProtection@delay_s+1,w
 12769  2FC7  3A80               	xorlw	128
 12770  2FC8  00B8               	movwf	??_setCellOvervoltageProtection+2
 12771  2FC9  0837               	movf	??_setCellOvervoltageProtection+1,w
 12772  2FCA  3A80               	xorlw	128
 12773  2FCB  0238               	subwf	??_setCellOvervoltageProtection+2,w
 12774  2FCC  1D03               	skipz
 12775  2FCD  2FD0               	goto	u9445
 12776  2FCE  0836               	movf	??_setCellOvervoltageProtection,w
 12777  2FCF  0234               	subwf	setCellOvervoltageProtection@delay_s,w
 12778  2FD0                     u9445:	
 12779  2FD0  1C03               	skipc
 12780  2FD1  2FE0               	goto	l7509
 12781                           
 12782                           ;BQ76920.c: 163:             protect3.bits.UV_DELAY = i;
 12783  2FD2  0020               	movlb	0	; select bank0
 12784  2FD3  0845               	movf	setCellOvervoltageProtection@i,w
 12785  2FD4  00B6               	movwf	??_setCellOvervoltageProtection
 12786  2FD5  0EB6               	swapf	??_setCellOvervoltageProtection,f
 12787  2FD6  0DB6               	rlf	??_setCellOvervoltageProtection,f
 12788  2FD7  0DB6               	rlf	??_setCellOvervoltageProtection,f
 12789  2FD8  0023               	movlb	3	; select bank3
 12790  2FD9  0866               	movf	_protect3^(0+384),w
 12791  2FDA  0020               	movlb	0	; select bank0
 12792  2FDB  0636               	xorwf	??_setCellOvervoltageProtection,w
 12793  2FDC  393F               	andlw	-193
 12794  2FDD  0636               	xorwf	??_setCellOvervoltageProtection,w
 12795  2FDE  0023               	movlb	3	; select bank3
 12796  2FDF  00E6               	movwf	_protect3^(0+384)
 12797  2FE0                     l7509:	
 12798                           
 12799                           ;BQ76920.c: 165:     }
 12800  2FE0  3001               	movlw	1
 12801  2FE1  0020               	movlb	0	; select bank0
 12802  2FE2  07C5               	addwf	setCellOvervoltageProtection@i,f
 12803  2FE3  3000               	movlw	0
 12804  2FE4  3DC6               	addwfc	setCellOvervoltageProtection@i+1,f
 12805  2FE5  3000               	movlw	0
 12806  2FE6  0246               	subwf	setCellOvervoltageProtection@i+1,w
 12807  2FE7  3003               	movlw	3
 12808  2FE8  1903               	skipnz
 12809  2FE9  0245               	subwf	setCellOvervoltageProtection@i,w
 12810  2FEA  1C03               	skipc
 12811  2FEB  2FB8               	goto	l7505
 12812                           
 12813                           ;BQ76920.c: 166:     I2C_writeRegister(0x18,0x08, protect3.regByte);
 12814  2FEC  3018               	movlw	24
 12815  2FED  00F5               	movwf	I2C_writeRegister@slaveAddress
 12816  2FEE  3000               	movlw	0
 12817  2FEF  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12818  2FF0  3008               	movlw	8
 12819  2FF1  00F7               	movwf	I2C_writeRegister@regAddress
 12820  2FF2  3000               	movlw	0
 12821  2FF3  00F8               	movwf	I2C_writeRegister@regAddress+1
 12822  2FF4  0023               	movlb	3	; select bank3
 12823  2FF5  0866               	movf	_protect3^(0+384),w
 12824  2FF6  0020               	movlb	0	; select bank0
 12825  2FF7  00B6               	movwf	??_setCellOvervoltageProtection
 12826  2FF8  01B7               	clrf	??_setCellOvervoltageProtection+1
 12827  2FF9  0836               	movf	??_setCellOvervoltageProtection,w
 12828  2FFA  00F9               	movwf	I2C_writeRegister@data
 12829  2FFB  0837               	movf	??_setCellOvervoltageProtection+1,w
 12830  2FFC  00FA               	movwf	I2C_writeRegister@data+1
 12831  2FFD  31B3  231C         	fcall	_I2C_writeRegister
 12832  2FFF  0008               	return
 12833  3000                     __end_of_setCellOvervoltageProtection:	
 12834                           
 12835                           	psect	text43
 12836  2C28                     __ptext43:	
 12837 ;; *************** function _beginAFEcommunication *****************
 12838 ;; Defined at:
 12839 ;;		line 28 in file "BQ76920.c"
 12840 ;; Parameters:    Size  Location     Type
 12841 ;;		None
 12842 ;; Auto vars:     Size  Location     Type
 12843 ;;  i               2   13[BANK0 ] int 
 12844 ;;  commSuccess     2   11[BANK0 ] int 
 12845 ;; Return value:  Size  Location     Type
 12846 ;;                  2    0[BANK0 ] int 
 12847 ;; Registers used:
 12848 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12849 ;; Tracked objects:
 12850 ;;		On entry : 0/0
 12851 ;;		On exit  : 0/0
 12852 ;;		Unchanged: 0/0
 12853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12854 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12855 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12856 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12857 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12858 ;;Total ram usage:       15 bytes
 12859 ;; Hardware stack levels used:    1
 12860 ;; Hardware stack levels required when called:    3
 12861 ;; This function calls:
 12862 ;;		_I2C_writeRegister
 12863 ;;		_readRegister
 12864 ;; This function is called by:
 12865 ;;		_statemachine
 12866 ;; This function uses a non-reentrant model
 12867 ;;
 12868                           
 12869                           
 12870                           ;psect for function _beginAFEcommunication
 12871  2C28                     _beginAFEcommunication:	
 12872                           
 12873                           ;BQ76920.c: 30:     int commSuccess = 0;
 12874                           
 12875                           ;incstack = 0
 12876                           ; Regs used in _beginAFEcommunication: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 12877  2C28  0020               	movlb	0	; select bank0
 12878  2C29  01AB               	clrf	beginAFEcommunication@commSuccess
 12879  2C2A  01AC               	clrf	beginAFEcommunication@commSuccess+1
 12880                           
 12881                           ;BQ76920.c: 33:     for (int i = 0; i < 4; i++) {
 12882  2C2B  01AD               	clrf	beginAFEcommunication@i
 12883  2C2C  01AE               	clrf	beginAFEcommunication@i+1
 12884  2C2D                     l7649:	
 12885                           
 12886                           ;BQ76920.c: 34:         cellVoltages[i] = 0;
 12887  2C2D  0020               	movlb	0	; select bank0
 12888  2C2E  352D               	lslf	beginAFEcommunication@i,w
 12889  2C2F  3EAA               	addlw	(low (_cellVoltages| (0+256)))& (0+255)
 12890  2C30  0086               	movwf	6
 12891  2C31  3001               	movlw	1	; select bank3/4
 12892  2C32  0087               	movwf	7
 12893  2C33  3000               	movlw	0
 12894  2C34  3FC0               	movwi [0]fsr1
 12895  2C35  3FC1               	movwi [1]fsr1
 12896                           
 12897                           ;BQ76920.c: 35:     }
 12898  2C36  3001               	movlw	1
 12899  2C37  07AD               	addwf	beginAFEcommunication@i,f
 12900  2C38  3000               	movlw	0
 12901  2C39  3DAE               	addwfc	beginAFEcommunication@i+1,f
 12902  2C3A  082E               	movf	beginAFEcommunication@i+1,w
 12903  2C3B  3A80               	xorlw	128
 12904  2C3C  00A2               	movwf	??_beginAFEcommunication
 12905  2C3D  3080               	movlw	128
 12906  2C3E  0222               	subwf	??_beginAFEcommunication,w
 12907  2C3F  1D03               	skipz
 12908  2C40  2C43               	goto	u9565
 12909  2C41  3004               	movlw	4
 12910  2C42  022D               	subwf	beginAFEcommunication@i,w
 12911  2C43                     u9565:	
 12912  2C43  1C03               	skipc
 12913  2C44  2C2D               	goto	l7649
 12914                           
 12915                           ;BQ76920.c: 38:     I2C_writeRegister(0x18, 0x0B, 0x19);
 12916  2C45  3018               	movlw	24
 12917  2C46  00F5               	movwf	I2C_writeRegister@slaveAddress
 12918  2C47  3000               	movlw	0
 12919  2C48  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12920  2C49  300B               	movlw	11
 12921  2C4A  00F7               	movwf	I2C_writeRegister@regAddress
 12922  2C4B  3000               	movlw	0
 12923  2C4C  00F8               	movwf	I2C_writeRegister@regAddress+1
 12924  2C4D  3019               	movlw	25
 12925  2C4E  00F9               	movwf	I2C_writeRegister@data
 12926  2C4F  3000               	movlw	0
 12927  2C50  00FA               	movwf	I2C_writeRegister@data+1
 12928  2C51  31B3  231C  31AC   	fcall	_I2C_writeRegister
 12929                           
 12930                           ;BQ76920.c: 40:     if (readRegister(0x18, 0x0B) == 0x19) {
 12931  2C54  3018               	movlw	24
 12932  2C55  00F5               	movwf	readRegister@slaveAddress
 12933  2C56  3000               	movlw	0
 12934  2C57  00F6               	movwf	readRegister@slaveAddress+1
 12935  2C58  300B               	movlw	11
 12936  2C59  00F7               	movwf	readRegister@regAddress
 12937  2C5A  3000               	movlw	0
 12938  2C5B  00F8               	movwf	readRegister@regAddress+1
 12939  2C5C  31B4  249E  31AC   	fcall	_readRegister
 12940  2C5F  3019               	movlw	25
 12941  2C60  0675               	xorwf	?_readRegister,w
 12942  2C61  0476               	iorwf	?_readRegister+1,w
 12943  2C62  1D03               	btfss	3,2
 12944  2C63  2CD6               	goto	l501
 12945                           
 12946                           ;BQ76920.c: 41:         commSuccess = 1;
 12947  2C64  3001               	movlw	1
 12948  2C65  0020               	movlb	0	; select bank0
 12949  2C66  00AB               	movwf	beginAFEcommunication@commSuccess
 12950  2C67  3000               	movlw	0
 12951  2C68  00AC               	movwf	beginAFEcommunication@commSuccess+1
 12952                           
 12953                           ;BQ76920.c: 45:         I2C_writeRegister(0x18, 0x04, 0x18);
 12954  2C69  3018               	movlw	24
 12955  2C6A  00F5               	movwf	I2C_writeRegister@slaveAddress
 12956  2C6B  3000               	movlw	0
 12957  2C6C  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12958  2C6D  3004               	movlw	4
 12959  2C6E  00F7               	movwf	I2C_writeRegister@regAddress
 12960  2C6F  3000               	movlw	0
 12961  2C70  00F8               	movwf	I2C_writeRegister@regAddress+1
 12962  2C71  3018               	movlw	24
 12963  2C72  00F9               	movwf	I2C_writeRegister@data
 12964  2C73  3000               	movlw	0
 12965  2C74  00FA               	movwf	I2C_writeRegister@data+1
 12966  2C75  31B3  231C  31AC   	fcall	_I2C_writeRegister
 12967                           
 12968                           ;BQ76920.c: 46:         I2C_writeRegister(0x18, 0x05, 0x40);
 12969  2C78  3018               	movlw	24
 12970  2C79  00F5               	movwf	I2C_writeRegister@slaveAddress
 12971  2C7A  3000               	movlw	0
 12972  2C7B  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12973  2C7C  3005               	movlw	5
 12974  2C7D  00F7               	movwf	I2C_writeRegister@regAddress
 12975  2C7E  3000               	movlw	0
 12976  2C7F  00F8               	movwf	I2C_writeRegister@regAddress+1
 12977  2C80  3040               	movlw	64
 12978  2C81  00F9               	movwf	I2C_writeRegister@data
 12979  2C82  3000               	movlw	0
 12980  2C83  00FA               	movwf	I2C_writeRegister@data+1
 12981  2C84  31B3  231C  31AC   	fcall	_I2C_writeRegister
 12982                           
 12983                           ;BQ76920.c: 49:         adcOffset = (signed int) readRegister(0x18, 0x51);
 12984  2C87  3018               	movlw	24
 12985  2C88  00F5               	movwf	readRegister@slaveAddress
 12986  2C89  3000               	movlw	0
 12987  2C8A  00F6               	movwf	readRegister@slaveAddress+1
 12988  2C8B  3051               	movlw	81
 12989  2C8C  00F7               	movwf	readRegister@regAddress
 12990  2C8D  3000               	movlw	0
 12991  2C8E  00F8               	movwf	readRegister@regAddress+1
 12992  2C8F  31B4  249E  31AC   	fcall	_readRegister
 12993  2C92  0876               	movf	?_readRegister+1,w
 12994  2C93  0022               	movlb	2	; select bank2
 12995  2C94  00ED               	movwf	(_adcOffset+1)^(0+256)
 12996  2C95  0875               	movf	?_readRegister,w
 12997  2C96  00EC               	movwf	_adcOffset^(0+256)
 12998                           
 12999                           ;BQ76920.c: 50:         adcGain = 365 + (((readRegister(0x18, 0x50) & 0x0C) << 1) |
 13000  2C97  3018               	movlw	24
 13001  2C98  00F5               	movwf	readRegister@slaveAddress
 13002  2C99  3000               	movlw	0
 13003  2C9A  00F6               	movwf	readRegister@slaveAddress+1
 13004  2C9B  3059               	movlw	89
 13005  2C9C  00F7               	movwf	readRegister@regAddress
 13006  2C9D  3000               	movlw	0
 13007  2C9E  00F8               	movwf	readRegister@regAddress+1
 13008  2C9F  31B4  249E  31AC   	fcall	_readRegister
 13009  2CA2  0875               	movf	?_readRegister,w
 13010  2CA3  0020               	movlb	0	; select bank0
 13011  2CA4  00A2               	movwf	??_beginAFEcommunication
 13012  2CA5  0876               	movf	?_readRegister+1,w
 13013  2CA6  00A3               	movwf	??_beginAFEcommunication+1
 13014  2CA7  3005               	movlw	5
 13015  2CA8  00A4               	movwf	??_beginAFEcommunication+2
 13016  2CA9                     u9585:	
 13017  2CA9  0D23               	rlf	??_beginAFEcommunication+1,w
 13018  2CAA  0CA3               	rrf	??_beginAFEcommunication+1,f
 13019  2CAB  0CA2               	rrf	??_beginAFEcommunication,f
 13020  2CAC  0BA4               	decfsz	??_beginAFEcommunication+2,f
 13021  2CAD  2CA9               	goto	u9585
 13022  2CAE  3007               	movlw	7
 13023  2CAF  0522               	andwf	??_beginAFEcommunication,w
 13024  2CB0  00A5               	movwf	??_beginAFEcommunication+3
 13025  2CB1  3000               	movlw	0
 13026  2CB2  0523               	andwf	??_beginAFEcommunication+1,w
 13027  2CB3  00A6               	movwf	??_beginAFEcommunication+4
 13028  2CB4  3018               	movlw	24
 13029  2CB5  00F5               	movwf	readRegister@slaveAddress
 13030  2CB6  3000               	movlw	0
 13031  2CB7  00F6               	movwf	readRegister@slaveAddress+1
 13032  2CB8  3050               	movlw	80
 13033  2CB9  00F7               	movwf	readRegister@regAddress
 13034  2CBA  3000               	movlw	0
 13035  2CBB  00F8               	movwf	readRegister@regAddress+1
 13036  2CBC  31B4  249E         	fcall	_readRegister
 13037  2CBE  300C               	movlw	12
 13038  2CBF  0575               	andwf	?_readRegister,w
 13039  2CC0  0020               	movlb	0	; select bank0
 13040  2CC1  00A7               	movwf	??_beginAFEcommunication+5
 13041  2CC2  3000               	movlw	0
 13042  2CC3  0576               	andwf	?_readRegister+1,w
 13043  2CC4  00A8               	movwf	??_beginAFEcommunication+6
 13044  2CC5  35A7               	lslf	??_beginAFEcommunication+5,f
 13045  2CC6  0DA8               	rlf	??_beginAFEcommunication+6,f
 13046  2CC7  0825               	movf	??_beginAFEcommunication+3,w
 13047  2CC8  0427               	iorwf	??_beginAFEcommunication+5,w
 13048  2CC9  00A9               	movwf	??_beginAFEcommunication+7
 13049  2CCA  0826               	movf	??_beginAFEcommunication+4,w
 13050  2CCB  0428               	iorwf	??_beginAFEcommunication+6,w
 13051  2CCC  00AA               	movwf	??_beginAFEcommunication+8
 13052  2CCD  0829               	movf	??_beginAFEcommunication+7,w
 13053  2CCE  3E6D               	addlw	109
 13054  2CCF  0022               	movlb	2	; select bank2
 13055  2CD0  00EE               	movwf	_adcGain^(0+256)
 13056  2CD1  3001               	movlw	1
 13057  2CD2  0020               	movlb	0	; select bank0
 13058  2CD3  3D2A               	addwfc	??_beginAFEcommunication+8,w
 13059  2CD4  0022               	movlb	2	; select bank2
 13060  2CD5  00EF               	movwf	(_adcGain+1)^(0+256)
 13061  2CD6                     l501:	
 13062                           ;BQ76920.c: 53:     }
 13063                           
 13064                           
 13065                           ;BQ76920.c: 54:     return commSuccess;
 13066  2CD6  0020               	movlb	0	; select bank0
 13067  2CD7  082C               	movf	beginAFEcommunication@commSuccess+1,w
 13068  2CD8  00A1               	movwf	?_beginAFEcommunication+1
 13069  2CD9  082B               	movf	beginAFEcommunication@commSuccess,w
 13070  2CDA  00A0               	movwf	?_beginAFEcommunication
 13071  2CDB  0008               	return
 13072  2CDC                     __end_of_beginAFEcommunication:	
 13073                           
 13074                           	psect	text44
 13075  1000                     __ptext44:	
 13076 ;; *************** function _RGB_AWAIT_AFE_CONN *****************
 13077 ;; Defined at:
 13078 ;;		line 43 in file "RGB.c"
 13079 ;; Parameters:    Size  Location     Type
 13080 ;;		None
 13081 ;; Auto vars:     Size  Location     Type
 13082 ;;		None
 13083 ;; Return value:  Size  Location     Type
 13084 ;;                  1    wreg      void 
 13085 ;; Registers used:
 13086 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13087 ;; Tracked objects:
 13088 ;;		On entry : 0/0
 13089 ;;		On exit  : 0/0
 13090 ;;		Unchanged: 0/0
 13091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13094 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13095 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13096 ;;Total ram usage:        1 bytes
 13097 ;; Hardware stack levels used:    1
 13098 ;; Hardware stack levels required when called:    2
 13099 ;; This function calls:
 13100 ;;		_RGB_color
 13101 ;; This function is called by:
 13102 ;;		_statemachine
 13103 ;; This function uses a non-reentrant model
 13104 ;;
 13105                           
 13106                           
 13107                           ;psect for function _RGB_AWAIT_AFE_CONN
 13108  1000                     _RGB_AWAIT_AFE_CONN:	
 13109                           
 13110                           ;RGB.c: 45:     if (toggleColor) {
 13111                           
 13112                           ;incstack = 0
 13113                           ; Regs used in _RGB_AWAIT_AFE_CONN: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13114  1000  0023               	movlb	3	; select bank3
 13115  1001  086A               	movf	_toggleColor^(0+384),w
 13116  1002  1903               	btfsc	3,2
 13117  1003  2813               	goto	l6221
 13118                           
 13119                           ;RGB.c: 46:         toggleColor = !toggleColor;
 13120  1004  086A               	movf	_toggleColor^(0+384),w
 13121  1005  1D03               	btfss	3,2
 13122  1006  2809               	goto	u7730
 13123  1007  3001               	movlw	1
 13124  1008  280A               	goto	u7740
 13125  1009                     u7730:	
 13126  1009  3000               	movlw	0
 13127  100A                     u7740:	
 13128  100A  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 13129  100B  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 13130  100C  00EA               	movwf	_toggleColor^(0+384)
 13131                           
 13132                           ;RGB.c: 47:         RGB_color(0);
 13133  100D  3000               	movlw	0
 13134  100E  00F1               	movwf	RGB_color@color
 13135  100F  00F2               	movwf	RGB_color@color+1
 13136  1010  31B3  233A         	fcall	_RGB_color
 13137                           
 13138                           ;RGB.c: 48:     } else {
 13139  1012  0008               	return
 13140  1013                     l6221:	
 13141                           
 13142                           ;RGB.c: 49:         toggleColor = !toggleColor;
 13143  1013  086A               	movf	_toggleColor^(0+384),w
 13144  1014  1D03               	btfss	3,2
 13145  1015  2818               	goto	u7750
 13146  1016  3001               	movlw	1
 13147  1017  2819               	goto	u7760
 13148  1018                     u7750:	
 13149  1018  3000               	movlw	0
 13150  1019                     u7760:	
 13151  1019  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 13152  101A  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 13153  101B  00EA               	movwf	_toggleColor^(0+384)
 13154                           
 13155                           ;RGB.c: 50:         RGB_color(1);
 13156  101C  3001               	movlw	1
 13157  101D  00F1               	movwf	RGB_color@color
 13158  101E  3000               	movlw	0
 13159  101F  00F2               	movwf	RGB_color@color+1
 13160  1020  31B3  233A         	fcall	_RGB_color
 13161  1022  0008               	return
 13162  1023                     __end_of_RGB_AWAIT_AFE_CONN:	
 13163                           
 13164                           	psect	text45
 13165  333A                     __ptext45:	
 13166 ;; *************** function _RGB_color *****************
 13167 ;; Defined at:
 13168 ;;		line 17 in file "RGB.c"
 13169 ;; Parameters:    Size  Location     Type
 13170 ;;  color           2    1[COMMON] int 
 13171 ;; Auto vars:     Size  Location     Type
 13172 ;;		None
 13173 ;; Return value:  Size  Location     Type
 13174 ;;                  1    wreg      void 
 13175 ;; Registers used:
 13176 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 13177 ;; Tracked objects:
 13178 ;;		On entry : 0/0
 13179 ;;		On exit  : 0/0
 13180 ;;		Unchanged: 0/0
 13181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13182 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13185 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13186 ;;Total ram usage:        2 bytes
 13187 ;; Hardware stack levels used:    1
 13188 ;; Hardware stack levels required when called:    1
 13189 ;; This function calls:
 13190 ;;		Nothing
 13191 ;; This function is called by:
 13192 ;;		_statemachine
 13193 ;;		_RGB_AWAIT_AFE_CONN
 13194 ;;		_watchdog_timeout_shutdown
 13195 ;; This function uses a non-reentrant model
 13196 ;;
 13197                           
 13198                           
 13199                           ;psect for function _RGB_color
 13200  333A                     _RGB_color:	
 13201                           
 13202                           ;RGB.c: 19:     switch (color) {
 13203                           
 13204                           ;incstack = 0
 13205                           ; Regs used in _RGB_color: [wreg-fsr0h+status,2+status,0]
 13206  333A  2B4A               	goto	l5897
 13207  333B                     l366:	
 13208                           ;RGB.c: 20:         case 0:
 13209                           
 13210                           
 13211                           ;RGB.c: 21:             LATAbits.LATA4 = 0;
 13212  333B  0022               	movlb	2	; select bank2
 13213  333C  120C               	bcf	12,4	;volatile
 13214                           
 13215                           ;RGB.c: 22:             LATAbits.LATA5 = 1;
 13216  333D  168C               	bsf	12,5	;volatile
 13217                           
 13218                           ;RGB.c: 23:             LATEbits.LATE0 = 1;
 13219  333E  1410               	bsf	16,0	;volatile
 13220                           
 13221                           ;RGB.c: 24:             break;
 13222  333F  0008               	return
 13223  3340                     l368:	
 13224                           ;RGB.c: 25:         case 1:
 13225                           
 13226                           
 13227                           ;RGB.c: 26:             LATAbits.LATA4 = 1;
 13228  3340  0022               	movlb	2	; select bank2
 13229  3341  160C               	bsf	12,4	;volatile
 13230                           
 13231                           ;RGB.c: 27:             LATAbits.LATA5 = 0;
 13232  3342  128C               	bcf	12,5	;volatile
 13233                           
 13234                           ;RGB.c: 28:             LATEbits.LATE0 = 1;
 13235  3343  1410               	bsf	16,0	;volatile
 13236                           
 13237                           ;RGB.c: 29:             break;
 13238  3344  0008               	return
 13239  3345                     l369:	
 13240                           ;RGB.c: 30:         case 2:
 13241                           
 13242                           
 13243                           ;RGB.c: 31:             LATAbits.LATA4 = 1;
 13244  3345  0022               	movlb	2	; select bank2
 13245  3346  160C               	bsf	12,4	;volatile
 13246                           
 13247                           ;RGB.c: 32:             LATAbits.LATA5 = 1;
 13248  3347  168C               	bsf	12,5	;volatile
 13249                           
 13250                           ;RGB.c: 33:             LATEbits.LATE0 = 0;
 13251  3348  1010               	bcf	16,0	;volatile
 13252                           
 13253                           ;RGB.c: 34:             break;
 13254  3349  0008               	return
 13255  334A                     l5897:	
 13256                           
 13257                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13258                           ; Switch size 1, requested type "simple"
 13259                           ; Number of cases is 1, Range of values is 0 to 0
 13260                           ; switch strategies available:
 13261                           ; Name         Instructions Cycles
 13262                           ; simple_byte            4     3 (average)
 13263                           ; direct_byte            8     6 (fixed)
 13264                           ; jumptable            260     6 (fixed)
 13265                           ;	Chosen strategy is simple_byte
 13266  334A  0872               	movf	RGB_color@color+1,w
 13267  334B  3A00               	xorlw	0	; case 0
 13268  334C  1903               	skipnz
 13269  334D  2B4F               	goto	l7965
 13270  334E  2B5A               	goto	l370
 13271  334F                     l7965:	
 13272                           
 13273                           ; Switch size 1, requested type "simple"
 13274                           ; Number of cases is 3, Range of values is 0 to 2
 13275                           ; switch strategies available:
 13276                           ; Name         Instructions Cycles
 13277                           ; simple_byte           10     6 (average)
 13278                           ; direct_byte           12     6 (fixed)
 13279                           ; jumptable            260     6 (fixed)
 13280                           ;	Chosen strategy is simple_byte
 13281  334F  0871               	movf	RGB_color@color,w
 13282  3350  3A00               	xorlw	0	; case 0
 13283  3351  1903               	skipnz
 13284  3352  2B3B               	goto	l366
 13285  3353  3A01               	xorlw	1	; case 1
 13286  3354  1903               	skipnz
 13287  3355  2B40               	goto	l368
 13288  3356  3A03               	xorlw	3	; case 2
 13289  3357  1903               	skipnz
 13290  3358  2B45               	goto	l369
 13291  3359  2B5A               	goto	l370
 13292  335A                     l370:	
 13293  335A  0008               	return
 13294  335B                     __end_of_RGB_color:	
 13295                           
 13296                           	psect	text46
 13297  3542                     __ptext46:	
 13298 ;; *************** function _AFE_UPDATE *****************
 13299 ;; Defined at:
 13300 ;;		line 172 in file "BQ76920.c"
 13301 ;; Parameters:    Size  Location     Type
 13302 ;;		None
 13303 ;; Auto vars:     Size  Location     Type
 13304 ;;		None
 13305 ;; Return value:  Size  Location     Type
 13306 ;;                  1    wreg      void 
 13307 ;; Registers used:
 13308 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13309 ;; Tracked objects:
 13310 ;;		On entry : 0/0
 13311 ;;		On exit  : 0/0
 13312 ;;		Unchanged: 0/0
 13313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13318 ;;Total ram usage:        0 bytes
 13319 ;; Hardware stack levels used:    1
 13320 ;; Hardware stack levels required when called:    5
 13321 ;; This function calls:
 13322 ;;		_AFE_Status
 13323 ;;		_calibrate_BATTSOC
 13324 ;;		_coulomb_counter
 13325 ;;		_enableCharging
 13326 ;;		_enableDischarging
 13327 ;;		_updateCurrent
 13328 ;;		_updateTemperatures
 13329 ;;		_updateVoltages
 13330 ;; This function is called by:
 13331 ;;		_statemachine
 13332 ;; This function uses a non-reentrant model
 13333 ;;
 13334                           
 13335                           
 13336                           ;psect for function _AFE_UPDATE
 13337  3542                     _AFE_UPDATE:	
 13338                           
 13339                           ;BQ76920.c: 174:     updateVoltages();
 13340                           
 13341                           ;incstack = 0
 13342                           ; Regs used in _AFE_UPDATE: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13343  3542  3192  224F  31B5   	fcall	_updateVoltages
 13344                           
 13345                           ;BQ76920.c: 176:     if(batCurrent<10){
 13346  3545  0023               	movlb	3	; select bank3
 13347  3546  1BC3               	btfsc	(_batCurrent+3)^(0+384),7
 13348  3547  2D55               	goto	l7683
 13349  3548  0843               	movf	(_batCurrent+3)^(0+384),w
 13350  3549  1D03               	btfss	3,2
 13351  354A  2D59               	goto	l7685
 13352  354B  0842               	movf	(_batCurrent+2)^(0+384),w
 13353  354C  1D03               	btfss	3,2
 13354  354D  2D59               	goto	l7685
 13355  354E  0841               	movf	(_batCurrent+1)^(0+384),w
 13356  354F  1D03               	btfss	3,2
 13357  3550  2D59               	goto	l7685
 13358  3551  300A               	movlw	10
 13359  3552  0240               	subwf	_batCurrent^(0+384),w
 13360  3553  1803               	btfsc	3,0
 13361  3554  2D59               	goto	l7685
 13362  3555                     l7683:	
 13363                           
 13364                           ;BQ76920.c: 178:         calibrate_BATTSOC();
 13365  3555  31AE  2665  31B5   	fcall	_calibrate_BATTSOC
 13366                           
 13367                           ;BQ76920.c: 179:     }else{
 13368  3558  2D5C               	goto	l7687
 13369  3559                     l7685:	
 13370                           
 13371                           ;BQ76920.c: 180:          coulomb_counter();
 13372  3559  31A0  2061  31B5   	fcall	_coulomb_counter
 13373  355C                     l7687:	
 13374                           
 13375                           ;BQ76920.c: 183:     updateCurrent();
 13376  355C  31AC  24DC  31B5   	fcall	_updateCurrent
 13377                           
 13378                           ;BQ76920.c: 184:     updateTemperatures();
 13379  355F  3195  2527  31B5   	fcall	_updateTemperatures
 13380                           
 13381                           ;BQ76920.c: 189:     if(AFE_Status()==0){
 13382  3562  31A0  2002  31B5   	fcall	_AFE_Status
 13383  3565  0020               	movlb	0	; select bank0
 13384  3566  0820               	movf	?_AFE_Status,w
 13385  3567  0421               	iorwf	?_AFE_Status+1,w
 13386  3568  1D03               	btfss	3,2
 13387  3569  0008               	return
 13388                           
 13389                           ;BQ76920.c: 190:     enableDischarging(1);
 13390  356A  3001               	movlw	1
 13391  356B  00A0               	movwf	enableDischarging@enable
 13392  356C  3000               	movlw	0
 13393  356D  00A1               	movwf	enableDischarging@enable+1
 13394  356E  31B5  250B  31B5   	fcall	_enableDischarging
 13395                           
 13396                           ;BQ76920.c: 191:     enableCharging(1);
 13397  3571  3001               	movlw	1
 13398  3572  0020               	movlb	0	; select bank0
 13399  3573  00A0               	movwf	enableCharging@enable
 13400  3574  3000               	movlw	0
 13401  3575  00A1               	movwf	enableCharging@enable+1
 13402  3576  31B4  24D4         	fcall	_enableCharging
 13403  3578  0008               	return
 13404  3579                     __end_of_AFE_UPDATE:	
 13405                           
 13406                           	psect	text47
 13407  124F                     __ptext47:	
 13408 ;; *************** function _updateVoltages *****************
 13409 ;; Defined at:
 13410 ;;		line 221 in file "BQ76920.c"
 13411 ;; Parameters:    Size  Location     Type
 13412 ;;		None
 13413 ;; Auto vars:     Size  Location     Type
 13414 ;;  adcVal          4   24[BANK1 ] long 
 13415 ;; Return value:  Size  Location     Type
 13416 ;;                  1    wreg      void 
 13417 ;; Registers used:
 13418 ;;		wreg, status,2, status,0, pclath, cstack
 13419 ;; Tracked objects:
 13420 ;;		On entry : 0/0
 13421 ;;		On exit  : 0/0
 13422 ;;		Unchanged: 0/0
 13423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13425 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13426 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13427 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13428 ;;Total ram usage:       11 bytes
 13429 ;; Hardware stack levels used:    1
 13430 ;; Hardware stack levels required when called:    3
 13431 ;; This function calls:
 13432 ;;		___aldiv
 13433 ;;		___fladd
 13434 ;;		___fldiv
 13435 ;;		___flmul
 13436 ;;		___fltol
 13437 ;;		___lmul
 13438 ;;		___xxtofl
 13439 ;;		_readRegister
 13440 ;; This function is called by:
 13441 ;;		_AFE_UPDATE
 13442 ;; This function uses a non-reentrant model
 13443 ;;
 13444                           
 13445                           
 13446                           ;psect for function _updateVoltages
 13447  124F                     _updateVoltages:	
 13448                           
 13449                           ;BQ76920.c: 225:   adcVal = (readRegister(0x18, 0x2A) << 8) | readRegister(0x18, 0x2B);
 13450                           
 13451                           ;incstack = 0
 13452                           ; Regs used in _updateVoltages: [wreg+status,2+status,0+pclath+cstack]
 13453  124F  3018               	movlw	24
 13454  1250  00F5               	movwf	readRegister@slaveAddress
 13455  1251  3000               	movlw	0
 13456  1252  00F6               	movwf	readRegister@slaveAddress+1
 13457  1253  302A               	movlw	42
 13458  1254  00F7               	movwf	readRegister@regAddress
 13459  1255  3000               	movlw	0
 13460  1256  00F8               	movwf	readRegister@regAddress+1
 13461  1257  31B4  249E  3192   	fcall	_readRegister
 13462  125A  0875               	movf	?_readRegister,w
 13463  125B  0021               	movlb	1	; select bank1
 13464  125C  00B1               	movwf	??_updateVoltages^(0+128)
 13465  125D  0876               	movf	?_readRegister+1,w
 13466  125E  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13467  125F  0831               	movf	??_updateVoltages^(0+128),w
 13468  1260  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13469  1261  01B1               	clrf	??_updateVoltages^(0+128)
 13470  1262  3018               	movlw	24
 13471  1263  00F5               	movwf	readRegister@slaveAddress
 13472  1264  3000               	movlw	0
 13473  1265  00F6               	movwf	readRegister@slaveAddress+1
 13474  1266  302B               	movlw	43
 13475  1267  00F7               	movwf	readRegister@regAddress
 13476  1268  3000               	movlw	0
 13477  1269  00F8               	movwf	readRegister@regAddress+1
 13478  126A  31B4  249E  3192   	fcall	_readRegister
 13479  126D  0875               	movf	?_readRegister,w
 13480  126E  0021               	movlb	1	; select bank1
 13481  126F  0431               	iorwf	??_updateVoltages^(0+128),w
 13482  1270  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13483  1271  0876               	movf	?_readRegister+1,w
 13484  1272  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13485  1273  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13486  1274  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13487  1275  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13488  1276  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13489  1277  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13490  1278  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13491                           
 13492                           ;BQ76920.c: 226:   batVoltage = 4.0 * adcGain * adcVal / 1000.0 + 4 * adcOffset;
 13493  1279  0022               	movlb	2	; select bank2
 13494  127A  086E               	movf	_adcGain^(0+256),w
 13495  127B  00F1               	movwf	___xxtofl@val
 13496  127C  086F               	movf	(_adcGain+1)^(0+256),w
 13497  127D  00F2               	movwf	___xxtofl@val+1
 13498  127E  0D89               	rlf	9,f
 13499  127F  3B89               	subwfb	9,f
 13500  1280  0989               	comf	9,f
 13501  1281  00F3               	movwf	___xxtofl@val+2
 13502  1282  00F4               	movwf	___xxtofl@val+3
 13503  1283  3001               	movlw	1
 13504  1284  31AA  2248  3192   	fcall	___xxtofl
 13505  1287  0874               	movf	?___xxtofl+3,w
 13506  1288  0020               	movlb	0	; select bank0
 13507  1289  00AD               	movwf	___flmul@a+3
 13508  128A  0873               	movf	?___xxtofl+2,w
 13509  128B  00AC               	movwf	___flmul@a+2
 13510  128C  0872               	movf	?___xxtofl+1,w
 13511  128D  00AB               	movwf	___flmul@a+1
 13512  128E  0871               	movf	?___xxtofl,w
 13513  128F  00AA               	movwf	___flmul@a
 13514  1290  3040               	movlw	64
 13515  1291  00A9               	movwf	___flmul@b+3
 13516  1292  3080               	movlw	128
 13517  1293  00A8               	movwf	___flmul@b+2
 13518  1294  3000               	movlw	0
 13519  1295  00A7               	movwf	___flmul@b+1
 13520  1296  3000               	movlw	0
 13521  1297  00A6               	movwf	___flmul@b
 13522  1298  3190  2023  3192   	fcall	___flmul
 13523  129B  0020               	movlb	0	; select bank0
 13524  129C  0829               	movf	?___flmul+3,w
 13525  129D  0021               	movlb	1	; select bank1
 13526  129E  00B7               	movwf	(_updateVoltages$2151+3)^(0+128)
 13527  129F  0020               	movlb	0	; select bank0
 13528  12A0  0828               	movf	?___flmul+2,w
 13529  12A1  0021               	movlb	1	; select bank1
 13530  12A2  00B6               	movwf	(_updateVoltages$2151+2)^(0+128)
 13531  12A3  0020               	movlb	0	; select bank0
 13532  12A4  0827               	movf	?___flmul+1,w
 13533  12A5  0021               	movlb	1	; select bank1
 13534  12A6  00B5               	movwf	(_updateVoltages$2151+1)^(0+128)
 13535  12A7  0020               	movlb	0	; select bank0
 13536  12A8  0826               	movf	?___flmul,w
 13537  12A9  0021               	movlb	1	; select bank1
 13538  12AA  00B4               	movwf	_updateVoltages$2151^(0+128)
 13539                           
 13540                           ;BQ76920.c: 226:   batVoltage = 4.0 * adcGain * adcVal / 1000.0 + 4 * adcOffset;
 13541  12AB  0837               	movf	(_updateVoltages$2151+3)^(0+128),w
 13542  12AC  0020               	movlb	0	; select bank0
 13543  12AD  00AD               	movwf	___flmul@a+3
 13544  12AE  0021               	movlb	1	; select bank1
 13545  12AF  0836               	movf	(_updateVoltages$2151+2)^(0+128),w
 13546  12B0  0020               	movlb	0	; select bank0
 13547  12B1  00AC               	movwf	___flmul@a+2
 13548  12B2  0021               	movlb	1	; select bank1
 13549  12B3  0835               	movf	(_updateVoltages$2151+1)^(0+128),w
 13550  12B4  0020               	movlb	0	; select bank0
 13551  12B5  00AB               	movwf	___flmul@a+1
 13552  12B6  0021               	movlb	1	; select bank1
 13553  12B7  0834               	movf	_updateVoltages$2151^(0+128),w
 13554  12B8  0020               	movlb	0	; select bank0
 13555  12B9  00AA               	movwf	___flmul@a
 13556  12BA  0021               	movlb	1	; select bank1
 13557  12BB  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13558  12BC  00F4               	movwf	___xxtofl@val+3
 13559  12BD  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13560  12BE  00F3               	movwf	___xxtofl@val+2
 13561  12BF  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13562  12C0  00F2               	movwf	___xxtofl@val+1
 13563  12C1  0838               	movf	updateVoltages@adcVal^(0+128),w
 13564  12C2  00F1               	movwf	___xxtofl@val
 13565  12C3  3001               	movlw	1
 13566  12C4  31AA  2248  3192   	fcall	___xxtofl
 13567  12C7  0874               	movf	?___xxtofl+3,w
 13568  12C8  0020               	movlb	0	; select bank0
 13569  12C9  00A9               	movwf	___flmul@b+3
 13570  12CA  0873               	movf	?___xxtofl+2,w
 13571  12CB  00A8               	movwf	___flmul@b+2
 13572  12CC  0872               	movf	?___xxtofl+1,w
 13573  12CD  00A7               	movwf	___flmul@b+1
 13574  12CE  0871               	movf	?___xxtofl,w
 13575  12CF  00A6               	movwf	___flmul@b
 13576  12D0  3190  2023  3192   	fcall	___flmul
 13577  12D3  0020               	movlb	0	; select bank0
 13578  12D4  0829               	movf	?___flmul+3,w
 13579  12D5  00C7               	movwf	___fldiv@b+3
 13580  12D6  0828               	movf	?___flmul+2,w
 13581  12D7  00C6               	movwf	___fldiv@b+2
 13582  12D8  0827               	movf	?___flmul+1,w
 13583  12D9  00C5               	movwf	___fldiv@b+1
 13584  12DA  0826               	movf	?___flmul,w
 13585  12DB  00C4               	movwf	___fldiv@b
 13586  12DC  3044               	movlw	68
 13587  12DD  00C3               	movwf	___fldiv@a+3
 13588  12DE  307A               	movlw	122
 13589  12DF  00C2               	movwf	___fldiv@a+2
 13590  12E0  3000               	movlw	0
 13591  12E1  00C1               	movwf	___fldiv@a+1
 13592  12E2  3000               	movlw	0
 13593  12E3  00C0               	movwf	___fldiv@a
 13594  12E4  319C  24E2  3192   	fcall	___fldiv
 13595  12E7  0020               	movlb	0	; select bank0
 13596  12E8  0843               	movf	?___fldiv+3,w
 13597  12E9  00E1               	movwf	___fladd@a+3
 13598  12EA  0842               	movf	?___fldiv+2,w
 13599  12EB  00E0               	movwf	___fladd@a+2
 13600  12EC  0841               	movf	?___fldiv+1,w
 13601  12ED  00DF               	movwf	___fladd@a+1
 13602  12EE  0840               	movf	?___fldiv,w
 13603  12EF  00DE               	movwf	___fladd@a
 13604  12F0  0022               	movlb	2	; select bank2
 13605  12F1  086D               	movf	(_adcOffset+1)^(0+256),w
 13606  12F2  0021               	movlb	1	; select bank1
 13607  12F3  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13608  12F4  0022               	movlb	2	; select bank2
 13609  12F5  086C               	movf	_adcOffset^(0+256),w
 13610  12F6  0021               	movlb	1	; select bank1
 13611  12F7  00B1               	movwf	??_updateVoltages^(0+128)
 13612  12F8  35B1               	lslf	??_updateVoltages^(0+128),f
 13613  12F9  0DB2               	rlf	(??_updateVoltages^(0+128)+1),f
 13614  12FA  35B1               	lslf	??_updateVoltages^(0+128),f
 13615  12FB  0DB2               	rlf	(??_updateVoltages^(0+128)+1),f
 13616  12FC  0831               	movf	??_updateVoltages^(0+128),w
 13617  12FD  00F1               	movwf	___xxtofl@val
 13618  12FE  0832               	movf	(??_updateVoltages+1)^(0+128),w
 13619  12FF  00F2               	movwf	___xxtofl@val+1
 13620  1300  0D89               	rlf	9,f
 13621  1301  3B89               	subwfb	9,f
 13622  1302  0989               	comf	9,f
 13623  1303  00F3               	movwf	___xxtofl@val+2
 13624  1304  00F4               	movwf	___xxtofl@val+3
 13625  1305  3001               	movlw	1
 13626  1306  31AA  2248  3192   	fcall	___xxtofl
 13627  1309  0874               	movf	?___xxtofl+3,w
 13628  130A  0020               	movlb	0	; select bank0
 13629  130B  00DD               	movwf	___fladd@b+3
 13630  130C  0873               	movf	?___xxtofl+2,w
 13631  130D  00DC               	movwf	___fladd@b+2
 13632  130E  0872               	movf	?___xxtofl+1,w
 13633  130F  00DB               	movwf	___fladd@b+1
 13634  1310  0871               	movf	?___xxtofl,w
 13635  1311  00DA               	movwf	___fladd@b
 13636  1312  3185  25FE  3192   	fcall	___fladd
 13637  1315  0020               	movlb	0	; select bank0
 13638  1316  085D               	movf	?___fladd+3,w
 13639  1317  0021               	movlb	1	; select bank1
 13640  1318  00AB               	movwf	(___fltol@f1+3)^(0+128)
 13641  1319  0020               	movlb	0	; select bank0
 13642  131A  085C               	movf	?___fladd+2,w
 13643  131B  0021               	movlb	1	; select bank1
 13644  131C  00AA               	movwf	(___fltol@f1+2)^(0+128)
 13645  131D  0020               	movlb	0	; select bank0
 13646  131E  085B               	movf	?___fladd+1,w
 13647  131F  0021               	movlb	1	; select bank1
 13648  1320  00A9               	movwf	(___fltol@f1+1)^(0+128)
 13649  1321  0020               	movlb	0	; select bank0
 13650  1322  085A               	movf	?___fladd,w
 13651  1323  0021               	movlb	1	; select bank1
 13652  1324  00A8               	movwf	___fltol@f1^(0+128)
 13653  1325  31B6  26B9  3192   	fcall	___fltol
 13654  1328  0021               	movlb	1	; select bank1
 13655  1329  082B               	movf	(?___fltol+3)^(0+128),w
 13656  132A  0023               	movlb	3	; select bank3
 13657  132B  00C7               	movwf	(_batVoltage+3)^(0+384)
 13658  132C  0021               	movlb	1	; select bank1
 13659  132D  082A               	movf	(?___fltol+2)^(0+128),w
 13660  132E  0023               	movlb	3	; select bank3
 13661  132F  00C6               	movwf	(_batVoltage+2)^(0+384)
 13662  1330  0021               	movlb	1	; select bank1
 13663  1331  0829               	movf	(?___fltol+1)^(0+128),w
 13664  1332  0023               	movlb	3	; select bank3
 13665  1333  00C5               	movwf	(_batVoltage+1)^(0+384)
 13666  1334  0021               	movlb	1	; select bank1
 13667  1335  0828               	movf	?___fltol^(0+128),w
 13668  1336  0023               	movlb	3	; select bank3
 13669  1337  00C4               	movwf	_batVoltage^(0+384)
 13670                           
 13671                           ;BQ76920.c: 249:     adcVal = ((readRegister(0x18, 0x0C) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x0D);
 13672  1338  3018               	movlw	24
 13673  1339  00F5               	movwf	readRegister@slaveAddress
 13674  133A  3000               	movlw	0
 13675  133B  00F6               	movwf	readRegister@slaveAddress+1
 13676  133C  300C               	movlw	12
 13677  133D  00F7               	movwf	readRegister@regAddress
 13678  133E  3000               	movlw	0
 13679  133F  00F8               	movwf	readRegister@regAddress+1
 13680  1340  31B4  249E  3192   	fcall	_readRegister
 13681  1343  303F               	movlw	63
 13682  1344  0575               	andwf	?_readRegister,w
 13683  1345  0021               	movlb	1	; select bank1
 13684  1346  00B1               	movwf	??_updateVoltages^(0+128)
 13685  1347  3000               	movlw	0
 13686  1348  0576               	andwf	?_readRegister+1,w
 13687  1349  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13688  134A  0831               	movf	??_updateVoltages^(0+128),w
 13689  134B  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13690  134C  01B1               	clrf	??_updateVoltages^(0+128)
 13691  134D  3018               	movlw	24
 13692  134E  00F5               	movwf	readRegister@slaveAddress
 13693  134F  3000               	movlw	0
 13694  1350  00F6               	movwf	readRegister@slaveAddress+1
 13695  1351  300D               	movlw	13
 13696  1352  00F7               	movwf	readRegister@regAddress
 13697  1353  3000               	movlw	0
 13698  1354  00F8               	movwf	readRegister@regAddress+1
 13699  1355  31B4  249E  3192   	fcall	_readRegister
 13700  1358  0875               	movf	?_readRegister,w
 13701  1359  0021               	movlb	1	; select bank1
 13702  135A  0431               	iorwf	??_updateVoltages^(0+128),w
 13703  135B  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13704  135C  0876               	movf	?_readRegister+1,w
 13705  135D  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13706  135E  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13707  135F  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13708  1360  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13709  1361  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13710  1362  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13711  1363  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13712                           
 13713                           ;BQ76920.c: 250:     cellVoltages[0] = (adcVal * adcGain / 1000) + adcOffset;
 13714  1364  3000               	movlw	0
 13715  1365  0020               	movlb	0	; select bank0
 13716  1366  00A7               	movwf	___aldiv@divisor+3
 13717  1367  3000               	movlw	0
 13718  1368  00A6               	movwf	___aldiv@divisor+2
 13719  1369  3003               	movlw	3
 13720  136A  00A5               	movwf	___aldiv@divisor+1
 13721  136B  30E8               	movlw	232
 13722  136C  00A4               	movwf	___aldiv@divisor
 13723  136D  0022               	movlb	2	; select bank2
 13724  136E  086E               	movf	_adcGain^(0+256),w
 13725  136F  00F1               	movwf	___lmul@multiplier
 13726  1370  086F               	movf	(_adcGain+1)^(0+256),w
 13727  1371  00F2               	movwf	___lmul@multiplier+1
 13728  1372  0D89               	rlf	9,f
 13729  1373  3B89               	subwfb	9,f
 13730  1374  0989               	comf	9,f
 13731  1375  00F3               	movwf	___lmul@multiplier+2
 13732  1376  00F4               	movwf	___lmul@multiplier+3
 13733  1377  0021               	movlb	1	; select bank1
 13734  1378  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13735  1379  00F8               	movwf	___lmul@multiplicand+3
 13736  137A  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13737  137B  00F7               	movwf	___lmul@multiplicand+2
 13738  137C  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13739  137D  00F6               	movwf	___lmul@multiplicand+1
 13740  137E  0838               	movf	updateVoltages@adcVal^(0+128),w
 13741  137F  00F5               	movwf	___lmul@multiplicand
 13742  1380  31B4  2405  3192   	fcall	___lmul
 13743  1383  0874               	movf	?___lmul+3,w
 13744  1384  0020               	movlb	0	; select bank0
 13745  1385  00AB               	movwf	___aldiv@dividend+3
 13746  1386  0873               	movf	?___lmul+2,w
 13747  1387  00AA               	movwf	___aldiv@dividend+2
 13748  1388  0872               	movf	?___lmul+1,w
 13749  1389  00A9               	movwf	___aldiv@dividend+1
 13750  138A  0871               	movf	?___lmul,w
 13751  138B  00A8               	movwf	___aldiv@dividend
 13752  138C  31A9  21C6  3192   	fcall	___aldiv
 13753  138F  0022               	movlb	2	; select bank2
 13754  1390  086C               	movf	_adcOffset^(0+256),w
 13755  1391  0020               	movlb	0	; select bank0
 13756  1392  0724               	addwf	?___aldiv,w
 13757  1393  0023               	movlb	3	; select bank3
 13758  1394  00AA               	movwf	_cellVoltages^(0+384)
 13759  1395  0022               	movlb	2	; select bank2
 13760  1396  086D               	movf	(_adcOffset+1)^(0+256),w
 13761  1397  0020               	movlb	0	; select bank0
 13762  1398  3D25               	addwfc	?___aldiv+1,w
 13763  1399  0023               	movlb	3	; select bank3
 13764  139A  00AB               	movwf	(_cellVoltages+1)^(0+384)
 13765                           
 13766                           ;BQ76920.c: 251:     adcVal = ((readRegister(0x18, 0x0E) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x0F);
 13767  139B  3018               	movlw	24
 13768  139C  00F5               	movwf	readRegister@slaveAddress
 13769  139D  3000               	movlw	0
 13770  139E  00F6               	movwf	readRegister@slaveAddress+1
 13771  139F  300E               	movlw	14
 13772  13A0  00F7               	movwf	readRegister@regAddress
 13773  13A1  3000               	movlw	0
 13774  13A2  00F8               	movwf	readRegister@regAddress+1
 13775  13A3  31B4  249E  3192   	fcall	_readRegister
 13776  13A6  303F               	movlw	63
 13777  13A7  0575               	andwf	?_readRegister,w
 13778  13A8  0021               	movlb	1	; select bank1
 13779  13A9  00B1               	movwf	??_updateVoltages^(0+128)
 13780  13AA  3000               	movlw	0
 13781  13AB  0576               	andwf	?_readRegister+1,w
 13782  13AC  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13783  13AD  0831               	movf	??_updateVoltages^(0+128),w
 13784  13AE  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13785  13AF  01B1               	clrf	??_updateVoltages^(0+128)
 13786  13B0  3018               	movlw	24
 13787  13B1  00F5               	movwf	readRegister@slaveAddress
 13788  13B2  3000               	movlw	0
 13789  13B3  00F6               	movwf	readRegister@slaveAddress+1
 13790  13B4  300F               	movlw	15
 13791  13B5  00F7               	movwf	readRegister@regAddress
 13792  13B6  3000               	movlw	0
 13793  13B7  00F8               	movwf	readRegister@regAddress+1
 13794  13B8  31B4  249E  3192   	fcall	_readRegister
 13795  13BB  0875               	movf	?_readRegister,w
 13796  13BC  0021               	movlb	1	; select bank1
 13797  13BD  0431               	iorwf	??_updateVoltages^(0+128),w
 13798  13BE  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13799  13BF  0876               	movf	?_readRegister+1,w
 13800  13C0  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13801  13C1  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13802  13C2  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13803  13C3  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13804  13C4  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13805  13C5  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13806  13C6  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13807                           
 13808                           ;BQ76920.c: 252:     cellVoltages[1] = (adcVal * adcGain / 1000) + adcOffset;
 13809  13C7  3000               	movlw	0
 13810  13C8  0020               	movlb	0	; select bank0
 13811  13C9  00A7               	movwf	___aldiv@divisor+3
 13812  13CA  3000               	movlw	0
 13813  13CB  00A6               	movwf	___aldiv@divisor+2
 13814  13CC  3003               	movlw	3
 13815  13CD  00A5               	movwf	___aldiv@divisor+1
 13816  13CE  30E8               	movlw	232
 13817  13CF  00A4               	movwf	___aldiv@divisor
 13818  13D0  0022               	movlb	2	; select bank2
 13819  13D1  086E               	movf	_adcGain^(0+256),w
 13820  13D2  00F1               	movwf	___lmul@multiplier
 13821  13D3  086F               	movf	(_adcGain+1)^(0+256),w
 13822  13D4  00F2               	movwf	___lmul@multiplier+1
 13823  13D5  0D89               	rlf	9,f
 13824  13D6  3B89               	subwfb	9,f
 13825  13D7  0989               	comf	9,f
 13826  13D8  00F3               	movwf	___lmul@multiplier+2
 13827  13D9  00F4               	movwf	___lmul@multiplier+3
 13828  13DA  0021               	movlb	1	; select bank1
 13829  13DB  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13830  13DC  00F8               	movwf	___lmul@multiplicand+3
 13831  13DD  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13832  13DE  00F7               	movwf	___lmul@multiplicand+2
 13833  13DF  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13834  13E0  00F6               	movwf	___lmul@multiplicand+1
 13835  13E1  0838               	movf	updateVoltages@adcVal^(0+128),w
 13836  13E2  00F5               	movwf	___lmul@multiplicand
 13837  13E3  31B4  2405  3192   	fcall	___lmul
 13838  13E6  0874               	movf	?___lmul+3,w
 13839  13E7  0020               	movlb	0	; select bank0
 13840  13E8  00AB               	movwf	___aldiv@dividend+3
 13841  13E9  0873               	movf	?___lmul+2,w
 13842  13EA  00AA               	movwf	___aldiv@dividend+2
 13843  13EB  0872               	movf	?___lmul+1,w
 13844  13EC  00A9               	movwf	___aldiv@dividend+1
 13845  13ED  0871               	movf	?___lmul,w
 13846  13EE  00A8               	movwf	___aldiv@dividend
 13847  13EF  31A9  21C6  3192   	fcall	___aldiv
 13848  13F2  0022               	movlb	2	; select bank2
 13849  13F3  086C               	movf	_adcOffset^(0+256),w
 13850  13F4  0020               	movlb	0	; select bank0
 13851  13F5  0724               	addwf	?___aldiv,w
 13852  13F6  0023               	movlb	3	; select bank3
 13853  13F7  00AC               	movwf	(_cellVoltages^(0+384)+2)
 13854  13F8  0022               	movlb	2	; select bank2
 13855  13F9  086D               	movf	(_adcOffset+1)^(0+256),w
 13856  13FA  0020               	movlb	0	; select bank0
 13857  13FB  3D25               	addwfc	?___aldiv+1,w
 13858  13FC  0023               	movlb	3	; select bank3
 13859  13FD  00AD               	movwf	((_cellVoltages+1)^(0+384)+2)
 13860                           
 13861                           ;BQ76920.c: 253:     adcVal = ((readRegister(0x18, 0x10) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x11);
 13862  13FE  3018               	movlw	24
 13863  13FF  00F5               	movwf	readRegister@slaveAddress
 13864  1400  3000               	movlw	0
 13865  1401  00F6               	movwf	readRegister@slaveAddress+1
 13866  1402  3010               	movlw	16
 13867  1403  00F7               	movwf	readRegister@regAddress
 13868  1404  3000               	movlw	0
 13869  1405  00F8               	movwf	readRegister@regAddress+1
 13870  1406  31B4  249E  3192   	fcall	_readRegister
 13871  1409  303F               	movlw	63
 13872  140A  0575               	andwf	?_readRegister,w
 13873  140B  0021               	movlb	1	; select bank1
 13874  140C  00B1               	movwf	??_updateVoltages^(0+128)
 13875  140D  3000               	movlw	0
 13876  140E  0576               	andwf	?_readRegister+1,w
 13877  140F  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13878  1410  0831               	movf	??_updateVoltages^(0+128),w
 13879  1411  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13880  1412  01B1               	clrf	??_updateVoltages^(0+128)
 13881  1413  3018               	movlw	24
 13882  1414  00F5               	movwf	readRegister@slaveAddress
 13883  1415  3000               	movlw	0
 13884  1416  00F6               	movwf	readRegister@slaveAddress+1
 13885  1417  3011               	movlw	17
 13886  1418  00F7               	movwf	readRegister@regAddress
 13887  1419  3000               	movlw	0
 13888  141A  00F8               	movwf	readRegister@regAddress+1
 13889  141B  31B4  249E  3192   	fcall	_readRegister
 13890  141E  0875               	movf	?_readRegister,w
 13891  141F  0021               	movlb	1	; select bank1
 13892  1420  0431               	iorwf	??_updateVoltages^(0+128),w
 13893  1421  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13894  1422  0876               	movf	?_readRegister+1,w
 13895  1423  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13896  1424  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13897  1425  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13898  1426  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13899  1427  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13900  1428  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13901  1429  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13902                           
 13903                           ;BQ76920.c: 254:     cellVoltages[2] = (adcVal * adcGain / 1000) + adcOffset;
 13904  142A  3000               	movlw	0
 13905  142B  0020               	movlb	0	; select bank0
 13906  142C  00A7               	movwf	___aldiv@divisor+3
 13907  142D  3000               	movlw	0
 13908  142E  00A6               	movwf	___aldiv@divisor+2
 13909  142F  3003               	movlw	3
 13910  1430  00A5               	movwf	___aldiv@divisor+1
 13911  1431  30E8               	movlw	232
 13912  1432  00A4               	movwf	___aldiv@divisor
 13913  1433  0022               	movlb	2	; select bank2
 13914  1434  086E               	movf	_adcGain^(0+256),w
 13915  1435  00F1               	movwf	___lmul@multiplier
 13916  1436  086F               	movf	(_adcGain+1)^(0+256),w
 13917  1437  00F2               	movwf	___lmul@multiplier+1
 13918  1438  0D89               	rlf	9,f
 13919  1439  3B89               	subwfb	9,f
 13920  143A  0989               	comf	9,f
 13921  143B  00F3               	movwf	___lmul@multiplier+2
 13922  143C  00F4               	movwf	___lmul@multiplier+3
 13923  143D  0021               	movlb	1	; select bank1
 13924  143E  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13925  143F  00F8               	movwf	___lmul@multiplicand+3
 13926  1440  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13927  1441  00F7               	movwf	___lmul@multiplicand+2
 13928  1442  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13929  1443  00F6               	movwf	___lmul@multiplicand+1
 13930  1444  0838               	movf	updateVoltages@adcVal^(0+128),w
 13931  1445  00F5               	movwf	___lmul@multiplicand
 13932  1446  31B4  2405  3192   	fcall	___lmul
 13933  1449  0874               	movf	?___lmul+3,w
 13934  144A  0020               	movlb	0	; select bank0
 13935  144B  00AB               	movwf	___aldiv@dividend+3
 13936  144C  0873               	movf	?___lmul+2,w
 13937  144D  00AA               	movwf	___aldiv@dividend+2
 13938  144E  0872               	movf	?___lmul+1,w
 13939  144F  00A9               	movwf	___aldiv@dividend+1
 13940  1450  0871               	movf	?___lmul,w
 13941  1451  00A8               	movwf	___aldiv@dividend
 13942  1452  31A9  21C6  3192   	fcall	___aldiv
 13943  1455  0022               	movlb	2	; select bank2
 13944  1456  086C               	movf	_adcOffset^(0+256),w
 13945  1457  0020               	movlb	0	; select bank0
 13946  1458  0724               	addwf	?___aldiv,w
 13947  1459  0023               	movlb	3	; select bank3
 13948  145A  00AE               	movwf	(_cellVoltages^(0+384)+4)
 13949  145B  0022               	movlb	2	; select bank2
 13950  145C  086D               	movf	(_adcOffset+1)^(0+256),w
 13951  145D  0020               	movlb	0	; select bank0
 13952  145E  3D25               	addwfc	?___aldiv+1,w
 13953  145F  0023               	movlb	3	; select bank3
 13954  1460  00AF               	movwf	((_cellVoltages+1)^(0+384)+4)
 13955                           
 13956                           ;BQ76920.c: 255:     adcVal = ((readRegister(0x18, 0x12) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x13);
 13957  1461  3018               	movlw	24
 13958  1462  00F5               	movwf	readRegister@slaveAddress
 13959  1463  3000               	movlw	0
 13960  1464  00F6               	movwf	readRegister@slaveAddress+1
 13961  1465  3012               	movlw	18
 13962  1466  00F7               	movwf	readRegister@regAddress
 13963  1467  3000               	movlw	0
 13964  1468  00F8               	movwf	readRegister@regAddress+1
 13965  1469  31B4  249E  3192   	fcall	_readRegister
 13966  146C  303F               	movlw	63
 13967  146D  0575               	andwf	?_readRegister,w
 13968  146E  0021               	movlb	1	; select bank1
 13969  146F  00B1               	movwf	??_updateVoltages^(0+128)
 13970  1470  3000               	movlw	0
 13971  1471  0576               	andwf	?_readRegister+1,w
 13972  1472  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13973  1473  0831               	movf	??_updateVoltages^(0+128),w
 13974  1474  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13975  1475  01B1               	clrf	??_updateVoltages^(0+128)
 13976  1476  3018               	movlw	24
 13977  1477  00F5               	movwf	readRegister@slaveAddress
 13978  1478  3000               	movlw	0
 13979  1479  00F6               	movwf	readRegister@slaveAddress+1
 13980  147A  3013               	movlw	19
 13981  147B  00F7               	movwf	readRegister@regAddress
 13982  147C  3000               	movlw	0
 13983  147D  00F8               	movwf	readRegister@regAddress+1
 13984  147E  31B4  249E  3192   	fcall	_readRegister
 13985  1481  0875               	movf	?_readRegister,w
 13986  1482  0021               	movlb	1	; select bank1
 13987  1483  0431               	iorwf	??_updateVoltages^(0+128),w
 13988  1484  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13989  1485  0876               	movf	?_readRegister+1,w
 13990  1486  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13991  1487  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13992  1488  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13993  1489  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13994  148A  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13995  148B  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13996  148C  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13997                           
 13998                           ;BQ76920.c: 256:     cellVoltages[3] = (adcVal * adcGain / 1000) + adcOffset;
 13999  148D  3000               	movlw	0
 14000  148E  0020               	movlb	0	; select bank0
 14001  148F  00A7               	movwf	___aldiv@divisor+3
 14002  1490  3000               	movlw	0
 14003  1491  00A6               	movwf	___aldiv@divisor+2
 14004  1492  3003               	movlw	3
 14005  1493  00A5               	movwf	___aldiv@divisor+1
 14006  1494  30E8               	movlw	232
 14007  1495  00A4               	movwf	___aldiv@divisor
 14008  1496  0022               	movlb	2	; select bank2
 14009  1497  086E               	movf	_adcGain^(0+256),w
 14010  1498  00F1               	movwf	___lmul@multiplier
 14011  1499  086F               	movf	(_adcGain+1)^(0+256),w
 14012  149A  00F2               	movwf	___lmul@multiplier+1
 14013  149B  0D89               	rlf	9,f
 14014  149C  3B89               	subwfb	9,f
 14015  149D  0989               	comf	9,f
 14016  149E  00F3               	movwf	___lmul@multiplier+2
 14017  149F  00F4               	movwf	___lmul@multiplier+3
 14018  14A0  0021               	movlb	1	; select bank1
 14019  14A1  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 14020  14A2  00F8               	movwf	___lmul@multiplicand+3
 14021  14A3  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 14022  14A4  00F7               	movwf	___lmul@multiplicand+2
 14023  14A5  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 14024  14A6  00F6               	movwf	___lmul@multiplicand+1
 14025  14A7  0838               	movf	updateVoltages@adcVal^(0+128),w
 14026  14A8  00F5               	movwf	___lmul@multiplicand
 14027  14A9  31B4  2405  3192   	fcall	___lmul
 14028  14AC  0874               	movf	?___lmul+3,w
 14029  14AD  0020               	movlb	0	; select bank0
 14030  14AE  00AB               	movwf	___aldiv@dividend+3
 14031  14AF  0873               	movf	?___lmul+2,w
 14032  14B0  00AA               	movwf	___aldiv@dividend+2
 14033  14B1  0872               	movf	?___lmul+1,w
 14034  14B2  00A9               	movwf	___aldiv@dividend+1
 14035  14B3  0871               	movf	?___lmul,w
 14036  14B4  00A8               	movwf	___aldiv@dividend
 14037  14B5  31A9  21C6  3192   	fcall	___aldiv
 14038  14B8  0022               	movlb	2	; select bank2
 14039  14B9  086C               	movf	_adcOffset^(0+256),w
 14040  14BA  0020               	movlb	0	; select bank0
 14041  14BB  0724               	addwf	?___aldiv,w
 14042  14BC  0023               	movlb	3	; select bank3
 14043  14BD  00B0               	movwf	(_cellVoltages^(0+384)+6)
 14044  14BE  0022               	movlb	2	; select bank2
 14045  14BF  086D               	movf	(_adcOffset+1)^(0+256),w
 14046  14C0  0020               	movlb	0	; select bank0
 14047  14C1  3D25               	addwfc	?___aldiv+1,w
 14048  14C2  0023               	movlb	3	; select bank3
 14049  14C3  00B1               	movwf	((_cellVoltages+1)^(0+384)+6)
 14050                           
 14051                           ;BQ76920.c: 257:     adcVal = ((readRegister(0x18, 0x14) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x15);
 14052  14C4  3018               	movlw	24
 14053  14C5  00F5               	movwf	readRegister@slaveAddress
 14054  14C6  3000               	movlw	0
 14055  14C7  00F6               	movwf	readRegister@slaveAddress+1
 14056  14C8  3014               	movlw	20
 14057  14C9  00F7               	movwf	readRegister@regAddress
 14058  14CA  3000               	movlw	0
 14059  14CB  00F8               	movwf	readRegister@regAddress+1
 14060  14CC  31B4  249E  3192   	fcall	_readRegister
 14061  14CF  303F               	movlw	63
 14062  14D0  0575               	andwf	?_readRegister,w
 14063  14D1  0021               	movlb	1	; select bank1
 14064  14D2  00B1               	movwf	??_updateVoltages^(0+128)
 14065  14D3  3000               	movlw	0
 14066  14D4  0576               	andwf	?_readRegister+1,w
 14067  14D5  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 14068  14D6  0831               	movf	??_updateVoltages^(0+128),w
 14069  14D7  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 14070  14D8  01B1               	clrf	??_updateVoltages^(0+128)
 14071  14D9  3018               	movlw	24
 14072  14DA  00F5               	movwf	readRegister@slaveAddress
 14073  14DB  3000               	movlw	0
 14074  14DC  00F6               	movwf	readRegister@slaveAddress+1
 14075  14DD  3015               	movlw	21
 14076  14DE  00F7               	movwf	readRegister@regAddress
 14077  14DF  3000               	movlw	0
 14078  14E0  00F8               	movwf	readRegister@regAddress+1
 14079  14E1  31B4  249E  3192   	fcall	_readRegister
 14080  14E4  0875               	movf	?_readRegister,w
 14081  14E5  0021               	movlb	1	; select bank1
 14082  14E6  0431               	iorwf	??_updateVoltages^(0+128),w
 14083  14E7  00B8               	movwf	updateVoltages@adcVal^(0+128)
 14084  14E8  0876               	movf	?_readRegister+1,w
 14085  14E9  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 14086  14EA  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 14087  14EB  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 14088  14EC  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 14089  14ED  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 14090  14EE  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 14091  14EF  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 14092                           
 14093                           ;BQ76920.c: 258:     cellVoltages[4] = (adcVal * adcGain / 1000) + adcOffset;
 14094  14F0  3000               	movlw	0
 14095  14F1  0020               	movlb	0	; select bank0
 14096  14F2  00A7               	movwf	___aldiv@divisor+3
 14097  14F3  3000               	movlw	0
 14098  14F4  00A6               	movwf	___aldiv@divisor+2
 14099  14F5  3003               	movlw	3
 14100  14F6  00A5               	movwf	___aldiv@divisor+1
 14101  14F7  30E8               	movlw	232
 14102  14F8  00A4               	movwf	___aldiv@divisor
 14103  14F9  0022               	movlb	2	; select bank2
 14104  14FA  086E               	movf	_adcGain^(0+256),w
 14105  14FB  00F1               	movwf	___lmul@multiplier
 14106  14FC  086F               	movf	(_adcGain+1)^(0+256),w
 14107  14FD  00F2               	movwf	___lmul@multiplier+1
 14108  14FE  0D89               	rlf	9,f
 14109  14FF  3B89               	subwfb	9,f
 14110  1500  0989               	comf	9,f
 14111  1501  00F3               	movwf	___lmul@multiplier+2
 14112  1502  00F4               	movwf	___lmul@multiplier+3
 14113  1503  0021               	movlb	1	; select bank1
 14114  1504  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 14115  1505  00F8               	movwf	___lmul@multiplicand+3
 14116  1506  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 14117  1507  00F7               	movwf	___lmul@multiplicand+2
 14118  1508  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 14119  1509  00F6               	movwf	___lmul@multiplicand+1
 14120  150A  0838               	movf	updateVoltages@adcVal^(0+128),w
 14121  150B  00F5               	movwf	___lmul@multiplicand
 14122  150C  31B4  2405  3192   	fcall	___lmul
 14123  150F  0874               	movf	?___lmul+3,w
 14124  1510  0020               	movlb	0	; select bank0
 14125  1511  00AB               	movwf	___aldiv@dividend+3
 14126  1512  0873               	movf	?___lmul+2,w
 14127  1513  00AA               	movwf	___aldiv@dividend+2
 14128  1514  0872               	movf	?___lmul+1,w
 14129  1515  00A9               	movwf	___aldiv@dividend+1
 14130  1516  0871               	movf	?___lmul,w
 14131  1517  00A8               	movwf	___aldiv@dividend
 14132  1518  31A9  21C6         	fcall	___aldiv
 14133  151A  0022               	movlb	2	; select bank2
 14134  151B  086C               	movf	_adcOffset^(0+256),w
 14135  151C  0020               	movlb	0	; select bank0
 14136  151D  0724               	addwf	?___aldiv,w
 14137  151E  0023               	movlb	3	; select bank3
 14138  151F  00B2               	movwf	(_cellVoltages^(0+384)+8)
 14139  1520  0022               	movlb	2	; select bank2
 14140  1521  086D               	movf	(_adcOffset+1)^(0+256),w
 14141  1522  0020               	movlb	0	; select bank0
 14142  1523  3D25               	addwfc	?___aldiv+1,w
 14143  1524  0023               	movlb	3	; select bank3
 14144  1525  00B3               	movwf	((_cellVoltages+1)^(0+384)+8)
 14145  1526  0008               	return
 14146  1527                     __end_of_updateVoltages:	
 14147                           
 14148                           	psect	text48
 14149  3405                     __ptext48:	
 14150 ;; *************** function ___lmul *****************
 14151 ;; Defined at:
 14152 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c"
 14153 ;; Parameters:    Size  Location     Type
 14154 ;;  multiplier      4    1[COMMON] unsigned long 
 14155 ;;  multiplicand    4    5[COMMON] unsigned long 
 14156 ;; Auto vars:     Size  Location     Type
 14157 ;;  product         4    0[BANK0 ] unsigned long 
 14158 ;; Return value:  Size  Location     Type
 14159 ;;                  4    1[COMMON] unsigned long 
 14160 ;; Registers used:
 14161 ;;		wreg, status,2, status,0
 14162 ;; Tracked objects:
 14163 ;;		On entry : 0/0
 14164 ;;		On exit  : 0/0
 14165 ;;		Unchanged: 0/0
 14166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14167 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14168 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14170 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14171 ;;Total ram usage:       12 bytes
 14172 ;; Hardware stack levels used:    1
 14173 ;; Hardware stack levels required when called:    1
 14174 ;; This function calls:
 14175 ;;		Nothing
 14176 ;; This function is called by:
 14177 ;;		_setCellUndervoltageProtection
 14178 ;;		_setCellOvervoltageProtection
 14179 ;;		_updateVoltages
 14180 ;; This function uses a non-reentrant model
 14181 ;;
 14182                           
 14183                           
 14184                           ;psect for function ___lmul
 14185  3405                     ___lmul:	
 14186                           
 14187                           ;incstack = 0
 14188                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 14189  3405  3000               	movlw	0
 14190  3406  0020               	movlb	0	; select bank0
 14191  3407  00A3               	movwf	___lmul@product+3
 14192  3408  3000               	movlw	0
 14193  3409  00A2               	movwf	___lmul@product+2
 14194  340A  3000               	movlw	0
 14195  340B  00A1               	movwf	___lmul@product+1
 14196  340C  3000               	movlw	0
 14197  340D  00A0               	movwf	___lmul@product
 14198  340E                     l7293:	
 14199  340E  1C71               	btfss	___lmul@multiplier,0
 14200  340F  2C19               	goto	l7297
 14201  3410  0875               	movf	___lmul@multiplicand,w
 14202  3411  0020               	movlb	0	; select bank0
 14203  3412  07A0               	addwf	___lmul@product,f
 14204  3413  0876               	movf	___lmul@multiplicand+1,w
 14205  3414  3DA1               	addwfc	___lmul@product+1,f
 14206  3415  0877               	movf	___lmul@multiplicand+2,w
 14207  3416  3DA2               	addwfc	___lmul@product+2,f
 14208  3417  0878               	movf	___lmul@multiplicand+3,w
 14209  3418  3DA3               	addwfc	___lmul@product+3,f
 14210  3419                     l7297:	
 14211  3419  3001               	movlw	1
 14212  341A                     u9145:	
 14213  341A  35F5               	lslf	___lmul@multiplicand,f
 14214  341B  0DF6               	rlf	___lmul@multiplicand+1,f
 14215  341C  0DF7               	rlf	___lmul@multiplicand+2,f
 14216  341D  0DF8               	rlf	___lmul@multiplicand+3,f
 14217  341E  0B89               	decfsz	9,f
 14218  341F  2C1A               	goto	u9145
 14219  3420  3001               	movlw	1
 14220  3421                     u9155:	
 14221  3421  36F4               	lsrf	___lmul@multiplier+3,f
 14222  3422  0CF3               	rrf	___lmul@multiplier+2,f
 14223  3423  0CF2               	rrf	___lmul@multiplier+1,f
 14224  3424  0CF1               	rrf	___lmul@multiplier,f
 14225  3425  0B89               	decfsz	9,f
 14226  3426  2C21               	goto	u9155
 14227  3427  0874               	movf	___lmul@multiplier+3,w
 14228  3428  0473               	iorwf	___lmul@multiplier+2,w
 14229  3429  0472               	iorwf	___lmul@multiplier+1,w
 14230  342A  0471               	iorwf	___lmul@multiplier,w
 14231  342B  1D03               	skipz
 14232  342C  2C0E               	goto	l7293
 14233  342D  0020               	movlb	0	; select bank0
 14234  342E  0823               	movf	___lmul@product+3,w
 14235  342F  00F4               	movwf	?___lmul+3
 14236  3430  0822               	movf	___lmul@product+2,w
 14237  3431  00F3               	movwf	?___lmul+2
 14238  3432  0821               	movf	___lmul@product+1,w
 14239  3433  00F2               	movwf	?___lmul+1
 14240  3434  0820               	movf	___lmul@product,w
 14241  3435  00F1               	movwf	?___lmul
 14242  3436  0008               	return
 14243  3437                     __end_of___lmul:	
 14244                           
 14245                           	psect	text49
 14246  1527                     __ptext49:	
 14247 ;; *************** function _updateTemperatures *****************
 14248 ;; Defined at:
 14249 ;;		line 265 in file "BQ76920.c"
 14250 ;; Parameters:    Size  Location     Type
 14251 ;;		None
 14252 ;; Auto vars:     Size  Location     Type
 14253 ;;  rts             4   75[BANK1 ] unsigned long 
 14254 ;;  tmp             4   67[BANK1 ] float 
 14255 ;;  vtsx            2   73[BANK1 ] int 
 14256 ;;  adcVal          2   71[BANK1 ] int 
 14257 ;; Return value:  Size  Location     Type
 14258 ;;                  1    wreg      void 
 14259 ;; Registers used:
 14260 ;;		wreg, status,2, status,0, pclath, cstack
 14261 ;; Tracked objects:
 14262 ;;		On entry : 0/0
 14263 ;;		On exit  : 0/0
 14264 ;;		Unchanged: 0/0
 14265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14267 ;;      Locals:         0       0      56       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14268 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14269 ;;      Totals:         0       0      59       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14270 ;;Total ram usage:       59 bytes
 14271 ;; Hardware stack levels used:    1
 14272 ;; Hardware stack levels required when called:    4
 14273 ;; This function calls:
 14274 ;;		___fladd
 14275 ;;		___fldiv
 14276 ;;		___flmul
 14277 ;;		___flsub
 14278 ;;		___fltol
 14279 ;;		___xxtofl
 14280 ;;		_logf
 14281 ;;		_readRegister
 14282 ;; This function is called by:
 14283 ;;		_AFE_UPDATE
 14284 ;; This function uses a non-reentrant model
 14285 ;;
 14286                           
 14287                           
 14288                           ;psect for function _updateTemperatures
 14289  1527                     _updateTemperatures:	
 14290                           
 14291                           ;BQ76920.c: 269:      unsigned long rts = 0;
 14292                           
 14293                           ;incstack = 0
 14294                           ; Regs used in _updateTemperatures: [wreg+status,2+status,0+pclath+cstack]
 14295  1527  3000               	movlw	0
 14296  1528  0021               	movlb	1	; select bank1
 14297  1529  00EE               	movwf	(updateTemperatures@rts+3)^(0+128)
 14298  152A  3000               	movlw	0
 14299  152B  00ED               	movwf	(updateTemperatures@rts+2)^(0+128)
 14300  152C  3000               	movlw	0
 14301  152D  00EC               	movwf	(updateTemperatures@rts+1)^(0+128)
 14302  152E  3000               	movlw	0
 14303  152F  00EB               	movwf	updateTemperatures@rts^(0+128)
 14304                           
 14305                           ;BQ76920.c: 271:      adcVal = ((readRegister(0x18, 0x2C) & 0x3F) << 8) | readRegister(0
      +                          x18, 0x2D);
 14306  1530  3018               	movlw	24
 14307  1531  00F5               	movwf	readRegister@slaveAddress
 14308  1532  3000               	movlw	0
 14309  1533  00F6               	movwf	readRegister@slaveAddress+1
 14310  1534  302C               	movlw	44
 14311  1535  00F7               	movwf	readRegister@regAddress
 14312  1536  3000               	movlw	0
 14313  1537  00F8               	movwf	readRegister@regAddress+1
 14314  1538  31B4  249E  3195   	fcall	_readRegister
 14315  153B  303F               	movlw	63
 14316  153C  0575               	andwf	?_readRegister,w
 14317  153D  0021               	movlb	1	; select bank1
 14318  153E  00B4               	movwf	??_updateTemperatures^(0+128)
 14319  153F  3000               	movlw	0
 14320  1540  0576               	andwf	?_readRegister+1,w
 14321  1541  00B5               	movwf	(??_updateTemperatures+1)^(0+128)
 14322  1542  0834               	movf	??_updateTemperatures^(0+128),w
 14323  1543  00B5               	movwf	(??_updateTemperatures^(0+128)+1)
 14324  1544  01B4               	clrf	??_updateTemperatures^(0+128)
 14325  1545  3018               	movlw	24
 14326  1546  00F5               	movwf	readRegister@slaveAddress
 14327  1547  3000               	movlw	0
 14328  1548  00F6               	movwf	readRegister@slaveAddress+1
 14329  1549  302D               	movlw	45
 14330  154A  00F7               	movwf	readRegister@regAddress
 14331  154B  3000               	movlw	0
 14332  154C  00F8               	movwf	readRegister@regAddress+1
 14333  154D  31B4  249E  3195   	fcall	_readRegister
 14334  1550  0875               	movf	?_readRegister,w
 14335  1551  0021               	movlb	1	; select bank1
 14336  1552  0434               	iorwf	??_updateTemperatures^(0+128),w
 14337  1553  00E7               	movwf	updateTemperatures@adcVal^(0+128)
 14338  1554  0876               	movf	?_readRegister+1,w
 14339  1555  0435               	iorwf	(??_updateTemperatures+1)^(0+128),w
 14340  1556  00E8               	movwf	(updateTemperatures@adcVal+1)^(0+128)
 14341                           
 14342                           ;BQ76920.c: 272:      vtsx = adcVal * 0.382;
 14343  1557  0867               	movf	updateTemperatures@adcVal^(0+128),w
 14344  1558  00F1               	movwf	___xxtofl@val
 14345  1559  0868               	movf	(updateTemperatures@adcVal+1)^(0+128),w
 14346  155A  00F2               	movwf	___xxtofl@val+1
 14347  155B  0D89               	rlf	9,f
 14348  155C  3B89               	subwfb	9,f
 14349  155D  0989               	comf	9,f
 14350  155E  00F3               	movwf	___xxtofl@val+2
 14351  155F  00F4               	movwf	___xxtofl@val+3
 14352  1560  3001               	movlw	1
 14353  1561  31AA  2248  3195   	fcall	___xxtofl
 14354  1564  0874               	movf	?___xxtofl+3,w
 14355  1565  0020               	movlb	0	; select bank0
 14356  1566  00AD               	movwf	___flmul@a+3
 14357  1567  0873               	movf	?___xxtofl+2,w
 14358  1568  00AC               	movwf	___flmul@a+2
 14359  1569  0872               	movf	?___xxtofl+1,w
 14360  156A  00AB               	movwf	___flmul@a+1
 14361  156B  0871               	movf	?___xxtofl,w
 14362  156C  00AA               	movwf	___flmul@a
 14363  156D  303E               	movlw	62
 14364  156E  00A9               	movwf	___flmul@b+3
 14365  156F  30C3               	movlw	195
 14366  1570  00A8               	movwf	___flmul@b+2
 14367  1571  3095               	movlw	149
 14368  1572  00A7               	movwf	___flmul@b+1
 14369  1573  3081               	movlw	129
 14370  1574  00A6               	movwf	___flmul@b
 14371  1575  3190  2023  3195   	fcall	___flmul
 14372  1578  0020               	movlb	0	; select bank0
 14373  1579  0829               	movf	?___flmul+3,w
 14374  157A  0021               	movlb	1	; select bank1
 14375  157B  00AB               	movwf	(___fltol@f1+3)^(0+128)
 14376  157C  0020               	movlb	0	; select bank0
 14377  157D  0828               	movf	?___flmul+2,w
 14378  157E  0021               	movlb	1	; select bank1
 14379  157F  00AA               	movwf	(___fltol@f1+2)^(0+128)
 14380  1580  0020               	movlb	0	; select bank0
 14381  1581  0827               	movf	?___flmul+1,w
 14382  1582  0021               	movlb	1	; select bank1
 14383  1583  00A9               	movwf	(___fltol@f1+1)^(0+128)
 14384  1584  0020               	movlb	0	; select bank0
 14385  1585  0826               	movf	?___flmul,w
 14386  1586  0021               	movlb	1	; select bank1
 14387  1587  00A8               	movwf	___fltol@f1^(0+128)
 14388  1588  31B6  26B9  3195   	fcall	___fltol
 14389  158B  0021               	movlb	1	; select bank1
 14390  158C  0829               	movf	(?___fltol+1)^(0+128),w
 14391  158D  00EA               	movwf	(updateTemperatures@vtsx+1)^(0+128)
 14392  158E  0828               	movf	?___fltol^(0+128),w
 14393  158F  00E9               	movwf	updateTemperatures@vtsx^(0+128)
 14394                           
 14395                           ;BQ76920.c: 273:      rts = 10000.0 * vtsx / (3300.0 - vtsx);
 14396  1590  0869               	movf	updateTemperatures@vtsx^(0+128),w
 14397  1591  00F1               	movwf	___xxtofl@val
 14398  1592  086A               	movf	(updateTemperatures@vtsx+1)^(0+128),w
 14399  1593  00F2               	movwf	___xxtofl@val+1
 14400  1594  0D89               	rlf	9,f
 14401  1595  3B89               	subwfb	9,f
 14402  1596  0989               	comf	9,f
 14403  1597  00F3               	movwf	___xxtofl@val+2
 14404  1598  00F4               	movwf	___xxtofl@val+3
 14405  1599  3001               	movlw	1
 14406  159A  31AA  2248  3195   	fcall	___xxtofl
 14407  159D  0874               	movf	?___xxtofl+3,w
 14408  159E  0020               	movlb	0	; select bank0
 14409  159F  00AD               	movwf	___flmul@a+3
 14410  15A0  0873               	movf	?___xxtofl+2,w
 14411  15A1  00AC               	movwf	___flmul@a+2
 14412  15A2  0872               	movf	?___xxtofl+1,w
 14413  15A3  00AB               	movwf	___flmul@a+1
 14414  15A4  0871               	movf	?___xxtofl,w
 14415  15A5  00AA               	movwf	___flmul@a
 14416  15A6  3046               	movlw	70
 14417  15A7  00A9               	movwf	___flmul@b+3
 14418  15A8  301C               	movlw	28
 14419  15A9  00A8               	movwf	___flmul@b+2
 14420  15AA  3040               	movlw	64
 14421  15AB  00A7               	movwf	___flmul@b+1
 14422  15AC  3000               	movlw	0
 14423  15AD  00A6               	movwf	___flmul@b
 14424  15AE  3190  2023  3195   	fcall	___flmul
 14425  15B1  0020               	movlb	0	; select bank0
 14426  15B2  0829               	movf	?___flmul+3,w
 14427  15B3  00C7               	movwf	___fldiv@b+3
 14428  15B4  0828               	movf	?___flmul+2,w
 14429  15B5  00C6               	movwf	___fldiv@b+2
 14430  15B6  0827               	movf	?___flmul+1,w
 14431  15B7  00C5               	movwf	___fldiv@b+1
 14432  15B8  0826               	movf	?___flmul,w
 14433  15B9  00C4               	movwf	___fldiv@b
 14434  15BA  3045               	movlw	69
 14435  15BB  0021               	movlb	1	; select bank1
 14436  15BC  00A7               	movwf	(___flsub@b+3)^(0+128)
 14437  15BD  304E               	movlw	78
 14438  15BE  00A6               	movwf	(___flsub@b+2)^(0+128)
 14439  15BF  3040               	movlw	64
 14440  15C0  00A5               	movwf	(___flsub@b+1)^(0+128)
 14441  15C1  3000               	movlw	0
 14442  15C2  00A4               	movwf	___flsub@b^(0+128)
 14443  15C3  0869               	movf	updateTemperatures@vtsx^(0+128),w
 14444  15C4  00F1               	movwf	___xxtofl@val
 14445  15C5  086A               	movf	(updateTemperatures@vtsx+1)^(0+128),w
 14446  15C6  00F2               	movwf	___xxtofl@val+1
 14447  15C7  0D89               	rlf	9,f
 14448  15C8  3B89               	subwfb	9,f
 14449  15C9  0989               	comf	9,f
 14450  15CA  00F3               	movwf	___xxtofl@val+2
 14451  15CB  00F4               	movwf	___xxtofl@val+3
 14452  15CC  3001               	movlw	1
 14453  15CD  31AA  2248  3195   	fcall	___xxtofl
 14454  15D0  0874               	movf	?___xxtofl+3,w
 14455  15D1  0021               	movlb	1	; select bank1
 14456  15D2  00A3               	movwf	(___flsub@a+3)^(0+128)
 14457  15D3  0873               	movf	?___xxtofl+2,w
 14458  15D4  00A2               	movwf	(___flsub@a+2)^(0+128)
 14459  15D5  0872               	movf	?___xxtofl+1,w
 14460  15D6  00A1               	movwf	(___flsub@a+1)^(0+128)
 14461  15D7  0871               	movf	?___xxtofl,w
 14462  15D8  00A0               	movwf	___flsub@a^(0+128)
 14463  15D9  31B4  2469  3195   	fcall	___flsub
 14464  15DC  0021               	movlb	1	; select bank1
 14465  15DD  0823               	movf	(?___flsub+3)^(0+128),w
 14466  15DE  0020               	movlb	0	; select bank0
 14467  15DF  00C3               	movwf	___fldiv@a+3
 14468  15E0  0021               	movlb	1	; select bank1
 14469  15E1  0822               	movf	(?___flsub+2)^(0+128),w
 14470  15E2  0020               	movlb	0	; select bank0
 14471  15E3  00C2               	movwf	___fldiv@a+2
 14472  15E4  0021               	movlb	1	; select bank1
 14473  15E5  0821               	movf	(?___flsub+1)^(0+128),w
 14474  15E6  0020               	movlb	0	; select bank0
 14475  15E7  00C1               	movwf	___fldiv@a+1
 14476  15E8  0021               	movlb	1	; select bank1
 14477  15E9  0820               	movf	?___flsub^(0+128),w
 14478  15EA  0020               	movlb	0	; select bank0
 14479  15EB  00C0               	movwf	___fldiv@a
 14480  15EC  319C  24E2  3195   	fcall	___fldiv
 14481  15EF  0020               	movlb	0	; select bank0
 14482  15F0  0843               	movf	?___fldiv+3,w
 14483  15F1  0021               	movlb	1	; select bank1
 14484  15F2  00AB               	movwf	(___fltol@f1+3)^(0+128)
 14485  15F3  0020               	movlb	0	; select bank0
 14486  15F4  0842               	movf	?___fldiv+2,w
 14487  15F5  0021               	movlb	1	; select bank1
 14488  15F6  00AA               	movwf	(___fltol@f1+2)^(0+128)
 14489  15F7  0020               	movlb	0	; select bank0
 14490  15F8  0841               	movf	?___fldiv+1,w
 14491  15F9  0021               	movlb	1	; select bank1
 14492  15FA  00A9               	movwf	(___fltol@f1+1)^(0+128)
 14493  15FB  0020               	movlb	0	; select bank0
 14494  15FC  0840               	movf	?___fldiv,w
 14495  15FD  0021               	movlb	1	; select bank1
 14496  15FE  00A8               	movwf	___fltol@f1^(0+128)
 14497  15FF  31B6  26B9  3195   	fcall	___fltol
 14498  1602  0021               	movlb	1	; select bank1
 14499  1603  082B               	movf	(?___fltol+3)^(0+128),w
 14500  1604  00EE               	movwf	(updateTemperatures@rts+3)^(0+128)
 14501  1605  082A               	movf	(?___fltol+2)^(0+128),w
 14502  1606  00ED               	movwf	(updateTemperatures@rts+2)^(0+128)
 14503  1607  0829               	movf	(?___fltol+1)^(0+128),w
 14504  1608  00EC               	movwf	(updateTemperatures@rts+1)^(0+128)
 14505  1609  0828               	movf	?___fltol^(0+128),w
 14506  160A  00EB               	movwf	updateTemperatures@rts^(0+128)
 14507                           
 14508                           ;BQ76920.c: 280:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14509  160B  086E               	movf	(updateTemperatures@rts+3)^(0+128),w
 14510  160C  00F4               	movwf	___xxtofl@val+3
 14511  160D  086D               	movf	(updateTemperatures@rts+2)^(0+128),w
 14512  160E  00F3               	movwf	___xxtofl@val+2
 14513  160F  086C               	movf	(updateTemperatures@rts+1)^(0+128),w
 14514  1610  00F2               	movwf	___xxtofl@val+1
 14515  1611  086B               	movf	updateTemperatures@rts^(0+128),w
 14516  1612  00F1               	movwf	___xxtofl@val
 14517  1613  3000               	movlw	0
 14518  1614  31AA  2248  3195   	fcall	___xxtofl
 14519  1617  0874               	movf	?___xxtofl+3,w
 14520  1618  0021               	movlb	1	; select bank1
 14521  1619  00BA               	movwf	(_updateTemperatures$2152+3)^(0+128)
 14522  161A  0873               	movf	?___xxtofl+2,w
 14523  161B  00B9               	movwf	(_updateTemperatures$2152+2)^(0+128)
 14524  161C  0872               	movf	?___xxtofl+1,w
 14525  161D  00B8               	movwf	(_updateTemperatures$2152+1)^(0+128)
 14526  161E  0871               	movf	?___xxtofl,w
 14527  161F  00B7               	movwf	_updateTemperatures$2152^(0+128)
 14528                           
 14529                           ;BQ76920.c: 280:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14530  1620  086E               	movf	(updateTemperatures@rts+3)^(0+128),w
 14531  1621  00F4               	movwf	___xxtofl@val+3
 14532  1622  086D               	movf	(updateTemperatures@rts+2)^(0+128),w
 14533  1623  00F3               	movwf	___xxtofl@val+2
 14534  1624  086C               	movf	(updateTemperatures@rts+1)^(0+128),w
 14535  1625  00F2               	movwf	___xxtofl@val+1
 14536  1626  086B               	movf	updateTemperatures@rts^(0+128),w
 14537  1627  00F1               	movwf	___xxtofl@val
 14538  1628  3000               	movlw	0
 14539  1629  31AA  2248  3195   	fcall	___xxtofl
 14540  162C  0874               	movf	?___xxtofl+3,w
 14541  162D  0021               	movlb	1	; select bank1
 14542  162E  00BE               	movwf	(_updateTemperatures$2153+3)^(0+128)
 14543  162F  0873               	movf	?___xxtofl+2,w
 14544  1630  00BD               	movwf	(_updateTemperatures$2153+2)^(0+128)
 14545  1631  0872               	movf	?___xxtofl+1,w
 14546  1632  00BC               	movwf	(_updateTemperatures$2153+1)^(0+128)
 14547  1633  0871               	movf	?___xxtofl,w
 14548  1634  00BB               	movwf	_updateTemperatures$2153^(0+128)
 14549                           
 14550                           ;BQ76920.c: 280:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14551  1635  086E               	movf	(updateTemperatures@rts+3)^(0+128),w
 14552  1636  00F4               	movwf	___xxtofl@val+3
 14553  1637  086D               	movf	(updateTemperatures@rts+2)^(0+128),w
 14554  1638  00F3               	movwf	___xxtofl@val+2
 14555  1639  086C               	movf	(updateTemperatures@rts+1)^(0+128),w
 14556  163A  00F2               	movwf	___xxtofl@val+1
 14557  163B  086B               	movf	updateTemperatures@rts^(0+128),w
 14558  163C  00F1               	movwf	___xxtofl@val
 14559  163D  3000               	movlw	0
 14560  163E  31AA  2248  3195   	fcall	___xxtofl
 14561  1641  0874               	movf	?___xxtofl+3,w
 14562  1642  0021               	movlb	1	; select bank1
 14563  1643  00C2               	movwf	(_updateTemperatures$2154+3)^(0+128)
 14564  1644  0873               	movf	?___xxtofl+2,w
 14565  1645  00C1               	movwf	(_updateTemperatures$2154+2)^(0+128)
 14566  1646  0872               	movf	?___xxtofl+1,w
 14567  1647  00C0               	movwf	(_updateTemperatures$2154+1)^(0+128)
 14568  1648  0871               	movf	?___xxtofl,w
 14569  1649  00BF               	movwf	_updateTemperatures$2154^(0+128)
 14570                           
 14571                           ;BQ76920.c: 280:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14572  164A  083E               	movf	(_updateTemperatures$2153+3)^(0+128),w
 14573  164B  00AB               	movwf	(logf@x+3)^(0+128)
 14574  164C  083D               	movf	(_updateTemperatures$2153+2)^(0+128),w
 14575  164D  00AA               	movwf	(logf@x+2)^(0+128)
 14576  164E  083C               	movf	(_updateTemperatures$2153+1)^(0+128),w
 14577  164F  00A9               	movwf	(logf@x+1)^(0+128)
 14578  1650  083B               	movf	_updateTemperatures$2153^(0+128),w
 14579  1651  00A8               	movwf	logf@x^(0+128)
 14580  1652  3180  2074  3195   	fcall	_logf
 14581  1655  0021               	movlb	1	; select bank1
 14582  1656  082B               	movf	(?_logf+3)^(0+128),w
 14583  1657  00C6               	movwf	(_updateTemperatures$2155+3)^(0+128)
 14584  1658  082A               	movf	(?_logf+2)^(0+128),w
 14585  1659  00C5               	movwf	(_updateTemperatures$2155+2)^(0+128)
 14586  165A  0829               	movf	(?_logf+1)^(0+128),w
 14587  165B  00C4               	movwf	(_updateTemperatures$2155+1)^(0+128)
 14588  165C  0828               	movf	?_logf^(0+128),w
 14589  165D  00C3               	movwf	_updateTemperatures$2155^(0+128)
 14590                           
 14591                           ;BQ76920.c: 280:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14592  165E  0842               	movf	(_updateTemperatures$2154+3)^(0+128),w
 14593  165F  00AB               	movwf	(logf@x+3)^(0+128)
 14594  1660  0841               	movf	(_updateTemperatures$2154+2)^(0+128),w
 14595  1661  00AA               	movwf	(logf@x+2)^(0+128)
 14596  1662  0840               	movf	(_updateTemperatures$2154+1)^(0+128),w
 14597  1663  00A9               	movwf	(logf@x+1)^(0+128)
 14598  1664  083F               	movf	_updateTemperatures$2154^(0+128),w
 14599  1665  00A8               	movwf	logf@x^(0+128)
 14600  1666  3180  2074  3195   	fcall	_logf
 14601  1669  0021               	movlb	1	; select bank1
 14602  166A  082B               	movf	(?_logf+3)^(0+128),w
 14603  166B  00CA               	movwf	(_updateTemperatures$2156+3)^(0+128)
 14604  166C  082A               	movf	(?_logf+2)^(0+128),w
 14605  166D  00C9               	movwf	(_updateTemperatures$2156+2)^(0+128)
 14606  166E  0829               	movf	(?_logf+1)^(0+128),w
 14607  166F  00C8               	movwf	(_updateTemperatures$2156+1)^(0+128)
 14608  1670  0828               	movf	?_logf^(0+128),w
 14609  1671  00C7               	movwf	_updateTemperatures$2156^(0+128)
 14610                           
 14611                           ;BQ76920.c: 280:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14612  1672  083A               	movf	(_updateTemperatures$2152+3)^(0+128),w
 14613  1673  00AB               	movwf	(logf@x+3)^(0+128)
 14614  1674  0839               	movf	(_updateTemperatures$2152+2)^(0+128),w
 14615  1675  00AA               	movwf	(logf@x+2)^(0+128)
 14616  1676  0838               	movf	(_updateTemperatures$2152+1)^(0+128),w
 14617  1677  00A9               	movwf	(logf@x+1)^(0+128)
 14618  1678  0837               	movf	_updateTemperatures$2152^(0+128),w
 14619  1679  00A8               	movwf	logf@x^(0+128)
 14620  167A  3180  2074  3195   	fcall	_logf
 14621  167D  0021               	movlb	1	; select bank1
 14622  167E  082B               	movf	(?_logf+3)^(0+128),w
 14623  167F  00CE               	movwf	(_updateTemperatures$2157+3)^(0+128)
 14624  1680  082A               	movf	(?_logf+2)^(0+128),w
 14625  1681  00CD               	movwf	(_updateTemperatures$2157+2)^(0+128)
 14626  1682  0829               	movf	(?_logf+1)^(0+128),w
 14627  1683  00CC               	movwf	(_updateTemperatures$2157+1)^(0+128)
 14628  1684  0828               	movf	?_logf^(0+128),w
 14629  1685  00CB               	movwf	_updateTemperatures$2157^(0+128)
 14630                           
 14631                           ;BQ76920.c: 280:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14632  1686  0846               	movf	(_updateTemperatures$2155+3)^(0+128),w
 14633  1687  0020               	movlb	0	; select bank0
 14634  1688  00A9               	movwf	___flmul@b+3
 14635  1689  0021               	movlb	1	; select bank1
 14636  168A  0845               	movf	(_updateTemperatures$2155+2)^(0+128),w
 14637  168B  0020               	movlb	0	; select bank0
 14638  168C  00A8               	movwf	___flmul@b+2
 14639  168D  0021               	movlb	1	; select bank1
 14640  168E  0844               	movf	(_updateTemperatures$2155+1)^(0+128),w
 14641  168F  0020               	movlb	0	; select bank0
 14642  1690  00A7               	movwf	___flmul@b+1
 14643  1691  0021               	movlb	1	; select bank1
 14644  1692  0843               	movf	_updateTemperatures$2155^(0+128),w
 14645  1693  0020               	movlb	0	; select bank0
 14646  1694  00A6               	movwf	___flmul@b
 14647  1695  0021               	movlb	1	; select bank1
 14648  1696  084A               	movf	(_updateTemperatures$2156+3)^(0+128),w
 14649  1697  0020               	movlb	0	; select bank0
 14650  1698  00AD               	movwf	___flmul@a+3
 14651  1699  0021               	movlb	1	; select bank1
 14652  169A  0849               	movf	(_updateTemperatures$2156+2)^(0+128),w
 14653  169B  0020               	movlb	0	; select bank0
 14654  169C  00AC               	movwf	___flmul@a+2
 14655  169D  0021               	movlb	1	; select bank1
 14656  169E  0848               	movf	(_updateTemperatures$2156+1)^(0+128),w
 14657  169F  0020               	movlb	0	; select bank0
 14658  16A0  00AB               	movwf	___flmul@a+1
 14659  16A1  0021               	movlb	1	; select bank1
 14660  16A2  0847               	movf	_updateTemperatures$2156^(0+128),w
 14661  16A3  0020               	movlb	0	; select bank0
 14662  16A4  00AA               	movwf	___flmul@a
 14663  16A5  3190  2023  3195   	fcall	___flmul
 14664  16A8  0020               	movlb	0	; select bank0
 14665  16A9  0829               	movf	?___flmul+3,w
 14666  16AA  0021               	movlb	1	; select bank1
 14667  16AB  00D2               	movwf	(_updateTemperatures$2158+3)^(0+128)
 14668  16AC  0020               	movlb	0	; select bank0
 14669  16AD  0828               	movf	?___flmul+2,w
 14670  16AE  0021               	movlb	1	; select bank1
 14671  16AF  00D1               	movwf	(_updateTemperatures$2158+2)^(0+128)
 14672  16B0  0020               	movlb	0	; select bank0
 14673  16B1  0827               	movf	?___flmul+1,w
 14674  16B2  0021               	movlb	1	; select bank1
 14675  16B3  00D0               	movwf	(_updateTemperatures$2158+1)^(0+128)
 14676  16B4  0020               	movlb	0	; select bank0
 14677  16B5  0826               	movf	?___flmul,w
 14678  16B6  0021               	movlb	1	; select bank1
 14679  16B7  00CF               	movwf	_updateTemperatures$2158^(0+128)
 14680                           
 14681                           ;BQ76920.c: 280:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14682  16B8  084E               	movf	(_updateTemperatures$2157+3)^(0+128),w
 14683  16B9  0020               	movlb	0	; select bank0
 14684  16BA  00A9               	movwf	___flmul@b+3
 14685  16BB  0021               	movlb	1	; select bank1
 14686  16BC  084D               	movf	(_updateTemperatures$2157+2)^(0+128),w
 14687  16BD  0020               	movlb	0	; select bank0
 14688  16BE  00A8               	movwf	___flmul@b+2
 14689  16BF  0021               	movlb	1	; select bank1
 14690  16C0  084C               	movf	(_updateTemperatures$2157+1)^(0+128),w
 14691  16C1  0020               	movlb	0	; select bank0
 14692  16C2  00A7               	movwf	___flmul@b+1
 14693  16C3  0021               	movlb	1	; select bank1
 14694  16C4  084B               	movf	_updateTemperatures$2157^(0+128),w
 14695  16C5  0020               	movlb	0	; select bank0
 14696  16C6  00A6               	movwf	___flmul@b
 14697  16C7  0021               	movlb	1	; select bank1
 14698  16C8  0852               	movf	(_updateTemperatures$2158+3)^(0+128),w
 14699  16C9  0020               	movlb	0	; select bank0
 14700  16CA  00AD               	movwf	___flmul@a+3
 14701  16CB  0021               	movlb	1	; select bank1
 14702  16CC  0851               	movf	(_updateTemperatures$2158+2)^(0+128),w
 14703  16CD  0020               	movlb	0	; select bank0
 14704  16CE  00AC               	movwf	___flmul@a+2
 14705  16CF  0021               	movlb	1	; select bank1
 14706  16D0  0850               	movf	(_updateTemperatures$2158+1)^(0+128),w
 14707  16D1  0020               	movlb	0	; select bank0
 14708  16D2  00AB               	movwf	___flmul@a+1
 14709  16D3  0021               	movlb	1	; select bank1
 14710  16D4  084F               	movf	_updateTemperatures$2158^(0+128),w
 14711  16D5  0020               	movlb	0	; select bank0
 14712  16D6  00AA               	movwf	___flmul@a
 14713  16D7  3190  2023  3195   	fcall	___flmul
 14714  16DA  0020               	movlb	0	; select bank0
 14715  16DB  0829               	movf	?___flmul+3,w
 14716  16DC  0021               	movlb	1	; select bank1
 14717  16DD  00D6               	movwf	(_updateTemperatures$2159+3)^(0+128)
 14718  16DE  0020               	movlb	0	; select bank0
 14719  16DF  0828               	movf	?___flmul+2,w
 14720  16E0  0021               	movlb	1	; select bank1
 14721  16E1  00D5               	movwf	(_updateTemperatures$2159+2)^(0+128)
 14722  16E2  0020               	movlb	0	; select bank0
 14723  16E3  0827               	movf	?___flmul+1,w
 14724  16E4  0021               	movlb	1	; select bank1
 14725  16E5  00D4               	movwf	(_updateTemperatures$2159+1)^(0+128)
 14726  16E6  0020               	movlb	0	; select bank0
 14727  16E7  0826               	movf	?___flmul,w
 14728  16E8  0021               	movlb	1	; select bank1
 14729  16E9  00D3               	movwf	_updateTemperatures$2159^(0+128)
 14730                           
 14731                           ;BQ76920.c: 280:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14732  16EA  086E               	movf	(updateTemperatures@rts+3)^(0+128),w
 14733  16EB  00F4               	movwf	___xxtofl@val+3
 14734  16EC  086D               	movf	(updateTemperatures@rts+2)^(0+128),w
 14735  16ED  00F3               	movwf	___xxtofl@val+2
 14736  16EE  086C               	movf	(updateTemperatures@rts+1)^(0+128),w
 14737  16EF  00F2               	movwf	___xxtofl@val+1
 14738  16F0  086B               	movf	updateTemperatures@rts^(0+128),w
 14739  16F1  00F1               	movwf	___xxtofl@val
 14740  16F2  3000               	movlw	0
 14741  16F3  31AA  2248  3195   	fcall	___xxtofl
 14742  16F6  0874               	movf	?___xxtofl+3,w
 14743  16F7  0021               	movlb	1	; select bank1
 14744  16F8  00DA               	movwf	(_updateTemperatures$2160+3)^(0+128)
 14745  16F9  0873               	movf	?___xxtofl+2,w
 14746  16FA  00D9               	movwf	(_updateTemperatures$2160+2)^(0+128)
 14747  16FB  0872               	movf	?___xxtofl+1,w
 14748  16FC  00D8               	movwf	(_updateTemperatures$2160+1)^(0+128)
 14749  16FD  0871               	movf	?___xxtofl,w
 14750  16FE  00D7               	movwf	_updateTemperatures$2160^(0+128)
 14751                           
 14752                           ;BQ76920.c: 280:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14753  16FF  085A               	movf	(_updateTemperatures$2160+3)^(0+128),w
 14754  1700  00AB               	movwf	(logf@x+3)^(0+128)
 14755  1701  0859               	movf	(_updateTemperatures$2160+2)^(0+128),w
 14756  1702  00AA               	movwf	(logf@x+2)^(0+128)
 14757  1703  0858               	movf	(_updateTemperatures$2160+1)^(0+128),w
 14758  1704  00A9               	movwf	(logf@x+1)^(0+128)
 14759  1705  0857               	movf	_updateTemperatures$2160^(0+128),w
 14760  1706  00A8               	movwf	logf@x^(0+128)
 14761  1707  3180  2074  3195   	fcall	_logf
 14762  170A  0021               	movlb	1	; select bank1
 14763  170B  082B               	movf	(?_logf+3)^(0+128),w
 14764  170C  00DE               	movwf	(_updateTemperatures$2161+3)^(0+128)
 14765  170D  082A               	movf	(?_logf+2)^(0+128),w
 14766  170E  00DD               	movwf	(_updateTemperatures$2161+2)^(0+128)
 14767  170F  0829               	movf	(?_logf+1)^(0+128),w
 14768  1710  00DC               	movwf	(_updateTemperatures$2161+1)^(0+128)
 14769  1711  0828               	movf	?_logf^(0+128),w
 14770  1712  00DB               	movwf	_updateTemperatures$2161^(0+128)
 14771                           
 14772                           ;BQ76920.c: 280:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14773  1713  30BC               	movlw	188
 14774  1714  0020               	movlb	0	; select bank0
 14775  1715  00DD               	movwf	___fladd@b+3
 14776  1716  308E               	movlw	142
 14777  1717  00DC               	movwf	___fladd@b+2
 14778  1718  30C5               	movlw	197
 14779  1719  00DB               	movwf	___fladd@b+1
 14780  171A  3072               	movlw	114
 14781  171B  00DA               	movwf	___fladd@b
 14782  171C  303B               	movlw	59
 14783  171D  00A9               	movwf	___flmul@b+3
 14784  171E  304D               	movlw	77
 14785  171F  00A8               	movwf	___flmul@b+2
 14786  1720  3098               	movlw	152
 14787  1721  00A7               	movwf	___flmul@b+1
 14788  1722  3025               	movlw	37
 14789  1723  00A6               	movwf	___flmul@b
 14790  1724  0021               	movlb	1	; select bank1
 14791  1725  085E               	movf	(_updateTemperatures$2161+3)^(0+128),w
 14792  1726  0020               	movlb	0	; select bank0
 14793  1727  00AD               	movwf	___flmul@a+3
 14794  1728  0021               	movlb	1	; select bank1
 14795  1729  085D               	movf	(_updateTemperatures$2161+2)^(0+128),w
 14796  172A  0020               	movlb	0	; select bank0
 14797  172B  00AC               	movwf	___flmul@a+2
 14798  172C  0021               	movlb	1	; select bank1
 14799  172D  085C               	movf	(_updateTemperatures$2161+1)^(0+128),w
 14800  172E  0020               	movlb	0	; select bank0
 14801  172F  00AB               	movwf	___flmul@a+1
 14802  1730  0021               	movlb	1	; select bank1
 14803  1731  085B               	movf	_updateTemperatures$2161^(0+128),w
 14804  1732  0020               	movlb	0	; select bank0
 14805  1733  00AA               	movwf	___flmul@a
 14806  1734  3190  2023  3195   	fcall	___flmul
 14807  1737  0020               	movlb	0	; select bank0
 14808  1738  0829               	movf	?___flmul+3,w
 14809  1739  00E1               	movwf	___fladd@a+3
 14810  173A  0828               	movf	?___flmul+2,w
 14811  173B  00E0               	movwf	___fladd@a+2
 14812  173C  0827               	movf	?___flmul+1,w
 14813  173D  00DF               	movwf	___fladd@a+1
 14814  173E  0826               	movf	?___flmul,w
 14815  173F  00DE               	movwf	___fladd@a
 14816  1740  3185  25FE  3195   	fcall	___fladd
 14817  1743  0020               	movlb	0	; select bank0
 14818  1744  085D               	movf	?___fladd+3,w
 14819  1745  0021               	movlb	1	; select bank1
 14820  1746  00E2               	movwf	(_updateTemperatures$2162+3)^(0+128)
 14821  1747  0020               	movlb	0	; select bank0
 14822  1748  085C               	movf	?___fladd+2,w
 14823  1749  0021               	movlb	1	; select bank1
 14824  174A  00E1               	movwf	(_updateTemperatures$2162+2)^(0+128)
 14825  174B  0020               	movlb	0	; select bank0
 14826  174C  085B               	movf	?___fladd+1,w
 14827  174D  0021               	movlb	1	; select bank1
 14828  174E  00E0               	movwf	(_updateTemperatures$2162+1)^(0+128)
 14829  174F  0020               	movlb	0	; select bank0
 14830  1750  085A               	movf	?___fladd,w
 14831  1751  0021               	movlb	1	; select bank1
 14832  1752  00DF               	movwf	_updateTemperatures$2162^(0+128)
 14833                           
 14834                           ;BQ76920.c: 280:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14835  1753  30B7               	movlw	183
 14836  1754  0020               	movlb	0	; select bank0
 14837  1755  00A9               	movwf	___flmul@b+3
 14838  1756  302E               	movlw	46
 14839  1757  00A8               	movwf	___flmul@b+2
 14840  1758  302F               	movlw	47
 14841  1759  00A7               	movwf	___flmul@b+1
 14842  175A  3045               	movlw	69
 14843  175B  00A6               	movwf	___flmul@b
 14844  175C  0021               	movlb	1	; select bank1
 14845  175D  0856               	movf	(_updateTemperatures$2159+3)^(0+128),w
 14846  175E  0020               	movlb	0	; select bank0
 14847  175F  00AD               	movwf	___flmul@a+3
 14848  1760  0021               	movlb	1	; select bank1
 14849  1761  0855               	movf	(_updateTemperatures$2159+2)^(0+128),w
 14850  1762  0020               	movlb	0	; select bank0
 14851  1763  00AC               	movwf	___flmul@a+2
 14852  1764  0021               	movlb	1	; select bank1
 14853  1765  0854               	movf	(_updateTemperatures$2159+1)^(0+128),w
 14854  1766  0020               	movlb	0	; select bank0
 14855  1767  00AB               	movwf	___flmul@a+1
 14856  1768  0021               	movlb	1	; select bank1
 14857  1769  0853               	movf	_updateTemperatures$2159^(0+128),w
 14858  176A  0020               	movlb	0	; select bank0
 14859  176B  00AA               	movwf	___flmul@a
 14860  176C  3190  2023  3195   	fcall	___flmul
 14861  176F  0020               	movlb	0	; select bank0
 14862  1770  0829               	movf	?___flmul+3,w
 14863  1771  00DD               	movwf	___fladd@b+3
 14864  1772  0828               	movf	?___flmul+2,w
 14865  1773  00DC               	movwf	___fladd@b+2
 14866  1774  0827               	movf	?___flmul+1,w
 14867  1775  00DB               	movwf	___fladd@b+1
 14868  1776  0826               	movf	?___flmul,w
 14869  1777  00DA               	movwf	___fladd@b
 14870  1778  0021               	movlb	1	; select bank1
 14871  1779  0862               	movf	(_updateTemperatures$2162+3)^(0+128),w
 14872  177A  0020               	movlb	0	; select bank0
 14873  177B  00E1               	movwf	___fladd@a+3
 14874  177C  0021               	movlb	1	; select bank1
 14875  177D  0861               	movf	(_updateTemperatures$2162+2)^(0+128),w
 14876  177E  0020               	movlb	0	; select bank0
 14877  177F  00E0               	movwf	___fladd@a+2
 14878  1780  0021               	movlb	1	; select bank1
 14879  1781  0860               	movf	(_updateTemperatures$2162+1)^(0+128),w
 14880  1782  0020               	movlb	0	; select bank0
 14881  1783  00DF               	movwf	___fladd@a+1
 14882  1784  0021               	movlb	1	; select bank1
 14883  1785  085F               	movf	_updateTemperatures$2162^(0+128),w
 14884  1786  0020               	movlb	0	; select bank0
 14885  1787  00DE               	movwf	___fladd@a
 14886  1788  3185  25FE  3195   	fcall	___fladd
 14887  178B  0020               	movlb	0	; select bank0
 14888  178C  085D               	movf	?___fladd+3,w
 14889  178D  00C3               	movwf	___fldiv@a+3
 14890  178E  085C               	movf	?___fladd+2,w
 14891  178F  00C2               	movwf	___fldiv@a+2
 14892  1790  085B               	movf	?___fladd+1,w
 14893  1791  00C1               	movwf	___fldiv@a+1
 14894  1792  085A               	movf	?___fladd,w
 14895  1793  00C0               	movwf	___fldiv@a
 14896  1794  303F               	movlw	63
 14897  1795  00C7               	movwf	___fldiv@b+3
 14898  1796  3080               	movlw	128
 14899  1797  00C6               	movwf	___fldiv@b+2
 14900  1798  3000               	movlw	0
 14901  1799  00C5               	movwf	___fldiv@b+1
 14902  179A  3000               	movlw	0
 14903  179B  00C4               	movwf	___fldiv@b
 14904  179C  319C  24E2  3195   	fcall	___fldiv
 14905  179F  0020               	movlb	0	; select bank0
 14906  17A0  0843               	movf	?___fldiv+3,w
 14907  17A1  0021               	movlb	1	; select bank1
 14908  17A2  00E6               	movwf	(updateTemperatures@tmp+3)^(0+128)
 14909  17A3  0020               	movlb	0	; select bank0
 14910  17A4  0842               	movf	?___fldiv+2,w
 14911  17A5  0021               	movlb	1	; select bank1
 14912  17A6  00E5               	movwf	(updateTemperatures@tmp+2)^(0+128)
 14913  17A7  0020               	movlb	0	; select bank0
 14914  17A8  0841               	movf	?___fldiv+1,w
 14915  17A9  0021               	movlb	1	; select bank1
 14916  17AA  00E4               	movwf	(updateTemperatures@tmp+1)^(0+128)
 14917  17AB  0020               	movlb	0	; select bank0
 14918  17AC  0840               	movf	?___fldiv,w
 14919  17AD  0021               	movlb	1	; select bank1
 14920  17AE  00E3               	movwf	updateTemperatures@tmp^(0+128)
 14921                           
 14922                           ;BQ76920.c: 282:      temperatureThermistor = (tmp - 273.15)*100;
 14923  17AF  0866               	movf	(updateTemperatures@tmp+3)^(0+128),w
 14924  17B0  0020               	movlb	0	; select bank0
 14925  17B1  00E1               	movwf	___fladd@a+3
 14926  17B2  0021               	movlb	1	; select bank1
 14927  17B3  0865               	movf	(updateTemperatures@tmp+2)^(0+128),w
 14928  17B4  0020               	movlb	0	; select bank0
 14929  17B5  00E0               	movwf	___fladd@a+2
 14930  17B6  0021               	movlb	1	; select bank1
 14931  17B7  0864               	movf	(updateTemperatures@tmp+1)^(0+128),w
 14932  17B8  0020               	movlb	0	; select bank0
 14933  17B9  00DF               	movwf	___fladd@a+1
 14934  17BA  0021               	movlb	1	; select bank1
 14935  17BB  0863               	movf	updateTemperatures@tmp^(0+128),w
 14936  17BC  0020               	movlb	0	; select bank0
 14937  17BD  00DE               	movwf	___fladd@a
 14938  17BE  30C3               	movlw	195
 14939  17BF  00DD               	movwf	___fladd@b+3
 14940  17C0  3088               	movlw	136
 14941  17C1  00DC               	movwf	___fladd@b+2
 14942  17C2  3093               	movlw	147
 14943  17C3  00DB               	movwf	___fladd@b+1
 14944  17C4  3033               	movlw	51
 14945  17C5  00DA               	movwf	___fladd@b
 14946  17C6  3185  25FE  3195   	fcall	___fladd
 14947  17C9  0020               	movlb	0	; select bank0
 14948  17CA  085D               	movf	?___fladd+3,w
 14949  17CB  00AD               	movwf	___flmul@a+3
 14950  17CC  085C               	movf	?___fladd+2,w
 14951  17CD  00AC               	movwf	___flmul@a+2
 14952  17CE  085B               	movf	?___fladd+1,w
 14953  17CF  00AB               	movwf	___flmul@a+1
 14954  17D0  085A               	movf	?___fladd,w
 14955  17D1  00AA               	movwf	___flmul@a
 14956  17D2  3042               	movlw	66
 14957  17D3  00A9               	movwf	___flmul@b+3
 14958  17D4  30C8               	movlw	200
 14959  17D5  00A8               	movwf	___flmul@b+2
 14960  17D6  3000               	movlw	0
 14961  17D7  00A7               	movwf	___flmul@b+1
 14962  17D8  3000               	movlw	0
 14963  17D9  00A6               	movwf	___flmul@b
 14964  17DA  3190  2023  3195   	fcall	___flmul
 14965  17DD  0020               	movlb	0	; select bank0
 14966  17DE  0829               	movf	?___flmul+3,w
 14967  17DF  0021               	movlb	1	; select bank1
 14968  17E0  00AB               	movwf	(___fltol@f1+3)^(0+128)
 14969  17E1  0020               	movlb	0	; select bank0
 14970  17E2  0828               	movf	?___flmul+2,w
 14971  17E3  0021               	movlb	1	; select bank1
 14972  17E4  00AA               	movwf	(___fltol@f1+2)^(0+128)
 14973  17E5  0020               	movlb	0	; select bank0
 14974  17E6  0827               	movf	?___flmul+1,w
 14975  17E7  0021               	movlb	1	; select bank1
 14976  17E8  00A9               	movwf	(___fltol@f1+1)^(0+128)
 14977  17E9  0020               	movlb	0	; select bank0
 14978  17EA  0826               	movf	?___flmul,w
 14979  17EB  0021               	movlb	1	; select bank1
 14980  17EC  00A8               	movwf	___fltol@f1^(0+128)
 14981  17ED  31B6  26B9         	fcall	___fltol
 14982  17EF  0021               	movlb	1	; select bank1
 14983  17F0  082B               	movf	(?___fltol+3)^(0+128),w
 14984  17F1  0023               	movlb	3	; select bank3
 14985  17F2  00BF               	movwf	(_temperatureThermistor+3)^(0+384)
 14986  17F3  0021               	movlb	1	; select bank1
 14987  17F4  082A               	movf	(?___fltol+2)^(0+128),w
 14988  17F5  0023               	movlb	3	; select bank3
 14989  17F6  00BE               	movwf	(_temperatureThermistor+2)^(0+384)
 14990  17F7  0021               	movlb	1	; select bank1
 14991  17F8  0829               	movf	(?___fltol+1)^(0+128),w
 14992  17F9  0023               	movlb	3	; select bank3
 14993  17FA  00BD               	movwf	(_temperatureThermistor+1)^(0+384)
 14994  17FB  0021               	movlb	1	; select bank1
 14995  17FC  0828               	movf	?___fltol^(0+128),w
 14996  17FD  0023               	movlb	3	; select bank3
 14997  17FE  00BC               	movwf	_temperatureThermistor^(0+384)
 14998  17FF  0008               	return
 14999  1800                     __end_of_updateTemperatures:	
 15000                           
 15001                           	psect	text50
 15002  0074                     __ptext50:	
 15003 ;; *************** function _logf *****************
 15004 ;; Defined at:
 15005 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\logf.c"
 15006 ;; Parameters:    Size  Location     Type
 15007 ;;  x               4    8[BANK1 ] float 
 15008 ;; Auto vars:     Size  Location     Type
 15009 ;;  ix              4   62[BANK2 ] unsigned long 
 15010 ;;  f               4   58[BANK2 ] float 
 15011 ;;  u               4   54[BANK2 ] struct .
 15012 ;;  w               4   46[BANK2 ] float 
 15013 ;;  z               4   42[BANK2 ] float 
 15014 ;;  s               4   38[BANK2 ] float 
 15015 ;;  dk              4   34[BANK2 ] float 
 15016 ;;  hfsq            4   30[BANK2 ] float 
 15017 ;;  t2              4    8[BANK2 ] float 
 15018 ;;  t1              4    4[BANK2 ] float 
 15019 ;;  R               4    0[BANK2 ] float 
 15020 ;;  k               2   28[BANK2 ] int 
 15021 ;; Return value:  Size  Location     Type
 15022 ;;                  4    8[BANK1 ] float 
 15023 ;; Registers used:
 15024 ;;		wreg, status,2, status,0, pclath, cstack
 15025 ;; Tracked objects:
 15026 ;;		On entry : 0/0
 15027 ;;		On exit  : 0/0
 15028 ;;		Unchanged: 0/0
 15029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15030 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15031 ;;      Locals:         0       0       0      66       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15032 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15033 ;;      Totals:         0       0      12      66       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15034 ;;Total ram usage:       78 bytes
 15035 ;; Hardware stack levels used:    1
 15036 ;; Hardware stack levels required when called:    3
 15037 ;; This function calls:
 15038 ;;		___fladd
 15039 ;;		___fldiv
 15040 ;;		___flmul
 15041 ;;		___flsub
 15042 ;;		___xxtofl
 15043 ;; This function is called by:
 15044 ;;		_updateTemperatures
 15045 ;; This function uses a non-reentrant model
 15046 ;;
 15047                           
 15048                           
 15049                           ;psect for function _logf
 15050  0074                     _logf:	
 15051                           
 15052                           ;incstack = 0
 15053                           ; Regs used in _logf: [wreg+status,2+status,0+pclath+cstack]
 15054  0074  0023               	movlb	3	; select bank3
 15055  0075  0837               	movf	(logf@F469+3)^(0+384),w
 15056  0076  0022               	movlb	2	; select bank2
 15057  0077  00D9               	movwf	(logf@u+3)^(0+256)
 15058  0078  0023               	movlb	3	; select bank3
 15059  0079  0836               	movf	(logf@F469+2)^(0+384),w
 15060  007A  0022               	movlb	2	; select bank2
 15061  007B  00D8               	movwf	(logf@u+2)^(0+256)
 15062  007C  0023               	movlb	3	; select bank3
 15063  007D  0835               	movf	(logf@F469+1)^(0+384),w
 15064  007E  0022               	movlb	2	; select bank2
 15065  007F  00D7               	movwf	(logf@u+1)^(0+256)
 15066  0080  0023               	movlb	3	; select bank3
 15067  0081  0834               	movf	logf@F469^(0+384),w
 15068  0082  0022               	movlb	2	; select bank2
 15069  0083  00D6               	movwf	logf@u^(0+256)
 15070  0084  0021               	movlb	1	; select bank1
 15071  0085  082B               	movf	(logf@x+3)^(0+128),w
 15072  0086  0022               	movlb	2	; select bank2
 15073  0087  00D9               	movwf	(logf@u+3)^(0+256)
 15074  0088  0021               	movlb	1	; select bank1
 15075  0089  082A               	movf	(logf@x+2)^(0+128),w
 15076  008A  0022               	movlb	2	; select bank2
 15077  008B  00D8               	movwf	(logf@u+2)^(0+256)
 15078  008C  0021               	movlb	1	; select bank1
 15079  008D  0829               	movf	(logf@x+1)^(0+128),w
 15080  008E  0022               	movlb	2	; select bank2
 15081  008F  00D7               	movwf	(logf@u+1)^(0+256)
 15082  0090  0021               	movlb	1	; select bank1
 15083  0091  0828               	movf	logf@x^(0+128),w
 15084  0092  0022               	movlb	2	; select bank2
 15085  0093  00D6               	movwf	logf@u^(0+256)
 15086  0094  0859               	movf	(logf@u+3)^(0+256),w
 15087  0095  00E1               	movwf	(logf@ix+3)^(0+256)
 15088  0096  0858               	movf	(logf@u+2)^(0+256),w
 15089  0097  00E0               	movwf	(logf@ix+2)^(0+256)
 15090  0098  0857               	movf	(logf@u+1)^(0+256),w
 15091  0099  00DF               	movwf	(logf@ix+1)^(0+256)
 15092  009A  0856               	movf	logf@u^(0+256),w
 15093  009B  00DE               	movwf	logf@ix^(0+256)
 15094  009C  01BC               	clrf	logf@k^(0+256)
 15095  009D  01BD               	clrf	(logf@k+1)^(0+256)
 15096  009E  0861               	movf	(logf@ix+3)^(0+256),w
 15097  009F  1D03               	btfss	3,2
 15098  00A0  28A5               	goto	l5663
 15099  00A1  3080               	movlw	128
 15100  00A2  0260               	subwf	(logf@ix+2)^(0+256),w
 15101  00A3  1C03               	btfss	3,0
 15102  00A4  28C1               	goto	l5665
 15103  00A5                     l5663:	
 15104  00A5  085E               	movf	logf@ix^(0+256),w
 15105  00A6  0021               	movlb	1	; select bank1
 15106  00A7  00AC               	movwf	??_logf^(0+128)
 15107  00A8  0022               	movlb	2	; select bank2
 15108  00A9  085F               	movf	(logf@ix+1)^(0+256),w
 15109  00AA  0021               	movlb	1	; select bank1
 15110  00AB  00AD               	movwf	(??_logf^(0+128)+1)
 15111  00AC  0022               	movlb	2	; select bank2
 15112  00AD  0860               	movf	(logf@ix+2)^(0+256),w
 15113  00AE  0021               	movlb	1	; select bank1
 15114  00AF  00AE               	movwf	(??_logf^(0+128)+2)
 15115  00B0  0022               	movlb	2	; select bank2
 15116  00B1  0861               	movf	(logf@ix+3)^(0+256),w
 15117  00B2  0021               	movlb	1	; select bank1
 15118  00B3  00AF               	movwf	(??_logf^(0+128)+3)
 15119  00B4  301F               	movlw	31
 15120  00B5                     u6995:	
 15121  00B5  36AF               	lsrf	(??_logf^(0+128)+3),f
 15122  00B6  0CAE               	rrf	(??_logf^(0+128)+2),f
 15123  00B7  0CAD               	rrf	(??_logf^(0+128)+1),f
 15124  00B8  0CAC               	rrf	??_logf^(0+128),f
 15125  00B9  0B89               	decfsz	9,f
 15126  00BA  28B5               	goto	u6995
 15127  00BB  082F               	movf	(??_logf+3)^(0+128),w
 15128  00BC  042E               	iorwf	(??_logf+2)^(0+128),w
 15129  00BD  042D               	iorwf	(??_logf+1)^(0+128),w
 15130  00BE  042C               	iorwf	??_logf^(0+128),w
 15131  00BF  1903               	skipnz
 15132  00C0  29CA               	goto	l5685
 15133  00C1                     l5665:	
 15134  00C1  0022               	movlb	2	; select bank2
 15135  00C2  085E               	movf	logf@ix^(0+256),w
 15136  00C3  0021               	movlb	1	; select bank1
 15137  00C4  00AC               	movwf	??_logf^(0+128)
 15138  00C5  0022               	movlb	2	; select bank2
 15139  00C6  085F               	movf	(logf@ix+1)^(0+256),w
 15140  00C7  0021               	movlb	1	; select bank1
 15141  00C8  00AD               	movwf	(??_logf^(0+128)+1)
 15142  00C9  0022               	movlb	2	; select bank2
 15143  00CA  0860               	movf	(logf@ix+2)^(0+256),w
 15144  00CB  0021               	movlb	1	; select bank1
 15145  00CC  00AE               	movwf	(??_logf^(0+128)+2)
 15146  00CD  0022               	movlb	2	; select bank2
 15147  00CE  0861               	movf	(logf@ix+3)^(0+256),w
 15148  00CF  0021               	movlb	1	; select bank1
 15149  00D0  00AF               	movwf	(??_logf^(0+128)+3)
 15150  00D1  3001               	movlw	1
 15151  00D2                     u7015:	
 15152  00D2  35AC               	lslf	??_logf^(0+128),f
 15153  00D3  0DAD               	rlf	(??_logf^(0+128)+1),f
 15154  00D4  0DAE               	rlf	(??_logf^(0+128)+2),f
 15155  00D5  0DAF               	rlf	(??_logf^(0+128)+3),f
 15156  00D6  0B89               	decfsz	9,f
 15157  00D7  28D2               	goto	u7015
 15158  00D8  082F               	movf	(??_logf+3)^(0+128),w
 15159  00D9  042E               	iorwf	(??_logf+2)^(0+128),w
 15160  00DA  042D               	iorwf	(??_logf+1)^(0+128),w
 15161  00DB  042C               	iorwf	??_logf^(0+128),w
 15162  00DC  1D03               	skipz
 15163  00DD  2924               	goto	l5671
 15164  00DE  082B               	movf	(logf@x+3)^(0+128),w
 15165  00DF  0020               	movlb	0	; select bank0
 15166  00E0  00A9               	movwf	___flmul@b+3
 15167  00E1  0021               	movlb	1	; select bank1
 15168  00E2  082A               	movf	(logf@x+2)^(0+128),w
 15169  00E3  0020               	movlb	0	; select bank0
 15170  00E4  00A8               	movwf	___flmul@b+2
 15171  00E5  0021               	movlb	1	; select bank1
 15172  00E6  0829               	movf	(logf@x+1)^(0+128),w
 15173  00E7  0020               	movlb	0	; select bank0
 15174  00E8  00A7               	movwf	___flmul@b+1
 15175  00E9  0021               	movlb	1	; select bank1
 15176  00EA  0828               	movf	logf@x^(0+128),w
 15177  00EB  0020               	movlb	0	; select bank0
 15178  00EC  00A6               	movwf	___flmul@b
 15179  00ED  0021               	movlb	1	; select bank1
 15180  00EE  082B               	movf	(logf@x+3)^(0+128),w
 15181  00EF  0020               	movlb	0	; select bank0
 15182  00F0  00AD               	movwf	___flmul@a+3
 15183  00F1  0021               	movlb	1	; select bank1
 15184  00F2  082A               	movf	(logf@x+2)^(0+128),w
 15185  00F3  0020               	movlb	0	; select bank0
 15186  00F4  00AC               	movwf	___flmul@a+2
 15187  00F5  0021               	movlb	1	; select bank1
 15188  00F6  0829               	movf	(logf@x+1)^(0+128),w
 15189  00F7  0020               	movlb	0	; select bank0
 15190  00F8  00AB               	movwf	___flmul@a+1
 15191  00F9  0021               	movlb	1	; select bank1
 15192  00FA  0828               	movf	logf@x^(0+128),w
 15193  00FB  0020               	movlb	0	; select bank0
 15194  00FC  00AA               	movwf	___flmul@a
 15195  00FD  3190  2023  3180   	fcall	___flmul
 15196  0100  0020               	movlb	0	; select bank0
 15197  0101  0829               	movf	?___flmul+3,w
 15198  0102  00C3               	movwf	___fldiv@a+3
 15199  0103  0828               	movf	?___flmul+2,w
 15200  0104  00C2               	movwf	___fldiv@a+2
 15201  0105  0827               	movf	?___flmul+1,w
 15202  0106  00C1               	movwf	___fldiv@a+1
 15203  0107  0826               	movf	?___flmul,w
 15204  0108  00C0               	movwf	___fldiv@a
 15205  0109  30BF               	movlw	191
 15206  010A  00C7               	movwf	___fldiv@b+3
 15207  010B  3080               	movlw	128
 15208  010C  00C6               	movwf	___fldiv@b+2
 15209  010D  3000               	movlw	0
 15210  010E  00C5               	movwf	___fldiv@b+1
 15211  010F  3000               	movlw	0
 15212  0110  00C4               	movwf	___fldiv@b
 15213  0111  319C  24E2         	fcall	___fldiv
 15214  0113  0020               	movlb	0	; select bank0
 15215  0114  0843               	movf	?___fldiv+3,w
 15216  0115  0021               	movlb	1	; select bank1
 15217  0116  00AB               	movwf	(?_logf+3)^(0+128)
 15218  0117  0020               	movlb	0	; select bank0
 15219  0118  0842               	movf	?___fldiv+2,w
 15220  0119  0021               	movlb	1	; select bank1
 15221  011A  00AA               	movwf	(?_logf+2)^(0+128)
 15222  011B  0020               	movlb	0	; select bank0
 15223  011C  0841               	movf	?___fldiv+1,w
 15224  011D  0021               	movlb	1	; select bank1
 15225  011E  00A9               	movwf	(?_logf+1)^(0+128)
 15226  011F  0020               	movlb	0	; select bank0
 15227  0120  0840               	movf	?___fldiv,w
 15228  0121  0021               	movlb	1	; select bank1
 15229  0122  00A8               	movwf	?_logf^(0+128)
 15230  0123  0008               	return
 15231  0124                     l5671:	
 15232  0124  0022               	movlb	2	; select bank2
 15233  0125  085E               	movf	logf@ix^(0+256),w
 15234  0126  0021               	movlb	1	; select bank1
 15235  0127  00AC               	movwf	??_logf^(0+128)
 15236  0128  0022               	movlb	2	; select bank2
 15237  0129  085F               	movf	(logf@ix+1)^(0+256),w
 15238  012A  0021               	movlb	1	; select bank1
 15239  012B  00AD               	movwf	(??_logf^(0+128)+1)
 15240  012C  0022               	movlb	2	; select bank2
 15241  012D  0860               	movf	(logf@ix+2)^(0+256),w
 15242  012E  0021               	movlb	1	; select bank1
 15243  012F  00AE               	movwf	(??_logf^(0+128)+2)
 15244  0130  0022               	movlb	2	; select bank2
 15245  0131  0861               	movf	(logf@ix+3)^(0+256),w
 15246  0132  0021               	movlb	1	; select bank1
 15247  0133  00AF               	movwf	(??_logf^(0+128)+3)
 15248  0134  301F               	movlw	31
 15249  0135                     u7035:	
 15250  0135  36AF               	lsrf	(??_logf^(0+128)+3),f
 15251  0136  0CAE               	rrf	(??_logf^(0+128)+2),f
 15252  0137  0CAD               	rrf	(??_logf^(0+128)+1),f
 15253  0138  0CAC               	rrf	??_logf^(0+128),f
 15254  0139  0B89               	decfsz	9,f
 15255  013A  2935               	goto	u7035
 15256  013B  082F               	movf	(??_logf+3)^(0+128),w
 15257  013C  042E               	iorwf	(??_logf+2)^(0+128),w
 15258  013D  042D               	iorwf	(??_logf+1)^(0+128),w
 15259  013E  042C               	iorwf	??_logf^(0+128),w
 15260  013F  1903               	skipnz
 15261  0140  2981               	goto	l5677
 15262  0141  3000               	movlw	0
 15263  0142  0020               	movlb	0	; select bank0
 15264  0143  00C3               	movwf	___fldiv@a+3
 15265  0144  3000               	movlw	0
 15266  0145  00C2               	movwf	___fldiv@a+2
 15267  0146  3000               	movlw	0
 15268  0147  00C1               	movwf	___fldiv@a+1
 15269  0148  3000               	movlw	0
 15270  0149  00C0               	movwf	___fldiv@a
 15271  014A  0021               	movlb	1	; select bank1
 15272  014B  082B               	movf	(logf@x+3)^(0+128),w
 15273  014C  00A3               	movwf	(___flsub@a+3)^(0+128)
 15274  014D  082A               	movf	(logf@x+2)^(0+128),w
 15275  014E  00A2               	movwf	(___flsub@a+2)^(0+128)
 15276  014F  0829               	movf	(logf@x+1)^(0+128),w
 15277  0150  00A1               	movwf	(___flsub@a+1)^(0+128)
 15278  0151  0828               	movf	logf@x^(0+128),w
 15279  0152  00A0               	movwf	___flsub@a^(0+128)
 15280  0153  082B               	movf	(logf@x+3)^(0+128),w
 15281  0154  00A7               	movwf	(___flsub@b+3)^(0+128)
 15282  0155  082A               	movf	(logf@x+2)^(0+128),w
 15283  0156  00A6               	movwf	(___flsub@b+2)^(0+128)
 15284  0157  0829               	movf	(logf@x+1)^(0+128),w
 15285  0158  00A5               	movwf	(___flsub@b+1)^(0+128)
 15286  0159  0828               	movf	logf@x^(0+128),w
 15287  015A  00A4               	movwf	___flsub@b^(0+128)
 15288  015B  31B4  2469  3180   	fcall	___flsub
 15289  015E  0021               	movlb	1	; select bank1
 15290  015F  0823               	movf	(?___flsub+3)^(0+128),w
 15291  0160  0020               	movlb	0	; select bank0
 15292  0161  00C7               	movwf	___fldiv@b+3
 15293  0162  0021               	movlb	1	; select bank1
 15294  0163  0822               	movf	(?___flsub+2)^(0+128),w
 15295  0164  0020               	movlb	0	; select bank0
 15296  0165  00C6               	movwf	___fldiv@b+2
 15297  0166  0021               	movlb	1	; select bank1
 15298  0167  0821               	movf	(?___flsub+1)^(0+128),w
 15299  0168  0020               	movlb	0	; select bank0
 15300  0169  00C5               	movwf	___fldiv@b+1
 15301  016A  0021               	movlb	1	; select bank1
 15302  016B  0820               	movf	?___flsub^(0+128),w
 15303  016C  0020               	movlb	0	; select bank0
 15304  016D  00C4               	movwf	___fldiv@b
 15305  016E  319C  24E2         	fcall	___fldiv
 15306  0170  0020               	movlb	0	; select bank0
 15307  0171  0843               	movf	?___fldiv+3,w
 15308  0172  0021               	movlb	1	; select bank1
 15309  0173  00AB               	movwf	(?_logf+3)^(0+128)
 15310  0174  0020               	movlb	0	; select bank0
 15311  0175  0842               	movf	?___fldiv+2,w
 15312  0176  0021               	movlb	1	; select bank1
 15313  0177  00AA               	movwf	(?_logf+2)^(0+128)
 15314  0178  0020               	movlb	0	; select bank0
 15315  0179  0841               	movf	?___fldiv+1,w
 15316  017A  0021               	movlb	1	; select bank1
 15317  017B  00A9               	movwf	(?_logf+1)^(0+128)
 15318  017C  0020               	movlb	0	; select bank0
 15319  017D  0840               	movf	?___fldiv,w
 15320  017E  0021               	movlb	1	; select bank1
 15321  017F  00A8               	movwf	?_logf^(0+128)
 15322  0180  0008               	return
 15323  0181                     l5677:	
 15324  0181  30E7               	movlw	231
 15325  0182  0022               	movlb	2	; select bank2
 15326  0183  07BC               	addwf	logf@k^(0+256),f
 15327  0184  30FF               	movlw	255
 15328  0185  3DBD               	addwfc	(logf@k+1)^(0+256),f
 15329  0186  304C               	movlw	76
 15330  0187  0020               	movlb	0	; select bank0
 15331  0188  00A9               	movwf	___flmul@b+3
 15332  0189  3000               	movlw	0
 15333  018A  00A8               	movwf	___flmul@b+2
 15334  018B  3000               	movlw	0
 15335  018C  00A7               	movwf	___flmul@b+1
 15336  018D  3000               	movlw	0
 15337  018E  00A6               	movwf	___flmul@b
 15338  018F  0021               	movlb	1	; select bank1
 15339  0190  082B               	movf	(logf@x+3)^(0+128),w
 15340  0191  0020               	movlb	0	; select bank0
 15341  0192  00AD               	movwf	___flmul@a+3
 15342  0193  0021               	movlb	1	; select bank1
 15343  0194  082A               	movf	(logf@x+2)^(0+128),w
 15344  0195  0020               	movlb	0	; select bank0
 15345  0196  00AC               	movwf	___flmul@a+2
 15346  0197  0021               	movlb	1	; select bank1
 15347  0198  0829               	movf	(logf@x+1)^(0+128),w
 15348  0199  0020               	movlb	0	; select bank0
 15349  019A  00AB               	movwf	___flmul@a+1
 15350  019B  0021               	movlb	1	; select bank1
 15351  019C  0828               	movf	logf@x^(0+128),w
 15352  019D  0020               	movlb	0	; select bank0
 15353  019E  00AA               	movwf	___flmul@a
 15354  019F  3190  2023  3180   	fcall	___flmul
 15355  01A2  0020               	movlb	0	; select bank0
 15356  01A3  0829               	movf	?___flmul+3,w
 15357  01A4  0021               	movlb	1	; select bank1
 15358  01A5  00AB               	movwf	(logf@x+3)^(0+128)
 15359  01A6  0020               	movlb	0	; select bank0
 15360  01A7  0828               	movf	?___flmul+2,w
 15361  01A8  0021               	movlb	1	; select bank1
 15362  01A9  00AA               	movwf	(logf@x+2)^(0+128)
 15363  01AA  0020               	movlb	0	; select bank0
 15364  01AB  0827               	movf	?___flmul+1,w
 15365  01AC  0021               	movlb	1	; select bank1
 15366  01AD  00A9               	movwf	(logf@x+1)^(0+128)
 15367  01AE  0020               	movlb	0	; select bank0
 15368  01AF  0826               	movf	?___flmul,w
 15369  01B0  0021               	movlb	1	; select bank1
 15370  01B1  00A8               	movwf	logf@x^(0+128)
 15371  01B2  082B               	movf	(logf@x+3)^(0+128),w
 15372  01B3  0022               	movlb	2	; select bank2
 15373  01B4  00D9               	movwf	(logf@u+3)^(0+256)
 15374  01B5  0021               	movlb	1	; select bank1
 15375  01B6  082A               	movf	(logf@x+2)^(0+128),w
 15376  01B7  0022               	movlb	2	; select bank2
 15377  01B8  00D8               	movwf	(logf@u+2)^(0+256)
 15378  01B9  0021               	movlb	1	; select bank1
 15379  01BA  0829               	movf	(logf@x+1)^(0+128),w
 15380  01BB  0022               	movlb	2	; select bank2
 15381  01BC  00D7               	movwf	(logf@u+1)^(0+256)
 15382  01BD  0021               	movlb	1	; select bank1
 15383  01BE  0828               	movf	logf@x^(0+128),w
 15384  01BF  0022               	movlb	2	; select bank2
 15385  01C0  00D6               	movwf	logf@u^(0+256)
 15386  01C1  0859               	movf	(logf@u+3)^(0+256),w
 15387  01C2  00E1               	movwf	(logf@ix+3)^(0+256)
 15388  01C3  0858               	movf	(logf@u+2)^(0+256),w
 15389  01C4  00E0               	movwf	(logf@ix+2)^(0+256)
 15390  01C5  0857               	movf	(logf@u+1)^(0+256),w
 15391  01C6  00DF               	movwf	(logf@ix+1)^(0+256)
 15392  01C7  0856               	movf	logf@u^(0+256),w
 15393  01C8  00DE               	movwf	logf@ix^(0+256)
 15394  01C9  29E4               	goto	l5697
 15395  01CA                     l5685:	
 15396  01CA  3080               	movlw	128
 15397  01CB  0022               	movlb	2	; select bank2
 15398  01CC  0260               	subwf	(logf@ix+2)^(0+256),w
 15399  01CD  307F               	movlw	127
 15400  01CE  3B61               	subwfb	(logf@ix+3)^(0+256),w
 15401  01CF  1803               	btfsc	3,0
 15402  01D0  0008               	return
 15403  01D1  3080               	movlw	128
 15404  01D2  0660               	xorwf	(logf@ix+2)^(0+256),w
 15405  01D3  303F               	movlw	63
 15406  01D4  1903               	skipnz
 15407  01D5  0661               	xorwf	(logf@ix+3)^(0+256),w
 15408  01D6  045E               	iorwf	logf@ix^(0+256),w
 15409  01D7  045F               	iorwf	(logf@ix+1)^(0+256),w
 15410  01D8  1D03               	btfss	3,2
 15411  01D9  29E4               	goto	l5697
 15412  01DA  3000               	movlw	0
 15413  01DB  0021               	movlb	1	; select bank1
 15414  01DC  00AB               	movwf	(?_logf+3)^(0+128)
 15415  01DD  3000               	movlw	0
 15416  01DE  00AA               	movwf	(?_logf+2)^(0+128)
 15417  01DF  3000               	movlw	0
 15418  01E0  00A9               	movwf	(?_logf+1)^(0+128)
 15419  01E1  3000               	movlw	0
 15420  01E2  00A8               	movwf	?_logf^(0+128)
 15421  01E3  0008               	return
 15422  01E4                     l5697:	
 15423  01E4  300D               	movlw	13
 15424  01E5  07DE               	addwf	logf@ix^(0+256),f
 15425  01E6  30FB               	movlw	251
 15426  01E7  3DDF               	addwfc	(logf@ix+1)^(0+256),f
 15427  01E8  304A               	movlw	74
 15428  01E9  3DE0               	addwfc	(logf@ix+2)^(0+256),f
 15429  01EA  3000               	movlw	0
 15430  01EB  3DE1               	addwfc	(logf@ix+3)^(0+256),f
 15431  01EC  085E               	movf	logf@ix^(0+256),w
 15432  01ED  0021               	movlb	1	; select bank1
 15433  01EE  00AC               	movwf	??_logf^(0+128)
 15434  01EF  0022               	movlb	2	; select bank2
 15435  01F0  085F               	movf	(logf@ix+1)^(0+256),w
 15436  01F1  0021               	movlb	1	; select bank1
 15437  01F2  00AD               	movwf	(??_logf^(0+128)+1)
 15438  01F3  0022               	movlb	2	; select bank2
 15439  01F4  0860               	movf	(logf@ix+2)^(0+256),w
 15440  01F5  0021               	movlb	1	; select bank1
 15441  01F6  00AE               	movwf	(??_logf^(0+128)+2)
 15442  01F7  0022               	movlb	2	; select bank2
 15443  01F8  0861               	movf	(logf@ix+3)^(0+256),w
 15444  01F9  0021               	movlb	1	; select bank1
 15445  01FA  00AF               	movwf	(??_logf^(0+128)+3)
 15446  01FB  3017               	movlw	23
 15447  01FC                     u7075:	
 15448  01FC  36AF               	lsrf	(??_logf^(0+128)+3),f
 15449  01FD  0CAE               	rrf	(??_logf^(0+128)+2),f
 15450  01FE  0CAD               	rrf	(??_logf^(0+128)+1),f
 15451  01FF  0CAC               	rrf	??_logf^(0+128),f
 15452  0200  0B89               	decfsz	9,f
 15453  0201  29FC               	goto	u7075
 15454  0202  082C               	movf	??_logf^(0+128),w
 15455  0203  3E81               	addlw	129
 15456  0204  00B0               	movwf	(??_logf+4)^(0+128)
 15457  0205  30FF               	movlw	255
 15458  0206  3D2D               	addwfc	(??_logf+1)^(0+128),w
 15459  0207  00B1               	movwf	(??_logf+5)^(0+128)
 15460  0208  0830               	movf	(??_logf+4)^(0+128),w
 15461  0209  0022               	movlb	2	; select bank2
 15462  020A  07BC               	addwf	logf@k^(0+256),f
 15463  020B  0021               	movlb	1	; select bank1
 15464  020C  0831               	movf	(??_logf+5)^(0+128),w
 15465  020D  0022               	movlb	2	; select bank2
 15466  020E  3DBD               	addwfc	(logf@k+1)^(0+256),f
 15467  020F  30F3               	movlw	243
 15468  0210  0021               	movlb	1	; select bank1
 15469  0211  00AC               	movwf	??_logf^(0+128)
 15470  0212  3004               	movlw	4
 15471  0213  00AD               	movwf	(??_logf^(0+128)+1)
 15472  0214  3035               	movlw	53
 15473  0215  00AE               	movwf	(??_logf^(0+128)+2)
 15474  0216  303F               	movlw	63
 15475  0217  00AF               	movwf	(??_logf^(0+128)+3)
 15476  0218  30FF               	movlw	255
 15477  0219  0022               	movlb	2	; select bank2
 15478  021A  055E               	andwf	logf@ix^(0+256),w
 15479  021B  0021               	movlb	1	; select bank1
 15480  021C  00B0               	movwf	(??_logf+4)^(0+128)
 15481  021D  30FF               	movlw	255
 15482  021E  0022               	movlb	2	; select bank2
 15483  021F  055F               	andwf	(logf@ix+1)^(0+256),w
 15484  0220  0021               	movlb	1	; select bank1
 15485  0221  00B1               	movwf	((??_logf+4)^(0+128)+1)
 15486  0222  307F               	movlw	127
 15487  0223  0022               	movlb	2	; select bank2
 15488  0224  0560               	andwf	(logf@ix+2)^(0+256),w
 15489  0225  0021               	movlb	1	; select bank1
 15490  0226  00B2               	movwf	((??_logf+4)^(0+128)+2)
 15491  0227  3000               	movlw	0
 15492  0228  0022               	movlb	2	; select bank2
 15493  0229  0561               	andwf	(logf@ix+3)^(0+256),w
 15494  022A  0021               	movlb	1	; select bank1
 15495  022B  00B3               	movwf	((??_logf+4)^(0+128)+3)
 15496  022C  0830               	movf	(??_logf+4)^(0+128),w
 15497  022D  07AC               	addwf	??_logf^(0+128),f
 15498  022E  0831               	movf	(??_logf+5)^(0+128),w
 15499  022F  3DAD               	addwfc	(??_logf^(0+128)+1),f
 15500  0230  0832               	movf	(??_logf+6)^(0+128),w
 15501  0231  3DAE               	addwfc	(??_logf^(0+128)+2),f
 15502  0232  0833               	movf	(??_logf+7)^(0+128),w
 15503  0233  3DAF               	addwfc	(??_logf^(0+128)+3),f
 15504  0234  082F               	movf	(??_logf+3)^(0+128),w
 15505  0235  0022               	movlb	2	; select bank2
 15506  0236  00E1               	movwf	(logf@ix+3)^(0+256)
 15507  0237  0021               	movlb	1	; select bank1
 15508  0238  082E               	movf	(??_logf+2)^(0+128),w
 15509  0239  0022               	movlb	2	; select bank2
 15510  023A  00E0               	movwf	(logf@ix+2)^(0+256)
 15511  023B  0021               	movlb	1	; select bank1
 15512  023C  082D               	movf	(??_logf+1)^(0+128),w
 15513  023D  0022               	movlb	2	; select bank2
 15514  023E  00DF               	movwf	(logf@ix+1)^(0+256)
 15515  023F  0021               	movlb	1	; select bank1
 15516  0240  082C               	movf	??_logf^(0+128),w
 15517  0241  0022               	movlb	2	; select bank2
 15518  0242  00DE               	movwf	logf@ix^(0+256)
 15519  0243  0861               	movf	(logf@ix+3)^(0+256),w
 15520  0244  00D9               	movwf	(logf@u+3)^(0+256)
 15521  0245  0860               	movf	(logf@ix+2)^(0+256),w
 15522  0246  00D8               	movwf	(logf@u+2)^(0+256)
 15523  0247  085F               	movf	(logf@ix+1)^(0+256),w
 15524  0248  00D7               	movwf	(logf@u+1)^(0+256)
 15525  0249  085E               	movf	logf@ix^(0+256),w
 15526  024A  00D6               	movwf	logf@u^(0+256)
 15527  024B  0859               	movf	(logf@u+3)^(0+256),w
 15528  024C  0021               	movlb	1	; select bank1
 15529  024D  00AB               	movwf	(logf@x+3)^(0+128)
 15530  024E  0022               	movlb	2	; select bank2
 15531  024F  0858               	movf	(logf@u+2)^(0+256),w
 15532  0250  0021               	movlb	1	; select bank1
 15533  0251  00AA               	movwf	(logf@x+2)^(0+128)
 15534  0252  0022               	movlb	2	; select bank2
 15535  0253  0857               	movf	(logf@u+1)^(0+256),w
 15536  0254  0021               	movlb	1	; select bank1
 15537  0255  00A9               	movwf	(logf@x+1)^(0+128)
 15538  0256  0022               	movlb	2	; select bank2
 15539  0257  0856               	movf	logf@u^(0+256),w
 15540  0258  0021               	movlb	1	; select bank1
 15541  0259  00A8               	movwf	logf@x^(0+128)
 15542  025A  30BF               	movlw	191
 15543  025B  0020               	movlb	0	; select bank0
 15544  025C  00DD               	movwf	___fladd@b+3
 15545  025D  3080               	movlw	128
 15546  025E  00DC               	movwf	___fladd@b+2
 15547  025F  3000               	movlw	0
 15548  0260  00DB               	movwf	___fladd@b+1
 15549  0261  3000               	movlw	0
 15550  0262  00DA               	movwf	___fladd@b
 15551  0263  0021               	movlb	1	; select bank1
 15552  0264  082B               	movf	(logf@x+3)^(0+128),w
 15553  0265  0020               	movlb	0	; select bank0
 15554  0266  00E1               	movwf	___fladd@a+3
 15555  0267  0021               	movlb	1	; select bank1
 15556  0268  082A               	movf	(logf@x+2)^(0+128),w
 15557  0269  0020               	movlb	0	; select bank0
 15558  026A  00E0               	movwf	___fladd@a+2
 15559  026B  0021               	movlb	1	; select bank1
 15560  026C  0829               	movf	(logf@x+1)^(0+128),w
 15561  026D  0020               	movlb	0	; select bank0
 15562  026E  00DF               	movwf	___fladd@a+1
 15563  026F  0021               	movlb	1	; select bank1
 15564  0270  0828               	movf	logf@x^(0+128),w
 15565  0271  0020               	movlb	0	; select bank0
 15566  0272  00DE               	movwf	___fladd@a
 15567  0273  3185  25FE  3180   	fcall	___fladd
 15568  0276  0020               	movlb	0	; select bank0
 15569  0277  085D               	movf	?___fladd+3,w
 15570  0278  0022               	movlb	2	; select bank2
 15571  0279  00DD               	movwf	(logf@f+3)^(0+256)
 15572  027A  0020               	movlb	0	; select bank0
 15573  027B  085C               	movf	?___fladd+2,w
 15574  027C  0022               	movlb	2	; select bank2
 15575  027D  00DC               	movwf	(logf@f+2)^(0+256)
 15576  027E  0020               	movlb	0	; select bank0
 15577  027F  085B               	movf	?___fladd+1,w
 15578  0280  0022               	movlb	2	; select bank2
 15579  0281  00DB               	movwf	(logf@f+1)^(0+256)
 15580  0282  0020               	movlb	0	; select bank0
 15581  0283  085A               	movf	?___fladd,w
 15582  0284  0022               	movlb	2	; select bank2
 15583  0285  00DA               	movwf	logf@f^(0+256)
 15584  0286  3040               	movlw	64
 15585  0287  0020               	movlb	0	; select bank0
 15586  0288  00DD               	movwf	___fladd@b+3
 15587  0289  3000               	movlw	0
 15588  028A  00DC               	movwf	___fladd@b+2
 15589  028B  3000               	movlw	0
 15590  028C  00DB               	movwf	___fladd@b+1
 15591  028D  3000               	movlw	0
 15592  028E  00DA               	movwf	___fladd@b
 15593  028F  0022               	movlb	2	; select bank2
 15594  0290  085D               	movf	(logf@f+3)^(0+256),w
 15595  0291  0020               	movlb	0	; select bank0
 15596  0292  00E1               	movwf	___fladd@a+3
 15597  0293  0022               	movlb	2	; select bank2
 15598  0294  085C               	movf	(logf@f+2)^(0+256),w
 15599  0295  0020               	movlb	0	; select bank0
 15600  0296  00E0               	movwf	___fladd@a+2
 15601  0297  0022               	movlb	2	; select bank2
 15602  0298  085B               	movf	(logf@f+1)^(0+256),w
 15603  0299  0020               	movlb	0	; select bank0
 15604  029A  00DF               	movwf	___fladd@a+1
 15605  029B  0022               	movlb	2	; select bank2
 15606  029C  085A               	movf	logf@f^(0+256),w
 15607  029D  0020               	movlb	0	; select bank0
 15608  029E  00DE               	movwf	___fladd@a
 15609  029F  3185  25FE  3180   	fcall	___fladd
 15610  02A2  0020               	movlb	0	; select bank0
 15611  02A3  085D               	movf	?___fladd+3,w
 15612  02A4  00C3               	movwf	___fldiv@a+3
 15613  02A5  085C               	movf	?___fladd+2,w
 15614  02A6  00C2               	movwf	___fldiv@a+2
 15615  02A7  085B               	movf	?___fladd+1,w
 15616  02A8  00C1               	movwf	___fldiv@a+1
 15617  02A9  085A               	movf	?___fladd,w
 15618  02AA  00C0               	movwf	___fldiv@a
 15619  02AB  0022               	movlb	2	; select bank2
 15620  02AC  085D               	movf	(logf@f+3)^(0+256),w
 15621  02AD  0020               	movlb	0	; select bank0
 15622  02AE  00C7               	movwf	___fldiv@b+3
 15623  02AF  0022               	movlb	2	; select bank2
 15624  02B0  085C               	movf	(logf@f+2)^(0+256),w
 15625  02B1  0020               	movlb	0	; select bank0
 15626  02B2  00C6               	movwf	___fldiv@b+2
 15627  02B3  0022               	movlb	2	; select bank2
 15628  02B4  085B               	movf	(logf@f+1)^(0+256),w
 15629  02B5  0020               	movlb	0	; select bank0
 15630  02B6  00C5               	movwf	___fldiv@b+1
 15631  02B7  0022               	movlb	2	; select bank2
 15632  02B8  085A               	movf	logf@f^(0+256),w
 15633  02B9  0020               	movlb	0	; select bank0
 15634  02BA  00C4               	movwf	___fldiv@b
 15635  02BB  319C  24E2  3180   	fcall	___fldiv
 15636  02BE  0020               	movlb	0	; select bank0
 15637  02BF  0843               	movf	?___fldiv+3,w
 15638  02C0  0022               	movlb	2	; select bank2
 15639  02C1  00C9               	movwf	(logf@s+3)^(0+256)
 15640  02C2  0020               	movlb	0	; select bank0
 15641  02C3  0842               	movf	?___fldiv+2,w
 15642  02C4  0022               	movlb	2	; select bank2
 15643  02C5  00C8               	movwf	(logf@s+2)^(0+256)
 15644  02C6  0020               	movlb	0	; select bank0
 15645  02C7  0841               	movf	?___fldiv+1,w
 15646  02C8  0022               	movlb	2	; select bank2
 15647  02C9  00C7               	movwf	(logf@s+1)^(0+256)
 15648  02CA  0020               	movlb	0	; select bank0
 15649  02CB  0840               	movf	?___fldiv,w
 15650  02CC  0022               	movlb	2	; select bank2
 15651  02CD  00C6               	movwf	logf@s^(0+256)
 15652  02CE  0849               	movf	(logf@s+3)^(0+256),w
 15653  02CF  0020               	movlb	0	; select bank0
 15654  02D0  00A9               	movwf	___flmul@b+3
 15655  02D1  0022               	movlb	2	; select bank2
 15656  02D2  0848               	movf	(logf@s+2)^(0+256),w
 15657  02D3  0020               	movlb	0	; select bank0
 15658  02D4  00A8               	movwf	___flmul@b+2
 15659  02D5  0022               	movlb	2	; select bank2
 15660  02D6  0847               	movf	(logf@s+1)^(0+256),w
 15661  02D7  0020               	movlb	0	; select bank0
 15662  02D8  00A7               	movwf	___flmul@b+1
 15663  02D9  0022               	movlb	2	; select bank2
 15664  02DA  0846               	movf	logf@s^(0+256),w
 15665  02DB  0020               	movlb	0	; select bank0
 15666  02DC  00A6               	movwf	___flmul@b
 15667  02DD  0022               	movlb	2	; select bank2
 15668  02DE  0849               	movf	(logf@s+3)^(0+256),w
 15669  02DF  0020               	movlb	0	; select bank0
 15670  02E0  00AD               	movwf	___flmul@a+3
 15671  02E1  0022               	movlb	2	; select bank2
 15672  02E2  0848               	movf	(logf@s+2)^(0+256),w
 15673  02E3  0020               	movlb	0	; select bank0
 15674  02E4  00AC               	movwf	___flmul@a+2
 15675  02E5  0022               	movlb	2	; select bank2
 15676  02E6  0847               	movf	(logf@s+1)^(0+256),w
 15677  02E7  0020               	movlb	0	; select bank0
 15678  02E8  00AB               	movwf	___flmul@a+1
 15679  02E9  0022               	movlb	2	; select bank2
 15680  02EA  0846               	movf	logf@s^(0+256),w
 15681  02EB  0020               	movlb	0	; select bank0
 15682  02EC  00AA               	movwf	___flmul@a
 15683  02ED  3190  2023  3180   	fcall	___flmul
 15684  02F0  0020               	movlb	0	; select bank0
 15685  02F1  0829               	movf	?___flmul+3,w
 15686  02F2  0022               	movlb	2	; select bank2
 15687  02F3  00CD               	movwf	(logf@z+3)^(0+256)
 15688  02F4  0020               	movlb	0	; select bank0
 15689  02F5  0828               	movf	?___flmul+2,w
 15690  02F6  0022               	movlb	2	; select bank2
 15691  02F7  00CC               	movwf	(logf@z+2)^(0+256)
 15692  02F8  0020               	movlb	0	; select bank0
 15693  02F9  0827               	movf	?___flmul+1,w
 15694  02FA  0022               	movlb	2	; select bank2
 15695  02FB  00CB               	movwf	(logf@z+1)^(0+256)
 15696  02FC  0020               	movlb	0	; select bank0
 15697  02FD  0826               	movf	?___flmul,w
 15698  02FE  0022               	movlb	2	; select bank2
 15699  02FF  00CA               	movwf	logf@z^(0+256)
 15700  0300  084D               	movf	(logf@z+3)^(0+256),w
 15701  0301  0020               	movlb	0	; select bank0
 15702  0302  00A9               	movwf	___flmul@b+3
 15703  0303  0022               	movlb	2	; select bank2
 15704  0304  084C               	movf	(logf@z+2)^(0+256),w
 15705  0305  0020               	movlb	0	; select bank0
 15706  0306  00A8               	movwf	___flmul@b+2
 15707  0307  0022               	movlb	2	; select bank2
 15708  0308  084B               	movf	(logf@z+1)^(0+256),w
 15709  0309  0020               	movlb	0	; select bank0
 15710  030A  00A7               	movwf	___flmul@b+1
 15711  030B  0022               	movlb	2	; select bank2
 15712  030C  084A               	movf	logf@z^(0+256),w
 15713  030D  0020               	movlb	0	; select bank0
 15714  030E  00A6               	movwf	___flmul@b
 15715  030F  0022               	movlb	2	; select bank2
 15716  0310  084D               	movf	(logf@z+3)^(0+256),w
 15717  0311  0020               	movlb	0	; select bank0
 15718  0312  00AD               	movwf	___flmul@a+3
 15719  0313  0022               	movlb	2	; select bank2
 15720  0314  084C               	movf	(logf@z+2)^(0+256),w
 15721  0315  0020               	movlb	0	; select bank0
 15722  0316  00AC               	movwf	___flmul@a+2
 15723  0317  0022               	movlb	2	; select bank2
 15724  0318  084B               	movf	(logf@z+1)^(0+256),w
 15725  0319  0020               	movlb	0	; select bank0
 15726  031A  00AB               	movwf	___flmul@a+1
 15727  031B  0022               	movlb	2	; select bank2
 15728  031C  084A               	movf	logf@z^(0+256),w
 15729  031D  0020               	movlb	0	; select bank0
 15730  031E  00AA               	movwf	___flmul@a
 15731  031F  3190  2023  3180   	fcall	___flmul
 15732  0322  0020               	movlb	0	; select bank0
 15733  0323  0829               	movf	?___flmul+3,w
 15734  0324  0022               	movlb	2	; select bank2
 15735  0325  00D1               	movwf	(logf@w+3)^(0+256)
 15736  0326  0020               	movlb	0	; select bank0
 15737  0327  0828               	movf	?___flmul+2,w
 15738  0328  0022               	movlb	2	; select bank2
 15739  0329  00D0               	movwf	(logf@w+2)^(0+256)
 15740  032A  0020               	movlb	0	; select bank0
 15741  032B  0827               	movf	?___flmul+1,w
 15742  032C  0022               	movlb	2	; select bank2
 15743  032D  00CF               	movwf	(logf@w+1)^(0+256)
 15744  032E  0020               	movlb	0	; select bank0
 15745  032F  0826               	movf	?___flmul,w
 15746  0330  0022               	movlb	2	; select bank2
 15747  0331  00CE               	movwf	logf@w^(0+256)
 15748  0332  303E               	movlw	62
 15749  0333  0020               	movlb	0	; select bank0
 15750  0334  00DD               	movwf	___fladd@b+3
 15751  0335  30CC               	movlw	204
 15752  0336  00DC               	movwf	___fladd@b+2
 15753  0337  30CE               	movlw	206
 15754  0338  00DB               	movwf	___fladd@b+1
 15755  0339  3013               	movlw	19
 15756  033A  00DA               	movwf	___fladd@b
 15757  033B  303E               	movlw	62
 15758  033C  00A9               	movwf	___flmul@b+3
 15759  033D  3078               	movlw	120
 15760  033E  00A8               	movwf	___flmul@b+2
 15761  033F  309E               	movlw	158
 15762  0340  00A7               	movwf	___flmul@b+1
 15763  0341  3026               	movlw	38
 15764  0342  00A6               	movwf	___flmul@b
 15765  0343  0022               	movlb	2	; select bank2
 15766  0344  0851               	movf	(logf@w+3)^(0+256),w
 15767  0345  0020               	movlb	0	; select bank0
 15768  0346  00AD               	movwf	___flmul@a+3
 15769  0347  0022               	movlb	2	; select bank2
 15770  0348  0850               	movf	(logf@w+2)^(0+256),w
 15771  0349  0020               	movlb	0	; select bank0
 15772  034A  00AC               	movwf	___flmul@a+2
 15773  034B  0022               	movlb	2	; select bank2
 15774  034C  084F               	movf	(logf@w+1)^(0+256),w
 15775  034D  0020               	movlb	0	; select bank0
 15776  034E  00AB               	movwf	___flmul@a+1
 15777  034F  0022               	movlb	2	; select bank2
 15778  0350  084E               	movf	logf@w^(0+256),w
 15779  0351  0020               	movlb	0	; select bank0
 15780  0352  00AA               	movwf	___flmul@a
 15781  0353  3190  2023  3180   	fcall	___flmul
 15782  0356  0020               	movlb	0	; select bank0
 15783  0357  0829               	movf	?___flmul+3,w
 15784  0358  00E1               	movwf	___fladd@a+3
 15785  0359  0828               	movf	?___flmul+2,w
 15786  035A  00E0               	movwf	___fladd@a+2
 15787  035B  0827               	movf	?___flmul+1,w
 15788  035C  00DF               	movwf	___fladd@a+1
 15789  035D  0826               	movf	?___flmul,w
 15790  035E  00DE               	movwf	___fladd@a
 15791  035F  3185  25FE  3180   	fcall	___fladd
 15792  0362  0020               	movlb	0	; select bank0
 15793  0363  085D               	movf	?___fladd+3,w
 15794  0364  0022               	movlb	2	; select bank2
 15795  0365  00D5               	movwf	(_logf$2163+3)^(0+256)
 15796  0366  0020               	movlb	0	; select bank0
 15797  0367  085C               	movf	?___fladd+2,w
 15798  0368  0022               	movlb	2	; select bank2
 15799  0369  00D4               	movwf	(_logf$2163+2)^(0+256)
 15800  036A  0020               	movlb	0	; select bank0
 15801  036B  085B               	movf	?___fladd+1,w
 15802  036C  0022               	movlb	2	; select bank2
 15803  036D  00D3               	movwf	(_logf$2163+1)^(0+256)
 15804  036E  0020               	movlb	0	; select bank0
 15805  036F  085A               	movf	?___fladd,w
 15806  0370  0022               	movlb	2	; select bank2
 15807  0371  00D2               	movwf	_logf$2163^(0+256)
 15808  0372  0851               	movf	(logf@w+3)^(0+256),w
 15809  0373  0020               	movlb	0	; select bank0
 15810  0374  00A9               	movwf	___flmul@b+3
 15811  0375  0022               	movlb	2	; select bank2
 15812  0376  0850               	movf	(logf@w+2)^(0+256),w
 15813  0377  0020               	movlb	0	; select bank0
 15814  0378  00A8               	movwf	___flmul@b+2
 15815  0379  0022               	movlb	2	; select bank2
 15816  037A  084F               	movf	(logf@w+1)^(0+256),w
 15817  037B  0020               	movlb	0	; select bank0
 15818  037C  00A7               	movwf	___flmul@b+1
 15819  037D  0022               	movlb	2	; select bank2
 15820  037E  084E               	movf	logf@w^(0+256),w
 15821  037F  0020               	movlb	0	; select bank0
 15822  0380  00A6               	movwf	___flmul@b
 15823  0381  0022               	movlb	2	; select bank2
 15824  0382  0855               	movf	(_logf$2163+3)^(0+256),w
 15825  0383  0020               	movlb	0	; select bank0
 15826  0384  00AD               	movwf	___flmul@a+3
 15827  0385  0022               	movlb	2	; select bank2
 15828  0386  0854               	movf	(_logf$2163+2)^(0+256),w
 15829  0387  0020               	movlb	0	; select bank0
 15830  0388  00AC               	movwf	___flmul@a+2
 15831  0389  0022               	movlb	2	; select bank2
 15832  038A  0853               	movf	(_logf$2163+1)^(0+256),w
 15833  038B  0020               	movlb	0	; select bank0
 15834  038C  00AB               	movwf	___flmul@a+1
 15835  038D  0022               	movlb	2	; select bank2
 15836  038E  0852               	movf	_logf$2163^(0+256),w
 15837  038F  0020               	movlb	0	; select bank0
 15838  0390  00AA               	movwf	___flmul@a
 15839  0391  3190  2023  3180   	fcall	___flmul
 15840  0394  0020               	movlb	0	; select bank0
 15841  0395  0829               	movf	?___flmul+3,w
 15842  0396  0022               	movlb	2	; select bank2
 15843  0397  00A7               	movwf	(logf@t1+3)^(0+256)
 15844  0398  0020               	movlb	0	; select bank0
 15845  0399  0828               	movf	?___flmul+2,w
 15846  039A  0022               	movlb	2	; select bank2
 15847  039B  00A6               	movwf	(logf@t1+2)^(0+256)
 15848  039C  0020               	movlb	0	; select bank0
 15849  039D  0827               	movf	?___flmul+1,w
 15850  039E  0022               	movlb	2	; select bank2
 15851  039F  00A5               	movwf	(logf@t1+1)^(0+256)
 15852  03A0  0020               	movlb	0	; select bank0
 15853  03A1  0826               	movf	?___flmul,w
 15854  03A2  0022               	movlb	2	; select bank2
 15855  03A3  00A4               	movwf	logf@t1^(0+256)
 15856  03A4  303F               	movlw	63
 15857  03A5  0020               	movlb	0	; select bank0
 15858  03A6  00DD               	movwf	___fladd@b+3
 15859  03A7  302A               	movlw	42
 15860  03A8  00DC               	movwf	___fladd@b+2
 15861  03A9  30AA               	movlw	170
 15862  03AA  00DB               	movwf	___fladd@b+1
 15863  03AB  30AA               	movlw	170
 15864  03AC  00DA               	movwf	___fladd@b
 15865  03AD  303E               	movlw	62
 15866  03AE  00A9               	movwf	___flmul@b+3
 15867  03AF  3091               	movlw	145
 15868  03B0  00A8               	movwf	___flmul@b+2
 15869  03B1  30E9               	movlw	233
 15870  03B2  00A7               	movwf	___flmul@b+1
 15871  03B3  30EE               	movlw	238
 15872  03B4  00A6               	movwf	___flmul@b
 15873  03B5  0022               	movlb	2	; select bank2
 15874  03B6  0851               	movf	(logf@w+3)^(0+256),w
 15875  03B7  0020               	movlb	0	; select bank0
 15876  03B8  00AD               	movwf	___flmul@a+3
 15877  03B9  0022               	movlb	2	; select bank2
 15878  03BA  0850               	movf	(logf@w+2)^(0+256),w
 15879  03BB  0020               	movlb	0	; select bank0
 15880  03BC  00AC               	movwf	___flmul@a+2
 15881  03BD  0022               	movlb	2	; select bank2
 15882  03BE  084F               	movf	(logf@w+1)^(0+256),w
 15883  03BF  0020               	movlb	0	; select bank0
 15884  03C0  00AB               	movwf	___flmul@a+1
 15885  03C1  0022               	movlb	2	; select bank2
 15886  03C2  084E               	movf	logf@w^(0+256),w
 15887  03C3  0020               	movlb	0	; select bank0
 15888  03C4  00AA               	movwf	___flmul@a
 15889  03C5  3190  2023  3180   	fcall	___flmul
 15890  03C8  0020               	movlb	0	; select bank0
 15891  03C9  0829               	movf	?___flmul+3,w
 15892  03CA  00E1               	movwf	___fladd@a+3
 15893  03CB  0828               	movf	?___flmul+2,w
 15894  03CC  00E0               	movwf	___fladd@a+2
 15895  03CD  0827               	movf	?___flmul+1,w
 15896  03CE  00DF               	movwf	___fladd@a+1
 15897  03CF  0826               	movf	?___flmul,w
 15898  03D0  00DE               	movwf	___fladd@a
 15899  03D1  3185  25FE  3180   	fcall	___fladd
 15900  03D4  0020               	movlb	0	; select bank0
 15901  03D5  085D               	movf	?___fladd+3,w
 15902  03D6  0022               	movlb	2	; select bank2
 15903  03D7  00D5               	movwf	(_logf$2163+3)^(0+256)
 15904  03D8  0020               	movlb	0	; select bank0
 15905  03D9  085C               	movf	?___fladd+2,w
 15906  03DA  0022               	movlb	2	; select bank2
 15907  03DB  00D4               	movwf	(_logf$2163+2)^(0+256)
 15908  03DC  0020               	movlb	0	; select bank0
 15909  03DD  085B               	movf	?___fladd+1,w
 15910  03DE  0022               	movlb	2	; select bank2
 15911  03DF  00D3               	movwf	(_logf$2163+1)^(0+256)
 15912  03E0  0020               	movlb	0	; select bank0
 15913  03E1  085A               	movf	?___fladd,w
 15914  03E2  0022               	movlb	2	; select bank2
 15915  03E3  00D2               	movwf	_logf$2163^(0+256)
 15916  03E4  084D               	movf	(logf@z+3)^(0+256),w
 15917  03E5  0020               	movlb	0	; select bank0
 15918  03E6  00A9               	movwf	___flmul@b+3
 15919  03E7  0022               	movlb	2	; select bank2
 15920  03E8  084C               	movf	(logf@z+2)^(0+256),w
 15921  03E9  0020               	movlb	0	; select bank0
 15922  03EA  00A8               	movwf	___flmul@b+2
 15923  03EB  0022               	movlb	2	; select bank2
 15924  03EC  084B               	movf	(logf@z+1)^(0+256),w
 15925  03ED  0020               	movlb	0	; select bank0
 15926  03EE  00A7               	movwf	___flmul@b+1
 15927  03EF  0022               	movlb	2	; select bank2
 15928  03F0  084A               	movf	logf@z^(0+256),w
 15929  03F1  0020               	movlb	0	; select bank0
 15930  03F2  00A6               	movwf	___flmul@b
 15931  03F3  0022               	movlb	2	; select bank2
 15932  03F4  0855               	movf	(_logf$2163+3)^(0+256),w
 15933  03F5  0020               	movlb	0	; select bank0
 15934  03F6  00AD               	movwf	___flmul@a+3
 15935  03F7  0022               	movlb	2	; select bank2
 15936  03F8  0854               	movf	(_logf$2163+2)^(0+256),w
 15937  03F9  0020               	movlb	0	; select bank0
 15938  03FA  00AC               	movwf	___flmul@a+2
 15939  03FB  0022               	movlb	2	; select bank2
 15940  03FC  0853               	movf	(_logf$2163+1)^(0+256),w
 15941  03FD  0020               	movlb	0	; select bank0
 15942  03FE  00AB               	movwf	___flmul@a+1
 15943  03FF  0022               	movlb	2	; select bank2
 15944  0400  0852               	movf	_logf$2163^(0+256),w
 15945  0401  0020               	movlb	0	; select bank0
 15946  0402  00AA               	movwf	___flmul@a
 15947  0403  3190  2023  3180   	fcall	___flmul
 15948  0406  0020               	movlb	0	; select bank0
 15949  0407  0829               	movf	?___flmul+3,w
 15950  0408  0022               	movlb	2	; select bank2
 15951  0409  00AB               	movwf	(logf@t2+3)^(0+256)
 15952  040A  0020               	movlb	0	; select bank0
 15953  040B  0828               	movf	?___flmul+2,w
 15954  040C  0022               	movlb	2	; select bank2
 15955  040D  00AA               	movwf	(logf@t2+2)^(0+256)
 15956  040E  0020               	movlb	0	; select bank0
 15957  040F  0827               	movf	?___flmul+1,w
 15958  0410  0022               	movlb	2	; select bank2
 15959  0411  00A9               	movwf	(logf@t2+1)^(0+256)
 15960  0412  0020               	movlb	0	; select bank0
 15961  0413  0826               	movf	?___flmul,w
 15962  0414  0022               	movlb	2	; select bank2
 15963  0415  00A8               	movwf	logf@t2^(0+256)
 15964  0416  0827               	movf	(logf@t1+3)^(0+256),w
 15965  0417  0020               	movlb	0	; select bank0
 15966  0418  00DD               	movwf	___fladd@b+3
 15967  0419  0022               	movlb	2	; select bank2
 15968  041A  0826               	movf	(logf@t1+2)^(0+256),w
 15969  041B  0020               	movlb	0	; select bank0
 15970  041C  00DC               	movwf	___fladd@b+2
 15971  041D  0022               	movlb	2	; select bank2
 15972  041E  0825               	movf	(logf@t1+1)^(0+256),w
 15973  041F  0020               	movlb	0	; select bank0
 15974  0420  00DB               	movwf	___fladd@b+1
 15975  0421  0022               	movlb	2	; select bank2
 15976  0422  0824               	movf	logf@t1^(0+256),w
 15977  0423  0020               	movlb	0	; select bank0
 15978  0424  00DA               	movwf	___fladd@b
 15979  0425  0022               	movlb	2	; select bank2
 15980  0426  082B               	movf	(logf@t2+3)^(0+256),w
 15981  0427  0020               	movlb	0	; select bank0
 15982  0428  00E1               	movwf	___fladd@a+3
 15983  0429  0022               	movlb	2	; select bank2
 15984  042A  082A               	movf	(logf@t2+2)^(0+256),w
 15985  042B  0020               	movlb	0	; select bank0
 15986  042C  00E0               	movwf	___fladd@a+2
 15987  042D  0022               	movlb	2	; select bank2
 15988  042E  0829               	movf	(logf@t2+1)^(0+256),w
 15989  042F  0020               	movlb	0	; select bank0
 15990  0430  00DF               	movwf	___fladd@a+1
 15991  0431  0022               	movlb	2	; select bank2
 15992  0432  0828               	movf	logf@t2^(0+256),w
 15993  0433  0020               	movlb	0	; select bank0
 15994  0434  00DE               	movwf	___fladd@a
 15995  0435  3185  25FE  3180   	fcall	___fladd
 15996  0438  0020               	movlb	0	; select bank0
 15997  0439  085D               	movf	?___fladd+3,w
 15998  043A  0022               	movlb	2	; select bank2
 15999  043B  00A3               	movwf	(logf@R+3)^(0+256)
 16000  043C  0020               	movlb	0	; select bank0
 16001  043D  085C               	movf	?___fladd+2,w
 16002  043E  0022               	movlb	2	; select bank2
 16003  043F  00A2               	movwf	(logf@R+2)^(0+256)
 16004  0440  0020               	movlb	0	; select bank0
 16005  0441  085B               	movf	?___fladd+1,w
 16006  0442  0022               	movlb	2	; select bank2
 16007  0443  00A1               	movwf	(logf@R+1)^(0+256)
 16008  0444  0020               	movlb	0	; select bank0
 16009  0445  085A               	movf	?___fladd,w
 16010  0446  0022               	movlb	2	; select bank2
 16011  0447  00A0               	movwf	logf@R^(0+256)
 16012  0448  303F               	movlw	63
 16013  0449  0020               	movlb	0	; select bank0
 16014  044A  00A9               	movwf	___flmul@b+3
 16015  044B  3000               	movlw	0
 16016  044C  00A8               	movwf	___flmul@b+2
 16017  044D  3000               	movlw	0
 16018  044E  00A7               	movwf	___flmul@b+1
 16019  044F  3000               	movlw	0
 16020  0450  00A6               	movwf	___flmul@b
 16021  0451  0022               	movlb	2	; select bank2
 16022  0452  085D               	movf	(logf@f+3)^(0+256),w
 16023  0453  0020               	movlb	0	; select bank0
 16024  0454  00AD               	movwf	___flmul@a+3
 16025  0455  0022               	movlb	2	; select bank2
 16026  0456  085C               	movf	(logf@f+2)^(0+256),w
 16027  0457  0020               	movlb	0	; select bank0
 16028  0458  00AC               	movwf	___flmul@a+2
 16029  0459  0022               	movlb	2	; select bank2
 16030  045A  085B               	movf	(logf@f+1)^(0+256),w
 16031  045B  0020               	movlb	0	; select bank0
 16032  045C  00AB               	movwf	___flmul@a+1
 16033  045D  0022               	movlb	2	; select bank2
 16034  045E  085A               	movf	logf@f^(0+256),w
 16035  045F  0020               	movlb	0	; select bank0
 16036  0460  00AA               	movwf	___flmul@a
 16037  0461  3190  2023  3180   	fcall	___flmul
 16038  0464  0020               	movlb	0	; select bank0
 16039  0465  0829               	movf	?___flmul+3,w
 16040  0466  0022               	movlb	2	; select bank2
 16041  0467  00D5               	movwf	(_logf$2163+3)^(0+256)
 16042  0468  0020               	movlb	0	; select bank0
 16043  0469  0828               	movf	?___flmul+2,w
 16044  046A  0022               	movlb	2	; select bank2
 16045  046B  00D4               	movwf	(_logf$2163+2)^(0+256)
 16046  046C  0020               	movlb	0	; select bank0
 16047  046D  0827               	movf	?___flmul+1,w
 16048  046E  0022               	movlb	2	; select bank2
 16049  046F  00D3               	movwf	(_logf$2163+1)^(0+256)
 16050  0470  0020               	movlb	0	; select bank0
 16051  0471  0826               	movf	?___flmul,w
 16052  0472  0022               	movlb	2	; select bank2
 16053  0473  00D2               	movwf	_logf$2163^(0+256)
 16054  0474  085D               	movf	(logf@f+3)^(0+256),w
 16055  0475  0020               	movlb	0	; select bank0
 16056  0476  00A9               	movwf	___flmul@b+3
 16057  0477  0022               	movlb	2	; select bank2
 16058  0478  085C               	movf	(logf@f+2)^(0+256),w
 16059  0479  0020               	movlb	0	; select bank0
 16060  047A  00A8               	movwf	___flmul@b+2
 16061  047B  0022               	movlb	2	; select bank2
 16062  047C  085B               	movf	(logf@f+1)^(0+256),w
 16063  047D  0020               	movlb	0	; select bank0
 16064  047E  00A7               	movwf	___flmul@b+1
 16065  047F  0022               	movlb	2	; select bank2
 16066  0480  085A               	movf	logf@f^(0+256),w
 16067  0481  0020               	movlb	0	; select bank0
 16068  0482  00A6               	movwf	___flmul@b
 16069  0483  0022               	movlb	2	; select bank2
 16070  0484  0855               	movf	(_logf$2163+3)^(0+256),w
 16071  0485  0020               	movlb	0	; select bank0
 16072  0486  00AD               	movwf	___flmul@a+3
 16073  0487  0022               	movlb	2	; select bank2
 16074  0488  0854               	movf	(_logf$2163+2)^(0+256),w
 16075  0489  0020               	movlb	0	; select bank0
 16076  048A  00AC               	movwf	___flmul@a+2
 16077  048B  0022               	movlb	2	; select bank2
 16078  048C  0853               	movf	(_logf$2163+1)^(0+256),w
 16079  048D  0020               	movlb	0	; select bank0
 16080  048E  00AB               	movwf	___flmul@a+1
 16081  048F  0022               	movlb	2	; select bank2
 16082  0490  0852               	movf	_logf$2163^(0+256),w
 16083  0491  0020               	movlb	0	; select bank0
 16084  0492  00AA               	movwf	___flmul@a
 16085  0493  3190  2023  3180   	fcall	___flmul
 16086  0496  0020               	movlb	0	; select bank0
 16087  0497  0829               	movf	?___flmul+3,w
 16088  0498  0022               	movlb	2	; select bank2
 16089  0499  00C1               	movwf	(logf@hfsq+3)^(0+256)
 16090  049A  0020               	movlb	0	; select bank0
 16091  049B  0828               	movf	?___flmul+2,w
 16092  049C  0022               	movlb	2	; select bank2
 16093  049D  00C0               	movwf	(logf@hfsq+2)^(0+256)
 16094  049E  0020               	movlb	0	; select bank0
 16095  049F  0827               	movf	?___flmul+1,w
 16096  04A0  0022               	movlb	2	; select bank2
 16097  04A1  00BF               	movwf	(logf@hfsq+1)^(0+256)
 16098  04A2  0020               	movlb	0	; select bank0
 16099  04A3  0826               	movf	?___flmul,w
 16100  04A4  0022               	movlb	2	; select bank2
 16101  04A5  00BE               	movwf	logf@hfsq^(0+256)
 16102  04A6  083C               	movf	logf@k^(0+256),w
 16103  04A7  00F1               	movwf	___xxtofl@val
 16104  04A8  083D               	movf	(logf@k+1)^(0+256),w
 16105  04A9  00F2               	movwf	___xxtofl@val+1
 16106  04AA  0D89               	rlf	9,f
 16107  04AB  3B89               	subwfb	9,f
 16108  04AC  0989               	comf	9,f
 16109  04AD  00F3               	movwf	___xxtofl@val+2
 16110  04AE  00F4               	movwf	___xxtofl@val+3
 16111  04AF  3001               	movlw	1
 16112  04B0  31AA  2248  3180   	fcall	___xxtofl
 16113  04B3  0874               	movf	?___xxtofl+3,w
 16114  04B4  0022               	movlb	2	; select bank2
 16115  04B5  00C5               	movwf	(logf@dk+3)^(0+256)
 16116  04B6  0873               	movf	?___xxtofl+2,w
 16117  04B7  00C4               	movwf	(logf@dk+2)^(0+256)
 16118  04B8  0872               	movf	?___xxtofl+1,w
 16119  04B9  00C3               	movwf	(logf@dk+1)^(0+256)
 16120  04BA  0871               	movf	?___xxtofl,w
 16121  04BB  00C2               	movwf	logf@dk^(0+256)
 16122  04BC  0849               	movf	(logf@s+3)^(0+256),w
 16123  04BD  0020               	movlb	0	; select bank0
 16124  04BE  00A9               	movwf	___flmul@b+3
 16125  04BF  0022               	movlb	2	; select bank2
 16126  04C0  0848               	movf	(logf@s+2)^(0+256),w
 16127  04C1  0020               	movlb	0	; select bank0
 16128  04C2  00A8               	movwf	___flmul@b+2
 16129  04C3  0022               	movlb	2	; select bank2
 16130  04C4  0847               	movf	(logf@s+1)^(0+256),w
 16131  04C5  0020               	movlb	0	; select bank0
 16132  04C6  00A7               	movwf	___flmul@b+1
 16133  04C7  0022               	movlb	2	; select bank2
 16134  04C8  0846               	movf	logf@s^(0+256),w
 16135  04C9  0020               	movlb	0	; select bank0
 16136  04CA  00A6               	movwf	___flmul@b
 16137  04CB  0022               	movlb	2	; select bank2
 16138  04CC  0823               	movf	(logf@R+3)^(0+256),w
 16139  04CD  0020               	movlb	0	; select bank0
 16140  04CE  00DD               	movwf	___fladd@b+3
 16141  04CF  0022               	movlb	2	; select bank2
 16142  04D0  0822               	movf	(logf@R+2)^(0+256),w
 16143  04D1  0020               	movlb	0	; select bank0
 16144  04D2  00DC               	movwf	___fladd@b+2
 16145  04D3  0022               	movlb	2	; select bank2
 16146  04D4  0821               	movf	(logf@R+1)^(0+256),w
 16147  04D5  0020               	movlb	0	; select bank0
 16148  04D6  00DB               	movwf	___fladd@b+1
 16149  04D7  0022               	movlb	2	; select bank2
 16150  04D8  0820               	movf	logf@R^(0+256),w
 16151  04D9  0020               	movlb	0	; select bank0
 16152  04DA  00DA               	movwf	___fladd@b
 16153  04DB  0022               	movlb	2	; select bank2
 16154  04DC  0841               	movf	(logf@hfsq+3)^(0+256),w
 16155  04DD  0020               	movlb	0	; select bank0
 16156  04DE  00E1               	movwf	___fladd@a+3
 16157  04DF  0022               	movlb	2	; select bank2
 16158  04E0  0840               	movf	(logf@hfsq+2)^(0+256),w
 16159  04E1  0020               	movlb	0	; select bank0
 16160  04E2  00E0               	movwf	___fladd@a+2
 16161  04E3  0022               	movlb	2	; select bank2
 16162  04E4  083F               	movf	(logf@hfsq+1)^(0+256),w
 16163  04E5  0020               	movlb	0	; select bank0
 16164  04E6  00DF               	movwf	___fladd@a+1
 16165  04E7  0022               	movlb	2	; select bank2
 16166  04E8  083E               	movf	logf@hfsq^(0+256),w
 16167  04E9  0020               	movlb	0	; select bank0
 16168  04EA  00DE               	movwf	___fladd@a
 16169  04EB  3185  25FE  3180   	fcall	___fladd
 16170  04EE  0020               	movlb	0	; select bank0
 16171  04EF  085D               	movf	?___fladd+3,w
 16172  04F0  00AD               	movwf	___flmul@a+3
 16173  04F1  085C               	movf	?___fladd+2,w
 16174  04F2  00AC               	movwf	___flmul@a+2
 16175  04F3  085B               	movf	?___fladd+1,w
 16176  04F4  00AB               	movwf	___flmul@a+1
 16177  04F5  085A               	movf	?___fladd,w
 16178  04F6  00AA               	movwf	___flmul@a
 16179  04F7  3190  2023  3180   	fcall	___flmul
 16180  04FA  0020               	movlb	0	; select bank0
 16181  04FB  0829               	movf	?___flmul+3,w
 16182  04FC  0022               	movlb	2	; select bank2
 16183  04FD  00AF               	movwf	(_logf$2164+3)^(0+256)
 16184  04FE  0020               	movlb	0	; select bank0
 16185  04FF  0828               	movf	?___flmul+2,w
 16186  0500  0022               	movlb	2	; select bank2
 16187  0501  00AE               	movwf	(_logf$2164+2)^(0+256)
 16188  0502  0020               	movlb	0	; select bank0
 16189  0503  0827               	movf	?___flmul+1,w
 16190  0504  0022               	movlb	2	; select bank2
 16191  0505  00AD               	movwf	(_logf$2164+1)^(0+256)
 16192  0506  0020               	movlb	0	; select bank0
 16193  0507  0826               	movf	?___flmul,w
 16194  0508  0022               	movlb	2	; select bank2
 16195  0509  00AC               	movwf	_logf$2164^(0+256)
 16196  050A  3037               	movlw	55
 16197  050B  0020               	movlb	0	; select bank0
 16198  050C  00A9               	movwf	___flmul@b+3
 16199  050D  3017               	movlw	23
 16200  050E  00A8               	movwf	___flmul@b+2
 16201  050F  30F7               	movlw	247
 16202  0510  00A7               	movwf	___flmul@b+1
 16203  0511  30D1               	movlw	209
 16204  0512  00A6               	movwf	___flmul@b
 16205  0513  0022               	movlb	2	; select bank2
 16206  0514  0845               	movf	(logf@dk+3)^(0+256),w
 16207  0515  0020               	movlb	0	; select bank0
 16208  0516  00AD               	movwf	___flmul@a+3
 16209  0517  0022               	movlb	2	; select bank2
 16210  0518  0844               	movf	(logf@dk+2)^(0+256),w
 16211  0519  0020               	movlb	0	; select bank0
 16212  051A  00AC               	movwf	___flmul@a+2
 16213  051B  0022               	movlb	2	; select bank2
 16214  051C  0843               	movf	(logf@dk+1)^(0+256),w
 16215  051D  0020               	movlb	0	; select bank0
 16216  051E  00AB               	movwf	___flmul@a+1
 16217  051F  0022               	movlb	2	; select bank2
 16218  0520  0842               	movf	logf@dk^(0+256),w
 16219  0521  0020               	movlb	0	; select bank0
 16220  0522  00AA               	movwf	___flmul@a
 16221  0523  3190  2023  3180   	fcall	___flmul
 16222  0526  0020               	movlb	0	; select bank0
 16223  0527  0829               	movf	?___flmul+3,w
 16224  0528  00DD               	movwf	___fladd@b+3
 16225  0529  0828               	movf	?___flmul+2,w
 16226  052A  00DC               	movwf	___fladd@b+2
 16227  052B  0827               	movf	?___flmul+1,w
 16228  052C  00DB               	movwf	___fladd@b+1
 16229  052D  0826               	movf	?___flmul,w
 16230  052E  00DA               	movwf	___fladd@b
 16231  052F  0022               	movlb	2	; select bank2
 16232  0530  082F               	movf	(_logf$2164+3)^(0+256),w
 16233  0531  0020               	movlb	0	; select bank0
 16234  0532  00E1               	movwf	___fladd@a+3
 16235  0533  0022               	movlb	2	; select bank2
 16236  0534  082E               	movf	(_logf$2164+2)^(0+256),w
 16237  0535  0020               	movlb	0	; select bank0
 16238  0536  00E0               	movwf	___fladd@a+2
 16239  0537  0022               	movlb	2	; select bank2
 16240  0538  082D               	movf	(_logf$2164+1)^(0+256),w
 16241  0539  0020               	movlb	0	; select bank0
 16242  053A  00DF               	movwf	___fladd@a+1
 16243  053B  0022               	movlb	2	; select bank2
 16244  053C  082C               	movf	_logf$2164^(0+256),w
 16245  053D  0020               	movlb	0	; select bank0
 16246  053E  00DE               	movwf	___fladd@a
 16247  053F  3185  25FE  3180   	fcall	___fladd
 16248  0542  0020               	movlb	0	; select bank0
 16249  0543  085D               	movf	?___fladd+3,w
 16250  0544  0022               	movlb	2	; select bank2
 16251  0545  00B3               	movwf	(_logf$2165+3)^(0+256)
 16252  0546  0020               	movlb	0	; select bank0
 16253  0547  085C               	movf	?___fladd+2,w
 16254  0548  0022               	movlb	2	; select bank2
 16255  0549  00B2               	movwf	(_logf$2165+2)^(0+256)
 16256  054A  0020               	movlb	0	; select bank0
 16257  054B  085B               	movf	?___fladd+1,w
 16258  054C  0022               	movlb	2	; select bank2
 16259  054D  00B1               	movwf	(_logf$2165+1)^(0+256)
 16260  054E  0020               	movlb	0	; select bank0
 16261  054F  085A               	movf	?___fladd,w
 16262  0550  0022               	movlb	2	; select bank2
 16263  0551  00B0               	movwf	_logf$2165^(0+256)
 16264  0552  0841               	movf	(logf@hfsq+3)^(0+256),w
 16265  0553  0021               	movlb	1	; select bank1
 16266  0554  00A3               	movwf	(___flsub@a+3)^(0+128)
 16267  0555  0022               	movlb	2	; select bank2
 16268  0556  0840               	movf	(logf@hfsq+2)^(0+256),w
 16269  0557  0021               	movlb	1	; select bank1
 16270  0558  00A2               	movwf	(___flsub@a+2)^(0+128)
 16271  0559  0022               	movlb	2	; select bank2
 16272  055A  083F               	movf	(logf@hfsq+1)^(0+256),w
 16273  055B  0021               	movlb	1	; select bank1
 16274  055C  00A1               	movwf	(___flsub@a+1)^(0+128)
 16275  055D  0022               	movlb	2	; select bank2
 16276  055E  083E               	movf	logf@hfsq^(0+256),w
 16277  055F  0021               	movlb	1	; select bank1
 16278  0560  00A0               	movwf	___flsub@a^(0+128)
 16279  0561  0022               	movlb	2	; select bank2
 16280  0562  0833               	movf	(_logf$2165+3)^(0+256),w
 16281  0563  0021               	movlb	1	; select bank1
 16282  0564  00A7               	movwf	(___flsub@b+3)^(0+128)
 16283  0565  0022               	movlb	2	; select bank2
 16284  0566  0832               	movf	(_logf$2165+2)^(0+256),w
 16285  0567  0021               	movlb	1	; select bank1
 16286  0568  00A6               	movwf	(___flsub@b+2)^(0+128)
 16287  0569  0022               	movlb	2	; select bank2
 16288  056A  0831               	movf	(_logf$2165+1)^(0+256),w
 16289  056B  0021               	movlb	1	; select bank1
 16290  056C  00A5               	movwf	(___flsub@b+1)^(0+128)
 16291  056D  0022               	movlb	2	; select bank2
 16292  056E  0830               	movf	_logf$2165^(0+256),w
 16293  056F  0021               	movlb	1	; select bank1
 16294  0570  00A4               	movwf	___flsub@b^(0+128)
 16295  0571  31B4  2469  3180   	fcall	___flsub
 16296  0574  0021               	movlb	1	; select bank1
 16297  0575  0823               	movf	(?___flsub+3)^(0+128),w
 16298  0576  0022               	movlb	2	; select bank2
 16299  0577  00B7               	movwf	(_logf$2166+3)^(0+256)
 16300  0578  0021               	movlb	1	; select bank1
 16301  0579  0822               	movf	(?___flsub+2)^(0+128),w
 16302  057A  0022               	movlb	2	; select bank2
 16303  057B  00B6               	movwf	(_logf$2166+2)^(0+256)
 16304  057C  0021               	movlb	1	; select bank1
 16305  057D  0821               	movf	(?___flsub+1)^(0+128),w
 16306  057E  0022               	movlb	2	; select bank2
 16307  057F  00B5               	movwf	(_logf$2166+1)^(0+256)
 16308  0580  0021               	movlb	1	; select bank1
 16309  0581  0820               	movf	?___flsub^(0+128),w
 16310  0582  0022               	movlb	2	; select bank2
 16311  0583  00B4               	movwf	_logf$2166^(0+256)
 16312  0584  085D               	movf	(logf@f+3)^(0+256),w
 16313  0585  0020               	movlb	0	; select bank0
 16314  0586  00DD               	movwf	___fladd@b+3
 16315  0587  0022               	movlb	2	; select bank2
 16316  0588  085C               	movf	(logf@f+2)^(0+256),w
 16317  0589  0020               	movlb	0	; select bank0
 16318  058A  00DC               	movwf	___fladd@b+2
 16319  058B  0022               	movlb	2	; select bank2
 16320  058C  085B               	movf	(logf@f+1)^(0+256),w
 16321  058D  0020               	movlb	0	; select bank0
 16322  058E  00DB               	movwf	___fladd@b+1
 16323  058F  0022               	movlb	2	; select bank2
 16324  0590  085A               	movf	logf@f^(0+256),w
 16325  0591  0020               	movlb	0	; select bank0
 16326  0592  00DA               	movwf	___fladd@b
 16327  0593  0022               	movlb	2	; select bank2
 16328  0594  0837               	movf	(_logf$2166+3)^(0+256),w
 16329  0595  0020               	movlb	0	; select bank0
 16330  0596  00E1               	movwf	___fladd@a+3
 16331  0597  0022               	movlb	2	; select bank2
 16332  0598  0836               	movf	(_logf$2166+2)^(0+256),w
 16333  0599  0020               	movlb	0	; select bank0
 16334  059A  00E0               	movwf	___fladd@a+2
 16335  059B  0022               	movlb	2	; select bank2
 16336  059C  0835               	movf	(_logf$2166+1)^(0+256),w
 16337  059D  0020               	movlb	0	; select bank0
 16338  059E  00DF               	movwf	___fladd@a+1
 16339  059F  0022               	movlb	2	; select bank2
 16340  05A0  0834               	movf	_logf$2166^(0+256),w
 16341  05A1  0020               	movlb	0	; select bank0
 16342  05A2  00DE               	movwf	___fladd@a
 16343  05A3  3185  25FE  3180   	fcall	___fladd
 16344  05A6  0020               	movlb	0	; select bank0
 16345  05A7  085D               	movf	?___fladd+3,w
 16346  05A8  0022               	movlb	2	; select bank2
 16347  05A9  00BB               	movwf	(_logf$2167+3)^(0+256)
 16348  05AA  0020               	movlb	0	; select bank0
 16349  05AB  085C               	movf	?___fladd+2,w
 16350  05AC  0022               	movlb	2	; select bank2
 16351  05AD  00BA               	movwf	(_logf$2167+2)^(0+256)
 16352  05AE  0020               	movlb	0	; select bank0
 16353  05AF  085B               	movf	?___fladd+1,w
 16354  05B0  0022               	movlb	2	; select bank2
 16355  05B1  00B9               	movwf	(_logf$2167+1)^(0+256)
 16356  05B2  0020               	movlb	0	; select bank0
 16357  05B3  085A               	movf	?___fladd,w
 16358  05B4  0022               	movlb	2	; select bank2
 16359  05B5  00B8               	movwf	_logf$2167^(0+256)
 16360  05B6  303F               	movlw	63
 16361  05B7  0020               	movlb	0	; select bank0
 16362  05B8  00A9               	movwf	___flmul@b+3
 16363  05B9  3031               	movlw	49
 16364  05BA  00A8               	movwf	___flmul@b+2
 16365  05BB  3071               	movlw	113
 16366  05BC  00A7               	movwf	___flmul@b+1
 16367  05BD  3080               	movlw	128
 16368  05BE  00A6               	movwf	___flmul@b
 16369  05BF  0022               	movlb	2	; select bank2
 16370  05C0  0845               	movf	(logf@dk+3)^(0+256),w
 16371  05C1  0020               	movlb	0	; select bank0
 16372  05C2  00AD               	movwf	___flmul@a+3
 16373  05C3  0022               	movlb	2	; select bank2
 16374  05C4  0844               	movf	(logf@dk+2)^(0+256),w
 16375  05C5  0020               	movlb	0	; select bank0
 16376  05C6  00AC               	movwf	___flmul@a+2
 16377  05C7  0022               	movlb	2	; select bank2
 16378  05C8  0843               	movf	(logf@dk+1)^(0+256),w
 16379  05C9  0020               	movlb	0	; select bank0
 16380  05CA  00AB               	movwf	___flmul@a+1
 16381  05CB  0022               	movlb	2	; select bank2
 16382  05CC  0842               	movf	logf@dk^(0+256),w
 16383  05CD  0020               	movlb	0	; select bank0
 16384  05CE  00AA               	movwf	___flmul@a
 16385  05CF  3190  2023  3180   	fcall	___flmul
 16386  05D2  0020               	movlb	0	; select bank0
 16387  05D3  0829               	movf	?___flmul+3,w
 16388  05D4  00DD               	movwf	___fladd@b+3
 16389  05D5  0828               	movf	?___flmul+2,w
 16390  05D6  00DC               	movwf	___fladd@b+2
 16391  05D7  0827               	movf	?___flmul+1,w
 16392  05D8  00DB               	movwf	___fladd@b+1
 16393  05D9  0826               	movf	?___flmul,w
 16394  05DA  00DA               	movwf	___fladd@b
 16395  05DB  0022               	movlb	2	; select bank2
 16396  05DC  083B               	movf	(_logf$2167+3)^(0+256),w
 16397  05DD  0020               	movlb	0	; select bank0
 16398  05DE  00E1               	movwf	___fladd@a+3
 16399  05DF  0022               	movlb	2	; select bank2
 16400  05E0  083A               	movf	(_logf$2167+2)^(0+256),w
 16401  05E1  0020               	movlb	0	; select bank0
 16402  05E2  00E0               	movwf	___fladd@a+2
 16403  05E3  0022               	movlb	2	; select bank2
 16404  05E4  0839               	movf	(_logf$2167+1)^(0+256),w
 16405  05E5  0020               	movlb	0	; select bank0
 16406  05E6  00DF               	movwf	___fladd@a+1
 16407  05E7  0022               	movlb	2	; select bank2
 16408  05E8  0838               	movf	_logf$2167^(0+256),w
 16409  05E9  0020               	movlb	0	; select bank0
 16410  05EA  00DE               	movwf	___fladd@a
 16411  05EB  3185  25FE         	fcall	___fladd
 16412  05ED  0020               	movlb	0	; select bank0
 16413  05EE  085D               	movf	?___fladd+3,w
 16414  05EF  0021               	movlb	1	; select bank1
 16415  05F0  00AB               	movwf	(?_logf+3)^(0+128)
 16416  05F1  0020               	movlb	0	; select bank0
 16417  05F2  085C               	movf	?___fladd+2,w
 16418  05F3  0021               	movlb	1	; select bank1
 16419  05F4  00AA               	movwf	(?_logf+2)^(0+128)
 16420  05F5  0020               	movlb	0	; select bank0
 16421  05F6  085B               	movf	?___fladd+1,w
 16422  05F7  0021               	movlb	1	; select bank1
 16423  05F8  00A9               	movwf	(?_logf+1)^(0+128)
 16424  05F9  0020               	movlb	0	; select bank0
 16425  05FA  085A               	movf	?___fladd,w
 16426  05FB  0021               	movlb	1	; select bank1
 16427  05FC  00A8               	movwf	?_logf^(0+128)
 16428  05FD  0008               	return
 16429  05FE                     __end_of_logf:	
 16430                           
 16431                           	psect	text51
 16432  2CDC                     __ptext51:	
 16433 ;; *************** function _updateCurrent *****************
 16434 ;; Defined at:
 16435 ;;		line 198 in file "BQ76920.c"
 16436 ;; Parameters:    Size  Location     Type
 16437 ;;		None
 16438 ;; Auto vars:     Size  Location     Type
 16439 ;;  adcVal          2   21[BANK1 ] int 
 16440 ;;  sys_stat        1    0        struct regSYS_STAT
 16441 ;; Return value:  Size  Location     Type
 16442 ;;                  1    wreg      void 
 16443 ;; Registers used:
 16444 ;;		wreg, status,2, status,0, pclath, cstack
 16445 ;; Tracked objects:
 16446 ;;		On entry : 0/0
 16447 ;;		On exit  : 0/0
 16448 ;;		Unchanged: 0/0
 16449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16451 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16452 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16453 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16454 ;;Total ram usage:        6 bytes
 16455 ;; Hardware stack levels used:    1
 16456 ;; Hardware stack levels required when called:    3
 16457 ;; This function calls:
 16458 ;;		_I2C_writeRegister
 16459 ;;		___fldiv
 16460 ;;		___flmul
 16461 ;;		___flneg
 16462 ;;		___fltol
 16463 ;;		___xxtofl
 16464 ;;		_readRegister
 16465 ;; This function is called by:
 16466 ;;		_AFE_UPDATE
 16467 ;; This function uses a non-reentrant model
 16468 ;;
 16469                           
 16470                           
 16471                           ;psect for function _updateCurrent
 16472  2CDC                     _updateCurrent:	
 16473                           
 16474                           ;incstack = 0
 16475                           ; Regs used in _updateCurrent: [wreg+status,2+status,0+pclath+cstack]
 16476  2CDC  3018               	movlw	24
 16477  2CDD  00F5               	movwf	readRegister@slaveAddress
 16478  2CDE  3000               	movlw	0
 16479  2CDF  00F6               	movwf	readRegister@slaveAddress+1
 16480  2CE0  3000               	movlw	0
 16481  2CE1  00F7               	movwf	readRegister@regAddress
 16482  2CE2  00F8               	movwf	readRegister@regAddress+1
 16483  2CE3  31B4  249E  31AC   	fcall	_readRegister
 16484                           
 16485                           ;BQ76920.c: 205:     adcVal = (readRegister(0x18, 0x32) << 8)| readRegister(0x18, 0x33);
 16486  2CE6  3018               	movlw	24
 16487  2CE7  00F5               	movwf	readRegister@slaveAddress
 16488  2CE8  3000               	movlw	0
 16489  2CE9  00F6               	movwf	readRegister@slaveAddress+1
 16490  2CEA  3032               	movlw	50
 16491  2CEB  00F7               	movwf	readRegister@regAddress
 16492  2CEC  3000               	movlw	0
 16493  2CED  00F8               	movwf	readRegister@regAddress+1
 16494  2CEE  31B4  249E  31AC   	fcall	_readRegister
 16495  2CF1  0875               	movf	?_readRegister,w
 16496  2CF2  0021               	movlb	1	; select bank1
 16497  2CF3  00B1               	movwf	??_updateCurrent^(0+128)
 16498  2CF4  0876               	movf	?_readRegister+1,w
 16499  2CF5  00B2               	movwf	(??_updateCurrent^(0+128)+1)
 16500  2CF6  0831               	movf	??_updateCurrent^(0+128),w
 16501  2CF7  00B2               	movwf	(??_updateCurrent^(0+128)+1)
 16502  2CF8  01B1               	clrf	??_updateCurrent^(0+128)
 16503  2CF9  3018               	movlw	24
 16504  2CFA  00F5               	movwf	readRegister@slaveAddress
 16505  2CFB  3000               	movlw	0
 16506  2CFC  00F6               	movwf	readRegister@slaveAddress+1
 16507  2CFD  3033               	movlw	51
 16508  2CFE  00F7               	movwf	readRegister@regAddress
 16509  2CFF  3000               	movlw	0
 16510  2D00  00F8               	movwf	readRegister@regAddress+1
 16511  2D01  31B4  249E  31AC   	fcall	_readRegister
 16512  2D04  0875               	movf	?_readRegister,w
 16513  2D05  0021               	movlb	1	; select bank1
 16514  2D06  0431               	iorwf	??_updateCurrent^(0+128),w
 16515  2D07  00B5               	movwf	updateCurrent@adcVal^(0+128)
 16516  2D08  0876               	movf	?_readRegister+1,w
 16517  2D09  0432               	iorwf	(??_updateCurrent+1)^(0+128),w
 16518  2D0A  00B6               	movwf	(updateCurrent@adcVal+1)^(0+128)
 16519                           
 16520                           ;BQ76920.c: 206:     batCurrent = -(adcVal * 8.44 / 19.6);
 16521  2D0B  0835               	movf	updateCurrent@adcVal^(0+128),w
 16522  2D0C  00F1               	movwf	___xxtofl@val
 16523  2D0D  0836               	movf	(updateCurrent@adcVal+1)^(0+128),w
 16524  2D0E  00F2               	movwf	___xxtofl@val+1
 16525  2D0F  0D89               	rlf	9,f
 16526  2D10  3B89               	subwfb	9,f
 16527  2D11  0989               	comf	9,f
 16528  2D12  00F3               	movwf	___xxtofl@val+2
 16529  2D13  00F4               	movwf	___xxtofl@val+3
 16530  2D14  3001               	movlw	1
 16531  2D15  31AA  2248  31AC   	fcall	___xxtofl
 16532  2D18  0874               	movf	?___xxtofl+3,w
 16533  2D19  0020               	movlb	0	; select bank0
 16534  2D1A  00AD               	movwf	___flmul@a+3
 16535  2D1B  0873               	movf	?___xxtofl+2,w
 16536  2D1C  00AC               	movwf	___flmul@a+2
 16537  2D1D  0872               	movf	?___xxtofl+1,w
 16538  2D1E  00AB               	movwf	___flmul@a+1
 16539  2D1F  0871               	movf	?___xxtofl,w
 16540  2D20  00AA               	movwf	___flmul@a
 16541  2D21  3041               	movlw	65
 16542  2D22  00A9               	movwf	___flmul@b+3
 16543  2D23  3007               	movlw	7
 16544  2D24  00A8               	movwf	___flmul@b+2
 16545  2D25  300A               	movlw	10
 16546  2D26  00A7               	movwf	___flmul@b+1
 16547  2D27  303D               	movlw	61
 16548  2D28  00A6               	movwf	___flmul@b
 16549  2D29  3190  2023  31AC   	fcall	___flmul
 16550  2D2C  0020               	movlb	0	; select bank0
 16551  2D2D  0829               	movf	?___flmul+3,w
 16552  2D2E  00C7               	movwf	___fldiv@b+3
 16553  2D2F  0828               	movf	?___flmul+2,w
 16554  2D30  00C6               	movwf	___fldiv@b+2
 16555  2D31  0827               	movf	?___flmul+1,w
 16556  2D32  00C5               	movwf	___fldiv@b+1
 16557  2D33  0826               	movf	?___flmul,w
 16558  2D34  00C4               	movwf	___fldiv@b
 16559  2D35  3041               	movlw	65
 16560  2D36  00C3               	movwf	___fldiv@a+3
 16561  2D37  309C               	movlw	156
 16562  2D38  00C2               	movwf	___fldiv@a+2
 16563  2D39  30CC               	movlw	204
 16564  2D3A  00C1               	movwf	___fldiv@a+1
 16565  2D3B  30CD               	movlw	205
 16566  2D3C  00C0               	movwf	___fldiv@a
 16567  2D3D  319C  24E2  31AC   	fcall	___fldiv
 16568  2D40  0020               	movlb	0	; select bank0
 16569  2D41  0843               	movf	?___fldiv+3,w
 16570  2D42  00DD               	movwf	___flneg@f1+3
 16571  2D43  0842               	movf	?___fldiv+2,w
 16572  2D44  00DC               	movwf	___flneg@f1+2
 16573  2D45  0841               	movf	?___fldiv+1,w
 16574  2D46  00DB               	movwf	___flneg@f1+1
 16575  2D47  0840               	movf	?___fldiv,w
 16576  2D48  00DA               	movwf	___flneg@f1
 16577  2D49  31B1  21BA  31AC   	fcall	___flneg
 16578  2D4C  0020               	movlb	0	; select bank0
 16579  2D4D  085D               	movf	?___flneg+3,w
 16580  2D4E  0021               	movlb	1	; select bank1
 16581  2D4F  00AB               	movwf	(___fltol@f1+3)^(0+128)
 16582  2D50  0020               	movlb	0	; select bank0
 16583  2D51  085C               	movf	?___flneg+2,w
 16584  2D52  0021               	movlb	1	; select bank1
 16585  2D53  00AA               	movwf	(___fltol@f1+2)^(0+128)
 16586  2D54  0020               	movlb	0	; select bank0
 16587  2D55  085B               	movf	?___flneg+1,w
 16588  2D56  0021               	movlb	1	; select bank1
 16589  2D57  00A9               	movwf	(___fltol@f1+1)^(0+128)
 16590  2D58  0020               	movlb	0	; select bank0
 16591  2D59  085A               	movf	?___flneg,w
 16592  2D5A  0021               	movlb	1	; select bank1
 16593  2D5B  00A8               	movwf	___fltol@f1^(0+128)
 16594  2D5C  31B6  26B9  31AC   	fcall	___fltol
 16595  2D5F  0021               	movlb	1	; select bank1
 16596  2D60  082B               	movf	(?___fltol+3)^(0+128),w
 16597  2D61  0023               	movlb	3	; select bank3
 16598  2D62  00C3               	movwf	(_batCurrent+3)^(0+384)
 16599  2D63  0021               	movlb	1	; select bank1
 16600  2D64  082A               	movf	(?___fltol+2)^(0+128),w
 16601  2D65  0023               	movlb	3	; select bank3
 16602  2D66  00C2               	movwf	(_batCurrent+2)^(0+384)
 16603  2D67  0021               	movlb	1	; select bank1
 16604  2D68  0829               	movf	(?___fltol+1)^(0+128),w
 16605  2D69  0023               	movlb	3	; select bank3
 16606  2D6A  00C1               	movwf	(_batCurrent+1)^(0+384)
 16607  2D6B  0021               	movlb	1	; select bank1
 16608  2D6C  0828               	movf	?___fltol^(0+128),w
 16609  2D6D  0023               	movlb	3	; select bank3
 16610  2D6E  00C0               	movwf	_batCurrent^(0+384)
 16611                           
 16612                           ;BQ76920.c: 208:     if (batCurrent > -10 && batCurrent < 10)
 16613  2D6F  1FC3               	btfss	(_batCurrent+3)^(0+384),7
 16614  2D70  2D7B               	goto	l7553
 16615  2D71  30F7               	movlw	247
 16616  2D72  0240               	subwf	_batCurrent^(0+384),w
 16617  2D73  30FF               	movlw	255
 16618  2D74  3B41               	subwfb	(_batCurrent+1)^(0+384),w
 16619  2D75  30FF               	movlw	255
 16620  2D76  3B42               	subwfb	(_batCurrent+2)^(0+384),w
 16621  2D77  30FF               	movlw	255
 16622  2D78  3B43               	subwfb	(_batCurrent+3)^(0+384),w
 16623  2D79  1C03               	btfss	3,0
 16624  2D7A  2D92               	goto	l7557
 16625  2D7B                     l7553:	
 16626  2D7B  1BC3               	btfsc	(_batCurrent+3)^(0+384),7
 16627  2D7C  2D8A               	goto	l7555
 16628  2D7D  0843               	movf	(_batCurrent+3)^(0+384),w
 16629  2D7E  1D03               	btfss	3,2
 16630  2D7F  2D92               	goto	l7557
 16631  2D80  0842               	movf	(_batCurrent+2)^(0+384),w
 16632  2D81  1D03               	btfss	3,2
 16633  2D82  2D92               	goto	l7557
 16634  2D83  0841               	movf	(_batCurrent+1)^(0+384),w
 16635  2D84  1D03               	btfss	3,2
 16636  2D85  2D92               	goto	l7557
 16637  2D86  300A               	movlw	10
 16638  2D87  0240               	subwf	_batCurrent^(0+384),w
 16639  2D88  1803               	btfsc	3,0
 16640  2D89  2D92               	goto	l7557
 16641  2D8A                     l7555:	
 16642                           
 16643                           ;BQ76920.c: 209:     {;BQ76920.c: 210:       batCurrent = 0;
 16644  2D8A  3000               	movlw	0
 16645  2D8B  00C3               	movwf	(_batCurrent+3)^(0+384)
 16646  2D8C  3000               	movlw	0
 16647  2D8D  00C2               	movwf	(_batCurrent+2)^(0+384)
 16648  2D8E  3000               	movlw	0
 16649  2D8F  00C1               	movwf	(_batCurrent+1)^(0+384)
 16650  2D90  3000               	movlw	0
 16651  2D91  00C0               	movwf	_batCurrent^(0+384)
 16652  2D92                     l7557:	
 16653                           
 16654                           ;BQ76920.c: 213:     I2C_writeRegister(0x18, 0x00, 0x80);
 16655  2D92  3018               	movlw	24
 16656  2D93  00F5               	movwf	I2C_writeRegister@slaveAddress
 16657  2D94  3000               	movlw	0
 16658  2D95  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16659  2D96  3000               	movlw	0
 16660  2D97  00F7               	movwf	I2C_writeRegister@regAddress
 16661  2D98  00F8               	movwf	I2C_writeRegister@regAddress+1
 16662  2D99  3080               	movlw	128
 16663  2D9A  00F9               	movwf	I2C_writeRegister@data
 16664  2D9B  3000               	movlw	0
 16665  2D9C  00FA               	movwf	I2C_writeRegister@data+1
 16666  2D9D  31B3  231C         	fcall	_I2C_writeRegister
 16667  2D9F  0008               	return
 16668  2DA0                     __end_of_updateCurrent:	
 16669                           
 16670                           	psect	text52
 16671  31BA                     __ptext52:	
 16672 ;; *************** function ___flneg *****************
 16673 ;; Defined at:
 16674 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
 16675 ;; Parameters:    Size  Location     Type
 16676 ;;  f1              4   58[BANK0 ] void 
 16677 ;; Auto vars:     Size  Location     Type
 16678 ;;		None
 16679 ;; Return value:  Size  Location     Type
 16680 ;;                  4   58[BANK0 ] void 
 16681 ;; Registers used:
 16682 ;;		wreg
 16683 ;; Tracked objects:
 16684 ;;		On entry : 0/0
 16685 ;;		On exit  : 0/0
 16686 ;;		Unchanged: 0/0
 16687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16688 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16691 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16692 ;;Total ram usage:        4 bytes
 16693 ;; Hardware stack levels used:    1
 16694 ;; Hardware stack levels required when called:    1
 16695 ;; This function calls:
 16696 ;;		Nothing
 16697 ;; This function is called by:
 16698 ;;		_updateCurrent
 16699 ;; This function uses a non-reentrant model
 16700 ;;
 16701                           
 16702                           
 16703                           ;psect for function ___flneg
 16704  31BA                     ___flneg:	
 16705                           
 16706                           ;incstack = 0
 16707                           ; Regs used in ___flneg: [wreg]
 16708  31BA  0020               	movlb	0	; select bank0
 16709  31BB  085D               	movf	___flneg@f1+3,w
 16710  31BC  045C               	iorwf	___flneg@f1+2,w
 16711  31BD  045B               	iorwf	___flneg@f1+1,w
 16712  31BE  045A               	iorwf	___flneg@f1,w
 16713  31BF  1903               	skipnz
 16714  31C0  0008               	return
 16715  31C1  3080               	movlw	128
 16716  31C2  06DD               	xorwf	___flneg@f1+3,f
 16717  31C3  0008               	return
 16718  31C4                     __end_of___flneg:	
 16719                           
 16720                           	psect	text53
 16721  350B                     __ptext53:	
 16722 ;; *************** function _enableDischarging *****************
 16723 ;; Defined at:
 16724 ;;		line 289 in file "BQ76920.c"
 16725 ;; Parameters:    Size  Location     Type
 16726 ;;  enable          2    0[BANK0 ] unsigned int 
 16727 ;; Auto vars:     Size  Location     Type
 16728 ;;  sys_ctrl2       1   11[COMMON] unsigned char 
 16729 ;; Return value:  Size  Location     Type
 16730 ;;                  1    wreg      void 
 16731 ;; Registers used:
 16732 ;;		wreg, status,2, status,0, pclath, cstack
 16733 ;; Tracked objects:
 16734 ;;		On entry : 0/0
 16735 ;;		On exit  : 0/0
 16736 ;;		Unchanged: 0/0
 16737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16738 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16739 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16740 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16741 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16742 ;;Total ram usage:        5 bytes
 16743 ;; Hardware stack levels used:    1
 16744 ;; Hardware stack levels required when called:    3
 16745 ;; This function calls:
 16746 ;;		_I2C_writeRegister
 16747 ;;		_readRegister
 16748 ;; This function is called by:
 16749 ;;		_AFE_UPDATE
 16750 ;; This function uses a non-reentrant model
 16751 ;;
 16752                           
 16753                           
 16754                           ;psect for function _enableDischarging
 16755  350B                     _enableDischarging:	
 16756                           
 16757                           ;BQ76920.c: 290:     uint8_t sys_ctrl2;;BQ76920.c: 291:     sys_ctrl2 = readRegister(0x1
      +                          8, 0x05);
 16758                           
 16759                           ;incstack = 0
 16760                           ; Regs used in _enableDischarging: [wreg+status,2+status,0+pclath+cstack]
 16761  350B  3018               	movlw	24
 16762  350C  00F5               	movwf	readRegister@slaveAddress
 16763  350D  3000               	movlw	0
 16764  350E  00F6               	movwf	readRegister@slaveAddress+1
 16765  350F  3005               	movlw	5
 16766  3510  00F7               	movwf	readRegister@regAddress
 16767  3511  3000               	movlw	0
 16768  3512  00F8               	movwf	readRegister@regAddress+1
 16769  3513  31B4  249E  31B5   	fcall	_readRegister
 16770  3516  0875               	movf	?_readRegister,w
 16771  3517  0020               	movlb	0	; select bank0
 16772  3518  00A2               	movwf	??_enableDischarging
 16773  3519  0822               	movf	??_enableDischarging,w
 16774  351A  00FB               	movwf	enableDischarging@sys_ctrl2
 16775                           
 16776                           ;BQ76920.c: 292:     if(enable){
 16777  351B  0820               	movf	enableDischarging@enable,w
 16778  351C  0421               	iorwf	enableDischarging@enable+1,w
 16779  351D  1903               	btfsc	3,2
 16780  351E  2D2F               	goto	l7633
 16781                           
 16782                           ;BQ76920.c: 293:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 | 0x02);
 16783  351F  3018               	movlw	24
 16784  3520  00F5               	movwf	I2C_writeRegister@slaveAddress
 16785  3521  3000               	movlw	0
 16786  3522  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16787  3523  3005               	movlw	5
 16788  3524  00F7               	movwf	I2C_writeRegister@regAddress
 16789  3525  3000               	movlw	0
 16790  3526  00F8               	movwf	I2C_writeRegister@regAddress+1
 16791  3527  3002               	movlw	2
 16792  3528  047B               	iorwf	enableDischarging@sys_ctrl2,w
 16793  3529  00F9               	movwf	I2C_writeRegister@data
 16794  352A  3000               	movlw	0
 16795  352B  00FA               	movwf	I2C_writeRegister@data+1
 16796  352C  31B3  231C         	fcall	_I2C_writeRegister
 16797                           
 16798                           ;BQ76920.c: 294:     }else{
 16799  352E  0008               	return
 16800  352F                     l7633:	
 16801                           
 16802                           ;BQ76920.c: 295:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 & ~(0x02));
 16803  352F  3018               	movlw	24
 16804  3530  00F5               	movwf	I2C_writeRegister@slaveAddress
 16805  3531  3000               	movlw	0
 16806  3532  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16807  3533  3005               	movlw	5
 16808  3534  00F7               	movwf	I2C_writeRegister@regAddress
 16809  3535  3000               	movlw	0
 16810  3536  00F8               	movwf	I2C_writeRegister@regAddress+1
 16811  3537  087B               	movf	enableDischarging@sys_ctrl2,w
 16812  3538  39FD               	andlw	253
 16813  3539  00A2               	movwf	??_enableDischarging
 16814  353A  01A3               	clrf	??_enableDischarging+1
 16815  353B  0822               	movf	??_enableDischarging,w
 16816  353C  00F9               	movwf	I2C_writeRegister@data
 16817  353D  0823               	movf	??_enableDischarging+1,w
 16818  353E  00FA               	movwf	I2C_writeRegister@data+1
 16819  353F  31B3  231C         	fcall	_I2C_writeRegister
 16820  3541  0008               	return
 16821  3542                     __end_of_enableDischarging:	
 16822                           
 16823                           	psect	text54
 16824  34D4                     __ptext54:	
 16825 ;; *************** function _enableCharging *****************
 16826 ;; Defined at:
 16827 ;;		line 299 in file "BQ76920.c"
 16828 ;; Parameters:    Size  Location     Type
 16829 ;;  enable          2    0[BANK0 ] unsigned int 
 16830 ;; Auto vars:     Size  Location     Type
 16831 ;;  sys_ctrl2       1   11[COMMON] unsigned char 
 16832 ;; Return value:  Size  Location     Type
 16833 ;;                  1    wreg      void 
 16834 ;; Registers used:
 16835 ;;		wreg, status,2, status,0, pclath, cstack
 16836 ;; Tracked objects:
 16837 ;;		On entry : 0/0
 16838 ;;		On exit  : 0/0
 16839 ;;		Unchanged: 0/0
 16840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16841 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16842 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16843 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16844 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16845 ;;Total ram usage:        5 bytes
 16846 ;; Hardware stack levels used:    1
 16847 ;; Hardware stack levels required when called:    3
 16848 ;; This function calls:
 16849 ;;		_I2C_writeRegister
 16850 ;;		_readRegister
 16851 ;; This function is called by:
 16852 ;;		_AFE_UPDATE
 16853 ;; This function uses a non-reentrant model
 16854 ;;
 16855                           
 16856                           
 16857                           ;psect for function _enableCharging
 16858  34D4                     _enableCharging:	
 16859                           
 16860                           ;BQ76920.c: 300:     uint8_t sys_ctrl2;;BQ76920.c: 301:     sys_ctrl2 = readRegister(0x1
      +                          8, 0x05);
 16861                           
 16862                           ;incstack = 0
 16863                           ; Regs used in _enableCharging: [wreg+status,2+status,0+pclath+cstack]
 16864  34D4  3018               	movlw	24
 16865  34D5  00F5               	movwf	readRegister@slaveAddress
 16866  34D6  3000               	movlw	0
 16867  34D7  00F6               	movwf	readRegister@slaveAddress+1
 16868  34D8  3005               	movlw	5
 16869  34D9  00F7               	movwf	readRegister@regAddress
 16870  34DA  3000               	movlw	0
 16871  34DB  00F8               	movwf	readRegister@regAddress+1
 16872  34DC  31B4  249E  31B4   	fcall	_readRegister
 16873  34DF  0875               	movf	?_readRegister,w
 16874  34E0  0020               	movlb	0	; select bank0
 16875  34E1  00A2               	movwf	??_enableCharging
 16876  34E2  0822               	movf	??_enableCharging,w
 16877  34E3  00FB               	movwf	enableCharging@sys_ctrl2
 16878                           
 16879                           ;BQ76920.c: 302:     if(enable){
 16880  34E4  0820               	movf	enableCharging@enable,w
 16881  34E5  0421               	iorwf	enableCharging@enable+1,w
 16882  34E6  1903               	btfsc	3,2
 16883  34E7  2CF8               	goto	l7641
 16884                           
 16885                           ;BQ76920.c: 303:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 | 0x01);
 16886  34E8  3018               	movlw	24
 16887  34E9  00F5               	movwf	I2C_writeRegister@slaveAddress
 16888  34EA  3000               	movlw	0
 16889  34EB  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16890  34EC  3005               	movlw	5
 16891  34ED  00F7               	movwf	I2C_writeRegister@regAddress
 16892  34EE  3000               	movlw	0
 16893  34EF  00F8               	movwf	I2C_writeRegister@regAddress+1
 16894  34F0  3001               	movlw	1
 16895  34F1  047B               	iorwf	enableCharging@sys_ctrl2,w
 16896  34F2  00F9               	movwf	I2C_writeRegister@data
 16897  34F3  3000               	movlw	0
 16898  34F4  00FA               	movwf	I2C_writeRegister@data+1
 16899  34F5  31B3  231C         	fcall	_I2C_writeRegister
 16900                           
 16901                           ;BQ76920.c: 304:     }else{
 16902  34F7  0008               	return
 16903  34F8                     l7641:	
 16904                           
 16905                           ;BQ76920.c: 305:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 & ~(0x01));
 16906  34F8  3018               	movlw	24
 16907  34F9  00F5               	movwf	I2C_writeRegister@slaveAddress
 16908  34FA  3000               	movlw	0
 16909  34FB  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16910  34FC  3005               	movlw	5
 16911  34FD  00F7               	movwf	I2C_writeRegister@regAddress
 16912  34FE  3000               	movlw	0
 16913  34FF  00F8               	movwf	I2C_writeRegister@regAddress+1
 16914  3500  087B               	movf	enableCharging@sys_ctrl2,w
 16915  3501  39FE               	andlw	254
 16916  3502  00A2               	movwf	??_enableCharging
 16917  3503  01A3               	clrf	??_enableCharging+1
 16918  3504  0822               	movf	??_enableCharging,w
 16919  3505  00F9               	movwf	I2C_writeRegister@data
 16920  3506  0823               	movf	??_enableCharging+1,w
 16921  3507  00FA               	movwf	I2C_writeRegister@data+1
 16922  3508  31B3  231C         	fcall	_I2C_writeRegister
 16923  350A  0008               	return
 16924  350B                     __end_of_enableCharging:	
 16925                           
 16926                           	psect	text55
 16927  331C                     __ptext55:	
 16928 ;; *************** function _I2C_writeRegister *****************
 16929 ;; Defined at:
 16930 ;;		line 104 in file "I2C.c"
 16931 ;; Parameters:    Size  Location     Type
 16932 ;;  slaveAddress    2    5[COMMON] int 
 16933 ;;  regAddress      2    7[COMMON] int 
 16934 ;;  data            2    9[COMMON] int 
 16935 ;; Auto vars:     Size  Location     Type
 16936 ;;		None
 16937 ;; Return value:  Size  Location     Type
 16938 ;;                  1    wreg      void 
 16939 ;; Registers used:
 16940 ;;		wreg, status,2, status,0, pclath, cstack
 16941 ;; Tracked objects:
 16942 ;;		On entry : 0/0
 16943 ;;		On exit  : 0/0
 16944 ;;		Unchanged: 0/0
 16945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16946 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16949 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16950 ;;Total ram usage:        6 bytes
 16951 ;; Hardware stack levels used:    1
 16952 ;; Hardware stack levels required when called:    2
 16953 ;; This function calls:
 16954 ;;		_send_I2C_controlByte
 16955 ;;		_send_I2C_data
 16956 ;;		_send_I2C_startBit
 16957 ;;		_send_I2C_stopBit
 16958 ;; This function is called by:
 16959 ;;		_beginAFEcommunication
 16960 ;;		_setShortCircuitProtection
 16961 ;;		_setOverCurrentDischargeProtection
 16962 ;;		_setCellUndervoltageProtection
 16963 ;;		_setCellOvervoltageProtection
 16964 ;;		_updateCurrent
 16965 ;;		_enableDischarging
 16966 ;;		_enableCharging
 16967 ;; This function uses a non-reentrant model
 16968 ;;
 16969                           
 16970                           
 16971                           ;psect for function _I2C_writeRegister
 16972  331C                     _I2C_writeRegister:	
 16973                           
 16974                           ;I2C.c: 105:     send_I2C_startBit();
 16975                           
 16976                           ;incstack = 0
 16977                           ; Regs used in _I2C_writeRegister: [wreg+status,2+status,0+pclath+cstack]
 16978  331C  31B1  2185  31B3   	fcall	_send_I2C_startBit
 16979                           
 16980                           ;I2C.c: 106:     send_I2C_controlByte(slaveAddress, 0);
 16981  331F  0876               	movf	I2C_writeRegister@slaveAddress+1,w
 16982  3320  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 16983  3321  0875               	movf	I2C_writeRegister@slaveAddress,w
 16984  3322  00F1               	movwf	send_I2C_controlByte@BlockAddress
 16985  3323  3000               	movlw	0
 16986  3324  00F3               	movwf	send_I2C_controlByte@RW_bit
 16987  3325  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 16988  3326  31B1  21B0  31B3   	fcall	_send_I2C_controlByte
 16989                           
 16990                           ;I2C.c: 107:     send_I2C_data(regAddress);
 16991  3329  0878               	movf	I2C_writeRegister@regAddress+1,w
 16992  332A  00F2               	movwf	send_I2C_data@databyte+1
 16993  332B  0877               	movf	I2C_writeRegister@regAddress,w
 16994  332C  00F1               	movwf	send_I2C_data@databyte
 16995  332D  31B1  21A7  31B3   	fcall	_send_I2C_data
 16996                           
 16997                           ;I2C.c: 108:     send_I2C_data(data);
 16998  3330  087A               	movf	I2C_writeRegister@data+1,w
 16999  3331  00F2               	movwf	send_I2C_data@databyte+1
 17000  3332  0879               	movf	I2C_writeRegister@data,w
 17001  3333  00F1               	movwf	send_I2C_data@databyte
 17002  3334  31B1  21A7  31B3   	fcall	_send_I2C_data
 17003                           
 17004                           ;I2C.c: 109:     send_I2C_stopBit();
 17005  3337  31B1  218D         	fcall	_send_I2C_stopBit
 17006  3339  0008               	return
 17007  333A                     __end_of_I2C_writeRegister:	
 17008                           
 17009                           	psect	text56
 17010  2061                     __ptext56:	
 17011 ;; *************** function _coulomb_counter *****************
 17012 ;; Defined at:
 17013 ;;		line 38 in file "algorithms.c"
 17014 ;; Parameters:    Size  Location     Type
 17015 ;;		None
 17016 ;; Auto vars:     Size  Location     Type
 17017 ;;  i               2   17[BANK1 ] int 
 17018 ;; Return value:  Size  Location     Type
 17019 ;;                  1    wreg      void 
 17020 ;; Registers used:
 17021 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17022 ;; Tracked objects:
 17023 ;;		On entry : 0/0
 17024 ;;		On exit  : 0/0
 17025 ;;		Unchanged: 0/0
 17026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17028 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17029 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17030 ;;      Totals:         0       2       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17031 ;;Total ram usage:        4 bytes
 17032 ;; Hardware stack levels used:    1
 17033 ;; Hardware stack levels required when called:    3
 17034 ;; This function calls:
 17035 ;;		___fldiv
 17036 ;;		___flmul
 17037 ;;		___flsub
 17038 ;;		___fltol
 17039 ;;		___xxtofl
 17040 ;; This function is called by:
 17041 ;;		_AFE_UPDATE
 17042 ;; This function uses a non-reentrant model
 17043 ;;
 17044                           
 17045                           
 17046                           ;psect for function _coulomb_counter
 17047  2061                     _coulomb_counter:	
 17048                           
 17049                           ;algorithms.c: 39:     for(int i = 0; i<5;i++){
 17050                           
 17051                           ;incstack = 0
 17052                           ; Regs used in _coulomb_counter: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17053  2061  0021               	movlb	1	; select bank1
 17054  2062  01B1               	clrf	coulomb_counter@i^(0+128)
 17055  2063  01B2               	clrf	(coulomb_counter@i+1)^(0+128)
 17056  2064                     l6109:	
 17057                           
 17058                           ;algorithms.c: 40:        cellCharge[i] = cellCharge[i] - (batCurrent * (5000/ 3600000.0
      +                          ));
 17059  2064  0021               	movlb	1	; select bank1
 17060  2065  3531               	lslf	coulomb_counter@i^(0+128),w
 17061  2066  3E20               	addlw	(low (_cellCharge| (0+512)))& (0+255)
 17062  2067  0086               	movwf	6
 17063  2068  3002               	movlw	2	; select bank4/5
 17064  2069  0087               	movwf	7
 17065  206A  3F40               	moviw [0]fsr1
 17066  206B  0020               	movlb	0	; select bank0
 17067  206C  00EE               	movwf	??_coulomb_counter
 17068  206D  3F41               	moviw [1]fsr1
 17069  206E  00EF               	movwf	??_coulomb_counter+1
 17070  206F  086E               	movf	??_coulomb_counter,w
 17071  2070  00F1               	movwf	___xxtofl@val
 17072  2071  086F               	movf	??_coulomb_counter+1,w
 17073  2072  00F2               	movwf	___xxtofl@val+1
 17074  2073  0D89               	rlf	9,f
 17075  2074  3B89               	subwfb	9,f
 17076  2075  0989               	comf	9,f
 17077  2076  00F3               	movwf	___xxtofl@val+2
 17078  2077  00F4               	movwf	___xxtofl@val+3
 17079  2078  3001               	movlw	1
 17080  2079  31AA  2248  31A0   	fcall	___xxtofl
 17081  207C  0874               	movf	?___xxtofl+3,w
 17082  207D  0021               	movlb	1	; select bank1
 17083  207E  00A7               	movwf	(___flsub@b+3)^(0+128)
 17084  207F  0873               	movf	?___xxtofl+2,w
 17085  2080  00A6               	movwf	(___flsub@b+2)^(0+128)
 17086  2081  0872               	movf	?___xxtofl+1,w
 17087  2082  00A5               	movwf	(___flsub@b+1)^(0+128)
 17088  2083  0871               	movf	?___xxtofl,w
 17089  2084  00A4               	movwf	___flsub@b^(0+128)
 17090  2085  0023               	movlb	3	; select bank3
 17091  2086  0843               	movf	(_batCurrent+3)^(0+384),w
 17092  2087  00F4               	movwf	___xxtofl@val+3
 17093  2088  0842               	movf	(_batCurrent+2)^(0+384),w
 17094  2089  00F3               	movwf	___xxtofl@val+2
 17095  208A  0841               	movf	(_batCurrent+1)^(0+384),w
 17096  208B  00F2               	movwf	___xxtofl@val+1
 17097  208C  0840               	movf	_batCurrent^(0+384),w
 17098  208D  00F1               	movwf	___xxtofl@val
 17099  208E  3001               	movlw	1
 17100  208F  31AA  2248  31A0   	fcall	___xxtofl
 17101  2092  0874               	movf	?___xxtofl+3,w
 17102  2093  0020               	movlb	0	; select bank0
 17103  2094  00AD               	movwf	___flmul@a+3
 17104  2095  0873               	movf	?___xxtofl+2,w
 17105  2096  00AC               	movwf	___flmul@a+2
 17106  2097  0872               	movf	?___xxtofl+1,w
 17107  2098  00AB               	movwf	___flmul@a+1
 17108  2099  0871               	movf	?___xxtofl,w
 17109  209A  00AA               	movwf	___flmul@a
 17110  209B  303A               	movlw	58
 17111  209C  00A9               	movwf	___flmul@b+3
 17112  209D  30B6               	movlw	182
 17113  209E  00A8               	movwf	___flmul@b+2
 17114  209F  300B               	movlw	11
 17115  20A0  00A7               	movwf	___flmul@b+1
 17116  20A1  3061               	movlw	97
 17117  20A2  00A6               	movwf	___flmul@b
 17118  20A3  3190  2023  31A0   	fcall	___flmul
 17119  20A6  0020               	movlb	0	; select bank0
 17120  20A7  0829               	movf	?___flmul+3,w
 17121  20A8  0021               	movlb	1	; select bank1
 17122  20A9  00A3               	movwf	(___flsub@a+3)^(0+128)
 17123  20AA  0020               	movlb	0	; select bank0
 17124  20AB  0828               	movf	?___flmul+2,w
 17125  20AC  0021               	movlb	1	; select bank1
 17126  20AD  00A2               	movwf	(___flsub@a+2)^(0+128)
 17127  20AE  0020               	movlb	0	; select bank0
 17128  20AF  0827               	movf	?___flmul+1,w
 17129  20B0  0021               	movlb	1	; select bank1
 17130  20B1  00A1               	movwf	(___flsub@a+1)^(0+128)
 17131  20B2  0020               	movlb	0	; select bank0
 17132  20B3  0826               	movf	?___flmul,w
 17133  20B4  0021               	movlb	1	; select bank1
 17134  20B5  00A0               	movwf	___flsub@a^(0+128)
 17135  20B6  31B4  2469  31A0   	fcall	___flsub
 17136  20B9  0021               	movlb	1	; select bank1
 17137  20BA  0823               	movf	(?___flsub+3)^(0+128),w
 17138  20BB  00AB               	movwf	(___fltol@f1+3)^(0+128)
 17139  20BC  0822               	movf	(?___flsub+2)^(0+128),w
 17140  20BD  00AA               	movwf	(___fltol@f1+2)^(0+128)
 17141  20BE  0821               	movf	(?___flsub+1)^(0+128),w
 17142  20BF  00A9               	movwf	(___fltol@f1+1)^(0+128)
 17143  20C0  0820               	movf	?___flsub^(0+128),w
 17144  20C1  00A8               	movwf	___fltol@f1^(0+128)
 17145  20C2  31B6  26B9  31A0   	fcall	___fltol
 17146  20C5  0021               	movlb	1	; select bank1
 17147  20C6  3531               	lslf	coulomb_counter@i^(0+128),w
 17148  20C7  3E20               	addlw	(low (_cellCharge| (0+512)))& (0+255)
 17149  20C8  0086               	movwf	6
 17150  20C9  3002               	movlw	2	; select bank4/5
 17151  20CA  0087               	movwf	7
 17152  20CB  0828               	movf	?___fltol^(0+128),w
 17153  20CC  3FC0               	movwi [0]fsr1
 17154  20CD  0829               	movf	(?___fltol+1)^(0+128),w
 17155  20CE  3FC1               	movwi [1]fsr1
 17156                           
 17157                           ;algorithms.c: 41:        cellSOC[i] = ((cellCharge[i] * 100.0 )/samsung_cell_max_charge
      +                          );
 17158  20CF  3531               	lslf	coulomb_counter@i^(0+128),w
 17159  20D0  3E20               	addlw	(low (_cellCharge| (0+512)))& (0+255)
 17160  20D1  0086               	movwf	6
 17161  20D2  3002               	movlw	2	; select bank4/5
 17162  20D3  0087               	movwf	7
 17163  20D4  3F40               	moviw [0]fsr1
 17164  20D5  0020               	movlb	0	; select bank0
 17165  20D6  00EE               	movwf	??_coulomb_counter
 17166  20D7  3F41               	moviw [1]fsr1
 17167  20D8  00EF               	movwf	??_coulomb_counter+1
 17168  20D9  086E               	movf	??_coulomb_counter,w
 17169  20DA  00F1               	movwf	___xxtofl@val
 17170  20DB  086F               	movf	??_coulomb_counter+1,w
 17171  20DC  00F2               	movwf	___xxtofl@val+1
 17172  20DD  0D89               	rlf	9,f
 17173  20DE  3B89               	subwfb	9,f
 17174  20DF  0989               	comf	9,f
 17175  20E0  00F3               	movwf	___xxtofl@val+2
 17176  20E1  00F4               	movwf	___xxtofl@val+3
 17177  20E2  3001               	movlw	1
 17178  20E3  31AA  2248  31A0   	fcall	___xxtofl
 17179  20E6  0874               	movf	?___xxtofl+3,w
 17180  20E7  0020               	movlb	0	; select bank0
 17181  20E8  00AD               	movwf	___flmul@a+3
 17182  20E9  0873               	movf	?___xxtofl+2,w
 17183  20EA  00AC               	movwf	___flmul@a+2
 17184  20EB  0872               	movf	?___xxtofl+1,w
 17185  20EC  00AB               	movwf	___flmul@a+1
 17186  20ED  0871               	movf	?___xxtofl,w
 17187  20EE  00AA               	movwf	___flmul@a
 17188  20EF  3042               	movlw	66
 17189  20F0  00A9               	movwf	___flmul@b+3
 17190  20F1  30C8               	movlw	200
 17191  20F2  00A8               	movwf	___flmul@b+2
 17192  20F3  3000               	movlw	0
 17193  20F4  00A7               	movwf	___flmul@b+1
 17194  20F5  3000               	movlw	0
 17195  20F6  00A6               	movwf	___flmul@b
 17196  20F7  3190  2023  31A0   	fcall	___flmul
 17197  20FA  0020               	movlb	0	; select bank0
 17198  20FB  0829               	movf	?___flmul+3,w
 17199  20FC  00C7               	movwf	___fldiv@b+3
 17200  20FD  0828               	movf	?___flmul+2,w
 17201  20FE  00C6               	movwf	___fldiv@b+2
 17202  20FF  0827               	movf	?___flmul+1,w
 17203  2100  00C5               	movwf	___fldiv@b+1
 17204  2101  0826               	movf	?___flmul,w
 17205  2102  00C4               	movwf	___fldiv@b
 17206  2103  3045               	movlw	69
 17207  2104  00C3               	movwf	___fldiv@a+3
 17208  2105  301C               	movlw	28
 17209  2106  00C2               	movwf	___fldiv@a+2
 17210  2107  3040               	movlw	64
 17211  2108  00C1               	movwf	___fldiv@a+1
 17212  2109  3000               	movlw	0
 17213  210A  00C0               	movwf	___fldiv@a
 17214  210B  319C  24E2  31A0   	fcall	___fldiv
 17215  210E  0020               	movlb	0	; select bank0
 17216  210F  0843               	movf	?___fldiv+3,w
 17217  2110  0021               	movlb	1	; select bank1
 17218  2111  00AB               	movwf	(___fltol@f1+3)^(0+128)
 17219  2112  0020               	movlb	0	; select bank0
 17220  2113  0842               	movf	?___fldiv+2,w
 17221  2114  0021               	movlb	1	; select bank1
 17222  2115  00AA               	movwf	(___fltol@f1+2)^(0+128)
 17223  2116  0020               	movlb	0	; select bank0
 17224  2117  0841               	movf	?___fldiv+1,w
 17225  2118  0021               	movlb	1	; select bank1
 17226  2119  00A9               	movwf	(___fltol@f1+1)^(0+128)
 17227  211A  0020               	movlb	0	; select bank0
 17228  211B  0840               	movf	?___fldiv,w
 17229  211C  0021               	movlb	1	; select bank1
 17230  211D  00A8               	movwf	___fltol@f1^(0+128)
 17231  211E  31B6  26B9  31A0   	fcall	___fltol
 17232  2121  0021               	movlb	1	; select bank1
 17233  2122  3531               	lslf	coulomb_counter@i^(0+128),w
 17234  2123  3EA0               	addlw	(low (_cellSOC| (0+256)))& (0+255)
 17235  2124  0086               	movwf	6
 17236  2125  3001               	movlw	1	; select bank3/4
 17237  2126  0087               	movwf	7
 17238  2127  0828               	movf	?___fltol^(0+128),w
 17239  2128  3FC0               	movwi [0]fsr1
 17240  2129  0829               	movf	(?___fltol+1)^(0+128),w
 17241  212A  3FC1               	movwi [1]fsr1
 17242                           
 17243                           ;algorithms.c: 42:      }
 17244  212B  3001               	movlw	1
 17245  212C  07B1               	addwf	coulomb_counter@i^(0+128),f
 17246  212D  3000               	movlw	0
 17247  212E  3DB2               	addwfc	(coulomb_counter@i+1)^(0+128),f
 17248  212F  0832               	movf	(coulomb_counter@i+1)^(0+128),w
 17249  2130  3A80               	xorlw	128
 17250  2131  0020               	movlb	0	; select bank0
 17251  2132  00EE               	movwf	??_coulomb_counter
 17252  2133  3080               	movlw	128
 17253  2134  026E               	subwf	??_coulomb_counter,w
 17254  2135  1D03               	skipz
 17255  2136  293A               	goto	u7615
 17256  2137  3005               	movlw	5
 17257  2138  0021               	movlb	1	; select bank1
 17258  2139  0231               	subwf	coulomb_counter@i^(0+128),w
 17259  213A                     u7615:	
 17260  213A  1803               	btfsc	3,0
 17261  213B  0008               	return
 17262  213C  2864               	goto	l6109
 17263  213D                     __end_of_coulomb_counter:	
 17264                           
 17265                           	psect	text57
 17266  3469                     __ptext57:	
 17267 ;; *************** function ___flsub *****************
 17268 ;; Defined at:
 17269 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 17270 ;; Parameters:    Size  Location     Type
 17271 ;;  a               4    0[BANK1 ] void 
 17272 ;;  b               4    4[BANK1 ] void 
 17273 ;; Auto vars:     Size  Location     Type
 17274 ;;		None
 17275 ;; Return value:  Size  Location     Type
 17276 ;;                  4    0[BANK1 ] void 
 17277 ;; Registers used:
 17278 ;;		wreg, status,2, status,0, pclath, cstack
 17279 ;; Tracked objects:
 17280 ;;		On entry : 0/0
 17281 ;;		On exit  : 0/0
 17282 ;;		Unchanged: 0/0
 17283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17284 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17287 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17288 ;;Total ram usage:        8 bytes
 17289 ;; Hardware stack levels used:    1
 17290 ;; Hardware stack levels required when called:    2
 17291 ;; This function calls:
 17292 ;;		___fladd
 17293 ;; This function is called by:
 17294 ;;		_updateTemperatures
 17295 ;;		_coulomb_counter
 17296 ;;		_logf
 17297 ;; This function uses a non-reentrant model
 17298 ;;
 17299                           
 17300                           
 17301                           ;psect for function ___flsub
 17302  3469                     ___flsub:	
 17303                           
 17304                           ;incstack = 0
 17305                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 17306  3469  3080               	movlw	128
 17307  346A  0021               	movlb	1	; select bank1
 17308  346B  06A3               	xorwf	(___flsub@a+3)^(0+128),f
 17309  346C  0827               	movf	(___flsub@b+3)^(0+128),w
 17310  346D  0020               	movlb	0	; select bank0
 17311  346E  00DD               	movwf	___fladd@b+3
 17312  346F  0021               	movlb	1	; select bank1
 17313  3470  0826               	movf	(___flsub@b+2)^(0+128),w
 17314  3471  0020               	movlb	0	; select bank0
 17315  3472  00DC               	movwf	___fladd@b+2
 17316  3473  0021               	movlb	1	; select bank1
 17317  3474  0825               	movf	(___flsub@b+1)^(0+128),w
 17318  3475  0020               	movlb	0	; select bank0
 17319  3476  00DB               	movwf	___fladd@b+1
 17320  3477  0021               	movlb	1	; select bank1
 17321  3478  0824               	movf	___flsub@b^(0+128),w
 17322  3479  0020               	movlb	0	; select bank0
 17323  347A  00DA               	movwf	___fladd@b
 17324  347B  0021               	movlb	1	; select bank1
 17325  347C  0823               	movf	(___flsub@a+3)^(0+128),w
 17326  347D  0020               	movlb	0	; select bank0
 17327  347E  00E1               	movwf	___fladd@a+3
 17328  347F  0021               	movlb	1	; select bank1
 17329  3480  0822               	movf	(___flsub@a+2)^(0+128),w
 17330  3481  0020               	movlb	0	; select bank0
 17331  3482  00E0               	movwf	___fladd@a+2
 17332  3483  0021               	movlb	1	; select bank1
 17333  3484  0821               	movf	(___flsub@a+1)^(0+128),w
 17334  3485  0020               	movlb	0	; select bank0
 17335  3486  00DF               	movwf	___fladd@a+1
 17336  3487  0021               	movlb	1	; select bank1
 17337  3488  0820               	movf	___flsub@a^(0+128),w
 17338  3489  0020               	movlb	0	; select bank0
 17339  348A  00DE               	movwf	___fladd@a
 17340  348B  3185  25FE         	fcall	___fladd
 17341  348D  0020               	movlb	0	; select bank0
 17342  348E  085D               	movf	?___fladd+3,w
 17343  348F  0021               	movlb	1	; select bank1
 17344  3490  00A3               	movwf	(?___flsub+3)^(0+128)
 17345  3491  0020               	movlb	0	; select bank0
 17346  3492  085C               	movf	?___fladd+2,w
 17347  3493  0021               	movlb	1	; select bank1
 17348  3494  00A2               	movwf	(?___flsub+2)^(0+128)
 17349  3495  0020               	movlb	0	; select bank0
 17350  3496  085B               	movf	?___fladd+1,w
 17351  3497  0021               	movlb	1	; select bank1
 17352  3498  00A1               	movwf	(?___flsub+1)^(0+128)
 17353  3499  0020               	movlb	0	; select bank0
 17354  349A  085A               	movf	?___fladd,w
 17355  349B  0021               	movlb	1	; select bank1
 17356  349C  00A0               	movwf	?___flsub^(0+128)
 17357  349D  0008               	return
 17358  349E                     __end_of___flsub:	
 17359                           
 17360                           	psect	text58
 17361  05FE                     __ptext58:	
 17362 ;; *************** function ___fladd *****************
 17363 ;; Defined at:
 17364 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 17365 ;; Parameters:    Size  Location     Type
 17366 ;;  b               4   58[BANK0 ] void 
 17367 ;;  a               4   62[BANK0 ] void 
 17368 ;; Auto vars:     Size  Location     Type
 17369 ;;  grs             1   77[BANK0 ] unsigned char 
 17370 ;;  bexp            1   76[BANK0 ] unsigned char 
 17371 ;;  aexp            1   75[BANK0 ] unsigned char 
 17372 ;;  signs           1   74[BANK0 ] unsigned char 
 17373 ;; Return value:  Size  Location     Type
 17374 ;;                  4   58[BANK0 ] unsigned char 
 17375 ;; Registers used:
 17376 ;;		wreg, status,2, status,0
 17377 ;; Tracked objects:
 17378 ;;		On entry : 0/0
 17379 ;;		On exit  : 0/0
 17380 ;;		Unchanged: 0/0
 17381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17382 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17383 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17384 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17385 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17386 ;;Total ram usage:       20 bytes
 17387 ;; Hardware stack levels used:    1
 17388 ;; Hardware stack levels required when called:    1
 17389 ;; This function calls:
 17390 ;;		Nothing
 17391 ;; This function is called by:
 17392 ;;		_updateVoltages
 17393 ;;		_updateTemperatures
 17394 ;;		___flsub
 17395 ;;		_logf
 17396 ;; This function uses a non-reentrant model
 17397 ;;
 17398                           
 17399                           
 17400                           ;psect for function ___fladd
 17401  05FE                     ___fladd:	
 17402                           
 17403                           ;incstack = 0
 17404                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 17405  05FE  0020               	movlb	0	; select bank0
 17406  05FF  085D               	movf	___fladd@b+3,w
 17407  0600  3980               	andlw	128
 17408  0601  00E2               	movwf	??___fladd
 17409  0602  0862               	movf	??___fladd,w
 17410  0603  00EA               	movwf	___fladd@signs
 17411  0604  355D               	lslf	___fladd@b+3,w
 17412  0605  00E2               	movwf	??___fladd
 17413  0606  0862               	movf	??___fladd,w
 17414  0607  00EC               	movwf	___fladd@bexp
 17415  0608  1BDC               	btfsc	___fladd@b+2,7
 17416  0609  146C               	bsf	___fladd@bexp,0
 17417  060A  086C               	movf	___fladd@bexp,w
 17418  060B  1903               	btfsc	3,2
 17419  060C  2E1B               	goto	l5073
 17420  060D  0A6C               	incf	___fladd@bexp,w
 17421  060E  1D03               	btfss	3,2
 17422  060F  2E18               	goto	l5069
 17423  0610  3000               	movlw	0
 17424  0611  00DD               	movwf	___fladd@b+3
 17425  0612  3000               	movlw	0
 17426  0613  00DC               	movwf	___fladd@b+2
 17427  0614  3000               	movlw	0
 17428  0615  00DB               	movwf	___fladd@b+1
 17429  0616  3000               	movlw	0
 17430  0617  00DA               	movwf	___fladd@b
 17431  0618                     l5069:	
 17432  0618  17DC               	bsf	___fladd@b+2,7
 17433  0619  01DD               	clrf	___fladd@b+3
 17434  061A  2E23               	goto	l5075
 17435  061B                     l5073:	
 17436  061B  3000               	movlw	0
 17437  061C  00DD               	movwf	___fladd@b+3
 17438  061D  3000               	movlw	0
 17439  061E  00DC               	movwf	___fladd@b+2
 17440  061F  3000               	movlw	0
 17441  0620  00DB               	movwf	___fladd@b+1
 17442  0621  3000               	movlw	0
 17443  0622  00DA               	movwf	___fladd@b
 17444  0623                     l5075:	
 17445  0623  0861               	movf	___fladd@a+3,w
 17446  0624  3980               	andlw	128
 17447  0625  00E2               	movwf	??___fladd
 17448  0626  0862               	movf	??___fladd,w
 17449  0627  00EB               	movwf	___fladd@aexp
 17450  0628  086B               	movf	___fladd@aexp,w
 17451  0629  066A               	xorwf	___fladd@signs,w
 17452  062A  1D03               	btfss	3,2
 17453  062B  176A               	bsf	___fladd@signs,6
 17454  062C  3561               	lslf	___fladd@a+3,w
 17455  062D  00E2               	movwf	??___fladd
 17456  062E  0862               	movf	??___fladd,w
 17457  062F  00EB               	movwf	___fladd@aexp
 17458  0630  1BE0               	btfsc	___fladd@a+2,7
 17459  0631  146B               	bsf	___fladd@aexp,0
 17460  0632  086B               	movf	___fladd@aexp,w
 17461  0633  1903               	btfsc	3,2
 17462  0634  2E43               	goto	l5097
 17463  0635  0A6B               	incf	___fladd@aexp,w
 17464  0636  1D03               	btfss	3,2
 17465  0637  2E40               	goto	l5093
 17466  0638  3000               	movlw	0
 17467  0639  00E1               	movwf	___fladd@a+3
 17468  063A  3000               	movlw	0
 17469  063B  00E0               	movwf	___fladd@a+2
 17470  063C  3000               	movlw	0
 17471  063D  00DF               	movwf	___fladd@a+1
 17472  063E  3000               	movlw	0
 17473  063F  00DE               	movwf	___fladd@a
 17474  0640                     l5093:	
 17475  0640  17E0               	bsf	___fladd@a+2,7
 17476  0641  01E1               	clrf	___fladd@a+3
 17477  0642  2E4B               	goto	l1303
 17478  0643                     l5097:	
 17479  0643  3000               	movlw	0
 17480  0644  00E1               	movwf	___fladd@a+3
 17481  0645  3000               	movlw	0
 17482  0646  00E0               	movwf	___fladd@a+2
 17483  0647  3000               	movlw	0
 17484  0648  00DF               	movwf	___fladd@a+1
 17485  0649  3000               	movlw	0
 17486  064A  00DE               	movwf	___fladd@a
 17487  064B                     l1303:	
 17488  064B  086C               	movf	___fladd@bexp,w
 17489  064C  026B               	subwf	___fladd@aexp,w
 17490  064D  1803               	skipnc
 17491  064E  2E91               	goto	l5133
 17492  064F  1F6A               	btfss	___fladd@signs,6
 17493  0650  2E55               	goto	l5103
 17494  0651  3080               	movlw	128
 17495  0652  00E2               	movwf	??___fladd
 17496  0653  0862               	movf	??___fladd,w
 17497  0654  06EA               	xorwf	___fladd@signs,f
 17498  0655                     l5103:	
 17499  0655  086C               	movf	___fladd@bexp,w
 17500  0656  00E2               	movwf	??___fladd
 17501  0657  0862               	movf	??___fladd,w
 17502  0658  00ED               	movwf	___fladd@grs
 17503  0659  086B               	movf	___fladd@aexp,w
 17504  065A  00E2               	movwf	??___fladd
 17505  065B  0862               	movf	??___fladd,w
 17506  065C  00EC               	movwf	___fladd@bexp
 17507  065D  086D               	movf	___fladd@grs,w
 17508  065E  00E2               	movwf	??___fladd
 17509  065F  0862               	movf	??___fladd,w
 17510  0660  00EB               	movwf	___fladd@aexp
 17511  0661  085A               	movf	___fladd@b,w
 17512  0662  00E2               	movwf	??___fladd
 17513  0663  0862               	movf	??___fladd,w
 17514  0664  00ED               	movwf	___fladd@grs
 17515  0665  085E               	movf	___fladd@a,w
 17516  0666  00E2               	movwf	??___fladd
 17517  0667  0862               	movf	??___fladd,w
 17518  0668  00DA               	movwf	___fladd@b
 17519  0669  086D               	movf	___fladd@grs,w
 17520  066A  00E2               	movwf	??___fladd
 17521  066B  0862               	movf	??___fladd,w
 17522  066C  00DE               	movwf	___fladd@a
 17523  066D  085B               	movf	___fladd@b+1,w
 17524  066E  00E2               	movwf	??___fladd
 17525  066F  0862               	movf	??___fladd,w
 17526  0670  00ED               	movwf	___fladd@grs
 17527  0671  085F               	movf	___fladd@a+1,w
 17528  0672  00E2               	movwf	??___fladd
 17529  0673  0862               	movf	??___fladd,w
 17530  0674  00DB               	movwf	___fladd@b+1
 17531  0675  086D               	movf	___fladd@grs,w
 17532  0676  00E2               	movwf	??___fladd
 17533  0677  0862               	movf	??___fladd,w
 17534  0678  00DF               	movwf	___fladd@a+1
 17535  0679  085C               	movf	___fladd@b+2,w
 17536  067A  00E2               	movwf	??___fladd
 17537  067B  0862               	movf	??___fladd,w
 17538  067C  00ED               	movwf	___fladd@grs
 17539  067D  0860               	movf	___fladd@a+2,w
 17540  067E  00E2               	movwf	??___fladd
 17541  067F  0862               	movf	??___fladd,w
 17542  0680  00DC               	movwf	___fladd@b+2
 17543  0681  086D               	movf	___fladd@grs,w
 17544  0682  00E2               	movwf	??___fladd
 17545  0683  0862               	movf	??___fladd,w
 17546  0684  00E0               	movwf	___fladd@a+2
 17547  0685  085D               	movf	___fladd@b+3,w
 17548  0686  00E2               	movwf	??___fladd
 17549  0687  0862               	movf	??___fladd,w
 17550  0688  00ED               	movwf	___fladd@grs
 17551  0689  0861               	movf	___fladd@a+3,w
 17552  068A  00E2               	movwf	??___fladd
 17553  068B  0862               	movf	??___fladd,w
 17554  068C  00DD               	movwf	___fladd@b+3
 17555  068D  086D               	movf	___fladd@grs,w
 17556  068E  00E2               	movwf	??___fladd
 17557  068F  0862               	movf	??___fladd,w
 17558  0690  00E1               	movwf	___fladd@a+3
 17559  0691                     l5133:	
 17560  0691  01ED               	clrf	___fladd@grs
 17561  0692  086B               	movf	___fladd@aexp,w
 17562  0693  00E2               	movwf	??___fladd
 17563  0694  01E3               	clrf	??___fladd+1
 17564  0695  0863               	movf	??___fladd+1,w
 17565  0696  00E5               	movwf	??___fladd+3
 17566  0697  086C               	movf	___fladd@bexp,w
 17567  0698  0262               	subwf	??___fladd,w
 17568  0699  00E4               	movwf	??___fladd+2
 17569  069A  1C03               	skipc
 17570  069B  03E5               	decf	??___fladd+3,f
 17571  069C  0865               	movf	??___fladd+3,w
 17572  069D  3A80               	xorlw	128
 17573  069E  00E6               	movwf	??___fladd+4
 17574  069F  3080               	movlw	128
 17575  06A0  0266               	subwf	??___fladd+4,w
 17576  06A1  1D03               	skipz
 17577  06A2  2EA5               	goto	u5845
 17578  06A3  301A               	movlw	26
 17579  06A4  0264               	subwf	??___fladd+2,w
 17580  06A5                     u5845:	
 17581  06A5  1C03               	skipc
 17582  06A6  2ED9               	goto	l5151
 17583  06A7  0020               	movlb	0	; select bank0
 17584  06A8  085D               	movf	___fladd@b+3,w
 17585  06A9  045C               	iorwf	___fladd@b+2,w
 17586  06AA  045B               	iorwf	___fladd@b+1,w
 17587  06AB  045A               	iorwf	___fladd@b,w
 17588  06AC  1903               	btfsc	3,2
 17589  06AD  2EB0               	goto	u5850
 17590  06AE  3001               	movlw	1
 17591  06AF  2EB1               	goto	u5860
 17592  06B0                     u5850:	
 17593  06B0  3000               	movlw	0
 17594  06B1                     u5860:	
 17595  06B1  00E2               	movwf	??___fladd
 17596  06B2  0862               	movf	??___fladd,w
 17597  06B3  00ED               	movwf	___fladd@grs
 17598  06B4  3000               	movlw	0
 17599  06B5  00DD               	movwf	___fladd@b+3
 17600  06B6  3000               	movlw	0
 17601  06B7  00DC               	movwf	___fladd@b+2
 17602  06B8  3000               	movlw	0
 17603  06B9  00DB               	movwf	___fladd@b+1
 17604  06BA  3000               	movlw	0
 17605  06BB  00DA               	movwf	___fladd@b
 17606  06BC  086B               	movf	___fladd@aexp,w
 17607  06BD  00E2               	movwf	??___fladd
 17608  06BE  0862               	movf	??___fladd,w
 17609  06BF  00EC               	movwf	___fladd@bexp
 17610  06C0  2EDE               	goto	l1307
 17611  06C1                     l1309:	
 17612  06C1  1C6D               	btfss	___fladd@grs,0
 17613  06C2  2EC9               	goto	l5141
 17614  06C3  366D               	lsrf	___fladd@grs,w
 17615  06C4  3801               	iorlw	1
 17616  06C5  00E2               	movwf	??___fladd
 17617  06C6  0862               	movf	??___fladd,w
 17618  06C7  00ED               	movwf	___fladd@grs
 17619  06C8  2ECB               	goto	l5143
 17620  06C9                     l5141:	
 17621  06C9  1003               	clrc
 17622  06CA  0CED               	rrf	___fladd@grs,f
 17623  06CB                     l5143:	
 17624  06CB  185A               	btfsc	___fladd@b,0
 17625  06CC  17ED               	bsf	___fladd@grs,7
 17626  06CD  3001               	movlw	1
 17627  06CE  00E2               	movwf	??___fladd
 17628  06CF                     u5895:	
 17629  06CF  37DD               	asrf	___fladd@b+3,f
 17630  06D0  0CDC               	rrf	___fladd@b+2,f
 17631  06D1  0CDB               	rrf	___fladd@b+1,f
 17632  06D2  0CDA               	rrf	___fladd@b,f
 17633  06D3  0BE2               	decfsz	??___fladd& (0+127),f
 17634  06D4  2ECF               	goto	u5895
 17635  06D5  3001               	movlw	1
 17636  06D6  00E2               	movwf	??___fladd
 17637  06D7  0862               	movf	??___fladd,w
 17638  06D8  07EC               	addwf	___fladd@bexp,f
 17639  06D9                     l5151:	
 17640  06D9  0020               	movlb	0	; select bank0
 17641  06DA  086B               	movf	___fladd@aexp,w
 17642  06DB  026C               	subwf	___fladd@bexp,w
 17643  06DC  1C03               	skipc
 17644  06DD  2EC1               	goto	l1309
 17645  06DE                     l1307:	
 17646  06DE  1B6A               	btfsc	___fladd@signs,6
 17647  06DF  2F0F               	goto	l5177
 17648  06E0  086C               	movf	___fladd@bexp,w
 17649  06E1  1D03               	btfss	3,2
 17650  06E2  2EEC               	goto	l5159
 17651  06E3  3000               	movlw	0
 17652  06E4  00DD               	movwf	?___fladd+3
 17653  06E5  3000               	movlw	0
 17654  06E6  00DC               	movwf	?___fladd+2
 17655  06E7  3000               	movlw	0
 17656  06E8  00DB               	movwf	?___fladd+1
 17657  06E9  3000               	movlw	0
 17658  06EA  00DA               	movwf	?___fladd
 17659  06EB  0008               	return
 17660  06EC                     l5159:	
 17661  06EC  085E               	movf	___fladd@a,w
 17662  06ED  07DA               	addwf	___fladd@b,f
 17663  06EE  085F               	movf	___fladd@a+1,w
 17664  06EF  3DDB               	addwfc	___fladd@b+1,f
 17665  06F0  0860               	movf	___fladd@a+2,w
 17666  06F1  3DDC               	addwfc	___fladd@b+2,f
 17667  06F2  0861               	movf	___fladd@a+3,w
 17668  06F3  3DDD               	addwfc	___fladd@b+3,f
 17669  06F4  1C5D               	btfss	___fladd@b+3,0
 17670  06F5  2F89               	goto	l5211
 17671  06F6  1C6D               	btfss	___fladd@grs,0
 17672  06F7  2EFE               	goto	l5167
 17673  06F8  366D               	lsrf	___fladd@grs,w
 17674  06F9  3801               	iorlw	1
 17675  06FA  00E2               	movwf	??___fladd
 17676  06FB  0862               	movf	??___fladd,w
 17677  06FC  00ED               	movwf	___fladd@grs
 17678  06FD  2F00               	goto	l5169
 17679  06FE                     l5167:	
 17680  06FE  1003               	clrc
 17681  06FF  0CED               	rrf	___fladd@grs,f
 17682  0700                     l5169:	
 17683  0700  185A               	btfsc	___fladd@b,0
 17684  0701  17ED               	bsf	___fladd@grs,7
 17685  0702  3001               	movlw	1
 17686  0703  00E2               	movwf	??___fladd
 17687  0704                     u5965:	
 17688  0704  37DD               	asrf	___fladd@b+3,f
 17689  0705  0CDC               	rrf	___fladd@b+2,f
 17690  0706  0CDB               	rrf	___fladd@b+1,f
 17691  0707  0CDA               	rrf	___fladd@b,f
 17692  0708  0BE2               	decfsz	??___fladd& (0+127),f
 17693  0709  2F04               	goto	u5965
 17694  070A  3001               	movlw	1
 17695  070B  00E2               	movwf	??___fladd
 17696  070C  0862               	movf	??___fladd,w
 17697  070D  07EC               	addwf	___fladd@bexp,f
 17698  070E  2F89               	goto	l5211
 17699  070F                     l5177:	
 17700  070F  085D               	movf	___fladd@b+3,w
 17701  0710  3A80               	xorlw	128
 17702  0711  00E2               	movwf	??___fladd
 17703  0712  0861               	movf	___fladd@a+3,w
 17704  0713  3A80               	xorlw	128
 17705  0714  0262               	subwf	??___fladd,w
 17706  0715  1D03               	skipz
 17707  0716  2F21               	goto	u5973
 17708  0717  0860               	movf	___fladd@a+2,w
 17709  0718  025C               	subwf	___fladd@b+2,w
 17710  0719  1D03               	skipz
 17711  071A  2F21               	goto	u5973
 17712  071B  085F               	movf	___fladd@a+1,w
 17713  071C  025B               	subwf	___fladd@b+1,w
 17714  071D  1D03               	skipz
 17715  071E  2F21               	goto	u5973
 17716  071F  085E               	movf	___fladd@a,w
 17717  0720  025A               	subwf	___fladd@b,w
 17718  0721                     u5973:	
 17719  0721  1803               	skipnc
 17720  0722  2F59               	goto	l5187
 17721  0723  30FF               	movlw	255
 17722  0724  00E2               	movwf	??___fladd
 17723  0725  30FF               	movlw	255
 17724  0726  00E3               	movwf	??___fladd+1
 17725  0727  30FF               	movlw	255
 17726  0728  00E4               	movwf	??___fladd+2
 17727  0729  30FF               	movlw	255
 17728  072A  00E5               	movwf	??___fladd+3
 17729  072B  085A               	movf	___fladd@b,w
 17730  072C  025E               	subwf	___fladd@a,w
 17731  072D  00E6               	movwf	??___fladd+4
 17732  072E  085B               	movf	___fladd@b+1,w
 17733  072F  3B5F               	subwfb	___fladd@a+1,w
 17734  0730  00E7               	movwf	??___fladd+5
 17735  0731  085C               	movf	___fladd@b+2,w
 17736  0732  3B60               	subwfb	___fladd@a+2,w
 17737  0733  00E8               	movwf	??___fladd+6
 17738  0734  085D               	movf	___fladd@b+3,w
 17739  0735  3B61               	subwfb	___fladd@a+3,w
 17740  0736  00E9               	movwf	??___fladd+7
 17741  0737  0866               	movf	??___fladd+4,w
 17742  0738  07E2               	addwf	??___fladd,f
 17743  0739  0867               	movf	??___fladd+5,w
 17744  073A  3DE3               	addwfc	??___fladd+1,f
 17745  073B  0868               	movf	??___fladd+6,w
 17746  073C  3DE4               	addwfc	??___fladd+2,f
 17747  073D  0869               	movf	??___fladd+7,w
 17748  073E  3DE5               	addwfc	??___fladd+3,f
 17749  073F  0865               	movf	??___fladd+3,w
 17750  0740  00DD               	movwf	___fladd@b+3
 17751  0741  0864               	movf	??___fladd+2,w
 17752  0742  00DC               	movwf	___fladd@b+2
 17753  0743  0863               	movf	??___fladd+1,w
 17754  0744  00DB               	movwf	___fladd@b+1
 17755  0745  0862               	movf	??___fladd,w
 17756  0746  00DA               	movwf	___fladd@b
 17757  0747  3080               	movlw	128
 17758  0748  00E2               	movwf	??___fladd
 17759  0749  0862               	movf	??___fladd,w
 17760  074A  06EA               	xorwf	___fladd@signs,f
 17761  074B  09ED               	comf	___fladd@grs,f
 17762  074C  0AED               	incf	___fladd@grs,f
 17763  074D  086D               	movf	___fladd@grs,w
 17764  074E  1D03               	btfss	3,2
 17765  074F  2F61               	goto	l1324
 17766  0750  3001               	movlw	1
 17767  0751  07DA               	addwf	___fladd@b,f
 17768  0752  3000               	movlw	0
 17769  0753  3DDB               	addwfc	___fladd@b+1,f
 17770  0754  3000               	movlw	0
 17771  0755  3DDC               	addwfc	___fladd@b+2,f
 17772  0756  3000               	movlw	0
 17773  0757  3DDD               	addwfc	___fladd@b+3,f
 17774  0758  2F61               	goto	l1324
 17775  0759                     l5187:	
 17776  0759  085E               	movf	___fladd@a,w
 17777  075A  02DA               	subwf	___fladd@b,f
 17778  075B  085F               	movf	___fladd@a+1,w
 17779  075C  3BDB               	subwfb	___fladd@b+1,f
 17780  075D  0860               	movf	___fladd@a+2,w
 17781  075E  3BDC               	subwfb	___fladd@b+2,f
 17782  075F  0861               	movf	___fladd@a+3,w
 17783  0760  3BDD               	subwfb	___fladd@b+3,f
 17784  0761                     l1324:	
 17785  0761  085D               	movf	___fladd@b+3,w
 17786  0762  045C               	iorwf	___fladd@b+2,w
 17787  0763  045B               	iorwf	___fladd@b+1,w
 17788  0764  045A               	iorwf	___fladd@b,w
 17789  0765  1D03               	skipz
 17790  0766  2F87               	goto	l5209
 17791  0767  086D               	movf	___fladd@grs,w
 17792  0768  1D03               	btfss	3,2
 17793  0769  2F87               	goto	l5209
 17794  076A  3000               	movlw	0
 17795  076B  00DD               	movwf	?___fladd+3
 17796  076C  3000               	movlw	0
 17797  076D  00DC               	movwf	?___fladd+2
 17798  076E  3000               	movlw	0
 17799  076F  00DB               	movwf	?___fladd+1
 17800  0770  3000               	movlw	0
 17801  0771  00DA               	movwf	?___fladd
 17802  0772  0008               	return
 17803  0773                     l5195:	
 17804  0773  3001               	movlw	1
 17805  0774                     u6015:	
 17806  0774  35DA               	lslf	___fladd@b,f
 17807  0775  0DDB               	rlf	___fladd@b+1,f
 17808  0776  0DDC               	rlf	___fladd@b+2,f
 17809  0777  0DDD               	rlf	___fladd@b+3,f
 17810  0778  0B89               	decfsz	9,f
 17811  0779  2F74               	goto	u6015
 17812  077A  1BED               	btfsc	___fladd@grs,7
 17813  077B  145A               	bsf	___fladd@b,0
 17814  077C  1C6D               	btfss	___fladd@grs,0
 17815  077D  2F80               	goto	l5203
 17816  077E  1403               	setc
 17817  077F  2F81               	goto	L4
 17818  0780                     l5203:	
 17819  0780  1003               	clrc
 17820  0781                     L4:	
 17821  0781  0DED               	rlf	___fladd@grs,f
 17822  0782  086C               	movf	___fladd@bexp,w
 17823  0783  1903               	btfsc	3,2
 17824  0784  2F87               	goto	l5209
 17825  0785  3001               	movlw	1
 17826  0786  02EC               	subwf	___fladd@bexp,f
 17827  0787                     l5209:	
 17828  0787  1FDC               	btfss	___fladd@b+2,7
 17829  0788  2F73               	goto	l5195
 17830  0789                     l5211:	
 17831  0789  01EB               	clrf	___fladd@aexp
 17832  078A  1FED               	btfss	___fladd@grs,7
 17833  078B  2F94               	goto	l5221
 17834  078C  086D               	movf	___fladd@grs,w
 17835  078D  397F               	andlw	127
 17836  078E  1903               	btfsc	3,2
 17837  078F  185A               	btfsc	___fladd@b,0
 17838  0790  2F92               	goto	l5217
 17839  0791  2F94               	goto	l5221
 17840  0792                     l5217:	
 17841  0792  01EB               	clrf	___fladd@aexp
 17842  0793  0AEB               	incf	___fladd@aexp,f
 17843  0794                     l5221:	
 17844  0794  086B               	movf	___fladd@aexp,w
 17845  0795  1903               	btfsc	3,2
 17846  0796  2FC0               	goto	l1337
 17847  0797  3001               	movlw	1
 17848  0798  07DA               	addwf	___fladd@b,f
 17849  0799  3000               	movlw	0
 17850  079A  3DDB               	addwfc	___fladd@b+1,f
 17851  079B  3000               	movlw	0
 17852  079C  3DDC               	addwfc	___fladd@b+2,f
 17853  079D  3000               	movlw	0
 17854  079E  3DDD               	addwfc	___fladd@b+3,f
 17855  079F  1C5D               	btfss	___fladd@b+3,0
 17856  07A0  2FC0               	goto	l1337
 17857  07A1  085A               	movf	___fladd@b,w
 17858  07A2  00E2               	movwf	??___fladd
 17859  07A3  085B               	movf	___fladd@b+1,w
 17860  07A4  00E3               	movwf	??___fladd+1
 17861  07A5  085C               	movf	___fladd@b+2,w
 17862  07A6  00E4               	movwf	??___fladd+2
 17863  07A7  085D               	movf	___fladd@b+3,w
 17864  07A8  00E5               	movwf	??___fladd+3
 17865  07A9  3001               	movlw	1
 17866  07AA  00E6               	movwf	??___fladd+4
 17867  07AB                     u6115:	
 17868  07AB  37E5               	asrf	??___fladd+3,f
 17869  07AC  0CE4               	rrf	??___fladd+2,f
 17870  07AD  0CE3               	rrf	??___fladd+1,f
 17871  07AE  0CE2               	rrf	??___fladd,f
 17872  07AF  0BE6               	decfsz	??___fladd+4,f
 17873  07B0  2FAB               	goto	u6115
 17874  07B1  0865               	movf	??___fladd+3,w
 17875  07B2  00DD               	movwf	___fladd@b+3
 17876  07B3  0864               	movf	??___fladd+2,w
 17877  07B4  00DC               	movwf	___fladd@b+2
 17878  07B5  0863               	movf	??___fladd+1,w
 17879  07B6  00DB               	movwf	___fladd@b+1
 17880  07B7  0862               	movf	??___fladd,w
 17881  07B8  00DA               	movwf	___fladd@b
 17882  07B9  0A6C               	incf	___fladd@bexp,w
 17883  07BA  1903               	btfsc	3,2
 17884  07BB  2FC0               	goto	l1337
 17885  07BC  3001               	movlw	1
 17886  07BD  00E2               	movwf	??___fladd
 17887  07BE  0862               	movf	??___fladd,w
 17888  07BF  07EC               	addwf	___fladd@bexp,f
 17889  07C0                     l1337:	
 17890  07C0  0A6C               	incf	___fladd@bexp,w
 17891  07C1  1D03               	btfss	3,2
 17892  07C2  086C               	movf	___fladd@bexp,w
 17893  07C3  1D03               	btfss	3,2
 17894  07C4  2FD0               	goto	l5239
 17895  07C5  3000               	movlw	0
 17896  07C6  00DD               	movwf	___fladd@b+3
 17897  07C7  3000               	movlw	0
 17898  07C8  00DC               	movwf	___fladd@b+2
 17899  07C9  3000               	movlw	0
 17900  07CA  00DB               	movwf	___fladd@b+1
 17901  07CB  3000               	movlw	0
 17902  07CC  00DA               	movwf	___fladd@b
 17903  07CD  086C               	movf	___fladd@bexp,w
 17904  07CE  1903               	btfsc	3,2
 17905  07CF  01EA               	clrf	___fladd@signs
 17906  07D0                     l5239:	
 17907  07D0  1C6C               	btfss	___fladd@bexp,0
 17908  07D1  2FD4               	goto	l5243
 17909  07D2  17DC               	bsf	___fladd@b+2,7
 17910  07D3  2FD8               	goto	l1345
 17911  07D4                     l5243:	
 17912  07D4  307F               	movlw	127
 17913  07D5  00E2               	movwf	??___fladd
 17914  07D6  0862               	movf	??___fladd,w
 17915  07D7  05DC               	andwf	___fladd@b+2,f
 17916  07D8                     l1345:	
 17917  07D8  366C               	lsrf	___fladd@bexp,w
 17918  07D9  00E2               	movwf	??___fladd
 17919  07DA  0862               	movf	??___fladd,w
 17920  07DB  00DD               	movwf	___fladd@b+3
 17921  07DC  1FEA               	btfss	___fladd@signs,7
 17922  07DD  0008               	return
 17923  07DE  17DD               	bsf	___fladd@b+3,7
 17924  07DF  0008               	return
 17925  07E0                     __end_of___fladd:	
 17926                           
 17927                           	psect	text59
 17928  2E65                     __ptext59:	
 17929 ;; *************** function _calibrate_BATTSOC *****************
 17930 ;; Defined at:
 17931 ;;		line 23 in file "algorithms.c"
 17932 ;; Parameters:    Size  Location     Type
 17933 ;;		None
 17934 ;; Auto vars:     Size  Location     Type
 17935 ;;  j               2   24[BANK1 ] int 
 17936 ;;  i               2   22[BANK1 ] int 
 17937 ;; Return value:  Size  Location     Type
 17938 ;;                  1    wreg      void 
 17939 ;; Registers used:
 17940 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17941 ;; Tracked objects:
 17942 ;;		On entry : 0/0
 17943 ;;		On exit  : 0/0
 17944 ;;		Unchanged: 0/0
 17945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17947 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17948 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17949 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17950 ;;Total ram usage:        9 bytes
 17951 ;; Hardware stack levels used:    1
 17952 ;; Hardware stack levels required when called:    3
 17953 ;; This function calls:
 17954 ;;		___fldiv
 17955 ;;		___flmul
 17956 ;;		___fltol
 17957 ;;		___xxtofl
 17958 ;; This function is called by:
 17959 ;;		_AFE_UPDATE
 17960 ;; This function uses a non-reentrant model
 17961 ;;
 17962                           
 17963                           
 17964                           ;psect for function _calibrate_BATTSOC
 17965  2E65                     _calibrate_BATTSOC:	
 17966                           
 17967                           ;algorithms.c: 26:     for(int i = 0; i<5;i++){
 17968                           
 17969                           ;incstack = 0
 17970                           ; Regs used in _calibrate_BATTSOC: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17971  2E65  0021               	movlb	1	; select bank1
 17972  2E66  01B6               	clrf	calibrate_BATTSOC@i^(0+128)
 17973  2E67  01B7               	clrf	(calibrate_BATTSOC@i+1)^(0+128)
 17974  2E68                     l6087:	
 17975                           
 17976                           ;algorithms.c: 27:         for(int j = 0; j < 46; j++ ){
 17977  2E68  0021               	movlb	1	; select bank1
 17978  2E69  01B8               	clrf	calibrate_BATTSOC@j^(0+128)
 17979  2E6A  01B9               	clrf	(calibrate_BATTSOC@j+1)^(0+128)
 17980  2E6B                     l6093:	
 17981                           
 17982                           ;algorithms.c: 28:             if(cellVoltages[i]>=lookupTableSamsung_voltage[j]){
 17983  2E6B  0021               	movlb	1	; select bank1
 17984  2E6C  0839               	movf	(calibrate_BATTSOC@j+1)^(0+128),w
 17985  2E6D  0085               	movwf	5
 17986  2E6E  0838               	movf	calibrate_BATTSOC@j^(0+128),w
 17987  2E6F  0084               	movwf	4
 17988  2E70  3584               	lslf	4,f
 17989  2E71  0D85               	rlf	5,f
 17990  2E72  305C               	movlw	low (_lookupTableSamsung_voltage| (0+32768))
 17991  2E73  0784               	addwf	4,f
 17992  2E74  30B8               	movlw	high (_lookupTableSamsung_voltage| (0+32768))
 17993  2E75  3D85               	addwfc	5,f
 17994  2E76  3F00               	moviw [0]fsr0
 17995  2E77  00B1               	movwf	??_calibrate_BATTSOC^(0+128)
 17996  2E78  3F01               	moviw [1]fsr0
 17997  2E79  00B2               	movwf	(??_calibrate_BATTSOC^(0+128)+1)
 17998  2E7A  3536               	lslf	calibrate_BATTSOC@i^(0+128),w
 17999  2E7B  3EAA               	addlw	(low (_cellVoltages| (0+256)))& (0+255)
 18000  2E7C  0086               	movwf	6
 18001  2E7D  3001               	movlw	1	; select bank3/4
 18002  2E7E  0087               	movwf	7
 18003  2E7F  3F40               	moviw [0]fsr1
 18004  2E80  00B3               	movwf	(??_calibrate_BATTSOC+2)^(0+128)
 18005  2E81  3F41               	moviw [1]fsr1
 18006  2E82  00B4               	movwf	((??_calibrate_BATTSOC+2)^(0+128)+1)
 18007  2E83  0834               	movf	(??_calibrate_BATTSOC+3)^(0+128),w
 18008  2E84  3A80               	xorlw	128
 18009  2E85  00B5               	movwf	(??_calibrate_BATTSOC+4)^(0+128)
 18010  2E86  0832               	movf	(??_calibrate_BATTSOC+1)^(0+128),w
 18011  2E87  3A80               	xorlw	128
 18012  2E88  0235               	subwf	(??_calibrate_BATTSOC+4)^(0+128),w
 18013  2E89  1D03               	skipz
 18014  2E8A  2E8D               	goto	u7585
 18015  2E8B  0831               	movf	??_calibrate_BATTSOC^(0+128),w
 18016  2E8C  0233               	subwf	(??_calibrate_BATTSOC+2)^(0+128),w
 18017  2E8D                     u7585:	
 18018  2E8D  1C03               	skipc
 18019  2E8E  2F0A               	goto	l6099
 18020                           
 18021                           ;algorithms.c: 29:                 cellSOC[i] = lookupTableSamsung_SOC[j];
 18022  2E8F  0021               	movlb	1	; select bank1
 18023  2E90  0839               	movf	(calibrate_BATTSOC@j+1)^(0+128),w
 18024  2E91  00B2               	movwf	(??_calibrate_BATTSOC^(0+128)+1)
 18025  2E92  0838               	movf	calibrate_BATTSOC@j^(0+128),w
 18026  2E93  00B1               	movwf	??_calibrate_BATTSOC^(0+128)
 18027  2E94  35B1               	lslf	??_calibrate_BATTSOC^(0+128),f
 18028  2E95  0DB2               	rlf	(??_calibrate_BATTSOC^(0+128)+1),f
 18029  2E96  3000               	movlw	low (_lookupTableSamsung_SOC| (0+32768))
 18030  2E97  00B3               	movwf	(??_calibrate_BATTSOC+2)^(0+128)
 18031  2E98  30B8               	movlw	high (_lookupTableSamsung_SOC| (0+32768))
 18032  2E99  00B4               	movwf	((??_calibrate_BATTSOC+2)^(0+128)+1)
 18033  2E9A  0831               	movf	??_calibrate_BATTSOC^(0+128),w
 18034  2E9B  0733               	addwf	(??_calibrate_BATTSOC+2)^(0+128),w
 18035  2E9C  0086               	movwf	6
 18036  2E9D  0832               	movf	(??_calibrate_BATTSOC+1)^(0+128),w
 18037  2E9E  3D34               	addwfc	(??_calibrate_BATTSOC+3)^(0+128),w
 18038  2E9F  0087               	movwf	7
 18039  2EA0  3536               	lslf	calibrate_BATTSOC@i^(0+128),w
 18040  2EA1  3EA0               	addlw	(low (_cellSOC| (0+256)))& (0+255)
 18041  2EA2  0084               	movwf	4
 18042  2EA3  3001               	movlw	1	; select bank3/4
 18043  2EA4  0085               	movwf	5
 18044  2EA5  3F40               	moviw [0]fsr1
 18045  2EA6  3F80               	movwi [0]fsr0
 18046  2EA7  3F41               	moviw [1]fsr1
 18047  2EA8  3F81               	movwi [1]fsr0
 18048                           
 18049                           ;algorithms.c: 30:                 cellCharge[i] = (lookupTableSamsung_SOC[j]/100.0) * s
      +                          amsung_cell_max_charge;
 18050  2EA9  0839               	movf	(calibrate_BATTSOC@j+1)^(0+128),w
 18051  2EAA  0085               	movwf	5
 18052  2EAB  0838               	movf	calibrate_BATTSOC@j^(0+128),w
 18053  2EAC  0084               	movwf	4
 18054  2EAD  3584               	lslf	4,f
 18055  2EAE  0D85               	rlf	5,f
 18056  2EAF  3000               	movlw	low (_lookupTableSamsung_SOC| (0+32768))
 18057  2EB0  0784               	addwf	4,f
 18058  2EB1  30B8               	movlw	high (_lookupTableSamsung_SOC| (0+32768))
 18059  2EB2  3D85               	addwfc	5,f
 18060  2EB3  3F00               	moviw [0]fsr0
 18061  2EB4  00B1               	movwf	??_calibrate_BATTSOC^(0+128)
 18062  2EB5  3F01               	moviw [1]fsr0
 18063  2EB6  00B2               	movwf	(??_calibrate_BATTSOC^(0+128)+1)
 18064  2EB7  0831               	movf	??_calibrate_BATTSOC^(0+128),w
 18065  2EB8  00F1               	movwf	___xxtofl@val
 18066  2EB9  0832               	movf	(??_calibrate_BATTSOC+1)^(0+128),w
 18067  2EBA  00F2               	movwf	___xxtofl@val+1
 18068  2EBB  0D89               	rlf	9,f
 18069  2EBC  3B89               	subwfb	9,f
 18070  2EBD  0989               	comf	9,f
 18071  2EBE  00F3               	movwf	___xxtofl@val+2
 18072  2EBF  00F4               	movwf	___xxtofl@val+3
 18073  2EC0  3001               	movlw	1
 18074  2EC1  31AA  2248  31AE   	fcall	___xxtofl
 18075  2EC4  0874               	movf	?___xxtofl+3,w
 18076  2EC5  0020               	movlb	0	; select bank0
 18077  2EC6  00C7               	movwf	___fldiv@b+3
 18078  2EC7  0873               	movf	?___xxtofl+2,w
 18079  2EC8  00C6               	movwf	___fldiv@b+2
 18080  2EC9  0872               	movf	?___xxtofl+1,w
 18081  2ECA  00C5               	movwf	___fldiv@b+1
 18082  2ECB  0871               	movf	?___xxtofl,w
 18083  2ECC  00C4               	movwf	___fldiv@b
 18084  2ECD  3042               	movlw	66
 18085  2ECE  00C3               	movwf	___fldiv@a+3
 18086  2ECF  30C8               	movlw	200
 18087  2ED0  00C2               	movwf	___fldiv@a+2
 18088  2ED1  3000               	movlw	0
 18089  2ED2  00C1               	movwf	___fldiv@a+1
 18090  2ED3  3000               	movlw	0
 18091  2ED4  00C0               	movwf	___fldiv@a
 18092  2ED5  319C  24E2  31AE   	fcall	___fldiv
 18093  2ED8  0020               	movlb	0	; select bank0
 18094  2ED9  0843               	movf	?___fldiv+3,w
 18095  2EDA  00AD               	movwf	___flmul@a+3
 18096  2EDB  0842               	movf	?___fldiv+2,w
 18097  2EDC  00AC               	movwf	___flmul@a+2
 18098  2EDD  0841               	movf	?___fldiv+1,w
 18099  2EDE  00AB               	movwf	___flmul@a+1
 18100  2EDF  0840               	movf	?___fldiv,w
 18101  2EE0  00AA               	movwf	___flmul@a
 18102  2EE1  3045               	movlw	69
 18103  2EE2  00A9               	movwf	___flmul@b+3
 18104  2EE3  301C               	movlw	28
 18105  2EE4  00A8               	movwf	___flmul@b+2
 18106  2EE5  3040               	movlw	64
 18107  2EE6  00A7               	movwf	___flmul@b+1
 18108  2EE7  3000               	movlw	0
 18109  2EE8  00A6               	movwf	___flmul@b
 18110  2EE9  3190  2023  31AE   	fcall	___flmul
 18111  2EEC  0020               	movlb	0	; select bank0
 18112  2EED  0829               	movf	?___flmul+3,w
 18113  2EEE  0021               	movlb	1	; select bank1
 18114  2EEF  00AB               	movwf	(___fltol@f1+3)^(0+128)
 18115  2EF0  0020               	movlb	0	; select bank0
 18116  2EF1  0828               	movf	?___flmul+2,w
 18117  2EF2  0021               	movlb	1	; select bank1
 18118  2EF3  00AA               	movwf	(___fltol@f1+2)^(0+128)
 18119  2EF4  0020               	movlb	0	; select bank0
 18120  2EF5  0827               	movf	?___flmul+1,w
 18121  2EF6  0021               	movlb	1	; select bank1
 18122  2EF7  00A9               	movwf	(___fltol@f1+1)^(0+128)
 18123  2EF8  0020               	movlb	0	; select bank0
 18124  2EF9  0826               	movf	?___flmul,w
 18125  2EFA  0021               	movlb	1	; select bank1
 18126  2EFB  00A8               	movwf	___fltol@f1^(0+128)
 18127  2EFC  31B6  26B9  31AE   	fcall	___fltol
 18128  2EFF  0021               	movlb	1	; select bank1
 18129  2F00  3536               	lslf	calibrate_BATTSOC@i^(0+128),w
 18130  2F01  3E20               	addlw	(low (_cellCharge| (0+512)))& (0+255)
 18131  2F02  0086               	movwf	6
 18132  2F03  3002               	movlw	2	; select bank4/5
 18133  2F04  0087               	movwf	7
 18134  2F05  0828               	movf	?___fltol^(0+128),w
 18135  2F06  3FC0               	movwi [0]fsr1
 18136  2F07  0829               	movf	(?___fltol+1)^(0+128),w
 18137  2F08  3FC1               	movwi [1]fsr1
 18138                           
 18139                           ;algorithms.c: 31:                 break;
 18140  2F09  2F1A               	goto	l6101
 18141  2F0A                     l6099:	
 18142                           
 18143                           ;algorithms.c: 33:         }
 18144  2F0A  3001               	movlw	1
 18145  2F0B  0021               	movlb	1	; select bank1
 18146  2F0C  07B8               	addwf	calibrate_BATTSOC@j^(0+128),f
 18147  2F0D  3000               	movlw	0
 18148  2F0E  3DB9               	addwfc	(calibrate_BATTSOC@j+1)^(0+128),f
 18149  2F0F  0839               	movf	(calibrate_BATTSOC@j+1)^(0+128),w
 18150  2F10  3A80               	xorlw	128
 18151  2F11  00B1               	movwf	??_calibrate_BATTSOC^(0+128)
 18152  2F12  3080               	movlw	128
 18153  2F13  0231               	subwf	??_calibrate_BATTSOC^(0+128),w
 18154  2F14  1D03               	skipz
 18155  2F15  2F18               	goto	u7595
 18156  2F16  302E               	movlw	46
 18157  2F17  0238               	subwf	calibrate_BATTSOC@j^(0+128),w
 18158  2F18                     u7595:	
 18159  2F18  1C03               	skipc
 18160  2F19  2E6B               	goto	l6093
 18161  2F1A                     l6101:	
 18162                           
 18163                           ;algorithms.c: 34:     }
 18164  2F1A  3001               	movlw	1
 18165  2F1B  0021               	movlb	1	; select bank1
 18166  2F1C  07B6               	addwf	calibrate_BATTSOC@i^(0+128),f
 18167  2F1D  3000               	movlw	0
 18168  2F1E  3DB7               	addwfc	(calibrate_BATTSOC@i+1)^(0+128),f
 18169  2F1F  0837               	movf	(calibrate_BATTSOC@i+1)^(0+128),w
 18170  2F20  3A80               	xorlw	128
 18171  2F21  00B1               	movwf	??_calibrate_BATTSOC^(0+128)
 18172  2F22  3080               	movlw	128
 18173  2F23  0231               	subwf	??_calibrate_BATTSOC^(0+128),w
 18174  2F24  1D03               	skipz
 18175  2F25  2F28               	goto	u7605
 18176  2F26  3005               	movlw	5
 18177  2F27  0236               	subwf	calibrate_BATTSOC@i^(0+128),w
 18178  2F28                     u7605:	
 18179  2F28  1803               	btfsc	3,0
 18180  2F29  0008               	return
 18181  2F2A  2E68               	goto	l6087
 18182  2F2B                     __end_of_calibrate_BATTSOC:	
 18183                           
 18184                           	psect	text60
 18185  2A48                     __ptext60:	
 18186 ;; *************** function ___xxtofl *****************
 18187 ;; Defined at:
 18188 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 18189 ;; Parameters:    Size  Location     Type
 18190 ;;  sign            1    wreg     unsigned char 
 18191 ;;  val             4    1[COMMON] long 
 18192 ;; Auto vars:     Size  Location     Type
 18193 ;;  sign            1    0[BANK0 ] unsigned char 
 18194 ;;  arg             4    2[BANK0 ] unsigned long 
 18195 ;;  exp             1    1[BANK0 ] unsigned char 
 18196 ;; Return value:  Size  Location     Type
 18197 ;;                  4    1[COMMON] unsigned char 
 18198 ;; Registers used:
 18199 ;;		wreg, status,2, status,0
 18200 ;; Tracked objects:
 18201 ;;		On entry : 0/0
 18202 ;;		On exit  : 0/0
 18203 ;;		Unchanged: 0/0
 18204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18205 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18206 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18207 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18208 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18209 ;;Total ram usage:       14 bytes
 18210 ;; Hardware stack levels used:    1
 18211 ;; Hardware stack levels required when called:    1
 18212 ;; This function calls:
 18213 ;;		Nothing
 18214 ;; This function is called by:
 18215 ;;		_setShortCircuitProtection
 18216 ;;		_setOverCurrentDischargeProtection
 18217 ;;		_updateCurrent
 18218 ;;		_updateVoltages
 18219 ;;		_updateTemperatures
 18220 ;;		_calibrate_BATTSOC
 18221 ;;		_coulomb_counter
 18222 ;;		_logf
 18223 ;;		_AFE_getSetShortCircuitCurrent
 18224 ;;		_AFE_getOverCurrentDischargeCurrent
 18225 ;; This function uses a non-reentrant model
 18226 ;;
 18227                           
 18228                           
 18229                           ;psect for function ___xxtofl
 18230  2A48                     ___xxtofl:	
 18231                           
 18232                           ;incstack = 0
 18233                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 18234                           ;___xxtofl@sign stored from wreg
 18235  2A48  0020               	movlb	0	; select bank0
 18236  2A49  00A0               	movwf	___xxtofl@sign
 18237  2A4A  0820               	movf	___xxtofl@sign,w
 18238  2A4B  1D03               	btfss	3,2
 18239  2A4C  1FF4               	btfss	___xxtofl@val+3,7
 18240  2A4D  2A5E               	goto	l5587
 18241  2A4E  0971               	comf	___xxtofl@val,w
 18242  2A4F  00A2               	movwf	___xxtofl@arg
 18243  2A50  0972               	comf	___xxtofl@val+1,w
 18244  2A51  00A3               	movwf	___xxtofl@arg+1
 18245  2A52  0973               	comf	___xxtofl@val+2,w
 18246  2A53  00A4               	movwf	___xxtofl@arg+2
 18247  2A54  0974               	comf	___xxtofl@val+3,w
 18248  2A55  00A5               	movwf	___xxtofl@arg+3
 18249  2A56  0AA2               	incf	___xxtofl@arg,f
 18250  2A57  1903               	skipnz
 18251  2A58  0AA3               	incf	___xxtofl@arg+1,f
 18252  2A59  1903               	skipnz
 18253  2A5A  0AA4               	incf	___xxtofl@arg+2,f
 18254  2A5B  1903               	skipnz
 18255  2A5C  0AA5               	incf	___xxtofl@arg+3,f
 18256  2A5D  2A66               	goto	l1437
 18257  2A5E                     l5587:	
 18258  2A5E  0874               	movf	___xxtofl@val+3,w
 18259  2A5F  00A5               	movwf	___xxtofl@arg+3
 18260  2A60  0873               	movf	___xxtofl@val+2,w
 18261  2A61  00A4               	movwf	___xxtofl@arg+2
 18262  2A62  0872               	movf	___xxtofl@val+1,w
 18263  2A63  00A3               	movwf	___xxtofl@arg+1
 18264  2A64  0871               	movf	___xxtofl@val,w
 18265  2A65  00A2               	movwf	___xxtofl@arg
 18266  2A66                     l1437:	
 18267  2A66  0874               	movf	___xxtofl@val+3,w
 18268  2A67  0473               	iorwf	___xxtofl@val+2,w
 18269  2A68  0472               	iorwf	___xxtofl@val+1,w
 18270  2A69  0471               	iorwf	___xxtofl@val,w
 18271  2A6A  1D03               	skipz
 18272  2A6B  2A75               	goto	l5593
 18273  2A6C  3000               	movlw	0
 18274  2A6D  00F4               	movwf	?___xxtofl+3
 18275  2A6E  3000               	movlw	0
 18276  2A6F  00F3               	movwf	?___xxtofl+2
 18277  2A70  3000               	movlw	0
 18278  2A71  00F2               	movwf	?___xxtofl+1
 18279  2A72  3000               	movlw	0
 18280  2A73  00F1               	movwf	?___xxtofl
 18281  2A74  0008               	return
 18282  2A75                     l5593:	
 18283  2A75  3096               	movlw	150
 18284  2A76  00F5               	movwf	??___xxtofl
 18285  2A77  0875               	movf	??___xxtofl,w
 18286  2A78  00A1               	movwf	___xxtofl@exp
 18287  2A79                     l5597:	
 18288  2A79  30FE               	movlw	254
 18289  2A7A  0525               	andwf	___xxtofl@arg+3,w
 18290  2A7B  1903               	btfsc	3,2
 18291  2A7C  2A9C               	goto	l1443
 18292  2A7D  3001               	movlw	1
 18293  2A7E  00F5               	movwf	??___xxtofl
 18294  2A7F  0875               	movf	??___xxtofl,w
 18295  2A80  07A1               	addwf	___xxtofl@exp,f
 18296  2A81  3001               	movlw	1
 18297  2A82                     u6865:	
 18298  2A82  36A5               	lsrf	___xxtofl@arg+3,f
 18299  2A83  0CA4               	rrf	___xxtofl@arg+2,f
 18300  2A84  0CA3               	rrf	___xxtofl@arg+1,f
 18301  2A85  0CA2               	rrf	___xxtofl@arg,f
 18302  2A86  0B89               	decfsz	9,f
 18303  2A87  2A82               	goto	u6865
 18304  2A88  2A79               	goto	l5597
 18305  2A89                     l5599:	
 18306  2A89  3001               	movlw	1
 18307  2A8A  00F5               	movwf	??___xxtofl
 18308  2A8B  0875               	movf	??___xxtofl,w
 18309  2A8C  07A1               	addwf	___xxtofl@exp,f
 18310  2A8D  3001               	movlw	1
 18311  2A8E  07A2               	addwf	___xxtofl@arg,f
 18312  2A8F  3000               	movlw	0
 18313  2A90  3DA3               	addwfc	___xxtofl@arg+1,f
 18314  2A91  3000               	movlw	0
 18315  2A92  3DA4               	addwfc	___xxtofl@arg+2,f
 18316  2A93  3000               	movlw	0
 18317  2A94  3DA5               	addwfc	___xxtofl@arg+3,f
 18318  2A95  3001               	movlw	1
 18319  2A96                     u6885:	
 18320  2A96  36A5               	lsrf	___xxtofl@arg+3,f
 18321  2A97  0CA4               	rrf	___xxtofl@arg+2,f
 18322  2A98  0CA3               	rrf	___xxtofl@arg+1,f
 18323  2A99  0CA2               	rrf	___xxtofl@arg,f
 18324  2A9A  0B89               	decfsz	9,f
 18325  2A9B  2A96               	goto	u6885
 18326  2A9C                     l1443:	
 18327  2A9C  30FF               	movlw	255
 18328  2A9D  0525               	andwf	___xxtofl@arg+3,w
 18329  2A9E  1903               	btfsc	3,2
 18330  2A9F  2AAE               	goto	l5607
 18331  2AA0  2A89               	goto	l5599
 18332  2AA1                     l5609:	
 18333  2AA1  3002               	movlw	2
 18334  2AA2  0221               	subwf	___xxtofl@exp,w
 18335  2AA3  1C03               	btfss	3,0
 18336  2AA4  2AB0               	goto	l1450
 18337  2AA5  3001               	movlw	1
 18338  2AA6  02A1               	subwf	___xxtofl@exp,f
 18339  2AA7  3001               	movlw	1
 18340  2AA8                     u6905:	
 18341  2AA8  35A2               	lslf	___xxtofl@arg,f
 18342  2AA9  0DA3               	rlf	___xxtofl@arg+1,f
 18343  2AAA  0DA4               	rlf	___xxtofl@arg+2,f
 18344  2AAB  0DA5               	rlf	___xxtofl@arg+3,f
 18345  2AAC  0B89               	decfsz	9,f
 18346  2AAD  2AA8               	goto	u6905
 18347  2AAE                     l5607:	
 18348  2AAE  1FA4               	btfss	___xxtofl@arg+2,7
 18349  2AAF  2AA1               	goto	l5609
 18350  2AB0                     l1450:	
 18351  2AB0  1821               	btfsc	___xxtofl@exp,0
 18352  2AB1  2ABA               	goto	l1451
 18353  2AB2  30FF               	movlw	255
 18354  2AB3  05A2               	andwf	___xxtofl@arg,f
 18355  2AB4  30FF               	movlw	255
 18356  2AB5  05A3               	andwf	___xxtofl@arg+1,f
 18357  2AB6  307F               	movlw	127
 18358  2AB7  05A4               	andwf	___xxtofl@arg+2,f
 18359  2AB8  30FF               	movlw	255
 18360  2AB9  05A5               	andwf	___xxtofl@arg+3,f
 18361  2ABA                     l1451:	
 18362  2ABA  1003               	clrc
 18363  2ABB  0CA1               	rrf	___xxtofl@exp,f
 18364  2ABC  0821               	movf	___xxtofl@exp,w
 18365  2ABD  00F5               	movwf	??___xxtofl
 18366  2ABE  01F6               	clrf	??___xxtofl+1
 18367  2ABF  01F7               	clrf	??___xxtofl+2
 18368  2AC0  01F8               	clrf	??___xxtofl+3
 18369  2AC1  3018               	movlw	24
 18370  2AC2                     u6945:	
 18371  2AC2  35F5               	lslf	??___xxtofl,f
 18372  2AC3  0DF6               	rlf	??___xxtofl+1,f
 18373  2AC4  0DF7               	rlf	??___xxtofl+2,f
 18374  2AC5  0DF8               	rlf	??___xxtofl+3,f
 18375  2AC6  0B89               	decfsz	9,f
 18376  2AC7  2AC2               	goto	u6945
 18377  2AC8  0875               	movf	??___xxtofl,w
 18378  2AC9  04A2               	iorwf	___xxtofl@arg,f
 18379  2ACA  0876               	movf	??___xxtofl+1,w
 18380  2ACB  04A3               	iorwf	___xxtofl@arg+1,f
 18381  2ACC  0877               	movf	??___xxtofl+2,w
 18382  2ACD  04A4               	iorwf	___xxtofl@arg+2,f
 18383  2ACE  0878               	movf	??___xxtofl+3,w
 18384  2ACF  04A5               	iorwf	___xxtofl@arg+3,f
 18385  2AD0  0820               	movf	___xxtofl@sign,w
 18386  2AD1  1D03               	btfss	3,2
 18387  2AD2  1FF4               	btfss	___xxtofl@val+3,7
 18388  2AD3  2AD5               	goto	l5621
 18389  2AD4  17A5               	bsf	___xxtofl@arg+3,7
 18390  2AD5                     l5621:	
 18391  2AD5  0825               	movf	___xxtofl@arg+3,w
 18392  2AD6  00F4               	movwf	?___xxtofl+3
 18393  2AD7  0824               	movf	___xxtofl@arg+2,w
 18394  2AD8  00F3               	movwf	?___xxtofl+2
 18395  2AD9  0823               	movf	___xxtofl@arg+1,w
 18396  2ADA  00F2               	movwf	?___xxtofl+1
 18397  2ADB  0822               	movf	___xxtofl@arg,w
 18398  2ADC  00F1               	movwf	?___xxtofl
 18399  2ADD  0008               	return
 18400  2ADE                     __end_of___xxtofl:	
 18401                           
 18402                           	psect	text61
 18403  36B9                     __ptext61:	
 18404 ;; *************** function ___fltol *****************
 18405 ;; Defined at:
 18406 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 18407 ;; Parameters:    Size  Location     Type
 18408 ;;  f1              4    8[BANK1 ] unsigned char 
 18409 ;; Auto vars:     Size  Location     Type
 18410 ;;  exp1            1   11[COMMON] unsigned char 
 18411 ;;  sign1           1   10[COMMON] unsigned char 
 18412 ;; Return value:  Size  Location     Type
 18413 ;;                  4    8[BANK1 ] long 
 18414 ;; Registers used:
 18415 ;;		wreg, status,2, status,0
 18416 ;; Tracked objects:
 18417 ;;		On entry : 0/0
 18418 ;;		On exit  : 0/0
 18419 ;;		Unchanged: 0/0
 18420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18421 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18422 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18423 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18424 ;;      Totals:         2       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18425 ;;Total ram usage:       11 bytes
 18426 ;; Hardware stack levels used:    1
 18427 ;; Hardware stack levels required when called:    1
 18428 ;; This function calls:
 18429 ;;		Nothing
 18430 ;; This function is called by:
 18431 ;;		_updateCurrent
 18432 ;;		_updateVoltages
 18433 ;;		_updateTemperatures
 18434 ;;		_calibrate_BATTSOC
 18435 ;;		_coulomb_counter
 18436 ;;		_AFE_getSetShortCircuitCurrent
 18437 ;;		_AFE_getOverCurrentDischargeCurrent
 18438 ;; This function uses a non-reentrant model
 18439 ;;
 18440                           
 18441                           
 18442                           ;psect for function ___fltol
 18443  36B9                     ___fltol:	
 18444                           
 18445                           ;incstack = 0
 18446                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 18447  36B9  1003               	clrc
 18448  36BA  0021               	movlb	1	; select bank1
 18449  36BB  0D2A               	rlf	(___fltol@f1+2)^(0+128),w
 18450  36BC  0D2B               	rlf	(___fltol@f1+3)^(0+128),w
 18451  36BD  00AC               	movwf	??___fltol^(0+128)
 18452  36BE  082C               	movf	??___fltol^(0+128),w
 18453  36BF  00FB               	movwf	___fltol@exp1
 18454  36C0  087B               	movf	___fltol@exp1,w
 18455  36C1  1D03               	btfss	3,2
 18456  36C2  2ECC               	goto	l5831
 18457  36C3                     l5827:	
 18458  36C3  3000               	movlw	0
 18459  36C4  00AB               	movwf	(?___fltol+3)^(0+128)
 18460  36C5  3000               	movlw	0
 18461  36C6  00AA               	movwf	(?___fltol+2)^(0+128)
 18462  36C7  3000               	movlw	0
 18463  36C8  00A9               	movwf	(?___fltol+1)^(0+128)
 18464  36C9  3000               	movlw	0
 18465  36CA  00A8               	movwf	?___fltol^(0+128)
 18466  36CB  0008               	return
 18467  36CC                     l5831:	
 18468  36CC  0828               	movf	___fltol@f1^(0+128),w
 18469  36CD  00AC               	movwf	??___fltol^(0+128)
 18470  36CE  0829               	movf	(___fltol@f1+1)^(0+128),w
 18471  36CF  00AD               	movwf	(??___fltol^(0+128)+1)
 18472  36D0  082A               	movf	(___fltol@f1+2)^(0+128),w
 18473  36D1  00AE               	movwf	(??___fltol^(0+128)+2)
 18474  36D2  082B               	movf	(___fltol@f1+3)^(0+128),w
 18475  36D3  00AF               	movwf	(??___fltol^(0+128)+3)
 18476  36D4  301F               	movlw	31
 18477  36D5                     u7295:	
 18478  36D5  36AF               	lsrf	(??___fltol^(0+128)+3),f
 18479  36D6  0CAE               	rrf	(??___fltol^(0+128)+2),f
 18480  36D7  0CAD               	rrf	(??___fltol^(0+128)+1),f
 18481  36D8  0CAC               	rrf	??___fltol^(0+128),f
 18482  36D9  0B89               	decfsz	9,f
 18483  36DA  2ED5               	goto	u7295
 18484  36DB  082C               	movf	??___fltol^(0+128),w
 18485  36DC  00B0               	movwf	(??___fltol+4)^(0+128)
 18486  36DD  0830               	movf	(??___fltol+4)^(0+128),w
 18487  36DE  00FA               	movwf	___fltol@sign1
 18488  36DF  17AA               	bsf	(___fltol@f1^(0+128)+2),7
 18489  36E0  30FF               	movlw	255
 18490  36E1  05A8               	andwf	___fltol@f1^(0+128),f
 18491  36E2  30FF               	movlw	255
 18492  36E3  05A9               	andwf	(___fltol@f1+1)^(0+128),f
 18493  36E4  30FF               	movlw	255
 18494  36E5  05AA               	andwf	(___fltol@f1+2)^(0+128),f
 18495  36E6  3000               	movlw	0
 18496  36E7  05AB               	andwf	(___fltol@f1+3)^(0+128),f
 18497  36E8  3096               	movlw	150
 18498  36E9  02FB               	subwf	___fltol@exp1,f
 18499  36EA  1FFB               	btfss	___fltol@exp1,7
 18500  36EB  2EFF               	goto	l5849
 18501  36EC  087B               	movf	___fltol@exp1,w
 18502  36ED  3A80               	xorlw	128
 18503  36EE  3E97               	addlw	151
 18504  36EF  1C03               	btfss	3,0
 18505  36F0  2EC3               	goto	l5827
 18506  36F1                     l5847:	
 18507  36F1  3001               	movlw	1
 18508  36F2                     u7325:	
 18509  36F2  36AB               	lsrf	(___fltol@f1+3)^(0+128),f
 18510  36F3  0CAA               	rrf	(___fltol@f1+2)^(0+128),f
 18511  36F4  0CA9               	rrf	(___fltol@f1+1)^(0+128),f
 18512  36F5  0CA8               	rrf	___fltol@f1^(0+128),f
 18513  36F6  0B89               	decfsz	9,f
 18514  36F7  2EF2               	goto	u7325
 18515  36F8  3001               	movlw	1
 18516  36F9  00AC               	movwf	??___fltol^(0+128)
 18517  36FA  082C               	movf	??___fltol^(0+128),w
 18518  36FB  07FB               	addwf	___fltol@exp1,f
 18519  36FC  1903               	btfsc	3,2
 18520  36FD  2F10               	goto	l5857
 18521  36FE  2EF1               	goto	l5847
 18522  36FF                     l5849:	
 18523  36FF  3020               	movlw	32
 18524  3700  027B               	subwf	___fltol@exp1,w
 18525  3701  1803               	btfsc	3,0
 18526  3702  2EC3               	goto	l5827
 18527  3703                     l1203:	
 18528  3703  087B               	movf	___fltol@exp1,w
 18529  3704  1903               	btfsc	3,2
 18530  3705  2F10               	goto	l5857
 18531  3706  3001               	movlw	1
 18532  3707                     u7355:	
 18533  3707  35A8               	lslf	___fltol@f1^(0+128),f
 18534  3708  0DA9               	rlf	(___fltol@f1+1)^(0+128),f
 18535  3709  0DAA               	rlf	(___fltol@f1+2)^(0+128),f
 18536  370A  0DAB               	rlf	(___fltol@f1+3)^(0+128),f
 18537  370B  0B89               	decfsz	9,f
 18538  370C  2F07               	goto	u7355
 18539  370D  3001               	movlw	1
 18540  370E  02FB               	subwf	___fltol@exp1,f
 18541  370F  2F03               	goto	l1203
 18542  3710                     l5857:	
 18543  3710  087A               	movf	___fltol@sign1,w
 18544  3711  1903               	btfsc	3,2
 18545  3712  0008               	return
 18546  3713  09A8               	comf	___fltol@f1^(0+128),f
 18547  3714  09A9               	comf	(___fltol@f1+1)^(0+128),f
 18548  3715  09AA               	comf	(___fltol@f1+2)^(0+128),f
 18549  3716  09AB               	comf	(___fltol@f1+3)^(0+128),f
 18550  3717  0AA8               	incf	___fltol@f1^(0+128),f
 18551  3718  1903               	skipnz
 18552  3719  0AA9               	incf	(___fltol@f1+1)^(0+128),f
 18553  371A  1903               	skipnz
 18554  371B  0AAA               	incf	(___fltol@f1+2)^(0+128),f
 18555  371C  1903               	skipnz
 18556  371D  0AAB               	incf	(___fltol@f1+3)^(0+128),f
 18557  371E  0008               	return
 18558  371F                     __end_of___fltol:	
 18559                           
 18560                           	psect	text62
 18561  1023                     __ptext62:	
 18562 ;; *************** function ___flmul *****************
 18563 ;; Defined at:
 18564 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
 18565 ;; Parameters:    Size  Location     Type
 18566 ;;  b               4    6[BANK0 ] long 
 18567 ;;  a               4   10[BANK0 ] long 
 18568 ;; Auto vars:     Size  Location     Type
 18569 ;;  prod            4   26[BANK0 ] struct .
 18570 ;;  grs             4   20[BANK0 ] unsigned long 
 18571 ;;  temp            2   30[BANK0 ] struct .
 18572 ;;  bexp            1   25[BANK0 ] unsigned char 
 18573 ;;  aexp            1   24[BANK0 ] unsigned char 
 18574 ;;  sign            1   19[BANK0 ] unsigned char 
 18575 ;; Return value:  Size  Location     Type
 18576 ;;                  4    6[BANK0 ] unsigned char 
 18577 ;; Registers used:
 18578 ;;		wreg, status,2, status,0, pclath, cstack
 18579 ;; Tracked objects:
 18580 ;;		On entry : 0/0
 18581 ;;		On exit  : 0/0
 18582 ;;		Unchanged: 0/0
 18583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18584 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18585 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18586 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18587 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18588 ;;Total ram usage:       26 bytes
 18589 ;; Hardware stack levels used:    1
 18590 ;; Hardware stack levels required when called:    2
 18591 ;; This function calls:
 18592 ;;		__Umul8_16
 18593 ;; This function is called by:
 18594 ;;		_setShortCircuitProtection
 18595 ;;		_setOverCurrentDischargeProtection
 18596 ;;		_updateCurrent
 18597 ;;		_updateVoltages
 18598 ;;		_updateTemperatures
 18599 ;;		_calibrate_BATTSOC
 18600 ;;		_coulomb_counter
 18601 ;;		_logf
 18602 ;; This function uses a non-reentrant model
 18603 ;;
 18604                           
 18605                           
 18606                           ;psect for function ___flmul
 18607  1023                     ___flmul:	
 18608                           
 18609                           ;incstack = 0
 18610                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 18611  1023  0020               	movlb	0	; select bank0
 18612  1024  0829               	movf	___flmul@b+3,w
 18613  1025  3980               	andlw	128
 18614  1026  00AE               	movwf	??___flmul
 18615  1027  082E               	movf	??___flmul,w
 18616  1028  00B3               	movwf	___flmul@sign
 18617  1029  3529               	lslf	___flmul@b+3,w
 18618  102A  00AE               	movwf	??___flmul
 18619  102B  082E               	movf	??___flmul,w
 18620  102C  00B9               	movwf	___flmul@bexp
 18621  102D  1BA8               	btfsc	___flmul@b+2,7
 18622  102E  1439               	bsf	___flmul@bexp,0
 18623  102F  0839               	movf	___flmul@bexp,w
 18624  1030  1903               	btfsc	3,2
 18625  1031  283F               	goto	l5457
 18626  1032  0A39               	incf	___flmul@bexp,w
 18627  1033  1D03               	btfss	3,2
 18628  1034  283D               	goto	l5455
 18629  1035  3000               	movlw	0
 18630  1036  00A9               	movwf	___flmul@b+3
 18631  1037  3000               	movlw	0
 18632  1038  00A8               	movwf	___flmul@b+2
 18633  1039  3000               	movlw	0
 18634  103A  00A7               	movwf	___flmul@b+1
 18635  103B  3000               	movlw	0
 18636  103C  00A6               	movwf	___flmul@b
 18637  103D                     l5455:	
 18638  103D  17A8               	bsf	___flmul@b+2,7
 18639  103E  2847               	goto	l5459
 18640  103F                     l5457:	
 18641  103F  3000               	movlw	0
 18642  1040  00A9               	movwf	___flmul@b+3
 18643  1041  3000               	movlw	0
 18644  1042  00A8               	movwf	___flmul@b+2
 18645  1043  3000               	movlw	0
 18646  1044  00A7               	movwf	___flmul@b+1
 18647  1045  3000               	movlw	0
 18648  1046  00A6               	movwf	___flmul@b
 18649  1047                     l5459:	
 18650  1047  082D               	movf	___flmul@a+3,w
 18651  1048  3980               	andlw	128
 18652  1049  00AE               	movwf	??___flmul
 18653  104A  082E               	movf	??___flmul,w
 18654  104B  06B3               	xorwf	___flmul@sign,f
 18655  104C  352D               	lslf	___flmul@a+3,w
 18656  104D  00AE               	movwf	??___flmul
 18657  104E  082E               	movf	??___flmul,w
 18658  104F  00B8               	movwf	___flmul@aexp
 18659  1050  1BAC               	btfsc	___flmul@a+2,7
 18660  1051  1438               	bsf	___flmul@aexp,0
 18661  1052  0838               	movf	___flmul@aexp,w
 18662  1053  1903               	btfsc	3,2
 18663  1054  2862               	goto	l5475
 18664  1055  0A38               	incf	___flmul@aexp,w
 18665  1056  1D03               	btfss	3,2
 18666  1057  2860               	goto	l5473
 18667  1058  3000               	movlw	0
 18668  1059  00AD               	movwf	___flmul@a+3
 18669  105A  3000               	movlw	0
 18670  105B  00AC               	movwf	___flmul@a+2
 18671  105C  3000               	movlw	0
 18672  105D  00AB               	movwf	___flmul@a+1
 18673  105E  3000               	movlw	0
 18674  105F  00AA               	movwf	___flmul@a
 18675  1060                     l5473:	
 18676  1060  17AC               	bsf	___flmul@a+2,7
 18677  1061  286A               	goto	l5477
 18678  1062                     l5475:	
 18679  1062  3000               	movlw	0
 18680  1063  00AD               	movwf	___flmul@a+3
 18681  1064  3000               	movlw	0
 18682  1065  00AC               	movwf	___flmul@a+2
 18683  1066  3000               	movlw	0
 18684  1067  00AB               	movwf	___flmul@a+1
 18685  1068  3000               	movlw	0
 18686  1069  00AA               	movwf	___flmul@a
 18687  106A                     l5477:	
 18688  106A  0838               	movf	___flmul@aexp,w
 18689  106B  1D03               	btfss	3,2
 18690  106C  0839               	movf	___flmul@bexp,w
 18691  106D  1D03               	btfss	3,2
 18692  106E  2878               	goto	l5485
 18693  106F  3000               	movlw	0
 18694  1070  00A9               	movwf	?___flmul+3
 18695  1071  3000               	movlw	0
 18696  1072  00A8               	movwf	?___flmul+2
 18697  1073  3000               	movlw	0
 18698  1074  00A7               	movwf	?___flmul+1
 18699  1075  3000               	movlw	0
 18700  1076  00A6               	movwf	?___flmul
 18701  1077  0008               	return
 18702  1078                     l5485:	
 18703  1078  0826               	movf	___flmul@b,w
 18704  1079  00AE               	movwf	??___flmul
 18705  107A  082E               	movf	??___flmul,w
 18706  107B  00F1               	movwf	__Umul8_16@multiplicand
 18707  107C  082C               	movf	___flmul@a+2,w
 18708  107D  3187  27E0  3190   	fcall	__Umul8_16
 18709  1080  0872               	movf	?__Umul8_16+1,w
 18710  1081  0020               	movlb	0	; select bank0
 18711  1082  00BF               	movwf	___flmul@temp+1
 18712  1083  0871               	movf	?__Umul8_16,w
 18713  1084  00BE               	movwf	___flmul@temp
 18714  1085  083E               	movf	___flmul@temp,w
 18715  1086  00AE               	movwf	??___flmul
 18716  1087  01AF               	clrf	??___flmul+1
 18717  1088  01B0               	clrf	??___flmul+2
 18718  1089  01B1               	clrf	??___flmul+3
 18719  108A  0831               	movf	??___flmul+3,w
 18720  108B  00B7               	movwf	___flmul@grs+3
 18721  108C  0830               	movf	??___flmul+2,w
 18722  108D  00B6               	movwf	___flmul@grs+2
 18723  108E  082F               	movf	??___flmul+1,w
 18724  108F  00B5               	movwf	___flmul@grs+1
 18725  1090  082E               	movf	??___flmul,w
 18726  1091  00B4               	movwf	___flmul@grs
 18727  1092  083F               	movf	___flmul@temp+1,w
 18728  1093  00AE               	movwf	??___flmul
 18729  1094  01AF               	clrf	??___flmul+1
 18730  1095  01B0               	clrf	??___flmul+2
 18731  1096  01B1               	clrf	??___flmul+3
 18732  1097  0831               	movf	??___flmul+3,w
 18733  1098  00BD               	movwf	___flmul@prod+3
 18734  1099  0830               	movf	??___flmul+2,w
 18735  109A  00BC               	movwf	___flmul@prod+2
 18736  109B  082F               	movf	??___flmul+1,w
 18737  109C  00BB               	movwf	___flmul@prod+1
 18738  109D  082E               	movf	??___flmul,w
 18739  109E  00BA               	movwf	___flmul@prod
 18740  109F  0827               	movf	___flmul@b+1,w
 18741  10A0  00AE               	movwf	??___flmul
 18742  10A1  082E               	movf	??___flmul,w
 18743  10A2  00F1               	movwf	__Umul8_16@multiplicand
 18744  10A3  082B               	movf	___flmul@a+1,w
 18745  10A4  3187  27E0  3190   	fcall	__Umul8_16
 18746  10A7  0872               	movf	?__Umul8_16+1,w
 18747  10A8  0020               	movlb	0	; select bank0
 18748  10A9  00BF               	movwf	___flmul@temp+1
 18749  10AA  0871               	movf	?__Umul8_16,w
 18750  10AB  00BE               	movwf	___flmul@temp
 18751  10AC  083E               	movf	___flmul@temp,w
 18752  10AD  00AE               	movwf	??___flmul
 18753  10AE  01AF               	clrf	??___flmul+1
 18754  10AF  01B0               	clrf	??___flmul+2
 18755  10B0  01B1               	clrf	??___flmul+3
 18756  10B1  082E               	movf	??___flmul,w
 18757  10B2  07B4               	addwf	___flmul@grs,f
 18758  10B3  082F               	movf	??___flmul+1,w
 18759  10B4  3DB5               	addwfc	___flmul@grs+1,f
 18760  10B5  0830               	movf	??___flmul+2,w
 18761  10B6  3DB6               	addwfc	___flmul@grs+2,f
 18762  10B7  0831               	movf	??___flmul+3,w
 18763  10B8  3DB7               	addwfc	___flmul@grs+3,f
 18764  10B9  083F               	movf	___flmul@temp+1,w
 18765  10BA  00AE               	movwf	??___flmul
 18766  10BB  01AF               	clrf	??___flmul+1
 18767  10BC  01B0               	clrf	??___flmul+2
 18768  10BD  01B1               	clrf	??___flmul+3
 18769  10BE  082E               	movf	??___flmul,w
 18770  10BF  07BA               	addwf	___flmul@prod,f
 18771  10C0  082F               	movf	??___flmul+1,w
 18772  10C1  3DBB               	addwfc	___flmul@prod+1,f
 18773  10C2  0830               	movf	??___flmul+2,w
 18774  10C3  3DBC               	addwfc	___flmul@prod+2,f
 18775  10C4  0831               	movf	??___flmul+3,w
 18776  10C5  3DBD               	addwfc	___flmul@prod+3,f
 18777  10C6  0828               	movf	___flmul@b+2,w
 18778  10C7  00AE               	movwf	??___flmul
 18779  10C8  082E               	movf	??___flmul,w
 18780  10C9  00F1               	movwf	__Umul8_16@multiplicand
 18781  10CA  082A               	movf	___flmul@a,w
 18782  10CB  3187  27E0  3190   	fcall	__Umul8_16
 18783  10CE  0872               	movf	?__Umul8_16+1,w
 18784  10CF  0020               	movlb	0	; select bank0
 18785  10D0  00BF               	movwf	___flmul@temp+1
 18786  10D1  0871               	movf	?__Umul8_16,w
 18787  10D2  00BE               	movwf	___flmul@temp
 18788  10D3  083E               	movf	___flmul@temp,w
 18789  10D4  00AE               	movwf	??___flmul
 18790  10D5  01AF               	clrf	??___flmul+1
 18791  10D6  01B0               	clrf	??___flmul+2
 18792  10D7  01B1               	clrf	??___flmul+3
 18793  10D8  082E               	movf	??___flmul,w
 18794  10D9  07B4               	addwf	___flmul@grs,f
 18795  10DA  082F               	movf	??___flmul+1,w
 18796  10DB  3DB5               	addwfc	___flmul@grs+1,f
 18797  10DC  0830               	movf	??___flmul+2,w
 18798  10DD  3DB6               	addwfc	___flmul@grs+2,f
 18799  10DE  0831               	movf	??___flmul+3,w
 18800  10DF  3DB7               	addwfc	___flmul@grs+3,f
 18801  10E0  083F               	movf	___flmul@temp+1,w
 18802  10E1  00AE               	movwf	??___flmul
 18803  10E2  01AF               	clrf	??___flmul+1
 18804  10E3  01B0               	clrf	??___flmul+2
 18805  10E4  01B1               	clrf	??___flmul+3
 18806  10E5  082E               	movf	??___flmul,w
 18807  10E6  07BA               	addwf	___flmul@prod,f
 18808  10E7  082F               	movf	??___flmul+1,w
 18809  10E8  3DBB               	addwfc	___flmul@prod+1,f
 18810  10E9  0830               	movf	??___flmul+2,w
 18811  10EA  3DBC               	addwfc	___flmul@prod+2,f
 18812  10EB  0831               	movf	??___flmul+3,w
 18813  10EC  3DBD               	addwfc	___flmul@prod+3,f
 18814  10ED  3008               	movlw	8
 18815  10EE                     u6655:	
 18816  10EE  35B4               	lslf	___flmul@grs,f
 18817  10EF  0DB5               	rlf	___flmul@grs+1,f
 18818  10F0  0DB6               	rlf	___flmul@grs+2,f
 18819  10F1  0DB7               	rlf	___flmul@grs+3,f
 18820  10F2  0B89               	decfsz	9,f
 18821  10F3  28EE               	goto	u6655
 18822  10F4  0827               	movf	___flmul@b+1,w
 18823  10F5  00AE               	movwf	??___flmul
 18824  10F6  082E               	movf	??___flmul,w
 18825  10F7  00F1               	movwf	__Umul8_16@multiplicand
 18826  10F8  082A               	movf	___flmul@a,w
 18827  10F9  3187  27E0  3190   	fcall	__Umul8_16
 18828  10FC  0872               	movf	?__Umul8_16+1,w
 18829  10FD  0020               	movlb	0	; select bank0
 18830  10FE  00BF               	movwf	___flmul@temp+1
 18831  10FF  0871               	movf	?__Umul8_16,w
 18832  1100  00BE               	movwf	___flmul@temp
 18833  1101  083E               	movf	___flmul@temp,w
 18834  1102  07B4               	addwf	___flmul@grs,f
 18835  1103  083F               	movf	___flmul@temp+1,w
 18836  1104  3DB5               	addwfc	___flmul@grs+1,f
 18837  1105  3000               	movlw	0
 18838  1106  3DB6               	addwfc	___flmul@grs+2,f
 18839  1107  3DB7               	addwfc	___flmul@grs+3,f
 18840  1108  0826               	movf	___flmul@b,w
 18841  1109  00AE               	movwf	??___flmul
 18842  110A  082E               	movf	??___flmul,w
 18843  110B  00F1               	movwf	__Umul8_16@multiplicand
 18844  110C  082B               	movf	___flmul@a+1,w
 18845  110D  3187  27E0  3190   	fcall	__Umul8_16
 18846  1110  0872               	movf	?__Umul8_16+1,w
 18847  1111  0020               	movlb	0	; select bank0
 18848  1112  00BF               	movwf	___flmul@temp+1
 18849  1113  0871               	movf	?__Umul8_16,w
 18850  1114  00BE               	movwf	___flmul@temp
 18851  1115  083E               	movf	___flmul@temp,w
 18852  1116  07B4               	addwf	___flmul@grs,f
 18853  1117  083F               	movf	___flmul@temp+1,w
 18854  1118  3DB5               	addwfc	___flmul@grs+1,f
 18855  1119  3000               	movlw	0
 18856  111A  3DB6               	addwfc	___flmul@grs+2,f
 18857  111B  3DB7               	addwfc	___flmul@grs+3,f
 18858  111C  3008               	movlw	8
 18859  111D                     u6665:	
 18860  111D  35B4               	lslf	___flmul@grs,f
 18861  111E  0DB5               	rlf	___flmul@grs+1,f
 18862  111F  0DB6               	rlf	___flmul@grs+2,f
 18863  1120  0DB7               	rlf	___flmul@grs+3,f
 18864  1121  0B89               	decfsz	9,f
 18865  1122  291D               	goto	u6665
 18866  1123  0826               	movf	___flmul@b,w
 18867  1124  00AE               	movwf	??___flmul
 18868  1125  082E               	movf	??___flmul,w
 18869  1126  00F1               	movwf	__Umul8_16@multiplicand
 18870  1127  082A               	movf	___flmul@a,w
 18871  1128  3187  27E0  3190   	fcall	__Umul8_16
 18872  112B  0872               	movf	?__Umul8_16+1,w
 18873  112C  0020               	movlb	0	; select bank0
 18874  112D  00BF               	movwf	___flmul@temp+1
 18875  112E  0871               	movf	?__Umul8_16,w
 18876  112F  00BE               	movwf	___flmul@temp
 18877  1130  083E               	movf	___flmul@temp,w
 18878  1131  07B4               	addwf	___flmul@grs,f
 18879  1132  083F               	movf	___flmul@temp+1,w
 18880  1133  3DB5               	addwfc	___flmul@grs+1,f
 18881  1134  3000               	movlw	0
 18882  1135  3DB6               	addwfc	___flmul@grs+2,f
 18883  1136  3DB7               	addwfc	___flmul@grs+3,f
 18884  1137  0827               	movf	___flmul@b+1,w
 18885  1138  00AE               	movwf	??___flmul
 18886  1139  082E               	movf	??___flmul,w
 18887  113A  00F1               	movwf	__Umul8_16@multiplicand
 18888  113B  082C               	movf	___flmul@a+2,w
 18889  113C  3187  27E0  3190   	fcall	__Umul8_16
 18890  113F  0872               	movf	?__Umul8_16+1,w
 18891  1140  0020               	movlb	0	; select bank0
 18892  1141  00BF               	movwf	___flmul@temp+1
 18893  1142  0871               	movf	?__Umul8_16,w
 18894  1143  00BE               	movwf	___flmul@temp
 18895  1144  083E               	movf	___flmul@temp,w
 18896  1145  07BA               	addwf	___flmul@prod,f
 18897  1146  083F               	movf	___flmul@temp+1,w
 18898  1147  3DBB               	addwfc	___flmul@prod+1,f
 18899  1148  3000               	movlw	0
 18900  1149  3DBC               	addwfc	___flmul@prod+2,f
 18901  114A  3DBD               	addwfc	___flmul@prod+3,f
 18902  114B  0828               	movf	___flmul@b+2,w
 18903  114C  00AE               	movwf	??___flmul
 18904  114D  082E               	movf	??___flmul,w
 18905  114E  00F1               	movwf	__Umul8_16@multiplicand
 18906  114F  082B               	movf	___flmul@a+1,w
 18907  1150  3187  27E0  3190   	fcall	__Umul8_16
 18908  1153  0872               	movf	?__Umul8_16+1,w
 18909  1154  0020               	movlb	0	; select bank0
 18910  1155  00BF               	movwf	___flmul@temp+1
 18911  1156  0871               	movf	?__Umul8_16,w
 18912  1157  00BE               	movwf	___flmul@temp
 18913  1158  083E               	movf	___flmul@temp,w
 18914  1159  07BA               	addwf	___flmul@prod,f
 18915  115A  083F               	movf	___flmul@temp+1,w
 18916  115B  3DBB               	addwfc	___flmul@prod+1,f
 18917  115C  3000               	movlw	0
 18918  115D  3DBC               	addwfc	___flmul@prod+2,f
 18919  115E  3DBD               	addwfc	___flmul@prod+3,f
 18920  115F  0828               	movf	___flmul@b+2,w
 18921  1160  00AE               	movwf	??___flmul
 18922  1161  082E               	movf	??___flmul,w
 18923  1162  00F1               	movwf	__Umul8_16@multiplicand
 18924  1163  082C               	movf	___flmul@a+2,w
 18925  1164  3187  27E0  3190   	fcall	__Umul8_16
 18926  1167  0872               	movf	?__Umul8_16+1,w
 18927  1168  0020               	movlb	0	; select bank0
 18928  1169  00BF               	movwf	___flmul@temp+1
 18929  116A  0871               	movf	?__Umul8_16,w
 18930  116B  00BE               	movwf	___flmul@temp
 18931  116C  083E               	movf	___flmul@temp,w
 18932  116D  00AE               	movwf	??___flmul
 18933  116E  083F               	movf	___flmul@temp+1,w
 18934  116F  00AF               	movwf	??___flmul+1
 18935  1170  01B0               	clrf	??___flmul+2
 18936  1171  01B1               	clrf	??___flmul+3
 18937  1172  3008               	movlw	8
 18938  1173                     u6675:	
 18939  1173  35AE               	lslf	??___flmul,f
 18940  1174  0DAF               	rlf	??___flmul+1,f
 18941  1175  0DB0               	rlf	??___flmul+2,f
 18942  1176  0DB1               	rlf	??___flmul+3,f
 18943  1177  0B89               	decfsz	9,f
 18944  1178  2973               	goto	u6675
 18945  1179  082E               	movf	??___flmul,w
 18946  117A  07BA               	addwf	___flmul@prod,f
 18947  117B  082F               	movf	??___flmul+1,w
 18948  117C  3DBB               	addwfc	___flmul@prod+1,f
 18949  117D  0830               	movf	??___flmul+2,w
 18950  117E  3DBC               	addwfc	___flmul@prod+2,f
 18951  117F  0831               	movf	??___flmul+3,w
 18952  1180  3DBD               	addwfc	___flmul@prod+3,f
 18953  1181  0834               	movf	___flmul@grs,w
 18954  1182  00AE               	movwf	??___flmul
 18955  1183  0835               	movf	___flmul@grs+1,w
 18956  1184  00AF               	movwf	??___flmul+1
 18957  1185  0836               	movf	___flmul@grs+2,w
 18958  1186  00B0               	movwf	??___flmul+2
 18959  1187  0837               	movf	___flmul@grs+3,w
 18960  1188  00B1               	movwf	??___flmul+3
 18961  1189  3018               	movlw	24
 18962  118A                     u6685:	
 18963  118A  36B1               	lsrf	??___flmul+3,f
 18964  118B  0CB0               	rrf	??___flmul+2,f
 18965  118C  0CAF               	rrf	??___flmul+1,f
 18966  118D  0CAE               	rrf	??___flmul,f
 18967  118E  0B89               	decfsz	9,f
 18968  118F  298A               	goto	u6685
 18969  1190  082E               	movf	??___flmul,w
 18970  1191  07BA               	addwf	___flmul@prod,f
 18971  1192  082F               	movf	??___flmul+1,w
 18972  1193  3DBB               	addwfc	___flmul@prod+1,f
 18973  1194  0830               	movf	??___flmul+2,w
 18974  1195  3DBC               	addwfc	___flmul@prod+2,f
 18975  1196  0831               	movf	??___flmul+3,w
 18976  1197  3DBD               	addwfc	___flmul@prod+3,f
 18977  1198  3008               	movlw	8
 18978  1199                     u6695:	
 18979  1199  35B4               	lslf	___flmul@grs,f
 18980  119A  0DB5               	rlf	___flmul@grs+1,f
 18981  119B  0DB6               	rlf	___flmul@grs+2,f
 18982  119C  0DB7               	rlf	___flmul@grs+3,f
 18983  119D  0B89               	decfsz	9,f
 18984  119E  2999               	goto	u6695
 18985  119F  0839               	movf	___flmul@bexp,w
 18986  11A0  0738               	addwf	___flmul@aexp,w
 18987  11A1  00AE               	movwf	??___flmul
 18988  11A2  01AF               	clrf	??___flmul+1
 18989  11A3  0DAF               	rlf	??___flmul+1,f
 18990  11A4  082E               	movf	??___flmul,w
 18991  11A5  3E82               	addlw	130
 18992  11A6  00BE               	movwf	___flmul@temp
 18993  11A7  30FF               	movlw	255
 18994  11A8  3D2F               	addwfc	??___flmul+1,w
 18995  11A9  00BF               	movwf	___flmul@temp+1
 18996  11AA                     l5537:	
 18997  11AA  1BBC               	btfsc	___flmul@prod+2,7
 18998  11AB  29C1               	goto	l5539
 18999  11AC  3001               	movlw	1
 19000  11AD                     u6705:	
 19001  11AD  35BA               	lslf	___flmul@prod,f
 19002  11AE  0DBB               	rlf	___flmul@prod+1,f
 19003  11AF  0DBC               	rlf	___flmul@prod+2,f
 19004  11B0  0DBD               	rlf	___flmul@prod+3,f
 19005  11B1  0B89               	decfsz	9,f
 19006  11B2  29AD               	goto	u6705
 19007  11B3  1BB7               	btfsc	___flmul@grs+3,7
 19008  11B4  143A               	bsf	___flmul@prod,0
 19009  11B5  3001               	movlw	1
 19010  11B6                     u6725:	
 19011  11B6  35B4               	lslf	___flmul@grs,f
 19012  11B7  0DB5               	rlf	___flmul@grs+1,f
 19013  11B8  0DB6               	rlf	___flmul@grs+2,f
 19014  11B9  0DB7               	rlf	___flmul@grs+3,f
 19015  11BA  0B89               	decfsz	9,f
 19016  11BB  29B6               	goto	u6725
 19017  11BC  30FF               	movlw	255
 19018  11BD  07BE               	addwf	___flmul@temp,f
 19019  11BE  30FF               	movlw	255
 19020  11BF  3DBF               	addwfc	___flmul@temp+1,f
 19021  11C0  29AA               	goto	l5537
 19022  11C1                     l5539:	
 19023  11C1  01B8               	clrf	___flmul@aexp
 19024  11C2  1FB7               	btfss	___flmul@grs+3,7
 19025  11C3  29DA               	goto	l5549
 19026  11C4  30FF               	movlw	255
 19027  11C5  0534               	andwf	___flmul@grs,w
 19028  11C6  00AE               	movwf	??___flmul
 19029  11C7  30FF               	movlw	255
 19030  11C8  0535               	andwf	___flmul@grs+1,w
 19031  11C9  00AF               	movwf	??___flmul+1
 19032  11CA  30FF               	movlw	255
 19033  11CB  0536               	andwf	___flmul@grs+2,w
 19034  11CC  00B0               	movwf	??___flmul+2
 19035  11CD  307F               	movlw	127
 19036  11CE  0537               	andwf	___flmul@grs+3,w
 19037  11CF  00B1               	movwf	??___flmul+3
 19038  11D0  0831               	movf	??___flmul+3,w
 19039  11D1  0430               	iorwf	??___flmul+2,w
 19040  11D2  042F               	iorwf	??___flmul+1,w
 19041  11D3  042E               	iorwf	??___flmul,w
 19042  11D4  1903               	skipnz
 19043  11D5  183A               	btfsc	___flmul@prod,0
 19044  11D6  29D8               	goto	l5545
 19045  11D7  29DA               	goto	l5549
 19046  11D8                     l5545:	
 19047  11D8  01B8               	clrf	___flmul@aexp
 19048  11D9  0AB8               	incf	___flmul@aexp,f
 19049  11DA                     l5549:	
 19050  11DA  0838               	movf	___flmul@aexp,w
 19051  11DB  1903               	btfsc	3,2
 19052  11DC  2A03               	goto	l5559
 19053  11DD  3001               	movlw	1
 19054  11DE  07BA               	addwf	___flmul@prod,f
 19055  11DF  3000               	movlw	0
 19056  11E0  3DBB               	addwfc	___flmul@prod+1,f
 19057  11E1  3000               	movlw	0
 19058  11E2  3DBC               	addwfc	___flmul@prod+2,f
 19059  11E3  3000               	movlw	0
 19060  11E4  3DBD               	addwfc	___flmul@prod+3,f
 19061  11E5  1C3D               	btfss	___flmul@prod+3,0
 19062  11E6  2A03               	goto	l5559
 19063  11E7  083A               	movf	___flmul@prod,w
 19064  11E8  00AE               	movwf	??___flmul
 19065  11E9  083B               	movf	___flmul@prod+1,w
 19066  11EA  00AF               	movwf	??___flmul+1
 19067  11EB  083C               	movf	___flmul@prod+2,w
 19068  11EC  00B0               	movwf	??___flmul+2
 19069  11ED  083D               	movf	___flmul@prod+3,w
 19070  11EE  00B1               	movwf	??___flmul+3
 19071  11EF  3001               	movlw	1
 19072  11F0  00B2               	movwf	??___flmul+4
 19073  11F1                     u6795:	
 19074  11F1  37B1               	asrf	??___flmul+3,f
 19075  11F2  0CB0               	rrf	??___flmul+2,f
 19076  11F3  0CAF               	rrf	??___flmul+1,f
 19077  11F4  0CAE               	rrf	??___flmul,f
 19078  11F5  0BB2               	decfsz	??___flmul+4,f
 19079  11F6  29F1               	goto	u6795
 19080  11F7  0831               	movf	??___flmul+3,w
 19081  11F8  00BD               	movwf	___flmul@prod+3
 19082  11F9  0830               	movf	??___flmul+2,w
 19083  11FA  00BC               	movwf	___flmul@prod+2
 19084  11FB  082F               	movf	??___flmul+1,w
 19085  11FC  00BB               	movwf	___flmul@prod+1
 19086  11FD  082E               	movf	??___flmul,w
 19087  11FE  00BA               	movwf	___flmul@prod
 19088  11FF  3001               	movlw	1
 19089  1200  07BE               	addwf	___flmul@temp,f
 19090  1201  3000               	movlw	0
 19091  1202  3DBF               	addwfc	___flmul@temp+1,f
 19092  1203                     l5559:	
 19093  1203  083F               	movf	___flmul@temp+1,w
 19094  1204  3A80               	xorlw	128
 19095  1205  00AE               	movwf	??___flmul
 19096  1206  3080               	movlw	128
 19097  1207  022E               	subwf	??___flmul,w
 19098  1208  1D03               	skipz
 19099  1209  2A0C               	goto	u6805
 19100  120A  30FF               	movlw	255
 19101  120B  023E               	subwf	___flmul@temp,w
 19102  120C                     u6805:	
 19103  120C  1C03               	skipc
 19104  120D  2A18               	goto	l5563
 19105  120E  307F               	movlw	127
 19106  120F  0020               	movlb	0	; select bank0
 19107  1210  00BD               	movwf	___flmul@prod+3
 19108  1211  3080               	movlw	128
 19109  1212  00BC               	movwf	___flmul@prod+2
 19110  1213  3000               	movlw	0
 19111  1214  00BB               	movwf	___flmul@prod+1
 19112  1215  3000               	movlw	0
 19113  1216  00BA               	movwf	___flmul@prod
 19114  1217  2A42               	goto	l1411
 19115  1218                     l5563:	
 19116  1218  0020               	movlb	0	; select bank0
 19117  1219  083F               	movf	___flmul@temp+1,w
 19118  121A  3A80               	xorlw	128
 19119  121B  00AE               	movwf	??___flmul
 19120  121C  3080               	movlw	128
 19121  121D  022E               	subwf	??___flmul,w
 19122  121E  1D03               	skipz
 19123  121F  2A22               	goto	u6815
 19124  1220  3001               	movlw	1
 19125  1221  023E               	subwf	___flmul@temp,w
 19126  1222                     u6815:	
 19127  1222  1803               	skipnc
 19128  1223  2A2F               	goto	l5569
 19129  1224  3000               	movlw	0
 19130  1225  0020               	movlb	0	; select bank0
 19131  1226  00BD               	movwf	___flmul@prod+3
 19132  1227  3000               	movlw	0
 19133  1228  00BC               	movwf	___flmul@prod+2
 19134  1229  3000               	movlw	0
 19135  122A  00BB               	movwf	___flmul@prod+1
 19136  122B  3000               	movlw	0
 19137  122C  00BA               	movwf	___flmul@prod
 19138  122D  01B3               	clrf	___flmul@sign
 19139  122E  2A42               	goto	l1411
 19140  122F                     l5569:	
 19141  122F  0020               	movlb	0	; select bank0
 19142  1230  083E               	movf	___flmul@temp,w
 19143  1231  00AE               	movwf	??___flmul
 19144  1232  082E               	movf	??___flmul,w
 19145  1233  00B9               	movwf	___flmul@bexp
 19146  1234  30FF               	movlw	255
 19147  1235  05BA               	andwf	___flmul@prod,f
 19148  1236  30FF               	movlw	255
 19149  1237  05BB               	andwf	___flmul@prod+1,f
 19150  1238  307F               	movlw	127
 19151  1239  05BC               	andwf	___flmul@prod+2,f
 19152  123A  3000               	movlw	0
 19153  123B  05BD               	andwf	___flmul@prod+3,f
 19154  123C  1839               	btfsc	___flmul@bexp,0
 19155  123D  17BC               	bsf	___flmul@prod+2,7
 19156  123E  3639               	lsrf	___flmul@bexp,w
 19157  123F  00AE               	movwf	??___flmul
 19158  1240  082E               	movf	??___flmul,w
 19159  1241  00BD               	movwf	___flmul@prod+3
 19160  1242                     l1411:	
 19161  1242  0833               	movf	___flmul@sign,w
 19162  1243  00AE               	movwf	??___flmul
 19163  1244  082E               	movf	??___flmul,w
 19164  1245  04BD               	iorwf	___flmul@prod+3,f
 19165  1246  083D               	movf	___flmul@prod+3,w
 19166  1247  00A9               	movwf	?___flmul+3
 19167  1248  083C               	movf	___flmul@prod+2,w
 19168  1249  00A8               	movwf	?___flmul+2
 19169  124A  083B               	movf	___flmul@prod+1,w
 19170  124B  00A7               	movwf	?___flmul+1
 19171  124C  083A               	movf	___flmul@prod,w
 19172  124D  00A6               	movwf	?___flmul
 19173  124E  0008               	return
 19174  124F                     __end_of___flmul:	
 19175                           
 19176                           	psect	text63
 19177  07E0                     __ptext63:	
 19178 ;; *************** function __Umul8_16 *****************
 19179 ;; Defined at:
 19180 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
 19181 ;; Parameters:    Size  Location     Type
 19182 ;;  multiplier      1    wreg     unsigned char 
 19183 ;;  multiplicand    1    1[COMMON] unsigned char 
 19184 ;; Auto vars:     Size  Location     Type
 19185 ;;  multiplier      1    9[COMMON] unsigned char 
 19186 ;;  word_mpld       2    7[COMMON] unsigned int 
 19187 ;;  product         2    5[COMMON] unsigned int 
 19188 ;; Return value:  Size  Location     Type
 19189 ;;                  2    1[COMMON] unsigned int 
 19190 ;; Registers used:
 19191 ;;		wreg, status,2, status,0
 19192 ;; Tracked objects:
 19193 ;;		On entry : 0/0
 19194 ;;		On exit  : 0/0
 19195 ;;		Unchanged: 0/0
 19196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19197 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19198 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19199 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19200 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19201 ;;Total ram usage:        9 bytes
 19202 ;; Hardware stack levels used:    1
 19203 ;; Hardware stack levels required when called:    1
 19204 ;; This function calls:
 19205 ;;		Nothing
 19206 ;; This function is called by:
 19207 ;;		___flmul
 19208 ;; This function uses a non-reentrant model
 19209 ;;
 19210                           
 19211                           
 19212                           ;psect for function __Umul8_16
 19213  07E0                     __Umul8_16:	
 19214                           
 19215                           ;incstack = 0
 19216                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 19217                           ;__Umul8_16@multiplier stored from wreg
 19218  07E0  00F9               	movwf	__Umul8_16@multiplier
 19219  07E1  01F5               	clrf	__Umul8_16@product
 19220  07E2  01F6               	clrf	__Umul8_16@product+1
 19221  07E3  0871               	movf	__Umul8_16@multiplicand,w
 19222  07E4  00F3               	movwf	??__Umul8_16
 19223  07E5  01F4               	clrf	??__Umul8_16+1
 19224  07E6  0873               	movf	??__Umul8_16,w
 19225  07E7  00F7               	movwf	__Umul8_16@word_mpld
 19226  07E8  0874               	movf	??__Umul8_16+1,w
 19227  07E9  00F8               	movwf	__Umul8_16@word_mpld+1
 19228  07EA                     l5253:	
 19229  07EA  1C79               	btfss	__Umul8_16@multiplier,0
 19230  07EB  2FF0               	goto	l1604
 19231  07EC  0877               	movf	__Umul8_16@word_mpld,w
 19232  07ED  07F5               	addwf	__Umul8_16@product,f
 19233  07EE  0878               	movf	__Umul8_16@word_mpld+1,w
 19234  07EF  3DF6               	addwfc	__Umul8_16@product+1,f
 19235  07F0                     l1604:	
 19236  07F0  3001               	movlw	1
 19237  07F1                     u6195:	
 19238  07F1  35F7               	lslf	__Umul8_16@word_mpld,f
 19239  07F2  0DF8               	rlf	__Umul8_16@word_mpld+1,f
 19240  07F3  0B89               	decfsz	9,f
 19241  07F4  2FF1               	goto	u6195
 19242  07F5  1003               	clrc
 19243  07F6  0CF9               	rrf	__Umul8_16@multiplier,f
 19244  07F7  0879               	movf	__Umul8_16@multiplier,w
 19245  07F8  1D03               	btfss	3,2
 19246  07F9  2FEA               	goto	l5253
 19247  07FA  0876               	movf	__Umul8_16@product+1,w
 19248  07FB  00F2               	movwf	?__Umul8_16+1
 19249  07FC  0875               	movf	__Umul8_16@product,w
 19250  07FD  00F1               	movwf	?__Umul8_16
 19251  07FE  0008               	return
 19252  07FF                     __end_of__Umul8_16:	
 19253                           
 19254                           	psect	text64
 19255  1CE2                     __ptext64:	
 19256 ;; *************** function ___fldiv *****************
 19257 ;; Defined at:
 19258 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 19259 ;; Parameters:    Size  Location     Type
 19260 ;;  a               4   32[BANK0 ] unsigned int 
 19261 ;;  b               4   36[BANK0 ] unsigned int 
 19262 ;; Auto vars:     Size  Location     Type
 19263 ;;  grs             4   52[BANK0 ] unsigned long 
 19264 ;;  rem             4   45[BANK0 ] unsigned long 
 19265 ;;  new_exp         2   50[BANK0 ] int 
 19266 ;;  aexp            1   57[BANK0 ] unsigned char 
 19267 ;;  bexp            1   56[BANK0 ] unsigned char 
 19268 ;;  sign            1   49[BANK0 ] unsigned char 
 19269 ;; Return value:  Size  Location     Type
 19270 ;;                  4   32[BANK0 ] unsigned char 
 19271 ;; Registers used:
 19272 ;;		wreg, status,2, status,0
 19273 ;; Tracked objects:
 19274 ;;		On entry : 0/0
 19275 ;;		On exit  : 0/0
 19276 ;;		Unchanged: 0/0
 19277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19278 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19279 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19280 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19281 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19282 ;;Total ram usage:       26 bytes
 19283 ;; Hardware stack levels used:    1
 19284 ;; Hardware stack levels required when called:    1
 19285 ;; This function calls:
 19286 ;;		Nothing
 19287 ;; This function is called by:
 19288 ;;		_setShortCircuitProtection
 19289 ;;		_setOverCurrentDischargeProtection
 19290 ;;		_updateCurrent
 19291 ;;		_updateVoltages
 19292 ;;		_updateTemperatures
 19293 ;;		_calibrate_BATTSOC
 19294 ;;		_coulomb_counter
 19295 ;;		_logf
 19296 ;;		_AFE_getSetShortCircuitCurrent
 19297 ;;		_AFE_getOverCurrentDischargeCurrent
 19298 ;; This function uses a non-reentrant model
 19299 ;;
 19300                           
 19301                           
 19302                           ;psect for function ___fldiv
 19303  1CE2                     ___fldiv:	
 19304                           
 19305                           ;incstack = 0
 19306                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 19307  1CE2  0020               	movlb	0	; select bank0
 19308  1CE3  0847               	movf	___fldiv@b+3,w
 19309  1CE4  3980               	andlw	128
 19310  1CE5  00C8               	movwf	??___fldiv
 19311  1CE6  0848               	movf	??___fldiv,w
 19312  1CE7  00D1               	movwf	___fldiv@sign
 19313  1CE8  3547               	lslf	___fldiv@b+3,w
 19314  1CE9  00C8               	movwf	??___fldiv
 19315  1CEA  0848               	movf	??___fldiv,w
 19316  1CEB  00D8               	movwf	___fldiv@bexp
 19317  1CEC  1BC6               	btfsc	___fldiv@b+2,7
 19318  1CED  1458               	bsf	___fldiv@bexp,0
 19319  1CEE  0858               	movf	___fldiv@bexp,w
 19320  1CEF  1903               	btfsc	3,2
 19321  1CF0  2CFF               	goto	l5319
 19322  1CF1  0A58               	incf	___fldiv@bexp,w
 19323  1CF2  1D03               	btfss	3,2
 19324  1CF3  2CFC               	goto	l5315
 19325  1CF4  3000               	movlw	0
 19326  1CF5  00C7               	movwf	___fldiv@b+3
 19327  1CF6  3000               	movlw	0
 19328  1CF7  00C6               	movwf	___fldiv@b+2
 19329  1CF8  3000               	movlw	0
 19330  1CF9  00C5               	movwf	___fldiv@b+1
 19331  1CFA  3000               	movlw	0
 19332  1CFB  00C4               	movwf	___fldiv@b
 19333  1CFC                     l5315:	
 19334  1CFC  17C6               	bsf	___fldiv@b+2,7
 19335  1CFD  01C7               	clrf	___fldiv@b+3
 19336  1CFE  2D07               	goto	l5321
 19337  1CFF                     l5319:	
 19338  1CFF  3000               	movlw	0
 19339  1D00  00C7               	movwf	___fldiv@b+3
 19340  1D01  3000               	movlw	0
 19341  1D02  00C6               	movwf	___fldiv@b+2
 19342  1D03  3000               	movlw	0
 19343  1D04  00C5               	movwf	___fldiv@b+1
 19344  1D05  3000               	movlw	0
 19345  1D06  00C4               	movwf	___fldiv@b
 19346  1D07                     l5321:	
 19347  1D07  0843               	movf	___fldiv@a+3,w
 19348  1D08  3980               	andlw	128
 19349  1D09  00C8               	movwf	??___fldiv
 19350  1D0A  0848               	movf	??___fldiv,w
 19351  1D0B  06D1               	xorwf	___fldiv@sign,f
 19352  1D0C  3543               	lslf	___fldiv@a+3,w
 19353  1D0D  00C8               	movwf	??___fldiv
 19354  1D0E  0848               	movf	??___fldiv,w
 19355  1D0F  00D9               	movwf	___fldiv@aexp
 19356  1D10  1BC2               	btfsc	___fldiv@a+2,7
 19357  1D11  1459               	bsf	___fldiv@aexp,0
 19358  1D12  0859               	movf	___fldiv@aexp,w
 19359  1D13  1903               	btfsc	3,2
 19360  1D14  2D23               	goto	l5339
 19361  1D15  0A59               	incf	___fldiv@aexp,w
 19362  1D16  1D03               	btfss	3,2
 19363  1D17  2D20               	goto	l5335
 19364  1D18  3000               	movlw	0
 19365  1D19  00C3               	movwf	___fldiv@a+3
 19366  1D1A  3000               	movlw	0
 19367  1D1B  00C2               	movwf	___fldiv@a+2
 19368  1D1C  3000               	movlw	0
 19369  1D1D  00C1               	movwf	___fldiv@a+1
 19370  1D1E  3000               	movlw	0
 19371  1D1F  00C0               	movwf	___fldiv@a
 19372  1D20                     l5335:	
 19373  1D20  17C2               	bsf	___fldiv@a+2,7
 19374  1D21  01C3               	clrf	___fldiv@a+3
 19375  1D22  2D2B               	goto	l1359
 19376  1D23                     l5339:	
 19377  1D23  3000               	movlw	0
 19378  1D24  00C3               	movwf	___fldiv@a+3
 19379  1D25  3000               	movlw	0
 19380  1D26  00C2               	movwf	___fldiv@a+2
 19381  1D27  3000               	movlw	0
 19382  1D28  00C1               	movwf	___fldiv@a+1
 19383  1D29  3000               	movlw	0
 19384  1D2A  00C0               	movwf	___fldiv@a
 19385  1D2B                     l1359:	
 19386  1D2B  0843               	movf	___fldiv@a+3,w
 19387  1D2C  0442               	iorwf	___fldiv@a+2,w
 19388  1D2D  0441               	iorwf	___fldiv@a+1,w
 19389  1D2E  0440               	iorwf	___fldiv@a,w
 19390  1D2F  1D03               	skipz
 19391  1D30  2D4A               	goto	l5349
 19392  1D31  3000               	movlw	0
 19393  1D32  00C7               	movwf	___fldiv@b+3
 19394  1D33  3000               	movlw	0
 19395  1D34  00C6               	movwf	___fldiv@b+2
 19396  1D35  3000               	movlw	0
 19397  1D36  00C5               	movwf	___fldiv@b+1
 19398  1D37  3000               	movlw	0
 19399  1D38  00C4               	movwf	___fldiv@b
 19400  1D39  3080               	movlw	128
 19401  1D3A  04C6               	iorwf	___fldiv@b+2,f
 19402  1D3B  307F               	movlw	127
 19403  1D3C  04C7               	iorwf	___fldiv@b+3,f
 19404  1D3D                     L5:	
 19405  1D3D  0851               	movf	___fldiv@sign,w
 19406  1D3E  00C8               	movwf	??___fldiv
 19407  1D3F  0848               	movf	??___fldiv,w
 19408  1D40  04C7               	iorwf	___fldiv@b+3,f
 19409  1D41  0847               	movf	___fldiv@b+3,w
 19410  1D42  00C3               	movwf	?___fldiv+3
 19411  1D43  0846               	movf	___fldiv@b+2,w
 19412  1D44  00C2               	movwf	?___fldiv+2
 19413  1D45  0845               	movf	___fldiv@b+1,w
 19414  1D46  00C1               	movwf	?___fldiv+1
 19415  1D47  0844               	movf	___fldiv@b,w
 19416  1D48  00C0               	movwf	?___fldiv
 19417  1D49  0008               	return
 19418  1D4A                     l5349:	
 19419  1D4A  0858               	movf	___fldiv@bexp,w
 19420  1D4B  1D03               	btfss	3,2
 19421  1D4C  2D56               	goto	l5355
 19422  1D4D  3000               	movlw	0
 19423  1D4E  00C3               	movwf	?___fldiv+3
 19424  1D4F  3000               	movlw	0
 19425  1D50  00C2               	movwf	?___fldiv+2
 19426  1D51  3000               	movlw	0
 19427  1D52  00C1               	movwf	?___fldiv+1
 19428  1D53  3000               	movlw	0
 19429  1D54  00C0               	movwf	?___fldiv
 19430  1D55  0008               	return
 19431  1D56                     l5355:	
 19432  1D56  0858               	movf	___fldiv@bexp,w
 19433  1D57  00C8               	movwf	??___fldiv
 19434  1D58  01C9               	clrf	??___fldiv+1
 19435  1D59  0849               	movf	??___fldiv+1,w
 19436  1D5A  00CB               	movwf	??___fldiv+3
 19437  1D5B  0859               	movf	___fldiv@aexp,w
 19438  1D5C  0248               	subwf	??___fldiv,w
 19439  1D5D  00CA               	movwf	??___fldiv+2
 19440  1D5E  1C03               	skipc
 19441  1D5F  03CB               	decf	??___fldiv+3,f
 19442  1D60  084A               	movf	??___fldiv+2,w
 19443  1D61  3E7F               	addlw	127
 19444  1D62  00D2               	movwf	___fldiv@new_exp
 19445  1D63  3000               	movlw	0
 19446  1D64  3D4B               	addwfc	??___fldiv+3,w
 19447  1D65  00D3               	movwf	___fldiv@new_exp+1
 19448  1D66  0847               	movf	___fldiv@b+3,w
 19449  1D67  00D0               	movwf	___fldiv@rem+3
 19450  1D68  0846               	movf	___fldiv@b+2,w
 19451  1D69  00CF               	movwf	___fldiv@rem+2
 19452  1D6A  0845               	movf	___fldiv@b+1,w
 19453  1D6B  00CE               	movwf	___fldiv@rem+1
 19454  1D6C  0844               	movf	___fldiv@b,w
 19455  1D6D  00CD               	movwf	___fldiv@rem
 19456  1D6E  3000               	movlw	0
 19457  1D6F  00C7               	movwf	___fldiv@b+3
 19458  1D70  3000               	movlw	0
 19459  1D71  00C6               	movwf	___fldiv@b+2
 19460  1D72  3000               	movlw	0
 19461  1D73  00C5               	movwf	___fldiv@b+1
 19462  1D74  3000               	movlw	0
 19463  1D75  00C4               	movwf	___fldiv@b
 19464  1D76  3000               	movlw	0
 19465  1D77  00D7               	movwf	___fldiv@grs+3
 19466  1D78  3000               	movlw	0
 19467  1D79  00D6               	movwf	___fldiv@grs+2
 19468  1D7A  3000               	movlw	0
 19469  1D7B  00D5               	movwf	___fldiv@grs+1
 19470  1D7C  3000               	movlw	0
 19471  1D7D  00D4               	movwf	___fldiv@grs
 19472  1D7E  01D9               	clrf	___fldiv@aexp
 19473  1D7F                     l5383:	
 19474  1D7F  301A               	movlw	26
 19475  1D80  0259               	subwf	___fldiv@aexp,w
 19476  1D81  1803               	btfsc	3,0
 19477  1D82  2DBB               	goto	l5385
 19478  1D83  0859               	movf	___fldiv@aexp,w
 19479  1D84  1903               	btfsc	3,2
 19480  1D85  2D9D               	goto	l5375
 19481  1D86  3001               	movlw	1
 19482  1D87                     u6375:	
 19483  1D87  35CD               	lslf	___fldiv@rem,f
 19484  1D88  0DCE               	rlf	___fldiv@rem+1,f
 19485  1D89  0DCF               	rlf	___fldiv@rem+2,f
 19486  1D8A  0DD0               	rlf	___fldiv@rem+3,f
 19487  1D8B  0B89               	decfsz	9,f
 19488  1D8C  2D87               	goto	u6375
 19489  1D8D  3001               	movlw	1
 19490  1D8E                     u6385:	
 19491  1D8E  35C4               	lslf	___fldiv@b,f
 19492  1D8F  0DC5               	rlf	___fldiv@b+1,f
 19493  1D90  0DC6               	rlf	___fldiv@b+2,f
 19494  1D91  0DC7               	rlf	___fldiv@b+3,f
 19495  1D92  0B89               	decfsz	9,f
 19496  1D93  2D8E               	goto	u6385
 19497  1D94  1BD7               	btfsc	___fldiv@grs+3,7
 19498  1D95  1444               	bsf	___fldiv@b,0
 19499  1D96  3001               	movlw	1
 19500  1D97                     u6405:	
 19501  1D97  35D4               	lslf	___fldiv@grs,f
 19502  1D98  0DD5               	rlf	___fldiv@grs+1,f
 19503  1D99  0DD6               	rlf	___fldiv@grs+2,f
 19504  1D9A  0DD7               	rlf	___fldiv@grs+3,f
 19505  1D9B  0B89               	decfsz	9,f
 19506  1D9C  2D97               	goto	u6405
 19507  1D9D                     l5375:	
 19508  1D9D  0843               	movf	___fldiv@a+3,w
 19509  1D9E  0250               	subwf	___fldiv@rem+3,w
 19510  1D9F  1D03               	skipz
 19511  1DA0  2DAB               	goto	u6415
 19512  1DA1  0842               	movf	___fldiv@a+2,w
 19513  1DA2  024F               	subwf	___fldiv@rem+2,w
 19514  1DA3  1D03               	skipz
 19515  1DA4  2DAB               	goto	u6415
 19516  1DA5  0841               	movf	___fldiv@a+1,w
 19517  1DA6  024E               	subwf	___fldiv@rem+1,w
 19518  1DA7  1D03               	skipz
 19519  1DA8  2DAB               	goto	u6415
 19520  1DA9  0840               	movf	___fldiv@a,w
 19521  1DAA  024D               	subwf	___fldiv@rem,w
 19522  1DAB                     u6415:	
 19523  1DAB  1C03               	skipc
 19524  1DAC  2DB6               	goto	l5381
 19525  1DAD  1757               	bsf	___fldiv@grs+3,6
 19526  1DAE  0840               	movf	___fldiv@a,w
 19527  1DAF  02CD               	subwf	___fldiv@rem,f
 19528  1DB0  0841               	movf	___fldiv@a+1,w
 19529  1DB1  3BCE               	subwfb	___fldiv@rem+1,f
 19530  1DB2  0842               	movf	___fldiv@a+2,w
 19531  1DB3  3BCF               	subwfb	___fldiv@rem+2,f
 19532  1DB4  0843               	movf	___fldiv@a+3,w
 19533  1DB5  3BD0               	subwfb	___fldiv@rem+3,f
 19534  1DB6                     l5381:	
 19535  1DB6  3001               	movlw	1
 19536  1DB7  00C8               	movwf	??___fldiv
 19537  1DB8  0848               	movf	??___fldiv,w
 19538  1DB9  07D9               	addwf	___fldiv@aexp,f
 19539  1DBA  2D7F               	goto	l5383
 19540  1DBB                     l5385:	
 19541  1DBB  0850               	movf	___fldiv@rem+3,w
 19542  1DBC  044F               	iorwf	___fldiv@rem+2,w
 19543  1DBD  044E               	iorwf	___fldiv@rem+1,w
 19544  1DBE  044D               	iorwf	___fldiv@rem,w
 19545  1DBF  1D03               	btfss	3,2
 19546  1DC0  1454               	bsf	___fldiv@grs,0
 19547  1DC1                     l5399:	
 19548  1DC1  1BC6               	btfsc	___fldiv@b+2,7
 19549  1DC2  2DD8               	goto	l5401
 19550  1DC3  3001               	movlw	1
 19551  1DC4                     u6445:	
 19552  1DC4  35C4               	lslf	___fldiv@b,f
 19553  1DC5  0DC5               	rlf	___fldiv@b+1,f
 19554  1DC6  0DC6               	rlf	___fldiv@b+2,f
 19555  1DC7  0DC7               	rlf	___fldiv@b+3,f
 19556  1DC8  0B89               	decfsz	9,f
 19557  1DC9  2DC4               	goto	u6445
 19558  1DCA  1BD7               	btfsc	___fldiv@grs+3,7
 19559  1DCB  1444               	bsf	___fldiv@b,0
 19560  1DCC  3001               	movlw	1
 19561  1DCD                     u6465:	
 19562  1DCD  35D4               	lslf	___fldiv@grs,f
 19563  1DCE  0DD5               	rlf	___fldiv@grs+1,f
 19564  1DCF  0DD6               	rlf	___fldiv@grs+2,f
 19565  1DD0  0DD7               	rlf	___fldiv@grs+3,f
 19566  1DD1  0B89               	decfsz	9,f
 19567  1DD2  2DCD               	goto	u6465
 19568  1DD3  30FF               	movlw	255
 19569  1DD4  07D2               	addwf	___fldiv@new_exp,f
 19570  1DD5  30FF               	movlw	255
 19571  1DD6  3DD3               	addwfc	___fldiv@new_exp+1,f
 19572  1DD7  2DC1               	goto	l5399
 19573  1DD8                     l5401:	
 19574  1DD8  01D9               	clrf	___fldiv@aexp
 19575  1DD9  1FD7               	btfss	___fldiv@grs+3,7
 19576  1DDA  2DF1               	goto	l5411
 19577  1DDB  30FF               	movlw	255
 19578  1DDC  0554               	andwf	___fldiv@grs,w
 19579  1DDD  00C8               	movwf	??___fldiv
 19580  1DDE  30FF               	movlw	255
 19581  1DDF  0555               	andwf	___fldiv@grs+1,w
 19582  1DE0  00C9               	movwf	??___fldiv+1
 19583  1DE1  30FF               	movlw	255
 19584  1DE2  0556               	andwf	___fldiv@grs+2,w
 19585  1DE3  00CA               	movwf	??___fldiv+2
 19586  1DE4  307F               	movlw	127
 19587  1DE5  0557               	andwf	___fldiv@grs+3,w
 19588  1DE6  00CB               	movwf	??___fldiv+3
 19589  1DE7  084B               	movf	??___fldiv+3,w
 19590  1DE8  044A               	iorwf	??___fldiv+2,w
 19591  1DE9  0449               	iorwf	??___fldiv+1,w
 19592  1DEA  0448               	iorwf	??___fldiv,w
 19593  1DEB  1903               	skipnz
 19594  1DEC  1844               	btfsc	___fldiv@b,0
 19595  1DED  2DEF               	goto	l5407
 19596  1DEE  2DF1               	goto	l5411
 19597  1DEF                     l5407:	
 19598  1DEF  01D9               	clrf	___fldiv@aexp
 19599  1DF0  0AD9               	incf	___fldiv@aexp,f
 19600  1DF1                     l5411:	
 19601  1DF1  0859               	movf	___fldiv@aexp,w
 19602  1DF2  1903               	btfsc	3,2
 19603  1DF3  2E1A               	goto	l5421
 19604  1DF4  3001               	movlw	1
 19605  1DF5  07C4               	addwf	___fldiv@b,f
 19606  1DF6  3000               	movlw	0
 19607  1DF7  3DC5               	addwfc	___fldiv@b+1,f
 19608  1DF8  3000               	movlw	0
 19609  1DF9  3DC6               	addwfc	___fldiv@b+2,f
 19610  1DFA  3000               	movlw	0
 19611  1DFB  3DC7               	addwfc	___fldiv@b+3,f
 19612  1DFC  1C47               	btfss	___fldiv@b+3,0
 19613  1DFD  2E1A               	goto	l5421
 19614  1DFE  0844               	movf	___fldiv@b,w
 19615  1DFF  00C8               	movwf	??___fldiv
 19616  1E00  0845               	movf	___fldiv@b+1,w
 19617  1E01  00C9               	movwf	??___fldiv+1
 19618  1E02  0846               	movf	___fldiv@b+2,w
 19619  1E03  00CA               	movwf	??___fldiv+2
 19620  1E04  0847               	movf	___fldiv@b+3,w
 19621  1E05  00CB               	movwf	??___fldiv+3
 19622  1E06  3001               	movlw	1
 19623  1E07  00CC               	movwf	??___fldiv+4
 19624  1E08                     u6535:	
 19625  1E08  37CB               	asrf	??___fldiv+3,f
 19626  1E09  0CCA               	rrf	??___fldiv+2,f
 19627  1E0A  0CC9               	rrf	??___fldiv+1,f
 19628  1E0B  0CC8               	rrf	??___fldiv,f
 19629  1E0C  0BCC               	decfsz	??___fldiv+4,f
 19630  1E0D  2E08               	goto	u6535
 19631  1E0E  084B               	movf	??___fldiv+3,w
 19632  1E0F  00C7               	movwf	___fldiv@b+3
 19633  1E10  084A               	movf	??___fldiv+2,w
 19634  1E11  00C6               	movwf	___fldiv@b+2
 19635  1E12  0849               	movf	??___fldiv+1,w
 19636  1E13  00C5               	movwf	___fldiv@b+1
 19637  1E14  0848               	movf	??___fldiv,w
 19638  1E15  00C4               	movwf	___fldiv@b
 19639  1E16  3001               	movlw	1
 19640  1E17  07D2               	addwf	___fldiv@new_exp,f
 19641  1E18  3000               	movlw	0
 19642  1E19  3DD3               	addwfc	___fldiv@new_exp+1,f
 19643  1E1A                     l5421:	
 19644  1E1A  0853               	movf	___fldiv@new_exp+1,w
 19645  1E1B  3A80               	xorlw	128
 19646  1E1C  00C8               	movwf	??___fldiv
 19647  1E1D  3080               	movlw	128
 19648  1E1E  0248               	subwf	??___fldiv,w
 19649  1E1F  1D03               	skipz
 19650  1E20  2E23               	goto	u6545
 19651  1E21  30FF               	movlw	255
 19652  1E22  0252               	subwf	___fldiv@new_exp,w
 19653  1E23                     u6545:	
 19654  1E23  1C03               	skipc
 19655  1E24  2E32               	goto	l1380
 19656  1E25  30FF               	movlw	255
 19657  1E26  0020               	movlb	0	; select bank0
 19658  1E27  00D2               	movwf	___fldiv@new_exp
 19659  1E28  3000               	movlw	0
 19660  1E29  00D3               	movwf	___fldiv@new_exp+1
 19661  1E2A  3000               	movlw	0
 19662  1E2B  00C7               	movwf	___fldiv@b+3
 19663  1E2C  3000               	movlw	0
 19664  1E2D  00C6               	movwf	___fldiv@b+2
 19665  1E2E  3000               	movlw	0
 19666  1E2F  00C5               	movwf	___fldiv@b+1
 19667  1E30  3000               	movlw	0
 19668  1E31  00C4               	movwf	___fldiv@b
 19669  1E32                     l1380:	
 19670  1E32  0020               	movlb	0	; select bank0
 19671  1E33  0853               	movf	___fldiv@new_exp+1,w
 19672  1E34  3A80               	xorlw	128
 19673  1E35  00C8               	movwf	??___fldiv
 19674  1E36  3080               	movlw	128
 19675  1E37  0248               	subwf	??___fldiv,w
 19676  1E38  1D03               	skipz
 19677  1E39  2E3C               	goto	u6555
 19678  1E3A  3001               	movlw	1
 19679  1E3B  0252               	subwf	___fldiv@new_exp,w
 19680  1E3C                     u6555:	
 19681  1E3C  1803               	skipnc
 19682  1E3D  2E4A               	goto	l1381
 19683  1E3E  0020               	movlb	0	; select bank0
 19684  1E3F  01D2               	clrf	___fldiv@new_exp
 19685  1E40  01D3               	clrf	___fldiv@new_exp+1
 19686  1E41  3000               	movlw	0
 19687  1E42  00C7               	movwf	___fldiv@b+3
 19688  1E43  3000               	movlw	0
 19689  1E44  00C6               	movwf	___fldiv@b+2
 19690  1E45  3000               	movlw	0
 19691  1E46  00C5               	movwf	___fldiv@b+1
 19692  1E47  3000               	movlw	0
 19693  1E48  00C4               	movwf	___fldiv@b
 19694  1E49  01D1               	clrf	___fldiv@sign
 19695  1E4A                     l1381:	
 19696  1E4A  0020               	movlb	0	; select bank0
 19697  1E4B  0852               	movf	___fldiv@new_exp,w
 19698  1E4C  00C8               	movwf	??___fldiv
 19699  1E4D  0848               	movf	??___fldiv,w
 19700  1E4E  00D8               	movwf	___fldiv@bexp
 19701  1E4F  1C58               	btfss	___fldiv@bexp,0
 19702  1E50  2E53               	goto	l5435
 19703  1E51  17C6               	bsf	___fldiv@b+2,7
 19704  1E52  2E57               	goto	l1383
 19705  1E53                     l5435:	
 19706  1E53  307F               	movlw	127
 19707  1E54  00C8               	movwf	??___fldiv
 19708  1E55  0848               	movf	??___fldiv,w
 19709  1E56  05C6               	andwf	___fldiv@b+2,f
 19710  1E57                     l1383:	
 19711  1E57  3658               	lsrf	___fldiv@bexp,w
 19712  1E58  00C8               	movwf	??___fldiv
 19713  1E59  0848               	movf	??___fldiv,w
 19714  1E5A  00C7               	movwf	___fldiv@b+3
 19715  1E5B  2D3D               	goto	L5
 19716  1E5C                     __end_of___fldiv:	
 19717                           
 19718                           	psect	text65
 19719  2002                     __ptext65:	
 19720 ;; *************** function _AFE_Status *****************
 19721 ;; Defined at:
 19722 ;;		line 45 in file "algorithms.c"
 19723 ;; Parameters:    Size  Location     Type
 19724 ;;		None
 19725 ;; Auto vars:     Size  Location     Type
 19726 ;;  error_flag      2    2[BANK0 ] int 
 19727 ;; Return value:  Size  Location     Type
 19728 ;;                  2    0[BANK0 ] int 
 19729 ;; Registers used:
 19730 ;;		wreg, status,2, status,0, pclath, cstack
 19731 ;; Tracked objects:
 19732 ;;		On entry : 0/0
 19733 ;;		On exit  : 0/0
 19734 ;;		Unchanged: 0/0
 19735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19736 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19737 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19738 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19739 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19740 ;;Total ram usage:        5 bytes
 19741 ;; Hardware stack levels used:    1
 19742 ;; Hardware stack levels required when called:    3
 19743 ;; This function calls:
 19744 ;;		_readRegister
 19745 ;; This function is called by:
 19746 ;;		_AFE_UPDATE
 19747 ;; This function uses a non-reentrant model
 19748 ;;
 19749                           
 19750                           
 19751                           ;psect for function _AFE_Status
 19752  2002                     _AFE_Status:	
 19753                           
 19754                           ;algorithms.c: 47:     int error_flag = 0;
 19755                           
 19756                           ;incstack = 0
 19757                           ; Regs used in _AFE_Status: [wreg+status,2+status,0+pclath+cstack]
 19758  2002  0020               	movlb	0	; select bank0
 19759  2003  01A2               	clrf	AFE_Status@error_flag
 19760  2004  01A3               	clrf	AFE_Status@error_flag+1
 19761                           
 19762                           ;algorithms.c: 48:     sys_stat.regByte = readRegister(0x18, 0x00);
 19763  2005  3018               	movlw	24
 19764  2006  00F5               	movwf	readRegister@slaveAddress
 19765  2007  3000               	movlw	0
 19766  2008  00F6               	movwf	readRegister@slaveAddress+1
 19767  2009  3000               	movlw	0
 19768  200A  00F7               	movwf	readRegister@regAddress
 19769  200B  00F8               	movwf	readRegister@regAddress+1
 19770  200C  31B4  249E  31A0   	fcall	_readRegister
 19771  200F  0875               	movf	?_readRegister,w
 19772  2010  00FB               	movwf	??_AFE_Status
 19773  2011  087B               	movf	??_AFE_Status,w
 19774  2012  00FC               	movwf	_sys_stat
 19775                           
 19776                           ;algorithms.c: 52:     if (sys_stat.regByte & 0x20){
 19777  2013  1EFC               	btfss	_sys_stat,5
 19778  2014  281F               	goto	l7605
 19779                           
 19780                           ;algorithms.c: 53:         XR_error = 1;
 19781  2015  3001               	movlw	1
 19782  2016  0023               	movlb	3	; select bank3
 19783  2017  00DA               	movwf	_XR_error^(0+384)
 19784  2018  3000               	movlw	0
 19785  2019  00DB               	movwf	(_XR_error^(0+384)+1)
 19786                           
 19787                           ;algorithms.c: 54:         error_flag=1;
 19788  201A  3001               	movlw	1
 19789  201B  0020               	movlb	0	; select bank0
 19790  201C  00A2               	movwf	AFE_Status@error_flag
 19791  201D  3000               	movlw	0
 19792  201E  00A3               	movwf	AFE_Status@error_flag+1
 19793  201F                     l7605:	
 19794                           
 19795                           ;algorithms.c: 57:     if(sys_stat.regByte & 0x10){
 19796  201F  1E7C               	btfss	_sys_stat,4
 19797  2020  282B               	goto	l7609
 19798                           
 19799                           ;algorithms.c: 58:         alert_error = 1;
 19800  2021  3001               	movlw	1
 19801  2022  0023               	movlb	3	; select bank3
 19802  2023  00D8               	movwf	_alert_error^(0+384)
 19803  2024  3000               	movlw	0
 19804  2025  00D9               	movwf	(_alert_error^(0+384)+1)
 19805                           
 19806                           ;algorithms.c: 59:         error_flag=1;
 19807  2026  3001               	movlw	1
 19808  2027  0020               	movlb	0	; select bank0
 19809  2028  00A2               	movwf	AFE_Status@error_flag
 19810  2029  3000               	movlw	0
 19811  202A  00A3               	movwf	AFE_Status@error_flag+1
 19812  202B                     l7609:	
 19813                           
 19814                           ;algorithms.c: 62:     if(sys_stat.regByte & 0x08 ){
 19815  202B  1DFC               	btfss	_sys_stat,3
 19816  202C  2837               	goto	l7613
 19817                           
 19818                           ;algorithms.c: 63:         uv_error = 1;
 19819  202D  3001               	movlw	1
 19820  202E  0023               	movlb	3	; select bank3
 19821  202F  00D6               	movwf	_uv_error^(0+384)
 19822  2030  3000               	movlw	0
 19823  2031  00D7               	movwf	(_uv_error^(0+384)+1)
 19824                           
 19825                           ;algorithms.c: 64:         error_flag=1;
 19826  2032  3001               	movlw	1
 19827  2033  0020               	movlb	0	; select bank0
 19828  2034  00A2               	movwf	AFE_Status@error_flag
 19829  2035  3000               	movlw	0
 19830  2036  00A3               	movwf	AFE_Status@error_flag+1
 19831  2037                     l7613:	
 19832                           
 19833                           ;algorithms.c: 67:     if(sys_stat.regByte & 0x04 ){
 19834  2037  1D7C               	btfss	_sys_stat,2
 19835  2038  2843               	goto	l7617
 19836                           
 19837                           ;algorithms.c: 68:         ov_error = 1;
 19838  2039  3001               	movlw	1
 19839  203A  0023               	movlb	3	; select bank3
 19840  203B  00D4               	movwf	_ov_error^(0+384)
 19841  203C  3000               	movlw	0
 19842  203D  00D5               	movwf	(_ov_error^(0+384)+1)
 19843                           
 19844                           ;algorithms.c: 69:         error_flag=1;
 19845  203E  3001               	movlw	1
 19846  203F  0020               	movlb	0	; select bank0
 19847  2040  00A2               	movwf	AFE_Status@error_flag
 19848  2041  3000               	movlw	0
 19849  2042  00A3               	movwf	AFE_Status@error_flag+1
 19850  2043                     l7617:	
 19851                           
 19852                           ;algorithms.c: 72:    if(sys_stat.regByte & 0x02 ){
 19853  2043  1CFC               	btfss	_sys_stat,1
 19854  2044  284F               	goto	l7621
 19855                           
 19856                           ;algorithms.c: 73:         scd_error = 1;
 19857  2045  3001               	movlw	1
 19858  2046  0023               	movlb	3	; select bank3
 19859  2047  00D2               	movwf	_scd_error^(0+384)
 19860  2048  3000               	movlw	0
 19861  2049  00D3               	movwf	(_scd_error^(0+384)+1)
 19862                           
 19863                           ;algorithms.c: 74:         error_flag=1;
 19864  204A  3001               	movlw	1
 19865  204B  0020               	movlb	0	; select bank0
 19866  204C  00A2               	movwf	AFE_Status@error_flag
 19867  204D  3000               	movlw	0
 19868  204E  00A3               	movwf	AFE_Status@error_flag+1
 19869  204F                     l7621:	
 19870                           
 19871                           ;algorithms.c: 77:    if(sys_stat.regByte & 0x01){
 19872  204F  1C7C               	btfss	_sys_stat,0
 19873  2050  285B               	goto	l690
 19874                           
 19875                           ;algorithms.c: 78:         ocd_error = 1;
 19876  2051  3001               	movlw	1
 19877  2052  0023               	movlb	3	; select bank3
 19878  2053  00D0               	movwf	_ocd_error^(0+384)
 19879  2054  3000               	movlw	0
 19880  2055  00D1               	movwf	(_ocd_error^(0+384)+1)
 19881                           
 19882                           ;algorithms.c: 79:         error_flag=1;
 19883  2056  3001               	movlw	1
 19884  2057  0020               	movlb	0	; select bank0
 19885  2058  00A2               	movwf	AFE_Status@error_flag
 19886  2059  3000               	movlw	0
 19887  205A  00A3               	movwf	AFE_Status@error_flag+1
 19888  205B                     l690:	
 19889                           ;algorithms.c: 80:     }
 19890                           
 19891                           
 19892                           ;algorithms.c: 82:     return error_flag;
 19893  205B  0020               	movlb	0	; select bank0
 19894  205C  0823               	movf	AFE_Status@error_flag+1,w
 19895  205D  00A1               	movwf	?_AFE_Status+1
 19896  205E  0822               	movf	AFE_Status@error_flag,w
 19897  205F  00A0               	movwf	?_AFE_Status
 19898  2060  0008               	return
 19899  2061                     __end_of_AFE_Status:	
 19900                           
 19901                           	psect	text66
 19902  349E                     __ptext66:	
 19903 ;; *************** function _readRegister *****************
 19904 ;; Defined at:
 19905 ;;		line 115 in file "I2C.c"
 19906 ;; Parameters:    Size  Location     Type
 19907 ;;  slaveAddress    2    5[COMMON] int 
 19908 ;;  regAddress      2    7[COMMON] int 
 19909 ;; Auto vars:     Size  Location     Type
 19910 ;;  recievedData    2    9[COMMON] int 
 19911 ;; Return value:  Size  Location     Type
 19912 ;;                  2    5[COMMON] int 
 19913 ;; Registers used:
 19914 ;;		wreg, status,2, status,0, pclath, cstack
 19915 ;; Tracked objects:
 19916 ;;		On entry : 0/0
 19917 ;;		On exit  : 0/0
 19918 ;;		Unchanged: 0/0
 19919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19920 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19921 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19923 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19924 ;;Total ram usage:        6 bytes
 19925 ;; Hardware stack levels used:    1
 19926 ;; Hardware stack levels required when called:    2
 19927 ;; This function calls:
 19928 ;;		_read_I2C_data
 19929 ;;		_send_I2C_NACK
 19930 ;;		_send_I2C_controlByte
 19931 ;;		_send_I2C_data
 19932 ;;		_send_I2C_startBit
 19933 ;;		_send_I2C_stopBit
 19934 ;; This function is called by:
 19935 ;;		_beginAFEcommunication
 19936 ;;		_setCellUndervoltageProtection
 19937 ;;		_setCellOvervoltageProtection
 19938 ;;		_updateCurrent
 19939 ;;		_updateVoltages
 19940 ;;		_updateTemperatures
 19941 ;;		_enableDischarging
 19942 ;;		_enableCharging
 19943 ;;		_AFE_Status
 19944 ;;		_printotAFERegisters
 19945 ;; This function uses a non-reentrant model
 19946 ;;
 19947                           
 19948                           
 19949                           ;psect for function _readRegister
 19950  349E                     _readRegister:	
 19951                           
 19952                           ;I2C.c: 116:     int recievedData;;I2C.c: 117:     send_I2C_startBit();
 19953                           
 19954                           ;incstack = 0
 19955                           ; Regs used in _readRegister: [wreg+status,2+status,0+pclath+cstack]
 19956  349E  31B1  2185  31B4   	fcall	_send_I2C_startBit
 19957                           
 19958                           ;I2C.c: 118:     send_I2C_controlByte(slaveAddress, 0);
 19959  34A1  0876               	movf	readRegister@slaveAddress+1,w
 19960  34A2  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 19961  34A3  0875               	movf	readRegister@slaveAddress,w
 19962  34A4  00F1               	movwf	send_I2C_controlByte@BlockAddress
 19963  34A5  3000               	movlw	0
 19964  34A6  00F3               	movwf	send_I2C_controlByte@RW_bit
 19965  34A7  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 19966  34A8  31B1  21B0  31B4   	fcall	_send_I2C_controlByte
 19967                           
 19968                           ;I2C.c: 119:     send_I2C_data(regAddress);
 19969  34AB  0878               	movf	readRegister@regAddress+1,w
 19970  34AC  00F2               	movwf	send_I2C_data@databyte+1
 19971  34AD  0877               	movf	readRegister@regAddress,w
 19972  34AE  00F1               	movwf	send_I2C_data@databyte
 19973  34AF  31B1  21A7  31B4   	fcall	_send_I2C_data
 19974                           
 19975                           ;I2C.c: 120:     send_I2C_stopBit();
 19976  34B2  31B1  218D  31B4   	fcall	_send_I2C_stopBit
 19977                           
 19978                           ;I2C.c: 121:     send_I2C_startBit();
 19979  34B5  31B1  2185  31B4   	fcall	_send_I2C_startBit
 19980                           
 19981                           ;I2C.c: 122:     send_I2C_controlByte(slaveAddress, 1);
 19982  34B8  0876               	movf	readRegister@slaveAddress+1,w
 19983  34B9  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 19984  34BA  0875               	movf	readRegister@slaveAddress,w
 19985  34BB  00F1               	movwf	send_I2C_controlByte@BlockAddress
 19986  34BC  3001               	movlw	1
 19987  34BD  00F3               	movwf	send_I2C_controlByte@RW_bit
 19988  34BE  3000               	movlw	0
 19989  34BF  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 19990  34C0  31B1  21B0  31B4   	fcall	_send_I2C_controlByte
 19991                           
 19992                           ;I2C.c: 123:     recievedData = read_I2C_data();
 19993  34C3  31B1  21F5  31B4   	fcall	_read_I2C_data
 19994  34C6  0872               	movf	?_read_I2C_data+1,w
 19995  34C7  00FA               	movwf	readRegister@recievedData+1
 19996  34C8  0871               	movf	?_read_I2C_data,w
 19997  34C9  00F9               	movwf	readRegister@recievedData
 19998                           
 19999                           ;I2C.c: 124:     send_I2C_NACK();
 20000  34CA  31B1  219E  31B4   	fcall	_send_I2C_NACK
 20001                           
 20002                           ;I2C.c: 125:     send_I2C_stopBit();
 20003  34CD  31B1  218D         	fcall	_send_I2C_stopBit
 20004                           
 20005                           ;I2C.c: 126:     return recievedData;
 20006  34CF  087A               	movf	readRegister@recievedData+1,w
 20007  34D0  00F6               	movwf	?_readRegister+1
 20008  34D1  0879               	movf	readRegister@recievedData,w
 20009  34D2  00F5               	movwf	?_readRegister
 20010  34D3  0008               	return
 20011  34D4                     __end_of_readRegister:	
 20012                           
 20013                           	psect	text67
 20014  318D                     __ptext67:	
 20015 ;; *************** function _send_I2C_stopBit *****************
 20016 ;; Defined at:
 20017 ;;		line 78 in file "I2C.c"
 20018 ;; Parameters:    Size  Location     Type
 20019 ;;		None
 20020 ;; Auto vars:     Size  Location     Type
 20021 ;;		None
 20022 ;; Return value:  Size  Location     Type
 20023 ;;                  1    wreg      void 
 20024 ;; Registers used:
 20025 ;;		None
 20026 ;; Tracked objects:
 20027 ;;		On entry : 0/0
 20028 ;;		On exit  : 0/0
 20029 ;;		Unchanged: 0/0
 20030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20035 ;;Total ram usage:        0 bytes
 20036 ;; Hardware stack levels used:    1
 20037 ;; Hardware stack levels required when called:    1
 20038 ;; This function calls:
 20039 ;;		Nothing
 20040 ;; This function is called by:
 20041 ;;		_I2C_writeRegister
 20042 ;;		_readRegister
 20043 ;; This function uses a non-reentrant model
 20044 ;;
 20045                           
 20046                           
 20047                           ;psect for function _send_I2C_stopBit
 20048  318D                     _send_I2C_stopBit:	
 20049                           
 20050                           ;I2C.c: 79:     PIR1bits.SSP1IF = 0;
 20051                           
 20052                           ;incstack = 0
 20053                           ; Regs used in _send_I2C_stopBit: []
 20054  318D  0020               	movlb	0	; select bank0
 20055  318E  1191               	bcf	17,3	;volatile
 20056                           
 20057                           ;I2C.c: 80:     SSPCON2bits.PEN = 1;
 20058  318F  0024               	movlb	4	; select bank4
 20059  3190  1516               	bsf	22,2	;volatile
 20060  3191                     l332:	
 20061                           ;I2C.c: 81:     while (!PIR1bits.SSP1IF);
 20062                           
 20063  3191  0020               	movlb	0	; select bank0
 20064  3192  1991               	btfsc	17,3	;volatile
 20065  3193  0008               	return
 20066  3194  2991               	goto	l332
 20067  3195                     __end_of_send_I2C_stopBit:	
 20068                           
 20069                           	psect	text68
 20070  3185                     __ptext68:	
 20071 ;; *************** function _send_I2C_startBit *****************
 20072 ;; Defined at:
 20073 ;;		line 65 in file "I2C.c"
 20074 ;; Parameters:    Size  Location     Type
 20075 ;;		None
 20076 ;; Auto vars:     Size  Location     Type
 20077 ;;		None
 20078 ;; Return value:  Size  Location     Type
 20079 ;;                  1    wreg      void 
 20080 ;; Registers used:
 20081 ;;		None
 20082 ;; Tracked objects:
 20083 ;;		On entry : 0/0
 20084 ;;		On exit  : 0/0
 20085 ;;		Unchanged: 0/0
 20086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20091 ;;Total ram usage:        0 bytes
 20092 ;; Hardware stack levels used:    1
 20093 ;; Hardware stack levels required when called:    1
 20094 ;; This function calls:
 20095 ;;		Nothing
 20096 ;; This function is called by:
 20097 ;;		_I2C_writeRegister
 20098 ;;		_readRegister
 20099 ;; This function uses a non-reentrant model
 20100 ;;
 20101                           
 20102                           
 20103                           ;psect for function _send_I2C_startBit
 20104  3185                     _send_I2C_startBit:	
 20105                           
 20106                           ;I2C.c: 66:     PIR1bits.SSP1IF = 0;
 20107                           
 20108                           ;incstack = 0
 20109                           ; Regs used in _send_I2C_startBit: []
 20110  3185  0020               	movlb	0	; select bank0
 20111  3186  1191               	bcf	17,3	;volatile
 20112                           
 20113                           ;I2C.c: 67:     SSPCON2bits.SEN = 1;
 20114  3187  0024               	movlb	4	; select bank4
 20115  3188  1416               	bsf	22,0	;volatile
 20116  3189                     l320:	
 20117                           ;I2C.c: 68:     while (!PIR1bits.SSP1IF);
 20118                           
 20119  3189  0020               	movlb	0	; select bank0
 20120  318A  1991               	btfsc	17,3	;volatile
 20121  318B  0008               	return
 20122  318C  2989               	goto	l320
 20123  318D                     __end_of_send_I2C_startBit:	
 20124                           
 20125                           	psect	text69
 20126  31A7                     __ptext69:	
 20127 ;; *************** function _send_I2C_data *****************
 20128 ;; Defined at:
 20129 ;;		line 33 in file "I2C.c"
 20130 ;; Parameters:    Size  Location     Type
 20131 ;;  databyte        2    1[COMMON] unsigned int 
 20132 ;; Auto vars:     Size  Location     Type
 20133 ;;		None
 20134 ;; Return value:  Size  Location     Type
 20135 ;;                  1    wreg      void 
 20136 ;; Registers used:
 20137 ;;		wreg
 20138 ;; Tracked objects:
 20139 ;;		On entry : 0/0
 20140 ;;		On exit  : 0/0
 20141 ;;		Unchanged: 0/0
 20142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20143 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20146 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20147 ;;Total ram usage:        2 bytes
 20148 ;; Hardware stack levels used:    1
 20149 ;; Hardware stack levels required when called:    1
 20150 ;; This function calls:
 20151 ;;		Nothing
 20152 ;; This function is called by:
 20153 ;;		_I2C_writeRegister
 20154 ;;		_readRegister
 20155 ;; This function uses a non-reentrant model
 20156 ;;
 20157                           
 20158                           
 20159                           ;psect for function _send_I2C_data
 20160  31A7                     _send_I2C_data:	
 20161                           
 20162                           ;I2C.c: 34:     PIR1bits.SSP1IF = 0;
 20163                           
 20164                           ;incstack = 0
 20165                           ; Regs used in _send_I2C_data: [wreg]
 20166  31A7  0020               	movlb	0	; select bank0
 20167  31A8  1191               	bcf	17,3	;volatile
 20168                           
 20169                           ;I2C.c: 35:     SSPBUF = databyte;
 20170  31A9  0871               	movf	send_I2C_data@databyte,w
 20171  31AA  0024               	movlb	4	; select bank4
 20172  31AB  0091               	movwf	17	;volatile
 20173  31AC                     l302:	
 20174                           ;I2C.c: 37:     while (!PIR1bits.SSP1IF);
 20175                           
 20176  31AC  0020               	movlb	0	; select bank0
 20177  31AD  1991               	btfsc	17,3	;volatile
 20178  31AE  0008               	return
 20179  31AF  29AC               	goto	l302
 20180  31B0                     __end_of_send_I2C_data:	
 20181                           
 20182                           	psect	text70
 20183  31B0                     __ptext70:	
 20184 ;; *************** function _send_I2C_controlByte *****************
 20185 ;; Defined at:
 20186 ;;		line 53 in file "I2C.c"
 20187 ;; Parameters:    Size  Location     Type
 20188 ;;  BlockAddress    2    1[COMMON] unsigned int 
 20189 ;;  RW_bit          2    3[COMMON] unsigned int 
 20190 ;; Auto vars:     Size  Location     Type
 20191 ;;		None
 20192 ;; Return value:  Size  Location     Type
 20193 ;;                  1    wreg      void 
 20194 ;; Registers used:
 20195 ;;		wreg, status,2, status,0
 20196 ;; Tracked objects:
 20197 ;;		On entry : 0/0
 20198 ;;		On exit  : 0/0
 20199 ;;		Unchanged: 0/0
 20200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20201 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20204 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20205 ;;Total ram usage:        4 bytes
 20206 ;; Hardware stack levels used:    1
 20207 ;; Hardware stack levels required when called:    1
 20208 ;; This function calls:
 20209 ;;		Nothing
 20210 ;; This function is called by:
 20211 ;;		_I2C_writeRegister
 20212 ;;		_readRegister
 20213 ;; This function uses a non-reentrant model
 20214 ;;
 20215                           
 20216                           
 20217                           ;psect for function _send_I2C_controlByte
 20218  31B0                     _send_I2C_controlByte:	
 20219                           
 20220                           ;I2C.c: 54:     PIR1bits.SSP1IF = 0;
 20221                           
 20222                           ;incstack = 0
 20223                           ; Regs used in _send_I2C_controlByte: [wreg+status,2+status,0]
 20224  31B0  0020               	movlb	0	; select bank0
 20225  31B1  1191               	bcf	17,3	;volatile
 20226                           
 20227                           ;I2C.c: 60:     SSPBUF = (((0b0000 << 4) | (BlockAddress << 1)) + RW_bit);
 20228  31B2  3571               	lslf	send_I2C_controlByte@BlockAddress,w
 20229  31B3  0773               	addwf	send_I2C_controlByte@RW_bit,w
 20230  31B4  0024               	movlb	4	; select bank4
 20231  31B5  0091               	movwf	17	;volatile
 20232  31B6                     l314:	
 20233                           ;I2C.c: 62:     while (!PIR1bits.SSP1IF);
 20234                           
 20235  31B6  0020               	movlb	0	; select bank0
 20236  31B7  1991               	btfsc	17,3	;volatile
 20237  31B8  0008               	return
 20238  31B9  29B6               	goto	l314
 20239  31BA                     __end_of_send_I2C_controlByte:	
 20240                           
 20241                           	psect	text71
 20242  319E                     __ptext71:	
 20243 ;; *************** function _send_I2C_NACK *****************
 20244 ;; Defined at:
 20245 ;;		line 91 in file "I2C.c"
 20246 ;; Parameters:    Size  Location     Type
 20247 ;;		None
 20248 ;; Auto vars:     Size  Location     Type
 20249 ;;		None
 20250 ;; Return value:  Size  Location     Type
 20251 ;;                  1    wreg      void 
 20252 ;; Registers used:
 20253 ;;		None
 20254 ;; Tracked objects:
 20255 ;;		On entry : 0/0
 20256 ;;		On exit  : 0/0
 20257 ;;		Unchanged: 0/0
 20258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20263 ;;Total ram usage:        0 bytes
 20264 ;; Hardware stack levels used:    1
 20265 ;; Hardware stack levels required when called:    1
 20266 ;; This function calls:
 20267 ;;		Nothing
 20268 ;; This function is called by:
 20269 ;;		_readRegister
 20270 ;; This function uses a non-reentrant model
 20271 ;;
 20272                           
 20273                           
 20274                           ;psect for function _send_I2C_NACK
 20275  319E                     _send_I2C_NACK:	
 20276                           
 20277                           ;I2C.c: 92:     PIR1bits.SSP1IF = 0;
 20278                           
 20279                           ;incstack = 0
 20280                           ; Regs used in _send_I2C_NACK: []
 20281  319E  0020               	movlb	0	; select bank0
 20282  319F  1191               	bcf	17,3	;volatile
 20283                           
 20284                           ;I2C.c: 93:     SSPCON2bits.ACKDT = 1;
 20285  31A0  0024               	movlb	4	; select bank4
 20286  31A1  1696               	bsf	22,5	;volatile
 20287                           
 20288                           ;I2C.c: 94:     SSPCON2bits.ACKEN = 1;
 20289  31A2  1616               	bsf	22,4	;volatile
 20290  31A3                     l344:	
 20291                           ;I2C.c: 95:     while (!PIR1bits.SSP1IF);
 20292                           
 20293  31A3  0020               	movlb	0	; select bank0
 20294  31A4  1991               	btfsc	17,3	;volatile
 20295  31A5  0008               	return
 20296  31A6  29A3               	goto	l344
 20297  31A7                     __end_of_send_I2C_NACK:	
 20298                           
 20299                           	psect	text72
 20300  31F5                     __ptext72:	
 20301 ;; *************** function _read_I2C_data *****************
 20302 ;; Defined at:
 20303 ;;		line 43 in file "I2C.c"
 20304 ;; Parameters:    Size  Location     Type
 20305 ;;		None
 20306 ;; Auto vars:     Size  Location     Type
 20307 ;;		None
 20308 ;; Return value:  Size  Location     Type
 20309 ;;                  2    1[COMMON] unsigned int 
 20310 ;; Registers used:
 20311 ;;		wreg
 20312 ;; Tracked objects:
 20313 ;;		On entry : 0/0
 20314 ;;		On exit  : 0/0
 20315 ;;		Unchanged: 0/0
 20316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20317 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20319 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20320 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20321 ;;Total ram usage:        4 bytes
 20322 ;; Hardware stack levels used:    1
 20323 ;; Hardware stack levels required when called:    1
 20324 ;; This function calls:
 20325 ;;		Nothing
 20326 ;; This function is called by:
 20327 ;;		_readRegister
 20328 ;; This function uses a non-reentrant model
 20329 ;;
 20330                           
 20331                           
 20332                           ;psect for function _read_I2C_data
 20333  31F5                     _read_I2C_data:	
 20334                           
 20335                           ;I2C.c: 44:     PIR1bits.SSP1IF = 0;
 20336                           
 20337                           ;incstack = 0
 20338                           ; Regs used in _read_I2C_data: [wreg]
 20339  31F5  0020               	movlb	0	; select bank0
 20340  31F6  1191               	bcf	17,3	;volatile
 20341                           
 20342                           ;I2C.c: 45:     SSPCON2bits.RCEN = 1;
 20343  31F7  0024               	movlb	4	; select bank4
 20344  31F8  1596               	bsf	22,3	;volatile
 20345  31F9                     l308:	
 20346                           ;I2C.c: 46:     while (!PIR1bits.SSP1IF);
 20347                           
 20348  31F9  0020               	movlb	0	; select bank0
 20349  31FA  1D91               	btfss	17,3	;volatile
 20350  31FB  29F9               	goto	l308
 20351                           
 20352                           ;I2C.c: 47:     return (SSPBUF);
 20353  31FC  0024               	movlb	4	; select bank4
 20354  31FD  0811               	movf	17,w	;volatile
 20355  31FE  00F3               	movwf	??_read_I2C_data
 20356  31FF  01F4               	clrf	??_read_I2C_data+1
 20357  3200  0873               	movf	??_read_I2C_data,w
 20358  3201  00F1               	movwf	?_read_I2C_data
 20359  3202  0874               	movf	??_read_I2C_data+1,w
 20360  3203  00F2               	movwf	?_read_I2C_data+1
 20361  3204  0008               	return
 20362  3205                     __end_of_read_I2C_data:	
 20363                           
 20364                           	psect	text73
 20365  31CE                     __ptext73:	
 20366 ;; *************** function _init_TMR1 *****************
 20367 ;; Defined at:
 20368 ;;		line 189 in file "main.c"
 20369 ;; Parameters:    Size  Location     Type
 20370 ;;		None
 20371 ;; Auto vars:     Size  Location     Type
 20372 ;;		None
 20373 ;; Return value:  Size  Location     Type
 20374 ;;                  1    wreg      void 
 20375 ;; Registers used:
 20376 ;;		wreg, status,2, status,0
 20377 ;; Tracked objects:
 20378 ;;		On entry : 0/0
 20379 ;;		On exit  : 0/0
 20380 ;;		Unchanged: 0/0
 20381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20386 ;;Total ram usage:        0 bytes
 20387 ;; Hardware stack levels used:    1
 20388 ;; Hardware stack levels required when called:    1
 20389 ;; This function calls:
 20390 ;;		Nothing
 20391 ;; This function is called by:
 20392 ;;		_main
 20393 ;; This function uses a non-reentrant model
 20394 ;;
 20395                           
 20396                           
 20397                           ;psect for function _init_TMR1
 20398  31CE                     _init_TMR1:	
 20399                           
 20400                           ;main.c: 192:     T1CONbits.T1CKPS = 0b00;
 20401                           
 20402                           ;incstack = 0
 20403                           ; Regs used in _init_TMR1: [wreg+status,2+status,0]
 20404  31CE  30CF               	movlw	-49
 20405  31CF  0020               	movlb	0	; select bank0
 20406  31D0  0598               	andwf	24,f	;volatile
 20407                           
 20408                           ;main.c: 194:     TMR1 = 0;
 20409  31D1  0196               	clrf	22	;volatile
 20410  31D2  0197               	clrf	23	;volatile
 20411                           
 20412                           ;main.c: 196:     T1CONbits.TMR1ON = 1;
 20413  31D3  1418               	bsf	24,0	;volatile
 20414                           
 20415                           ;main.c: 198:     PIE1bits.TMR1IE = 1;
 20416  31D4  0021               	movlb	1	; select bank1
 20417  31D5  1411               	bsf	17,0	;volatile
 20418                           
 20419                           ;main.c: 200:     INTCONbits.PEIE = 1;
 20420  31D6  170B               	bsf	11,6	;volatile
 20421                           
 20422                           ;main.c: 202:     (INTCONbits.GIE = 1);
 20423  31D7  178B               	bsf	11,7	;volatile
 20424  31D8  0008               	return
 20425  31D9                     __end_of_init_TMR1:	
 20426                           
 20427                           	psect	text74
 20428  3173                     __ptext74:	
 20429 ;; *************** function _init_RGB *****************
 20430 ;; Defined at:
 20431 ;;		line 6 in file "RGB.c"
 20432 ;; Parameters:    Size  Location     Type
 20433 ;;		None
 20434 ;; Auto vars:     Size  Location     Type
 20435 ;;		None
 20436 ;; Return value:  Size  Location     Type
 20437 ;;                  1    wreg      void 
 20438 ;; Registers used:
 20439 ;;		None
 20440 ;; Tracked objects:
 20441 ;;		On entry : 0/0
 20442 ;;		On exit  : 0/0
 20443 ;;		Unchanged: 0/0
 20444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20449 ;;Total ram usage:        0 bytes
 20450 ;; Hardware stack levels used:    1
 20451 ;; Hardware stack levels required when called:    1
 20452 ;; This function calls:
 20453 ;;		Nothing
 20454 ;; This function is called by:
 20455 ;;		_main
 20456 ;; This function uses a non-reentrant model
 20457 ;;
 20458                           
 20459                           
 20460                           ;psect for function _init_RGB
 20461  3173                     _init_RGB:	
 20462                           
 20463                           ;RGB.c: 8:     LATAbits.LATA4 = 1;
 20464                           
 20465                           ;incstack = 0
 20466                           ; Regs used in _init_RGB: []
 20467  3173  0022               	movlb	2	; select bank2
 20468  3174  160C               	bsf	12,4	;volatile
 20469                           
 20470                           ;RGB.c: 9:     LATAbits.LATA5 = 1;
 20471  3175  168C               	bsf	12,5	;volatile
 20472                           
 20473                           ;RGB.c: 10:     LATEbits.LATE0 = 1;
 20474  3176  1410               	bsf	16,0	;volatile
 20475  3177  0008               	return
 20476  3178                     __end_of_init_RGB:	
 20477                           
 20478                           	psect	text75
 20479  31E5                     __ptext75:	
 20480 ;; *************** function _init_I2C *****************
 20481 ;; Defined at:
 20482 ;;		line 10 in file "I2C.c"
 20483 ;; Parameters:    Size  Location     Type
 20484 ;;		None
 20485 ;; Auto vars:     Size  Location     Type
 20486 ;;		None
 20487 ;; Return value:  Size  Location     Type
 20488 ;;                  1    wreg      void 
 20489 ;; Registers used:
 20490 ;;		wreg, status,2, status,0
 20491 ;; Tracked objects:
 20492 ;;		On entry : 0/0
 20493 ;;		On exit  : 0/0
 20494 ;;		Unchanged: 0/0
 20495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20498 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20499 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20500 ;;Total ram usage:        1 bytes
 20501 ;; Hardware stack levels used:    1
 20502 ;; Hardware stack levels required when called:    1
 20503 ;; This function calls:
 20504 ;;		Nothing
 20505 ;; This function is called by:
 20506 ;;		_main
 20507 ;; This function uses a non-reentrant model
 20508 ;;
 20509                           
 20510                           
 20511                           ;psect for function _init_I2C
 20512  31E5                     _init_I2C:	
 20513                           
 20514                           ;I2C.c: 14:     SSPCONbits.SSPM = 0x08;
 20515                           
 20516                           ;incstack = 0
 20517                           ; Regs used in _init_I2C: [wreg+status,2+status,0]
 20518  31E5  0024               	movlb	4	; select bank4
 20519  31E6  0815               	movf	21,w	;volatile
 20520  31E7  39F0               	andlw	-16
 20521  31E8  3808               	iorlw	8
 20522  31E9  0095               	movwf	21	;volatile
 20523                           
 20524                           ;I2C.c: 15:     SSPCONbits.SSPEN = 1;
 20525  31EA  1695               	bsf	21,5	;volatile
 20526                           
 20527                           ;I2C.c: 24:     SSPADD = 39;
 20528  31EB  3027               	movlw	39
 20529  31EC  0092               	movwf	18	;volatile
 20530                           
 20531                           ;I2C.c: 27:     _delay((unsigned long)((10)*(16000000/4000.0)));
 20532  31ED  3034               	movlw	52
 20533  31EE  00F1               	movwf	??_init_I2C
 20534  31EF  30F2               	movlw	242
 20535  31F0                     u9727:	
 20536  31F0  0B89               	decfsz	9,f
 20537  31F1  29F0               	goto	u9727
 20538  31F2  0BF1               	decfsz	??_init_I2C,f
 20539  31F3  29F0               	goto	u9727
 20540  31F4  0008               	return
 20541  31F5                     __end_of_init_I2C:	
 20542                           
 20543                           	psect	text76
 20544  0808                     __ptext76:	
 20545 ;; *************** function _init_GPIO *****************
 20546 ;; Defined at:
 20547 ;;		line 206 in file "main.c"
 20548 ;; Parameters:    Size  Location     Type
 20549 ;;		None
 20550 ;; Auto vars:     Size  Location     Type
 20551 ;;		None
 20552 ;; Return value:  Size  Location     Type
 20553 ;;                  1    wreg      void 
 20554 ;; Registers used:
 20555 ;;		wreg, status,2, status,0
 20556 ;; Tracked objects:
 20557 ;;		On entry : 0/0
 20558 ;;		On exit  : 0/0
 20559 ;;		Unchanged: 0/0
 20560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20565 ;;Total ram usage:        0 bytes
 20566 ;; Hardware stack levels used:    1
 20567 ;; Hardware stack levels required when called:    1
 20568 ;; This function calls:
 20569 ;;		Nothing
 20570 ;; This function is called by:
 20571 ;;		_main
 20572 ;; This function uses a non-reentrant model
 20573 ;;
 20574                           
 20575                           
 20576                           ;psect for function _init_GPIO
 20577  0808                     _init_GPIO:	
 20578                           
 20579                           ;main.c: 212:     TRISBbits.TRISB2 = 0;
 20580                           
 20581                           ;incstack = 0
 20582                           ; Regs used in _init_GPIO: [wreg+status,2+status,0]
 20583  0808  0021               	movlb	1	; select bank1
 20584  0809  110D               	bcf	13,2	;volatile
 20585                           
 20586                           ;main.c: 213:     ANSELBbits.ANSB2 = 0;
 20587  080A  0023               	movlb	3	; select bank3
 20588  080B  110D               	bcf	13,2	;volatile
 20589                           
 20590                           ;main.c: 214:     TRISBbits.TRISB3 = 1;
 20591  080C  0021               	movlb	1	; select bank1
 20592  080D  158D               	bsf	13,3	;volatile
 20593                           
 20594                           ;main.c: 215:     ANSELBbits.ANSB3 = 0;
 20595  080E  0023               	movlb	3	; select bank3
 20596  080F  118D               	bcf	13,3	;volatile
 20597                           
 20598                           ;main.c: 220:     ANSELCbits.ANSC4 = 0;
 20599  0810  120E               	bcf	14,4	;volatile
 20600                           
 20601                           ;main.c: 221:     ANSELCbits.ANSC5 = 0;
 20602  0811  128E               	bcf	14,5	;volatile
 20603                           
 20604                           ;main.c: 222:     TRISCbits.TRISC4 = 1;
 20605  0812  0021               	movlb	1	; select bank1
 20606  0813  160E               	bsf	14,4	;volatile
 20607                           
 20608                           ;main.c: 223:     TRISCbits.TRISC5 = 1;
 20609  0814  168E               	bsf	14,5	;volatile
 20610                           
 20611                           ;main.c: 232:     TRISAbits.TRISA4 = 0;
 20612  0815  120C               	bcf	12,4	;volatile
 20613                           
 20614                           ;main.c: 233:     TRISAbits.TRISA5 = 0;
 20615  0816  128C               	bcf	12,5	;volatile
 20616                           
 20617                           ;main.c: 234:     TRISEbits.TRISE0 = 0;
 20618  0817  1010               	bcf	16,0	;volatile
 20619                           
 20620                           ;main.c: 239:     TRISAbits.TRISA3 = 0;
 20621  0818  118C               	bcf	12,3	;volatile
 20622                           
 20623                           ;main.c: 240:     LATAbits.LATA3 = 0;
 20624  0819  0022               	movlb	2	; select bank2
 20625  081A  118C               	bcf	12,3	;volatile
 20626                           
 20627                           ;main.c: 246:     PPSLOCK = 0x55;
 20628  081B  3055               	movlw	85
 20629  081C  003C               	movlb	28	; select bank28
 20630  081D  008F               	movwf	15	;volsfr
 20631                           
 20632                           ;main.c: 247:     PPSLOCK = 0xAA;
 20633  081E  30AA               	movlw	170
 20634  081F  008F               	movwf	15	;volsfr
 20635                           
 20636                           ;main.c: 248:     PPSLOCKbits.PPSLOCKED = 0x00;
 20637  0820  100F               	bcf	15,0	;volsfr
 20638                           
 20639                           ;main.c: 252:     RC4PPSbits.RC4PPS = 0x0011;
 20640  0821  003D               	movlb	29	; select bank29
 20641  0822  0824               	movf	36,w	;volatile
 20642  0823  39E0               	andlw	-32
 20643  0824  3811               	iorlw	17
 20644  0825  00A4               	movwf	36	;volatile
 20645                           
 20646                           ;main.c: 253:     SSPDATPPSbits.SSPDATPPS = 0x0014;
 20647  0826  003C               	movlb	28	; select bank28
 20648  0827  0821               	movf	33,w	;volatile
 20649  0828  39E0               	andlw	-32
 20650  0829  3814               	iorlw	20
 20651  082A  00A1               	movwf	33	;volatile
 20652                           
 20653                           ;main.c: 254:     SSPCLKPPSbits.SSPCLKPPS = 0x0015;
 20654  082B  0820               	movf	32,w	;volatile
 20655  082C  39E0               	andlw	-32
 20656  082D  3815               	iorlw	21
 20657  082E  00A0               	movwf	32	;volatile
 20658                           
 20659                           ;main.c: 255:     RC5PPSbits.RC5PPS = 0x0010;
 20660  082F  003D               	movlb	29	; select bank29
 20661  0830  0825               	movf	37,w	;volatile
 20662  0831  39E0               	andlw	-32
 20663  0832  3810               	iorlw	16
 20664  0833  00A5               	movwf	37	;volatile
 20665                           
 20666                           ;main.c: 258:     RB2PPSbits.RB2PPS = 0x14;
 20667  0834  081A               	movf	26,w	;volatile
 20668  0835  39E0               	andlw	-32
 20669  0836  3814               	iorlw	20
 20670  0837  009A               	movwf	26	;volatile
 20671                           
 20672                           ;main.c: 259:     RXPPSbits.RXPPS = 0x0B;
 20673  0838  003C               	movlb	28	; select bank28
 20674  0839  0824               	movf	36,w	;volatile
 20675  083A  39E0               	andlw	-32
 20676  083B  380B               	iorlw	11
 20677  083C  00A4               	movwf	36	;volatile
 20678                           
 20679                           ;main.c: 261:     PPSLOCK = 0x55;
 20680  083D  3055               	movlw	85
 20681  083E  008F               	movwf	15	;volsfr
 20682                           
 20683                           ;main.c: 262:     PPSLOCK = 0xAA;
 20684  083F  30AA               	movlw	170
 20685  0840  008F               	movwf	15	;volsfr
 20686                           
 20687                           ;main.c: 263:     PPSLOCKbits.PPSLOCKED = 0x01;
 20688  0841  140F               	bsf	15,0	;volsfr
 20689  0842  0008               	return
 20690  0843                     __end_of_init_GPIO:	
 20691                           
 20692                           	psect	text77
 20693  3178                     __ptext77:	
 20694 ;; *************** function _initWDT *****************
 20695 ;; Defined at:
 20696 ;;		line 267 in file "main.c"
 20697 ;; Parameters:    Size  Location     Type
 20698 ;;		None
 20699 ;; Auto vars:     Size  Location     Type
 20700 ;;		None
 20701 ;; Return value:  Size  Location     Type
 20702 ;;                  1    wreg      void 
 20703 ;; Registers used:
 20704 ;;		wreg, status,2, status,0
 20705 ;; Tracked objects:
 20706 ;;		On entry : 0/0
 20707 ;;		On exit  : 0/0
 20708 ;;		Unchanged: 0/0
 20709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20714 ;;Total ram usage:        0 bytes
 20715 ;; Hardware stack levels used:    1
 20716 ;; Hardware stack levels required when called:    1
 20717 ;; This function calls:
 20718 ;;		Nothing
 20719 ;; This function is called by:
 20720 ;;		_main
 20721 ;; This function uses a non-reentrant model
 20722 ;;
 20723                           
 20724                           
 20725                           ;psect for function _initWDT
 20726  3178                     _initWDT:	
 20727                           
 20728                           ;main.c: 269:     WDTCONbits.WDTPS = 0b01101;
 20729                           
 20730                           ;incstack = 0
 20731                           ; Regs used in _initWDT: [wreg+status,2+status,0]
 20732  3178  0021               	movlb	1	; select bank1
 20733  3179  0817               	movf	23,w	;volatile
 20734  317A  39C1               	andlw	-63
 20735  317B  381A               	iorlw	26
 20736  317C  0097               	movwf	23	;volatile
 20737  317D  0008               	return
 20738  317E                     __end_of_initWDT:	
 20739                           
 20740                           	psect	text78
 20741  3170                     __ptext78:	
 20742 ;; *************** function _initClock *****************
 20743 ;; Defined at:
 20744 ;;		line 180 in file "main.c"
 20745 ;; Parameters:    Size  Location     Type
 20746 ;;		None
 20747 ;; Auto vars:     Size  Location     Type
 20748 ;;		None
 20749 ;; Return value:  Size  Location     Type
 20750 ;;                  1    wreg      void 
 20751 ;; Registers used:
 20752 ;;		status,2, status,0, pclath, cstack
 20753 ;; Tracked objects:
 20754 ;;		On entry : 0/0
 20755 ;;		On exit  : 0/0
 20756 ;;		Unchanged: 0/0
 20757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20762 ;;Total ram usage:        0 bytes
 20763 ;; Hardware stack levels used:    1
 20764 ;; Hardware stack levels required when called:    2
 20765 ;; This function calls:
 20766 ;;		_internal_16
 20767 ;; This function is called by:
 20768 ;;		_main
 20769 ;; This function uses a non-reentrant model
 20770 ;;
 20771                           
 20772                           
 20773                           ;psect for function _initClock
 20774  3170                     _initClock:	
 20775                           
 20776                           ;main.c: 182:     internal_16();
 20777                           
 20778                           ;incstack = 0
 20779                           ; Regs used in _initClock: [status,2+status,0+pclath+cstack]
 20780  3170  31B1  2195         	fcall	_internal_16
 20781  3172  0008               	return
 20782  3173                     __end_of_initClock:	
 20783                           
 20784                           	psect	text79
 20785  3195                     __ptext79:	
 20786 ;; *************** function _internal_16 *****************
 20787 ;; Defined at:
 20788 ;;		line 26 in file "pic16f1719_internals.c"
 20789 ;; Parameters:    Size  Location     Type
 20790 ;;		None
 20791 ;; Auto vars:     Size  Location     Type
 20792 ;;		None
 20793 ;; Return value:  Size  Location     Type
 20794 ;;                  1    wreg      void 
 20795 ;; Registers used:
 20796 ;;		None
 20797 ;; Tracked objects:
 20798 ;;		On entry : 0/0
 20799 ;;		On exit  : 0/0
 20800 ;;		Unchanged: 0/0
 20801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20806 ;;Total ram usage:        0 bytes
 20807 ;; Hardware stack levels used:    1
 20808 ;; Hardware stack levels required when called:    1
 20809 ;; This function calls:
 20810 ;;		Nothing
 20811 ;; This function is called by:
 20812 ;;		_initClock
 20813 ;; This function uses a non-reentrant model
 20814 ;;
 20815                           
 20816                           
 20817                           ;psect for function _internal_16
 20818  3195                     _internal_16:	
 20819                           
 20820                           ;pic16f1719_internals.c: 28: SCS0 = 0;
 20821                           
 20822                           ;incstack = 0
 20823                           ; Regs used in _internal_16: []
 20824  3195  0021               	movlb	1	; select bank1
 20825  3196  1019               	bcf	25,0	;volatile
 20826                           
 20827                           ;pic16f1719_internals.c: 29: SCS1 = 0;
 20828  3197  1099               	bcf	25,1	;volatile
 20829                           
 20830                           ;pic16f1719_internals.c: 31: IRCF0 = 1;
 20831  3198  1599               	bsf	25,3	;volatile
 20832                           
 20833                           ;pic16f1719_internals.c: 32: IRCF1 = 1;
 20834  3199  1619               	bsf	25,4	;volatile
 20835                           
 20836                           ;pic16f1719_internals.c: 33: IRCF2 = 1;
 20837  319A  1699               	bsf	25,5	;volatile
 20838                           
 20839                           ;pic16f1719_internals.c: 34: IRCF3 = 1;
 20840  319B  1719               	bsf	25,6	;volatile
 20841                           
 20842                           ;pic16f1719_internals.c: 36: SPLLEN = 0;
 20843  319C  1399               	bcf	25,7	;volatile
 20844  319D  0008               	return
 20845  319E                     __end_of_internal_16:	
 20846                           
 20847                           	psect	text80
 20848  2B7F                     __ptext80:	
 20849 ;; *************** function _EUSART_Initialize *****************
 20850 ;; Defined at:
 20851 ;;		line 6 in file "EUSART.c"
 20852 ;; Parameters:    Size  Location     Type
 20853 ;;  baudrate        4   18[BANK0 ] const long 
 20854 ;; Auto vars:     Size  Location     Type
 20855 ;;  x               2   10[COMMON] unsigned int 
 20856 ;; Return value:  Size  Location     Type
 20857 ;;                  1    wreg      unsigned char 
 20858 ;; Registers used:
 20859 ;;		wreg, status,2, status,0, pclath, cstack
 20860 ;; Tracked objects:
 20861 ;;		On entry : 0/0
 20862 ;;		On exit  : 0/0
 20863 ;;		Unchanged: 0/0
 20864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20865 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20866 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20867 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20868 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20869 ;;Total ram usage:       18 bytes
 20870 ;; Hardware stack levels used:    1
 20871 ;; Hardware stack levels required when called:    2
 20872 ;; This function calls:
 20873 ;;		___aldiv
 20874 ;; This function is called by:
 20875 ;;		_main
 20876 ;; This function uses a non-reentrant model
 20877 ;;
 20878                           
 20879                           
 20880                           ;psect for function _EUSART_Initialize
 20881  2B7F                     _EUSART_Initialize:	
 20882                           
 20883                           ;EUSART.c: 6: char EUSART_Initialize(const long int baudrate);EUSART.c: 7: {;EUSART.c: 8
      +                          :  unsigned int x;;EUSART.c: 9:  x = (16000000 - baudrate*64)/(baudrate*64);
 20884                           
 20885                           ;incstack = 0
 20886                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 20887  2B7F  0020               	movlb	0	; select bank0
 20888  2B80  0832               	movf	EUSART_Initialize@baudrate,w
 20889  2B81  00B6               	movwf	??_EUSART_Initialize
 20890  2B82  0833               	movf	EUSART_Initialize@baudrate+1,w
 20891  2B83  00B7               	movwf	??_EUSART_Initialize+1
 20892  2B84  0834               	movf	EUSART_Initialize@baudrate+2,w
 20893  2B85  00B8               	movwf	??_EUSART_Initialize+2
 20894  2B86  0835               	movf	EUSART_Initialize@baudrate+3,w
 20895  2B87  00B9               	movwf	??_EUSART_Initialize+3
 20896  2B88  3006               	movlw	6
 20897  2B89                     u9615:	
 20898  2B89  35B6               	lslf	??_EUSART_Initialize,f
 20899  2B8A  0DB7               	rlf	??_EUSART_Initialize+1,f
 20900  2B8B  0DB8               	rlf	??_EUSART_Initialize+2,f
 20901  2B8C  0DB9               	rlf	??_EUSART_Initialize+3,f
 20902  2B8D  0B89               	decfsz	9,f
 20903  2B8E  2B89               	goto	u9615
 20904  2B8F  0839               	movf	??_EUSART_Initialize+3,w
 20905  2B90  00A7               	movwf	___aldiv@divisor+3
 20906  2B91  0838               	movf	??_EUSART_Initialize+2,w
 20907  2B92  00A6               	movwf	___aldiv@divisor+2
 20908  2B93  0837               	movf	??_EUSART_Initialize+1,w
 20909  2B94  00A5               	movwf	___aldiv@divisor+1
 20910  2B95  0836               	movf	??_EUSART_Initialize,w
 20911  2B96  00A4               	movwf	___aldiv@divisor
 20912  2B97  0832               	movf	EUSART_Initialize@baudrate,w
 20913  2B98  00BA               	movwf	??_EUSART_Initialize+4
 20914  2B99  0833               	movf	EUSART_Initialize@baudrate+1,w
 20915  2B9A  00BB               	movwf	??_EUSART_Initialize+5
 20916  2B9B  0834               	movf	EUSART_Initialize@baudrate+2,w
 20917  2B9C  00BC               	movwf	??_EUSART_Initialize+6
 20918  2B9D  0835               	movf	EUSART_Initialize@baudrate+3,w
 20919  2B9E  00BD               	movwf	??_EUSART_Initialize+7
 20920  2B9F  3006               	movlw	6
 20921  2BA0                     u9625:	
 20922  2BA0  35BA               	lslf	??_EUSART_Initialize+4,f
 20923  2BA1  0DBB               	rlf	??_EUSART_Initialize+5,f
 20924  2BA2  0DBC               	rlf	??_EUSART_Initialize+6,f
 20925  2BA3  0DBD               	rlf	??_EUSART_Initialize+7,f
 20926  2BA4  0B89               	decfsz	9,f
 20927  2BA5  2BA0               	goto	u9625
 20928  2BA6  3000               	movlw	0
 20929  2BA7  00BE               	movwf	??_EUSART_Initialize+8
 20930  2BA8  3024               	movlw	36
 20931  2BA9  00BF               	movwf	??_EUSART_Initialize+9
 20932  2BAA  30F4               	movlw	244
 20933  2BAB  00C0               	movwf	??_EUSART_Initialize+10
 20934  2BAC  3000               	movlw	0
 20935  2BAD  00C1               	movwf	??_EUSART_Initialize+11
 20936  2BAE  083A               	movf	??_EUSART_Initialize+4,w
 20937  2BAF  02BE               	subwf	??_EUSART_Initialize+8,f
 20938  2BB0  083B               	movf	??_EUSART_Initialize+5,w
 20939  2BB1  3BBF               	subwfb	??_EUSART_Initialize+9,f
 20940  2BB2  083C               	movf	??_EUSART_Initialize+6,w
 20941  2BB3  3BC0               	subwfb	??_EUSART_Initialize+10,f
 20942  2BB4  083D               	movf	??_EUSART_Initialize+7,w
 20943  2BB5  3BC1               	subwfb	??_EUSART_Initialize+11,f
 20944  2BB6  0841               	movf	??_EUSART_Initialize+11,w
 20945  2BB7  00AB               	movwf	___aldiv@dividend+3
 20946  2BB8  0840               	movf	??_EUSART_Initialize+10,w
 20947  2BB9  00AA               	movwf	___aldiv@dividend+2
 20948  2BBA  083F               	movf	??_EUSART_Initialize+9,w
 20949  2BBB  00A9               	movwf	___aldiv@dividend+1
 20950  2BBC  083E               	movf	??_EUSART_Initialize+8,w
 20951  2BBD  00A8               	movwf	___aldiv@dividend
 20952  2BBE  31A9  21C6  31AB   	fcall	___aldiv
 20953  2BC1  0020               	movlb	0	; select bank0
 20954  2BC2  0825               	movf	?___aldiv+1,w
 20955  2BC3  00FB               	movwf	EUSART_Initialize@x+1
 20956  2BC4  0824               	movf	?___aldiv,w
 20957  2BC5  00FA               	movwf	EUSART_Initialize@x
 20958                           
 20959                           ;EUSART.c: 10:  if(x>255)
 20960  2BC6  3001               	movlw	1
 20961  2BC7  027B               	subwf	EUSART_Initialize@x+1,w
 20962  2BC8  3000               	movlw	0
 20963  2BC9  1903               	skipnz
 20964  2BCA  027A               	subwf	EUSART_Initialize@x,w
 20965  2BCB  1C03               	skipc
 20966  2BCC  2C15               	goto	l7723
 20967                           
 20968                           ;EUSART.c: 11:  {;EUSART.c: 12:   x = (16000000 - baudrate*16)/(baudrate*16);
 20969  2BCD  0832               	movf	EUSART_Initialize@baudrate,w
 20970  2BCE  00B6               	movwf	??_EUSART_Initialize
 20971  2BCF  0833               	movf	EUSART_Initialize@baudrate+1,w
 20972  2BD0  00B7               	movwf	??_EUSART_Initialize+1
 20973  2BD1  0834               	movf	EUSART_Initialize@baudrate+2,w
 20974  2BD2  00B8               	movwf	??_EUSART_Initialize+2
 20975  2BD3  0835               	movf	EUSART_Initialize@baudrate+3,w
 20976  2BD4  00B9               	movwf	??_EUSART_Initialize+3
 20977  2BD5  3004               	movlw	4
 20978  2BD6                     u9645:	
 20979  2BD6  35B6               	lslf	??_EUSART_Initialize,f
 20980  2BD7  0DB7               	rlf	??_EUSART_Initialize+1,f
 20981  2BD8  0DB8               	rlf	??_EUSART_Initialize+2,f
 20982  2BD9  0DB9               	rlf	??_EUSART_Initialize+3,f
 20983  2BDA  0B89               	decfsz	9,f
 20984  2BDB  2BD6               	goto	u9645
 20985  2BDC  0839               	movf	??_EUSART_Initialize+3,w
 20986  2BDD  00A7               	movwf	___aldiv@divisor+3
 20987  2BDE  0838               	movf	??_EUSART_Initialize+2,w
 20988  2BDF  00A6               	movwf	___aldiv@divisor+2
 20989  2BE0  0837               	movf	??_EUSART_Initialize+1,w
 20990  2BE1  00A5               	movwf	___aldiv@divisor+1
 20991  2BE2  0836               	movf	??_EUSART_Initialize,w
 20992  2BE3  00A4               	movwf	___aldiv@divisor
 20993  2BE4  0832               	movf	EUSART_Initialize@baudrate,w
 20994  2BE5  00BA               	movwf	??_EUSART_Initialize+4
 20995  2BE6  0833               	movf	EUSART_Initialize@baudrate+1,w
 20996  2BE7  00BB               	movwf	??_EUSART_Initialize+5
 20997  2BE8  0834               	movf	EUSART_Initialize@baudrate+2,w
 20998  2BE9  00BC               	movwf	??_EUSART_Initialize+6
 20999  2BEA  0835               	movf	EUSART_Initialize@baudrate+3,w
 21000  2BEB  00BD               	movwf	??_EUSART_Initialize+7
 21001  2BEC  3004               	movlw	4
 21002  2BED                     u9655:	
 21003  2BED  35BA               	lslf	??_EUSART_Initialize+4,f
 21004  2BEE  0DBB               	rlf	??_EUSART_Initialize+5,f
 21005  2BEF  0DBC               	rlf	??_EUSART_Initialize+6,f
 21006  2BF0  0DBD               	rlf	??_EUSART_Initialize+7,f
 21007  2BF1  0B89               	decfsz	9,f
 21008  2BF2  2BED               	goto	u9655
 21009  2BF3  3000               	movlw	0
 21010  2BF4  00BE               	movwf	??_EUSART_Initialize+8
 21011  2BF5  3024               	movlw	36
 21012  2BF6  00BF               	movwf	??_EUSART_Initialize+9
 21013  2BF7  30F4               	movlw	244
 21014  2BF8  00C0               	movwf	??_EUSART_Initialize+10
 21015  2BF9  3000               	movlw	0
 21016  2BFA  00C1               	movwf	??_EUSART_Initialize+11
 21017  2BFB  083A               	movf	??_EUSART_Initialize+4,w
 21018  2BFC  02BE               	subwf	??_EUSART_Initialize+8,f
 21019  2BFD  083B               	movf	??_EUSART_Initialize+5,w
 21020  2BFE  3BBF               	subwfb	??_EUSART_Initialize+9,f
 21021  2BFF  083C               	movf	??_EUSART_Initialize+6,w
 21022  2C00  3BC0               	subwfb	??_EUSART_Initialize+10,f
 21023  2C01  083D               	movf	??_EUSART_Initialize+7,w
 21024  2C02  3BC1               	subwfb	??_EUSART_Initialize+11,f
 21025  2C03  0841               	movf	??_EUSART_Initialize+11,w
 21026  2C04  00AB               	movwf	___aldiv@dividend+3
 21027  2C05  0840               	movf	??_EUSART_Initialize+10,w
 21028  2C06  00AA               	movwf	___aldiv@dividend+2
 21029  2C07  083F               	movf	??_EUSART_Initialize+9,w
 21030  2C08  00A9               	movwf	___aldiv@dividend+1
 21031  2C09  083E               	movf	??_EUSART_Initialize+8,w
 21032  2C0A  00A8               	movwf	___aldiv@dividend
 21033  2C0B  31A9  21C6  31AB   	fcall	___aldiv
 21034  2C0E  0020               	movlb	0	; select bank0
 21035  2C0F  0825               	movf	?___aldiv+1,w
 21036  2C10  00FB               	movwf	EUSART_Initialize@x+1
 21037  2C11  0824               	movf	?___aldiv,w
 21038  2C12  00FA               	movwf	EUSART_Initialize@x
 21039                           
 21040                           ;EUSART.c: 13:   BRGH = 1;
 21041  2C13  0023               	movlb	3	; select bank3
 21042  2C14  151E               	bsf	30,2	;volatile
 21043  2C15                     l7723:	
 21044                           
 21045                           ;EUSART.c: 15:  if(x<256)
 21046  2C15  3001               	movlw	1
 21047  2C16  027B               	subwf	EUSART_Initialize@x+1,w
 21048  2C17  3000               	movlw	0
 21049  2C18  1903               	skipnz
 21050  2C19  027A               	subwf	EUSART_Initialize@x,w
 21051  2C1A  1803               	skipnc
 21052  2C1B  0008               	return
 21053                           
 21054                           ;EUSART.c: 16:  {;EUSART.c: 17:    SPBRG = x;
 21055  2C1C  087A               	movf	EUSART_Initialize@x,w
 21056  2C1D  0023               	movlb	3	; select bank3
 21057  2C1E  009B               	movwf	27	;volatile
 21058                           
 21059                           ;EUSART.c: 18:    SYNC = 0;
 21060  2C1F  121E               	bcf	30,4	;volatile
 21061                           
 21062                           ;EUSART.c: 19:    SPEN = 1;
 21063  2C20  179D               	bsf	29,7	;volatile
 21064                           
 21065                           ;EUSART.c: 20:           TRISC7 = 1;
 21066  2C21  0021               	movlb	1	; select bank1
 21067  2C22  178E               	bsf	14,7	;volatile
 21068                           
 21069                           ;EUSART.c: 21:           TRISC6 = 1;
 21070  2C23  170E               	bsf	14,6	;volatile
 21071                           
 21072                           ;EUSART.c: 22:           CREN = 1;
 21073  2C24  0023               	movlb	3	; select bank3
 21074  2C25  161D               	bsf	29,4	;volatile
 21075                           
 21076                           ;EUSART.c: 23:           TXEN = 1;
 21077  2C26  169E               	bsf	30,5	;volatile
 21078  2C27  0008               	return
 21079  2C28                     __end_of_EUSART_Initialize:	
 21080                           
 21081                           	psect	text81
 21082  29C6                     __ptext81:	
 21083 ;; *************** function ___aldiv *****************
 21084 ;; Defined at:
 21085 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
 21086 ;; Parameters:    Size  Location     Type
 21087 ;;  divisor         4    4[BANK0 ] long 
 21088 ;;  dividend        4    8[BANK0 ] long 
 21089 ;; Auto vars:     Size  Location     Type
 21090 ;;  quotient        4   14[BANK0 ] long 
 21091 ;;  sign            1   13[BANK0 ] unsigned char 
 21092 ;;  counter         1   12[BANK0 ] unsigned char 
 21093 ;; Return value:  Size  Location     Type
 21094 ;;                  4    4[BANK0 ] long 
 21095 ;; Registers used:
 21096 ;;		wreg, status,2, status,0
 21097 ;; Tracked objects:
 21098 ;;		On entry : 0/0
 21099 ;;		On exit  : 0/0
 21100 ;;		Unchanged: 0/0
 21101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21102 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21103 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21104 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21105 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21106 ;;Total ram usage:       15 bytes
 21107 ;; Hardware stack levels used:    1
 21108 ;; Hardware stack levels required when called:    1
 21109 ;; This function calls:
 21110 ;;		Nothing
 21111 ;; This function is called by:
 21112 ;;		_EUSART_Initialize
 21113 ;;		_setCellUndervoltageProtection
 21114 ;;		_setCellOvervoltageProtection
 21115 ;;		_updateVoltages
 21116 ;; This function uses a non-reentrant model
 21117 ;;
 21118                           
 21119                           
 21120                           ;psect for function ___aldiv
 21121  29C6                     ___aldiv:	
 21122                           
 21123                           ;incstack = 0
 21124                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 21125  29C6  0020               	movlb	0	; select bank0
 21126  29C7  01AD               	clrf	___aldiv@sign
 21127  29C8  1FA7               	btfss	___aldiv@divisor+3,7
 21128  29C9  29D7               	goto	l1067
 21129  29CA  09A4               	comf	___aldiv@divisor,f
 21130  29CB  09A5               	comf	___aldiv@divisor+1,f
 21131  29CC  09A6               	comf	___aldiv@divisor+2,f
 21132  29CD  09A7               	comf	___aldiv@divisor+3,f
 21133  29CE  0AA4               	incf	___aldiv@divisor,f
 21134  29CF  1903               	skipnz
 21135  29D0  0AA5               	incf	___aldiv@divisor+1,f
 21136  29D1  1903               	skipnz
 21137  29D2  0AA6               	incf	___aldiv@divisor+2,f
 21138  29D3  1903               	skipnz
 21139  29D4  0AA7               	incf	___aldiv@divisor+3,f
 21140  29D5  01AD               	clrf	___aldiv@sign
 21141  29D6  0AAD               	incf	___aldiv@sign,f
 21142  29D7                     l1067:	
 21143  29D7  1FAB               	btfss	___aldiv@dividend+3,7
 21144  29D8  29E8               	goto	l7315
 21145  29D9  09A8               	comf	___aldiv@dividend,f
 21146  29DA  09A9               	comf	___aldiv@dividend+1,f
 21147  29DB  09AA               	comf	___aldiv@dividend+2,f
 21148  29DC  09AB               	comf	___aldiv@dividend+3,f
 21149  29DD  0AA8               	incf	___aldiv@dividend,f
 21150  29DE  1903               	skipnz
 21151  29DF  0AA9               	incf	___aldiv@dividend+1,f
 21152  29E0  1903               	skipnz
 21153  29E1  0AAA               	incf	___aldiv@dividend+2,f
 21154  29E2  1903               	skipnz
 21155  29E3  0AAB               	incf	___aldiv@dividend+3,f
 21156  29E4  3001               	movlw	1
 21157  29E5  00F9               	movwf	??___aldiv
 21158  29E6  0879               	movf	??___aldiv,w
 21159  29E7  06AD               	xorwf	___aldiv@sign,f
 21160  29E8                     l7315:	
 21161  29E8  3000               	movlw	0
 21162  29E9  00B1               	movwf	___aldiv@quotient+3
 21163  29EA  3000               	movlw	0
 21164  29EB  00B0               	movwf	___aldiv@quotient+2
 21165  29EC  3000               	movlw	0
 21166  29ED  00AF               	movwf	___aldiv@quotient+1
 21167  29EE  3000               	movlw	0
 21168  29EF  00AE               	movwf	___aldiv@quotient
 21169  29F0  0827               	movf	___aldiv@divisor+3,w
 21170  29F1  0426               	iorwf	___aldiv@divisor+2,w
 21171  29F2  0425               	iorwf	___aldiv@divisor+1,w
 21172  29F3  0424               	iorwf	___aldiv@divisor,w
 21173  29F4  1903               	skipnz
 21174  29F5  2A31               	goto	l7337
 21175  29F6  01AC               	clrf	___aldiv@counter
 21176  29F7  0AAC               	incf	___aldiv@counter,f
 21177  29F8                     l7323:	
 21178  29F8  1BA7               	btfsc	___aldiv@divisor+3,7
 21179  29F9  2A06               	goto	l7325
 21180  29FA  3001               	movlw	1
 21181  29FB                     u9205:	
 21182  29FB  35A4               	lslf	___aldiv@divisor,f
 21183  29FC  0DA5               	rlf	___aldiv@divisor+1,f
 21184  29FD  0DA6               	rlf	___aldiv@divisor+2,f
 21185  29FE  0DA7               	rlf	___aldiv@divisor+3,f
 21186  29FF  0B89               	decfsz	9,f
 21187  2A00  29FB               	goto	u9205
 21188  2A01  3001               	movlw	1
 21189  2A02  00F9               	movwf	??___aldiv
 21190  2A03  0879               	movf	??___aldiv,w
 21191  2A04  07AC               	addwf	___aldiv@counter,f
 21192  2A05  29F8               	goto	l7323
 21193  2A06                     l7325:	
 21194  2A06  3001               	movlw	1
 21195  2A07                     u9225:	
 21196  2A07  35AE               	lslf	___aldiv@quotient,f
 21197  2A08  0DAF               	rlf	___aldiv@quotient+1,f
 21198  2A09  0DB0               	rlf	___aldiv@quotient+2,f
 21199  2A0A  0DB1               	rlf	___aldiv@quotient+3,f
 21200  2A0B  0B89               	decfsz	9,f
 21201  2A0C  2A07               	goto	u9225
 21202  2A0D  0827               	movf	___aldiv@divisor+3,w
 21203  2A0E  022B               	subwf	___aldiv@dividend+3,w
 21204  2A0F  1D03               	skipz
 21205  2A10  2A1B               	goto	u9235
 21206  2A11  0826               	movf	___aldiv@divisor+2,w
 21207  2A12  022A               	subwf	___aldiv@dividend+2,w
 21208  2A13  1D03               	skipz
 21209  2A14  2A1B               	goto	u9235
 21210  2A15  0825               	movf	___aldiv@divisor+1,w
 21211  2A16  0229               	subwf	___aldiv@dividend+1,w
 21212  2A17  1D03               	skipz
 21213  2A18  2A1B               	goto	u9235
 21214  2A19  0824               	movf	___aldiv@divisor,w
 21215  2A1A  0228               	subwf	___aldiv@dividend,w
 21216  2A1B                     u9235:	
 21217  2A1B  1C03               	skipc
 21218  2A1C  2A26               	goto	l7333
 21219  2A1D  0824               	movf	___aldiv@divisor,w
 21220  2A1E  02A8               	subwf	___aldiv@dividend,f
 21221  2A1F  0825               	movf	___aldiv@divisor+1,w
 21222  2A20  3BA9               	subwfb	___aldiv@dividend+1,f
 21223  2A21  0826               	movf	___aldiv@divisor+2,w
 21224  2A22  3BAA               	subwfb	___aldiv@dividend+2,f
 21225  2A23  0827               	movf	___aldiv@divisor+3,w
 21226  2A24  3BAB               	subwfb	___aldiv@dividend+3,f
 21227  2A25  142E               	bsf	___aldiv@quotient,0
 21228  2A26                     l7333:	
 21229  2A26  3001               	movlw	1
 21230  2A27                     u9245:	
 21231  2A27  36A7               	lsrf	___aldiv@divisor+3,f
 21232  2A28  0CA6               	rrf	___aldiv@divisor+2,f
 21233  2A29  0CA5               	rrf	___aldiv@divisor+1,f
 21234  2A2A  0CA4               	rrf	___aldiv@divisor,f
 21235  2A2B  0B89               	decfsz	9,f
 21236  2A2C  2A27               	goto	u9245
 21237  2A2D  3001               	movlw	1
 21238  2A2E  02AC               	subwf	___aldiv@counter,f
 21239  2A2F  1D03               	btfss	3,2
 21240  2A30  2A06               	goto	l7325
 21241  2A31                     l7337:	
 21242  2A31  082D               	movf	___aldiv@sign,w
 21243  2A32  1903               	btfsc	3,2
 21244  2A33  2A3F               	goto	l7341
 21245  2A34  09AE               	comf	___aldiv@quotient,f
 21246  2A35  09AF               	comf	___aldiv@quotient+1,f
 21247  2A36  09B0               	comf	___aldiv@quotient+2,f
 21248  2A37  09B1               	comf	___aldiv@quotient+3,f
 21249  2A38  0AAE               	incf	___aldiv@quotient,f
 21250  2A39  1903               	skipnz
 21251  2A3A  0AAF               	incf	___aldiv@quotient+1,f
 21252  2A3B  1903               	skipnz
 21253  2A3C  0AB0               	incf	___aldiv@quotient+2,f
 21254  2A3D  1903               	skipnz
 21255  2A3E  0AB1               	incf	___aldiv@quotient+3,f
 21256  2A3F                     l7341:	
 21257  2A3F  0831               	movf	___aldiv@quotient+3,w
 21258  2A40  00A7               	movwf	?___aldiv+3
 21259  2A41  0830               	movf	___aldiv@quotient+2,w
 21260  2A42  00A6               	movwf	?___aldiv+2
 21261  2A43  082F               	movf	___aldiv@quotient+1,w
 21262  2A44  00A5               	movwf	?___aldiv+1
 21263  2A45  082E               	movf	___aldiv@quotient,w
 21264  2A46  00A4               	movwf	?___aldiv
 21265  2A47  0008               	return
 21266  2A48                     __end_of___aldiv:	
 21267                           
 21268                           	psect	intentry
 21269  0004                     __pintentry:	
 21270 ;; *************** function _myIsr *****************
 21271 ;; Defined at:
 21272 ;;		line 54 in file "main.c"
 21273 ;; Parameters:    Size  Location     Type
 21274 ;;		None
 21275 ;; Auto vars:     Size  Location     Type
 21276 ;;		None
 21277 ;; Return value:  Size  Location     Type
 21278 ;;                  1    wreg      void 
 21279 ;; Registers used:
 21280 ;;		wreg, status,2, status,0
 21281 ;; Tracked objects:
 21282 ;;		On entry : 0/0
 21283 ;;		On exit  : 0/0
 21284 ;;		Unchanged: 0/0
 21285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21288 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21289 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21290 ;;Total ram usage:        1 bytes
 21291 ;; Hardware stack levels used:    1
 21292 ;; This function calls:
 21293 ;;		Nothing
 21294 ;; This function is called by:
 21295 ;;		Interrupt level 1
 21296 ;; This function uses a non-reentrant model
 21297 ;;
 21298                           
 21299  0004                     _myIsr:	
 21300                           
 21301                           ;incstack = 0
 21302  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 21303                           
 21304                           ; Regs used in _myIsr: [wreg+status,2+status,0]
 21305  0005  3180               	pagesel	$
 21306                           
 21307                           ;main.c: 56:     static uint8_t count = 0;;main.c: 58:     if (PIR1bits.TMR1IF && PIE1bi
      +                          ts.TMR1IE) {
 21308  0006  0020               	movlb	0	; select bank0
 21309  0007  1C11               	btfss	17,0	;volatile
 21310  0008  281C               	goto	i1l169
 21311  0009  0021               	movlb	1	; select bank1
 21312  000A  1C11               	btfss	17,0	;volatile
 21313  000B  281C               	goto	i1l169
 21314                           
 21315                           ;main.c: 59:         PIR1bits.TMR1IF = 0;
 21316  000C  0020               	movlb	0	; select bank0
 21317  000D  1011               	bcf	17,0	;volatile
 21318                           
 21319                           ;main.c: 60:         count++;
 21320  000E  3001               	movlw	1
 21321  000F  00F0               	movwf	??_myIsr
 21322  0010  0870               	movf	??_myIsr,w
 21323  0011  0023               	movlb	3	; select bank3
 21324  0012  07E4               	addwf	myIsr@count^(0+384),f
 21325                           
 21326                           ;main.c: 63:         if (count == 61) {
 21327  0013  303D               	movlw	61
 21328  0014  0664               	xorwf	myIsr@count^(0+384),w
 21329  0015  1D03               	btfss	3,2
 21330  0016  281C               	goto	i1l169
 21331                           
 21332                           ;main.c: 64:             tmr1_flag = 1;
 21333  0017  3001               	movlw	1
 21334  0018  00F0               	movwf	??_myIsr
 21335  0019  0870               	movf	??_myIsr,w
 21336  001A  00E5               	movwf	_tmr1_flag^(0+384)	;volatile
 21337                           
 21338                           ;main.c: 65:             count = 0;
 21339  001B  01E4               	clrf	myIsr@count^(0+384)
 21340  001C                     i1l169:	
 21341  001C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 21342  001D  0009               	retfie
 21343  001E                     __end_of_myIsr:	
 21344  007E                     btemp	set	126	;btemp
 21345  007E                     int$flags	set	126
 21346  007E                     wtemp0	set	126
 21347  2771                     
 21348                           	psect	text7_split_1
 21349  24D9                     l6951:	
 21350                           
 21351                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
 21352  24D9  0859               	movf	vfpfcnvrt@fmt,w
 21353  24DA  0086               	movwf	6
 21354  24DB  0187               	clrf	7
 21355  24DC  3F40               	moviw [0]fsr1
 21356  24DD  00F1               	movwf	strncmp@_l
 21357  24DE  3F41               	moviw [1]fsr1
 21358  24DF  00F2               	movwf	strncmp@_l+1
 21359  24E0  3094               	movlw	low (STR_24| (0+32768))
 21360  24E1  00F3               	movwf	strncmp@_r
 21361  24E2  30BA               	movlw	high (STR_24| (0+32768))
 21362  24E3  00F4               	movwf	strncmp@_r+1
 21363  24E4  3003               	movlw	3
 21364  24E5  00F5               	movwf	strncmp@n
 21365  24E6  3000               	movlw	0
 21366  24E7  00F6               	movwf	strncmp@n+1
 21367  24E8  31B5  25BD  31A4   	fcall	_strncmp
 21368  24EB  0871               	movf	?_strncmp,w
 21369  24EC  0472               	iorwf	?_strncmp+1,w
 21370  24ED  1903               	btfsc	3,2
 21371  24EE  2D06               	goto	l6955
 21372  24EF  0020               	movlb	0	; select bank0
 21373  24F0  0859               	movf	vfpfcnvrt@fmt,w
 21374  24F1  0086               	movwf	6
 21375  24F2  0187               	clrf	7
 21376  24F3  3F40               	moviw [0]fsr1
 21377  24F4  00F1               	movwf	strncmp@_l
 21378  24F5  3F41               	moviw [1]fsr1
 21379  24F6  00F2               	movwf	strncmp@_l+1
 21380  24F7  3098               	movlw	low (STR_28| (0+32768))
 21381  24F8  00F3               	movwf	strncmp@_r
 21382  24F9  30BA               	movlw	high (STR_28| (0+32768))
 21383  24FA  00F4               	movwf	strncmp@_r+1
 21384  24FB  3003               	movlw	3
 21385  24FC  00F5               	movwf	strncmp@n
 21386  24FD  3000               	movlw	0
 21387  24FE  00F6               	movwf	strncmp@n+1
 21388  24FF  31B5  25BD  31A4   	fcall	_strncmp
 21389  2502  0871               	movf	?_strncmp,w
 21390  2503  0472               	iorwf	?_strncmp+1,w
 21391  2504  1D03               	btfss	3,2
 21392  2505  2D51               	goto	l6963
 21393  2506                     l6955:	
 21394                           
 21395                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
 21396  2506  0020               	movlb	0	; select bank0
 21397  2507  0859               	movf	vfpfcnvrt@fmt,w
 21398  2508  0086               	movwf	6
 21399  2509  0187               	clrf	7
 21400  250A  3003               	movlw	3
 21401  250B  0781               	addwf	1,f
 21402  250C  3141               	addfsr 1,1
 21403  250D  1803               	skipnc
 21404  250E  0A81               	incf	1,f
 21405                           
 21406                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
 21407  250F  085A               	movf	vfpfcnvrt@ap,w
 21408  2510  0086               	movwf	6
 21409  2511  0187               	clrf	7
 21410  2512  0801               	movf	1,w
 21411  2513  0084               	movwf	4
 21412  2514  0185               	clrf	5
 21413  2515  3002               	movlw	2
 21414  2516  0781               	addwf	1,f
 21415  2517  0800               	movf	0,w
 21416  2518  0021               	movlb	1	; select bank1
 21417  2519  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 21418  251A  3980               	andlw	128
 21419  251B  1D03               	skipz
 21420  251C  30FF               	movlw	255
 21421  251D  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 21422  251E  00AA               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 21423  251F  00AB               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 21424  2520  00AC               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 21425  2521  00AD               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 21426  2522  00AE               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 21427  2523  00AF               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 21428                           
 21429                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
 21430  2524  0020               	movlb	0	; select bank0
 21431  2525  0858               	movf	vfpfcnvrt@fp+1,w
 21432  2526  00B1               	movwf	dtoa@fp+1
 21433  2527  0857               	movf	vfpfcnvrt@fp,w
 21434  2528  00B0               	movwf	dtoa@fp
 21435  2529  0021               	movlb	1	; select bank1
 21436  252A  0828               	movf	vfpfcnvrt@ll^(0+128),w
 21437  252B  0020               	movlb	0	; select bank0
 21438  252C  00B2               	movwf	dtoa@d
 21439  252D  0021               	movlb	1	; select bank1
 21440  252E  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 21441  252F  0020               	movlb	0	; select bank0
 21442  2530  00B3               	movwf	dtoa@d+1
 21443  2531  0021               	movlb	1	; select bank1
 21444  2532  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 21445  2533  0020               	movlb	0	; select bank0
 21446  2534  00B4               	movwf	dtoa@d+2
 21447  2535  0021               	movlb	1	; select bank1
 21448  2536  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 21449  2537  0020               	movlb	0	; select bank0
 21450  2538  00B5               	movwf	dtoa@d+3
 21451  2539  0021               	movlb	1	; select bank1
 21452  253A  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 21453  253B  0020               	movlb	0	; select bank0
 21454  253C  00B6               	movwf	dtoa@d+4
 21455  253D  0021               	movlb	1	; select bank1
 21456  253E  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 21457  253F  0020               	movlb	0	; select bank0
 21458  2540  00B7               	movwf	dtoa@d+5
 21459  2541  0021               	movlb	1	; select bank1
 21460  2542  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 21461  2543  0020               	movlb	0	; select bank0
 21462  2544  00B8               	movwf	dtoa@d+6
 21463  2545  0021               	movlb	1	; select bank1
 21464  2546  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 21465  2547  0020               	movlb	0	; select bank0
 21466  2548  00B9               	movwf	dtoa@d+7
 21467  2549  319A  2236         	fcall	_dtoa
 21468  254B  0020               	movlb	0	; select bank0
 21469  254C  0831               	movf	?_dtoa+1,w
 21470  254D  00D8               	movwf	?_vfpfcnvrt+1
 21471  254E  0830               	movf	?_dtoa,w
 21472  254F  00D7               	movwf	?_vfpfcnvrt
 21473  2550  0008               	return
 21474  2551                     l6963:	
 21475                           
 21476                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
 21477  2551  0020               	movlb	0	; select bank0
 21478  2552  0859               	movf	vfpfcnvrt@fmt,w
 21479  2553  0086               	movwf	6
 21480  2554  0187               	clrf	7
 21481  2555  3F40               	moviw [0]fsr1
 21482  2556  00F1               	movwf	strncmp@_l
 21483  2557  3F41               	moviw [1]fsr1
 21484  2558  00F2               	movwf	strncmp@_l+1
 21485  2559  3095               	movlw	low ((STR_24+1)| (0+32768))
 21486  255A  00F3               	movwf	strncmp@_r
 21487  255B  30BA               	movlw	high ((STR_24+1)| (0+32768))
 21488  255C  00F4               	movwf	strncmp@_r+1
 21489  255D  3002               	movlw	2
 21490  255E  00F5               	movwf	strncmp@n
 21491  255F  3000               	movlw	0
 21492  2560  00F6               	movwf	strncmp@n+1
 21493  2561  31B5  25BD  31A4   	fcall	_strncmp
 21494  2564  0871               	movf	?_strncmp,w
 21495  2565  0472               	iorwf	?_strncmp+1,w
 21496  2566  1903               	btfsc	3,2
 21497  2567  2D7F               	goto	l6967
 21498  2568  0020               	movlb	0	; select bank0
 21499  2569  0859               	movf	vfpfcnvrt@fmt,w
 21500  256A  0086               	movwf	6
 21501  256B  0187               	clrf	7
 21502  256C  3F40               	moviw [0]fsr1
 21503  256D  00F1               	movwf	strncmp@_l
 21504  256E  3F41               	moviw [1]fsr1
 21505  256F  00F2               	movwf	strncmp@_l+1
 21506  2570  3099               	movlw	low ((STR_28+1)| (0+32768))
 21507  2571  00F3               	movwf	strncmp@_r
 21508  2572  30BA               	movlw	high ((STR_28+1)| (0+32768))
 21509  2573  00F4               	movwf	strncmp@_r+1
 21510  2574  3002               	movlw	2
 21511  2575  00F5               	movwf	strncmp@n
 21512  2576  3000               	movlw	0
 21513  2577  00F6               	movwf	strncmp@n+1
 21514  2578  31B5  25BD  31A4   	fcall	_strncmp
 21515  257B  0871               	movf	?_strncmp,w
 21516  257C  0472               	iorwf	?_strncmp+1,w
 21517  257D  1D03               	btfss	3,2
 21518  257E  2DD1               	goto	L9
 21519  257F                     l6967:	
 21520                           
 21521                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
 21522  257F  0020               	movlb	0	; select bank0
 21523  2580  0859               	movf	vfpfcnvrt@fmt,w
 21524  2581  0086               	movwf	6
 21525  2582  0187               	clrf	7
 21526  2583  3002               	movlw	2
 21527  2584  0781               	addwf	1,f
 21528  2585  3141               	addfsr 1,1
 21529  2586  1803               	skipnc
 21530  2587  0A81               	incf	1,f
 21531                           
 21532                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
 21533  2588  085A               	movf	vfpfcnvrt@ap,w
 21534  2589  0086               	movwf	6
 21535  258A  0187               	clrf	7
 21536  258B  0801               	movf	1,w
 21537  258C  0084               	movwf	4
 21538  258D  0185               	clrf	5
 21539  258E  3002               	movlw	2
 21540  258F  0781               	addwf	1,f
 21541  2590  3F00               	moviw [0]fsr0
 21542  2591  00DB               	movwf	??_vfpfcnvrt
 21543  2592  3F01               	moviw [1]fsr0
 21544  2593  00DC               	movwf	??_vfpfcnvrt+1
 21545  2594  085B               	movf	??_vfpfcnvrt,w
 21546  2595  0021               	movlb	1	; select bank1
 21547  2596  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 21548  2597  0020               	movlb	0	; select bank0
 21549  2598  085C               	movf	??_vfpfcnvrt+1,w
 21550  2599  0021               	movlb	1	; select bank1
 21551  259A  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 21552  259B  0D89               	rlf	9,f
 21553  259C  3B89               	subwfb	9,f
 21554  259D  0989               	comf	9,f
 21555  259E  00AA               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 21556  259F  00AB               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 21557  25A0  00AC               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 21558  25A1  00AD               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 21559  25A2  00AE               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 21560  25A3  00AF               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 21561                           
 21562                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 820:       
      +                                return dtoa(fp, ll);
 21563  25A4  0020               	movlb	0	; select bank0
 21564  25A5  0858               	movf	vfpfcnvrt@fp+1,w
 21565  25A6  00B1               	movwf	dtoa@fp+1
 21566  25A7  0857               	movf	vfpfcnvrt@fp,w
 21567  25A8  00B0               	movwf	dtoa@fp
 21568  25A9  0021               	movlb	1	; select bank1
 21569  25AA  0828               	movf	vfpfcnvrt@ll^(0+128),w
 21570  25AB  0020               	movlb	0	; select bank0
 21571  25AC  00B2               	movwf	dtoa@d
 21572  25AD  0021               	movlb	1	; select bank1
 21573  25AE  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 21574  25AF  0020               	movlb	0	; select bank0
 21575  25B0  00B3               	movwf	dtoa@d+1
 21576  25B1  0021               	movlb	1	; select bank1
 21577  25B2  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 21578  25B3  0020               	movlb	0	; select bank0
 21579  25B4  00B4               	movwf	dtoa@d+2
 21580  25B5  0021               	movlb	1	; select bank1
 21581  25B6  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 21582  25B7  0020               	movlb	0	; select bank0
 21583  25B8  00B5               	movwf	dtoa@d+3
 21584  25B9  0021               	movlb	1	; select bank1
 21585  25BA  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 21586  25BB  0020               	movlb	0	; select bank0
 21587  25BC  00B6               	movwf	dtoa@d+4
 21588  25BD  0021               	movlb	1	; select bank1
 21589  25BE  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 21590  25BF  0020               	movlb	0	; select bank0
 21591  25C0  00B7               	movwf	dtoa@d+5
 21592  25C1  0021               	movlb	1	; select bank1
 21593  25C2  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 21594  25C3  0020               	movlb	0	; select bank0
 21595  25C4  00B8               	movwf	dtoa@d+6
 21596  25C5  0021               	movlb	1	; select bank1
 21597  25C6  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 21598  25C7  0020               	movlb	0	; select bank0
 21599  25C8  00B9               	movwf	dtoa@d+7
 21600  25C9  319A  2236         	fcall	_dtoa
 21601  25CB  0020               	movlb	0	; select bank0
 21602  25CC  0831               	movf	?_dtoa+1,w
 21603  25CD  00D8               	movwf	?_vfpfcnvrt+1
 21604  25CE  0830               	movf	?_dtoa,w
 21605  25CF  00D7               	movwf	?_vfpfcnvrt
 21606  25D0  0008               	return
 21607  25D1                     L9:	
 21608  25D1                     L8:	
 21609  25D1  3188  2843         	ljmp	l6975
 21610                           
 21611                           	psect	text7_split_2
 21612  0843                     l6975:	
 21613                           
 21614                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 21615  0843  0020               	movlb	0	; select bank0
 21616  0844  0859               	movf	vfpfcnvrt@fmt,w
 21617  0845  0086               	movwf	6
 21618  0846  0187               	clrf	7
 21619  0847  3F40               	moviw [0]fsr1
 21620  0848  00DB               	movwf	??_vfpfcnvrt
 21621  0849  3F41               	moviw [1]fsr1
 21622  084A  00DC               	movwf	??_vfpfcnvrt+1
 21623  084B  085B               	movf	??_vfpfcnvrt,w
 21624  084C  0084               	movwf	4
 21625  084D  085C               	movf	??_vfpfcnvrt+1,w
 21626  084E  0085               	movwf	5
 21627  084F  0012               	moviw fsr0++
 21628  0850  3A64               	xorlw	100
 21629  0851  1903               	btfsc	3,2
 21630  0852  2862               	goto	l6979
 21631  0853  0859               	movf	vfpfcnvrt@fmt,w
 21632  0854  0086               	movwf	6
 21633  0855  0187               	clrf	7
 21634  0856  3F40               	moviw [0]fsr1
 21635  0857  00DB               	movwf	??_vfpfcnvrt
 21636  0858  3F41               	moviw [1]fsr1
 21637  0859  00DC               	movwf	??_vfpfcnvrt+1
 21638  085A  085B               	movf	??_vfpfcnvrt,w
 21639  085B  0084               	movwf	4
 21640  085C  085C               	movf	??_vfpfcnvrt+1,w
 21641  085D  0085               	movwf	5
 21642  085E  0012               	moviw fsr0++
 21643  085F  3A69               	xorlw	105
 21644  0860  1D03               	btfss	3,2
 21645  0861  28B3               	goto	l6987
 21646  0862                     l6979:	
 21647                           
 21648                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 21649  0862  0859               	movf	vfpfcnvrt@fmt,w
 21650  0863  0086               	movwf	6
 21651  0864  0187               	clrf	7
 21652  0865  3001               	movlw	1
 21653  0866  0781               	addwf	1,f
 21654  0867  3141               	addfsr 1,1
 21655  0868  1803               	skipnc
 21656  0869  0A81               	incf	1,f
 21657                           
 21658                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 21659  086A  085A               	movf	vfpfcnvrt@ap,w
 21660  086B  0086               	movwf	6
 21661  086C  0187               	clrf	7
 21662  086D  0801               	movf	1,w
 21663  086E  0084               	movwf	4
 21664  086F  0185               	clrf	5
 21665  0870  3002               	movlw	2
 21666  0871  0781               	addwf	1,f
 21667  0872  3F00               	moviw [0]fsr0
 21668  0873  00DB               	movwf	??_vfpfcnvrt
 21669  0874  3F01               	moviw [1]fsr0
 21670  0875  00DC               	movwf	??_vfpfcnvrt+1
 21671  0876  085B               	movf	??_vfpfcnvrt,w
 21672  0877  0021               	movlb	1	; select bank1
 21673  0878  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 21674  0879  0020               	movlb	0	; select bank0
 21675  087A  085C               	movf	??_vfpfcnvrt+1,w
 21676  087B  0021               	movlb	1	; select bank1
 21677  087C  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 21678  087D  0D89               	rlf	9,f
 21679  087E  3B89               	subwfb	9,f
 21680  087F  0989               	comf	9,f
 21681  0880  00AA               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 21682  0881  00AB               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 21683  0882  00AC               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 21684  0883  00AD               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 21685  0884  00AE               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 21686  0885  00AF               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 21687                           
 21688                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 21689  0886  0020               	movlb	0	; select bank0
 21690  0887  0858               	movf	vfpfcnvrt@fp+1,w
 21691  0888  00B1               	movwf	dtoa@fp+1
 21692  0889  0857               	movf	vfpfcnvrt@fp,w
 21693  088A  00B0               	movwf	dtoa@fp
 21694  088B  0021               	movlb	1	; select bank1
 21695  088C  0828               	movf	vfpfcnvrt@ll^(0+128),w
 21696  088D  0020               	movlb	0	; select bank0
 21697  088E  00B2               	movwf	dtoa@d
 21698  088F  0021               	movlb	1	; select bank1
 21699  0890  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 21700  0891  0020               	movlb	0	; select bank0
 21701  0892  00B3               	movwf	dtoa@d+1
 21702  0893  0021               	movlb	1	; select bank1
 21703  0894  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 21704  0895  0020               	movlb	0	; select bank0
 21705  0896  00B4               	movwf	dtoa@d+2
 21706  0897  0021               	movlb	1	; select bank1
 21707  0898  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 21708  0899  0020               	movlb	0	; select bank0
 21709  089A  00B5               	movwf	dtoa@d+3
 21710  089B  0021               	movlb	1	; select bank1
 21711  089C  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 21712  089D  0020               	movlb	0	; select bank0
 21713  089E  00B6               	movwf	dtoa@d+4
 21714  089F  0021               	movlb	1	; select bank1
 21715  08A0  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 21716  08A1  0020               	movlb	0	; select bank0
 21717  08A2  00B7               	movwf	dtoa@d+5
 21718  08A3  0021               	movlb	1	; select bank1
 21719  08A4  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 21720  08A5  0020               	movlb	0	; select bank0
 21721  08A6  00B8               	movwf	dtoa@d+6
 21722  08A7  0021               	movlb	1	; select bank1
 21723  08A8  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 21724  08A9  0020               	movlb	0	; select bank0
 21725  08AA  00B9               	movwf	dtoa@d+7
 21726  08AB  319A  2236         	fcall	_dtoa
 21727  08AD  0020               	movlb	0	; select bank0
 21728  08AE  0831               	movf	?_dtoa+1,w
 21729  08AF  00D8               	movwf	?_vfpfcnvrt+1
 21730  08B0  0830               	movf	?_dtoa,w
 21731  08B1  00D7               	movwf	?_vfpfcnvrt
 21732  08B2  0008               	return
 21733  08B3                     l6987:	
 21734                           
 21735                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
 21736  08B3  0859               	movf	vfpfcnvrt@fmt,w
 21737  08B4  0086               	movwf	6
 21738  08B5  0187               	clrf	7
 21739  08B6  3F40               	moviw [0]fsr1
 21740  08B7  00F1               	movwf	strncmp@_l
 21741  08B8  3F41               	moviw [1]fsr1
 21742  08B9  00F2               	movwf	strncmp@_l+1
 21743  08BA  30AF               	movlw	low (STR_42| (0+32768))
 21744  08BB  00F3               	movwf	strncmp@_r
 21745  08BC  30BA               	movlw	high (STR_42| (0+32768))
 21746  08BD  00F4               	movwf	strncmp@_r+1
 21747  08BE  3002               	movlw	2
 21748  08BF  00F5               	movwf	strncmp@n
 21749  08C0  3000               	movlw	0
 21750  08C1  00F6               	movwf	strncmp@n+1
 21751  08C2  31B5  25BD  3188   	fcall	_strncmp
 21752  08C5  0871               	movf	?_strncmp,w
 21753  08C6  0472               	iorwf	?_strncmp+1,w
 21754  08C7  1903               	btfsc	3,2
 21755  08C8  28E0               	goto	l6991
 21756  08C9  0020               	movlb	0	; select bank0
 21757  08CA  0859               	movf	vfpfcnvrt@fmt,w
 21758  08CB  0086               	movwf	6
 21759  08CC  0187               	clrf	7
 21760  08CD  3F40               	moviw [0]fsr1
 21761  08CE  00F1               	movwf	strncmp@_l
 21762  08CF  3F41               	moviw [1]fsr1
 21763  08D0  00F2               	movwf	strncmp@_l+1
 21764  08D1  30B2               	movlw	low (STR_46| (0+32768))
 21765  08D2  00F3               	movwf	strncmp@_r
 21766  08D3  30BA               	movlw	high (STR_46| (0+32768))
 21767  08D4  00F4               	movwf	strncmp@_r+1
 21768  08D5  3002               	movlw	2
 21769  08D6  00F5               	movwf	strncmp@n
 21770  08D7  3000               	movlw	0
 21771  08D8  00F6               	movwf	strncmp@n+1
 21772  08D9  31B5  25BD  3188   	fcall	_strncmp
 21773  08DC  0871               	movf	?_strncmp,w
 21774  08DD  0472               	iorwf	?_strncmp+1,w
 21775  08DE  1D03               	btfss	3,2
 21776  08DF  2929               	goto	l6999
 21777  08E0                     l6991:	
 21778                           
 21779                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
 21780  08E0  0020               	movlb	0	; select bank0
 21781  08E1  0859               	movf	vfpfcnvrt@fmt,w
 21782  08E2  0086               	movwf	6
 21783  08E3  0187               	clrf	7
 21784  08E4  3002               	movlw	2
 21785  08E5  0781               	addwf	1,f
 21786  08E6  3141               	addfsr 1,1
 21787  08E7  1803               	skipnc
 21788  08E8  0A81               	incf	1,f
 21789                           
 21790                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 21791  08E9  085A               	movf	vfpfcnvrt@ap,w
 21792  08EA  0086               	movwf	6
 21793  08EB  0187               	clrf	7
 21794  08EC  0801               	movf	1,w
 21795  08ED  0084               	movwf	4
 21796  08EE  0185               	clrf	5
 21797  08EF  3002               	movlw	2
 21798  08F0  0781               	addwf	1,f
 21799  08F1  3F00               	moviw [0]fsr0
 21800  08F2  0021               	movlb	1	; select bank1
 21801  08F3  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 21802  08F4  3F01               	moviw [1]fsr0
 21803  08F5  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 21804  08F6  01AA               	clrf	(vfpfcnvrt@ll+2)^(0+128)
 21805  08F7  01AB               	clrf	(vfpfcnvrt@ll+3)^(0+128)
 21806  08F8  01AC               	clrf	(vfpfcnvrt@ll+4)^(0+128)
 21807  08F9  01AD               	clrf	(vfpfcnvrt@ll+5)^(0+128)
 21808  08FA  01AE               	clrf	(vfpfcnvrt@ll+6)^(0+128)
 21809  08FB  01AF               	clrf	(vfpfcnvrt@ll+7)^(0+128)
 21810                           
 21811                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 889:       
      +                                return dtoa(fp, ll);
 21812  08FC  0020               	movlb	0	; select bank0
 21813  08FD  0858               	movf	vfpfcnvrt@fp+1,w
 21814  08FE  00B1               	movwf	dtoa@fp+1
 21815  08FF  0857               	movf	vfpfcnvrt@fp,w
 21816  0900  00B0               	movwf	dtoa@fp
 21817  0901  0021               	movlb	1	; select bank1
 21818  0902  0828               	movf	vfpfcnvrt@ll^(0+128),w
 21819  0903  0020               	movlb	0	; select bank0
 21820  0904  00B2               	movwf	dtoa@d
 21821  0905  0021               	movlb	1	; select bank1
 21822  0906  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 21823  0907  0020               	movlb	0	; select bank0
 21824  0908  00B3               	movwf	dtoa@d+1
 21825  0909  0021               	movlb	1	; select bank1
 21826  090A  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 21827  090B  0020               	movlb	0	; select bank0
 21828  090C  00B4               	movwf	dtoa@d+2
 21829  090D  0021               	movlb	1	; select bank1
 21830  090E  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 21831  090F  0020               	movlb	0	; select bank0
 21832  0910  00B5               	movwf	dtoa@d+3
 21833  0911  0021               	movlb	1	; select bank1
 21834  0912  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 21835  0913  0020               	movlb	0	; select bank0
 21836  0914  00B6               	movwf	dtoa@d+4
 21837  0915  0021               	movlb	1	; select bank1
 21838  0916  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 21839  0917  0020               	movlb	0	; select bank0
 21840  0918  00B7               	movwf	dtoa@d+5
 21841  0919  0021               	movlb	1	; select bank1
 21842  091A  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 21843  091B  0020               	movlb	0	; select bank0
 21844  091C  00B8               	movwf	dtoa@d+6
 21845  091D  0021               	movlb	1	; select bank1
 21846  091E  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 21847  091F  0020               	movlb	0	; select bank0
 21848  0920  00B9               	movwf	dtoa@d+7
 21849  0921  319A  2236         	fcall	_dtoa
 21850  0923  0020               	movlb	0	; select bank0
 21851  0924  0831               	movf	?_dtoa+1,w
 21852  0925  00D8               	movwf	?_vfpfcnvrt+1
 21853  0926  0830               	movf	?_dtoa,w
 21854  0927  00D7               	movwf	?_vfpfcnvrt
 21855  0928  0008               	return
 21856  0929                     l6999:	
 21857                           
 21858                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
 21859  0929  0020               	movlb	0	; select bank0
 21860  092A  0859               	movf	vfpfcnvrt@fmt,w
 21861  092B  0086               	movwf	6
 21862  092C  0187               	clrf	7
 21863  092D  3F40               	moviw [0]fsr1
 21864  092E  00F1               	movwf	strncmp@_l
 21865  092F  3F41               	moviw [1]fsr1
 21866  0930  00F2               	movwf	strncmp@_l+1
 21867  0931  30A0               	movlw	low (STR_51| (0+32768))
 21868  0932  00F3               	movwf	strncmp@_r
 21869  0933  30BA               	movlw	high (STR_51| (0+32768))
 21870  0934  00F4               	movwf	strncmp@_r+1
 21871  0935  3003               	movlw	3
 21872  0936  00F5               	movwf	strncmp@n
 21873  0937  3000               	movlw	0
 21874  0938  00F6               	movwf	strncmp@n+1
 21875  0939  31B5  25BD  3188   	fcall	_strncmp
 21876  093C  0871               	movf	?_strncmp,w
 21877  093D  0472               	iorwf	?_strncmp+1,w
 21878  093E  1D03               	btfss	3,2
 21879  093F  2988               	goto	l7009
 21880                           
 21881                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
 21882  0940  0020               	movlb	0	; select bank0
 21883  0941  0859               	movf	vfpfcnvrt@fmt,w
 21884  0942  0086               	movwf	6
 21885  0943  0187               	clrf	7
 21886  0944  3003               	movlw	3
 21887  0945  0781               	addwf	1,f
 21888  0946  3141               	addfsr 1,1
 21889  0947  1803               	skipnc
 21890  0948  0A81               	incf	1,f
 21891                           
 21892                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 21893  0949  085A               	movf	vfpfcnvrt@ap,w
 21894  094A  0086               	movwf	6
 21895  094B  0187               	clrf	7
 21896  094C  0801               	movf	1,w
 21897  094D  0084               	movwf	4
 21898  094E  0185               	clrf	5
 21899  094F  3002               	movlw	2
 21900  0950  0781               	addwf	1,f
 21901  0951  0800               	movf	0,w
 21902  0952  0021               	movlb	1	; select bank1
 21903  0953  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21904  0954  01B4               	clrf	(vfpfcnvrt@llu+1)^(0+128)
 21905  0955  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21906  0956  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21907  0957  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21908  0958  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21909  0959  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21910  095A  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21911                           
 21912                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
 21913  095B  0020               	movlb	0	; select bank0
 21914  095C  0858               	movf	vfpfcnvrt@fp+1,w
 21915  095D  00B1               	movwf	otoa@fp+1
 21916  095E  0857               	movf	vfpfcnvrt@fp,w
 21917  095F  00B0               	movwf	otoa@fp
 21918  0960  0021               	movlb	1	; select bank1
 21919  0961  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21920  0962  0020               	movlb	0	; select bank0
 21921  0963  00B2               	movwf	otoa@d
 21922  0964  0021               	movlb	1	; select bank1
 21923  0965  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21924  0966  0020               	movlb	0	; select bank0
 21925  0967  00B3               	movwf	otoa@d+1
 21926  0968  0021               	movlb	1	; select bank1
 21927  0969  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21928  096A  0020               	movlb	0	; select bank0
 21929  096B  00B4               	movwf	otoa@d+2
 21930  096C  0021               	movlb	1	; select bank1
 21931  096D  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21932  096E  0020               	movlb	0	; select bank0
 21933  096F  00B5               	movwf	otoa@d+3
 21934  0970  0021               	movlb	1	; select bank1
 21935  0971  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21936  0972  0020               	movlb	0	; select bank0
 21937  0973  00B6               	movwf	otoa@d+4
 21938  0974  0021               	movlb	1	; select bank1
 21939  0975  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21940  0976  0020               	movlb	0	; select bank0
 21941  0977  00B7               	movwf	otoa@d+5
 21942  0978  0021               	movlb	1	; select bank1
 21943  0979  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21944  097A  0020               	movlb	0	; select bank0
 21945  097B  00B8               	movwf	otoa@d+6
 21946  097C  0021               	movlb	1	; select bank1
 21947  097D  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21948  097E  0020               	movlb	0	; select bank0
 21949  097F  00B9               	movwf	otoa@d+7
 21950  0980  31A2  22F5         	fcall	_otoa
 21951  0982  0020               	movlb	0	; select bank0
 21952  0983  0831               	movf	?_otoa+1,w
 21953  0984  00D8               	movwf	?_vfpfcnvrt+1
 21954  0985  0830               	movf	?_otoa,w
 21955  0986  00D7               	movwf	?_vfpfcnvrt
 21956  0987  0008               	return
 21957  0988                     l7009:	
 21958                           
 21959                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
 21960  0988  0020               	movlb	0	; select bank0
 21961  0989  0859               	movf	vfpfcnvrt@fmt,w
 21962  098A  0086               	movwf	6
 21963  098B  0187               	clrf	7
 21964  098C  3F40               	moviw [0]fsr1
 21965  098D  00F1               	movwf	strncmp@_l
 21966  098E  3F41               	moviw [1]fsr1
 21967  098F  00F2               	movwf	strncmp@_l+1
 21968  0990  30A1               	movlw	low ((STR_51+1)| (0+32768))
 21969  0991  00F3               	movwf	strncmp@_r
 21970  0992  30BA               	movlw	high ((STR_51+1)| (0+32768))
 21971  0993  00F4               	movwf	strncmp@_r+1
 21972  0994  3002               	movlw	2
 21973  0995  00F5               	movwf	strncmp@n
 21974  0996  3000               	movlw	0
 21975  0997  00F6               	movwf	strncmp@n+1
 21976  0998  31B5  25BD  3188   	fcall	_strncmp
 21977  099B  0871               	movf	?_strncmp,w
 21978  099C  0472               	iorwf	?_strncmp+1,w
 21979  099D  1D03               	btfss	3,2
 21980  099E  29E8               	goto	l7019
 21981                           
 21982                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
 21983  099F  0020               	movlb	0	; select bank0
 21984  09A0  0859               	movf	vfpfcnvrt@fmt,w
 21985  09A1  0086               	movwf	6
 21986  09A2  0187               	clrf	7
 21987  09A3  3002               	movlw	2
 21988  09A4  0781               	addwf	1,f
 21989  09A5  3141               	addfsr 1,1
 21990  09A6  1803               	skipnc
 21991  09A7  0A81               	incf	1,f
 21992                           
 21993                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
 21994  09A8  085A               	movf	vfpfcnvrt@ap,w
 21995  09A9  0086               	movwf	6
 21996  09AA  0187               	clrf	7
 21997  09AB  0801               	movf	1,w
 21998  09AC  0084               	movwf	4
 21999  09AD  0185               	clrf	5
 22000  09AE  3002               	movlw	2
 22001  09AF  0781               	addwf	1,f
 22002  09B0  3F00               	moviw [0]fsr0
 22003  09B1  0021               	movlb	1	; select bank1
 22004  09B2  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22005  09B3  3F01               	moviw [1]fsr0
 22006  09B4  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22007  09B5  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22008  09B6  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22009  09B7  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22010  09B8  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22011  09B9  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22012  09BA  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22013                           
 22014                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 985:       
      +                                return otoa(fp, llu);
 22015  09BB  0020               	movlb	0	; select bank0
 22016  09BC  0858               	movf	vfpfcnvrt@fp+1,w
 22017  09BD  00B1               	movwf	otoa@fp+1
 22018  09BE  0857               	movf	vfpfcnvrt@fp,w
 22019  09BF  00B0               	movwf	otoa@fp
 22020  09C0  0021               	movlb	1	; select bank1
 22021  09C1  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22022  09C2  0020               	movlb	0	; select bank0
 22023  09C3  00B2               	movwf	otoa@d
 22024  09C4  0021               	movlb	1	; select bank1
 22025  09C5  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22026  09C6  0020               	movlb	0	; select bank0
 22027  09C7  00B3               	movwf	otoa@d+1
 22028  09C8  0021               	movlb	1	; select bank1
 22029  09C9  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22030  09CA  0020               	movlb	0	; select bank0
 22031  09CB  00B4               	movwf	otoa@d+2
 22032  09CC  0021               	movlb	1	; select bank1
 22033  09CD  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22034  09CE  0020               	movlb	0	; select bank0
 22035  09CF  00B5               	movwf	otoa@d+3
 22036  09D0  0021               	movlb	1	; select bank1
 22037  09D1  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22038  09D2  0020               	movlb	0	; select bank0
 22039  09D3  00B6               	movwf	otoa@d+4
 22040  09D4  0021               	movlb	1	; select bank1
 22041  09D5  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22042  09D6  0020               	movlb	0	; select bank0
 22043  09D7  00B7               	movwf	otoa@d+5
 22044  09D8  0021               	movlb	1	; select bank1
 22045  09D9  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22046  09DA  0020               	movlb	0	; select bank0
 22047  09DB  00B8               	movwf	otoa@d+6
 22048  09DC  0021               	movlb	1	; select bank1
 22049  09DD  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22050  09DE  0020               	movlb	0	; select bank0
 22051  09DF  00B9               	movwf	otoa@d+7
 22052  09E0  31A2  22F5         	fcall	_otoa
 22053  09E2  0020               	movlb	0	; select bank0
 22054  09E3  0831               	movf	?_otoa+1,w
 22055  09E4  00D8               	movwf	?_vfpfcnvrt+1
 22056  09E5  0830               	movf	?_otoa,w
 22057  09E6  00D7               	movwf	?_vfpfcnvrt
 22058  09E7  0008               	return
 22059  09E8                     l7019:	
 22060                           
 22061                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
 22062  09E8  0020               	movlb	0	; select bank0
 22063  09E9  0859               	movf	vfpfcnvrt@fmt,w
 22064  09EA  0086               	movwf	6
 22065  09EB  0187               	clrf	7
 22066  09EC  3F40               	moviw [0]fsr1
 22067  09ED  00DB               	movwf	??_vfpfcnvrt
 22068  09EE  3F41               	moviw [1]fsr1
 22069  09EF  00DC               	movwf	??_vfpfcnvrt+1
 22070  09F0  085B               	movf	??_vfpfcnvrt,w
 22071  09F1  0084               	movwf	4
 22072  09F2  085C               	movf	??_vfpfcnvrt+1,w
 22073  09F3  0085               	movwf	5
 22074  09F4  0012               	moviw fsr0++
 22075  09F5  3A6F               	xorlw	111
 22076  09F6  1D03               	btfss	3,2
 22077  09F7  2A40               	goto	l7029
 22078                           
 22079                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
 22080  09F8  0859               	movf	vfpfcnvrt@fmt,w
 22081  09F9  0086               	movwf	6
 22082  09FA  0187               	clrf	7
 22083  09FB  3001               	movlw	1
 22084  09FC  0781               	addwf	1,f
 22085  09FD  3141               	addfsr 1,1
 22086  09FE  1803               	skipnc
 22087  09FF  0A81               	incf	1,f
 22088                           
 22089                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
 22090  0A00  085A               	movf	vfpfcnvrt@ap,w
 22091  0A01  0086               	movwf	6
 22092  0A02  0187               	clrf	7
 22093  0A03  0801               	movf	1,w
 22094  0A04  0084               	movwf	4
 22095  0A05  0185               	clrf	5
 22096  0A06  3002               	movlw	2
 22097  0A07  0781               	addwf	1,f
 22098  0A08  3F00               	moviw [0]fsr0
 22099  0A09  0021               	movlb	1	; select bank1
 22100  0A0A  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22101  0A0B  3F01               	moviw [1]fsr0
 22102  0A0C  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22103  0A0D  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22104  0A0E  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22105  0A0F  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22106  0A10  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22107  0A11  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22108  0A12  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22109                           
 22110                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 995:       
      +                                return otoa(fp, llu);
 22111  0A13  0020               	movlb	0	; select bank0
 22112  0A14  0858               	movf	vfpfcnvrt@fp+1,w
 22113  0A15  00B1               	movwf	otoa@fp+1
 22114  0A16  0857               	movf	vfpfcnvrt@fp,w
 22115  0A17  00B0               	movwf	otoa@fp
 22116  0A18  0021               	movlb	1	; select bank1
 22117  0A19  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22118  0A1A  0020               	movlb	0	; select bank0
 22119  0A1B  00B2               	movwf	otoa@d
 22120  0A1C  0021               	movlb	1	; select bank1
 22121  0A1D  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22122  0A1E  0020               	movlb	0	; select bank0
 22123  0A1F  00B3               	movwf	otoa@d+1
 22124  0A20  0021               	movlb	1	; select bank1
 22125  0A21  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22126  0A22  0020               	movlb	0	; select bank0
 22127  0A23  00B4               	movwf	otoa@d+2
 22128  0A24  0021               	movlb	1	; select bank1
 22129  0A25  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22130  0A26  0020               	movlb	0	; select bank0
 22131  0A27  00B5               	movwf	otoa@d+3
 22132  0A28  0021               	movlb	1	; select bank1
 22133  0A29  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22134  0A2A  0020               	movlb	0	; select bank0
 22135  0A2B  00B6               	movwf	otoa@d+4
 22136  0A2C  0021               	movlb	1	; select bank1
 22137  0A2D  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22138  0A2E  0020               	movlb	0	; select bank0
 22139  0A2F  00B7               	movwf	otoa@d+5
 22140  0A30  0021               	movlb	1	; select bank1
 22141  0A31  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22142  0A32  0020               	movlb	0	; select bank0
 22143  0A33  00B8               	movwf	otoa@d+6
 22144  0A34  0021               	movlb	1	; select bank1
 22145  0A35  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22146  0A36  0020               	movlb	0	; select bank0
 22147  0A37  00B9               	movwf	otoa@d+7
 22148  0A38  31A2  22F5         	fcall	_otoa
 22149  0A3A  0020               	movlb	0	; select bank0
 22150  0A3B  0831               	movf	?_otoa+1,w
 22151  0A3C  00D8               	movwf	?_vfpfcnvrt+1
 22152  0A3D  0830               	movf	?_otoa,w
 22153  0A3E  00D7               	movwf	?_vfpfcnvrt
 22154  0A3F  0008               	return
 22155  0A40                     l7029:	
 22156                           
 22157                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
 22158  0A40  0859               	movf	vfpfcnvrt@fmt,w
 22159  0A41  0086               	movwf	6
 22160  0A42  0187               	clrf	7
 22161  0A43  3F40               	moviw [0]fsr1
 22162  0A44  00F1               	movwf	strncmp@_l
 22163  0A45  3F41               	moviw [1]fsr1
 22164  0A46  00F2               	movwf	strncmp@_l+1
 22165  0A47  30B8               	movlw	low (STR_61| (0+32768))
 22166  0A48  00F3               	movwf	strncmp@_r
 22167  0A49  30BA               	movlw	high (STR_61| (0+32768))
 22168  0A4A  00F4               	movwf	strncmp@_r+1
 22169  0A4B  3002               	movlw	2
 22170  0A4C  00F5               	movwf	strncmp@n
 22171  0A4D  3000               	movlw	0
 22172  0A4E  00F6               	movwf	strncmp@n+1
 22173  0A4F  31B5  25BD  3188   	fcall	_strncmp
 22174  0A52  0871               	movf	?_strncmp,w
 22175  0A53  0472               	iorwf	?_strncmp+1,w
 22176  0A54  1D03               	btfss	3,2
 22177  0A55  2A9F               	goto	l7039
 22178                           
 22179                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
 22180  0A56  0020               	movlb	0	; select bank0
 22181  0A57  0859               	movf	vfpfcnvrt@fmt,w
 22182  0A58  0086               	movwf	6
 22183  0A59  0187               	clrf	7
 22184  0A5A  3002               	movlw	2
 22185  0A5B  0781               	addwf	1,f
 22186  0A5C  3141               	addfsr 1,1
 22187  0A5D  1803               	skipnc
 22188  0A5E  0A81               	incf	1,f
 22189                           
 22190                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 22191  0A5F  085A               	movf	vfpfcnvrt@ap,w
 22192  0A60  0086               	movwf	6
 22193  0A61  0187               	clrf	7
 22194  0A62  0801               	movf	1,w
 22195  0A63  0084               	movwf	4
 22196  0A64  0185               	clrf	5
 22197  0A65  3002               	movlw	2
 22198  0A66  0781               	addwf	1,f
 22199  0A67  3F00               	moviw [0]fsr0
 22200  0A68  0021               	movlb	1	; select bank1
 22201  0A69  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22202  0A6A  3F01               	moviw [1]fsr0
 22203  0A6B  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22204  0A6C  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22205  0A6D  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22206  0A6E  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22207  0A6F  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22208  0A70  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22209  0A71  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22210                           
 22211                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1049:      
      +                                 return otoa(fp, llu);
 22212  0A72  0020               	movlb	0	; select bank0
 22213  0A73  0858               	movf	vfpfcnvrt@fp+1,w
 22214  0A74  00B1               	movwf	otoa@fp+1
 22215  0A75  0857               	movf	vfpfcnvrt@fp,w
 22216  0A76  00B0               	movwf	otoa@fp
 22217  0A77  0021               	movlb	1	; select bank1
 22218  0A78  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22219  0A79  0020               	movlb	0	; select bank0
 22220  0A7A  00B2               	movwf	otoa@d
 22221  0A7B  0021               	movlb	1	; select bank1
 22222  0A7C  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22223  0A7D  0020               	movlb	0	; select bank0
 22224  0A7E  00B3               	movwf	otoa@d+1
 22225  0A7F  0021               	movlb	1	; select bank1
 22226  0A80  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22227  0A81  0020               	movlb	0	; select bank0
 22228  0A82  00B4               	movwf	otoa@d+2
 22229  0A83  0021               	movlb	1	; select bank1
 22230  0A84  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22231  0A85  0020               	movlb	0	; select bank0
 22232  0A86  00B5               	movwf	otoa@d+3
 22233  0A87  0021               	movlb	1	; select bank1
 22234  0A88  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22235  0A89  0020               	movlb	0	; select bank0
 22236  0A8A  00B6               	movwf	otoa@d+4
 22237  0A8B  0021               	movlb	1	; select bank1
 22238  0A8C  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22239  0A8D  0020               	movlb	0	; select bank0
 22240  0A8E  00B7               	movwf	otoa@d+5
 22241  0A8F  0021               	movlb	1	; select bank1
 22242  0A90  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22243  0A91  0020               	movlb	0	; select bank0
 22244  0A92  00B8               	movwf	otoa@d+6
 22245  0A93  0021               	movlb	1	; select bank1
 22246  0A94  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22247  0A95  0020               	movlb	0	; select bank0
 22248  0A96  00B9               	movwf	otoa@d+7
 22249  0A97  31A2  22F5         	fcall	_otoa
 22250  0A99  0020               	movlb	0	; select bank0
 22251  0A9A  0831               	movf	?_otoa+1,w
 22252  0A9B  00D8               	movwf	?_vfpfcnvrt+1
 22253  0A9C  0830               	movf	?_otoa,w
 22254  0A9D  00D7               	movwf	?_vfpfcnvrt
 22255  0A9E  0008               	return
 22256  0A9F                     l7039:	
 22257                           
 22258                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
 22259  0A9F  0020               	movlb	0	; select bank0
 22260  0AA0  0859               	movf	vfpfcnvrt@fmt,w
 22261  0AA1  0086               	movwf	6
 22262  0AA2  0187               	clrf	7
 22263  0AA3  3F40               	moviw [0]fsr1
 22264  0AA4  00F1               	movwf	strncmp@_l
 22265  0AA5  3F41               	moviw [1]fsr1
 22266  0AA6  00F2               	movwf	strncmp@_l+1
 22267  0AA7  309C               	movlw	low (STR_66| (0+32768))
 22268  0AA8  00F3               	movwf	strncmp@_r
 22269  0AA9  30BA               	movlw	high (STR_66| (0+32768))
 22270  0AAA  00F4               	movwf	strncmp@_r+1
 22271  0AAB  3003               	movlw	3
 22272  0AAC  00F5               	movwf	strncmp@n
 22273  0AAD  3000               	movlw	0
 22274  0AAE  00F6               	movwf	strncmp@n+1
 22275  0AAF  31B5  25BD  3188   	fcall	_strncmp
 22276  0AB2  0871               	movf	?_strncmp,w
 22277  0AB3  0472               	iorwf	?_strncmp+1,w
 22278  0AB4  1D03               	btfss	3,2
 22279  0AB5  2B36               	goto	l7051
 22280                           
 22281                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
 22282  0AB6  0020               	movlb	0	; select bank0
 22283  0AB7  0859               	movf	vfpfcnvrt@fmt,w
 22284  0AB8  0086               	movwf	6
 22285  0AB9  0187               	clrf	7
 22286  0ABA  3003               	movlw	3
 22287  0ABB  0781               	addwf	1,f
 22288  0ABC  3141               	addfsr 1,1
 22289  0ABD  1803               	skipnc
 22290  0ABE  0A81               	incf	1,f
 22291                           
 22292                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
 22293  0ABF  085A               	movf	vfpfcnvrt@ap,w
 22294  0AC0  0086               	movwf	6
 22295  0AC1  0187               	clrf	7
 22296  0AC2  0801               	movf	1,w
 22297  0AC3  0084               	movwf	4
 22298  0AC4  0185               	clrf	5
 22299  0AC5  3002               	movlw	2
 22300  0AC6  0781               	addwf	1,f
 22301  0AC7  3F00               	moviw [0]fsr0
 22302  0AC8  0021               	movlb	1	; select bank1
 22303  0AC9  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 22304  0ACA  3F01               	moviw [1]fsr0
 22305  0ACB  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 22306                           
 22307                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
 22308  0ACC  0830               	movf	vfpfcnvrt@vp^(0+128),w
 22309  0ACD  0086               	movwf	6
 22310  0ACE  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 22311  0ACF  0087               	movwf	7
 22312  0AD0  0023               	movlb	3	; select bank3
 22313  0AD1  084A               	movf	_nout^(0+384),w
 22314  0AD2  0081               	movwf	1
 22315  0AD3  2B32               	goto	l7047
 22316  0AD4                     l7053:	
 22317                           
 22318                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
 22319  0AD4  0020               	movlb	0	; select bank0
 22320  0AD5  0859               	movf	vfpfcnvrt@fmt,w
 22321  0AD6  0086               	movwf	6
 22322  0AD7  0187               	clrf	7
 22323  0AD8  3002               	movlw	2
 22324  0AD9  0781               	addwf	1,f
 22325  0ADA  3141               	addfsr 1,1
 22326  0ADB  1803               	skipnc
 22327  0ADC  0A81               	incf	1,f
 22328                           
 22329                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
 22330  0ADD  085A               	movf	vfpfcnvrt@ap,w
 22331  0ADE  0086               	movwf	6
 22332  0ADF  0187               	clrf	7
 22333  0AE0  0801               	movf	1,w
 22334  0AE1  0084               	movwf	4
 22335  0AE2  0185               	clrf	5
 22336  0AE3  3002               	movlw	2
 22337  0AE4  0781               	addwf	1,f
 22338  0AE5  3F00               	moviw [0]fsr0
 22339  0AE6  0021               	movlb	1	; select bank1
 22340  0AE7  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 22341  0AE8  3F01               	moviw [1]fsr0
 22342  0AE9  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 22343                           
 22344                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
 22345  0AEA  0830               	movf	vfpfcnvrt@vp^(0+128),w
 22346  0AEB  0086               	movwf	6
 22347  0AEC  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 22348  0AED  0087               	movwf	7
 22349  0AEE  0023               	movlb	3	; select bank3
 22350  0AEF  084A               	movf	_nout^(0+384),w
 22351  0AF0  3FC0               	movwi [0]fsr1
 22352  0AF1  084B               	movf	(_nout+1)^(0+384),w
 22353  0AF2  3FC1               	movwi [1]fsr1
 22354  0AF3  2B32               	goto	l7047
 22355  0AF4                     l7065:	
 22356                           
 22357                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
 22358  0AF4  0859               	movf	vfpfcnvrt@fmt,w
 22359  0AF5  0086               	movwf	6
 22360  0AF6  0187               	clrf	7
 22361  0AF7  3001               	movlw	1
 22362  0AF8  0781               	addwf	1,f
 22363  0AF9  3141               	addfsr 1,1
 22364  0AFA  1803               	skipnc
 22365  0AFB  0A81               	incf	1,f
 22366                           
 22367                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
 22368  0AFC  085A               	movf	vfpfcnvrt@ap,w
 22369  0AFD  0086               	movwf	6
 22370  0AFE  0187               	clrf	7
 22371  0AFF  0801               	movf	1,w
 22372  0B00  0084               	movwf	4
 22373  0B01  0185               	clrf	5
 22374  0B02  3002               	movlw	2
 22375  0B03  0781               	addwf	1,f
 22376  0B04  3F00               	moviw [0]fsr0
 22377  0B05  0021               	movlb	1	; select bank1
 22378  0B06  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 22379  0B07  3F01               	moviw [1]fsr0
 22380  0B08  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 22381                           
 22382                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
 22383  0B09  0830               	movf	vfpfcnvrt@vp^(0+128),w
 22384  0B0A  0086               	movwf	6
 22385  0B0B  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 22386  0B0C  0087               	movwf	7
 22387  0B0D  0023               	movlb	3	; select bank3
 22388  0B0E  084A               	movf	_nout^(0+384),w
 22389  0B0F  3FC0               	movwi [0]fsr1
 22390  0B10  084B               	movf	(_nout+1)^(0+384),w
 22391  0B11  3FC1               	movwi [1]fsr1
 22392  0B12  2B32               	goto	l7047
 22393  0B13                     l7077:	
 22394                           
 22395                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
 22396  0B13  0020               	movlb	0	; select bank0
 22397  0B14  0859               	movf	vfpfcnvrt@fmt,w
 22398  0B15  0086               	movwf	6
 22399  0B16  0187               	clrf	7
 22400  0B17  3002               	movlw	2
 22401  0B18  0781               	addwf	1,f
 22402  0B19  3141               	addfsr 1,1
 22403  0B1A  1803               	skipnc
 22404  0B1B  0A81               	incf	1,f
 22405                           
 22406                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
 22407  0B1C  085A               	movf	vfpfcnvrt@ap,w
 22408  0B1D  0086               	movwf	6
 22409  0B1E  0187               	clrf	7
 22410  0B1F  0801               	movf	1,w
 22411  0B20  0084               	movwf	4
 22412  0B21  0185               	clrf	5
 22413  0B22  3002               	movlw	2
 22414  0B23  0781               	addwf	1,f
 22415  0B24  3F00               	moviw [0]fsr0
 22416  0B25  0021               	movlb	1	; select bank1
 22417  0B26  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 22418  0B27  3F01               	moviw [1]fsr0
 22419  0B28  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 22420                           
 22421                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
 22422  0B29  0830               	movf	vfpfcnvrt@vp^(0+128),w
 22423  0B2A  0086               	movwf	6
 22424  0B2B  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 22425  0B2C  0087               	movwf	7
 22426  0B2D  0023               	movlb	3	; select bank3
 22427  0B2E  084A               	movf	_nout^(0+384),w
 22428  0B2F  3FC0               	movwi [0]fsr1
 22429  0B30  084B               	movf	(_nout+1)^(0+384),w
 22430  0B31  3FC1               	movwi [1]fsr1
 22431  0B32                     l7047:	
 22432                           
 22433                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
 22434  0B32  0020               	movlb	0	; select bank0
 22435  0B33  01D7               	clrf	?_vfpfcnvrt
 22436  0B34  01D8               	clrf	?_vfpfcnvrt+1
 22437  0B35  0008               	return
 22438  0B36                     l7051:	
 22439                           
 22440                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
 22441  0B36  0020               	movlb	0	; select bank0
 22442  0B37  0859               	movf	vfpfcnvrt@fmt,w
 22443  0B38  0086               	movwf	6
 22444  0B39  0187               	clrf	7
 22445  0B3A  3F40               	moviw [0]fsr1
 22446  0B3B  00F1               	movwf	strncmp@_l
 22447  0B3C  3F41               	moviw [1]fsr1
 22448  0B3D  00F2               	movwf	strncmp@_l+1
 22449  0B3E  309D               	movlw	low ((STR_66+1)| (0+32768))
 22450  0B3F  00F3               	movwf	strncmp@_r
 22451  0B40  30BA               	movlw	high ((STR_66+1)| (0+32768))
 22452  0B41  00F4               	movwf	strncmp@_r+1
 22453  0B42  3002               	movlw	2
 22454  0B43  00F5               	movwf	strncmp@n
 22455  0B44  3000               	movlw	0
 22456  0B45  00F6               	movwf	strncmp@n+1
 22457  0B46  31B5  25BD  3188   	fcall	_strncmp
 22458  0B49  0871               	movf	?_strncmp,w
 22459  0B4A  0472               	iorwf	?_strncmp+1,w
 22460  0B4B  1903               	btfsc	3,2
 22461  0B4C  2AD4               	goto	l7053
 22462                           
 22463                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
 22464  0B4D  0020               	movlb	0	; select bank0
 22465  0B4E  0859               	movf	vfpfcnvrt@fmt,w
 22466  0B4F  0086               	movwf	6
 22467  0B50  0187               	clrf	7
 22468  0B51  3F40               	moviw [0]fsr1
 22469  0B52  00DB               	movwf	??_vfpfcnvrt
 22470  0B53  3F41               	moviw [1]fsr1
 22471  0B54  00DC               	movwf	??_vfpfcnvrt+1
 22472  0B55  085B               	movf	??_vfpfcnvrt,w
 22473  0B56  0084               	movwf	4
 22474  0B57  085C               	movf	??_vfpfcnvrt+1,w
 22475  0B58  0085               	movwf	5
 22476  0B59  0012               	moviw fsr0++
 22477  0B5A  3A6E               	xorlw	110
 22478  0B5B  1903               	btfsc	3,2
 22479  0B5C  2AF4               	goto	l7065
 22480                           
 22481                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
 22482  0B5D  0859               	movf	vfpfcnvrt@fmt,w
 22483  0B5E  0086               	movwf	6
 22484  0B5F  0187               	clrf	7
 22485  0B60  3F40               	moviw [0]fsr1
 22486  0B61  00F1               	movwf	strncmp@_l
 22487  0B62  3F41               	moviw [1]fsr1
 22488  0B63  00F2               	movwf	strncmp@_l+1
 22489  0B64  30B5               	movlw	low (STR_76| (0+32768))
 22490  0B65  00F3               	movwf	strncmp@_r
 22491  0B66  30BA               	movlw	high (STR_76| (0+32768))
 22492  0B67  00F4               	movwf	strncmp@_r+1
 22493  0B68  3002               	movlw	2
 22494  0B69  00F5               	movwf	strncmp@n
 22495  0B6A  3000               	movlw	0
 22496  0B6B  00F6               	movwf	strncmp@n+1
 22497  0B6C  31B5  25BD  3188   	fcall	_strncmp
 22498  0B6F  0871               	movf	?_strncmp,w
 22499  0B70  0472               	iorwf	?_strncmp+1,w
 22500  0B71  1903               	btfsc	3,2
 22501  0B72  2B13               	goto	l7077
 22502                           
 22503                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
 22504  0B73  0020               	movlb	0	; select bank0
 22505  0B74  0859               	movf	vfpfcnvrt@fmt,w
 22506  0B75  0086               	movwf	6
 22507  0B76  0187               	clrf	7
 22508  0B77  3F40               	moviw [0]fsr1
 22509  0B78  00DB               	movwf	??_vfpfcnvrt
 22510  0B79  3F41               	moviw [1]fsr1
 22511  0B7A  00DC               	movwf	??_vfpfcnvrt+1
 22512  0B7B  085B               	movf	??_vfpfcnvrt,w
 22513  0B7C  0084               	movwf	4
 22514  0B7D  085C               	movf	??_vfpfcnvrt+1,w
 22515  0B7E  0085               	movwf	5
 22516  0B7F  0012               	moviw fsr0++
 22517  0B80  3A70               	xorlw	112
 22518  0B81  1D03               	btfss	3,2
 22519  0B82  2BCF               	goto	l7097
 22520                           
 22521                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
 22522  0B83  0859               	movf	vfpfcnvrt@fmt,w
 22523  0B84  0086               	movwf	6
 22524  0B85  0187               	clrf	7
 22525  0B86  3001               	movlw	1
 22526  0B87  0781               	addwf	1,f
 22527  0B88  3141               	addfsr 1,1
 22528  0B89  1803               	skipnc
 22529  0B8A  0A81               	incf	1,f
 22530                           
 22531                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
 22532  0B8B  085A               	movf	vfpfcnvrt@ap,w
 22533  0B8C  0086               	movwf	6
 22534  0B8D  0187               	clrf	7
 22535  0B8E  0801               	movf	1,w
 22536  0B8F  0084               	movwf	4
 22537  0B90  0185               	clrf	5
 22538  0B91  3002               	movlw	2
 22539  0B92  0781               	addwf	1,f
 22540  0B93  3F00               	moviw [0]fsr0
 22541  0B94  0021               	movlb	1	; select bank1
 22542  0B95  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22543  0B96  3F01               	moviw [1]fsr0
 22544  0B97  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22545  0B98  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22546  0B99  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22547  0B9A  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22548  0B9B  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22549  0B9C  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22550  0B9D  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22551                           
 22552                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
 22553  0B9E  0020               	movlb	0	; select bank0
 22554  0B9F  0858               	movf	vfpfcnvrt@fp+1,w
 22555  0BA0  00B1               	movwf	xtoa@fp+1
 22556  0BA1  0857               	movf	vfpfcnvrt@fp,w
 22557  0BA2  00B0               	movwf	xtoa@fp
 22558  0BA3  0021               	movlb	1	; select bank1
 22559  0BA4  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22560  0BA5  0020               	movlb	0	; select bank0
 22561  0BA6  00B2               	movwf	xtoa@d
 22562  0BA7  0021               	movlb	1	; select bank1
 22563  0BA8  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22564  0BA9  0020               	movlb	0	; select bank0
 22565  0BAA  00B3               	movwf	xtoa@d+1
 22566  0BAB  0021               	movlb	1	; select bank1
 22567  0BAC  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22568  0BAD  0020               	movlb	0	; select bank0
 22569  0BAE  00B4               	movwf	xtoa@d+2
 22570  0BAF  0021               	movlb	1	; select bank1
 22571  0BB0  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22572  0BB1  0020               	movlb	0	; select bank0
 22573  0BB2  00B5               	movwf	xtoa@d+3
 22574  0BB3  0021               	movlb	1	; select bank1
 22575  0BB4  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22576  0BB5  0020               	movlb	0	; select bank0
 22577  0BB6  00B6               	movwf	xtoa@d+4
 22578  0BB7  0021               	movlb	1	; select bank1
 22579  0BB8  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22580  0BB9  0020               	movlb	0	; select bank0
 22581  0BBA  00B7               	movwf	xtoa@d+5
 22582  0BBB  0021               	movlb	1	; select bank1
 22583  0BBC  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22584  0BBD  0020               	movlb	0	; select bank0
 22585  0BBE  00B8               	movwf	xtoa@d+6
 22586  0BBF  0021               	movlb	1	; select bank1
 22587  0BC0  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22588  0BC1  0020               	movlb	0	; select bank0
 22589  0BC2  00B9               	movwf	xtoa@d+7
 22590  0BC3  3078               	movlw	120
 22591  0BC4  00DB               	movwf	??_vfpfcnvrt
 22592  0BC5  085B               	movf	??_vfpfcnvrt,w
 22593  0BC6  00BA               	movwf	xtoa@x
 22594  0BC7  319B  2389         	fcall	_xtoa
 22595  0BC9  0020               	movlb	0	; select bank0
 22596  0BCA  0831               	movf	?_xtoa+1,w
 22597  0BCB  00D8               	movwf	?_vfpfcnvrt+1
 22598  0BCC  0830               	movf	?_xtoa,w
 22599  0BCD  00D7               	movwf	?_vfpfcnvrt
 22600  0BCE  0008               	return
 22601  0BCF                     l7097:	
 22602                           
 22603                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 22604  0BCF  0859               	movf	vfpfcnvrt@fmt,w
 22605  0BD0  0086               	movwf	6
 22606  0BD1  0187               	clrf	7
 22607  0BD2  3F40               	moviw [0]fsr1
 22608  0BD3  00DB               	movwf	??_vfpfcnvrt
 22609  0BD4  3F41               	moviw [1]fsr1
 22610  0BD5  00DC               	movwf	??_vfpfcnvrt+1
 22611  0BD6  085B               	movf	??_vfpfcnvrt,w
 22612  0BD7  0084               	movwf	4
 22613  0BD8  085C               	movf	??_vfpfcnvrt+1,w
 22614  0BD9  0085               	movwf	5
 22615  0BDA  0012               	moviw fsr0++
 22616  0BDB  3A73               	xorlw	115
 22617  0BDC  1D03               	btfss	3,2
 22618  0BDD  2C08               	goto	l7107
 22619                           
 22620                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 22621  0BDE  0859               	movf	vfpfcnvrt@fmt,w
 22622  0BDF  0086               	movwf	6
 22623  0BE0  0187               	clrf	7
 22624  0BE1  3001               	movlw	1
 22625  0BE2  0781               	addwf	1,f
 22626  0BE3  3141               	addfsr 1,1
 22627  0BE4  1803               	skipnc
 22628  0BE5  0A81               	incf	1,f
 22629                           
 22630                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 22631  0BE6  085A               	movf	vfpfcnvrt@ap,w
 22632  0BE7  0086               	movwf	6
 22633  0BE8  0187               	clrf	7
 22634  0BE9  0801               	movf	1,w
 22635  0BEA  0084               	movwf	4
 22636  0BEB  0185               	clrf	5
 22637  0BEC  3002               	movlw	2
 22638  0BED  0781               	addwf	1,f
 22639  0BEE  3F00               	moviw [0]fsr0
 22640  0BEF  0021               	movlb	1	; select bank1
 22641  0BF0  00A0               	movwf	vfpfcnvrt@cp^(0+128)
 22642  0BF1  3F01               	moviw [1]fsr0
 22643  0BF2  00A1               	movwf	(vfpfcnvrt@cp+1)^(0+128)
 22644                           
 22645                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 22646  0BF3  0020               	movlb	0	; select bank0
 22647  0BF4  0858               	movf	vfpfcnvrt@fp+1,w
 22648  0BF5  00A1               	movwf	stoa@fp+1
 22649  0BF6  0857               	movf	vfpfcnvrt@fp,w
 22650  0BF7  00A0               	movwf	stoa@fp
 22651  0BF8  0021               	movlb	1	; select bank1
 22652  0BF9  0821               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 22653  0BFA  0020               	movlb	0	; select bank0
 22654  0BFB  00A3               	movwf	stoa@s+1
 22655  0BFC  0021               	movlb	1	; select bank1
 22656  0BFD  0820               	movf	vfpfcnvrt@cp^(0+128),w
 22657  0BFE  0020               	movlb	0	; select bank0
 22658  0BFF  00A2               	movwf	stoa@s
 22659  0C00  31AD  25A0         	fcall	_stoa
 22660  0C02  0020               	movlb	0	; select bank0
 22661  0C03  0821               	movf	?_stoa+1,w
 22662  0C04  00D8               	movwf	?_vfpfcnvrt+1
 22663  0C05  0820               	movf	?_stoa,w
 22664  0C06  00D7               	movwf	?_vfpfcnvrt
 22665  0C07  0008               	return
 22666  0C08                     l7107:	
 22667                           
 22668                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
 22669  0C08  0859               	movf	vfpfcnvrt@fmt,w
 22670  0C09  0086               	movwf	6
 22671  0C0A  0187               	clrf	7
 22672  0C0B  3F40               	moviw [0]fsr1
 22673  0C0C  00F1               	movwf	strncmp@_l
 22674  0C0D  3F41               	moviw [1]fsr1
 22675  0C0E  00F2               	movwf	strncmp@_l+1
 22676  0C0F  30A4               	movlw	low (STR_81| (0+32768))
 22677  0C10  00F3               	movwf	strncmp@_r
 22678  0C11  30BA               	movlw	high (STR_81| (0+32768))
 22679  0C12  00F4               	movwf	strncmp@_r+1
 22680  0C13  3003               	movlw	3
 22681  0C14  00F5               	movwf	strncmp@n
 22682  0C15  3000               	movlw	0
 22683  0C16  00F6               	movwf	strncmp@n+1
 22684  0C17  31B5  25BD  3188   	fcall	_strncmp
 22685  0C1A  0871               	movf	?_strncmp,w
 22686  0C1B  0472               	iorwf	?_strncmp+1,w
 22687  0C1C  1D03               	btfss	3,2
 22688  0C1D  2C66               	goto	l7117
 22689                           
 22690                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
 22691  0C1E  0020               	movlb	0	; select bank0
 22692  0C1F  0859               	movf	vfpfcnvrt@fmt,w
 22693  0C20  0086               	movwf	6
 22694  0C21  0187               	clrf	7
 22695  0C22  3003               	movlw	3
 22696  0C23  0781               	addwf	1,f
 22697  0C24  3141               	addfsr 1,1
 22698  0C25  1803               	skipnc
 22699  0C26  0A81               	incf	1,f
 22700                           
 22701                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 22702  0C27  085A               	movf	vfpfcnvrt@ap,w
 22703  0C28  0086               	movwf	6
 22704  0C29  0187               	clrf	7
 22705  0C2A  0801               	movf	1,w
 22706  0C2B  0084               	movwf	4
 22707  0C2C  0185               	clrf	5
 22708  0C2D  3002               	movlw	2
 22709  0C2E  0781               	addwf	1,f
 22710  0C2F  0800               	movf	0,w
 22711  0C30  0021               	movlb	1	; select bank1
 22712  0C31  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22713  0C32  01B4               	clrf	(vfpfcnvrt@llu+1)^(0+128)
 22714  0C33  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22715  0C34  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22716  0C35  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22717  0C36  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22718  0C37  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22719  0C38  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22720                           
 22721                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
 22722  0C39  0020               	movlb	0	; select bank0
 22723  0C3A  0858               	movf	vfpfcnvrt@fp+1,w
 22724  0C3B  00B1               	movwf	utoa@fp+1
 22725  0C3C  0857               	movf	vfpfcnvrt@fp,w
 22726  0C3D  00B0               	movwf	utoa@fp
 22727  0C3E  0021               	movlb	1	; select bank1
 22728  0C3F  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22729  0C40  0020               	movlb	0	; select bank0
 22730  0C41  00B2               	movwf	utoa@d
 22731  0C42  0021               	movlb	1	; select bank1
 22732  0C43  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22733  0C44  0020               	movlb	0	; select bank0
 22734  0C45  00B3               	movwf	utoa@d+1
 22735  0C46  0021               	movlb	1	; select bank1
 22736  0C47  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22737  0C48  0020               	movlb	0	; select bank0
 22738  0C49  00B4               	movwf	utoa@d+2
 22739  0C4A  0021               	movlb	1	; select bank1
 22740  0C4B  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22741  0C4C  0020               	movlb	0	; select bank0
 22742  0C4D  00B5               	movwf	utoa@d+3
 22743  0C4E  0021               	movlb	1	; select bank1
 22744  0C4F  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22745  0C50  0020               	movlb	0	; select bank0
 22746  0C51  00B6               	movwf	utoa@d+4
 22747  0C52  0021               	movlb	1	; select bank1
 22748  0C53  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22749  0C54  0020               	movlb	0	; select bank0
 22750  0C55  00B7               	movwf	utoa@d+5
 22751  0C56  0021               	movlb	1	; select bank1
 22752  0C57  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22753  0C58  0020               	movlb	0	; select bank0
 22754  0C59  00B8               	movwf	utoa@d+6
 22755  0C5A  0021               	movlb	1	; select bank1
 22756  0C5B  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22757  0C5C  0020               	movlb	0	; select bank0
 22758  0C5D  00B9               	movwf	utoa@d+7
 22759  0C5E  3198  2004         	fcall	_utoa
 22760  0C60  0020               	movlb	0	; select bank0
 22761  0C61  0831               	movf	?_utoa+1,w
 22762  0C62  00D8               	movwf	?_vfpfcnvrt+1
 22763  0C63  0830               	movf	?_utoa,w
 22764  0C64  00D7               	movwf	?_vfpfcnvrt
 22765  0C65  0008               	return
 22766  0C66                     l7117:	
 22767                           
 22768                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
 22769  0C66  0020               	movlb	0	; select bank0
 22770  0C67  0859               	movf	vfpfcnvrt@fmt,w
 22771  0C68  0086               	movwf	6
 22772  0C69  0187               	clrf	7
 22773  0C6A  3F40               	moviw [0]fsr1
 22774  0C6B  00F1               	movwf	strncmp@_l
 22775  0C6C  3F41               	moviw [1]fsr1
 22776  0C6D  00F2               	movwf	strncmp@_l+1
 22777  0C6E  30A5               	movlw	low ((STR_81+1)| (0+32768))
 22778  0C6F  00F3               	movwf	strncmp@_r
 22779  0C70  30BA               	movlw	high ((STR_81+1)| (0+32768))
 22780  0C71  00F4               	movwf	strncmp@_r+1
 22781  0C72  3002               	movlw	2
 22782  0C73  00F5               	movwf	strncmp@n
 22783  0C74  3000               	movlw	0
 22784  0C75  00F6               	movwf	strncmp@n+1
 22785  0C76  31B5  25BD  3188   	fcall	_strncmp
 22786  0C79  0871               	movf	?_strncmp,w
 22787  0C7A  0472               	iorwf	?_strncmp+1,w
 22788  0C7B  1D03               	btfss	3,2
 22789  0C7C  2CC6               	goto	l7127
 22790                           
 22791                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
 22792  0C7D  0020               	movlb	0	; select bank0
 22793  0C7E  0859               	movf	vfpfcnvrt@fmt,w
 22794  0C7F  0086               	movwf	6
 22795  0C80  0187               	clrf	7
 22796  0C81  3002               	movlw	2
 22797  0C82  0781               	addwf	1,f
 22798  0C83  3141               	addfsr 1,1
 22799  0C84  1803               	skipnc
 22800  0C85  0A81               	incf	1,f
 22801                           
 22802                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 22803  0C86  085A               	movf	vfpfcnvrt@ap,w
 22804  0C87  0086               	movwf	6
 22805  0C88  0187               	clrf	7
 22806  0C89  0801               	movf	1,w
 22807  0C8A  0084               	movwf	4
 22808  0C8B  0185               	clrf	5
 22809  0C8C  3002               	movlw	2
 22810  0C8D  0781               	addwf	1,f
 22811  0C8E  3F00               	moviw [0]fsr0
 22812  0C8F  0021               	movlb	1	; select bank1
 22813  0C90  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22814  0C91  3F01               	moviw [1]fsr0
 22815  0C92  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22816  0C93  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22817  0C94  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22818  0C95  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22819  0C96  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22820  0C97  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22821  0C98  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22822                           
 22823                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1177:      
      +                                 return utoa(fp, llu);
 22824  0C99  0020               	movlb	0	; select bank0
 22825  0C9A  0858               	movf	vfpfcnvrt@fp+1,w
 22826  0C9B  00B1               	movwf	utoa@fp+1
 22827  0C9C  0857               	movf	vfpfcnvrt@fp,w
 22828  0C9D  00B0               	movwf	utoa@fp
 22829  0C9E  0021               	movlb	1	; select bank1
 22830  0C9F  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22831  0CA0  0020               	movlb	0	; select bank0
 22832  0CA1  00B2               	movwf	utoa@d
 22833  0CA2  0021               	movlb	1	; select bank1
 22834  0CA3  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22835  0CA4  0020               	movlb	0	; select bank0
 22836  0CA5  00B3               	movwf	utoa@d+1
 22837  0CA6  0021               	movlb	1	; select bank1
 22838  0CA7  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22839  0CA8  0020               	movlb	0	; select bank0
 22840  0CA9  00B4               	movwf	utoa@d+2
 22841  0CAA  0021               	movlb	1	; select bank1
 22842  0CAB  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22843  0CAC  0020               	movlb	0	; select bank0
 22844  0CAD  00B5               	movwf	utoa@d+3
 22845  0CAE  0021               	movlb	1	; select bank1
 22846  0CAF  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22847  0CB0  0020               	movlb	0	; select bank0
 22848  0CB1  00B6               	movwf	utoa@d+4
 22849  0CB2  0021               	movlb	1	; select bank1
 22850  0CB3  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22851  0CB4  0020               	movlb	0	; select bank0
 22852  0CB5  00B7               	movwf	utoa@d+5
 22853  0CB6  0021               	movlb	1	; select bank1
 22854  0CB7  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22855  0CB8  0020               	movlb	0	; select bank0
 22856  0CB9  00B8               	movwf	utoa@d+6
 22857  0CBA  0021               	movlb	1	; select bank1
 22858  0CBB  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22859  0CBC  0020               	movlb	0	; select bank0
 22860  0CBD  00B9               	movwf	utoa@d+7
 22861  0CBE  3198  2004         	fcall	_utoa
 22862  0CC0  0020               	movlb	0	; select bank0
 22863  0CC1  0831               	movf	?_utoa+1,w
 22864  0CC2  00D8               	movwf	?_vfpfcnvrt+1
 22865  0CC3  0830               	movf	?_utoa,w
 22866  0CC4  00D7               	movwf	?_vfpfcnvrt
 22867  0CC5  0008               	return
 22868  0CC6                     l7127:	
 22869                           
 22870                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 22871  0CC6  0020               	movlb	0	; select bank0
 22872  0CC7  0859               	movf	vfpfcnvrt@fmt,w
 22873  0CC8  0086               	movwf	6
 22874  0CC9  0187               	clrf	7
 22875  0CCA  3F40               	moviw [0]fsr1
 22876  0CCB  00DB               	movwf	??_vfpfcnvrt
 22877  0CCC  3F41               	moviw [1]fsr1
 22878  0CCD  00DC               	movwf	??_vfpfcnvrt+1
 22879  0CCE  085B               	movf	??_vfpfcnvrt,w
 22880  0CCF  0084               	movwf	4
 22881  0CD0  085C               	movf	??_vfpfcnvrt+1,w
 22882  0CD1  0085               	movwf	5
 22883  0CD2  0012               	moviw fsr0++
 22884  0CD3  3A75               	xorlw	117
 22885  0CD4  1D03               	btfss	3,2
 22886  0CD5  2D1E               	goto	l7137
 22887                           
 22888                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 22889  0CD6  0859               	movf	vfpfcnvrt@fmt,w
 22890  0CD7  0086               	movwf	6
 22891  0CD8  0187               	clrf	7
 22892  0CD9  3001               	movlw	1
 22893  0CDA  0781               	addwf	1,f
 22894  0CDB  3141               	addfsr 1,1
 22895  0CDC  1803               	skipnc
 22896  0CDD  0A81               	incf	1,f
 22897                           
 22898                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 22899  0CDE  085A               	movf	vfpfcnvrt@ap,w
 22900  0CDF  0086               	movwf	6
 22901  0CE0  0187               	clrf	7
 22902  0CE1  0801               	movf	1,w
 22903  0CE2  0084               	movwf	4
 22904  0CE3  0185               	clrf	5
 22905  0CE4  3002               	movlw	2
 22906  0CE5  0781               	addwf	1,f
 22907  0CE6  3F00               	moviw [0]fsr0
 22908  0CE7  0021               	movlb	1	; select bank1
 22909  0CE8  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22910  0CE9  3F01               	moviw [1]fsr0
 22911  0CEA  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22912  0CEB  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22913  0CEC  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22914  0CED  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22915  0CEE  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22916  0CEF  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22917  0CF0  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22918                           
 22919                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
 22920  0CF1  0020               	movlb	0	; select bank0
 22921  0CF2  0858               	movf	vfpfcnvrt@fp+1,w
 22922  0CF3  00B1               	movwf	utoa@fp+1
 22923  0CF4  0857               	movf	vfpfcnvrt@fp,w
 22924  0CF5  00B0               	movwf	utoa@fp
 22925  0CF6  0021               	movlb	1	; select bank1
 22926  0CF7  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22927  0CF8  0020               	movlb	0	; select bank0
 22928  0CF9  00B2               	movwf	utoa@d
 22929  0CFA  0021               	movlb	1	; select bank1
 22930  0CFB  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22931  0CFC  0020               	movlb	0	; select bank0
 22932  0CFD  00B3               	movwf	utoa@d+1
 22933  0CFE  0021               	movlb	1	; select bank1
 22934  0CFF  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22935  0D00  0020               	movlb	0	; select bank0
 22936  0D01  00B4               	movwf	utoa@d+2
 22937  0D02  0021               	movlb	1	; select bank1
 22938  0D03  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22939  0D04  0020               	movlb	0	; select bank0
 22940  0D05  00B5               	movwf	utoa@d+3
 22941  0D06  0021               	movlb	1	; select bank1
 22942  0D07  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22943  0D08  0020               	movlb	0	; select bank0
 22944  0D09  00B6               	movwf	utoa@d+4
 22945  0D0A  0021               	movlb	1	; select bank1
 22946  0D0B  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22947  0D0C  0020               	movlb	0	; select bank0
 22948  0D0D  00B7               	movwf	utoa@d+5
 22949  0D0E  0021               	movlb	1	; select bank1
 22950  0D0F  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22951  0D10  0020               	movlb	0	; select bank0
 22952  0D11  00B8               	movwf	utoa@d+6
 22953  0D12  0021               	movlb	1	; select bank1
 22954  0D13  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22955  0D14  0020               	movlb	0	; select bank0
 22956  0D15  00B9               	movwf	utoa@d+7
 22957  0D16  3198  2004         	fcall	_utoa
 22958  0D18  0020               	movlb	0	; select bank0
 22959  0D19  0831               	movf	?_utoa+1,w
 22960  0D1A  00D8               	movwf	?_vfpfcnvrt+1
 22961  0D1B  0830               	movf	?_utoa,w
 22962  0D1C  00D7               	movwf	?_vfpfcnvrt
 22963  0D1D  0008               	return
 22964  0D1E                     l7137:	
 22965                           
 22966                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
 22967  0D1E  0859               	movf	vfpfcnvrt@fmt,w
 22968  0D1F  0086               	movwf	6
 22969  0D20  0187               	clrf	7
 22970  0D21  3F40               	moviw [0]fsr1
 22971  0D22  00F1               	movwf	strncmp@_l
 22972  0D23  3F41               	moviw [1]fsr1
 22973  0D24  00F2               	movwf	strncmp@_l+1
 22974  0D25  30BB               	movlw	low (STR_91| (0+32768))
 22975  0D26  00F3               	movwf	strncmp@_r
 22976  0D27  30BA               	movlw	high (STR_91| (0+32768))
 22977  0D28  00F4               	movwf	strncmp@_r+1
 22978  0D29  3002               	movlw	2
 22979  0D2A  00F5               	movwf	strncmp@n
 22980  0D2B  3000               	movlw	0
 22981  0D2C  00F6               	movwf	strncmp@n+1
 22982  0D2D  31B5  25BD  3188   	fcall	_strncmp
 22983  0D30  0871               	movf	?_strncmp,w
 22984  0D31  0472               	iorwf	?_strncmp+1,w
 22985  0D32  1D03               	btfss	3,2
 22986  0D33  2D7D               	goto	l7147
 22987                           
 22988                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
 22989  0D34  0020               	movlb	0	; select bank0
 22990  0D35  0859               	movf	vfpfcnvrt@fmt,w
 22991  0D36  0086               	movwf	6
 22992  0D37  0187               	clrf	7
 22993  0D38  3002               	movlw	2
 22994  0D39  0781               	addwf	1,f
 22995  0D3A  3141               	addfsr 1,1
 22996  0D3B  1803               	skipnc
 22997  0D3C  0A81               	incf	1,f
 22998                           
 22999                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 23000  0D3D  085A               	movf	vfpfcnvrt@ap,w
 23001  0D3E  0086               	movwf	6
 23002  0D3F  0187               	clrf	7
 23003  0D40  0801               	movf	1,w
 23004  0D41  0084               	movwf	4
 23005  0D42  0185               	clrf	5
 23006  0D43  3002               	movlw	2
 23007  0D44  0781               	addwf	1,f
 23008  0D45  3F00               	moviw [0]fsr0
 23009  0D46  0021               	movlb	1	; select bank1
 23010  0D47  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 23011  0D48  3F01               	moviw [1]fsr0
 23012  0D49  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 23013  0D4A  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 23014  0D4B  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 23015  0D4C  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 23016  0D4D  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 23017  0D4E  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 23018  0D4F  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 23019                           
 23020                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1241:      
      +                                 return utoa(fp, llu);
 23021  0D50  0020               	movlb	0	; select bank0
 23022  0D51  0858               	movf	vfpfcnvrt@fp+1,w
 23023  0D52  00B1               	movwf	utoa@fp+1
 23024  0D53  0857               	movf	vfpfcnvrt@fp,w
 23025  0D54  00B0               	movwf	utoa@fp
 23026  0D55  0021               	movlb	1	; select bank1
 23027  0D56  0833               	movf	vfpfcnvrt@llu^(0+128),w
 23028  0D57  0020               	movlb	0	; select bank0
 23029  0D58  00B2               	movwf	utoa@d
 23030  0D59  0021               	movlb	1	; select bank1
 23031  0D5A  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 23032  0D5B  0020               	movlb	0	; select bank0
 23033  0D5C  00B3               	movwf	utoa@d+1
 23034  0D5D  0021               	movlb	1	; select bank1
 23035  0D5E  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 23036  0D5F  0020               	movlb	0	; select bank0
 23037  0D60  00B4               	movwf	utoa@d+2
 23038  0D61  0021               	movlb	1	; select bank1
 23039  0D62  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 23040  0D63  0020               	movlb	0	; select bank0
 23041  0D64  00B5               	movwf	utoa@d+3
 23042  0D65  0021               	movlb	1	; select bank1
 23043  0D66  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 23044  0D67  0020               	movlb	0	; select bank0
 23045  0D68  00B6               	movwf	utoa@d+4
 23046  0D69  0021               	movlb	1	; select bank1
 23047  0D6A  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 23048  0D6B  0020               	movlb	0	; select bank0
 23049  0D6C  00B7               	movwf	utoa@d+5
 23050  0D6D  0021               	movlb	1	; select bank1
 23051  0D6E  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 23052  0D6F  0020               	movlb	0	; select bank0
 23053  0D70  00B8               	movwf	utoa@d+6
 23054  0D71  0021               	movlb	1	; select bank1
 23055  0D72  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 23056  0D73  0020               	movlb	0	; select bank0
 23057  0D74  00B9               	movwf	utoa@d+7
 23058  0D75  3198  2004         	fcall	_utoa
 23059  0D77  0020               	movlb	0	; select bank0
 23060  0D78  0831               	movf	?_utoa+1,w
 23061  0D79  00D8               	movwf	?_vfpfcnvrt+1
 23062  0D7A  0830               	movf	?_utoa,w
 23063  0D7B  00D7               	movwf	?_vfpfcnvrt
 23064  0D7C  0008               	return
 23065  0D7D                     l7147:	
 23066                           
 23067                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
 23068  0D7D  0020               	movlb	0	; select bank0
 23069  0D7E  0859               	movf	vfpfcnvrt@fmt,w
 23070  0D7F  0086               	movwf	6
 23071  0D80  0187               	clrf	7
 23072  0D81  3F40               	moviw [0]fsr1
 23073  0D82  00F1               	movwf	strncmp@_l
 23074  0D83  3F41               	moviw [1]fsr1
 23075  0D84  00F2               	movwf	strncmp@_l+1
 23076  0D85  30A8               	movlw	low (STR_96| (0+32768))
 23077  0D86  00F3               	movwf	strncmp@_r
 23078  0D87  30BA               	movlw	high (STR_96| (0+32768))
 23079  0D88  00F4               	movwf	strncmp@_r+1
 23080  0D89  3003               	movlw	3
 23081  0D8A  00F5               	movwf	strncmp@n
 23082  0D8B  3000               	movlw	0
 23083  0D8C  00F6               	movwf	strncmp@n+1
 23084  0D8D  31B5  25BD  3188   	fcall	_strncmp
 23085  0D90  0871               	movf	?_strncmp,w
 23086  0D91  0472               	iorwf	?_strncmp+1,w
 23087  0D92  1903               	btfsc	3,2
 23088  0D93  2DAB               	goto	l7151
 23089  0D94  0020               	movlb	0	; select bank0
 23090  0D95  0859               	movf	vfpfcnvrt@fmt,w
 23091  0D96  0086               	movwf	6
 23092  0D97  0187               	clrf	7
 23093  0D98  3F40               	moviw [0]fsr1
 23094  0D99  00F1               	movwf	strncmp@_l
 23095  0D9A  3F41               	moviw [1]fsr1
 23096  0D9B  00F2               	movwf	strncmp@_l+1
 23097  0D9C  3090               	movlw	low (STR_100| (0+32768))
 23098  0D9D  00F3               	movwf	strncmp@_r
 23099  0D9E  30BA               	movlw	high (STR_100| (0+32768))
 23100  0D9F  00F4               	movwf	strncmp@_r+1
 23101  0DA0  3003               	movlw	3
 23102  0DA1  00F5               	movwf	strncmp@n
 23103  0DA2  3000               	movlw	0
 23104  0DA3  00F6               	movwf	strncmp@n+1
 23105  0DA4  31B5  25BD  3188   	fcall	_strncmp
 23106  0DA7  0871               	movf	?_strncmp,w
 23107  0DA8  0472               	iorwf	?_strncmp+1,w
 23108  0DA9  1D03               	btfss	3,2
 23109  0DAA  2E0D               	goto	l7161
 23110  0DAB                     l7151:	
 23111                           
 23112                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
 23113  0DAB  0020               	movlb	0	; select bank0
 23114  0DAC  0859               	movf	vfpfcnvrt@fmt,w
 23115  0DAD  0086               	movwf	6
 23116  0DAE  0187               	clrf	7
 23117  0DAF  3F40               	moviw [0]fsr1
 23118  0DB0  00DB               	movwf	??_vfpfcnvrt
 23119  0DB1  3F41               	moviw [1]fsr1
 23120  0DB2  00DC               	movwf	??_vfpfcnvrt+1
 23121  0DB3  3002               	movlw	2
 23122  0DB4  075B               	addwf	??_vfpfcnvrt,w
 23123  0DB5  0084               	movwf	4
 23124  0DB6  085C               	movf	??_vfpfcnvrt+1,w
 23125  0DB7  1803               	skipnc
 23126  0DB8  0A5C               	incf	??_vfpfcnvrt+1,w
 23127  0DB9  0085               	movwf	5
 23128  0DBA  0800               	movf	0,w	;code access
 23129  0DBB  00DD               	movwf	??_vfpfcnvrt+2
 23130  0DBC  085D               	movf	??_vfpfcnvrt+2,w
 23131  0DBD  0021               	movlb	1	; select bank1
 23132  0DBE  00B2               	movwf	vfpfcnvrt@c^(0+128)
 23133                           
 23134                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
 23135  0DBF  0020               	movlb	0	; select bank0
 23136  0DC0  0859               	movf	vfpfcnvrt@fmt,w
 23137  0DC1  0086               	movwf	6
 23138  0DC2  0187               	clrf	7
 23139  0DC3  3003               	movlw	3
 23140  0DC4  0781               	addwf	1,f
 23141  0DC5  3141               	addfsr 1,1
 23142  0DC6  1803               	skipnc
 23143  0DC7  0A81               	incf	1,f
 23144                           
 23145                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 23146  0DC8  085A               	movf	vfpfcnvrt@ap,w
 23147  0DC9  0086               	movwf	6
 23148  0DCA  0187               	clrf	7
 23149  0DCB  0801               	movf	1,w
 23150  0DCC  0084               	movwf	4
 23151  0DCD  0185               	clrf	5
 23152  0DCE  3002               	movlw	2
 23153  0DCF  0781               	addwf	1,f
 23154  0DD0  0800               	movf	0,w
 23155  0DD1  0021               	movlb	1	; select bank1
 23156  0DD2  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 23157  0DD3  01B4               	clrf	(vfpfcnvrt@llu+1)^(0+128)
 23158  0DD4  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 23159  0DD5  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 23160  0DD6  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 23161  0DD7  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 23162  0DD8  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 23163  0DD9  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 23164                           
 23165                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
 23166  0DDA  0020               	movlb	0	; select bank0
 23167  0DDB  0858               	movf	vfpfcnvrt@fp+1,w
 23168  0DDC  00B1               	movwf	xtoa@fp+1
 23169  0DDD  0857               	movf	vfpfcnvrt@fp,w
 23170  0DDE  00B0               	movwf	xtoa@fp
 23171  0DDF  0021               	movlb	1	; select bank1
 23172  0DE0  0833               	movf	vfpfcnvrt@llu^(0+128),w
 23173  0DE1  0020               	movlb	0	; select bank0
 23174  0DE2  00B2               	movwf	xtoa@d
 23175  0DE3  0021               	movlb	1	; select bank1
 23176  0DE4  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 23177  0DE5  0020               	movlb	0	; select bank0
 23178  0DE6  00B3               	movwf	xtoa@d+1
 23179  0DE7  0021               	movlb	1	; select bank1
 23180  0DE8  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 23181  0DE9  0020               	movlb	0	; select bank0
 23182  0DEA  00B4               	movwf	xtoa@d+2
 23183  0DEB  0021               	movlb	1	; select bank1
 23184  0DEC  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 23185  0DED  0020               	movlb	0	; select bank0
 23186  0DEE  00B5               	movwf	xtoa@d+3
 23187  0DEF  0021               	movlb	1	; select bank1
 23188  0DF0  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 23189  0DF1  0020               	movlb	0	; select bank0
 23190  0DF2  00B6               	movwf	xtoa@d+4
 23191  0DF3  0021               	movlb	1	; select bank1
 23192  0DF4  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 23193  0DF5  0020               	movlb	0	; select bank0
 23194  0DF6  00B7               	movwf	xtoa@d+5
 23195  0DF7  0021               	movlb	1	; select bank1
 23196  0DF8  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 23197  0DF9  0020               	movlb	0	; select bank0
 23198  0DFA  00B8               	movwf	xtoa@d+6
 23199  0DFB  0021               	movlb	1	; select bank1
 23200  0DFC  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 23201  0DFD  0020               	movlb	0	; select bank0
 23202  0DFE  00B9               	movwf	xtoa@d+7
 23203  0DFF  0021               	movlb	1	; select bank1
 23204  0E00  0832               	movf	vfpfcnvrt@c^(0+128),w
 23205  0E01  0020               	movlb	0	; select bank0
 23206  0E02  00DB               	movwf	??_vfpfcnvrt
 23207  0E03  085B               	movf	??_vfpfcnvrt,w
 23208  0E04  00BA               	movwf	xtoa@x
 23209  0E05  319B  2389         	fcall	_xtoa
 23210  0E07  0020               	movlb	0	; select bank0
 23211  0E08  0831               	movf	?_xtoa+1,w
 23212  0E09  00D8               	movwf	?_vfpfcnvrt+1
 23213  0E0A  0830               	movf	?_xtoa,w
 23214  0E0B  00D7               	movwf	?_vfpfcnvrt
 23215  0E0C  0008               	return
 23216  0E0D                     l7161:	
 23217                           
 23218                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
 23219  0E0D  0020               	movlb	0	; select bank0
 23220  0E0E  0859               	movf	vfpfcnvrt@fmt,w
 23221  0E0F  0086               	movwf	6
 23222  0E10  0187               	clrf	7
 23223  0E11  3F40               	moviw [0]fsr1
 23224  0E12  00F1               	movwf	strncmp@_l
 23225  0E13  3F41               	moviw [1]fsr1
 23226  0E14  00F2               	movwf	strncmp@_l+1
 23227  0E15  30A9               	movlw	low ((STR_96+1)| (0+32768))
 23228  0E16  00F3               	movwf	strncmp@_r
 23229  0E17  30BA               	movlw	high ((STR_96+1)| (0+32768))
 23230  0E18  00F4               	movwf	strncmp@_r+1
 23231  0E19  3002               	movlw	2
 23232  0E1A  00F5               	movwf	strncmp@n
 23233  0E1B  3000               	movlw	0
 23234  0E1C  00F6               	movwf	strncmp@n+1
 23235  0E1D  31B5  25BD  3188   	fcall	_strncmp
 23236  0E20  0871               	movf	?_strncmp,w
 23237  0E21  0472               	iorwf	?_strncmp+1,w
 23238  0E22  1903               	btfsc	3,2
 23239  0E23  2E3B               	goto	l7165
 23240  0E24  0020               	movlb	0	; select bank0
 23241  0E25  0859               	movf	vfpfcnvrt@fmt,w
 23242  0E26  0086               	movwf	6
 23243  0E27  0187               	clrf	7
 23244  0E28  3F40               	moviw [0]fsr1
 23245  0E29  00F1               	movwf	strncmp@_l
 23246  0E2A  3F41               	moviw [1]fsr1
 23247  0E2B  00F2               	movwf	strncmp@_l+1
 23248  0E2C  3091               	movlw	low ((STR_100+1)| (0+32768))
 23249  0E2D  00F3               	movwf	strncmp@_r
 23250  0E2E  30BA               	movlw	high ((STR_100+1)| (0+32768))
 23251  0E2F  00F4               	movwf	strncmp@_r+1
 23252  0E30  3002               	movlw	2
 23253  0E31  00F5               	movwf	strncmp@n
 23254  0E32  3000               	movlw	0
 23255  0E33  00F6               	movwf	strncmp@n+1
 23256  0E34  31B5  25BD  3188   	fcall	_strncmp
 23257  0E37  0871               	movf	?_strncmp,w
 23258  0E38  0472               	iorwf	?_strncmp+1,w
 23259  0E39  1D03               	btfss	3,2
 23260  0E3A  2E9E               	goto	l7175
 23261  0E3B                     l7165:	
 23262                           
 23263                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
 23264  0E3B  0020               	movlb	0	; select bank0
 23265  0E3C  0859               	movf	vfpfcnvrt@fmt,w
 23266  0E3D  0086               	movwf	6
 23267  0E3E  0187               	clrf	7
 23268  0E3F  3F40               	moviw [0]fsr1
 23269  0E40  00DB               	movwf	??_vfpfcnvrt
 23270  0E41  3F41               	moviw [1]fsr1
 23271  0E42  00DC               	movwf	??_vfpfcnvrt+1
 23272  0E43  3001               	movlw	1
 23273  0E44  075B               	addwf	??_vfpfcnvrt,w
 23274  0E45  0084               	movwf	4
 23275  0E46  085C               	movf	??_vfpfcnvrt+1,w
 23276  0E47  1803               	skipnc
 23277  0E48  0A5C               	incf	??_vfpfcnvrt+1,w
 23278  0E49  0085               	movwf	5
 23279  0E4A  0800               	movf	0,w	;code access
 23280  0E4B  00DD               	movwf	??_vfpfcnvrt+2
 23281  0E4C  085D               	movf	??_vfpfcnvrt+2,w
 23282  0E4D  0021               	movlb	1	; select bank1
 23283  0E4E  00B2               	movwf	vfpfcnvrt@c^(0+128)
 23284                           
 23285                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
 23286  0E4F  0020               	movlb	0	; select bank0
 23287  0E50  0859               	movf	vfpfcnvrt@fmt,w
 23288  0E51  0086               	movwf	6
 23289  0E52  0187               	clrf	7
 23290  0E53  3002               	movlw	2
 23291  0E54  0781               	addwf	1,f
 23292  0E55  3141               	addfsr 1,1
 23293  0E56  1803               	skipnc
 23294  0E57  0A81               	incf	1,f
 23295                           
 23296                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 23297  0E58  085A               	movf	vfpfcnvrt@ap,w
 23298  0E59  0086               	movwf	6
 23299  0E5A  0187               	clrf	7
 23300  0E5B  0801               	movf	1,w
 23301  0E5C  0084               	movwf	4
 23302  0E5D  0185               	clrf	5
 23303  0E5E  3002               	movlw	2
 23304  0E5F  0781               	addwf	1,f
 23305  0E60  3F00               	moviw [0]fsr0
 23306  0E61  0021               	movlb	1	; select bank1
 23307  0E62  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 23308  0E63  3F01               	moviw [1]fsr0
 23309  0E64  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 23310  0E65  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 23311  0E66  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 23312  0E67  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 23313  0E68  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 23314  0E69  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 23315  0E6A  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 23316                           
 23317                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1269:      
      +                                 return xtoa(fp, llu, c);
 23318  0E6B  0020               	movlb	0	; select bank0
 23319  0E6C  0858               	movf	vfpfcnvrt@fp+1,w
 23320  0E6D  00B1               	movwf	xtoa@fp+1
 23321  0E6E  0857               	movf	vfpfcnvrt@fp,w
 23322  0E6F  00B0               	movwf	xtoa@fp
 23323  0E70  0021               	movlb	1	; select bank1
 23324  0E71  0833               	movf	vfpfcnvrt@llu^(0+128),w
 23325  0E72  0020               	movlb	0	; select bank0
 23326  0E73  00B2               	movwf	xtoa@d
 23327  0E74  0021               	movlb	1	; select bank1
 23328  0E75  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 23329  0E76  0020               	movlb	0	; select bank0
 23330  0E77  00B3               	movwf	xtoa@d+1
 23331  0E78  0021               	movlb	1	; select bank1
 23332  0E79  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 23333  0E7A  0020               	movlb	0	; select bank0
 23334  0E7B  00B4               	movwf	xtoa@d+2
 23335  0E7C  0021               	movlb	1	; select bank1
 23336  0E7D  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 23337  0E7E  0020               	movlb	0	; select bank0
 23338  0E7F  00B5               	movwf	xtoa@d+3
 23339  0E80  0021               	movlb	1	; select bank1
 23340  0E81  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 23341  0E82  0020               	movlb	0	; select bank0
 23342  0E83  00B6               	movwf	xtoa@d+4
 23343  0E84  0021               	movlb	1	; select bank1
 23344  0E85  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 23345  0E86  0020               	movlb	0	; select bank0
 23346  0E87  00B7               	movwf	xtoa@d+5
 23347  0E88  0021               	movlb	1	; select bank1
 23348  0E89  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 23349  0E8A  0020               	movlb	0	; select bank0
 23350  0E8B  00B8               	movwf	xtoa@d+6
 23351  0E8C  0021               	movlb	1	; select bank1
 23352  0E8D  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 23353  0E8E  0020               	movlb	0	; select bank0
 23354  0E8F  00B9               	movwf	xtoa@d+7
 23355  0E90  0021               	movlb	1	; select bank1
 23356  0E91  0832               	movf	vfpfcnvrt@c^(0+128),w
 23357  0E92  0020               	movlb	0	; select bank0
 23358  0E93  00DB               	movwf	??_vfpfcnvrt
 23359  0E94  085B               	movf	??_vfpfcnvrt,w
 23360  0E95  00BA               	movwf	xtoa@x
 23361  0E96  319B  2389         	fcall	_xtoa
 23362  0E98  0020               	movlb	0	; select bank0
 23363  0E99  0831               	movf	?_xtoa+1,w
 23364  0E9A  00D8               	movwf	?_vfpfcnvrt+1
 23365  0E9B  0830               	movf	?_xtoa,w
 23366  0E9C  00D7               	movwf	?_vfpfcnvrt
 23367  0E9D  0008               	return
 23368  0E9E                     l7175:	
 23369                           
 23370                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 23371  0E9E  0020               	movlb	0	; select bank0
 23372  0E9F  0859               	movf	vfpfcnvrt@fmt,w
 23373  0EA0  0086               	movwf	6
 23374  0EA1  0187               	clrf	7
 23375  0EA2  3F40               	moviw [0]fsr1
 23376  0EA3  00DB               	movwf	??_vfpfcnvrt
 23377  0EA4  3F41               	moviw [1]fsr1
 23378  0EA5  00DC               	movwf	??_vfpfcnvrt+1
 23379  0EA6  085B               	movf	??_vfpfcnvrt,w
 23380  0EA7  0084               	movwf	4
 23381  0EA8  085C               	movf	??_vfpfcnvrt+1,w
 23382  0EA9  0085               	movwf	5
 23383  0EAA  0012               	moviw fsr0++
 23384  0EAB  3A78               	xorlw	120
 23385  0EAC  1903               	btfsc	3,2
 23386  0EAD  2EBD               	goto	l7179
 23387  0EAE  0859               	movf	vfpfcnvrt@fmt,w
 23388  0EAF  0086               	movwf	6
 23389  0EB0  0187               	clrf	7
 23390  0EB1  3F40               	moviw [0]fsr1
 23391  0EB2  00DB               	movwf	??_vfpfcnvrt
 23392  0EB3  3F41               	moviw [1]fsr1
 23393  0EB4  00DC               	movwf	??_vfpfcnvrt+1
 23394  0EB5  085B               	movf	??_vfpfcnvrt,w
 23395  0EB6  0084               	movwf	4
 23396  0EB7  085C               	movf	??_vfpfcnvrt+1,w
 23397  0EB8  0085               	movwf	5
 23398  0EB9  0012               	moviw fsr0++
 23399  0EBA  3A58               	xorlw	88
 23400  0EBB  1D03               	btfss	3,2
 23401  0EBC  2F1C               	goto	l7189
 23402  0EBD                     l7179:	
 23403                           
 23404                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 23405  0EBD  0859               	movf	vfpfcnvrt@fmt,w
 23406  0EBE  0086               	movwf	6
 23407  0EBF  0187               	clrf	7
 23408  0EC0  3F40               	moviw [0]fsr1
 23409  0EC1  00DB               	movwf	??_vfpfcnvrt
 23410  0EC2  3F41               	moviw [1]fsr1
 23411  0EC3  00DC               	movwf	??_vfpfcnvrt+1
 23412  0EC4  085B               	movf	??_vfpfcnvrt,w
 23413  0EC5  0084               	movwf	4
 23414  0EC6  085C               	movf	??_vfpfcnvrt+1,w
 23415  0EC7  0085               	movwf	5
 23416  0EC8  0800               	movf	0,w	;code access
 23417  0EC9  00DD               	movwf	??_vfpfcnvrt+2
 23418  0ECA  085D               	movf	??_vfpfcnvrt+2,w
 23419  0ECB  0021               	movlb	1	; select bank1
 23420  0ECC  00B2               	movwf	vfpfcnvrt@c^(0+128)
 23421                           
 23422                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 23423  0ECD  0020               	movlb	0	; select bank0
 23424  0ECE  0859               	movf	vfpfcnvrt@fmt,w
 23425  0ECF  0086               	movwf	6
 23426  0ED0  0187               	clrf	7
 23427  0ED1  3001               	movlw	1
 23428  0ED2  0781               	addwf	1,f
 23429  0ED3  3141               	addfsr 1,1
 23430  0ED4  1803               	skipnc
 23431  0ED5  0A81               	incf	1,f
 23432                           
 23433                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 23434  0ED6  085A               	movf	vfpfcnvrt@ap,w
 23435  0ED7  0086               	movwf	6
 23436  0ED8  0187               	clrf	7
 23437  0ED9  0801               	movf	1,w
 23438  0EDA  0084               	movwf	4
 23439  0EDB  0185               	clrf	5
 23440  0EDC  3002               	movlw	2
 23441  0EDD  0781               	addwf	1,f
 23442  0EDE  3F00               	moviw [0]fsr0
 23443  0EDF  0021               	movlb	1	; select bank1
 23444  0EE0  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 23445  0EE1  3F01               	moviw [1]fsr0
 23446  0EE2  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 23447  0EE3  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 23448  0EE4  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 23449  0EE5  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 23450  0EE6  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 23451  0EE7  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 23452  0EE8  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 23453                           
 23454                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 23455  0EE9  0020               	movlb	0	; select bank0
 23456  0EEA  0858               	movf	vfpfcnvrt@fp+1,w
 23457  0EEB  00B1               	movwf	xtoa@fp+1
 23458  0EEC  0857               	movf	vfpfcnvrt@fp,w
 23459  0EED  00B0               	movwf	xtoa@fp
 23460  0EEE  0021               	movlb	1	; select bank1
 23461  0EEF  0833               	movf	vfpfcnvrt@llu^(0+128),w
 23462  0EF0  0020               	movlb	0	; select bank0
 23463  0EF1  00B2               	movwf	xtoa@d
 23464  0EF2  0021               	movlb	1	; select bank1
 23465  0EF3  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 23466  0EF4  0020               	movlb	0	; select bank0
 23467  0EF5  00B3               	movwf	xtoa@d+1
 23468  0EF6  0021               	movlb	1	; select bank1
 23469  0EF7  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 23470  0EF8  0020               	movlb	0	; select bank0
 23471  0EF9  00B4               	movwf	xtoa@d+2
 23472  0EFA  0021               	movlb	1	; select bank1
 23473  0EFB  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 23474  0EFC  0020               	movlb	0	; select bank0
 23475  0EFD  00B5               	movwf	xtoa@d+3
 23476  0EFE  0021               	movlb	1	; select bank1
 23477  0EFF  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 23478  0F00  0020               	movlb	0	; select bank0
 23479  0F01  00B6               	movwf	xtoa@d+4
 23480  0F02  0021               	movlb	1	; select bank1
 23481  0F03  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 23482  0F04  0020               	movlb	0	; select bank0
 23483  0F05  00B7               	movwf	xtoa@d+5
 23484  0F06  0021               	movlb	1	; select bank1
 23485  0F07  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 23486  0F08  0020               	movlb	0	; select bank0
 23487  0F09  00B8               	movwf	xtoa@d+6
 23488  0F0A  0021               	movlb	1	; select bank1
 23489  0F0B  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 23490  0F0C  0020               	movlb	0	; select bank0
 23491  0F0D  00B9               	movwf	xtoa@d+7
 23492  0F0E  0021               	movlb	1	; select bank1
 23493  0F0F  0832               	movf	vfpfcnvrt@c^(0+128),w
 23494  0F10  0020               	movlb	0	; select bank0
 23495  0F11  00DB               	movwf	??_vfpfcnvrt
 23496  0F12  085B               	movf	??_vfpfcnvrt,w
 23497  0F13  00BA               	movwf	xtoa@x
 23498  0F14  319B  2389         	fcall	_xtoa
 23499  0F16  0020               	movlb	0	; select bank0
 23500  0F17  0831               	movf	?_xtoa+1,w
 23501  0F18  00D8               	movwf	?_vfpfcnvrt+1
 23502  0F19  0830               	movf	?_xtoa,w
 23503  0F1A  00D7               	movwf	?_vfpfcnvrt
 23504  0F1B  0008               	return
 23505  0F1C                     l7189:	
 23506                           
 23507                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
 23508  0F1C  0859               	movf	vfpfcnvrt@fmt,w
 23509  0F1D  0086               	movwf	6
 23510  0F1E  0187               	clrf	7
 23511  0F1F  3F40               	moviw [0]fsr1
 23512  0F20  00F1               	movwf	strncmp@_l
 23513  0F21  3F41               	moviw [1]fsr1
 23514  0F22  00F2               	movwf	strncmp@_l+1
 23515  0F23  30BE               	movlw	low (STR_114| (0+32768))
 23516  0F24  00F3               	movwf	strncmp@_r
 23517  0F25  30BA               	movlw	high (STR_114| (0+32768))
 23518  0F26  00F4               	movwf	strncmp@_r+1
 23519  0F27  3002               	movlw	2
 23520  0F28  00F5               	movwf	strncmp@n
 23521  0F29  3000               	movlw	0
 23522  0F2A  00F6               	movwf	strncmp@n+1
 23523  0F2B  31B5  25BD  3188   	fcall	_strncmp
 23524  0F2E  0871               	movf	?_strncmp,w
 23525  0F2F  0472               	iorwf	?_strncmp+1,w
 23526  0F30  1903               	btfsc	3,2
 23527  0F31  2F49               	goto	l7193
 23528  0F32  0020               	movlb	0	; select bank0
 23529  0F33  0859               	movf	vfpfcnvrt@fmt,w
 23530  0F34  0086               	movwf	6
 23531  0F35  0187               	clrf	7
 23532  0F36  3F40               	moviw [0]fsr1
 23533  0F37  00F1               	movwf	strncmp@_l
 23534  0F38  3F41               	moviw [1]fsr1
 23535  0F39  00F2               	movwf	strncmp@_l+1
 23536  0F3A  30AC               	movlw	low (STR_118| (0+32768))
 23537  0F3B  00F3               	movwf	strncmp@_r
 23538  0F3C  30BA               	movlw	high (STR_118| (0+32768))
 23539  0F3D  00F4               	movwf	strncmp@_r+1
 23540  0F3E  3002               	movlw	2
 23541  0F3F  00F5               	movwf	strncmp@n
 23542  0F40  3000               	movlw	0
 23543  0F41  00F6               	movwf	strncmp@n+1
 23544  0F42  31B5  25BD  3188   	fcall	_strncmp
 23545  0F45  0871               	movf	?_strncmp,w
 23546  0F46  0472               	iorwf	?_strncmp+1,w
 23547  0F47  1D03               	btfss	3,2
 23548  0F48  2FAC               	goto	l7203
 23549  0F49                     l7193:	
 23550                           
 23551                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
 23552  0F49  0020               	movlb	0	; select bank0
 23553  0F4A  0859               	movf	vfpfcnvrt@fmt,w
 23554  0F4B  0086               	movwf	6
 23555  0F4C  0187               	clrf	7
 23556  0F4D  3F40               	moviw [0]fsr1
 23557  0F4E  00DB               	movwf	??_vfpfcnvrt
 23558  0F4F  3F41               	moviw [1]fsr1
 23559  0F50  00DC               	movwf	??_vfpfcnvrt+1
 23560  0F51  3001               	movlw	1
 23561  0F52  075B               	addwf	??_vfpfcnvrt,w
 23562  0F53  0084               	movwf	4
 23563  0F54  085C               	movf	??_vfpfcnvrt+1,w
 23564  0F55  1803               	skipnc
 23565  0F56  0A5C               	incf	??_vfpfcnvrt+1,w
 23566  0F57  0085               	movwf	5
 23567  0F58  0800               	movf	0,w	;code access
 23568  0F59  00DD               	movwf	??_vfpfcnvrt+2
 23569  0F5A  085D               	movf	??_vfpfcnvrt+2,w
 23570  0F5B  0021               	movlb	1	; select bank1
 23571  0F5C  00B2               	movwf	vfpfcnvrt@c^(0+128)
 23572                           
 23573                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
 23574  0F5D  0020               	movlb	0	; select bank0
 23575  0F5E  0859               	movf	vfpfcnvrt@fmt,w
 23576  0F5F  0086               	movwf	6
 23577  0F60  0187               	clrf	7
 23578  0F61  3002               	movlw	2
 23579  0F62  0781               	addwf	1,f
 23580  0F63  3141               	addfsr 1,1
 23581  0F64  1803               	skipnc
 23582  0F65  0A81               	incf	1,f
 23583                           
 23584                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 23585  0F66  085A               	movf	vfpfcnvrt@ap,w
 23586  0F67  0086               	movwf	6
 23587  0F68  0187               	clrf	7
 23588  0F69  0801               	movf	1,w
 23589  0F6A  0084               	movwf	4
 23590  0F6B  0185               	clrf	5
 23591  0F6C  3002               	movlw	2
 23592  0F6D  0781               	addwf	1,f
 23593  0F6E  3F00               	moviw [0]fsr0
 23594  0F6F  0021               	movlb	1	; select bank1
 23595  0F70  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 23596  0F71  3F01               	moviw [1]fsr0
 23597  0F72  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 23598  0F73  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 23599  0F74  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 23600  0F75  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 23601  0F76  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 23602  0F77  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 23603  0F78  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 23604                           
 23605                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1344:      
      +                                 return xtoa(fp, llu, c);
 23606  0F79  0020               	movlb	0	; select bank0
 23607  0F7A  0858               	movf	vfpfcnvrt@fp+1,w
 23608  0F7B  00B1               	movwf	xtoa@fp+1
 23609  0F7C  0857               	movf	vfpfcnvrt@fp,w
 23610  0F7D  00B0               	movwf	xtoa@fp
 23611  0F7E  0021               	movlb	1	; select bank1
 23612  0F7F  0833               	movf	vfpfcnvrt@llu^(0+128),w
 23613  0F80  0020               	movlb	0	; select bank0
 23614  0F81  00B2               	movwf	xtoa@d
 23615  0F82  0021               	movlb	1	; select bank1
 23616  0F83  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 23617  0F84  0020               	movlb	0	; select bank0
 23618  0F85  00B3               	movwf	xtoa@d+1
 23619  0F86  0021               	movlb	1	; select bank1
 23620  0F87  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 23621  0F88  0020               	movlb	0	; select bank0
 23622  0F89  00B4               	movwf	xtoa@d+2
 23623  0F8A  0021               	movlb	1	; select bank1
 23624  0F8B  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 23625  0F8C  0020               	movlb	0	; select bank0
 23626  0F8D  00B5               	movwf	xtoa@d+3
 23627  0F8E  0021               	movlb	1	; select bank1
 23628  0F8F  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 23629  0F90  0020               	movlb	0	; select bank0
 23630  0F91  00B6               	movwf	xtoa@d+4
 23631  0F92  0021               	movlb	1	; select bank1
 23632  0F93  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 23633  0F94  0020               	movlb	0	; select bank0
 23634  0F95  00B7               	movwf	xtoa@d+5
 23635  0F96  0021               	movlb	1	; select bank1
 23636  0F97  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 23637  0F98  0020               	movlb	0	; select bank0
 23638  0F99  00B8               	movwf	xtoa@d+6
 23639  0F9A  0021               	movlb	1	; select bank1
 23640  0F9B  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 23641  0F9C  0020               	movlb	0	; select bank0
 23642  0F9D  00B9               	movwf	xtoa@d+7
 23643  0F9E  0021               	movlb	1	; select bank1
 23644  0F9F  0832               	movf	vfpfcnvrt@c^(0+128),w
 23645  0FA0  0020               	movlb	0	; select bank0
 23646  0FA1  00DB               	movwf	??_vfpfcnvrt
 23647  0FA2  085B               	movf	??_vfpfcnvrt,w
 23648  0FA3  00BA               	movwf	xtoa@x
 23649  0FA4  319B  2389         	fcall	_xtoa
 23650  0FA6  0020               	movlb	0	; select bank0
 23651  0FA7  0831               	movf	?_xtoa+1,w
 23652  0FA8  00D8               	movwf	?_vfpfcnvrt+1
 23653  0FA9  0830               	movf	?_xtoa,w
 23654  0FAA  00D7               	movwf	?_vfpfcnvrt
 23655  0FAB  0008               	return
 23656  0FAC                     l7203:	
 23657                           
 23658                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 23659  0FAC  0020               	movlb	0	; select bank0
 23660  0FAD  0859               	movf	vfpfcnvrt@fmt,w
 23661  0FAE  0086               	movwf	6
 23662  0FAF  0187               	clrf	7
 23663  0FB0  3F40               	moviw [0]fsr1
 23664  0FB1  00DB               	movwf	??_vfpfcnvrt
 23665  0FB2  3F41               	moviw [1]fsr1
 23666  0FB3  00DC               	movwf	??_vfpfcnvrt+1
 23667  0FB4  085B               	movf	??_vfpfcnvrt,w
 23668  0FB5  0084               	movwf	4
 23669  0FB6  085C               	movf	??_vfpfcnvrt+1,w
 23670  0FB7  0085               	movwf	5
 23671  0FB8  0012               	moviw fsr0++
 23672  0FB9  3A25               	xorlw	37
 23673  0FBA  1D03               	btfss	3,2
 23674  0FBB  2FD4               	goto	l7213
 23675                           
 23676                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 23677  0FBC  0859               	movf	vfpfcnvrt@fmt,w
 23678  0FBD  0086               	movwf	6
 23679  0FBE  0187               	clrf	7
 23680  0FBF  3001               	movlw	1
 23681  0FC0  0781               	addwf	1,f
 23682  0FC1  3141               	addfsr 1,1
 23683  0FC2  1803               	skipnc
 23684  0FC3  0A81               	incf	1,f
 23685                           
 23686                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 23687  0FC4  3025               	movlw	37
 23688  0FC5  00F1               	movwf	fputc@c
 23689  0FC6  3000               	movlw	0
 23690  0FC7  00F2               	movwf	fputc@c+1
 23691  0FC8  0858               	movf	vfpfcnvrt@fp+1,w
 23692  0FC9  00F4               	movwf	fputc@fp+1
 23693  0FCA  0857               	movf	vfpfcnvrt@fp,w
 23694  0FCB  00F3               	movwf	fputc@fp
 23695  0FCC  31B6  260F         	fcall	_fputc
 23696  0FCE                     l7209:	
 23697                           
 23698                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 23699  0FCE  3001               	movlw	1
 23700  0FCF  0020               	movlb	0	; select bank0
 23701  0FD0  00D7               	movwf	?_vfpfcnvrt
 23702  0FD1  3000               	movlw	0
 23703  0FD2  00D8               	movwf	?_vfpfcnvrt+1
 23704  0FD3  0008               	return
 23705  0FD4                     l7213:	
 23706                           
 23707                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 23708  0FD4  0859               	movf	vfpfcnvrt@fmt,w
 23709  0FD5  0086               	movwf	6
 23710  0FD6  0187               	clrf	7
 23711  0FD7  3001               	movlw	1
 23712  0FD8  0781               	addwf	1,f
 23713  0FD9  3141               	addfsr 1,1
 23714  0FDA  1803               	skipnc
 23715  0FDB  0A81               	incf	1,f
 23716  0FDC  2B32               	goto	l7047
 23717  0FDD                     l7219:	
 23718                           
 23719                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 23720  0FDD  0859               	movf	vfpfcnvrt@fmt,w
 23721  0FDE  0086               	movwf	6
 23722  0FDF  0187               	clrf	7
 23723  0FE0  3F40               	moviw [0]fsr1
 23724  0FE1  00DB               	movwf	??_vfpfcnvrt
 23725  0FE2  3F41               	moviw [1]fsr1
 23726  0FE3  00DC               	movwf	??_vfpfcnvrt+1
 23727  0FE4  085B               	movf	??_vfpfcnvrt,w
 23728  0FE5  0084               	movwf	4
 23729  0FE6  085C               	movf	??_vfpfcnvrt+1,w
 23730  0FE7  0085               	movwf	5
 23731  0FE8  0800               	movf	0,w	;code access
 23732  0FE9  00DD               	movwf	??_vfpfcnvrt+2
 23733  0FEA  01DE               	clrf	??_vfpfcnvrt+3
 23734  0FEB  085D               	movf	??_vfpfcnvrt+2,w
 23735  0FEC  00F1               	movwf	fputc@c
 23736  0FED  085E               	movf	??_vfpfcnvrt+3,w
 23737  0FEE  00F2               	movwf	fputc@c+1
 23738  0FEF  0858               	movf	vfpfcnvrt@fp+1,w
 23739  0FF0  00F4               	movwf	fputc@fp+1
 23740  0FF1  0857               	movf	vfpfcnvrt@fp,w
 23741  0FF2  00F3               	movwf	fputc@fp
 23742  0FF3  31B6  260F  3188   	fcall	_fputc
 23743                           
 23744                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 23745  0FF6  0020               	movlb	0	; select bank0
 23746  0FF7  0859               	movf	vfpfcnvrt@fmt,w
 23747  0FF8  0086               	movwf	6
 23748  0FF9  0187               	clrf	7
 23749  0FFA  3001               	movlw	1
 23750  0FFB  0781               	addwf	1,f
 23751  0FFC  3141               	addfsr 1,1
 23752  0FFD  1803               	skipnc
 23753  0FFE  0A81               	incf	1,f
 23754  0FFF  2FCE               	goto	l7209
 23755  1000                     __end_of_vfpfcnvrt:	


Data Sizes:
    Strings     410
    Constant    298
    Data        11
    BSS         128
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80     70      80
    BANK3            80      0      79
    BANK4            80      0      49
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           65      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    vsnprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_22(CODE[18]), STR_21(CODE[18]), STR_20(CODE[19]), STR_19(CODE[20]), 
		 -> STR_18(CODE[20]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), 
		 -> STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[21]), STR_11(CODE[21]), 
		 -> STR_8(CODE[20]), STR_7(CODE[16]), STR_6(CODE[16]), STR_5(CODE[3]), 
		 -> STR_4(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[40]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_120(CODE[3]), STR_116(CODE[3]), STR_111(CODE[3]), STR_107(CODE[3]), 
		 -> STR_102(CODE[4]), STR_98(CODE[4]), STR_93(CODE[3]), STR_88(CODE[3]), 
		 -> STR_83(CODE[4]), STR_78(CODE[3]), STR_73(CODE[3]), STR_68(CODE[4]), 
		 -> STR_63(CODE[3]), STR_58(CODE[3]), STR_53(CODE[4]), STR_48(CODE[3]), 
		 -> STR_44(CODE[3]), STR_39(CODE[3]), STR_35(CODE[3]), STR_30(CODE[4]), 
		 -> STR_26(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_120(CODE[3]), STR_116(CODE[3]), STR_111(CODE[3]), STR_107(CODE[3]), 
		 -> STR_102(CODE[4]), STR_98(CODE[4]), STR_93(CODE[3]), STR_88(CODE[3]), 
		 -> STR_83(CODE[4]), STR_78(CODE[3]), STR_73(CODE[3]), STR_68(CODE[4]), 
		 -> STR_63(CODE[3]), STR_58(CODE[3]), STR_53(CODE[4]), STR_48(CODE[3]), 
		 -> STR_44(CODE[3]), STR_39(CODE[3]), STR_35(CODE[3]), STR_30(CODE[4]), 
		 -> STR_26(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_22(CODE[18]), STR_21(CODE[18]), STR_20(CODE[19]), STR_19(CODE[20]), 
		 -> STR_18(CODE[20]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), 
		 -> STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[21]), STR_11(CODE[21]), 
		 -> STR_8(CODE[20]), STR_7(CODE[16]), STR_6(CODE[16]), STR_5(CODE[3]), 
		 -> STR_4(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[40]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_22(CODE[18]), STR_21(CODE[18]), STR_20(CODE[19]), STR_19(CODE[20]), 
		 -> STR_18(CODE[20]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), 
		 -> STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[21]), STR_11(CODE[21]), 
		 -> STR_8(CODE[20]), STR_7(CODE[16]), STR_6(CODE[16]), STR_5(CODE[3]), 
		 -> STR_4(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[40]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK4[32]), sp__logf(UNKNOWN), 
		 -> adcGain(BANK2[2]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK4[32]), sp__logf(UNKNOWN), 
		 -> adcGain(BANK2[2]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_22(CODE[18]), STR_21(CODE[18]), STR_20(CODE[19]), STR_19(CODE[20]), 
		 -> STR_18(CODE[20]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), 
		 -> STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[21]), STR_11(CODE[21]), 
		 -> STR_8(CODE[20]), STR_7(CODE[16]), STR_6(CODE[16]), STR_5(CODE[3]), 
		 -> STR_4(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[40]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    snprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_snprintf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    S1841_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_22(CODE[18]), STR_21(CODE[18]), STR_20(CODE[19]), STR_19(CODE[20]), 
		 -> STR_18(CODE[20]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), 
		 -> STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[21]), STR_11(CODE[21]), 
		 -> STR_8(CODE[20]), STR_7(CODE[16]), STR_6(CODE[16]), STR_5(CODE[3]), 
		 -> STR_4(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[40]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_22(CODE[18]), STR_21(CODE[18]), STR_20(CODE[19]), STR_19(CODE[20]), 
		 -> STR_18(CODE[20]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), 
		 -> STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[21]), STR_11(CODE[21]), 
		 -> STR_8(CODE[20]), STR_7(CODE[16]), STR_6(CODE[16]), STR_5(CODE[3]), 
		 -> STR_4(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[40]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 40
		 -> STR_22(CODE[18]), STR_21(CODE[18]), STR_20(CODE[19]), STR_19(CODE[20]), 
		 -> STR_18(CODE[20]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), 
		 -> STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[21]), STR_11(CODE[21]), 
		 -> STR_8(CODE[20]), STR_7(CODE[16]), STR_6(CODE[16]), STR_5(CODE[3]), 
		 -> STR_4(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[40]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 4
		 -> ?_snprintf(BANK1[2]), sp__logf(UNKNOWN), adcGain(BANK2[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 4
		 -> ?_snprintf(BANK1[2]), sp__logf(UNKNOWN), adcGain(BANK2[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 4
		 -> ?_snprintf(BANK1[2]), sp__logf(UNKNOWN), adcGain(BANK2[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), sp__logf(UNKNOWN), adcGain(BANK2[2]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    EUSART_Write_Text@text	PTR unsigned char  size(2) Largest target is 127
		 -> STR_23(CODE[3]), STR_10(CODE[3]), STR_9(CODE[38]), messageBuffer(BIGRAM[127]), 


Critical Paths under _main in COMMON

    _main->_EUSART_Initialize
    _watchdog_timeout_shutdown->_RGB_color
    _vfpfcnvrt->_stoa
    _vfpfcnvrt->_strncmp
    _toupper->_islower
    _stoa->_fputc
    _dtoa->___aodiv
    _abs->___aomod
    _pad->_fputs
    _fputs->_fputc
    _atoi->___wmul
    _atoi->_isdigit
    _EUSART_Write_Text->_EUSART_Write
    _setTemperatureLimitsint->___wmul
    _setShortCircuitProtection->_I2C_writeRegister
    _setOverCurrentDischargeProtection->_I2C_writeRegister
    _setCellUndervoltageProtection->_I2C_writeRegister
    _setCellUndervoltageProtection->_readRegister
    _setCellOvervoltageProtection->_I2C_writeRegister
    _setCellOvervoltageProtection->_readRegister
    _beginAFEcommunication->_I2C_writeRegister
    _beginAFEcommunication->_readRegister
    _RGB_AWAIT_AFE_CONN->_RGB_color
    _AFE_UPDATE->_AFE_Status
    _AFE_UPDATE->_enableCharging
    _AFE_UPDATE->_enableDischarging
    _updateVoltages->___fltol
    _updateTemperatures->___fltol
    _updateCurrent->___fltol
    _enableDischarging->_I2C_writeRegister
    _enableDischarging->_readRegister
    _enableCharging->_I2C_writeRegister
    _enableCharging->_readRegister
    _I2C_writeRegister->_send_I2C_controlByte
    _coulomb_counter->___fltol
    _calibrate_BATTSOC->___fltol
    ___flmul->__Umul8_16
    _AFE_Status->_readRegister
    _readRegister->_read_I2C_data
    _readRegister->_send_I2C_controlByte
    _EUSART_Initialize->___aldiv
    ___aldiv->___lmul

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    _statemachine->_snprintf
    _printcellParameters->_snprintf
    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _utoa->___lodiv
    _utoa->___lomod
    _utoa->_pad
    _otoa->_pad
    _dtoa->___aodiv
    _dtoa->___aomod
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _init_AFE->_setOverCurrentDischargeProtection
    _init_AFE->_setShortCircuitProtection
    _setShortCircuitProtection->___flge
    _setOverCurrentDischargeProtection->___flge
    ___flge->___fldiv
    _setCellUndervoltageProtection->___aldiv
    _setCellOvervoltageProtection->___aldiv
    _AFE_UPDATE->_coulomb_counter
    _updateVoltages->___fladd
    _updateTemperatures->___fladd
    _logf->___fladd
    ___flneg->___fldiv
    ___flsub->___fladd
    ___fladd->___fldiv
    ___fltol->___fladd
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _EUSART_Initialize->___aldiv
    ___aldiv->___lmul

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_statemachine
    _printcellParameters->_snprintf
    _snprintf->_vsnprintf
    _vfprintf->_vfpfcnvrt
    _init_AFE->_setOverCurrentDischargeProtection
    _init_AFE->_setShortCircuitProtection
    _AFE_UPDATE->_updateTemperatures
    _updateVoltages->___fltol
    _updateTemperatures->_logf
    _logf->___flsub
    _updateCurrent->___fltol
    _coulomb_counter->___fltol
    _calibrate_BATTSOC->___fltol
    ___fltol->___flsub

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_statemachine
    _updateTemperatures->_logf

Critical Paths under _myIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _myIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _myIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _myIsr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _myIsr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _myIsr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _myIsr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _myIsr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _myIsr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _myIsr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _myIsr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _myIsr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _myIsr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _myIsr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  373199
                                             68 BANK2      2     2      0
                  _EUSART_Initialize
                          _initClock
                            _initWDT
                          _init_GPIO
                           _init_I2C
                           _init_RGB
                          _init_TMR1
                       _statemachine
          _watchdog_timeout_shutdown
 ---------------------------------------------------------------------------------
 (1) _watchdog_timeout_shutdown                            2     2      0     402
                                              3 COMMON     2     2      0
                          _RGB_color
 ---------------------------------------------------------------------------------
 (1) _statemachine                                         3     3      0  370419
                                             79 BANK1      1     1      0
                                             66 BANK2      2     2      0
                         _AFE_UPDATE
                  _EUSART_Write_Text
                 _RGB_AWAIT_AFE_CONN
                          _RGB_color
              _beginAFEcommunication
                           _init_AFE
                _printcellParameters
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _printcellParameters                                  0     0      0   57216
                  _EUSART_Write_Text
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _snprintf                                            22     4     18   55356
                                             76 BANK0      4     4      0
                                             44 BANK1     18     0     18
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (3) _vsnprintf                                           19    12      7   49669
                                             74 BANK0      2     2      0
                                             27 BANK1     17    10      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             9     4      5   48632
                                             65 BANK0      9     4      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           46    42      4   47857
                                             55 BANK0     10     6      4
                                              0 BANK1     27    27      0
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                39    28     11    7640
                                             16 BANK0     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              8     6      2     512
                                              7 COMMON     4     2      2
                                              0 BANK0      4     4      0
                            _islower
 ---------------------------------------------------------------------------------
 (8) _islower                                              6     4      2     191
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     161
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              8     6      2     161
                                              1 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (6) _utoa                                                25    15     10    6353
                                             16 BANK0     25    15     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lomod                                             18     2     16     311
                                              1 COMMON     2     2      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___lodiv                                             26    10     16     314
                                              1 COMMON    10    10      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6    5013
                                              1 COMMON    11     5      6
 ---------------------------------------------------------------------------------
 (6) _stoa                                                23    19      4    2068
                                             10 COMMON     2     2      0
                                              0 BANK0     21    17      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _otoa                                                34    24     10    5833
                                             16 BANK0     34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                31    21     10    7036
                                             16 BANK0     31    21     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                              4 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             19     3     16     448
                                              1 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             27    11     16     452
                                              1 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 8     5      3    4945
                                             16 BANK0      6     3      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 10     5      5    4685
                                              6 BANK0     10     5      5
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     182
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                8     6      2    1605
                                             10 COMMON     2     0      2
                                              0 BANK0      6     6      0
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1290
                                              1 COMMON     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    2025
                                              7 COMMON     2     0      2
                                              0 BANK0     13    13      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              5     3      2     207
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     313
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write_Text                                    5     3      2    1860
                                              2 COMMON     5     3      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _init_AFE                                             0     0      0   70207
       _setCellOvervoltageProtection
      _setCellUndervoltageProtection
  _setOverCurrentDischargeProtection
          _setShortCircuitProtection
              _setShuntResistorValue
            _setTemperatureLimitsint
 ---------------------------------------------------------------------------------
 (3) _setTemperatureLimitsint                              8     0      8    1244
                                              0 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     852
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _setShuntResistorValue                                4     0      4      98
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) _setShortCircuitProtection                           21    15      6   17884
                                             70 BANK0      9     3      6
                                              0 BANK1     12    12      0
                  _I2C_writeRegister
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _setOverCurrentDischargeProtection                   21    15      6   17884
                                             70 BANK0      9     3      6
                                              0 BANK1     12    12      0
                  _I2C_writeRegister
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8     486
                                             58 BANK0     12     4      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _setCellUndervoltageProtection                       21    17      4   16550
                                             18 BANK0     21    17      4
                  _I2C_writeRegister
                            ___aldiv
                             ___lmul
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _setCellOvervoltageProtection                        21    17      4   16547
                                             18 BANK0     21    17      4
                  _I2C_writeRegister
                            ___aldiv
                             ___lmul
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _beginAFEcommunication                               15    13      2   12782
                                              0 BANK0     15    13      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _RGB_AWAIT_AFE_CONN                                   1     1      0     402
                                              3 COMMON     1     1      0
                          _RGB_color
 ---------------------------------------------------------------------------------
 (2) _RGB_color                                            2     0      2     402
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _AFE_UPDATE                                           0     0      0  172160
                         _AFE_Status
                  _calibrate_BATTSOC
                    _coulomb_counter
                     _enableCharging
                  _enableDischarging
                      _updateCurrent
                 _updateTemperatures
                     _updateVoltages
 ---------------------------------------------------------------------------------
 (3) _updateVoltages                                      11    11      0   28725
                                             17 BANK1     11    11      0
                            ___aldiv
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                             ___lmul
                           ___xxtofl
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8    1396
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _updateTemperatures                                  59    59      0   52796
                                             20 BANK1     59    59      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                               _logf
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) _logf                                                78    74      4   22362
                                              8 BANK1     12     8      4
                                              0 BANK2     66    66      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _updateCurrent                                        6     6      0   25848
                                             17 BANK1      6     6      0
                  _I2C_writeRegister
                            ___fldiv
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     121
                                             58 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _enableDischarging                                    5     3      2   12832
                                             11 COMMON     1     1      0
                                              0 BANK0      4     2      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _enableCharging                                       5     3      2   12832
                                             11 COMMON     1     1      0
                                              0 BANK0      4     2      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) _I2C_writeRegister                                    6     0      6    4776
                                              5 COMMON     6     0      6
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (3) _coulomb_counter                                      4     4      0   17940
                                             78 BANK0      2     2      0
                                             17 BANK1      2     2      0
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4765
                                              0 BANK1      8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    4112
                                             58 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _calibrate_BATTSOC                                    9     9      0   13265
                                             17 BANK1      9     9      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    2130
                                              1 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             11     7      4     989
                                             10 COMMON     2     2      0
                                              8 BANK1      9     5      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    6825
                                              6 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     799
                                              1 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             26    18      8    3097
                                             32 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _AFE_Status                                           5     3      2    7922
                                             11 COMMON     1     1      0
                                              0 BANK0      4     2      2
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) _readRegister                                         6     2      4    7870
                                              5 COMMON     6     2      4
                      _read_I2C_data
                      _send_I2C_NACK
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (5) _send_I2C_stopBit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _send_I2C_startBit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _send_I2C_data                                        2     0      2     301
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _send_I2C_controlByte                                 4     0      4     602
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (5) _send_I2C_NACK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _read_I2C_data                                        4     2      2       0
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_TMR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_RGB                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_I2C                                             1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_GPIO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initWDT                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initClock                                            0     0      0       0
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Initialize                                   18    14      4    2378
                                             10 COMMON     2     2      0
                                             18 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8    2065
                                              9 COMMON     1     1      0
                                              4 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _myIsr                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Initialize
     ___aldiv
       ___lmul (ARG)
   _initClock
     _internal_16
   _initWDT
   _init_GPIO
   _init_I2C
   _init_RGB
   _init_TMR1
   _statemachine
     _AFE_UPDATE
       _AFE_Status
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _calibrate_BATTSOC
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
       _coulomb_counter
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
       _enableCharging
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _enableDischarging
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _updateCurrent
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___flneg
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _updateTemperatures
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _logf
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___xxtofl (ARG)
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _updateVoltages
         ___aldiv
           ___lmul (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___lmul
         ___xxtofl
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
     _EUSART_Write_Text
       _EUSART_Write
     _RGB_AWAIT_AFE_CONN
       _RGB_color
     _RGB_color
     _beginAFEcommunication
       _I2C_writeRegister
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _readRegister
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
     _init_AFE
       _setCellOvervoltageProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _setCellUndervoltageProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _setOverCurrentDischargeProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
       _setShortCircuitProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
       _setShuntResistorValue
       _setTemperatureLimitsint
         ___wmul
     _printcellParameters
       _EUSART_Write_Text
         _EUSART_Write
       _snprintf
         _vsnprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _fputc
                 _putch
               _isdigit
               _otoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _stoa
                 _fputc
                   _putch
                 _strlen
               _strncmp
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _toupper
                   _islower
     _snprintf
       _vsnprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
   _watchdog_timeout_shutdown
     _RGB_color

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     46      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      4F      11       98.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      31      13       61.3%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     17D      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     17D      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              41      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Mar 16 00:12:00 2020

          __end_of_setShortCircuitProtection 2800                               _maxCellVoltage 01CE  
                      __end_of_send_I2C_data 31B0                                 ___fldiv@aexp 0059  
                               ___fldiv@bexp 0058                               _updateVoltages 124F  
                               ___fldiv@sign 0051                           ?_calibrate_BATTSOC 0070  
                                __CFG_CP$OFF 0000                          ___wmul@multiplicand 0073  
                      _setShuntResistorValue 31C4                          __Umul8_16@word_mpld 0077  
                                        l302 31AC                                          l320 3189  
                                        l314 31B6                                          l308 31F9  
                                        l332 3191                                          l501 2CD6  
                    enableDischarging@enable 0020                                          l344 31A3  
                                        l370 335A                                          l267 0801  
                                        l188 37FF                                          l366 333B  
                                        l368 3340                                          l369 3345  
                                        l810 1A82                                          l814 1A9D  
                                        l815 1AB1                                          l840 23AC  
                                        l809 1A7B                                          l690 205B  
                                        l818 1B47                                          l914 1CAE  
                                        l930 1EC9                                          l835 22FC  
                                        l923 1E81                                          l925 1E8D  
                                        l846 23B7                                          l926 1E90  
                                        l839 2317                                          l927 1E93  
                                        l928 1E96                                          l857 2DE2  
                                        l794 2816                                          l866 2E3D  
                                        l874 180B                                          l797 2836  
                                        l893 1BAB                                          l878 1826  
                                        l889 1B90                                          _Lg1 3A84  
                                        _Lg2 3A80                                          _Lg3 3A7C  
                                        _Lg4 3A78                          __size_of_AFE_UPDATE 0037  
                        ??_calibrate_BATTSOC 00B1                                          _abs 3233  
                             RGB_color@color 0071                                          _pad 2800  
                               __CFG_BORV$LO 0000                                          wreg 0009  
                               __CFG_IESO$ON 0000                                 ___flmul@aexp 0038  
                               ___flmul@bexp 0039       setCellOvervoltageProtection@voltage_mV 0032  
    setCellUndervoltageProtection@voltage_mV 0032                                 ___flmul@sign 0033  
                               ___flmul@temp 003E                                 ___flmul@prod 003A  
                               _statemachine 3788                                 __CFG_LVP$OFF 0000  
                        __size_of_AFE_Status 005F                                 ___fltol@exp1 007B  
                                       l1002 329A                                         l1102 24C7  
                                       l1203 3703                                         l1115 22E3  
                                       ?_abs 0074                                         l1303 064B  
                                       l1067 29D7                                         l1411 1242  
                                       l1307 06DE                                         l1235 2938  
                                       l1324 0761                                         l1180 286C  
                                       l1309 06C1                                         l1245 3777  
                                       l1183 28BA                                         l1345 07D8  
                                       l1337 07C0                                         l1450 2AB0  
                                       l1451 2ABA                                         l1443 2A9C  
                                       l1380 1E32                                         l1604 07F0  
                                       l1381 1E4A                                         l1437 2A66  
                                       l1383 1E57                                         l1359 1D2B  
                                       l1477 2B47                                         l4301 22B6  
                                       l5103 0655                                         l4143 3617  
                                       l4303 22C2                                         l4145 361B  
                                       l4161 3381                                         l5203 0780  
                                       l5211 0789                                         l4227 3294  
                                       l4251 243B                                         l6101 2F1A  
                                       l5221 0794                                         l5141 06C9  
                                       l5133 0691                                         l4149 3642  
                                       l4261 2452                                         l4245 2410  
                                       l4501 2E11                                         l4317 28E4  
                                       l5143 06CB                                         l5151 06D9  
                                       l4167 3220                                         l4271 249A  
                                       l4263 2461                                         l4327 292C  
                                       l4319 28F3                                         l4343 376B  
                                       l5401 1DD8                                         l5321 1D07  
                                       l5217 0792                                         l5209 0787  
                                       l5073 061B                                         l4353 32F7  
                                       l4169 322C                                         l4273 24A6  
                                       l4249 2437                                         l4513 2E41  
                                       l4337 372C                                         l5411 1DF1  
                                       l5315 1CFC                                         l5243 07D4  
                                       l5075 0623                                         l4283 2243  
                                       l4339 373B                                         l5421 1E1A  
                                       l5253 07EA                                         l5093 0640  
                                       l5069 0618                                         l6109 2064  
                                       l6221 1013                                         l4517 2E52  
                                       l4509 2E14                                         ?_pad 0026  
                                       l5407 1DEF                                         l5335 1D20  
                                       l5319 1CFF                                         l5239 07D0  
                                       l5167 06FE                                         l5159 06EC  
                                       l4295 2277                                         l4287 226A  
                                       l4519 2E5F                                         l5169 0700  
                                       l5177 070F                                         l5097 0643  
                                       l4297 2286                                         l4481 2DBB  
                                       l7009 0988                                         l5435 1E53  
                                       l5355 1D56                                         l5339 1D23  
                                       l5195 0773                                         l5187 0759  
                                       l7203 0FAC                                         l7107 0C08  
                                       l7051 0B36                                         l7019 09E8  
                                       l5381 1DB6                                         l5349 1D4A  
                                       l5621 2AD5                                         l6093 2E6B  
                                       l7213 0FD4                                         l7117 0C66  
                                       l7053 0AD4                                         l7029 0A40  
                                       l5375 1D9D                                         l5383 1D7F  
                                       l5455 103D                                         l5607 2AAE  
                                       l6087 2E68                                         l4495 2DF3  
                                       l7151 0DAB                                         l7127 0CC6  
                                       l7047 0B32                                         l7039 0A9F  
                                       l5385 1DBB                                         l5545 11D8  
                                       l5537 11AA                                         l5473 1060  
                                       l5457 103F                                         l5609 2AA1  
                                       l4681 35D2                                         l7209 0FCE  
                                       l7161 0E0D                                         l7137 0D1E  
                                       l7065 0AF4                                         l7323 29F8  
                                       l7315 29E8                                         l5563 1218  
                                       l5539 11C1                                         l5475 1062  
                                       l5459 1047                                         l6099 2F0A  
                                       l5803 2886                                         l7411 27B5  
                                       l6611 33B9                                         l4499 2E04  
                                       l7147 0D7D                                         l7219 0FDD  
                                       l7341 2A3F                                         l7333 2A26  
                                       l7325 2A06                                         l5549 11DA  
                                       l5485 1078                                         l5477 106A  
                                       l6701 2339                                         l7165 0E3B  
                                       l7077 0B13                                         l5399 1DC1  
                                       l5559 1203                                         l5831 36CC  
                                       l5671 0124                                         l5663 00A5  
                                       l5807 28A0                                         l7431 25E2  
                                       l7415 27DF                                         l6631 1A95  
                                       l4687 35FE                                         l4679 35F7  
                                       l7175 0E9E                                         l7351 295C  
                                       l7337 2A31                                         l5569 122F  
                                       l5593 2A75                                         l5665 00C1  
                                       l7505 2FB8                                         l6609 33B0  
                                       l6641 1ADE                                         l6801 1C7D  
                                       l7193 0F49                                         l7097 0BCF  
                                       l7257 33DC                                         l5827 36C3  
                                       l5587 2A5E                                         l5915 327A  
                                       l6651 1AB9                                         l7179 0EBD  
                                       l7259 33FC                                         l7371 29BA  
                                       l7621 204F                                         l7613 2037  
                                       l7605 201F                                         l5597 2A79  
                                       l5677 0181                                         l5685 01CA  
                                       l7293 340E                                         l7509 2FE0  
                                       l7453 26C8                                         l7437 268E  
                                       l6581 2814                                         l6637 1AAC  
                                       l6717 23D0                                         l6733 1869  
                                       l7189 0F1C                                         l7373 29C1  
                                       l7357 2970                                         l5847 36F1  
                                       l5599 2A89                                         l6591 2842  
                                       l6663 1B5B                                         l6743 18CA  
                                       l6727 181E                                         l6911 1F0E  
                                       l7359 2978                                         l7617 2043  
                                       l7609 202B                                         l5857 3710  
                                       l5849 36FF                                         l7641 34F8  
                                       l7633 352F                                         l7553 2D7B  
                                       l5697 01E4                                         l7297 3419  
                                       l7449 26A0                                         l7393 26F7  
                                       l6841 2B14                                         l6833 2AFF  
                                       l6825 2AE3                                         l6577 280C  
                                       l6673 1B73                                         l6745 1845  
                                       l6753 18CF                                         l6817 1CCC  
                                       l6913 1F17                                         l7369 29B6  
                                       l7723 2C15                                         l7555 2D8A  
                                       l7483 21F9                                         l6843 2B28  
                                       l6587 2818                                         l6659 1B53  
                                       l6691 235E                                         l6683 230F  
                                       l6763 1BA3                                         l6931 1F82  
                                       l7557 2D92                                         l6669 1B66  
                                       l6773 1BD3                                         l6933 1F92  
                                       l6941 1FC5                                         l6909 1EFE  
                                       l7479 21D1                                         l7399 27A3  
                                       l6847 2B4B                                         l6839 2B0F  
                                       l6951 24D9                                         l6935 1F9B  
                                       l6919 1F41                                         l7743 3789  
                                       l5897 334A                                         l7649 2C2D  
                                       l6857 2B7A                                         l6793 1C3B  
                                       l6777 1BED                                         l6769 1BBB  
                                       l7761 37AC                                         l7683 3555  
                                       l6963 2551                                         l6955 2506  
                                       l7685 3559                                         l6877 1E83  
                                       l6893 1E9E                                         l7765 37BC  
                                       l7687 355C                                         l6991 08E0  
                                       l6975 0843                                         l6967 257F  
                                       l6887 1E99                                         l7775 37E7  
                                       l6897 1ED0                                         l7961 1EB7  
                                       l7769 37D0                                         l7963 2B20  
                                       l6987 08B3                                         l6979 0862  
                                       l7965 334F                                         l6999 0929  
                                       l7959 37F1                                         l7799 3458  
                                       STR_1 38BA                                 __CFG_WDTE$ON 0000  
                                       STR_2 3A5C                                         STR_3 3A5C  
                                       STR_4 3A5C                                         STR_5 3AC1  
                                       STR_6 3A50                                         STR_7 3A50  
                                       STR_8 39E5                                         STR_9 38E2  
                                       _BRGH 0CF2                                         _CREN 0CEC  
                                       u4200 3214                                         u4210 3215  
                                       u4130 3259                                         u4035 3640  
                                       u4300 2442                                         u4140 325A  
                                       u4125 323C                                         u4150 3314  
                                       u4160 3315                                         u4235 329B  
                                       u4245 32A0                                         u6015 0774  
                                       u4335 2487                                         u4505 2919  
                                       u6115 07AB                                         u4435 22A4  
                                       u4470 28D4                                         u7015 00D2  
                                       u8000 336B                   enableDischarging@sys_ctrl2 007B  
                                       u4545 3759                                         u8010 336C  
                                       u7035 0135                                         u6405 1D97  
                                       u6415 1DAB                                         u8040 1A51  
                                       u4905 2E0F                                         u8050 1A52  
                                       u4850 2DAA                                         _SCS0 04C8  
                                       u6195 07F1                                         u7075 01FC  
                                       u4915 2E1E                                         _SCS1 04C9  
                                       u6445 1DC4                                         u7325 36F2  
                                       u8125 1B51                                         u6535 1E08  
                                       u6375 1D87                                         u8215 2307  
                                       u4935 2E5D                                         u6545 1E23  
                                       u6465 1DCD                                         u6385 1D8E  
                                       u6705 11AD                                         u8145 1ACD  
                                       u8225 2390                                         u5850 06B0  
                                       u8410 1C04                                         u6555 1E3C  
                                       u7355 3707                                         u8155 1AD9  
                                       u8235 23B5                                         u8315 1816  
                                       u5860 06B1                                         u8420 1C05  
                                       u9205 29FB                                         u6805 120C  
                                       u6725 11B6                                         u7605 2F28  
                                       u5845 06A5                                         u4885 2DDB  
                                       u8405 1BE7                                         u6815 1222  
                                       u6655 10EE                                         u7295 36D5  
                                       u7615 213A                                         u8095 1A8D  
                                       u8255 234D                                         u8440 1C24  
                                       u9225 2A07                                         u6665 111D  
                                       u6905 2AA8                                         u9145 341A  
                                       u8265 2359                                         u8345 1858  
                                       u8505 1C9D                                         u7730 1009  
                                       u8450 1C25                                         u9235 2A1B  
                                       u6675 1173                                         u9155 3421  
                                       u8355 1864                                         u8515 1CA9  
                                       u9315 29AD                                         u7740 100A  
                                       u9245 2A27                                         u6685 118A  
                                       u5973 0721                                         u5965 0704  
                                       u9405 21AB                                         u7750 1018  
                                       u8710 1FB7                                         u6695 1199  
                                       u5895 06CF                                         u9415 21E9  
                                       u7760 1019                                         u8720 1FB8  
                                       u6945 2AC2                                         u6865 2A82  
                                       u7585 2E8D                                         u9345 27CE  
                                       u8385 1B9B                                         u8570 2B5F  
                                       u6795 11F1                                         u7595 2F18  
                                       u9435 2F99                                         u8475 1C61  
                                       u8580 2B60                                         u7940 3270  
                                       u8660 1F33                                         u6885 2A96  
                                       u9445 2FD0                                         u8485 1C87  
                                       u7950 3271                                         u8670 1F34  
                                       u9615 2B89                                         u9625 2BA0  
                                       u9385 26B9                                         u6995 00B5  
                                       u9707 32D6                                         u9645 2BD6  
                                       u9565 2C43                                         u9717 37C9  
                                       u9655 2BED                                         u9727 31F0  
                                       u9585 2CA9                                         u7985 2822  
                                       u9697 3461                                         _TMR1 0016  
                                       _SPEN 0CEF                                         _TXEN 0CF5  
                                       _SYNC 0CF4                  ??_watchdog_timeout_shutdown 0073  
                               __CFG_WRT$OFF 0000                                         abs@a 0074  
                                       _dbuf 022A                               ?_updateCurrent 0070  
                                       _atoi 2ADE                                         _ctoa 33A3  
                                       _main 3437                                         _dtoa 1A36  
                                       _logf 0074                                         _prec 0168  
                                       _otoa 22F5                                         _nout 01CA  
                                       pad@i 002C                                         pad@p 0029  
                                       fsr0h 0005                                         fsr1h 0007  
                                       indf0 0000                                         fsr0l 0004  
                                       indf1 0001                                         fsr1l 0006  
                                       pad@w 002E                                         _stoa 2DA0  
                                       btemp 007E                                         _utoa 1804  
                                       _xtoa 1B89                                         start 001E  
                  __end_of_calibrate_BATTSOC 2F2B                              ___fldiv@new_exp 0052  
                     __end_of_updateVoltages 1527                     __end_of_send_I2C_stopBit 3195  
                          _enableDischarging 350B                                        ??_abs 0076  
                                      ??_pad 002B                         _send_I2C_controlByte 31B0  
                              ?_EUSART_Write 0070                           ?_enableDischarging 0020  
                              ___fltol@sign1 007A                              __end_of___aldiv 2A48  
                            __end_of___aodiv 24D9                                        ?_atoi 0077  
                                      ?_ctoa 0030                              __end_of___fladd 07E0  
                                      ?_main 0070                                        ?_dtoa 0030  
                            __end_of___aomod 22F5                I2C_writeRegister@slaveAddress 0075  
                                      ?_logf 00A8                              __end_of___fldiv 1E5C  
                            __end_of___flneg 31C4                                        STR_11 39A8  
                                      STR_20 39F9                                        STR_12 3954  
                                      STR_21 3A0C                                        STR_13 3928  
                                      STR_30 3A98                                        STR_22 3A1E  
                                      STR_14 393E                                        STR_15 3969  
                                      STR_24 3A94                                        STR_16 397E  
                                      STR_17 3993                                        STR_26 3A94  
                                      STR_42 3AAF                                        STR_18 39BD  
                                      STR_35 3A95                                        STR_51 3AA0  
                                      STR_19 39D1                                        STR_44 3AAF  
                                      STR_28 3A98                                        STR_53 3AA0  
                                      STR_61 3AB8                                        STR_46 3AB2  
                                      STR_39 3A99                                        STR_63 3AB8  
                                      STR_48 3AB2                                        STR_73 3A9D  
                                      STR_81 3AA4                                        STR_58 3AA1  
                                      STR_66 3A9C                                        STR_83 3AA4  
                                      STR_91 3ABB                                        STR_68 3A9C  
                                      STR_76 3AB5                                        STR_93 3ABB  
                                      STR_78 3AB5                                        STR_88 3AA5  
                                      STR_96 3AA8                              __end_of___flmul 124F  
                                      STR_98 3AA8                                        ?_otoa 0030  
                            __end_of___flsub 349E                              __end_of___fltol 371F  
                                      ?_stoa 0020                                        ?_utoa 0030  
                            __end_of___lodiv 2949                                        ?_xtoa 0030  
                            __end_of___lomod 3788                                        _IRCF0 04CB  
                                      _IRCF1 04CC                                        _IRCF2 04CD  
                                      _IRCF3 04CE                       __size_of_read_I2C_data 0010  
                                      i1l169 001C                                 vfpfcnvrt@fmt 0059  
                               vfpfcnvrt@llu 00B3                                        _SPBRG 019B  
                         __size_of_RGB_color 0021                          ___lmul@multiplicand 0075  
                        ??_enableDischarging 0022                               __CFG_FCMEN$OFF 0000  
                            __end_of_initWDT 317E                                        _flags 016A  
                                      _errno 01C8                                        _fputc 360F  
                            __end_of_isalpha 331C                                        _fputs 337D  
                                      _myIsr 0004                              __end_of_isdigit 321C  
                                      atoi@n 002B                                        pad@fp 0026  
                                      atoi@s 0077                                        _width 0166  
                                      ctoa@c 0032                                        _putch 07FF  
                                      ctoa@w 0034                                        dtoa@d 0032  
                                      dtoa@i 004D                                        dtoa@n 0045  
                                      dtoa@p 003F                                        dtoa@s 0043  
                                      dtoa@w 0041                              __end_of_islower 3278  
                            __end_of_isspace 32FF                                        logf@R 0120  
                                      logf@f 015A                                        logf@k 013C  
                                      logf@s 0146                                        logf@u 0156  
                                      logf@w 014E                                        logf@x 00A8  
                                      logf@z 014A           __end_of_lookupTableSamsung_voltage 38B8  
                 _lookupTableSamsung_voltage 385C                               __CFG_BOREN$OFF 0000  
                            __end_of_isupper 3261                                        otoa@d 0032  
                                      otoa@i 0050                                        otoa@n 0048  
                                      otoa@p 0042                                        otoa@t 0044  
                                      otoa@w 0046                      enableCharging@sys_ctrl2 007B  
                                      stoa@i 002B                                        stoa@l 0033  
                                      stoa@p 0031                                        stoa@s 0022  
                                      stoa@w 002D                                        utoa@d 0032  
                                      utoa@i 0047                                        utoa@n 003F  
                                      utoa@p 003B                                        utoa@w 003D  
                                      status 0003                                        wtemp0 007E  
                                      xtoa@c 0055                                        xtoa@d 0032  
                                      xtoa@i 0053                                        xtoa@n 004B  
                                      xtoa@p 0047                                        xtoa@w 0049  
                                      xtoa@x 003A                            _SCD_delay_setting 3A70  
                            __end_of_strncmp 360F                              __end_of_toupper 337D  
                           ___lodiv@dividend 0028                                 ?_internal_16 0070  
                   __size_of_coulomb_counter 00DC                                 _toupper$1908 0079  
                             __CFG_MCLRE$OFF 0000                    __end_of_enableDischarging 3542  
                            __initialization 0020                              ?_updateVoltages 0070  
                   updateTemperatures@adcVal 00E7        setTemperatureLimitsint@maxCharge_degC 0026  
                               __end_of_atoi 2B7F                                 __end_of_ctoa 33D4  
                               __end_of_main 3469                                 __end_of_dtoa 1B89  
                               __end_of_logf 05FE                                 __end_of_otoa 23E6  
                               __end_of_stoa 2E65                                 __end_of_utoa 18E5  
                               __end_of_xtoa 1CE2                     __end_of_UV_delay_setting 3A70  
                     ?_setShuntResistorValue 0071                       beginAFEcommunication@i 002D  
                      ?_send_I2C_controlByte 0071                               ??_EUSART_Write 0071  
                  _watchdog_timeout_shutdown 32C8                               __CFG_LPBOR$OFF 0000  
                          _ATmega328_address 38B8                                       ??_atoi 0020  
                                     ??_ctoa 0033                                       ??_main 0164  
                                     ??_dtoa 003A                                       ??_logf 00AC  
                                     ??_otoa 003A                                       ??_stoa 007A  
                                     ??_utoa 003A                                       ??_xtoa 003B  
                __end_of_printcellParameters 1A36                               __CFG_PLLEN$OFF 0000  
                           ___lodiv@quotient 0072                                ?_readRegister 0075  
                                     ?_fputc 0071                                       STR_100 3A90  
                                     STR_102 3A90                                       ?_fputs 007A  
                                     STR_111 3A91                                       STR_120 3AAC  
                                     STR_114 3ABE                                       STR_107 3AA9  
                                     ?_myIsr 0070                                       STR_116 3ABE  
                                     STR_118 3AAC                               __CFG_ZCDDIS$ON 0000  
                                     ?_putch 0070                __end_of_OCD_threshold_setting 3928  
                            ??_updateCurrent 00B1                                       _RC1REG 0199  
                  __end_of_SCD_delay_setting 3A78                                vfpfcnvrt@done 00A2  
                               ??_AFE_UPDATE 007C                                       _TX1REG 019A  
                                     u427lld 240E                                       _SPLLEN 04CF  
                                     u438lld 2241                                       _SSPADD 0212  
                                     _TRISC6 0476                                       _TRISC7 0477  
                                     _SSPBUF 0211                                _read_I2C_data 31F5  
                           __end_of___xxtofl 2ADE                   __size_of_calibrate_BATTSOC 00C6  
                             __CFG_PWRTE$OFF 0000                            __end_of_RGB_color 335B  
                               vfprintf@cfmt 0068                                 ??_AFE_Status 007B  
                                     ___flge 2851                                       ___lmul 3405  
                                  ??___aldiv 0079                                    ??___aodiv 0071  
                             _minCellVoltage 01CC                                    ??___fladd 0062  
                                  ??___aomod 0071                                       ___wmul 3292  
                                     _ln2_hi 3A8C                                    ??___fldiv 0048  
                                     _ln2_lo 3A88                                    ??___flneg 007A  
                             __CFG_STVREN$ON 0000                                    ??___flmul 002E  
                                  ??___flsub 007A                                    ??___fltol 00AC  
                                  ??___lodiv 0071                             __end_of_init_I2C 31F5  
                                  ??___lomod 0071                             __end_of_init_AFE 36B9  
                           __end_of_init_RGB 3178                    __end_of_ATmega328_address 38BA  
                      _beginAFEcommunication 2C28                                       pad@buf 0028  
                                     ctoa@fp 0030                                       dtoa@fp 0030  
                                     _strlen 321C                                       logf@t1 0124  
                                     logf@t2 0128                                    ??_initWDT 0071  
                                     logf@dk 0142                                       logf@ix 015E  
                                     fputc@c 0071                                       fputs@c 0022  
                                     fputs@i 0023                                       fputs@s 0025  
                                  ??_isalpha 0073                                    ??_isdigit 0073  
                         __end_of_AFE_UPDATE 3579                           __size_of__Umul8_16 001F  
                                  ??_islower 0073                                    ??_isspace 0073  
                        _updateVoltages$2151 00B4                                       otoa@fp 0030  
                             ??_readRegister 0079                                    ??_isupper 0073  
                                     stoa@cp 002F                                       stoa@fp 0020  
                                     putch@c 0070                             __end_of_vfprintf 3405  
                                     utoa@fp 0030              ??_setCellUndervoltageProtection 0036  
                           __end_of_snprintf 32C8                                       xtoa@fp 0030  
                                  ??_strncmp 0077                                    ??_toupper 0020  
                         __end_of_AFE_Status 2061                                   ___flge@ff1 005A  
                                 ___flge@ff2 005E                                 ___xxtofl@arg 0022  
                               ___xxtofl@exp 0021                                 ___xxtofl@val 0071  
                    __end_of__initialization 0070                               ?_read_I2C_data 0071  
                                 ___flneg@f1 005A                             coulomb_counter@i 00B1  
                                 ___fltol@f1 00A8                     ?_setTemperatureLimitsint 0020  
                 __size_of_enableDischarging 0037     setTemperatureLimitsint@minDischarge_degC 0020  
                             __pcstackCOMMON 0070                       ??_send_I2C_controlByte 0075  
                               __pidataBANK3 1800                                 __pidataBANK4 317E  
                              __end_of_fputc 3663                                __end_of_fputs 33A3  
                              __end_of_myIsr 001E                                 _cellVoltages 01AA  
                              __end_of_putch 0800                            ??_coulomb_counter 006E  
                                 _batCurrent 01C0                           _RGB_AWAIT_AFE_CONN 1000  
                     updateTemperatures@vtsx 00E9                  __size_of_updateTemperatures 02D9  
                                 _batVoltage 01C4                          ?_RGB_AWAIT_AFE_CONN 0070  
                    __size_of_enableCharging 0037                                   _cellCharge 0220  
                                    ??_fputc 0075                                      ??_fputs 0020  
                                    ??_myIsr 0070                                      ??_putch 0071  
          setShortCircuitProtection@delay_us 006A                                   __pbssBANK2 0166  
                                 __pbssBANK3 01A0                                   __pbssBANK4 0220  
                       __end_of_EUSART_Write 0808              setShortCircuitProtection@i_1014 00AA  
                         __size_of_init_GPIO 003B                           __size_of_initClock 0003  
                         __size_of_init_TMR1 000B                          statemachine@success 00EF  
                          __end_of__Umul8_16 07FF                                   __pmaintext 3437  
                       ??_RGB_AWAIT_AFE_CONN 0073                         __size_of_internal_16 0009  
            setShortCircuitProtection@scaler 00A0                                      ?___flge 005A  
                          ?_send_I2C_stopBit 0070                                      ?___lmul 0071  
                                    ?___wmul 0071        setTemperatureLimitsint@minCharge_degC 0024  
                            __CFG_PPS1WAY$ON 0000                   ?_setShortCircuitProtection 0066  
                                 __pintentry 0004                       ?_beginAFEcommunication 0020  
                         ??_send_I2C_stopBit 0071                               ___lmul@product 0020  
                                    ?_strlen 0071                      _shuntResistorValue_mOhm 01B8  
                                  ?___xxtofl 0071                           __size_of_vfpfcnvrt F1A4  
         __size_of_watchdog_timeout_shutdown 001B                                      _PPSLOCK 0E0F  
                     __size_of_send_I2C_NACK 0009                             ___lomod@dividend 0028  
                            ??_read_I2C_data 0073                       __size_of_send_I2C_data 0009  
                                  ?_init_I2C 0070                                    ?_init_AFE 0070  
                                  ?_init_RGB 0070         __end_of_setCellOvervoltageProtection 3000  
      __size_of_setCellOvervoltageProtection 00D5                 _setCellOvervoltageProtection 2F2B  
                           ??_updateVoltages 00B1        __end_of_setCellUndervoltageProtection 2219  
     __size_of_setCellUndervoltageProtection 00DC                _setCellUndervoltageProtection 213D  
                   readRegister@recievedData 0079                      ??_setShuntResistorValue 0075  
                    _samsung_cell_max_charge 01EB                           __size_of_vsnprintf 007D  
                       __end_of_readRegister 34D4                                      ___aldiv 29C6  
                                    _adcGain 016E                              __size_of___flge 007C  
                                    ___aodiv 23E6                                      ___fladd 05FE  
                                    ___aomod 2219                                      ___fldiv 1CE2  
                                    ___flneg 31BA                              __size_of___lmul 0032  
                                    ___flmul 1023                                      ___flsub 3469  
                                    ___fltol 36B9                              __size_of___wmul 001B  
                                    ___lodiv 28CD                                      ___lomod 371F  
                                  ?_vfprintf 0061                                    ?_snprintf 00CC  
                                    _cellSOC 01A0                                _messageBuffer 2771  
                                    __ptext1 32C8                                      __ptext2 3788  
                                    __ptext3 18E5                                      __ptext4 32AD  
                                    __ptext5 2949                                      __ptext6 33D4  
                                    __ptext7 1E5C                                      __ptext8 1B89  
                                    __ptext9 335B                            __end_of_init_GPIO 0843  
                          __end_of_initClock 3173                            __end_of_init_TMR1 31D9  
                            __size_of_strlen 0017                                    _T1CONbits 0018  
                                    _initWDT 3178                                 __size_of_abs 0017  
                               __size_of_pad 0051                                      _isalpha 32FF  
                                    _isdigit 3205                                   ??___xxtofl 0075  
                           ___aldiv@dividend 0028                                      _islower 3261  
                                    _isspace 32E3    __end_of_setOverCurrentDischargeProtection 26E8  
 __size_of_setOverCurrentDischargeProtection 0115          ??_setOverCurrentDischargeProtection 006C  
         ?_setOverCurrentDischargeProtection 0066            _setOverCurrentDischargeProtection 25D3  
                                    _isupper 324A                                      atoi@neg 0024  
                                    clrloop0 31DA            __end_of_watchdog_timeout_shutdown 32E3  
                                    _strncmp 35BD                                      _toupper 335B  
                       end_of_initialization 0070                                   ??_init_I2C 0071  
                                 ??_init_AFE 007B                                   ??_init_RGB 0071  
                                    fputc@fp 0073                                      fputs@fp 007A  
              ?_setCellOvervoltageProtection 0032                            _EUSART_Initialize 2B7F  
                         ?_EUSART_Initialize 0032                            __end_of_vfpfcnvrt 1000  
                              _send_I2C_NACK 319E                             ___aldiv@quotient 002E  
                 send_I2C_controlByte@RW_bit 0073                                      psplit$0 450091  
                                    psplit$1 910092                                _send_I2C_data 31A7  
                                  _RGB_color 333A                                   ??_vfprintf 0066  
                         EUSART_Initialize@x 007A                                   ??_snprintf 006C  
                                    strlen@a 0073                                      strlen@s 0071  
                        ??_EUSART_Initialize 0036                                  ___fladd@grs 006D  
                           __CFG_FOSC$INTOSC 0000                                ___xxtofl@sign 0020  
                                  _TRISAbits 008C                                    _TRISBbits 008D  
                                  _TRISCbits 008E                                    _TRISEbits 0090  
                      __size_of_EUSART_Write 0008                               _enableCharging 34D4  
                          __end_of_vsnprintf 29C6                                  ___fldiv@grs 0054  
                                ___fldiv@rem 004D                 __size_of_printcellParameters 0151  
              __end_of_SCD_threshold_setting 3A50                                    _RXPPSbits 0E24  
                          _I2C_writeRegister 331C                                  ___flmul@grs 0034  
                     _lookupTableSamsung_SOC 3800                    __end_of_EUSART_Initialize 2C28  
                      __end_of_updateCurrent 2DA0                        _OCD_threshold_setting 3908  
                            _coulomb_counter 2061                           ?_I2C_writeRegister 0075  
           beginAFEcommunication@commSuccess 002B                               ?_send_I2C_NACK 0070  
                   readRegister@slaveAddress 0075               ?_setCellUndervoltageProtection 0032  
                             ?_send_I2C_data 0071                          ??_I2C_writeRegister 007B  
                                 ?_RGB_color 0071                               __end_of___flge 28CD  
                             __end_of___lmul 3437                                  vfpfcnvrt@ap 005A  
                                vfpfcnvrt@cp 00A0                                  vfpfcnvrt@fp 0057  
                                vfpfcnvrt@ll 00A8                               __end_of___wmul 32AD  
                                vfpfcnvrt@vp 00B0                               __end_of_ln2_hi 3A90  
                             __end_of_ln2_lo 3A8C                                 _EUSART_Write 0800  
                I2C_writeRegister@regAddress 0077                setShuntResistorValue@res_mOhm 0071  
                     __end_of_enableCharging 350B             __size_of_setTemperatureLimitsint 0044  
                             __end_of_strlen 3233                          start_initialization 0020  
                            ___lodiv@divisor 0020                              ___lodiv@counter 007A  
                        _thermistorBetaValue 01ED                                  __end_of_Lg1 3A88  
                                __end_of_Lg2 3A84                                  __end_of_Lg3 3A80  
                                __end_of_Lg4 3A7C                                ?_statemachine 0070  
                                __end_of_abs 324A                                  __end_of_pad 2851  
                          _minCellTempCharge 01E2                setCellOvervoltageProtection@i 0045  
                       _maxCellTempDischarge 01DC                         updateVoltages@adcVal 00B8  
                       _minCellTempDischarge 01E0                            pnum$text7_split_1 0091  
                          pnum$text7_split_2 0092                    __end_of_I2C_writeRegister 333A  
     _setOverCurrentDischargeProtection$2150 00A4          setCellOvervoltageProtection@delay_s 0034  
       setCellUndervoltageProtection@delay_s 0034                            _EUSART_Write_Text 3278  
                      __size_of_readRegister 0036                           ?_EUSART_Write_Text 0072  
                    ??_beginAFEcommunication 0022                                  vfprintf@fmt 0063  
                                   ??___flge 0062                                     ??___lmul 0079  
                                   ??___wmul 0075               ??_setCellOvervoltageProtection 0036  
        setCellOvervoltageProtection@ov_trip 0044                                    __Umul8_16 07E0  
                ??_setShortCircuitProtection 006C                                  __pdataBANK3 01EB  
                                __pdataBANK4 024A                          ??_EUSART_Write_Text 0074  
              __size_of_send_I2C_controlByte 000A         setCellUndervoltageProtection@uv_trip 0044  
                 __end_of_updateTemperatures 1800                                     ??_strlen 0073  
                                  ___fladd@a 005E                                    ___fladd@b 005A  
                               vsnprintf@cnt 00C4                                 vsnprintf@fmt 00BF  
                                  ___fldiv@a 0040                                    ___fldiv@b 0044  
                                __pbssBIGRAM 2771                              ?_enableCharging 0020  
                       enableCharging@enable 0020                                    _adcOffset 016C  
                                  ___flmul@a 002A                                    ___flmul@b 0026  
                                __pbssCOMMON 007C                                    ___flsub@a 00A0  
                                  ___flsub@b 00A4                               ??_statemachine 0162  
                                  ___latbits 0003             send_I2C_controlByte@BlockAddress 0071  
                                 myIsr@count 01E4                                __pcstackBANK0 0020  
                              __pcstackBANK1 00A0                                __pcstackBANK2 0120  
                           ___aodiv@dividend 0028                    __size_of_send_I2C_stopBit 0008  
                                snprintf@fmt 00D0                            __size_of___xxtofl 0096  
                               _readRegister 349E                      __end_of_coulomb_counter 213D  
   setTemperatureLimitsint@maxDischarge_degC 0022                        updateTemperatures@tmp 00E3  
                      updateTemperatures@rts 00EB                    __end_of_EUSART_Write_Text 3292  
                         calibrate_BATTSOC@i 00B6                           calibrate_BATTSOC@j 00B8  
                 __size_of_EUSART_Initialize 00A9                                ??_internal_16 0071  
                                  _atoi$1773 0026                                    _atoi$1774 002A  
                                  _atoi$1775 0028                             _OV_delay_setting 3A60  
                          __size_of_init_I2C 0010                        I2C_writeRegister@data 0079  
                            ??_send_I2C_NACK 0071                            __size_of_init_AFE 0056  
                          __size_of_init_RGB 0005                            _send_I2C_startBit 3185  
                                  _dtoa$1322 003D                              ??_send_I2C_data 0073  
                __size_of_RGB_AWAIT_AFE_CONN 0023                                  _alert_error 01D8  
             __size_of_setShuntResistorValue 000A                                     ?___aldiv 0024  
                                   ?___aodiv 0020                           ?_send_I2C_startBit 0070  
                                   ?___fladd 005A                __end_of_setShuntResistorValue 31CE  
                                   ?___aomod 0020                                     ?___fldiv 0040  
                                   ?___flneg 005A                             ___aodiv@quotient 0074  
                                   ?___flmul 0026                         AFE_Status@error_flag 0022  
                                   ?___flsub 00A0                                     ?___fltol 00A8  
                                   ?___lodiv 0020                                     ?___lomod 0020  
                                ??_RGB_color 0073                                   ?__Umul8_16 0071  
                  EUSART_Initialize@baudrate 0032                                    _logf$2163 0152  
                                  _logf$2164 012C                                    _logf$2165 0130  
                                  _logf$2166 0134                                    _logf$2167 0138  
                          __size_of_vfprintf 0031                          ??_send_I2C_startBit 0071  
                          __size_of_snprintf 001B                              ___lomod@divisor 0020  
                                   ?_initWDT 0070                              ___lomod@counter 0072  
                                   ?_isalpha 0071                                     ?_isdigit 0071  
                                  _ocd_error 01D0                                     ?_islower 0071  
                                   ?_isspace 0071                                    _init_GPIO 0808  
                                   ?_isupper 0071                                    _initClock 3170  
                                  _init_TMR1 31CE                                    _currState 01E9  
                  _setShortCircuitProtection 26E8                   __size_of_I2C_writeRegister 001E  
                             __size_of_fputc 0054                               __size_of_fputs 0026  
                             __size_of_myIsr 001A                                     ?_strncmp 0071  
                                   ?_toupper 0077                               __size_of_putch 0001  
                                  _scd_error 01D2                              ___aldiv@divisor 0024  
                      __end_of_read_I2C_data 3205                              ___aldiv@counter 002C  
                             ___wmul@product 0075                                     _LATAbits 010C  
                                   _LATEbits 0110                    __end_of_send_I2C_startBit 318D  
                                  clear_ram0 31D9                                    _tmr1_flag 01E5  
                                   _PIE1bits 0091           setOverCurrentDischargeProtection@i 00A8  
                                   _PIR1bits 0011                   setShortCircuitProtection@i 00A8  
                        __end_of_internal_16 319E                          _printcellParameters 18E5  
                                  _vfpfcnvrt 1E5C                                    _xtoa$1358 0043  
                                  _xtoa$1359 0045                            ___wmul@multiplier 0071  
                    _setTemperatureLimitsint 3579                                   ?_init_GPIO 0070  
                                 ?_initClock 0070                                   ?_init_TMR1 0070  
                               _isspace$1800 0075                        send_I2C_data@databyte 0071  
                                 vfpfcnvrt@c 00B2                            ___lmul@multiplier 0071  
                       ?_printcellParameters 0070                             ?_coulomb_counter 0070  
                      _temperatureThermistor 01BC                   __size_of_EUSART_Write_Text 001A  
                 ?_watchdog_timeout_shutdown 0070                                    _vsnprintf 2949  
                                   _XR_error 01DA                                   _AFE_UPDATE 3542  
                          _OCD_delay_setting 3A30                         __end_of_statemachine 3800  
                                 vfprintf@ap 0065                                   vfprintf@fp 0061  
                                 _AFE_Status 2002                                  ??__Umul8_16 0073  
                           __size_of___aldiv 0082                             __size_of___aodiv 00F3  
                           __size_of___fladd 01E2                      __size_of_updateVoltages 02D8  
                           __size_of___aomod 00DC                             __size_of___fldiv 017A  
                           __size_of___flneg 000A               _setShortCircuitProtection$2149 00A4  
                                vsnprintf@ap 00C1                             __size_of___flmul 022C  
                           __size_of___flsub 0035                             __size_of___fltol 0066  
                     readRegister@regAddress 0077                             __size_of___lodiv 007C  
                           __size_of___lomod 0069                                   ?_vfpfcnvrt 0057  
                                 snprintf@ap 006F                              ___aodiv@divisor 0020  
                            ___aodiv@counter 0072                                   _ANSELBbits 018D  
                                 _ANSELCbits 018E                                     ___xxtofl 2A48  
setOverCurrentDischargeProtection@current_mA 0066                             __size_of_initWDT 0006  
                           __size_of_isalpha 001D                             __size_of_isdigit 0017  
             __end_of_lookupTableSamsung_SOC 385C                             _send_I2C_stopBit 318D  
                           __size_of_islower 0017                             __size_of_isspace 001C  
                                   __ptext10 3261                                     __ptext11 324A  
                                   __ptext20 3233                                     __ptext12 32FF  
                                   __ptext21 2219                                     __ptext13 1804  
                                   __ptext30 32E3                                     __ptext22 23E6  
                                   __ptext14 371F                                     __ptext31 3205  
                                   __ptext23 33A3                                     __ptext15 28CD  
                                   __ptext40 2851                                     __ptext32 3278  
                                   __ptext24 2800                                     __ptext16 35BD  
                                   __ptext41 213D                                     __ptext33 0800  
                                   __ptext25 321C                                     __ptext17 2DA0  
                                   __ptext50 0074                                     __ptext42 2F2B  
                                   __ptext34 3663                                     __ptext26 337D  
                                   __ptext18 22F5                                     __ptext51 2CDC  
                                   __ptext43 2C28                                     __ptext35 3579  
                                   __ptext27 360F                                     __ptext19 1A36  
                                   __ptext60 2A48                                     __ptext52 31BA  
                                   __ptext44 1000                                     __ptext36 3292  
                                   __ptext28 07FF                                     __ptext61 36B9  
                                   __ptext53 350B                                     __ptext45 333A  
                                   __ptext37 31C4                                     __ptext29 2ADE  
                                   __ptext70 31B0                                     __ptext62 1023  
                                   __ptext54 34D4                                     __ptext46 3542  
                                   __ptext38 26E8                                     __ptext71 319E  
                                   __ptext63 07E0                                     __ptext55 331C  
                                   __ptext47 124F                                     __ptext39 25D3  
                                   __ptext80 2B7F                                     __ptext72 31F5  
                                   __ptext64 1CE2                                     __ptext56 2061  
                                   __ptext48 3405                                     __ptext81 29C6  
                                   __ptext73 31CE                                     __ptext65 2002  
                                   __ptext57 3469                                     __ptext49 1527  
                                   __ptext74 3173                                     __ptext66 349E  
                                   __ptext58 05FE                                     __ptext75 31E5  
                                   __ptext67 318D                                     __ptext59 2E65  
                                   __ptext76 0808                                     __ptext68 3185  
                                   __ptext77 3178                                     __ptext69 31A7  
                                   __ptext78 3170                                     __ptext79 3195  
                           __size_of_isupper 0017                        ??_printcellParameters 007C  
             setCellUndervoltageProtection@i 0045                    __end_of_OCD_delay_setting 3A40  
                           __size_of_strncmp 0052                             __size_of_toupper 0022  
                                 ?_vsnprintf 00BB                          updateCurrent@adcVal 00B5  
                                   _init_I2C 31E5                                     _init_AFE 3663  
                                   _init_RGB 3173                                __size_of_atoi 00A1  
                              __size_of_ctoa 0031                                __size_of_main 0032  
                              __size_of_dtoa 0153                                _SSPDATPPSbits 0E21  
                                  pnum$text7 0045                                __size_of_logf 058A  
                              __size_of_otoa 00F1                        _SCD_threshold_setting 3A40  
                              __size_of_stoa 00C5                                __size_of_utoa 00E1  
                 __size_of_send_I2C_startBit 0008                                __size_of_xtoa 0159  
                                _internal_16 3195                                   _RB2PPSbits 0E9A  
                                 _RC1STAbits 019D                                    stoa@F1152 024A  
                                   _ov_error 01D4                                   _RC4PPSbits 0EA4  
             __size_of_beginAFEcommunication 00B4                                _SSPCLKPPSbits 0E20  
              __end_of_beginAFEcommunication 2CDC                                     int$flags 007E  
                                 _RC5PPSbits 0EA5                                     _protect1 01E8  
                                   _protect2 01E7                                     _protect3 01E6  
                  ??_setTemperatureLimitsint 0077                                     _vfprintf 33D4  
                           ??_enableCharging 0022                                     _snprintf 32AD  
                                   _uv_error 01D6                             ___aomod@dividend 0028  
                                   logf@F469 01B4                                     _sys_stat 007C  
                     __size_of_updateCurrent 00C4    setOverCurrentDischargeProtection@delay_ms 006A  
                   __end_of_OV_delay_setting 3A68                               _vfpfcnvrt$1373 00A4  
                             _vfpfcnvrt$1374 00A6                                   _INTCONbits 000B  
                                ??_init_GPIO 0071                                  ??_initClock 0071  
                                ??_init_TMR1 0071                                     logf@hfsq 013E  
                             __pstringtext10 3A7C                               __pstringtext11 3A80  
                             __pstringtext20 3969                               __pstringtext12 3A84  
                             __pstringtext21 397E                               __pstringtext13 3A88  
                             __pstringtext30 3A50                               __pstringtext22 3993  
                             __pstringtext14 3A8C                               __pstringtext31 3A90  
                             __pstringtext23 39A8                               __pstringtext15 38B8  
                             __pstringtext40 3AB2                               __pstringtext32 3A94  
                             __pstringtext24 39BD                               __pstringtext16 38E2  
                             __pstringtext41 3AB5                               __pstringtext33 3A98  
                             __pstringtext25 39D1                               __pstringtext17 3928  
                             __pstringtext42 3AB8                               __pstringtext34 3A9C  
                             __pstringtext26 39E5                               __pstringtext18 393E  
                             __pstringtext43 3ABB                               __pstringtext35 3AA0  
                             __pstringtext27 39F9                               __pstringtext19 3954  
                             __pstringtext44 3ABE                               __pstringtext36 3AA4  
                             __pstringtext28 3A0C                               __pstringtext45 3AC1  
                             __pstringtext37 3AA8                               __pstringtext29 3A1E  
                             __pstringtext46 0000                               __pstringtext38 3AAC  
                             __pstringtext39 3AAF                                     isalpha@c 0071  
                                   isdigit@c 0071                                   vsnprintf@f 00C6  
                                 vsnprintf@n 00BD                                   vsnprintf@s 00BB  
                         _updateTemperatures 1527                             _UV_delay_setting 3A68  
                                  snprintf@n 00CE                                    snprintf@s 00CC  
               __end_of_send_I2C_controlByte 31BA                                     intlevel1 0000  
        setShortCircuitProtection@current_mA 0066                                     islower@c 0071  
                                ?_AFE_UPDATE 0070                                     isspace@c 0071  
                        ?_updateTemperatures 0070                            __CFG_CLKOUTEN$OFF 0000  
                                _PPSLOCKbits 0E0F                                     isupper@c 0071  
         __size_of_setShortCircuitProtection 0118                                    strncmp@_l 0071  
                                  strncmp@_r 0073                                  ?_AFE_Status 0020  
                          _maxCellTempCharge 01DE                              ___aomod@divisor 0020  
                                ??_vfpfcnvrt 005B                                     stoa@nuls 0024  
                            ___aomod@counter 0072                                __pstringtext1 3800  
                              __pstringtext2 385C                                __pstringtext3 3908  
                              __pstringtext4 3A30                                __pstringtext5 3A40  
                              __pstringtext6 3A60                                __pstringtext7 3A68  
                              __pstringtext8 3A70                                __pstringtext9 3A78  
                       ??_updateTemperatures 00B4                       __Umul8_16@multiplicand 0071  
                             _vsnprintf$1945 00C2      setOverCurrentDischargeProtection@i_1023 00AA  
                                   strncmp@l 0078                                     strncmp@n 0075  
                                   strncmp@r 007A                                     toupper@c 0077  
                      EUSART_Write_Text@text 0072                                 ___aldiv@sign 002D  
                                _SSPCON2bits 0216                                   _WDTCONbits 0097  
                              ___fladd@signs 006A              __end_of_setTemperatureLimitsint 35BD  
                         EUSART_Write@txData 0071                                 ___aodiv@sign 0073  
    setOverCurrentDischargeProtection@scaler 00A0                                  ??_vsnprintf 006A  
                    _updateTemperatures$2160 00D7                      _updateTemperatures$2152 00B7  
                    _updateTemperatures$2161 00DB                      _updateTemperatures$2153 00BB  
                    _updateTemperatures$2162 00DF                      _updateTemperatures$2154 00BF  
                    _updateTemperatures$2155 00C3                      _updateTemperatures$2156 00C7  
                    _updateTemperatures$2157 00CB                      _updateTemperatures$2158 00CF  
                    _updateTemperatures$2159 00D3                                 ___fladd@aexp 006B  
                               ___fladd@bexp 006C                        __size_of_statemachine 0078  
                                 _STATUSbits 0003                                  _toggleColor 01EA  
                       __Umul8_16@multiplier 0079                                _updateCurrent 2CDC  
                                 _SSPCONbits 0215                   __end_of_RGB_AWAIT_AFE_CONN 1023  
                               ___aomod@sign 0073                           EUSART_Write_Text@i 0075  
                      __end_of_send_I2C_NACK 31A7                            __Umul8_16@product 0075  
                          _calibrate_BATTSOC 2E65  
