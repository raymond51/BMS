

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Mar 12 15:19:05 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1719
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	stringtext12,global,class=STRCODE,delta=2
    17                           	psect	stringtext13,global,class=STRCODE,delta=2
    18                           	psect	stringtext14,global,class=STRCODE,delta=2
    19                           	psect	stringtext15,global,class=STRCODE,delta=2
    20                           	psect	stringtext16,global,class=STRCODE,delta=2
    21                           	psect	stringtext17,global,class=STRCODE,delta=2
    22                           	psect	stringtext18,global,class=STRCODE,delta=2
    23                           	psect	stringtext19,global,class=STRCODE,delta=2
    24                           	psect	stringtext20,global,class=STRCODE,delta=2
    25                           	psect	stringtext21,global,class=STRCODE,delta=2
    26                           	psect	stringtext22,global,class=STRCODE,delta=2
    27                           	psect	stringtext23,global,class=STRCODE,delta=2
    28                           	psect	stringtext24,global,class=STRCODE,delta=2
    29                           	psect	stringtext25,global,class=STRCODE,delta=2
    30                           	psect	stringtext26,global,class=STRCODE,delta=2
    31                           	psect	stringtext27,global,class=STRCODE,delta=2
    32                           	psect	stringtext28,global,class=STRCODE,delta=2
    33                           	psect	stringtext29,global,class=STRCODE,delta=2
    34                           	psect	stringtext30,global,class=STRCODE,delta=2
    35                           	psect	stringtext31,global,class=STRCODE,delta=2
    36                           	psect	stringtext32,global,class=STRCODE,delta=2
    37                           	psect	stringtext33,global,class=STRCODE,delta=2
    38                           	psect	stringtext34,global,class=STRCODE,delta=2
    39                           	psect	stringtext35,global,class=STRCODE,delta=2
    40                           	psect	stringtext36,global,class=STRCODE,delta=2
    41                           	psect	stringtext37,global,class=STRCODE,delta=2
    42                           	psect	stringtext38,global,class=STRCODE,delta=2
    43                           	psect	stringtext39,global,class=STRCODE,delta=2
    44                           	psect	stringtext40,global,class=STRCODE,delta=2
    45                           	psect	stringtext41,global,class=STRCODE,delta=2
    46                           	psect	stringtext42,global,class=STRCODE,delta=2
    47                           	psect	stringtext43,global,class=STRCODE,delta=2
    48                           	psect	stringtext44,global,class=STRCODE,delta=2
    49                           	psect	stringtext45,global,class=STRCODE,delta=2
    50                           	psect	stringtext46,global,class=STRCODE,delta=2
    51                           	psect	stringtext47,global,class=STRCODE,delta=2
    52                           	psect	cinit,global,class=CODE,merge=1,delta=2
    53                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    54                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    55                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    56                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    57                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    58                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    59                           	psect	clrtext,global,class=CODE,delta=2
    60                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    61                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    62                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    63                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    64                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    65                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    66                           	psect	text1,local,class=CODE,merge=1,delta=2
    67                           	psect	text2,local,class=CODE,merge=1,delta=2
    68                           	psect	text3,local,class=CODE,merge=1,delta=2
    69                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    70                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    71                           	psect	text6,local,class=CODE,merge=1,delta=2
    72                           	psect	text7,local,class=CODE,merge=1,delta=2
    73                           	psect	text8,local,class=CODE,merge=1,delta=2
    74                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    75                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    76                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    77                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    78                           	psect	text13,local,class=CODE,merge=1,delta=2
    79                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    80                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    81                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    82                           	psect	text17,local,class=CODE,merge=1,delta=2
    83                           	psect	text18,local,class=CODE,merge=1,delta=2
    84                           	psect	text19,local,class=CODE,merge=1,delta=2
    85                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    86                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    87                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    88                           	psect	text23,local,class=CODE,merge=1,delta=2
    89                           	psect	text24,local,class=CODE,merge=1,delta=2
    90                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    91                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    92                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    93                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    94                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    95                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    96                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    97                           	psect	text32,local,class=CODE,merge=1,delta=2
    98                           	psect	text33,local,class=CODE,merge=1,delta=2
    99                           	psect	text34,local,class=CODE,merge=1,delta=2
   100                           	psect	text35,local,class=CODE,merge=1,delta=2
   101                           	psect	text36,local,class=CODE,merge=1,delta=2,group=1
   102                           	psect	text37,local,class=CODE,merge=1,delta=2
   103                           	psect	text38,local,class=CODE,merge=1,delta=2
   104                           	psect	text39,local,class=CODE,merge=1,delta=2
   105                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
   106                           	psect	text41,local,class=CODE,merge=1,delta=2
   107                           	psect	text42,local,class=CODE,merge=1,delta=2
   108                           	psect	text43,local,class=CODE,merge=1,delta=2
   109                           	psect	text44,local,class=CODE,merge=1,delta=2
   110                           	psect	text45,local,class=CODE,merge=1,delta=2
   111                           	psect	text46,local,class=CODE,merge=1,delta=2
   112                           	psect	text47,local,class=CODE,merge=1,delta=2
   113                           	psect	text48,local,class=CODE,merge=1,delta=2,group=1
   114                           	psect	text49,local,class=CODE,merge=1,delta=2
   115                           	psect	text50,local,class=CODE,merge=1,delta=2,group=2
   116                           	psect	text51,local,class=CODE,merge=1,delta=2,group=1
   117                           	psect	text52,local,class=CODE,merge=1,delta=2,group=1
   118                           	psect	text53,local,class=CODE,merge=1,delta=2
   119                           	psect	text54,local,class=CODE,merge=1,delta=2,group=1
   120                           	psect	text55,local,class=CODE,merge=1,delta=2,group=1
   121                           	psect	text56,local,class=CODE,merge=1,delta=2,group=1
   122                           	psect	text57,local,class=CODE,merge=1,delta=2,group=1
   123                           	psect	text58,local,class=CODE,merge=1,delta=2,group=1
   124                           	psect	text59,local,class=CODE,merge=1,delta=2,group=1
   125                           	psect	text60,local,class=CODE,merge=1,delta=2
   126                           	psect	text61,local,class=CODE,merge=1,delta=2
   127                           	psect	text62,local,class=CODE,merge=1,delta=2
   128                           	psect	text63,local,class=CODE,merge=1,delta=2
   129                           	psect	text64,local,class=CODE,merge=1,delta=2
   130                           	psect	text65,local,class=CODE,merge=1,delta=2
   131                           	psect	text66,local,class=CODE,merge=1,delta=2
   132                           	psect	text67,local,class=CODE,merge=1,delta=2
   133                           	psect	text68,local,class=CODE,merge=1,delta=2
   134                           	psect	text69,local,class=CODE,merge=1,delta=2
   135                           	psect	text70,local,class=CODE,merge=1,delta=2
   136                           	psect	text71,local,class=CODE,merge=1,delta=2
   137                           	psect	text72,local,class=CODE,merge=1,delta=2
   138                           	psect	text73,local,class=CODE,merge=1,delta=2
   139                           	psect	text74,local,class=CODE,merge=1,delta=2
   140                           	psect	text75,local,class=CODE,merge=1,delta=2
   141                           	psect	text76,local,class=CODE,merge=1,delta=2
   142                           	psect	text77,local,class=CODE,merge=1,delta=2
   143                           	psect	text78,local,class=CODE,merge=1,delta=2,group=1
   144                           	psect	intentry,global,class=CODE,delta=2
   145                           	psect	text7_split_1,local,class=CODE,merge=1,delta=2
   146                           	psect	text7_split_2,local,class=CODE,merge=1,delta=2
   147                           	dabs	1,0xCA0,32
   148                           	dabs	1,0xC20,80
   149                           	dabs	1,0xBE1,15
   150                           	dabs	1,0x2771,0,_messageBuffer
   151                           	dabs	1,0x7E,2
   152  0000                     
   153                           ; Version 2.05
   154                           ; Generated 20/12/2018 GMT
   155                           ; 
   156                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   157                           ; All rights reserved.
   158                           ; 
   159                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   160                           ; 
   161                           ; Redistribution and use in source and binary forms, with or without modification, are
   162                           ; permitted provided that the following conditions are met:
   163                           ; 
   164                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   165                           ;        conditions and the following disclaimer.
   166                           ; 
   167                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   168                           ;        of conditions and the following disclaimer in the documentation and/or other
   169                           ;        materials provided with the distribution.
   170                           ; 
   171                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   172                           ;        software without specific prior written permission.
   173                           ; 
   174                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   175                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   176                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   177                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   178                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   179                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   180                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   181                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   182                           ; 
   183                           ; 
   184                           ; Code-generator required, PIC16F1719 Definitions
   185                           ; 
   186                           ; SFR Addresses
   187  0000                     	;# 
   188  0001                     	;# 
   189  0002                     	;# 
   190  0003                     	;# 
   191  0004                     	;# 
   192  0005                     	;# 
   193  0006                     	;# 
   194  0007                     	;# 
   195  0008                     	;# 
   196  0009                     	;# 
   197  000A                     	;# 
   198  000B                     	;# 
   199  000C                     	;# 
   200  000D                     	;# 
   201  000E                     	;# 
   202  000F                     	;# 
   203  0010                     	;# 
   204  0011                     	;# 
   205  0012                     	;# 
   206  0013                     	;# 
   207  0015                     	;# 
   208  0016                     	;# 
   209  0016                     	;# 
   210  0017                     	;# 
   211  0018                     	;# 
   212  0019                     	;# 
   213  001A                     	;# 
   214  001B                     	;# 
   215  001C                     	;# 
   216  008C                     	;# 
   217  008D                     	;# 
   218  008E                     	;# 
   219  008F                     	;# 
   220  0090                     	;# 
   221  0091                     	;# 
   222  0092                     	;# 
   223  0093                     	;# 
   224  0095                     	;# 
   225  0096                     	;# 
   226  0097                     	;# 
   227  0098                     	;# 
   228  0099                     	;# 
   229  009A                     	;# 
   230  009B                     	;# 
   231  009B                     	;# 
   232  009C                     	;# 
   233  009D                     	;# 
   234  009E                     	;# 
   235  009F                     	;# 
   236  010C                     	;# 
   237  010D                     	;# 
   238  010E                     	;# 
   239  010F                     	;# 
   240  0110                     	;# 
   241  0111                     	;# 
   242  0112                     	;# 
   243  0113                     	;# 
   244  0114                     	;# 
   245  0115                     	;# 
   246  0116                     	;# 
   247  0117                     	;# 
   248  0118                     	;# 
   249  0119                     	;# 
   250  011A                     	;# 
   251  011B                     	;# 
   252  011B                     	;# 
   253  011C                     	;# 
   254  018C                     	;# 
   255  018D                     	;# 
   256  018E                     	;# 
   257  018F                     	;# 
   258  0190                     	;# 
   259  0191                     	;# 
   260  0191                     	;# 
   261  0192                     	;# 
   262  0193                     	;# 
   263  0193                     	;# 
   264  0194                     	;# 
   265  0195                     	;# 
   266  0196                     	;# 
   267  0197                     	;# 
   268  0199                     	;# 
   269  0199                     	;# 
   270  0199                     	;# 
   271  019A                     	;# 
   272  019A                     	;# 
   273  019A                     	;# 
   274  019B                     	;# 
   275  019B                     	;# 
   276  019B                     	;# 
   277  019B                     	;# 
   278  019B                     	;# 
   279  019C                     	;# 
   280  019C                     	;# 
   281  019C                     	;# 
   282  019D                     	;# 
   283  019D                     	;# 
   284  019D                     	;# 
   285  019E                     	;# 
   286  019E                     	;# 
   287  019E                     	;# 
   288  019F                     	;# 
   289  019F                     	;# 
   290  019F                     	;# 
   291  019F                     	;# 
   292  019F                     	;# 
   293  020C                     	;# 
   294  020D                     	;# 
   295  020E                     	;# 
   296  020F                     	;# 
   297  0210                     	;# 
   298  0211                     	;# 
   299  0211                     	;# 
   300  0212                     	;# 
   301  0212                     	;# 
   302  0213                     	;# 
   303  0213                     	;# 
   304  0214                     	;# 
   305  0214                     	;# 
   306  0215                     	;# 
   307  0215                     	;# 
   308  0215                     	;# 
   309  0215                     	;# 
   310  0216                     	;# 
   311  0216                     	;# 
   312  0217                     	;# 
   313  0217                     	;# 
   314  028C                     	;# 
   315  028D                     	;# 
   316  028E                     	;# 
   317  028F                     	;# 
   318  0290                     	;# 
   319  0291                     	;# 
   320  0291                     	;# 
   321  0292                     	;# 
   322  0293                     	;# 
   323  0293                     	;# 
   324  0298                     	;# 
   325  0298                     	;# 
   326  0299                     	;# 
   327  029A                     	;# 
   328  029A                     	;# 
   329  029E                     	;# 
   330  030C                     	;# 
   331  030D                     	;# 
   332  030E                     	;# 
   333  030F                     	;# 
   334  0310                     	;# 
   335  038C                     	;# 
   336  038D                     	;# 
   337  038E                     	;# 
   338  038F                     	;# 
   339  0390                     	;# 
   340  0391                     	;# 
   341  0392                     	;# 
   342  0393                     	;# 
   343  0394                     	;# 
   344  0395                     	;# 
   345  0396                     	;# 
   346  0397                     	;# 
   347  0398                     	;# 
   348  0399                     	;# 
   349  039D                     	;# 
   350  039E                     	;# 
   351  039F                     	;# 
   352  0415                     	;# 
   353  0416                     	;# 
   354  0417                     	;# 
   355  041C                     	;# 
   356  041D                     	;# 
   357  041E                     	;# 
   358  0498                     	;# 
   359  0498                     	;# 
   360  0499                     	;# 
   361  049A                     	;# 
   362  049B                     	;# 
   363  049B                     	;# 
   364  049C                     	;# 
   365  049D                     	;# 
   366  049E                     	;# 
   367  049F                     	;# 
   368  0511                     	;# 
   369  0515                     	;# 
   370  0617                     	;# 
   371  0618                     	;# 
   372  0619                     	;# 
   373  0619                     	;# 
   374  061A                     	;# 
   375  061B                     	;# 
   376  061C                     	;# 
   377  061C                     	;# 
   378  0691                     	;# 
   379  0692                     	;# 
   380  0693                     	;# 
   381  0694                     	;# 
   382  0695                     	;# 
   383  0696                     	;# 
   384  0697                     	;# 
   385  0698                     	;# 
   386  0699                     	;# 
   387  069A                     	;# 
   388  069B                     	;# 
   389  069C                     	;# 
   390  069D                     	;# 
   391  069E                     	;# 
   392  069F                     	;# 
   393  0E0F                     	;# 
   394  0E10                     	;# 
   395  0E11                     	;# 
   396  0E12                     	;# 
   397  0E13                     	;# 
   398  0E14                     	;# 
   399  0E15                     	;# 
   400  0E17                     	;# 
   401  0E20                     	;# 
   402  0E21                     	;# 
   403  0E22                     	;# 
   404  0E24                     	;# 
   405  0E25                     	;# 
   406  0E28                     	;# 
   407  0E29                     	;# 
   408  0E2A                     	;# 
   409  0E2B                     	;# 
   410  0E90                     	;# 
   411  0E91                     	;# 
   412  0E92                     	;# 
   413  0E93                     	;# 
   414  0E94                     	;# 
   415  0E95                     	;# 
   416  0E96                     	;# 
   417  0E97                     	;# 
   418  0E98                     	;# 
   419  0E99                     	;# 
   420  0E9A                     	;# 
   421  0E9B                     	;# 
   422  0E9C                     	;# 
   423  0E9D                     	;# 
   424  0E9E                     	;# 
   425  0E9F                     	;# 
   426  0EA0                     	;# 
   427  0EA1                     	;# 
   428  0EA2                     	;# 
   429  0EA3                     	;# 
   430  0EA4                     	;# 
   431  0EA5                     	;# 
   432  0EA6                     	;# 
   433  0EA7                     	;# 
   434  0EA8                     	;# 
   435  0EA9                     	;# 
   436  0EAA                     	;# 
   437  0EAB                     	;# 
   438  0EAC                     	;# 
   439  0EAD                     	;# 
   440  0EAE                     	;# 
   441  0EAF                     	;# 
   442  0EB0                     	;# 
   443  0EB1                     	;# 
   444  0EB2                     	;# 
   445  0F0F                     	;# 
   446  0F10                     	;# 
   447  0F11                     	;# 
   448  0F12                     	;# 
   449  0F13                     	;# 
   450  0F14                     	;# 
   451  0F15                     	;# 
   452  0F16                     	;# 
   453  0F17                     	;# 
   454  0F18                     	;# 
   455  0F19                     	;# 
   456  0F1A                     	;# 
   457  0F1B                     	;# 
   458  0F1C                     	;# 
   459  0F1D                     	;# 
   460  0F1E                     	;# 
   461  0F1F                     	;# 
   462  0F20                     	;# 
   463  0F21                     	;# 
   464  0F22                     	;# 
   465  0F23                     	;# 
   466  0F24                     	;# 
   467  0F25                     	;# 
   468  0F26                     	;# 
   469  0F27                     	;# 
   470  0F28                     	;# 
   471  0F29                     	;# 
   472  0F2A                     	;# 
   473  0F2B                     	;# 
   474  0F2C                     	;# 
   475  0F2D                     	;# 
   476  0F2E                     	;# 
   477  0F2F                     	;# 
   478  0F30                     	;# 
   479  0F31                     	;# 
   480  0F32                     	;# 
   481  0F33                     	;# 
   482  0F34                     	;# 
   483  0F35                     	;# 
   484  0F36                     	;# 
   485  0F37                     	;# 
   486  0FE4                     	;# 
   487  0FE5                     	;# 
   488  0FE6                     	;# 
   489  0FE7                     	;# 
   490  0FE8                     	;# 
   491  0FE9                     	;# 
   492  0FEA                     	;# 
   493  0FEB                     	;# 
   494  0FED                     	;# 
   495  0FEE                     	;# 
   496  0FEF                     	;# 
   497  0000                     	;# 
   498  0001                     	;# 
   499  0002                     	;# 
   500  0003                     	;# 
   501  0004                     	;# 
   502  0005                     	;# 
   503  0006                     	;# 
   504  0007                     	;# 
   505  0008                     	;# 
   506  0009                     	;# 
   507  000A                     	;# 
   508  000B                     	;# 
   509  000C                     	;# 
   510  000D                     	;# 
   511  000E                     	;# 
   512  000F                     	;# 
   513  0010                     	;# 
   514  0011                     	;# 
   515  0012                     	;# 
   516  0013                     	;# 
   517  0015                     	;# 
   518  0016                     	;# 
   519  0016                     	;# 
   520  0017                     	;# 
   521  0018                     	;# 
   522  0019                     	;# 
   523  001A                     	;# 
   524  001B                     	;# 
   525  001C                     	;# 
   526  008C                     	;# 
   527  008D                     	;# 
   528  008E                     	;# 
   529  008F                     	;# 
   530  0090                     	;# 
   531  0091                     	;# 
   532  0092                     	;# 
   533  0093                     	;# 
   534  0095                     	;# 
   535  0096                     	;# 
   536  0097                     	;# 
   537  0098                     	;# 
   538  0099                     	;# 
   539  009A                     	;# 
   540  009B                     	;# 
   541  009B                     	;# 
   542  009C                     	;# 
   543  009D                     	;# 
   544  009E                     	;# 
   545  009F                     	;# 
   546  010C                     	;# 
   547  010D                     	;# 
   548  010E                     	;# 
   549  010F                     	;# 
   550  0110                     	;# 
   551  0111                     	;# 
   552  0112                     	;# 
   553  0113                     	;# 
   554  0114                     	;# 
   555  0115                     	;# 
   556  0116                     	;# 
   557  0117                     	;# 
   558  0118                     	;# 
   559  0119                     	;# 
   560  011A                     	;# 
   561  011B                     	;# 
   562  011B                     	;# 
   563  011C                     	;# 
   564  018C                     	;# 
   565  018D                     	;# 
   566  018E                     	;# 
   567  018F                     	;# 
   568  0190                     	;# 
   569  0191                     	;# 
   570  0191                     	;# 
   571  0192                     	;# 
   572  0193                     	;# 
   573  0193                     	;# 
   574  0194                     	;# 
   575  0195                     	;# 
   576  0196                     	;# 
   577  0197                     	;# 
   578  0199                     	;# 
   579  0199                     	;# 
   580  0199                     	;# 
   581  019A                     	;# 
   582  019A                     	;# 
   583  019A                     	;# 
   584  019B                     	;# 
   585  019B                     	;# 
   586  019B                     	;# 
   587  019B                     	;# 
   588  019B                     	;# 
   589  019C                     	;# 
   590  019C                     	;# 
   591  019C                     	;# 
   592  019D                     	;# 
   593  019D                     	;# 
   594  019D                     	;# 
   595  019E                     	;# 
   596  019E                     	;# 
   597  019E                     	;# 
   598  019F                     	;# 
   599  019F                     	;# 
   600  019F                     	;# 
   601  019F                     	;# 
   602  019F                     	;# 
   603  020C                     	;# 
   604  020D                     	;# 
   605  020E                     	;# 
   606  020F                     	;# 
   607  0210                     	;# 
   608  0211                     	;# 
   609  0211                     	;# 
   610  0212                     	;# 
   611  0212                     	;# 
   612  0213                     	;# 
   613  0213                     	;# 
   614  0214                     	;# 
   615  0214                     	;# 
   616  0215                     	;# 
   617  0215                     	;# 
   618  0215                     	;# 
   619  0215                     	;# 
   620  0216                     	;# 
   621  0216                     	;# 
   622  0217                     	;# 
   623  0217                     	;# 
   624  028C                     	;# 
   625  028D                     	;# 
   626  028E                     	;# 
   627  028F                     	;# 
   628  0290                     	;# 
   629  0291                     	;# 
   630  0291                     	;# 
   631  0292                     	;# 
   632  0293                     	;# 
   633  0293                     	;# 
   634  0298                     	;# 
   635  0298                     	;# 
   636  0299                     	;# 
   637  029A                     	;# 
   638  029A                     	;# 
   639  029E                     	;# 
   640  030C                     	;# 
   641  030D                     	;# 
   642  030E                     	;# 
   643  030F                     	;# 
   644  0310                     	;# 
   645  038C                     	;# 
   646  038D                     	;# 
   647  038E                     	;# 
   648  038F                     	;# 
   649  0390                     	;# 
   650  0391                     	;# 
   651  0392                     	;# 
   652  0393                     	;# 
   653  0394                     	;# 
   654  0395                     	;# 
   655  0396                     	;# 
   656  0397                     	;# 
   657  0398                     	;# 
   658  0399                     	;# 
   659  039D                     	;# 
   660  039E                     	;# 
   661  039F                     	;# 
   662  0415                     	;# 
   663  0416                     	;# 
   664  0417                     	;# 
   665  041C                     	;# 
   666  041D                     	;# 
   667  041E                     	;# 
   668  0498                     	;# 
   669  0498                     	;# 
   670  0499                     	;# 
   671  049A                     	;# 
   672  049B                     	;# 
   673  049B                     	;# 
   674  049C                     	;# 
   675  049D                     	;# 
   676  049E                     	;# 
   677  049F                     	;# 
   678  0511                     	;# 
   679  0515                     	;# 
   680  0617                     	;# 
   681  0618                     	;# 
   682  0619                     	;# 
   683  0619                     	;# 
   684  061A                     	;# 
   685  061B                     	;# 
   686  061C                     	;# 
   687  061C                     	;# 
   688  0691                     	;# 
   689  0692                     	;# 
   690  0693                     	;# 
   691  0694                     	;# 
   692  0695                     	;# 
   693  0696                     	;# 
   694  0697                     	;# 
   695  0698                     	;# 
   696  0699                     	;# 
   697  069A                     	;# 
   698  069B                     	;# 
   699  069C                     	;# 
   700  069D                     	;# 
   701  069E                     	;# 
   702  069F                     	;# 
   703  0E0F                     	;# 
   704  0E10                     	;# 
   705  0E11                     	;# 
   706  0E12                     	;# 
   707  0E13                     	;# 
   708  0E14                     	;# 
   709  0E15                     	;# 
   710  0E17                     	;# 
   711  0E20                     	;# 
   712  0E21                     	;# 
   713  0E22                     	;# 
   714  0E24                     	;# 
   715  0E25                     	;# 
   716  0E28                     	;# 
   717  0E29                     	;# 
   718  0E2A                     	;# 
   719  0E2B                     	;# 
   720  0E90                     	;# 
   721  0E91                     	;# 
   722  0E92                     	;# 
   723  0E93                     	;# 
   724  0E94                     	;# 
   725  0E95                     	;# 
   726  0E96                     	;# 
   727  0E97                     	;# 
   728  0E98                     	;# 
   729  0E99                     	;# 
   730  0E9A                     	;# 
   731  0E9B                     	;# 
   732  0E9C                     	;# 
   733  0E9D                     	;# 
   734  0E9E                     	;# 
   735  0E9F                     	;# 
   736  0EA0                     	;# 
   737  0EA1                     	;# 
   738  0EA2                     	;# 
   739  0EA3                     	;# 
   740  0EA4                     	;# 
   741  0EA5                     	;# 
   742  0EA6                     	;# 
   743  0EA7                     	;# 
   744  0EA8                     	;# 
   745  0EA9                     	;# 
   746  0EAA                     	;# 
   747  0EAB                     	;# 
   748  0EAC                     	;# 
   749  0EAD                     	;# 
   750  0EAE                     	;# 
   751  0EAF                     	;# 
   752  0EB0                     	;# 
   753  0EB1                     	;# 
   754  0EB2                     	;# 
   755  0F0F                     	;# 
   756  0F10                     	;# 
   757  0F11                     	;# 
   758  0F12                     	;# 
   759  0F13                     	;# 
   760  0F14                     	;# 
   761  0F15                     	;# 
   762  0F16                     	;# 
   763  0F17                     	;# 
   764  0F18                     	;# 
   765  0F19                     	;# 
   766  0F1A                     	;# 
   767  0F1B                     	;# 
   768  0F1C                     	;# 
   769  0F1D                     	;# 
   770  0F1E                     	;# 
   771  0F1F                     	;# 
   772  0F20                     	;# 
   773  0F21                     	;# 
   774  0F22                     	;# 
   775  0F23                     	;# 
   776  0F24                     	;# 
   777  0F25                     	;# 
   778  0F26                     	;# 
   779  0F27                     	;# 
   780  0F28                     	;# 
   781  0F29                     	;# 
   782  0F2A                     	;# 
   783  0F2B                     	;# 
   784  0F2C                     	;# 
   785  0F2D                     	;# 
   786  0F2E                     	;# 
   787  0F2F                     	;# 
   788  0F30                     	;# 
   789  0F31                     	;# 
   790  0F32                     	;# 
   791  0F33                     	;# 
   792  0F34                     	;# 
   793  0F35                     	;# 
   794  0F36                     	;# 
   795  0F37                     	;# 
   796  0FE4                     	;# 
   797  0FE5                     	;# 
   798  0FE6                     	;# 
   799  0FE7                     	;# 
   800  0FE8                     	;# 
   801  0FE9                     	;# 
   802  0FEA                     	;# 
   803  0FEB                     	;# 
   804  0FED                     	;# 
   805  0FEE                     	;# 
   806  0FEF                     	;# 
   807  0000                     	;# 
   808  0001                     	;# 
   809  0002                     	;# 
   810  0003                     	;# 
   811  0004                     	;# 
   812  0005                     	;# 
   813  0006                     	;# 
   814  0007                     	;# 
   815  0008                     	;# 
   816  0009                     	;# 
   817  000A                     	;# 
   818  000B                     	;# 
   819  000C                     	;# 
   820  000D                     	;# 
   821  000E                     	;# 
   822  000F                     	;# 
   823  0010                     	;# 
   824  0011                     	;# 
   825  0012                     	;# 
   826  0013                     	;# 
   827  0015                     	;# 
   828  0016                     	;# 
   829  0016                     	;# 
   830  0017                     	;# 
   831  0018                     	;# 
   832  0019                     	;# 
   833  001A                     	;# 
   834  001B                     	;# 
   835  001C                     	;# 
   836  008C                     	;# 
   837  008D                     	;# 
   838  008E                     	;# 
   839  008F                     	;# 
   840  0090                     	;# 
   841  0091                     	;# 
   842  0092                     	;# 
   843  0093                     	;# 
   844  0095                     	;# 
   845  0096                     	;# 
   846  0097                     	;# 
   847  0098                     	;# 
   848  0099                     	;# 
   849  009A                     	;# 
   850  009B                     	;# 
   851  009B                     	;# 
   852  009C                     	;# 
   853  009D                     	;# 
   854  009E                     	;# 
   855  009F                     	;# 
   856  010C                     	;# 
   857  010D                     	;# 
   858  010E                     	;# 
   859  010F                     	;# 
   860  0110                     	;# 
   861  0111                     	;# 
   862  0112                     	;# 
   863  0113                     	;# 
   864  0114                     	;# 
   865  0115                     	;# 
   866  0116                     	;# 
   867  0117                     	;# 
   868  0118                     	;# 
   869  0119                     	;# 
   870  011A                     	;# 
   871  011B                     	;# 
   872  011B                     	;# 
   873  011C                     	;# 
   874  018C                     	;# 
   875  018D                     	;# 
   876  018E                     	;# 
   877  018F                     	;# 
   878  0190                     	;# 
   879  0191                     	;# 
   880  0191                     	;# 
   881  0192                     	;# 
   882  0193                     	;# 
   883  0193                     	;# 
   884  0194                     	;# 
   885  0195                     	;# 
   886  0196                     	;# 
   887  0197                     	;# 
   888  0199                     	;# 
   889  0199                     	;# 
   890  0199                     	;# 
   891  019A                     	;# 
   892  019A                     	;# 
   893  019A                     	;# 
   894  019B                     	;# 
   895  019B                     	;# 
   896  019B                     	;# 
   897  019B                     	;# 
   898  019B                     	;# 
   899  019C                     	;# 
   900  019C                     	;# 
   901  019C                     	;# 
   902  019D                     	;# 
   903  019D                     	;# 
   904  019D                     	;# 
   905  019E                     	;# 
   906  019E                     	;# 
   907  019E                     	;# 
   908  019F                     	;# 
   909  019F                     	;# 
   910  019F                     	;# 
   911  019F                     	;# 
   912  019F                     	;# 
   913  020C                     	;# 
   914  020D                     	;# 
   915  020E                     	;# 
   916  020F                     	;# 
   917  0210                     	;# 
   918  0211                     	;# 
   919  0211                     	;# 
   920  0212                     	;# 
   921  0212                     	;# 
   922  0213                     	;# 
   923  0213                     	;# 
   924  0214                     	;# 
   925  0214                     	;# 
   926  0215                     	;# 
   927  0215                     	;# 
   928  0215                     	;# 
   929  0215                     	;# 
   930  0216                     	;# 
   931  0216                     	;# 
   932  0217                     	;# 
   933  0217                     	;# 
   934  028C                     	;# 
   935  028D                     	;# 
   936  028E                     	;# 
   937  028F                     	;# 
   938  0290                     	;# 
   939  0291                     	;# 
   940  0291                     	;# 
   941  0292                     	;# 
   942  0293                     	;# 
   943  0293                     	;# 
   944  0298                     	;# 
   945  0298                     	;# 
   946  0299                     	;# 
   947  029A                     	;# 
   948  029A                     	;# 
   949  029E                     	;# 
   950  030C                     	;# 
   951  030D                     	;# 
   952  030E                     	;# 
   953  030F                     	;# 
   954  0310                     	;# 
   955  038C                     	;# 
   956  038D                     	;# 
   957  038E                     	;# 
   958  038F                     	;# 
   959  0390                     	;# 
   960  0391                     	;# 
   961  0392                     	;# 
   962  0393                     	;# 
   963  0394                     	;# 
   964  0395                     	;# 
   965  0396                     	;# 
   966  0397                     	;# 
   967  0398                     	;# 
   968  0399                     	;# 
   969  039D                     	;# 
   970  039E                     	;# 
   971  039F                     	;# 
   972  0415                     	;# 
   973  0416                     	;# 
   974  0417                     	;# 
   975  041C                     	;# 
   976  041D                     	;# 
   977  041E                     	;# 
   978  0498                     	;# 
   979  0498                     	;# 
   980  0499                     	;# 
   981  049A                     	;# 
   982  049B                     	;# 
   983  049B                     	;# 
   984  049C                     	;# 
   985  049D                     	;# 
   986  049E                     	;# 
   987  049F                     	;# 
   988  0511                     	;# 
   989  0515                     	;# 
   990  0617                     	;# 
   991  0618                     	;# 
   992  0619                     	;# 
   993  0619                     	;# 
   994  061A                     	;# 
   995  061B                     	;# 
   996  061C                     	;# 
   997  061C                     	;# 
   998  0691                     	;# 
   999  0692                     	;# 
  1000  0693                     	;# 
  1001  0694                     	;# 
  1002  0695                     	;# 
  1003  0696                     	;# 
  1004  0697                     	;# 
  1005  0698                     	;# 
  1006  0699                     	;# 
  1007  069A                     	;# 
  1008  069B                     	;# 
  1009  069C                     	;# 
  1010  069D                     	;# 
  1011  069E                     	;# 
  1012  069F                     	;# 
  1013  0E0F                     	;# 
  1014  0E10                     	;# 
  1015  0E11                     	;# 
  1016  0E12                     	;# 
  1017  0E13                     	;# 
  1018  0E14                     	;# 
  1019  0E15                     	;# 
  1020  0E17                     	;# 
  1021  0E20                     	;# 
  1022  0E21                     	;# 
  1023  0E22                     	;# 
  1024  0E24                     	;# 
  1025  0E25                     	;# 
  1026  0E28                     	;# 
  1027  0E29                     	;# 
  1028  0E2A                     	;# 
  1029  0E2B                     	;# 
  1030  0E90                     	;# 
  1031  0E91                     	;# 
  1032  0E92                     	;# 
  1033  0E93                     	;# 
  1034  0E94                     	;# 
  1035  0E95                     	;# 
  1036  0E96                     	;# 
  1037  0E97                     	;# 
  1038  0E98                     	;# 
  1039  0E99                     	;# 
  1040  0E9A                     	;# 
  1041  0E9B                     	;# 
  1042  0E9C                     	;# 
  1043  0E9D                     	;# 
  1044  0E9E                     	;# 
  1045  0E9F                     	;# 
  1046  0EA0                     	;# 
  1047  0EA1                     	;# 
  1048  0EA2                     	;# 
  1049  0EA3                     	;# 
  1050  0EA4                     	;# 
  1051  0EA5                     	;# 
  1052  0EA6                     	;# 
  1053  0EA7                     	;# 
  1054  0EA8                     	;# 
  1055  0EA9                     	;# 
  1056  0EAA                     	;# 
  1057  0EAB                     	;# 
  1058  0EAC                     	;# 
  1059  0EAD                     	;# 
  1060  0EAE                     	;# 
  1061  0EAF                     	;# 
  1062  0EB0                     	;# 
  1063  0EB1                     	;# 
  1064  0EB2                     	;# 
  1065  0F0F                     	;# 
  1066  0F10                     	;# 
  1067  0F11                     	;# 
  1068  0F12                     	;# 
  1069  0F13                     	;# 
  1070  0F14                     	;# 
  1071  0F15                     	;# 
  1072  0F16                     	;# 
  1073  0F17                     	;# 
  1074  0F18                     	;# 
  1075  0F19                     	;# 
  1076  0F1A                     	;# 
  1077  0F1B                     	;# 
  1078  0F1C                     	;# 
  1079  0F1D                     	;# 
  1080  0F1E                     	;# 
  1081  0F1F                     	;# 
  1082  0F20                     	;# 
  1083  0F21                     	;# 
  1084  0F22                     	;# 
  1085  0F23                     	;# 
  1086  0F24                     	;# 
  1087  0F25                     	;# 
  1088  0F26                     	;# 
  1089  0F27                     	;# 
  1090  0F28                     	;# 
  1091  0F29                     	;# 
  1092  0F2A                     	;# 
  1093  0F2B                     	;# 
  1094  0F2C                     	;# 
  1095  0F2D                     	;# 
  1096  0F2E                     	;# 
  1097  0F2F                     	;# 
  1098  0F30                     	;# 
  1099  0F31                     	;# 
  1100  0F32                     	;# 
  1101  0F33                     	;# 
  1102  0F34                     	;# 
  1103  0F35                     	;# 
  1104  0F36                     	;# 
  1105  0F37                     	;# 
  1106  0FE4                     	;# 
  1107  0FE5                     	;# 
  1108  0FE6                     	;# 
  1109  0FE7                     	;# 
  1110  0FE8                     	;# 
  1111  0FE9                     	;# 
  1112  0FEA                     	;# 
  1113  0FEB                     	;# 
  1114  0FED                     	;# 
  1115  0FEE                     	;# 
  1116  0FEF                     	;# 
  1117  0000                     	;# 
  1118  0001                     	;# 
  1119  0002                     	;# 
  1120  0003                     	;# 
  1121  0004                     	;# 
  1122  0005                     	;# 
  1123  0006                     	;# 
  1124  0007                     	;# 
  1125  0008                     	;# 
  1126  0009                     	;# 
  1127  000A                     	;# 
  1128  000B                     	;# 
  1129  000C                     	;# 
  1130  000D                     	;# 
  1131  000E                     	;# 
  1132  000F                     	;# 
  1133  0010                     	;# 
  1134  0011                     	;# 
  1135  0012                     	;# 
  1136  0013                     	;# 
  1137  0015                     	;# 
  1138  0016                     	;# 
  1139  0016                     	;# 
  1140  0017                     	;# 
  1141  0018                     	;# 
  1142  0019                     	;# 
  1143  001A                     	;# 
  1144  001B                     	;# 
  1145  001C                     	;# 
  1146  008C                     	;# 
  1147  008D                     	;# 
  1148  008E                     	;# 
  1149  008F                     	;# 
  1150  0090                     	;# 
  1151  0091                     	;# 
  1152  0092                     	;# 
  1153  0093                     	;# 
  1154  0095                     	;# 
  1155  0096                     	;# 
  1156  0097                     	;# 
  1157  0098                     	;# 
  1158  0099                     	;# 
  1159  009A                     	;# 
  1160  009B                     	;# 
  1161  009B                     	;# 
  1162  009C                     	;# 
  1163  009D                     	;# 
  1164  009E                     	;# 
  1165  009F                     	;# 
  1166  010C                     	;# 
  1167  010D                     	;# 
  1168  010E                     	;# 
  1169  010F                     	;# 
  1170  0110                     	;# 
  1171  0111                     	;# 
  1172  0112                     	;# 
  1173  0113                     	;# 
  1174  0114                     	;# 
  1175  0115                     	;# 
  1176  0116                     	;# 
  1177  0117                     	;# 
  1178  0118                     	;# 
  1179  0119                     	;# 
  1180  011A                     	;# 
  1181  011B                     	;# 
  1182  011B                     	;# 
  1183  011C                     	;# 
  1184  018C                     	;# 
  1185  018D                     	;# 
  1186  018E                     	;# 
  1187  018F                     	;# 
  1188  0190                     	;# 
  1189  0191                     	;# 
  1190  0191                     	;# 
  1191  0192                     	;# 
  1192  0193                     	;# 
  1193  0193                     	;# 
  1194  0194                     	;# 
  1195  0195                     	;# 
  1196  0196                     	;# 
  1197  0197                     	;# 
  1198  0199                     	;# 
  1199  0199                     	;# 
  1200  0199                     	;# 
  1201  019A                     	;# 
  1202  019A                     	;# 
  1203  019A                     	;# 
  1204  019B                     	;# 
  1205  019B                     	;# 
  1206  019B                     	;# 
  1207  019B                     	;# 
  1208  019B                     	;# 
  1209  019C                     	;# 
  1210  019C                     	;# 
  1211  019C                     	;# 
  1212  019D                     	;# 
  1213  019D                     	;# 
  1214  019D                     	;# 
  1215  019E                     	;# 
  1216  019E                     	;# 
  1217  019E                     	;# 
  1218  019F                     	;# 
  1219  019F                     	;# 
  1220  019F                     	;# 
  1221  019F                     	;# 
  1222  019F                     	;# 
  1223  020C                     	;# 
  1224  020D                     	;# 
  1225  020E                     	;# 
  1226  020F                     	;# 
  1227  0210                     	;# 
  1228  0211                     	;# 
  1229  0211                     	;# 
  1230  0212                     	;# 
  1231  0212                     	;# 
  1232  0213                     	;# 
  1233  0213                     	;# 
  1234  0214                     	;# 
  1235  0214                     	;# 
  1236  0215                     	;# 
  1237  0215                     	;# 
  1238  0215                     	;# 
  1239  0215                     	;# 
  1240  0216                     	;# 
  1241  0216                     	;# 
  1242  0217                     	;# 
  1243  0217                     	;# 
  1244  028C                     	;# 
  1245  028D                     	;# 
  1246  028E                     	;# 
  1247  028F                     	;# 
  1248  0290                     	;# 
  1249  0291                     	;# 
  1250  0291                     	;# 
  1251  0292                     	;# 
  1252  0293                     	;# 
  1253  0293                     	;# 
  1254  0298                     	;# 
  1255  0298                     	;# 
  1256  0299                     	;# 
  1257  029A                     	;# 
  1258  029A                     	;# 
  1259  029E                     	;# 
  1260  030C                     	;# 
  1261  030D                     	;# 
  1262  030E                     	;# 
  1263  030F                     	;# 
  1264  0310                     	;# 
  1265  038C                     	;# 
  1266  038D                     	;# 
  1267  038E                     	;# 
  1268  038F                     	;# 
  1269  0390                     	;# 
  1270  0391                     	;# 
  1271  0392                     	;# 
  1272  0393                     	;# 
  1273  0394                     	;# 
  1274  0395                     	;# 
  1275  0396                     	;# 
  1276  0397                     	;# 
  1277  0398                     	;# 
  1278  0399                     	;# 
  1279  039D                     	;# 
  1280  039E                     	;# 
  1281  039F                     	;# 
  1282  0415                     	;# 
  1283  0416                     	;# 
  1284  0417                     	;# 
  1285  041C                     	;# 
  1286  041D                     	;# 
  1287  041E                     	;# 
  1288  0498                     	;# 
  1289  0498                     	;# 
  1290  0499                     	;# 
  1291  049A                     	;# 
  1292  049B                     	;# 
  1293  049B                     	;# 
  1294  049C                     	;# 
  1295  049D                     	;# 
  1296  049E                     	;# 
  1297  049F                     	;# 
  1298  0511                     	;# 
  1299  0515                     	;# 
  1300  0617                     	;# 
  1301  0618                     	;# 
  1302  0619                     	;# 
  1303  0619                     	;# 
  1304  061A                     	;# 
  1305  061B                     	;# 
  1306  061C                     	;# 
  1307  061C                     	;# 
  1308  0691                     	;# 
  1309  0692                     	;# 
  1310  0693                     	;# 
  1311  0694                     	;# 
  1312  0695                     	;# 
  1313  0696                     	;# 
  1314  0697                     	;# 
  1315  0698                     	;# 
  1316  0699                     	;# 
  1317  069A                     	;# 
  1318  069B                     	;# 
  1319  069C                     	;# 
  1320  069D                     	;# 
  1321  069E                     	;# 
  1322  069F                     	;# 
  1323  0E0F                     	;# 
  1324  0E10                     	;# 
  1325  0E11                     	;# 
  1326  0E12                     	;# 
  1327  0E13                     	;# 
  1328  0E14                     	;# 
  1329  0E15                     	;# 
  1330  0E17                     	;# 
  1331  0E20                     	;# 
  1332  0E21                     	;# 
  1333  0E22                     	;# 
  1334  0E24                     	;# 
  1335  0E25                     	;# 
  1336  0E28                     	;# 
  1337  0E29                     	;# 
  1338  0E2A                     	;# 
  1339  0E2B                     	;# 
  1340  0E90                     	;# 
  1341  0E91                     	;# 
  1342  0E92                     	;# 
  1343  0E93                     	;# 
  1344  0E94                     	;# 
  1345  0E95                     	;# 
  1346  0E96                     	;# 
  1347  0E97                     	;# 
  1348  0E98                     	;# 
  1349  0E99                     	;# 
  1350  0E9A                     	;# 
  1351  0E9B                     	;# 
  1352  0E9C                     	;# 
  1353  0E9D                     	;# 
  1354  0E9E                     	;# 
  1355  0E9F                     	;# 
  1356  0EA0                     	;# 
  1357  0EA1                     	;# 
  1358  0EA2                     	;# 
  1359  0EA3                     	;# 
  1360  0EA4                     	;# 
  1361  0EA5                     	;# 
  1362  0EA6                     	;# 
  1363  0EA7                     	;# 
  1364  0EA8                     	;# 
  1365  0EA9                     	;# 
  1366  0EAA                     	;# 
  1367  0EAB                     	;# 
  1368  0EAC                     	;# 
  1369  0EAD                     	;# 
  1370  0EAE                     	;# 
  1371  0EAF                     	;# 
  1372  0EB0                     	;# 
  1373  0EB1                     	;# 
  1374  0EB2                     	;# 
  1375  0F0F                     	;# 
  1376  0F10                     	;# 
  1377  0F11                     	;# 
  1378  0F12                     	;# 
  1379  0F13                     	;# 
  1380  0F14                     	;# 
  1381  0F15                     	;# 
  1382  0F16                     	;# 
  1383  0F17                     	;# 
  1384  0F18                     	;# 
  1385  0F19                     	;# 
  1386  0F1A                     	;# 
  1387  0F1B                     	;# 
  1388  0F1C                     	;# 
  1389  0F1D                     	;# 
  1390  0F1E                     	;# 
  1391  0F1F                     	;# 
  1392  0F20                     	;# 
  1393  0F21                     	;# 
  1394  0F22                     	;# 
  1395  0F23                     	;# 
  1396  0F24                     	;# 
  1397  0F25                     	;# 
  1398  0F26                     	;# 
  1399  0F27                     	;# 
  1400  0F28                     	;# 
  1401  0F29                     	;# 
  1402  0F2A                     	;# 
  1403  0F2B                     	;# 
  1404  0F2C                     	;# 
  1405  0F2D                     	;# 
  1406  0F2E                     	;# 
  1407  0F2F                     	;# 
  1408  0F30                     	;# 
  1409  0F31                     	;# 
  1410  0F32                     	;# 
  1411  0F33                     	;# 
  1412  0F34                     	;# 
  1413  0F35                     	;# 
  1414  0F36                     	;# 
  1415  0F37                     	;# 
  1416  0FE4                     	;# 
  1417  0FE5                     	;# 
  1418  0FE6                     	;# 
  1419  0FE7                     	;# 
  1420  0FE8                     	;# 
  1421  0FE9                     	;# 
  1422  0FEA                     	;# 
  1423  0FEB                     	;# 
  1424  0FED                     	;# 
  1425  0FEE                     	;# 
  1426  0FEF                     	;# 
  1427  0000                     	;# 
  1428  0001                     	;# 
  1429  0002                     	;# 
  1430  0003                     	;# 
  1431  0004                     	;# 
  1432  0005                     	;# 
  1433  0006                     	;# 
  1434  0007                     	;# 
  1435  0008                     	;# 
  1436  0009                     	;# 
  1437  000A                     	;# 
  1438  000B                     	;# 
  1439  000C                     	;# 
  1440  000D                     	;# 
  1441  000E                     	;# 
  1442  000F                     	;# 
  1443  0010                     	;# 
  1444  0011                     	;# 
  1445  0012                     	;# 
  1446  0013                     	;# 
  1447  0015                     	;# 
  1448  0016                     	;# 
  1449  0016                     	;# 
  1450  0017                     	;# 
  1451  0018                     	;# 
  1452  0019                     	;# 
  1453  001A                     	;# 
  1454  001B                     	;# 
  1455  001C                     	;# 
  1456  008C                     	;# 
  1457  008D                     	;# 
  1458  008E                     	;# 
  1459  008F                     	;# 
  1460  0090                     	;# 
  1461  0091                     	;# 
  1462  0092                     	;# 
  1463  0093                     	;# 
  1464  0095                     	;# 
  1465  0096                     	;# 
  1466  0097                     	;# 
  1467  0098                     	;# 
  1468  0099                     	;# 
  1469  009A                     	;# 
  1470  009B                     	;# 
  1471  009B                     	;# 
  1472  009C                     	;# 
  1473  009D                     	;# 
  1474  009E                     	;# 
  1475  009F                     	;# 
  1476  010C                     	;# 
  1477  010D                     	;# 
  1478  010E                     	;# 
  1479  010F                     	;# 
  1480  0110                     	;# 
  1481  0111                     	;# 
  1482  0112                     	;# 
  1483  0113                     	;# 
  1484  0114                     	;# 
  1485  0115                     	;# 
  1486  0116                     	;# 
  1487  0117                     	;# 
  1488  0118                     	;# 
  1489  0119                     	;# 
  1490  011A                     	;# 
  1491  011B                     	;# 
  1492  011B                     	;# 
  1493  011C                     	;# 
  1494  018C                     	;# 
  1495  018D                     	;# 
  1496  018E                     	;# 
  1497  018F                     	;# 
  1498  0190                     	;# 
  1499  0191                     	;# 
  1500  0191                     	;# 
  1501  0192                     	;# 
  1502  0193                     	;# 
  1503  0193                     	;# 
  1504  0194                     	;# 
  1505  0195                     	;# 
  1506  0196                     	;# 
  1507  0197                     	;# 
  1508  0199                     	;# 
  1509  0199                     	;# 
  1510  0199                     	;# 
  1511  019A                     	;# 
  1512  019A                     	;# 
  1513  019A                     	;# 
  1514  019B                     	;# 
  1515  019B                     	;# 
  1516  019B                     	;# 
  1517  019B                     	;# 
  1518  019B                     	;# 
  1519  019C                     	;# 
  1520  019C                     	;# 
  1521  019C                     	;# 
  1522  019D                     	;# 
  1523  019D                     	;# 
  1524  019D                     	;# 
  1525  019E                     	;# 
  1526  019E                     	;# 
  1527  019E                     	;# 
  1528  019F                     	;# 
  1529  019F                     	;# 
  1530  019F                     	;# 
  1531  019F                     	;# 
  1532  019F                     	;# 
  1533  020C                     	;# 
  1534  020D                     	;# 
  1535  020E                     	;# 
  1536  020F                     	;# 
  1537  0210                     	;# 
  1538  0211                     	;# 
  1539  0211                     	;# 
  1540  0212                     	;# 
  1541  0212                     	;# 
  1542  0213                     	;# 
  1543  0213                     	;# 
  1544  0214                     	;# 
  1545  0214                     	;# 
  1546  0215                     	;# 
  1547  0215                     	;# 
  1548  0215                     	;# 
  1549  0215                     	;# 
  1550  0216                     	;# 
  1551  0216                     	;# 
  1552  0217                     	;# 
  1553  0217                     	;# 
  1554  028C                     	;# 
  1555  028D                     	;# 
  1556  028E                     	;# 
  1557  028F                     	;# 
  1558  0290                     	;# 
  1559  0291                     	;# 
  1560  0291                     	;# 
  1561  0292                     	;# 
  1562  0293                     	;# 
  1563  0293                     	;# 
  1564  0298                     	;# 
  1565  0298                     	;# 
  1566  0299                     	;# 
  1567  029A                     	;# 
  1568  029A                     	;# 
  1569  029E                     	;# 
  1570  030C                     	;# 
  1571  030D                     	;# 
  1572  030E                     	;# 
  1573  030F                     	;# 
  1574  0310                     	;# 
  1575  038C                     	;# 
  1576  038D                     	;# 
  1577  038E                     	;# 
  1578  038F                     	;# 
  1579  0390                     	;# 
  1580  0391                     	;# 
  1581  0392                     	;# 
  1582  0393                     	;# 
  1583  0394                     	;# 
  1584  0395                     	;# 
  1585  0396                     	;# 
  1586  0397                     	;# 
  1587  0398                     	;# 
  1588  0399                     	;# 
  1589  039D                     	;# 
  1590  039E                     	;# 
  1591  039F                     	;# 
  1592  0415                     	;# 
  1593  0416                     	;# 
  1594  0417                     	;# 
  1595  041C                     	;# 
  1596  041D                     	;# 
  1597  041E                     	;# 
  1598  0498                     	;# 
  1599  0498                     	;# 
  1600  0499                     	;# 
  1601  049A                     	;# 
  1602  049B                     	;# 
  1603  049B                     	;# 
  1604  049C                     	;# 
  1605  049D                     	;# 
  1606  049E                     	;# 
  1607  049F                     	;# 
  1608  0511                     	;# 
  1609  0515                     	;# 
  1610  0617                     	;# 
  1611  0618                     	;# 
  1612  0619                     	;# 
  1613  0619                     	;# 
  1614  061A                     	;# 
  1615  061B                     	;# 
  1616  061C                     	;# 
  1617  061C                     	;# 
  1618  0691                     	;# 
  1619  0692                     	;# 
  1620  0693                     	;# 
  1621  0694                     	;# 
  1622  0695                     	;# 
  1623  0696                     	;# 
  1624  0697                     	;# 
  1625  0698                     	;# 
  1626  0699                     	;# 
  1627  069A                     	;# 
  1628  069B                     	;# 
  1629  069C                     	;# 
  1630  069D                     	;# 
  1631  069E                     	;# 
  1632  069F                     	;# 
  1633  0E0F                     	;# 
  1634  0E10                     	;# 
  1635  0E11                     	;# 
  1636  0E12                     	;# 
  1637  0E13                     	;# 
  1638  0E14                     	;# 
  1639  0E15                     	;# 
  1640  0E17                     	;# 
  1641  0E20                     	;# 
  1642  0E21                     	;# 
  1643  0E22                     	;# 
  1644  0E24                     	;# 
  1645  0E25                     	;# 
  1646  0E28                     	;# 
  1647  0E29                     	;# 
  1648  0E2A                     	;# 
  1649  0E2B                     	;# 
  1650  0E90                     	;# 
  1651  0E91                     	;# 
  1652  0E92                     	;# 
  1653  0E93                     	;# 
  1654  0E94                     	;# 
  1655  0E95                     	;# 
  1656  0E96                     	;# 
  1657  0E97                     	;# 
  1658  0E98                     	;# 
  1659  0E99                     	;# 
  1660  0E9A                     	;# 
  1661  0E9B                     	;# 
  1662  0E9C                     	;# 
  1663  0E9D                     	;# 
  1664  0E9E                     	;# 
  1665  0E9F                     	;# 
  1666  0EA0                     	;# 
  1667  0EA1                     	;# 
  1668  0EA2                     	;# 
  1669  0EA3                     	;# 
  1670  0EA4                     	;# 
  1671  0EA5                     	;# 
  1672  0EA6                     	;# 
  1673  0EA7                     	;# 
  1674  0EA8                     	;# 
  1675  0EA9                     	;# 
  1676  0EAA                     	;# 
  1677  0EAB                     	;# 
  1678  0EAC                     	;# 
  1679  0EAD                     	;# 
  1680  0EAE                     	;# 
  1681  0EAF                     	;# 
  1682  0EB0                     	;# 
  1683  0EB1                     	;# 
  1684  0EB2                     	;# 
  1685  0F0F                     	;# 
  1686  0F10                     	;# 
  1687  0F11                     	;# 
  1688  0F12                     	;# 
  1689  0F13                     	;# 
  1690  0F14                     	;# 
  1691  0F15                     	;# 
  1692  0F16                     	;# 
  1693  0F17                     	;# 
  1694  0F18                     	;# 
  1695  0F19                     	;# 
  1696  0F1A                     	;# 
  1697  0F1B                     	;# 
  1698  0F1C                     	;# 
  1699  0F1D                     	;# 
  1700  0F1E                     	;# 
  1701  0F1F                     	;# 
  1702  0F20                     	;# 
  1703  0F21                     	;# 
  1704  0F22                     	;# 
  1705  0F23                     	;# 
  1706  0F24                     	;# 
  1707  0F25                     	;# 
  1708  0F26                     	;# 
  1709  0F27                     	;# 
  1710  0F28                     	;# 
  1711  0F29                     	;# 
  1712  0F2A                     	;# 
  1713  0F2B                     	;# 
  1714  0F2C                     	;# 
  1715  0F2D                     	;# 
  1716  0F2E                     	;# 
  1717  0F2F                     	;# 
  1718  0F30                     	;# 
  1719  0F31                     	;# 
  1720  0F32                     	;# 
  1721  0F33                     	;# 
  1722  0F34                     	;# 
  1723  0F35                     	;# 
  1724  0F36                     	;# 
  1725  0F37                     	;# 
  1726  0FE4                     	;# 
  1727  0FE5                     	;# 
  1728  0FE6                     	;# 
  1729  0FE7                     	;# 
  1730  0FE8                     	;# 
  1731  0FE9                     	;# 
  1732  0FEA                     	;# 
  1733  0FEB                     	;# 
  1734  0FED                     	;# 
  1735  0FEE                     	;# 
  1736  0FEF                     	;# 
  1737  0000                     	;# 
  1738  0001                     	;# 
  1739  0002                     	;# 
  1740  0003                     	;# 
  1741  0004                     	;# 
  1742  0005                     	;# 
  1743  0006                     	;# 
  1744  0007                     	;# 
  1745  0008                     	;# 
  1746  0009                     	;# 
  1747  000A                     	;# 
  1748  000B                     	;# 
  1749  000C                     	;# 
  1750  000D                     	;# 
  1751  000E                     	;# 
  1752  000F                     	;# 
  1753  0010                     	;# 
  1754  0011                     	;# 
  1755  0012                     	;# 
  1756  0013                     	;# 
  1757  0015                     	;# 
  1758  0016                     	;# 
  1759  0016                     	;# 
  1760  0017                     	;# 
  1761  0018                     	;# 
  1762  0019                     	;# 
  1763  001A                     	;# 
  1764  001B                     	;# 
  1765  001C                     	;# 
  1766  008C                     	;# 
  1767  008D                     	;# 
  1768  008E                     	;# 
  1769  008F                     	;# 
  1770  0090                     	;# 
  1771  0091                     	;# 
  1772  0092                     	;# 
  1773  0093                     	;# 
  1774  0095                     	;# 
  1775  0096                     	;# 
  1776  0097                     	;# 
  1777  0098                     	;# 
  1778  0099                     	;# 
  1779  009A                     	;# 
  1780  009B                     	;# 
  1781  009B                     	;# 
  1782  009C                     	;# 
  1783  009D                     	;# 
  1784  009E                     	;# 
  1785  009F                     	;# 
  1786  010C                     	;# 
  1787  010D                     	;# 
  1788  010E                     	;# 
  1789  010F                     	;# 
  1790  0110                     	;# 
  1791  0111                     	;# 
  1792  0112                     	;# 
  1793  0113                     	;# 
  1794  0114                     	;# 
  1795  0115                     	;# 
  1796  0116                     	;# 
  1797  0117                     	;# 
  1798  0118                     	;# 
  1799  0119                     	;# 
  1800  011A                     	;# 
  1801  011B                     	;# 
  1802  011B                     	;# 
  1803  011C                     	;# 
  1804  018C                     	;# 
  1805  018D                     	;# 
  1806  018E                     	;# 
  1807  018F                     	;# 
  1808  0190                     	;# 
  1809  0191                     	;# 
  1810  0191                     	;# 
  1811  0192                     	;# 
  1812  0193                     	;# 
  1813  0193                     	;# 
  1814  0194                     	;# 
  1815  0195                     	;# 
  1816  0196                     	;# 
  1817  0197                     	;# 
  1818  0199                     	;# 
  1819  0199                     	;# 
  1820  0199                     	;# 
  1821  019A                     	;# 
  1822  019A                     	;# 
  1823  019A                     	;# 
  1824  019B                     	;# 
  1825  019B                     	;# 
  1826  019B                     	;# 
  1827  019B                     	;# 
  1828  019B                     	;# 
  1829  019C                     	;# 
  1830  019C                     	;# 
  1831  019C                     	;# 
  1832  019D                     	;# 
  1833  019D                     	;# 
  1834  019D                     	;# 
  1835  019E                     	;# 
  1836  019E                     	;# 
  1837  019E                     	;# 
  1838  019F                     	;# 
  1839  019F                     	;# 
  1840  019F                     	;# 
  1841  019F                     	;# 
  1842  019F                     	;# 
  1843  020C                     	;# 
  1844  020D                     	;# 
  1845  020E                     	;# 
  1846  020F                     	;# 
  1847  0210                     	;# 
  1848  0211                     	;# 
  1849  0211                     	;# 
  1850  0212                     	;# 
  1851  0212                     	;# 
  1852  0213                     	;# 
  1853  0213                     	;# 
  1854  0214                     	;# 
  1855  0214                     	;# 
  1856  0215                     	;# 
  1857  0215                     	;# 
  1858  0215                     	;# 
  1859  0215                     	;# 
  1860  0216                     	;# 
  1861  0216                     	;# 
  1862  0217                     	;# 
  1863  0217                     	;# 
  1864  028C                     	;# 
  1865  028D                     	;# 
  1866  028E                     	;# 
  1867  028F                     	;# 
  1868  0290                     	;# 
  1869  0291                     	;# 
  1870  0291                     	;# 
  1871  0292                     	;# 
  1872  0293                     	;# 
  1873  0293                     	;# 
  1874  0298                     	;# 
  1875  0298                     	;# 
  1876  0299                     	;# 
  1877  029A                     	;# 
  1878  029A                     	;# 
  1879  029E                     	;# 
  1880  030C                     	;# 
  1881  030D                     	;# 
  1882  030E                     	;# 
  1883  030F                     	;# 
  1884  0310                     	;# 
  1885  038C                     	;# 
  1886  038D                     	;# 
  1887  038E                     	;# 
  1888  038F                     	;# 
  1889  0390                     	;# 
  1890  0391                     	;# 
  1891  0392                     	;# 
  1892  0393                     	;# 
  1893  0394                     	;# 
  1894  0395                     	;# 
  1895  0396                     	;# 
  1896  0397                     	;# 
  1897  0398                     	;# 
  1898  0399                     	;# 
  1899  039D                     	;# 
  1900  039E                     	;# 
  1901  039F                     	;# 
  1902  0415                     	;# 
  1903  0416                     	;# 
  1904  0417                     	;# 
  1905  041C                     	;# 
  1906  041D                     	;# 
  1907  041E                     	;# 
  1908  0498                     	;# 
  1909  0498                     	;# 
  1910  0499                     	;# 
  1911  049A                     	;# 
  1912  049B                     	;# 
  1913  049B                     	;# 
  1914  049C                     	;# 
  1915  049D                     	;# 
  1916  049E                     	;# 
  1917  049F                     	;# 
  1918  0511                     	;# 
  1919  0515                     	;# 
  1920  0617                     	;# 
  1921  0618                     	;# 
  1922  0619                     	;# 
  1923  0619                     	;# 
  1924  061A                     	;# 
  1925  061B                     	;# 
  1926  061C                     	;# 
  1927  061C                     	;# 
  1928  0691                     	;# 
  1929  0692                     	;# 
  1930  0693                     	;# 
  1931  0694                     	;# 
  1932  0695                     	;# 
  1933  0696                     	;# 
  1934  0697                     	;# 
  1935  0698                     	;# 
  1936  0699                     	;# 
  1937  069A                     	;# 
  1938  069B                     	;# 
  1939  069C                     	;# 
  1940  069D                     	;# 
  1941  069E                     	;# 
  1942  069F                     	;# 
  1943  0E0F                     	;# 
  1944  0E10                     	;# 
  1945  0E11                     	;# 
  1946  0E12                     	;# 
  1947  0E13                     	;# 
  1948  0E14                     	;# 
  1949  0E15                     	;# 
  1950  0E17                     	;# 
  1951  0E20                     	;# 
  1952  0E21                     	;# 
  1953  0E22                     	;# 
  1954  0E24                     	;# 
  1955  0E25                     	;# 
  1956  0E28                     	;# 
  1957  0E29                     	;# 
  1958  0E2A                     	;# 
  1959  0E2B                     	;# 
  1960  0E90                     	;# 
  1961  0E91                     	;# 
  1962  0E92                     	;# 
  1963  0E93                     	;# 
  1964  0E94                     	;# 
  1965  0E95                     	;# 
  1966  0E96                     	;# 
  1967  0E97                     	;# 
  1968  0E98                     	;# 
  1969  0E99                     	;# 
  1970  0E9A                     	;# 
  1971  0E9B                     	;# 
  1972  0E9C                     	;# 
  1973  0E9D                     	;# 
  1974  0E9E                     	;# 
  1975  0E9F                     	;# 
  1976  0EA0                     	;# 
  1977  0EA1                     	;# 
  1978  0EA2                     	;# 
  1979  0EA3                     	;# 
  1980  0EA4                     	;# 
  1981  0EA5                     	;# 
  1982  0EA6                     	;# 
  1983  0EA7                     	;# 
  1984  0EA8                     	;# 
  1985  0EA9                     	;# 
  1986  0EAA                     	;# 
  1987  0EAB                     	;# 
  1988  0EAC                     	;# 
  1989  0EAD                     	;# 
  1990  0EAE                     	;# 
  1991  0EAF                     	;# 
  1992  0EB0                     	;# 
  1993  0EB1                     	;# 
  1994  0EB2                     	;# 
  1995  0F0F                     	;# 
  1996  0F10                     	;# 
  1997  0F11                     	;# 
  1998  0F12                     	;# 
  1999  0F13                     	;# 
  2000  0F14                     	;# 
  2001  0F15                     	;# 
  2002  0F16                     	;# 
  2003  0F17                     	;# 
  2004  0F18                     	;# 
  2005  0F19                     	;# 
  2006  0F1A                     	;# 
  2007  0F1B                     	;# 
  2008  0F1C                     	;# 
  2009  0F1D                     	;# 
  2010  0F1E                     	;# 
  2011  0F1F                     	;# 
  2012  0F20                     	;# 
  2013  0F21                     	;# 
  2014  0F22                     	;# 
  2015  0F23                     	;# 
  2016  0F24                     	;# 
  2017  0F25                     	;# 
  2018  0F26                     	;# 
  2019  0F27                     	;# 
  2020  0F28                     	;# 
  2021  0F29                     	;# 
  2022  0F2A                     	;# 
  2023  0F2B                     	;# 
  2024  0F2C                     	;# 
  2025  0F2D                     	;# 
  2026  0F2E                     	;# 
  2027  0F2F                     	;# 
  2028  0F30                     	;# 
  2029  0F31                     	;# 
  2030  0F32                     	;# 
  2031  0F33                     	;# 
  2032  0F34                     	;# 
  2033  0F35                     	;# 
  2034  0F36                     	;# 
  2035  0F37                     	;# 
  2036  0FE4                     	;# 
  2037  0FE5                     	;# 
  2038  0FE6                     	;# 
  2039  0FE7                     	;# 
  2040  0FE8                     	;# 
  2041  0FE9                     	;# 
  2042  0FEA                     	;# 
  2043  0FEB                     	;# 
  2044  0FED                     	;# 
  2045  0FEE                     	;# 
  2046  0FEF                     	;# 
  2047  0000                     	;# 
  2048  0001                     	;# 
  2049  0002                     	;# 
  2050  0003                     	;# 
  2051  0004                     	;# 
  2052  0005                     	;# 
  2053  0006                     	;# 
  2054  0007                     	;# 
  2055  0008                     	;# 
  2056  0009                     	;# 
  2057  000A                     	;# 
  2058  000B                     	;# 
  2059  000C                     	;# 
  2060  000D                     	;# 
  2061  000E                     	;# 
  2062  000F                     	;# 
  2063  0010                     	;# 
  2064  0011                     	;# 
  2065  0012                     	;# 
  2066  0013                     	;# 
  2067  0015                     	;# 
  2068  0016                     	;# 
  2069  0016                     	;# 
  2070  0017                     	;# 
  2071  0018                     	;# 
  2072  0019                     	;# 
  2073  001A                     	;# 
  2074  001B                     	;# 
  2075  001C                     	;# 
  2076  008C                     	;# 
  2077  008D                     	;# 
  2078  008E                     	;# 
  2079  008F                     	;# 
  2080  0090                     	;# 
  2081  0091                     	;# 
  2082  0092                     	;# 
  2083  0093                     	;# 
  2084  0095                     	;# 
  2085  0096                     	;# 
  2086  0097                     	;# 
  2087  0098                     	;# 
  2088  0099                     	;# 
  2089  009A                     	;# 
  2090  009B                     	;# 
  2091  009B                     	;# 
  2092  009C                     	;# 
  2093  009D                     	;# 
  2094  009E                     	;# 
  2095  009F                     	;# 
  2096  010C                     	;# 
  2097  010D                     	;# 
  2098  010E                     	;# 
  2099  010F                     	;# 
  2100  0110                     	;# 
  2101  0111                     	;# 
  2102  0112                     	;# 
  2103  0113                     	;# 
  2104  0114                     	;# 
  2105  0115                     	;# 
  2106  0116                     	;# 
  2107  0117                     	;# 
  2108  0118                     	;# 
  2109  0119                     	;# 
  2110  011A                     	;# 
  2111  011B                     	;# 
  2112  011B                     	;# 
  2113  011C                     	;# 
  2114  018C                     	;# 
  2115  018D                     	;# 
  2116  018E                     	;# 
  2117  018F                     	;# 
  2118  0190                     	;# 
  2119  0191                     	;# 
  2120  0191                     	;# 
  2121  0192                     	;# 
  2122  0193                     	;# 
  2123  0193                     	;# 
  2124  0194                     	;# 
  2125  0195                     	;# 
  2126  0196                     	;# 
  2127  0197                     	;# 
  2128  0199                     	;# 
  2129  0199                     	;# 
  2130  0199                     	;# 
  2131  019A                     	;# 
  2132  019A                     	;# 
  2133  019A                     	;# 
  2134  019B                     	;# 
  2135  019B                     	;# 
  2136  019B                     	;# 
  2137  019B                     	;# 
  2138  019B                     	;# 
  2139  019C                     	;# 
  2140  019C                     	;# 
  2141  019C                     	;# 
  2142  019D                     	;# 
  2143  019D                     	;# 
  2144  019D                     	;# 
  2145  019E                     	;# 
  2146  019E                     	;# 
  2147  019E                     	;# 
  2148  019F                     	;# 
  2149  019F                     	;# 
  2150  019F                     	;# 
  2151  019F                     	;# 
  2152  019F                     	;# 
  2153  020C                     	;# 
  2154  020D                     	;# 
  2155  020E                     	;# 
  2156  020F                     	;# 
  2157  0210                     	;# 
  2158  0211                     	;# 
  2159  0211                     	;# 
  2160  0212                     	;# 
  2161  0212                     	;# 
  2162  0213                     	;# 
  2163  0213                     	;# 
  2164  0214                     	;# 
  2165  0214                     	;# 
  2166  0215                     	;# 
  2167  0215                     	;# 
  2168  0215                     	;# 
  2169  0215                     	;# 
  2170  0216                     	;# 
  2171  0216                     	;# 
  2172  0217                     	;# 
  2173  0217                     	;# 
  2174  028C                     	;# 
  2175  028D                     	;# 
  2176  028E                     	;# 
  2177  028F                     	;# 
  2178  0290                     	;# 
  2179  0291                     	;# 
  2180  0291                     	;# 
  2181  0292                     	;# 
  2182  0293                     	;# 
  2183  0293                     	;# 
  2184  0298                     	;# 
  2185  0298                     	;# 
  2186  0299                     	;# 
  2187  029A                     	;# 
  2188  029A                     	;# 
  2189  029E                     	;# 
  2190  030C                     	;# 
  2191  030D                     	;# 
  2192  030E                     	;# 
  2193  030F                     	;# 
  2194  0310                     	;# 
  2195  038C                     	;# 
  2196  038D                     	;# 
  2197  038E                     	;# 
  2198  038F                     	;# 
  2199  0390                     	;# 
  2200  0391                     	;# 
  2201  0392                     	;# 
  2202  0393                     	;# 
  2203  0394                     	;# 
  2204  0395                     	;# 
  2205  0396                     	;# 
  2206  0397                     	;# 
  2207  0398                     	;# 
  2208  0399                     	;# 
  2209  039D                     	;# 
  2210  039E                     	;# 
  2211  039F                     	;# 
  2212  0415                     	;# 
  2213  0416                     	;# 
  2214  0417                     	;# 
  2215  041C                     	;# 
  2216  041D                     	;# 
  2217  041E                     	;# 
  2218  0498                     	;# 
  2219  0498                     	;# 
  2220  0499                     	;# 
  2221  049A                     	;# 
  2222  049B                     	;# 
  2223  049B                     	;# 
  2224  049C                     	;# 
  2225  049D                     	;# 
  2226  049E                     	;# 
  2227  049F                     	;# 
  2228  0511                     	;# 
  2229  0515                     	;# 
  2230  0617                     	;# 
  2231  0618                     	;# 
  2232  0619                     	;# 
  2233  0619                     	;# 
  2234  061A                     	;# 
  2235  061B                     	;# 
  2236  061C                     	;# 
  2237  061C                     	;# 
  2238  0691                     	;# 
  2239  0692                     	;# 
  2240  0693                     	;# 
  2241  0694                     	;# 
  2242  0695                     	;# 
  2243  0696                     	;# 
  2244  0697                     	;# 
  2245  0698                     	;# 
  2246  0699                     	;# 
  2247  069A                     	;# 
  2248  069B                     	;# 
  2249  069C                     	;# 
  2250  069D                     	;# 
  2251  069E                     	;# 
  2252  069F                     	;# 
  2253  0E0F                     	;# 
  2254  0E10                     	;# 
  2255  0E11                     	;# 
  2256  0E12                     	;# 
  2257  0E13                     	;# 
  2258  0E14                     	;# 
  2259  0E15                     	;# 
  2260  0E17                     	;# 
  2261  0E20                     	;# 
  2262  0E21                     	;# 
  2263  0E22                     	;# 
  2264  0E24                     	;# 
  2265  0E25                     	;# 
  2266  0E28                     	;# 
  2267  0E29                     	;# 
  2268  0E2A                     	;# 
  2269  0E2B                     	;# 
  2270  0E90                     	;# 
  2271  0E91                     	;# 
  2272  0E92                     	;# 
  2273  0E93                     	;# 
  2274  0E94                     	;# 
  2275  0E95                     	;# 
  2276  0E96                     	;# 
  2277  0E97                     	;# 
  2278  0E98                     	;# 
  2279  0E99                     	;# 
  2280  0E9A                     	;# 
  2281  0E9B                     	;# 
  2282  0E9C                     	;# 
  2283  0E9D                     	;# 
  2284  0E9E                     	;# 
  2285  0E9F                     	;# 
  2286  0EA0                     	;# 
  2287  0EA1                     	;# 
  2288  0EA2                     	;# 
  2289  0EA3                     	;# 
  2290  0EA4                     	;# 
  2291  0EA5                     	;# 
  2292  0EA6                     	;# 
  2293  0EA7                     	;# 
  2294  0EA8                     	;# 
  2295  0EA9                     	;# 
  2296  0EAA                     	;# 
  2297  0EAB                     	;# 
  2298  0EAC                     	;# 
  2299  0EAD                     	;# 
  2300  0EAE                     	;# 
  2301  0EAF                     	;# 
  2302  0EB0                     	;# 
  2303  0EB1                     	;# 
  2304  0EB2                     	;# 
  2305  0F0F                     	;# 
  2306  0F10                     	;# 
  2307  0F11                     	;# 
  2308  0F12                     	;# 
  2309  0F13                     	;# 
  2310  0F14                     	;# 
  2311  0F15                     	;# 
  2312  0F16                     	;# 
  2313  0F17                     	;# 
  2314  0F18                     	;# 
  2315  0F19                     	;# 
  2316  0F1A                     	;# 
  2317  0F1B                     	;# 
  2318  0F1C                     	;# 
  2319  0F1D                     	;# 
  2320  0F1E                     	;# 
  2321  0F1F                     	;# 
  2322  0F20                     	;# 
  2323  0F21                     	;# 
  2324  0F22                     	;# 
  2325  0F23                     	;# 
  2326  0F24                     	;# 
  2327  0F25                     	;# 
  2328  0F26                     	;# 
  2329  0F27                     	;# 
  2330  0F28                     	;# 
  2331  0F29                     	;# 
  2332  0F2A                     	;# 
  2333  0F2B                     	;# 
  2334  0F2C                     	;# 
  2335  0F2D                     	;# 
  2336  0F2E                     	;# 
  2337  0F2F                     	;# 
  2338  0F30                     	;# 
  2339  0F31                     	;# 
  2340  0F32                     	;# 
  2341  0F33                     	;# 
  2342  0F34                     	;# 
  2343  0F35                     	;# 
  2344  0F36                     	;# 
  2345  0F37                     	;# 
  2346  0FE4                     	;# 
  2347  0FE5                     	;# 
  2348  0FE6                     	;# 
  2349  0FE7                     	;# 
  2350  0FE8                     	;# 
  2351  0FE9                     	;# 
  2352  0FEA                     	;# 
  2353  0FEB                     	;# 
  2354  0FED                     	;# 
  2355  0FEE                     	;# 
  2356  0FEF                     	;_messageBuffer
  2357                           
  2358                           	psect	idataBANK3
  2359  3389                     __pidataBANK3:	
  2360                           
  2361                           ;initializer for stoa@F1152
  2362  3389  3428               	retlw	40
  2363  338A  346E               	retlw	110
  2364  338B  3475               	retlw	117
  2365  338C  346C               	retlw	108
  2366  338D  346C               	retlw	108
  2367  338E  3429               	retlw	41
  2368  338F  3400               	retlw	0
  2369                           
  2370                           ;initializer for _thermistorBetaValue
  2371  3390  346B               	retlw	107
  2372  3391  340D               	retlw	13
  2373                           
  2374                           	psect	stringtext1
  2375  3000                     __pstringtext1:	
  2376  3000                     _lookupTableSamsung_SOC:	
  2377  3000  3464               	retlw	100
  2378  3001  3400               	retlw	0
  2379  3002  3462               	retlw	98
  2380  3003  3400               	retlw	0
  2381  3004  3460               	retlw	96
  2382  3005  3400               	retlw	0
  2383  3006  345D               	retlw	93
  2384  3007  3400               	retlw	0
  2385  3008  345B               	retlw	91
  2386  3009  3400               	retlw	0
  2387  300A  3457               	retlw	87
  2388  300B  3400               	retlw	0
  2389  300C  3454               	retlw	84
  2390  300D  3400               	retlw	0
  2391  300E  3452               	retlw	82
  2392  300F  3400               	retlw	0
  2393  3010  3450               	retlw	80
  2394  3011  3400               	retlw	0
  2395  3012  344E               	retlw	78
  2396  3013  3400               	retlw	0
  2397  3014  344C               	retlw	76
  2398  3015  3400               	retlw	0
  2399  3016  3449               	retlw	73
  2400  3017  3400               	retlw	0
  2401  3018  3447               	retlw	71
  2402  3019  3400               	retlw	0
  2403  301A  3445               	retlw	69
  2404  301B  3400               	retlw	0
  2405  301C  3443               	retlw	67
  2406  301D  3400               	retlw	0
  2407  301E  3440               	retlw	64
  2408  301F  3400               	retlw	0
  2409  3020  343E               	retlw	62
  2410  3021  3400               	retlw	0
  2411  3022  343C               	retlw	60
  2412  3023  3400               	retlw	0
  2413  3024  343A               	retlw	58
  2414  3025  3400               	retlw	0
  2415  3026  3438               	retlw	56
  2416  3027  3400               	retlw	0
  2417  3028  3435               	retlw	53
  2418  3029  3400               	retlw	0
  2419  302A  3433               	retlw	51
  2420  302B  3400               	retlw	0
  2421  302C  3431               	retlw	49
  2422  302D  3400               	retlw	0
  2423  302E  342F               	retlw	47
  2424  302F  3400               	retlw	0
  2425  3030  342C               	retlw	44
  2426  3031  3400               	retlw	0
  2427  3032  342A               	retlw	42
  2428  3033  3400               	retlw	0
  2429  3034  3428               	retlw	40
  2430  3035  3400               	retlw	0
  2431  3036  3426               	retlw	38
  2432  3037  3400               	retlw	0
  2433  3038  3424               	retlw	36
  2434  3039  3400               	retlw	0
  2435  303A  3421               	retlw	33
  2436  303B  3400               	retlw	0
  2437  303C  341F               	retlw	31
  2438  303D  3400               	retlw	0
  2439  303E  341D               	retlw	29
  2440  303F  3400               	retlw	0
  2441  3040  341B               	retlw	27
  2442  3041  3400               	retlw	0
  2443  3042  3418               	retlw	24
  2444  3043  3400               	retlw	0
  2445  3044  3416               	retlw	22
  2446  3045  3400               	retlw	0
  2447  3046  3414               	retlw	20
  2448  3047  3400               	retlw	0
  2449  3048  3412               	retlw	18
  2450  3049  3400               	retlw	0
  2451  304A  3410               	retlw	16
  2452  304B  3400               	retlw	0
  2453  304C  340D               	retlw	13
  2454  304D  3400               	retlw	0
  2455  304E  340B               	retlw	11
  2456  304F  3400               	retlw	0
  2457  3050  3409               	retlw	9
  2458  3051  3400               	retlw	0
  2459  3052  3407               	retlw	7
  2460  3053  3400               	retlw	0
  2461  3054  3404               	retlw	4
  2462  3055  3400               	retlw	0
  2463  3056  3402               	retlw	2
  2464  3057  3400               	retlw	0
  2465  3058  3400               	retlw	0
  2466  3059  3400               	retlw	0
  2467  305A  3400               	retlw	0
  2468  305B  3400               	retlw	0
  2469  305C                     __end_of_lookupTableSamsung_SOC:	
  2470                           
  2471                           	psect	stringtext2
  2472  305C                     __pstringtext2:	
  2473  305C                     _lookupTableSamsung_voltage:	
  2474  305C  3451               	retlw	81
  2475  305D  3410               	retlw	16
  2476  305E  345B               	retlw	91
  2477  305F  340F               	retlw	15
  2478  3060  341F               	retlw	31
  2479  3061  340F               	retlw	15
  2480  3062  340F               	retlw	15
  2481  3063  340F               	retlw	15
  2482  3064  340A               	retlw	10
  2483  3065  340F               	retlw	15
  2484  3066  3406               	retlw	6
  2485  3067  340F               	retlw	15
  2486  3068  3405               	retlw	5
  2487  3069  340F               	retlw	15
  2488  306A  3403               	retlw	3
  2489  306B  340F               	retlw	15
  2490  306C  3401               	retlw	1
  2491  306D  340F               	retlw	15
  2492  306E  3400               	retlw	0
  2493  306F  340F               	retlw	15
  2494  3070  34FE               	retlw	254
  2495  3071  340E               	retlw	14
  2496  3072  34FC               	retlw	252
  2497  3073  340E               	retlw	14
  2498  3074  34FA               	retlw	250
  2499  3075  340E               	retlw	14
  2500  3076  34F8               	retlw	248
  2501  3077  340E               	retlw	14
  2502  3078  34F6               	retlw	246
  2503  3079  340E               	retlw	14
  2504  307A  34F3               	retlw	243
  2505  307B  340E               	retlw	14
  2506  307C  34F1               	retlw	241
  2507  307D  340E               	retlw	14
  2508  307E  34EE               	retlw	238
  2509  307F  340E               	retlw	14
  2510  3080  34EB               	retlw	235
  2511  3081  340E               	retlw	14
  2512  3082  34E8               	retlw	232
  2513  3083  340E               	retlw	14
  2514  3084  34E5               	retlw	229
  2515  3085  340E               	retlw	14
  2516  3086  34E1               	retlw	225
  2517  3087  340E               	retlw	14
  2518  3088  34DD               	retlw	221
  2519  3089  340E               	retlw	14
  2520  308A  34D9               	retlw	217
  2521  308B  340E               	retlw	14
  2522  308C  34D4               	retlw	212
  2523  308D  340E               	retlw	14
  2524  308E  34CF               	retlw	207
  2525  308F  340E               	retlw	14
  2526  3090  34C9               	retlw	201
  2527  3091  340E               	retlw	14
  2528  3092  34C3               	retlw	195
  2529  3093  340E               	retlw	14
  2530  3094  34BB               	retlw	187
  2531  3095  340E               	retlw	14
  2532  3096  34B4               	retlw	180
  2533  3097  340E               	retlw	14
  2534  3098  34AB               	retlw	171
  2535  3099  340E               	retlw	14
  2536  309A  34A0               	retlw	160
  2537  309B  340E               	retlw	14
  2538  309C  3495               	retlw	149
  2539  309D  340E               	retlw	14
  2540  309E  3487               	retlw	135
  2541  309F  340E               	retlw	14
  2542  30A0  3477               	retlw	119
  2543  30A1  340E               	retlw	14
  2544  30A2  3464               	retlw	100
  2545  30A3  340E               	retlw	14
  2546  30A4  344D               	retlw	77
  2547  30A5  340E               	retlw	14
  2548  30A6  3431               	retlw	49
  2549  30A7  340E               	retlw	14
  2550  30A8  340D               	retlw	13
  2551  30A9  340E               	retlw	14
  2552  30AA  34DE               	retlw	222
  2553  30AB  340D               	retlw	13
  2554  30AC  349F               	retlw	159
  2555  30AD  340D               	retlw	13
  2556  30AE  3443               	retlw	67
  2557  30AF  340D               	retlw	13
  2558  30B0  34B3               	retlw	179
  2559  30B1  340C               	retlw	12
  2560  30B2  34B1               	retlw	177
  2561  30B3  340B               	retlw	11
  2562  30B4  345E               	retlw	94
  2563  30B5  3409               	retlw	9
  2564  30B6  3400               	retlw	0
  2565  30B7  3400               	retlw	0
  2566  30B8                     __end_of_lookupTableSamsung_voltage:	
  2567                           
  2568                           	psect	stringtext3
  2569  3897                     __pstringtext3:	
  2570  3897                     _OCD_threshold_setting:	
  2571  3897  3411               	retlw	17
  2572  3898  3400               	retlw	0
  2573  3899  3416               	retlw	22
  2574  389A  3400               	retlw	0
  2575  389B  341C               	retlw	28
  2576  389C  3400               	retlw	0
  2577  389D  3421               	retlw	33
  2578  389E  3400               	retlw	0
  2579  389F  3427               	retlw	39
  2580  38A0  3400               	retlw	0
  2581  38A1  342C               	retlw	44
  2582  38A2  3400               	retlw	0
  2583  38A3  3432               	retlw	50
  2584  38A4  3400               	retlw	0
  2585  38A5  3438               	retlw	56
  2586  38A6  3400               	retlw	0
  2587  38A7  343D               	retlw	61
  2588  38A8  3400               	retlw	0
  2589  38A9  3443               	retlw	67
  2590  38AA  3400               	retlw	0
  2591  38AB  3448               	retlw	72
  2592  38AC  3400               	retlw	0
  2593  38AD  344E               	retlw	78
  2594  38AE  3400               	retlw	0
  2595  38AF  3453               	retlw	83
  2596  38B0  3400               	retlw	0
  2597  38B1  3459               	retlw	89
  2598  38B2  3400               	retlw	0
  2599  38B3  345E               	retlw	94
  2600  38B4  3400               	retlw	0
  2601  38B5  3464               	retlw	100
  2602  38B6  3400               	retlw	0
  2603  38B7                     __end_of_OCD_threshold_setting:	
  2604                           
  2605                           	psect	stringtext4
  2606  39C2                     __pstringtext4:	
  2607  39C2                     _OCD_delay_setting:	
  2608  39C2  3408               	retlw	8
  2609  39C3  3400               	retlw	0
  2610  39C4  3414               	retlw	20
  2611  39C5  3400               	retlw	0
  2612  39C6  3428               	retlw	40
  2613  39C7  3400               	retlw	0
  2614  39C8  3450               	retlw	80
  2615  39C9  3400               	retlw	0
  2616  39CA  34A0               	retlw	160
  2617  39CB  3400               	retlw	0
  2618  39CC  3440               	retlw	64
  2619  39CD  3401               	retlw	1
  2620  39CE  3480               	retlw	128
  2621  39CF  3402               	retlw	2
  2622  39D0  3400               	retlw	0
  2623  39D1  3405               	retlw	5
  2624  39D2                     __end_of_OCD_delay_setting:	
  2625                           
  2626                           	psect	stringtext5
  2627  39D2                     __pstringtext5:	
  2628  39D2                     _SCD_threshold_setting:	
  2629  39D2  342C               	retlw	44
  2630  39D3  3400               	retlw	0
  2631  39D4  3443               	retlw	67
  2632  39D5  3400               	retlw	0
  2633  39D6  3459               	retlw	89
  2634  39D7  3400               	retlw	0
  2635  39D8  346F               	retlw	111
  2636  39D9  3400               	retlw	0
  2637  39DA  3485               	retlw	133
  2638  39DB  3400               	retlw	0
  2639  39DC  349B               	retlw	155
  2640  39DD  3400               	retlw	0
  2641  39DE  34B2               	retlw	178
  2642  39DF  3400               	retlw	0
  2643  39E0  34C8               	retlw	200
  2644  39E1  3400               	retlw	0
  2645  39E2                     __end_of_SCD_threshold_setting:	
  2646                           
  2647                           	psect	stringtext6
  2648  3A00                     __pstringtext6:	
  2649  3A00                     _OV_delay_setting:	
  2650  3A00  3401               	retlw	1
  2651  3A01  3400               	retlw	0
  2652  3A02  3402               	retlw	2
  2653  3A03  3400               	retlw	0
  2654  3A04  3404               	retlw	4
  2655  3A05  3400               	retlw	0
  2656  3A06  3408               	retlw	8
  2657  3A07  3400               	retlw	0
  2658  3A08                     __end_of_OV_delay_setting:	
  2659                           
  2660                           	psect	stringtext7
  2661  3A08                     __pstringtext7:	
  2662  3A08                     _UV_delay_setting:	
  2663  3A08  3401               	retlw	1
  2664  3A09  3400               	retlw	0
  2665  3A0A  3404               	retlw	4
  2666  3A0B  3400               	retlw	0
  2667  3A0C  3408               	retlw	8
  2668  3A0D  3400               	retlw	0
  2669  3A0E  3410               	retlw	16
  2670  3A0F  3400               	retlw	0
  2671  3A10                     __end_of_UV_delay_setting:	
  2672                           
  2673                           	psect	stringtext8
  2674  3A10                     __pstringtext8:	
  2675  3A10                     _SCD_delay_setting:	
  2676  3A10  3446               	retlw	70
  2677  3A11  3400               	retlw	0
  2678  3A12  3464               	retlw	100
  2679  3A13  3400               	retlw	0
  2680  3A14  34C8               	retlw	200
  2681  3A15  3400               	retlw	0
  2682  3A16  3490               	retlw	144
  2683  3A17  3401               	retlw	1
  2684  3A18                     __end_of_SCD_delay_setting:	
  2685                           
  2686                           	psect	stringtext9
  2687  3A18                     __pstringtext9:	
  2688  3A18                     _Lg4:	
  2689  3A18  3426               	retlw	38
  2690  3A19  349E               	retlw	158
  2691  3A1A  3478               	retlw	120
  2692  3A1B  343E               	retlw	62
  2693  3A1C                     __end_of_Lg4:	
  2694                           
  2695                           	psect	stringtext10
  2696  3A1C                     __pstringtext10:	
  2697  3A1C                     _Lg3:	
  2698  3A1C  34EE               	retlw	238
  2699  3A1D  34E9               	retlw	233
  2700  3A1E  3491               	retlw	145
  2701  3A1F  343E               	retlw	62
  2702  3A20                     __end_of_Lg3:	
  2703                           
  2704                           	psect	stringtext11
  2705  3A20                     __pstringtext11:	
  2706  3A20                     _Lg2:	
  2707  3A20  3413               	retlw	19
  2708  3A21  34CE               	retlw	206
  2709  3A22  34CC               	retlw	204
  2710  3A23  343E               	retlw	62
  2711  3A24                     __end_of_Lg2:	
  2712                           
  2713                           	psect	stringtext12
  2714  3A24                     __pstringtext12:	
  2715  3A24                     _Lg1:	
  2716  3A24  34AA               	retlw	170
  2717  3A25  34AA               	retlw	170
  2718  3A26  342A               	retlw	42
  2719  3A27  343F               	retlw	63
  2720  3A28                     __end_of_Lg1:	
  2721                           
  2722                           	psect	stringtext13
  2723  3A28                     __pstringtext13:	
  2724  3A28                     _ln2_lo:	
  2725  3A28  34D1               	retlw	209
  2726  3A29  34F7               	retlw	247
  2727  3A2A  3417               	retlw	23
  2728  3A2B  3437               	retlw	55
  2729  3A2C                     __end_of_ln2_lo:	
  2730                           
  2731                           	psect	stringtext14
  2732  3A2C                     __pstringtext14:	
  2733  3A2C                     _ln2_hi:	
  2734  3A2C  3480               	retlw	128
  2735  3A2D  3471               	retlw	113
  2736  3A2E  3431               	retlw	49
  2737  3A2F  343F               	retlw	63
  2738  3A30                     __end_of_ln2_hi:	
  2739                           
  2740                           	psect	stringtext15
  2741  3800                     __pstringtext15:	
  2742  3800                     _ATmega328_address:	
  2743  3800  3402               	retlw	2
  2744  3801  3400               	retlw	0
  2745  3802                     __end_of_ATmega328_address:	
  2746  0016                     _TMR1	set	22
  2747  0003                     _STATUSbits	set	3
  2748  000B                     _INTCONbits	set	11
  2749  0018                     _T1CONbits	set	24
  2750  0011                     _PIR1bits	set	17
  2751  0097                     _WDTCONbits	set	151
  2752  0090                     _TRISEbits	set	144
  2753  008C                     _TRISAbits	set	140
  2754  008E                     _TRISCbits	set	142
  2755  008D                     _TRISBbits	set	141
  2756  0091                     _PIE1bits	set	145
  2757  0476                     _TRISC6	set	1142
  2758  0477                     _TRISC7	set	1143
  2759  04CF                     _SPLLEN	set	1231
  2760  04CE                     _IRCF3	set	1230
  2761  04CD                     _IRCF2	set	1229
  2762  04CC                     _IRCF1	set	1228
  2763  04CB                     _IRCF0	set	1227
  2764  04C9                     _SCS1	set	1225
  2765  04C8                     _SCS0	set	1224
  2766  0110                     _LATEbits	set	272
  2767  010C                     _LATAbits	set	268
  2768  019A                     _TX1REG	set	410
  2769  0199                     _RC1REG	set	409
  2770  019D                     _RC1STAbits	set	413
  2771  019B                     _SPBRG	set	411
  2772  018E                     _ANSELCbits	set	398
  2773  018D                     _ANSELBbits	set	397
  2774  0CF5                     _TXEN	set	3317
  2775  0CEC                     _CREN	set	3308
  2776  0CEF                     _SPEN	set	3311
  2777  0CF4                     _SYNC	set	3316
  2778  0CF2                     _BRGH	set	3314
  2779  0216                     _SSPCON2bits	set	534
  2780  0211                     _SSPBUF	set	529
  2781  0212                     _SSPADD	set	530
  2782  0215                     _SSPCONbits	set	533
  2783  0E24                     _RXPPSbits	set	3620
  2784  0E20                     _SSPCLKPPSbits	set	3616
  2785  0E21                     _SSPDATPPSbits	set	3617
  2786  0E0F                     _PPSLOCKbits	set	3599
  2787  0E0F                     _PPSLOCK	set	3599
  2788  0E9A                     _RB2PPSbits	set	3738
  2789  0EA5                     _RC5PPSbits	set	3749
  2790  0EA4                     _RC4PPSbits	set	3748
  2791  3802                     STR_2:	
  2792  3802  3443               	retlw	67	;'C'
  2793  3803  3465               	retlw	101	;'e'
  2794  3804  346C               	retlw	108	;'l'
  2795  3805  346C               	retlw	108	;'l'
  2796  3806  3420               	retlw	32	;' '
  2797  3807  3462               	retlw	98	;'b'
  2798  3808  3461               	retlw	97	;'a'
  2799  3809  3474               	retlw	116	;'t'
  2800  380A  3474               	retlw	116	;'t'
  2801  380B  343A               	retlw	58	;':'
  2802  380C  3420               	retlw	32	;' '
  2803  380D  3425               	retlw	37	;'%'
  2804  380E  3469               	retlw	105	;'i'
  2805  380F  3420               	retlw	32	;' '
  2806  3810  342C               	retlw	44	;','
  2807  3811  3425               	retlw	37	;'%'
  2808  3812  3464               	retlw	100	;'d'
  2809  3813  342C               	retlw	44	;','
  2810  3814  3420               	retlw	32	;' '
  2811  3815  3425               	retlw	37	;'%'
  2812  3816  3464               	retlw	100	;'d'
  2813  3817  3420               	retlw	32	;' '
  2814  3818  342C               	retlw	44	;','
  2815  3819  3420               	retlw	32	;' '
  2816  381A  3425               	retlw	37	;'%'
  2817  381B  3464               	retlw	100	;'d'
  2818  381C  342C               	retlw	44	;','
  2819  381D  3420               	retlw	32	;' '
  2820  381E  3425               	retlw	37	;'%'
  2821  381F  3464               	retlw	100	;'d'
  2822  3820  342C               	retlw	44	;','
  2823  3821  3420               	retlw	32	;' '
  2824  3822  3425               	retlw	37	;'%'
  2825  3823  3464               	retlw	100	;'d'
  2826  3824  3420               	retlw	32	;' '
  2827  3825  3442               	retlw	66	;'B'
  2828  3826  3461               	retlw	97	;'a'
  2829  3827  3474               	retlw	116	;'t'
  2830  3828  3474               	retlw	116	;'t'
  2831  3829  3420               	retlw	32	;' '
  2832  382A  3443               	retlw	67	;'C'
  2833  382B  3475               	retlw	117	;'u'
  2834  382C  3472               	retlw	114	;'r'
  2835  382D  3472               	retlw	114	;'r'
  2836  382E  343A               	retlw	58	;':'
  2837  382F  3420               	retlw	32	;' '
  2838  3830  3425               	retlw	37	;'%'
  2839  3831  3469               	retlw	105	;'i'
  2840  3832  3420               	retlw	32	;' '
  2841  3833  3454               	retlw	84	;'T'
  2842  3834  3465               	retlw	101	;'e'
  2843  3835  346D               	retlw	109	;'m'
  2844  3836  3470               	retlw	112	;'p'
  2845  3837  343A               	retlw	58	;':'
  2846  3838  3420               	retlw	32	;' '
  2847  3839  3425               	retlw	37	;'%'
  2848  383A  3469               	retlw	105	;'i'
  2849  383B  3420               	retlw	32	;' '
  2850  383C  3443               	retlw	67	;'C'
  2851  383D  3454               	retlw	84	;'T'
  2852  383E  3452               	retlw	82	;'R'
  2853  383F  344C               	retlw	76	;'L'
  2854  3840  3432               	retlw	50	;'2'
  2855  3841  343A               	retlw	58	;':'
  2856  3842  3420               	retlw	32	;' '
  2857  3843  3425               	retlw	37	;'%'
  2858  3844  3469               	retlw	105	;'i'
  2859  3845  3420               	retlw	32	;' '
  2860  3846  340A               	retlw	10
  2861  3847  340D               	retlw	13
  2862  3848  3400               	retlw	0
  2863                           
  2864                           	psect	stringtext16
  2865  3849                     __pstringtext16:	
  2866  3849                     STR_1:	
  2867  3849  3457               	retlw	87	;'W'
  2868  384A  3441               	retlw	65	;'A'
  2869  384B  3454               	retlw	84	;'T'
  2870  384C  3443               	retlw	67	;'C'
  2871  384D  3448               	retlw	72	;'H'
  2872  384E  3444               	retlw	68	;'D'
  2873  384F  344F               	retlw	79	;'O'
  2874  3850  3447               	retlw	71	;'G'
  2875  3851  3420               	retlw	32	;' '
  2876  3852  344E               	retlw	78	;'N'
  2877  3853  344F               	retlw	79	;'O'
  2878  3854  3454               	retlw	84	;'T'
  2879  3855  3420               	retlw	32	;' '
  2880  3856  344B               	retlw	75	;'K'
  2881  3857  3449               	retlw	73	;'I'
  2882  3858  3443               	retlw	67	;'C'
  2883  3859  344B               	retlw	75	;'K'
  2884  385A  3445               	retlw	69	;'E'
  2885  385B  3444               	retlw	68	;'D'
  2886  385C  343A               	retlw	58	;':'
  2887  385D  3420               	retlw	32	;' '
  2888  385E  3441               	retlw	65	;'A'
  2889  385F  3446               	retlw	70	;'F'
  2890  3860  3445               	retlw	69	;'E'
  2891  3861  3420               	retlw	32	;' '
  2892  3862  3463               	retlw	99	;'c'
  2893  3863  346F               	retlw	111	;'o'
  2894  3864  346D               	retlw	109	;'m'
  2895  3865  346D               	retlw	109	;'m'
  2896  3866  3473               	retlw	115	;'s'
  2897  3867  3420               	retlw	32	;' '
  2898  3868  3465               	retlw	101	;'e'
  2899  3869  3472               	retlw	114	;'r'
  2900  386A  3472               	retlw	114	;'r'
  2901  386B  346F               	retlw	111	;'o'
  2902  386C  3472               	retlw	114	;'r'
  2903  386D  3420               	retlw	32	;' '
  2904  386E  340A               	retlw	10
  2905  386F  340D               	retlw	13
  2906  3870  3400               	retlw	0
  2907                           
  2908                           	psect	stringtext17
  2909  3871                     __pstringtext17:	
  2910  3871                     STR_10:	
  2911  3871  3450               	retlw	80	;'P'
  2912  3872  3472               	retlw	114	;'r'
  2913  3873  3469               	retlw	105	;'i'
  2914  3874  346E               	retlw	110	;'n'
  2915  3875  3474               	retlw	116	;'t'
  2916  3876  3469               	retlw	105	;'i'
  2917  3877  346E               	retlw	110	;'n'
  2918  3878  3467               	retlw	103	;'g'
  2919  3879  3420               	retlw	32	;' '
  2920  387A  346F               	retlw	111	;'o'
  2921  387B  3475               	retlw	117	;'u'
  2922  387C  3474               	retlw	116	;'t'
  2923  387D  3420               	retlw	32	;' '
  2924  387E  3441               	retlw	65	;'A'
  2925  387F  3446               	retlw	70	;'F'
  2926  3880  3445               	retlw	69	;'E'
  2927  3881  3420               	retlw	32	;' '
  2928  3882  3472               	retlw	114	;'r'
  2929  3883  3465               	retlw	101	;'e'
  2930  3884  3467               	retlw	103	;'g'
  2931  3885  3469               	retlw	105	;'i'
  2932  3886  3473               	retlw	115	;'s'
  2933  3887  3474               	retlw	116	;'t'
  2934  3888  3465               	retlw	101	;'e'
  2935  3889  3472               	retlw	114	;'r'
  2936  388A  3420               	retlw	32	;' '
  2937  388B  3476               	retlw	118	;'v'
  2938  388C  3461               	retlw	97	;'a'
  2939  388D  346C               	retlw	108	;'l'
  2940  388E  3475               	retlw	117	;'u'
  2941  388F  3465               	retlw	101	;'e'
  2942  3890  3473               	retlw	115	;'s'
  2943  3891  342E               	retlw	46	;'.'
  2944  3892  342E               	retlw	46	;'.'
  2945  3893  342E               	retlw	46	;'.'
  2946  3894  340A               	retlw	10
  2947  3895  340D               	retlw	13
  2948  3896  3400               	retlw	0
  2949                           
  2950                           	psect	stringtext18
  2951  38B7                     __pstringtext18:	
  2952  38B7                     STR_8:	
  2953  38B7  3463               	retlw	99	;'c'
  2954  38B8  3465               	retlw	101	;'e'
  2955  38B9  346C               	retlw	108	;'l'
  2956  38BA  346C               	retlw	108	;'l'
  2957  38BB  3476               	retlw	118	;'v'
  2958  38BC  3461               	retlw	97	;'a'
  2959  38BD  346C               	retlw	108	;'l'
  2960  38BE  343A               	retlw	58	;':'
  2961  38BF  3420               	retlw	32	;' '
  2962  38C0  3425               	retlw	37	;'%'
  2963  38C1  3464               	retlw	100	;'d'
  2964  38C2  3420               	retlw	32	;' '
  2965  38C3  3453               	retlw	83	;'S'
  2966  38C4  344F               	retlw	79	;'O'
  2967  38C5  3443               	retlw	67	;'C'
  2968  38C6  343A               	retlw	58	;':'
  2969  38C7  3420               	retlw	32	;' '
  2970  38C8  3425               	retlw	37	;'%'
  2971  38C9  3464               	retlw	100	;'d'
  2972  38CA  3420               	retlw	32	;' '
  2973  38CB  340A               	retlw	10
  2974  38CC  340D               	retlw	13
  2975  38CD  3400               	retlw	0
  2976                           
  2977                           	psect	stringtext19
  2978  38CE                     __pstringtext19:	
  2979  38CE                     STR_14:	
  2980  38CE  3430               	retlw	48	;'0'
  2981  38CF  3478               	retlw	120	;'x'
  2982  38D0  3430               	retlw	48	;'0'
  2983  38D1  3434               	retlw	52	;'4'
  2984  38D2  3420               	retlw	32	;' '
  2985  38D3  3453               	retlw	83	;'S'
  2986  38D4  3459               	retlw	89	;'Y'
  2987  38D5  3453               	retlw	83	;'S'
  2988  38D6  345F               	retlw	95	;'_'
  2989  38D7  3443               	retlw	67	;'C'
  2990  38D8  3454               	retlw	84	;'T'
  2991  38D9  3452               	retlw	82	;'R'
  2992  38DA  344C               	retlw	76	;'L'
  2993  38DB  3431               	retlw	49	;'1'
  2994  38DC  343A               	retlw	58	;':'
  2995  38DD  3420               	retlw	32	;' '
  2996  38DE  3425               	retlw	37	;'%'
  2997  38DF  3469               	retlw	105	;'i'
  2998  38E0  3420               	retlw	32	;' '
  2999  38E1  340A               	retlw	10
  3000  38E2  340D               	retlw	13
  3001  38E3  3400               	retlw	0
  3002                           
  3003                           	psect	stringtext20
  3004  38E4                     __pstringtext20:	
  3005  38E4                     STR_3:	
  3006  38E4  3430               	retlw	48	;'0'
  3007  38E5  3478               	retlw	120	;'x'
  3008  38E6  3430               	retlw	48	;'0'
  3009  38E7  3435               	retlw	53	;'5'
  3010  38E8  3420               	retlw	32	;' '
  3011  38E9  3453               	retlw	83	;'S'
  3012  38EA  3459               	retlw	89	;'Y'
  3013  38EB  3453               	retlw	83	;'S'
  3014  38EC  345F               	retlw	95	;'_'
  3015  38ED  3443               	retlw	67	;'C'
  3016  38EE  3454               	retlw	84	;'T'
  3017  38EF  3452               	retlw	82	;'R'
  3018  38F0  344C               	retlw	76	;'L'
  3019  38F1  3432               	retlw	50	;'2'
  3020  38F2  343A               	retlw	58	;':'
  3021  38F3  3420               	retlw	32	;' '
  3022  38F4  3425               	retlw	37	;'%'
  3023  38F5  3469               	retlw	105	;'i'
  3024  38F6  3420               	retlw	32	;' '
  3025  38F7  340A               	retlw	10
  3026  38F8  340D               	retlw	13
  3027  38F9  3400               	retlw	0
  3028                           
  3029                           	psect	stringtext21
  3030  38FA                     __pstringtext21:	
  3031  38FA                     STR_13:	
  3032  38FA  3430               	retlw	48	;'0'
  3033  38FB  3478               	retlw	120	;'x'
  3034  38FC  3430               	retlw	48	;'0'
  3035  38FD  3431               	retlw	49	;'1'
  3036  38FE  3420               	retlw	32	;' '
  3037  38FF  3443               	retlw	67	;'C'
  3038  3900  3445               	retlw	69	;'E'
  3039  3901  344C               	retlw	76	;'L'
  3040  3902  344C               	retlw	76	;'L'
  3041  3903  3442               	retlw	66	;'B'
  3042  3904  3441               	retlw	65	;'A'
  3043  3905  344C               	retlw	76	;'L'
  3044  3906  3431               	retlw	49	;'1'
  3045  3907  343A               	retlw	58	;':'
  3046  3908  3420               	retlw	32	;' '
  3047  3909  3425               	retlw	37	;'%'
  3048  390A  3469               	retlw	105	;'i'
  3049  390B  3420               	retlw	32	;' '
  3050  390C  340A               	retlw	10
  3051  390D  340D               	retlw	13
  3052  390E  3400               	retlw	0
  3053                           
  3054                           	psect	stringtext22
  3055  390F                     __pstringtext22:	
  3056  390F                     STR_5:	
  3057  390F  3430               	retlw	48	;'0'
  3058  3910  3478               	retlw	120	;'x'
  3059  3911  3430               	retlw	48	;'0'
  3060  3912  3436               	retlw	54	;'6'
  3061  3913  3420               	retlw	32	;' '
  3062  3914  3450               	retlw	80	;'P'
  3063  3915  3452               	retlw	82	;'R'
  3064  3916  344F               	retlw	79	;'O'
  3065  3917  3454               	retlw	84	;'T'
  3066  3918  3445               	retlw	69	;'E'
  3067  3919  3443               	retlw	67	;'C'
  3068  391A  3454               	retlw	84	;'T'
  3069  391B  3431               	retlw	49	;'1'
  3070  391C  343A               	retlw	58	;':'
  3071  391D  3420               	retlw	32	;' '
  3072  391E  3425               	retlw	37	;'%'
  3073  391F  3469               	retlw	105	;'i'
  3074  3920  3420               	retlw	32	;' '
  3075  3921  340A               	retlw	10
  3076  3922  340D               	retlw	13
  3077  3923  3400               	retlw	0
  3078                           
  3079                           	psect	stringtext23
  3080  3924                     __pstringtext23:	
  3081  3924                     STR_6:	
  3082  3924  3430               	retlw	48	;'0'
  3083  3925  3478               	retlw	120	;'x'
  3084  3926  3430               	retlw	48	;'0'
  3085  3927  3437               	retlw	55	;'7'
  3086  3928  3420               	retlw	32	;' '
  3087  3929  3450               	retlw	80	;'P'
  3088  392A  3452               	retlw	82	;'R'
  3089  392B  344F               	retlw	79	;'O'
  3090  392C  3454               	retlw	84	;'T'
  3091  392D  3445               	retlw	69	;'E'
  3092  392E  3443               	retlw	67	;'C'
  3093  392F  3454               	retlw	84	;'T'
  3094  3930  3432               	retlw	50	;'2'
  3095  3931  343A               	retlw	58	;':'
  3096  3932  3420               	retlw	32	;' '
  3097  3933  3425               	retlw	37	;'%'
  3098  3934  3469               	retlw	105	;'i'
  3099  3935  3420               	retlw	32	;' '
  3100  3936  340A               	retlw	10
  3101  3937  340D               	retlw	13
  3102  3938  3400               	retlw	0
  3103                           
  3104                           	psect	stringtext24
  3105  3939                     __pstringtext24:	
  3106  3939                     STR_18:	
  3107  3939  3430               	retlw	48	;'0'
  3108  393A  3478               	retlw	120	;'x'
  3109  393B  3430               	retlw	48	;'0'
  3110  393C  3438               	retlw	56	;'8'
  3111  393D  3420               	retlw	32	;' '
  3112  393E  3450               	retlw	80	;'P'
  3113  393F  3452               	retlw	82	;'R'
  3114  3940  344F               	retlw	79	;'O'
  3115  3941  3454               	retlw	84	;'T'
  3116  3942  3445               	retlw	69	;'E'
  3117  3943  3443               	retlw	67	;'C'
  3118  3944  3454               	retlw	84	;'T'
  3119  3945  3433               	retlw	51	;'3'
  3120  3946  343A               	retlw	58	;':'
  3121  3947  3420               	retlw	32	;' '
  3122  3948  3425               	retlw	37	;'%'
  3123  3949  3469               	retlw	105	;'i'
  3124  394A  3420               	retlw	32	;' '
  3125  394B  340A               	retlw	10
  3126  394C  340D               	retlw	13
  3127  394D  3400               	retlw	0
  3128                           
  3129                           	psect	stringtext25
  3130  394E                     __pstringtext25:	
  3131  394E                     STR_4:	
  3132  394E  3430               	retlw	48	;'0'
  3133  394F  3478               	retlw	120	;'x'
  3134  3950  3430               	retlw	48	;'0'
  3135  3951  3430               	retlw	48	;'0'
  3136  3952  3420               	retlw	32	;' '
  3137  3953  3453               	retlw	83	;'S'
  3138  3954  3459               	retlw	89	;'Y'
  3139  3955  3453               	retlw	83	;'S'
  3140  3956  345F               	retlw	95	;'_'
  3141  3957  3453               	retlw	83	;'S'
  3142  3958  3454               	retlw	84	;'T'
  3143  3959  3441               	retlw	65	;'A'
  3144  395A  3454               	retlw	84	;'T'
  3145  395B  343A               	retlw	58	;':'
  3146  395C  3420               	retlw	32	;' '
  3147  395D  3425               	retlw	37	;'%'
  3148  395E  3469               	retlw	105	;'i'
  3149  395F  3420               	retlw	32	;' '
  3150  3960  340A               	retlw	10
  3151  3961  340D               	retlw	13
  3152  3962  3400               	retlw	0
  3153                           
  3154                           	psect	stringtext26
  3155  3963                     __pstringtext26:	
  3156  3963                     STR_19:	
  3157  3963  3430               	retlw	48	;'0'
  3158  3964  3478               	retlw	120	;'x'
  3159  3965  3430               	retlw	48	;'0'
  3160  3966  3439               	retlw	57	;'9'
  3161  3967  3420               	retlw	32	;' '
  3162  3968  344F               	retlw	79	;'O'
  3163  3969  3456               	retlw	86	;'V'
  3164  396A  345F               	retlw	95	;'_'
  3165  396B  3454               	retlw	84	;'T'
  3166  396C  3452               	retlw	82	;'R'
  3167  396D  3449               	retlw	73	;'I'
  3168  396E  3450               	retlw	80	;'P'
  3169  396F  343A               	retlw	58	;':'
  3170  3970  3420               	retlw	32	;' '
  3171  3971  3425               	retlw	37	;'%'
  3172  3972  3469               	retlw	105	;'i'
  3173  3973  3420               	retlw	32	;' '
  3174  3974  340A               	retlw	10
  3175  3975  340D               	retlw	13
  3176  3976  3400               	retlw	0
  3177                           
  3178                           	psect	stringtext27
  3179  3977                     __pstringtext27:	
  3180  3977                     STR_20:	
  3181  3977  3430               	retlw	48	;'0'
  3182  3978  3478               	retlw	120	;'x'
  3183  3979  3430               	retlw	48	;'0'
  3184  397A  3441               	retlw	65	;'A'
  3185  397B  3420               	retlw	32	;' '
  3186  397C  3455               	retlw	85	;'U'
  3187  397D  3456               	retlw	86	;'V'
  3188  397E  345F               	retlw	95	;'_'
  3189  397F  3454               	retlw	84	;'T'
  3190  3980  3452               	retlw	82	;'R'
  3191  3981  3449               	retlw	73	;'I'
  3192  3982  3450               	retlw	80	;'P'
  3193  3983  343A               	retlw	58	;':'
  3194  3984  3420               	retlw	32	;' '
  3195  3985  3425               	retlw	37	;'%'
  3196  3986  3469               	retlw	105	;'i'
  3197  3987  3420               	retlw	32	;' '
  3198  3988  340A               	retlw	10
  3199  3989  340D               	retlw	13
  3200  398A  3400               	retlw	0
  3201                           
  3202                           	psect	stringtext28
  3203  398B                     __pstringtext28:	
  3204  398B                     STR_21:	
  3205  398B  3430               	retlw	48	;'0'
  3206  398C  3478               	retlw	120	;'x'
  3207  398D  3430               	retlw	48	;'0'
  3208  398E  3442               	retlw	66	;'B'
  3209  398F  3420               	retlw	32	;' '
  3210  3990  3443               	retlw	67	;'C'
  3211  3991  3443               	retlw	67	;'C'
  3212  3992  345F               	retlw	95	;'_'
  3213  3993  3443               	retlw	67	;'C'
  3214  3994  3446               	retlw	70	;'F'
  3215  3995  3447               	retlw	71	;'G'
  3216  3996  343A               	retlw	58	;':'
  3217  3997  3420               	retlw	32	;' '
  3218  3998  3425               	retlw	37	;'%'
  3219  3999  3469               	retlw	105	;'i'
  3220  399A  3420               	retlw	32	;' '
  3221  399B  340A               	retlw	10
  3222  399C  340D               	retlw	13
  3223  399D  3400               	retlw	0
  3224                           
  3225                           	psect	stringtext29
  3226  399E                     __pstringtext29:	
  3227  399E                     STR_22:	
  3228  399E  3430               	retlw	48	;'0'
  3229  399F  3478               	retlw	120	;'x'
  3230  39A0  3433               	retlw	51	;'3'
  3231  39A1  3432               	retlw	50	;'2'
  3232  39A2  3420               	retlw	32	;' '
  3233  39A3  3443               	retlw	67	;'C'
  3234  39A4  3443               	retlw	67	;'C'
  3235  39A5  345F               	retlw	95	;'_'
  3236  39A6  3448               	retlw	72	;'H'
  3237  39A7  3449               	retlw	73	;'I'
  3238  39A8  343A               	retlw	58	;':'
  3239  39A9  3420               	retlw	32	;' '
  3240  39AA  3425               	retlw	37	;'%'
  3241  39AB  3469               	retlw	105	;'i'
  3242  39AC  3420               	retlw	32	;' '
  3243  39AD  340A               	retlw	10
  3244  39AE  340D               	retlw	13
  3245  39AF  3400               	retlw	0
  3246                           
  3247                           	psect	stringtext30
  3248  39B0                     __pstringtext30:	
  3249  39B0                     STR_23:	
  3250  39B0  3430               	retlw	48	;'0'
  3251  39B1  3478               	retlw	120	;'x'
  3252  39B2  3433               	retlw	51	;'3'
  3253  39B3  3433               	retlw	51	;'3'
  3254  39B4  3420               	retlw	32	;' '
  3255  39B5  3443               	retlw	67	;'C'
  3256  39B6  3443               	retlw	67	;'C'
  3257  39B7  345F               	retlw	95	;'_'
  3258  39B8  344C               	retlw	76	;'L'
  3259  39B9  344F               	retlw	79	;'O'
  3260  39BA  343A               	retlw	58	;':'
  3261  39BB  3420               	retlw	32	;' '
  3262  39BC  3425               	retlw	37	;'%'
  3263  39BD  3469               	retlw	105	;'i'
  3264  39BE  3420               	retlw	32	;' '
  3265  39BF  340A               	retlw	10
  3266  39C0  340D               	retlw	13
  3267  39C1  3400               	retlw	0
  3268                           
  3269                           	psect	stringtext31
  3270  39E2                     __pstringtext31:	
  3271  39E2                     STR_7:	
  3272  39E2  3443               	retlw	67	;'C'
  3273  39E3  3475               	retlw	117	;'u'
  3274  39E4  3472               	retlw	114	;'r'
  3275  39E5  3472               	retlw	114	;'r'
  3276  39E6  3465               	retlw	101	;'e'
  3277  39E7  346E               	retlw	110	;'n'
  3278  39E8  3474               	retlw	116	;'t'
  3279  39E9  343A               	retlw	58	;':'
  3280  39EA  3420               	retlw	32	;' '
  3281  39EB  3425               	retlw	37	;'%'
  3282  39EC  3464               	retlw	100	;'d'
  3283  39ED  3420               	retlw	32	;' '
  3284  39EE  340A               	retlw	10
  3285  39EF  340D               	retlw	13
  3286  39F0  3400               	retlw	0
  3287                           
  3288                           	psect	stringtext32
  3289  39F1                     __pstringtext32:	
  3290  39F1                     STR_9:	
  3291  39F1  3454               	retlw	84	;'T'
  3292  39F2  3465               	retlw	101	;'e'
  3293  39F3  346D               	retlw	109	;'m'
  3294  39F4  3470               	retlw	112	;'p'
  3295  39F5  343A               	retlw	58	;':'
  3296  39F6  3420               	retlw	32	;' '
  3297  39F7  3425               	retlw	37	;'%'
  3298  39F8  3464               	retlw	100	;'d'
  3299  39F9  3420               	retlw	32	;' '
  3300  39FA  3465               	retlw	101	;'e'
  3301  39FB  342D               	retlw	45	;'-'
  3302  39FC  3432               	retlw	50	;'2'
  3303  39FD  340A               	retlw	10
  3304  39FE  340D               	retlw	13
  3305  39FF  3400               	retlw	0
  3306                           
  3307                           	psect	stringtext33
  3308  3A30                     __pstringtext33:	
  3309  3A30                     STR_101:	
  3310  3A30  3468               	retlw	104	;'h'
  3311  3A31  3468               	retlw	104	;'h'
  3312  3A32  3458               	retlw	88	;'X'
  3313  3A33  3400               	retlw	0
  3314                           
  3315                           	psect	stringtext34
  3316  3A34                     __pstringtext34:	
  3317  3A34                     STR_25:	
  3318  3A34  3468               	retlw	104	;'h'
  3319  3A35  3468               	retlw	104	;'h'
  3320  3A36  3464               	retlw	100	;'d'
  3321  3A37  3400               	retlw	0
  3322                           
  3323                           	psect	stringtext35
  3324  3A38                     __pstringtext35:	
  3325  3A38                     STR_29:	
  3326  3A38  3468               	retlw	104	;'h'
  3327  3A39  3468               	retlw	104	;'h'
  3328  3A3A  3469               	retlw	105	;'i'
  3329  3A3B  3400               	retlw	0
  3330                           
  3331                           	psect	stringtext36
  3332  3A3C                     __pstringtext36:	
  3333  3A3C                     STR_67:	
  3334  3A3C  3468               	retlw	104	;'h'
  3335  3A3D  3468               	retlw	104	;'h'
  3336  3A3E  346E               	retlw	110	;'n'
  3337  3A3F  3400               	retlw	0
  3338                           
  3339                           	psect	stringtext37
  3340  3A40                     __pstringtext37:	
  3341  3A40                     STR_52:	
  3342  3A40  3468               	retlw	104	;'h'
  3343  3A41  3468               	retlw	104	;'h'
  3344  3A42  346F               	retlw	111	;'o'
  3345  3A43  3400               	retlw	0
  3346                           
  3347                           	psect	stringtext38
  3348  3A44                     __pstringtext38:	
  3349  3A44                     STR_82:	
  3350  3A44  3468               	retlw	104	;'h'
  3351  3A45  3468               	retlw	104	;'h'
  3352  3A46  3475               	retlw	117	;'u'
  3353  3A47  3400               	retlw	0
  3354                           
  3355                           	psect	stringtext39
  3356  3A48                     __pstringtext39:	
  3357  3A48                     STR_97:	
  3358  3A48  3468               	retlw	104	;'h'
  3359  3A49  3468               	retlw	104	;'h'
  3360  3A4A  3478               	retlw	120	;'x'
  3361  3A4B  3400               	retlw	0
  3362                           
  3363                           	psect	stringtext40
  3364  3A4C                     __pstringtext40:	
  3365  3A4C                     STR_119:	
  3366  3A4C  347A               	retlw	122	;'z'
  3367  3A4D  3458               	retlw	88	;'X'
  3368  3A4E  3400               	retlw	0
  3369                           
  3370                           	psect	stringtext41
  3371  3A4F                     __pstringtext41:	
  3372  3A4F                     STR_43:	
  3373  3A4F  347A               	retlw	122	;'z'
  3374  3A50  3464               	retlw	100	;'d'
  3375  3A51  3400               	retlw	0
  3376                           
  3377                           	psect	stringtext42
  3378  3A52                     __pstringtext42:	
  3379  3A52                     STR_47:	
  3380  3A52  347A               	retlw	122	;'z'
  3381  3A53  3469               	retlw	105	;'i'
  3382  3A54  3400               	retlw	0
  3383                           
  3384                           	psect	stringtext43
  3385  3A55                     __pstringtext43:	
  3386  3A55                     STR_77:	
  3387  3A55  347A               	retlw	122	;'z'
  3388  3A56  346E               	retlw	110	;'n'
  3389  3A57  3400               	retlw	0
  3390                           
  3391                           	psect	stringtext44
  3392  3A58                     __pstringtext44:	
  3393  3A58                     STR_62:	
  3394  3A58  347A               	retlw	122	;'z'
  3395  3A59  346F               	retlw	111	;'o'
  3396  3A5A  3400               	retlw	0
  3397                           
  3398                           	psect	stringtext45
  3399  3A5B                     __pstringtext45:	
  3400  3A5B                     STR_92:	
  3401  3A5B  347A               	retlw	122	;'z'
  3402  3A5C  3475               	retlw	117	;'u'
  3403  3A5D  3400               	retlw	0
  3404                           
  3405                           	psect	stringtext46
  3406  3A5E                     __pstringtext46:	
  3407  3A5E                     STR_115:	
  3408  3A5E  347A               	retlw	122	;'z'
  3409  3A5F  3478               	retlw	120	;'x'
  3410  3A60  3400               	retlw	0
  3411                           
  3412                           	psect	stringtext47
  3413  0000                     __pstringtext47:	
  3414  38CB                     
  3415                           ; #config settings
  3416  0000                     
  3417                           	psect	cinit
  3418  0022                     start_initialization:	
  3419  0022                     __initialization:		;BIGRAM
  3420                           
  3421                           ; Initialize objects allocated to BANK3
  3422  0022  3089               	movlw	low __pidataBANK3
  3423  0023  0084               	movwf	4
  3424  0024  30B3               	movlw	(high __pidataBANK3)| (0+128)
  3425  0025  0085               	movwf	5
  3426  0026  0023               	movlb	3	; select bank3
  3427  0027  0012               	moviw fsr0++
  3428  0028  00DA               	movwf	__pdataBANK3& (0+127)
  3429  0029  0012               	moviw fsr0++
  3430  002A  00DB               	movwf	(__pdataBANK3+1)& (0+127)
  3431  002B  0012               	moviw fsr0++
  3432  002C  00DC               	movwf	(__pdataBANK3+2)& (0+127)
  3433  002D  0012               	moviw fsr0++
  3434  002E  00DD               	movwf	(__pdataBANK3+3)& (0+127)
  3435  002F  0012               	moviw fsr0++
  3436  0030  00DE               	movwf	(__pdataBANK3+4)& (0+127)
  3437  0031  0012               	moviw fsr0++
  3438  0032  00DF               	movwf	(__pdataBANK3+5)& (0+127)
  3439  0033  0012               	moviw fsr0++
  3440  0034  00E0               	movwf	(__pdataBANK3+6)& (0+127)
  3441  0035  0012               	moviw fsr0++
  3442  0036  00E1               	movwf	(__pdataBANK3+7)& (0+127)
  3443  0037  0012               	moviw fsr0++
  3444  0038  00E2               	movwf	(__pdataBANK3+8)& (0+127)
  3445                           
  3446                           ; Clear objects allocated to BIGRAM
  3447  0039  3071               	movlw	low (0+10097)
  3448  003A  0084               	movwf	4
  3449  003B  3027               	movlw	high (0+10097)
  3450  003C  0085               	movwf	5
  3451  003D  307F               	movlw	127
  3452  003E  00FE               	movwf	btemp
  3453  003F  3000               	movlw	0
  3454  0040  00FF               	movwf	btemp+1
  3455  0041  31B3  23BB  3180   	fcall	clear_ram0
  3456                           
  3457                           ; Clear objects allocated to COMMON
  3458  0044  01FC               	clrf	__pbssCOMMON& (0+127)
  3459                           
  3460                           ; Clear objects allocated to BANK1
  3461  0045  0021               	movlb	1	; select bank1
  3462  0046  01EF               	clrf	__pbssBANK1& (0+127)
  3463                           
  3464                           ; Clear objects allocated to BANK2
  3465  0047  3065               	movlw	low __pbssBANK2
  3466  0048  0084               	movwf	4
  3467  0049  3001               	movlw	high __pbssBANK2
  3468  004A  0085               	movwf	5
  3469  004B  300A               	movlw	10
  3470  004C  00FE               	movwf	btemp
  3471  004D  3000               	movlw	0
  3472  004E  00FF               	movwf	btemp+1
  3473  004F  31B3  23BB  3180   	fcall	clear_ram0
  3474                           
  3475                           ; Clear objects allocated to BANK3
  3476  0052  30A0               	movlw	low __pbssBANK3
  3477  0053  0084               	movwf	4
  3478  0054  3001               	movlw	high __pbssBANK3
  3479  0055  0085               	movwf	5
  3480  0056  303A               	movlw	58
  3481  0057  00FE               	movwf	btemp
  3482  0058  3000               	movlw	0
  3483  0059  00FF               	movwf	btemp+1
  3484  005A  31B3  23BB  3180   	fcall	clear_ram0
  3485                           
  3486                           ; Clear objects allocated to BANK4
  3487  005D  3020               	movlw	low __pbssBANK4
  3488  005E  0084               	movwf	4
  3489  005F  3002               	movlw	high __pbssBANK4
  3490  0060  0085               	movwf	5
  3491  0061  3020               	movlw	32
  3492  0062  00FE               	movwf	btemp
  3493  0063  3000               	movlw	0
  3494  0064  00FF               	movwf	btemp+1
  3495  0065  31B3  23BB         	fcall	clear_ram0
  3496  0067                     end_of_initialization:	
  3497                           ;End of C runtime variable initialization code
  3498                           
  3499  0067                     __end_of__initialization:	
  3500  0067  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3501  0068  0020               	movlb	0
  3502  0069  31B6  2E0E         	ljmp	_main	;jump to C main() function
  3503                           
  3504                           	psect	bssCOMMON
  3505  007C                     __pbssCOMMON:	
  3506  007C                     _toggleColor:	
  3507  007C                     	ds	1
  3508                           
  3509                           	psect	bssBANK1
  3510  00EF                     __pbssBANK1:	
  3511  00EF                     _tmr1_flag:	
  3512  00EF                     	ds	1
  3513                           
  3514                           	psect	bssBANK2
  3515  0165                     __pbssBANK2:	
  3516  0165                     _width:	
  3517  0165                     	ds	2
  3518  0167                     _prec:	
  3519  0167                     	ds	2
  3520  0169                     _flags:	
  3521  0169                     	ds	2
  3522  016B                     _adcOffset:	
  3523  016B                     	ds	2
  3524  016D                     _adcGain:	
  3525  016D                     	ds	2
  3526                           
  3527                           	psect	bssBANK3
  3528  01A0                     __pbssBANK3:	
  3529  01A0                     _cellVoltages:	
  3530  01A0                     	ds	10
  3531  01AA                     logf@F469:	
  3532  01AA                     	ds	4
  3533  01AE                     BQ76920@shuntResistorValue_mOhm:	
  3534  01AE                     	ds	4
  3535  01B2                     _shuntResistorValue_mOhm:	
  3536  01B2                     	ds	4
  3537  01B6                     _temperatureThermistor:	
  3538  01B6                     	ds	4
  3539  01BA                     _batCurrent:	
  3540  01BA                     	ds	4
  3541  01BE                     _batVoltage:	
  3542  01BE                     	ds	4
  3543  01C2                     _errno:	
  3544  01C2                     	ds	2
  3545  01C4                     _nout:	
  3546  01C4                     	ds	2
  3547  01C6                     _minCellVoltage:	
  3548  01C6                     	ds	2
  3549  01C8                     _maxCellVoltage:	
  3550  01C8                     	ds	2
  3551  01CA                     _maxCellTempDischarge:	
  3552  01CA                     	ds	2
  3553  01CC                     _maxCellTempCharge:	
  3554  01CC                     	ds	2
  3555  01CE                     _minCellTempDischarge:	
  3556  01CE                     	ds	2
  3557  01D0                     _minCellTempCharge:	
  3558  01D0                     	ds	2
  3559  01D2                     BQ76920@protect3:	
  3560  01D2                     	ds	1
  3561  01D3                     BQ76920@protect2:	
  3562  01D3                     	ds	1
  3563  01D4                     BQ76920@protect1:	
  3564  01D4                     	ds	1
  3565  01D5                     myIsr@count:	
  3566  01D5                     	ds	1
  3567  01D6                     _protect3:	
  3568  01D6                     	ds	1
  3569  01D7                     _protect2:	
  3570  01D7                     	ds	1
  3571  01D8                     _protect1:	
  3572  01D8                     	ds	1
  3573  01D9                     _currState:	
  3574  01D9                     	ds	1
  3575                           
  3576                           	psect	dataBANK3
  3577  01DA                     __pdataBANK3:	
  3578  01DA                     stoa@F1152:	
  3579  01DA                     	ds	7
  3580  01E1                     _thermistorBetaValue:	
  3581  01E1                     	ds	2
  3582                           
  3583                           	psect	bssBANK4
  3584  0220                     __pbssBANK4:	
  3585  0220                     _dbuf:	
  3586  0220                     	ds	32
  3587                           
  3588                           	psect	clrtext
  3589  33BB                     clear_ram0:	
  3590                           ;	Called with FSR0 containing the base address, and
  3591                           ;	btemp/btemp+1 has the size to clear
  3592                           
  3593  33BB  0064               	clrwdt	;clear the watchdog before getting into this loop
  3594  33BC                     clrloop0:	
  3595  33BC  0180               	clrf	0	;clear RAM location pointed to by FSR
  3596  33BD  3101               	addfsr 0,1
  3597  33BE  3001               	movlw	1
  3598  33BF  02FE               	subwf	126,f
  3599  33C0  3000               	movlw	0
  3600  33C1  3BFF               	subwfb	127,f
  3601  33C2  087F               	movf	127,w
  3602  33C3  047E               	iorwf	126,w
  3603  33C4  1903               	btfsc	3,2
  3604  33C5  3400               	retlw	0	;all done for this memory range, return
  3605  33C6  2BBC               	goto	clrloop0	;have we reached the end yet?
  3606                           
  3607                           	psect	cstackBANK3
  3608  01E3                     __pcstackBANK3:	
  3609  01E3                     ??_main:	
  3610                           
  3611                           ; 1 bytes @ 0x0
  3612  01E3                     	ds	2
  3613                           
  3614                           	psect	cstackBANK2
  3615  0120                     __pcstackBANK2:	
  3616  0120                     logf@R:	
  3617                           
  3618                           ; 4 bytes @ 0x0
  3619  0120                     	ds	4
  3620  0124                     logf@t1:	
  3621                           
  3622                           ; 4 bytes @ 0x4
  3623  0124                     	ds	4
  3624  0128                     logf@t2:	
  3625                           
  3626                           ; 4 bytes @ 0x8
  3627  0128                     	ds	4
  3628  012C                     _logf$2048:	
  3629                           
  3630                           ; 4 bytes @ 0xC
  3631  012C                     	ds	4
  3632  0130                     _logf$2049:	
  3633                           
  3634                           ; 4 bytes @ 0x10
  3635  0130                     	ds	4
  3636  0134                     _logf$2050:	
  3637                           
  3638                           ; 4 bytes @ 0x14
  3639  0134                     	ds	4
  3640  0138                     _logf$2051:	
  3641                           
  3642                           ; 4 bytes @ 0x18
  3643  0138                     	ds	4
  3644  013C                     logf@k:	
  3645                           
  3646                           ; 2 bytes @ 0x1C
  3647  013C                     	ds	2
  3648  013E                     logf@hfsq:	
  3649                           
  3650                           ; 4 bytes @ 0x1E
  3651  013E                     	ds	4
  3652  0142                     logf@dk:	
  3653                           
  3654                           ; 4 bytes @ 0x22
  3655  0142                     	ds	4
  3656  0146                     logf@s:	
  3657                           
  3658                           ; 4 bytes @ 0x26
  3659  0146                     	ds	4
  3660  014A                     logf@z:	
  3661                           
  3662                           ; 4 bytes @ 0x2A
  3663  014A                     	ds	4
  3664  014E                     logf@w:	
  3665                           
  3666                           ; 4 bytes @ 0x2E
  3667  014E                     	ds	4
  3668  0152                     _logf$2047:	
  3669                           
  3670                           ; 4 bytes @ 0x32
  3671  0152                     	ds	4
  3672  0156                     logf@u:	
  3673                           
  3674                           ; 4 bytes @ 0x36
  3675  0156                     	ds	4
  3676  015A                     logf@f:	
  3677                           
  3678                           ; 4 bytes @ 0x3A
  3679  015A                     	ds	4
  3680  015E                     logf@ix:	
  3681                           
  3682                           ; 4 bytes @ 0x3E
  3683  015E                     	ds	4
  3684  0162                     ??_statemachine:	
  3685                           
  3686                           ; 1 bytes @ 0x42
  3687  0162                     	ds	2
  3688  0164                     statemachine@success:	
  3689                           
  3690                           ; 1 bytes @ 0x44
  3691  0164                     	ds	1
  3692                           
  3693                           	psect	cstackBANK1
  3694  00A0                     __pcstackBANK1:	
  3695  00A0                     ?___flsub:	
  3696  00A0                     vfpfcnvrt@cp:	
  3697                           ; 4 bytes @ 0x0
  3698                           
  3699  00A0                     setShortCircuitProtection@scaler:	
  3700                           ; 2 bytes @ 0x0
  3701                           
  3702  00A0                     setOverCurrentDischargeProtection@scaler:	
  3703                           ; 4 bytes @ 0x0
  3704                           
  3705  00A0                     ___flsub@a:	
  3706                           ; 4 bytes @ 0x0
  3707                           
  3708                           
  3709                           ; 4 bytes @ 0x0
  3710  00A0                     	ds	2
  3711  00A2                     vfpfcnvrt@done:	
  3712                           
  3713                           ; 2 bytes @ 0x2
  3714  00A2                     	ds	2
  3715  00A4                     _vfpfcnvrt$1257:	
  3716  00A4                     ___flsub@b:	
  3717                           ; 2 bytes @ 0x4
  3718                           
  3719  00A4                     _setShortCircuitProtection$2033:	
  3720                           ; 4 bytes @ 0x4
  3721                           
  3722  00A4                     _setOverCurrentDischargeProtection$2034:	
  3723                           ; 4 bytes @ 0x4
  3724                           
  3725                           
  3726                           ; 4 bytes @ 0x4
  3727  00A4                     	ds	2
  3728  00A6                     _vfpfcnvrt$1258:	
  3729                           
  3730                           ; 2 bytes @ 0x6
  3731  00A6                     	ds	2
  3732  00A8                     ?_logf:	
  3733  00A8                     ?___fltol:	
  3734                           ; 4 bytes @ 0x8
  3735                           
  3736  00A8                     setShortCircuitProtection@i:	
  3737                           ; 4 bytes @ 0x8
  3738                           
  3739  00A8                     setOverCurrentDischargeProtection@i:	
  3740                           ; 2 bytes @ 0x8
  3741                           
  3742  00A8                     ___fltol@f1:	
  3743                           ; 2 bytes @ 0x8
  3744                           
  3745  00A8                     logf@x:	
  3746                           ; 4 bytes @ 0x8
  3747                           
  3748  00A8                     vfpfcnvrt@ll:	
  3749                           ; 4 bytes @ 0x8
  3750                           
  3751                           
  3752                           ; 8 bytes @ 0x8
  3753  00A8                     	ds	2
  3754  00AA                     setShortCircuitProtection@i_976:	
  3755  00AA                     setOverCurrentDischargeProtection@i_985:	
  3756                           ; 2 bytes @ 0xA
  3757                           
  3758                           
  3759                           ; 2 bytes @ 0xA
  3760  00AA                     	ds	2
  3761  00AC                     ??_logf:	
  3762  00AC                     ??___fltol:	
  3763                           ; 1 bytes @ 0xC
  3764                           
  3765                           
  3766                           ; 1 bytes @ 0xC
  3767  00AC                     	ds	4
  3768  00B0                     vfpfcnvrt@vp:	
  3769                           
  3770                           ; 2 bytes @ 0x10
  3771  00B0                     	ds	1
  3772  00B1                     ??_updateCurrent:	
  3773  00B1                     ??_updateVoltages:	
  3774                           ; 1 bytes @ 0x11
  3775                           
  3776                           
  3777                           ; 1 bytes @ 0x11
  3778  00B1                     	ds	1
  3779  00B2                     vfpfcnvrt@c:	
  3780                           
  3781                           ; 1 bytes @ 0x12
  3782  00B2                     	ds	1
  3783  00B3                     vfpfcnvrt@llu:	
  3784                           
  3785                           ; 8 bytes @ 0x13
  3786  00B3                     	ds	1
  3787  00B4                     ??_updateTemperatures:	
  3788  00B4                     _updateVoltages$2035:	
  3789                           ; 1 bytes @ 0x14
  3790                           
  3791                           
  3792                           ; 4 bytes @ 0x14
  3793  00B4                     	ds	1
  3794  00B5                     updateCurrent@adcVal:	
  3795                           
  3796                           ; 2 bytes @ 0x15
  3797  00B5                     	ds	2
  3798  00B7                     _updateTemperatures$2036:	
  3799                           
  3800                           ; 4 bytes @ 0x17
  3801  00B7                     	ds	1
  3802  00B8                     updateVoltages@adcVal:	
  3803                           
  3804                           ; 4 bytes @ 0x18
  3805  00B8                     	ds	3
  3806  00BB                     ?_vsnprintf:	
  3807  00BB                     vsnprintf@s:	
  3808                           ; 2 bytes @ 0x1B
  3809                           
  3810  00BB                     _updateTemperatures$2037:	
  3811                           ; 2 bytes @ 0x1B
  3812                           
  3813                           
  3814                           ; 4 bytes @ 0x1B
  3815  00BB                     	ds	2
  3816  00BD                     vsnprintf@n:	
  3817                           
  3818                           ; 2 bytes @ 0x1D
  3819  00BD                     	ds	2
  3820  00BF                     vsnprintf@fmt:	
  3821  00BF                     _updateTemperatures$2038:	
  3822                           ; 2 bytes @ 0x1F
  3823                           
  3824                           
  3825                           ; 4 bytes @ 0x1F
  3826  00BF                     	ds	2
  3827  00C1                     vsnprintf@ap:	
  3828                           
  3829                           ; 1 bytes @ 0x21
  3830  00C1                     	ds	1
  3831  00C2                     _vsnprintf$1829:	
  3832                           
  3833                           ; 2 bytes @ 0x22
  3834  00C2                     	ds	1
  3835  00C3                     _updateTemperatures$2039:	
  3836                           
  3837                           ; 4 bytes @ 0x23
  3838  00C3                     	ds	1
  3839  00C4                     vsnprintf@cnt:	
  3840                           
  3841                           ; 2 bytes @ 0x24
  3842  00C4                     	ds	2
  3843  00C6                     vsnprintf@f:	
  3844                           
  3845                           ; 6 bytes @ 0x26
  3846  00C6                     	ds	1
  3847  00C7                     _updateTemperatures$2040:	
  3848                           
  3849                           ; 4 bytes @ 0x27
  3850  00C7                     	ds	4
  3851  00CB                     _updateTemperatures$2041:	
  3852                           
  3853                           ; 4 bytes @ 0x2B
  3854  00CB                     	ds	1
  3855  00CC                     ?_snprintf:	
  3856  00CC                     snprintf@s:	
  3857                           ; 2 bytes @ 0x2C
  3858                           
  3859                           
  3860                           ; 2 bytes @ 0x2C
  3861  00CC                     	ds	2
  3862  00CE                     snprintf@n:	
  3863                           
  3864                           ; 2 bytes @ 0x2E
  3865  00CE                     	ds	1
  3866  00CF                     _updateTemperatures$2042:	
  3867                           
  3868                           ; 4 bytes @ 0x2F
  3869  00CF                     	ds	1
  3870  00D0                     snprintf@fmt:	
  3871                           
  3872                           ; 2 bytes @ 0x30
  3873  00D0                     	ds	3
  3874  00D3                     _updateTemperatures$2043:	
  3875                           
  3876                           ; 4 bytes @ 0x33
  3877  00D3                     	ds	4
  3878  00D7                     _updateTemperatures$2044:	
  3879                           
  3880                           ; 4 bytes @ 0x37
  3881  00D7                     	ds	4
  3882  00DB                     _updateTemperatures$2045:	
  3883                           
  3884                           ; 4 bytes @ 0x3B
  3885  00DB                     	ds	4
  3886  00DF                     _updateTemperatures$2046:	
  3887                           
  3888                           ; 4 bytes @ 0x3F
  3889  00DF                     	ds	4
  3890  00E3                     updateTemperatures@tmp:	
  3891                           
  3892                           ; 4 bytes @ 0x43
  3893  00E3                     	ds	4
  3894  00E7                     updateTemperatures@adcVal:	
  3895                           
  3896                           ; 2 bytes @ 0x47
  3897  00E7                     	ds	2
  3898  00E9                     updateTemperatures@vtsx:	
  3899                           
  3900                           ; 2 bytes @ 0x49
  3901  00E9                     	ds	2
  3902  00EB                     updateTemperatures@rts:	
  3903                           
  3904                           ; 4 bytes @ 0x4B
  3905  00EB                     	ds	4
  3906                           
  3907                           	psect	cstackCOMMON
  3908  0070                     __pcstackCOMMON:	
  3909  0070                     ?_initClock:	
  3910  0070                     ?_init_GPIO:	
  3911                           ; 1 bytes @ 0x0
  3912                           
  3913  0070                     ?_initWDT:	
  3914                           ; 1 bytes @ 0x0
  3915                           
  3916  0070                     ?_init_I2C:	
  3917                           ; 1 bytes @ 0x0
  3918                           
  3919  0070                     ?_init_TMR1:	
  3920                           ; 1 bytes @ 0x0
  3921                           
  3922  0070                     ?_init_RGB:	
  3923                           ; 1 bytes @ 0x0
  3924                           
  3925  0070                     ?_watchdog_timeout_shutdown:	
  3926                           ; 1 bytes @ 0x0
  3927                           
  3928  0070                     ?_statemachine:	
  3929                           ; 1 bytes @ 0x0
  3930                           
  3931  0070                     ?_RGB_AWAIT_AFE_CONN:	
  3932                           ; 1 bytes @ 0x0
  3933                           
  3934  0070                     ?_init_AFE:	
  3935                           ; 1 bytes @ 0x0
  3936                           
  3937  0070                     ?_AFE_UPDATE:	
  3938                           ; 1 bytes @ 0x0
  3939                           
  3940  0070                     ?_printcellParameters:	
  3941                           ; 1 bytes @ 0x0
  3942                           
  3943  0070                     ?_internal_16:	
  3944                           ; 1 bytes @ 0x0
  3945                           
  3946  0070                     ?_updateCurrent:	
  3947                           ; 1 bytes @ 0x0
  3948                           
  3949  0070                     ?_updateVoltages:	
  3950                           ; 1 bytes @ 0x0
  3951                           
  3952  0070                     ?_updateTemperatures:	
  3953                           ; 1 bytes @ 0x0
  3954                           
  3955  0070                     ?_putch:	
  3956                           ; 1 bytes @ 0x0
  3957                           
  3958  0070                     ?_myIsr:	
  3959                           ; 1 bytes @ 0x0
  3960                           
  3961  0070                     ??_myIsr:	
  3962                           ; 1 bytes @ 0x0
  3963                           
  3964  0070                     ?_main:	
  3965                           ; 1 bytes @ 0x0
  3966                           
  3967  0070                     ?_EUSART_Write:	
  3968                           ; 1 bytes @ 0x0
  3969                           
  3970  0070                     ?_send_I2C_startBit:	
  3971                           ; 1 bytes @ 0x0
  3972                           
  3973  0070                     ?_send_I2C_stopBit:	
  3974                           ; 1 bytes @ 0x0
  3975                           
  3976  0070                     ?_send_I2C_NACK:	
  3977                           ; 1 bytes @ 0x0
  3978                           
  3979  0070                     putch@c:	
  3980                           ; 1 bytes @ 0x0
  3981                           
  3982                           
  3983                           ; 1 bytes @ 0x0
  3984  0070                     	ds	1
  3985  0071                     ??_initClock:	
  3986  0071                     ??_init_GPIO:	
  3987                           ; 1 bytes @ 0x1
  3988                           
  3989  0071                     ??_initWDT:	
  3990                           ; 1 bytes @ 0x1
  3991                           
  3992  0071                     ??_init_I2C:	
  3993                           ; 1 bytes @ 0x1
  3994                           
  3995  0071                     ??_init_TMR1:	
  3996                           ; 1 bytes @ 0x1
  3997                           
  3998  0071                     ??_init_RGB:	
  3999                           ; 1 bytes @ 0x1
  4000                           
  4001  0071                     ?_RGB_color:	
  4002                           ; 1 bytes @ 0x1
  4003                           
  4004  0071                     ??_internal_16:	
  4005                           ; 1 bytes @ 0x1
  4006                           
  4007  0071                     ?_setShuntResistorValue:	
  4008                           ; 1 bytes @ 0x1
  4009                           
  4010  0071                     ??_putch:	
  4011                           ; 1 bytes @ 0x1
  4012                           
  4013  0071                     ??_EUSART_Write:	
  4014                           ; 1 bytes @ 0x1
  4015                           
  4016  0071                     ?_send_I2C_data:	
  4017                           ; 1 bytes @ 0x1
  4018                           
  4019  0071                     ?_send_I2C_controlByte:	
  4020                           ; 1 bytes @ 0x1
  4021                           
  4022  0071                     ??_send_I2C_startBit:	
  4023                           ; 1 bytes @ 0x1
  4024                           
  4025  0071                     ??_send_I2C_stopBit:	
  4026                           ; 1 bytes @ 0x1
  4027                           
  4028  0071                     ??_send_I2C_NACK:	
  4029                           ; 1 bytes @ 0x1
  4030                           
  4031  0071                     ??___aodiv:	
  4032                           ; 1 bytes @ 0x1
  4033                           
  4034  0071                     ??___aomod:	
  4035                           ; 1 bytes @ 0x1
  4036                           
  4037  0071                     ??___lodiv:	
  4038                           ; 1 bytes @ 0x1
  4039                           
  4040  0071                     ??___lomod:	
  4041                           ; 1 bytes @ 0x1
  4042                           
  4043  0071                     ?_fputc:	
  4044                           ; 1 bytes @ 0x1
  4045                           
  4046  0071                     ?_strlen:	
  4047                           ; 2 bytes @ 0x1
  4048                           
  4049  0071                     ?_isupper:	
  4050                           ; 2 bytes @ 0x1
  4051                           
  4052  0071                     ?_isalpha:	
  4053                           ; 2 bytes @ 0x1
  4054                           
  4055  0071                     ?_isdigit:	
  4056                           ; 2 bytes @ 0x1
  4057                           
  4058  0071                     ?_strncmp:	
  4059                           ; 2 bytes @ 0x1
  4060                           
  4061  0071                     ?__Umul8_16:	
  4062                           ; 2 bytes @ 0x1
  4063                           
  4064  0071                     ?_isspace:	
  4065                           ; 2 bytes @ 0x1
  4066                           
  4067  0071                     ?_islower:	
  4068                           ; 2 bytes @ 0x1
  4069                           
  4070  0071                     ?_read_I2C_data:	
  4071                           ; 2 bytes @ 0x1
  4072                           
  4073  0071                     ?___wmul:	
  4074                           ; 2 bytes @ 0x1
  4075                           
  4076  0071                     ?___lmul:	
  4077                           ; 2 bytes @ 0x1
  4078                           
  4079  0071                     ?___xxtofl:	
  4080                           ; 4 bytes @ 0x1
  4081                           
  4082  0071                     EUSART_Write@txData:	
  4083                           ; 4 bytes @ 0x1
  4084                           
  4085  0071                     __Umul8_16@multiplicand:	
  4086                           ; 1 bytes @ 0x1
  4087                           
  4088  0071                     send_I2C_data@databyte:	
  4089                           ; 1 bytes @ 0x1
  4090                           
  4091  0071                     send_I2C_controlByte@BlockAddress:	
  4092                           ; 2 bytes @ 0x1
  4093                           
  4094  0071                     RGB_color@color:	
  4095                           ; 2 bytes @ 0x1
  4096                           
  4097  0071                     ___wmul@multiplier:	
  4098                           ; 2 bytes @ 0x1
  4099                           
  4100  0071                     isalpha@c:	
  4101                           ; 2 bytes @ 0x1
  4102                           
  4103  0071                     isdigit@c:	
  4104                           ; 2 bytes @ 0x1
  4105                           
  4106  0071                     isspace@c:	
  4107                           ; 2 bytes @ 0x1
  4108                           
  4109  0071                     isupper@c:	
  4110                           ; 2 bytes @ 0x1
  4111                           
  4112  0071                     fputc@c:	
  4113                           ; 2 bytes @ 0x1
  4114                           
  4115  0071                     strlen@s:	
  4116                           ; 2 bytes @ 0x1
  4117                           
  4118  0071                     strncmp@_l:	
  4119                           ; 2 bytes @ 0x1
  4120                           
  4121  0071                     islower@c:	
  4122                           ; 2 bytes @ 0x1
  4123                           
  4124  0071                     setShuntResistorValue@res_mOhm:	
  4125                           ; 2 bytes @ 0x1
  4126                           
  4127  0071                     ___lmul@multiplier:	
  4128                           ; 4 bytes @ 0x1
  4129                           
  4130  0071                     ___xxtofl@val:	
  4131                           ; 4 bytes @ 0x1
  4132                           
  4133                           
  4134                           ; 4 bytes @ 0x1
  4135  0071                     	ds	1
  4136  0072                     ?_EUSART_Write_Text:	
  4137  0072                     ___aodiv@counter:	
  4138                           ; 1 bytes @ 0x2
  4139                           
  4140  0072                     ___aomod@counter:	
  4141                           ; 1 bytes @ 0x2
  4142                           
  4143  0072                     ___lomod@counter:	
  4144                           ; 1 bytes @ 0x2
  4145                           
  4146  0072                     EUSART_Write_Text@text:	
  4147                           ; 1 bytes @ 0x2
  4148                           
  4149  0072                     ___lodiv@quotient:	
  4150                           ; 2 bytes @ 0x2
  4151                           
  4152                           
  4153                           ; 8 bytes @ 0x2
  4154  0072                     	ds	1
  4155  0073                     ??_watchdog_timeout_shutdown:	
  4156  0073                     ??_RGB_AWAIT_AFE_CONN:	
  4157                           ; 1 bytes @ 0x3
  4158                           
  4159  0073                     ??_RGB_color:	
  4160                           ; 1 bytes @ 0x3
  4161                           
  4162  0073                     ??_strlen:	
  4163                           ; 1 bytes @ 0x3
  4164                           
  4165  0073                     ??_isupper:	
  4166                           ; 1 bytes @ 0x3
  4167                           
  4168  0073                     ??_isalpha:	
  4169                           ; 1 bytes @ 0x3
  4170                           
  4171  0073                     ??_isdigit:	
  4172                           ; 1 bytes @ 0x3
  4173                           
  4174  0073                     ??__Umul8_16:	
  4175                           ; 1 bytes @ 0x3
  4176                           
  4177  0073                     ??_isspace:	
  4178                           ; 1 bytes @ 0x3
  4179                           
  4180  0073                     ??_islower:	
  4181                           ; 1 bytes @ 0x3
  4182                           
  4183  0073                     ??_send_I2C_data:	
  4184                           ; 1 bytes @ 0x3
  4185                           
  4186  0073                     ??_read_I2C_data:	
  4187                           ; 1 bytes @ 0x3
  4188                           
  4189  0073                     ___aodiv@sign:	
  4190                           ; 1 bytes @ 0x3
  4191                           
  4192  0073                     ___aomod@sign:	
  4193                           ; 1 bytes @ 0x3
  4194                           
  4195  0073                     send_I2C_controlByte@RW_bit:	
  4196                           ; 1 bytes @ 0x3
  4197                           
  4198  0073                     ___wmul@multiplicand:	
  4199                           ; 2 bytes @ 0x3
  4200                           
  4201  0073                     fputc@fp:	
  4202                           ; 2 bytes @ 0x3
  4203                           
  4204  0073                     strlen@a:	
  4205                           ; 2 bytes @ 0x3
  4206                           
  4207  0073                     strncmp@_r:	
  4208                           ; 2 bytes @ 0x3
  4209                           
  4210                           
  4211                           ; 2 bytes @ 0x3
  4212  0073                     	ds	1
  4213  0074                     ??_EUSART_Write_Text:	
  4214  0074                     ?_abs:	
  4215                           ; 1 bytes @ 0x4
  4216                           
  4217  0074                     abs@a:	
  4218                           ; 2 bytes @ 0x4
  4219                           
  4220  0074                     ___aodiv@quotient:	
  4221                           ; 2 bytes @ 0x4
  4222                           
  4223                           
  4224                           ; 8 bytes @ 0x4
  4225  0074                     	ds	1
  4226  0075                     ??_setShuntResistorValue:	
  4227  0075                     ??_fputc:	
  4228                           ; 1 bytes @ 0x5
  4229                           
  4230  0075                     ??_send_I2C_controlByte:	
  4231                           ; 1 bytes @ 0x5
  4232                           
  4233  0075                     ?_I2C_writeRegister:	
  4234                           ; 1 bytes @ 0x5
  4235                           
  4236  0075                     ??___wmul:	
  4237                           ; 1 bytes @ 0x5
  4238                           
  4239  0075                     ??___xxtofl:	
  4240                           ; 1 bytes @ 0x5
  4241                           
  4242  0075                     ?_readRegister:	
  4243                           ; 1 bytes @ 0x5
  4244                           
  4245  0075                     _isspace$1684:	
  4246                           ; 2 bytes @ 0x5
  4247                           
  4248  0075                     EUSART_Write_Text@i:	
  4249                           ; 1 bytes @ 0x5
  4250                           
  4251  0075                     I2C_writeRegister@slaveAddress:	
  4252                           ; 2 bytes @ 0x5
  4253                           
  4254  0075                     readRegister@slaveAddress:	
  4255                           ; 2 bytes @ 0x5
  4256                           
  4257  0075                     ___wmul@product:	
  4258                           ; 2 bytes @ 0x5
  4259                           
  4260  0075                     strncmp@n:	
  4261                           ; 2 bytes @ 0x5
  4262                           
  4263  0075                     __Umul8_16@product:	
  4264                           ; 2 bytes @ 0x5
  4265                           
  4266  0075                     ___lmul@multiplicand:	
  4267                           ; 2 bytes @ 0x5
  4268                           
  4269                           
  4270                           ; 4 bytes @ 0x5
  4271  0075                     	ds	1
  4272  0076                     ??_abs:	
  4273                           
  4274                           ; 1 bytes @ 0x6
  4275  0076                     	ds	1
  4276  0077                     ??_setTemperatureLimitsint:	
  4277  0077                     ??_strncmp:	
  4278                           ; 1 bytes @ 0x7
  4279                           
  4280  0077                     ?_toupper:	
  4281                           ; 1 bytes @ 0x7
  4282                           
  4283  0077                     ?_atoi:	
  4284                           ; 2 bytes @ 0x7
  4285                           
  4286  0077                     I2C_writeRegister@regAddress:	
  4287                           ; 2 bytes @ 0x7
  4288                           
  4289  0077                     readRegister@regAddress:	
  4290                           ; 2 bytes @ 0x7
  4291                           
  4292  0077                     atoi@s:	
  4293                           ; 2 bytes @ 0x7
  4294                           
  4295  0077                     toupper@c:	
  4296                           ; 2 bytes @ 0x7
  4297                           
  4298  0077                     __Umul8_16@word_mpld:	
  4299                           ; 2 bytes @ 0x7
  4300                           
  4301                           
  4302                           ; 2 bytes @ 0x7
  4303  0077                     	ds	1
  4304  0078                     strncmp@l:	
  4305                           
  4306                           ; 2 bytes @ 0x8
  4307  0078                     	ds	1
  4308  0079                     ??_readRegister:	
  4309  0079                     ??___lmul:	
  4310                           ; 1 bytes @ 0x9
  4311                           
  4312  0079                     ??___aldiv:	
  4313                           ; 1 bytes @ 0x9
  4314                           
  4315  0079                     __Umul8_16@multiplier:	
  4316                           ; 1 bytes @ 0x9
  4317                           
  4318  0079                     I2C_writeRegister@data:	
  4319                           ; 1 bytes @ 0x9
  4320                           
  4321  0079                     readRegister@recievedData:	
  4322                           ; 2 bytes @ 0x9
  4323                           
  4324  0079                     _toupper$1792:	
  4325                           ; 2 bytes @ 0x9
  4326                           
  4327                           
  4328                           ; 2 bytes @ 0x9
  4329  0079                     	ds	1
  4330  007A                     ??_stoa:	
  4331  007A                     ??___flneg:	
  4332                           ; 1 bytes @ 0xA
  4333                           
  4334  007A                     ??___flsub:	
  4335                           ; 1 bytes @ 0xA
  4336                           
  4337  007A                     ?_fputs:	
  4338                           ; 1 bytes @ 0xA
  4339                           
  4340  007A                     ___fltol@sign1:	
  4341                           ; 2 bytes @ 0xA
  4342                           
  4343  007A                     ___lodiv@counter:	
  4344                           ; 1 bytes @ 0xA
  4345                           
  4346  007A                     EUSART_Initialize@x:	
  4347                           ; 1 bytes @ 0xA
  4348                           
  4349  007A                     fputs@fp:	
  4350                           ; 2 bytes @ 0xA
  4351                           
  4352  007A                     strncmp@r:	
  4353                           ; 2 bytes @ 0xA
  4354                           
  4355                           
  4356                           ; 2 bytes @ 0xA
  4357  007A                     	ds	1
  4358  007B                     ??_init_AFE:	
  4359  007B                     ??_I2C_writeRegister:	
  4360                           ; 1 bytes @ 0xB
  4361                           
  4362  007B                     enableDischarging@sys_ctrl2:	
  4363                           ; 1 bytes @ 0xB
  4364                           
  4365  007B                     enableCharging@sys_ctrl2:	
  4366                           ; 1 bytes @ 0xB
  4367                           
  4368  007B                     ___fltol@exp1:	
  4369                           ; 1 bytes @ 0xB
  4370                           
  4371                           
  4372                           ; 1 bytes @ 0xB
  4373  007B                     	ds	1
  4374  007C                     ??_AFE_UPDATE:	
  4375  007C                     ??_printcellParameters:	
  4376                           ; 1 bytes @ 0xC
  4377                           
  4378                           
  4379                           	psect	cstackBANK0
  4380  0020                     __pcstackBANK0:	
  4381                           ; 1 bytes @ 0xC
  4382                           
  4383  0020                     ?_setTemperatureLimitsint:	
  4384  0020                     ?_enableDischarging:	
  4385                           ; 1 bytes @ 0x0
  4386                           
  4387  0020                     ?_enableCharging:	
  4388                           ; 1 bytes @ 0x0
  4389                           
  4390  0020                     ??_fputs:	
  4391                           ; 1 bytes @ 0x0
  4392                           
  4393  0020                     ??_toupper:	
  4394                           ; 1 bytes @ 0x0
  4395                           
  4396  0020                     ??_atoi:	
  4397                           ; 1 bytes @ 0x0
  4398                           
  4399  0020                     ?_beginAFEcommunication:	
  4400                           ; 1 bytes @ 0x0
  4401                           
  4402  0020                     ?_stoa:	
  4403                           ; 2 bytes @ 0x0
  4404                           
  4405  0020                     ?___aodiv:	
  4406                           ; 2 bytes @ 0x0
  4407                           
  4408  0020                     ?___aomod:	
  4409                           ; 8 bytes @ 0x0
  4410                           
  4411  0020                     ?___lodiv:	
  4412                           ; 8 bytes @ 0x0
  4413                           
  4414  0020                     ?___lomod:	
  4415                           ; 8 bytes @ 0x0
  4416                           
  4417  0020                     ___xxtofl@sign:	
  4418                           ; 8 bytes @ 0x0
  4419                           
  4420  0020                     setTemperatureLimitsint@minDischarge_degC:	
  4421                           ; 1 bytes @ 0x0
  4422                           
  4423  0020                     enableDischarging@enable:	
  4424                           ; 2 bytes @ 0x0
  4425                           
  4426  0020                     enableCharging@enable:	
  4427                           ; 2 bytes @ 0x0
  4428                           
  4429  0020                     stoa@fp:	
  4430                           ; 2 bytes @ 0x0
  4431                           
  4432  0020                     ___lmul@product:	
  4433                           ; 2 bytes @ 0x0
  4434                           
  4435  0020                     ___aodiv@divisor:	
  4436                           ; 4 bytes @ 0x0
  4437                           
  4438  0020                     ___aomod@divisor:	
  4439                           ; 8 bytes @ 0x0
  4440                           
  4441  0020                     ___lodiv@divisor:	
  4442                           ; 8 bytes @ 0x0
  4443                           
  4444  0020                     ___lomod@divisor:	
  4445                           ; 8 bytes @ 0x0
  4446                           
  4447                           
  4448                           ; 8 bytes @ 0x0
  4449  0020                     	ds	1
  4450  0021                     ___xxtofl@exp:	
  4451                           
  4452                           ; 1 bytes @ 0x1
  4453  0021                     	ds	1
  4454  0022                     ??_beginAFEcommunication:	
  4455  0022                     ??_enableDischarging:	
  4456                           ; 1 bytes @ 0x2
  4457                           
  4458  0022                     ??_enableCharging:	
  4459                           ; 1 bytes @ 0x2
  4460                           
  4461  0022                     fputs@c:	
  4462                           ; 1 bytes @ 0x2
  4463                           
  4464  0022                     setTemperatureLimitsint@maxDischarge_degC:	
  4465                           ; 1 bytes @ 0x2
  4466                           
  4467  0022                     stoa@s:	
  4468                           ; 2 bytes @ 0x2
  4469                           
  4470  0022                     ___xxtofl@arg:	
  4471                           ; 2 bytes @ 0x2
  4472                           
  4473                           
  4474                           ; 4 bytes @ 0x2
  4475  0022                     	ds	1
  4476  0023                     fputs@i:	
  4477                           
  4478                           ; 2 bytes @ 0x3
  4479  0023                     	ds	1
  4480  0024                     ?___aldiv:	
  4481  0024                     setTemperatureLimitsint@minCharge_degC:	
  4482                           ; 4 bytes @ 0x4
  4483                           
  4484  0024                     atoi@neg:	
  4485                           ; 2 bytes @ 0x4
  4486                           
  4487  0024                     ___aldiv@divisor:	
  4488                           ; 2 bytes @ 0x4
  4489                           
  4490  0024                     stoa@nuls:	
  4491                           ; 4 bytes @ 0x4
  4492                           
  4493                           
  4494                           ; 7 bytes @ 0x4
  4495  0024                     	ds	1
  4496  0025                     fputs@s:	
  4497                           
  4498                           ; 1 bytes @ 0x5
  4499  0025                     	ds	1
  4500  0026                     ?_pad:	
  4501  0026                     ?___flmul:	
  4502                           ; 2 bytes @ 0x6
  4503                           
  4504  0026                     setTemperatureLimitsint@maxCharge_degC:	
  4505                           ; 4 bytes @ 0x6
  4506                           
  4507  0026                     pad@fp:	
  4508                           ; 2 bytes @ 0x6
  4509                           
  4510  0026                     _atoi$1657:	
  4511                           ; 2 bytes @ 0x6
  4512                           
  4513  0026                     ___flmul@b:	
  4514                           ; 2 bytes @ 0x6
  4515                           
  4516                           
  4517                           ; 4 bytes @ 0x6
  4518  0026                     	ds	2
  4519  0028                     pad@buf:	
  4520  0028                     _atoi$1659:	
  4521                           ; 1 bytes @ 0x8
  4522                           
  4523  0028                     ___aldiv@dividend:	
  4524                           ; 2 bytes @ 0x8
  4525                           
  4526  0028                     ___aodiv@dividend:	
  4527                           ; 4 bytes @ 0x8
  4528                           
  4529  0028                     ___aomod@dividend:	
  4530                           ; 8 bytes @ 0x8
  4531                           
  4532  0028                     ___lodiv@dividend:	
  4533                           ; 8 bytes @ 0x8
  4534                           
  4535  0028                     ___lomod@dividend:	
  4536                           ; 8 bytes @ 0x8
  4537                           
  4538                           
  4539                           ; 8 bytes @ 0x8
  4540  0028                     	ds	1
  4541  0029                     pad@p:	
  4542                           
  4543                           ; 2 bytes @ 0x9
  4544  0029                     	ds	1
  4545  002A                     _atoi$1658:	
  4546  002A                     ___flmul@a:	
  4547                           ; 1 bytes @ 0xA
  4548                           
  4549                           
  4550                           ; 4 bytes @ 0xA
  4551  002A                     	ds	1
  4552  002B                     ??_pad:	
  4553  002B                     beginAFEcommunication@commSuccess:	
  4554                           ; 1 bytes @ 0xB
  4555                           
  4556  002B                     stoa@i:	
  4557                           ; 2 bytes @ 0xB
  4558                           
  4559  002B                     atoi@n:	
  4560                           ; 2 bytes @ 0xB
  4561                           
  4562                           
  4563                           ; 2 bytes @ 0xB
  4564  002B                     	ds	1
  4565  002C                     ___aldiv@counter:	
  4566  002C                     pad@i:	
  4567                           ; 1 bytes @ 0xC
  4568                           
  4569                           
  4570                           ; 2 bytes @ 0xC
  4571  002C                     	ds	1
  4572  002D                     ___aldiv@sign:	
  4573  002D                     beginAFEcommunication@i:	
  4574                           ; 1 bytes @ 0xD
  4575                           
  4576  002D                     stoa@w:	
  4577                           ; 2 bytes @ 0xD
  4578                           
  4579                           
  4580                           ; 2 bytes @ 0xD
  4581  002D                     	ds	1
  4582  002E                     ??___flmul:	
  4583  002E                     pad@w:	
  4584                           ; 1 bytes @ 0xE
  4585                           
  4586  002E                     ___aldiv@quotient:	
  4587                           ; 2 bytes @ 0xE
  4588                           
  4589                           
  4590                           ; 4 bytes @ 0xE
  4591  002E                     	ds	1
  4592  002F                     stoa@cp:	
  4593                           
  4594                           ; 2 bytes @ 0xF
  4595  002F                     	ds	1
  4596  0030                     ?_ctoa:	
  4597  0030                     ?_dtoa:	
  4598                           ; 2 bytes @ 0x10
  4599                           
  4600  0030                     ?_otoa:	
  4601                           ; 2 bytes @ 0x10
  4602                           
  4603  0030                     ?_utoa:	
  4604                           ; 2 bytes @ 0x10
  4605                           
  4606  0030                     ?_xtoa:	
  4607                           ; 2 bytes @ 0x10
  4608                           
  4609  0030                     ctoa@fp:	
  4610                           ; 2 bytes @ 0x10
  4611                           
  4612  0030                     dtoa@fp:	
  4613                           ; 2 bytes @ 0x10
  4614                           
  4615  0030                     otoa@fp:	
  4616                           ; 2 bytes @ 0x10
  4617                           
  4618  0030                     utoa@fp:	
  4619                           ; 2 bytes @ 0x10
  4620                           
  4621  0030                     xtoa@fp:	
  4622                           ; 2 bytes @ 0x10
  4623                           
  4624                           
  4625                           ; 2 bytes @ 0x10
  4626  0030                     	ds	1
  4627  0031                     stoa@p:	
  4628                           
  4629                           ; 2 bytes @ 0x11
  4630  0031                     	ds	1
  4631  0032                     ?_EUSART_Initialize:	
  4632  0032                     ?_setCellUndervoltageProtection:	
  4633                           ; 1 bytes @ 0x12
  4634                           
  4635  0032                     ?_setCellOvervoltageProtection:	
  4636                           ; 1 bytes @ 0x12
  4637                           
  4638  0032                     ctoa@c:	
  4639                           ; 1 bytes @ 0x12
  4640                           
  4641  0032                     setCellUndervoltageProtection@voltage_mV:	
  4642                           ; 1 bytes @ 0x12
  4643                           
  4644  0032                     setCellOvervoltageProtection@voltage_mV:	
  4645                           ; 2 bytes @ 0x12
  4646                           
  4647  0032                     EUSART_Initialize@baudrate:	
  4648                           ; 2 bytes @ 0x12
  4649                           
  4650  0032                     dtoa@d:	
  4651                           ; 4 bytes @ 0x12
  4652                           
  4653  0032                     otoa@d:	
  4654                           ; 8 bytes @ 0x12
  4655                           
  4656  0032                     utoa@d:	
  4657                           ; 8 bytes @ 0x12
  4658                           
  4659  0032                     xtoa@d:	
  4660                           ; 8 bytes @ 0x12
  4661                           
  4662                           
  4663                           ; 8 bytes @ 0x12
  4664  0032                     	ds	1
  4665  0033                     ??_ctoa:	
  4666  0033                     ___flmul@sign:	
  4667                           ; 1 bytes @ 0x13
  4668                           
  4669  0033                     stoa@l:	
  4670                           ; 1 bytes @ 0x13
  4671                           
  4672                           
  4673                           ; 2 bytes @ 0x13
  4674  0033                     	ds	1
  4675  0034                     ___flmul@aexp:	
  4676  0034                     setCellUndervoltageProtection@delay_s:	
  4677                           ; 1 bytes @ 0x14
  4678                           
  4679  0034                     setCellOvervoltageProtection@delay_s:	
  4680                           ; 2 bytes @ 0x14
  4681                           
  4682  0034                     ctoa@w:	
  4683                           ; 2 bytes @ 0x14
  4684                           
  4685                           
  4686                           ; 2 bytes @ 0x14
  4687  0034                     	ds	1
  4688  0035                     ___flmul@grs:	
  4689                           
  4690                           ; 4 bytes @ 0x15
  4691  0035                     	ds	1
  4692  0036                     ??_EUSART_Initialize:	
  4693  0036                     ??_setCellUndervoltageProtection:	
  4694                           ; 1 bytes @ 0x16
  4695                           
  4696  0036                     ??_setCellOvervoltageProtection:	
  4697                           ; 1 bytes @ 0x16
  4698                           
  4699                           
  4700                           ; 1 bytes @ 0x16
  4701  0036                     	ds	3
  4702  0039                     ___flmul@bexp:	
  4703                           
  4704                           ; 1 bytes @ 0x19
  4705  0039                     	ds	1
  4706  003A                     ??_dtoa:	
  4707  003A                     ??_otoa:	
  4708                           ; 1 bytes @ 0x1A
  4709                           
  4710  003A                     ??_utoa:	
  4711                           ; 1 bytes @ 0x1A
  4712                           
  4713  003A                     xtoa@x:	
  4714                           ; 1 bytes @ 0x1A
  4715                           
  4716  003A                     ___flmul@prod:	
  4717                           ; 1 bytes @ 0x1A
  4718                           
  4719                           
  4720                           ; 4 bytes @ 0x1A
  4721  003A                     	ds	1
  4722  003B                     ??_xtoa:	
  4723  003B                     utoa@p:	
  4724                           ; 1 bytes @ 0x1B
  4725                           
  4726                           
  4727                           ; 2 bytes @ 0x1B
  4728  003B                     	ds	2
  4729  003D                     _dtoa$1206:	
  4730  003D                     utoa@w:	
  4731                           ; 2 bytes @ 0x1D
  4732                           
  4733                           
  4734                           ; 2 bytes @ 0x1D
  4735  003D                     	ds	1
  4736  003E                     ___flmul@temp:	
  4737                           
  4738                           ; 2 bytes @ 0x1E
  4739  003E                     	ds	1
  4740  003F                     dtoa@p:	
  4741  003F                     utoa@n:	
  4742                           ; 2 bytes @ 0x1F
  4743                           
  4744                           
  4745                           ; 8 bytes @ 0x1F
  4746  003F                     	ds	1
  4747  0040                     ?___fldiv:	
  4748  0040                     ___fldiv@a:	
  4749                           ; 4 bytes @ 0x20
  4750                           
  4751                           
  4752                           ; 4 bytes @ 0x20
  4753  0040                     	ds	1
  4754  0041                     dtoa@w:	
  4755                           
  4756                           ; 2 bytes @ 0x21
  4757  0041                     	ds	1
  4758  0042                     otoa@p:	
  4759                           
  4760                           ; 2 bytes @ 0x22
  4761  0042                     	ds	1
  4762  0043                     dtoa@s:	
  4763  0043                     _xtoa$1242:	
  4764                           ; 2 bytes @ 0x23
  4765                           
  4766                           
  4767                           ; 2 bytes @ 0x23
  4768  0043                     	ds	1
  4769  0044                     setCellUndervoltageProtection@uv_trip:	
  4770  0044                     setCellOvervoltageProtection@ov_trip:	
  4771                           ; 1 bytes @ 0x24
  4772                           
  4773  0044                     otoa@t:	
  4774                           ; 1 bytes @ 0x24
  4775                           
  4776  0044                     ___fldiv@b:	
  4777                           ; 2 bytes @ 0x24
  4778                           
  4779                           
  4780                           ; 4 bytes @ 0x24
  4781  0044                     	ds	1
  4782  0045                     setCellUndervoltageProtection@i:	
  4783  0045                     setCellOvervoltageProtection@i:	
  4784                           ; 2 bytes @ 0x25
  4785                           
  4786  0045                     _xtoa$1243:	
  4787                           ; 2 bytes @ 0x25
  4788                           
  4789  0045                     dtoa@n:	
  4790                           ; 2 bytes @ 0x25
  4791                           
  4792                           
  4793                           ; 8 bytes @ 0x25
  4794  0045                     	ds	1
  4795  0046                     otoa@w:	
  4796                           
  4797                           ; 2 bytes @ 0x26
  4798  0046                     	ds	1
  4799  0047                     utoa@i:	
  4800  0047                     xtoa@p:	
  4801                           ; 2 bytes @ 0x27
  4802                           
  4803                           
  4804                           ; 2 bytes @ 0x27
  4805  0047                     	ds	1
  4806  0048                     ??___fldiv:	
  4807  0048                     otoa@n:	
  4808                           ; 1 bytes @ 0x28
  4809                           
  4810                           
  4811                           ; 8 bytes @ 0x28
  4812  0048                     	ds	1
  4813  0049                     xtoa@w:	
  4814                           
  4815                           ; 2 bytes @ 0x29
  4816  0049                     	ds	2
  4817  004B                     xtoa@n:	
  4818                           
  4819                           ; 8 bytes @ 0x2B
  4820  004B                     	ds	2
  4821  004D                     dtoa@i:	
  4822  004D                     ___fldiv@rem:	
  4823                           ; 2 bytes @ 0x2D
  4824                           
  4825                           
  4826                           ; 4 bytes @ 0x2D
  4827  004D                     	ds	3
  4828  0050                     otoa@i:	
  4829                           
  4830                           ; 2 bytes @ 0x30
  4831  0050                     	ds	1
  4832  0051                     ___fldiv@sign:	
  4833                           
  4834                           ; 1 bytes @ 0x31
  4835  0051                     	ds	1
  4836  0052                     ___fldiv@new_exp:	
  4837                           
  4838                           ; 2 bytes @ 0x32
  4839  0052                     	ds	1
  4840  0053                     xtoa@i:	
  4841                           
  4842                           ; 2 bytes @ 0x33
  4843  0053                     	ds	1
  4844  0054                     ___fldiv@grs:	
  4845                           
  4846                           ; 4 bytes @ 0x34
  4847  0054                     	ds	1
  4848  0055                     xtoa@c:	
  4849                           
  4850                           ; 2 bytes @ 0x35
  4851  0055                     	ds	2
  4852  0057                     ?_vfpfcnvrt:	
  4853  0057                     vfpfcnvrt@fp:	
  4854                           ; 2 bytes @ 0x37
  4855                           
  4856                           
  4857                           ; 2 bytes @ 0x37
  4858  0057                     	ds	1
  4859  0058                     ___fldiv@bexp:	
  4860                           
  4861                           ; 1 bytes @ 0x38
  4862  0058                     	ds	1
  4863  0059                     vfpfcnvrt@fmt:	
  4864  0059                     ___fldiv@aexp:	
  4865                           ; 1 bytes @ 0x39
  4866                           
  4867                           
  4868                           ; 1 bytes @ 0x39
  4869  0059                     	ds	1
  4870  005A                     ?___flge:	
  4871  005A                     ?___flneg:	
  4872                           ; 1 bit 
  4873                           
  4874  005A                     ?___fladd:	
  4875                           ; 4 bytes @ 0x3A
  4876                           
  4877  005A                     vfpfcnvrt@ap:	
  4878                           ; 4 bytes @ 0x3A
  4879                           
  4880  005A                     ___flge@ff1:	
  4881                           ; 1 bytes @ 0x3A
  4882                           
  4883  005A                     ___flneg@f1:	
  4884                           ; 4 bytes @ 0x3A
  4885                           
  4886  005A                     ___fladd@b:	
  4887                           ; 4 bytes @ 0x3A
  4888                           
  4889                           
  4890                           ; 4 bytes @ 0x3A
  4891  005A                     	ds	1
  4892  005B                     ??_vfpfcnvrt:	
  4893                           
  4894                           ; 1 bytes @ 0x3B
  4895  005B                     	ds	3
  4896  005E                     ___flge@ff2:	
  4897  005E                     ___fladd@a:	
  4898                           ; 4 bytes @ 0x3E
  4899                           
  4900                           
  4901                           ; 4 bytes @ 0x3E
  4902  005E                     	ds	3
  4903  0061                     ?_vfprintf:	
  4904  0061                     vfprintf@fp:	
  4905                           ; 2 bytes @ 0x41
  4906                           
  4907                           
  4908                           ; 2 bytes @ 0x41
  4909  0061                     	ds	1
  4910  0062                     ??___flge:	
  4911  0062                     ??___fladd:	
  4912                           ; 1 bytes @ 0x42
  4913                           
  4914                           
  4915                           ; 1 bytes @ 0x42
  4916  0062                     	ds	1
  4917  0063                     vfprintf@fmt:	
  4918                           
  4919                           ; 2 bytes @ 0x43
  4920  0063                     	ds	2
  4921  0065                     vfprintf@ap:	
  4922                           
  4923                           ; 1 bytes @ 0x45
  4924  0065                     	ds	1
  4925  0066                     ?_setShortCircuitProtection:	
  4926  0066                     ?_setOverCurrentDischargeProtection:	
  4927                           ; 1 bytes @ 0x46
  4928                           
  4929  0066                     ??_vfprintf:	
  4930                           ; 1 bytes @ 0x46
  4931                           
  4932  0066                     setShortCircuitProtection@current_mA:	
  4933                           ; 1 bytes @ 0x46
  4934                           
  4935  0066                     setOverCurrentDischargeProtection@current_mA:	
  4936                           ; 4 bytes @ 0x46
  4937                           
  4938                           
  4939                           ; 4 bytes @ 0x46
  4940  0066                     	ds	2
  4941  0068                     vfprintf@cfmt:	
  4942                           
  4943                           ; 2 bytes @ 0x48
  4944  0068                     	ds	2
  4945  006A                     ??_vsnprintf:	
  4946  006A                     ___fladd@signs:	
  4947                           ; 1 bytes @ 0x4A
  4948                           
  4949  006A                     setShortCircuitProtection@delay_us:	
  4950                           ; 1 bytes @ 0x4A
  4951                           
  4952  006A                     setOverCurrentDischargeProtection@delay_ms:	
  4953                           ; 2 bytes @ 0x4A
  4954                           
  4955                           
  4956                           ; 2 bytes @ 0x4A
  4957  006A                     	ds	1
  4958  006B                     ___fladd@aexp:	
  4959                           
  4960                           ; 1 bytes @ 0x4B
  4961  006B                     	ds	1
  4962  006C                     ??_snprintf:	
  4963  006C                     ??_setShortCircuitProtection:	
  4964                           ; 1 bytes @ 0x4C
  4965                           
  4966  006C                     ??_setOverCurrentDischargeProtection:	
  4967                           ; 1 bytes @ 0x4C
  4968                           
  4969  006C                     ___fladd@bexp:	
  4970                           ; 1 bytes @ 0x4C
  4971                           
  4972                           
  4973                           ; 1 bytes @ 0x4C
  4974  006C                     	ds	1
  4975  006D                     ___fladd@grs:	
  4976                           
  4977                           ; 1 bytes @ 0x4D
  4978  006D                     	ds	2
  4979  006F                     snprintf@ap:	
  4980                           
  4981                           ; 1 bytes @ 0x4F
  4982  006F                     	ds	1
  4983                           
  4984                           	psect	maintext
  4985  360E                     __pmaintext:	
  4986 ;;
  4987 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4988 ;;
  4989 ;; *************** function _main *****************
  4990 ;; Defined at:
  4991 ;;		line 72 in file "main.c"
  4992 ;; Parameters:    Size  Location     Type
  4993 ;;		None
  4994 ;; Auto vars:     Size  Location     Type
  4995 ;;		None
  4996 ;; Return value:  Size  Location     Type
  4997 ;;                  1    wreg      void 
  4998 ;; Registers used:
  4999 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5000 ;; Tracked objects:
  5001 ;;		On entry : B1F/0
  5002 ;;		On exit  : 0/0
  5003 ;;		Unchanged: 0/0
  5004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5007 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5008 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5009 ;;Total ram usage:        2 bytes
  5010 ;; Hardware stack levels required when called:   12
  5011 ;; This function calls:
  5012 ;;		_EUSART_Initialize
  5013 ;;		_initClock
  5014 ;;		_initWDT
  5015 ;;		_init_GPIO
  5016 ;;		_init_I2C
  5017 ;;		_init_RGB
  5018 ;;		_init_TMR1
  5019 ;;		_statemachine
  5020 ;;		_watchdog_timeout_shutdown
  5021 ;; This function is called by:
  5022 ;;		Startup code after reset
  5023 ;; This function uses a non-reentrant model
  5024 ;;
  5025                           
  5026                           
  5027                           ;psect for function _main
  5028  360E                     _main:	
  5029                           
  5030                           ;main.c: 75:     initClock();
  5031                           
  5032                           ;incstack = 0
  5033                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5034  360E  3187  27FD  31B6   	fcall	_initClock
  5035                           
  5036                           ;main.c: 76:     init_GPIO();
  5037  3611  3188  2008  31B6   	fcall	_init_GPIO
  5038                           
  5039                           ;main.c: 77:     initWDT();
  5040  3614  3198  2000  31B6   	fcall	_initWDT
  5041                           
  5042                           ;main.c: 78:     init_I2C();
  5043  3617  31B3  23C7  31B6   	fcall	_init_I2C
  5044                           
  5045                           ;main.c: 79:     EUSART_Initialize(9600);
  5046  361A  3000               	movlw	0
  5047  361B  0020               	movlb	0	; select bank0
  5048  361C  00B5               	movwf	EUSART_Initialize@baudrate+3
  5049  361D  3000               	movlw	0
  5050  361E  00B4               	movwf	EUSART_Initialize@baudrate+2
  5051  361F  3025               	movlw	37
  5052  3620  00B3               	movwf	EUSART_Initialize@baudrate+1
  5053  3621  3080               	movlw	128
  5054  3622  00B2               	movwf	EUSART_Initialize@baudrate
  5055  3623  31AC  2445  31B6   	fcall	_EUSART_Initialize
  5056                           
  5057                           ;main.c: 80:     init_TMR1();
  5058  3626  31B3  23B0  31B6   	fcall	_init_TMR1
  5059                           
  5060                           ;main.c: 81:     init_RGB();
  5061  3629  31A0  2001  31B6   	fcall	_init_RGB
  5062                           
  5063                           ;main.c: 84:     watchdog_timeout_shutdown();
  5064  362C  31B4  24C3  31B6   	fcall	_watchdog_timeout_shutdown
  5065  362F                     l8450:	
  5066                           
  5067                           ;main.c: 88:         statemachine();
  5068  362F  31A9  2140  31B6   	fcall	_statemachine
  5069                           
  5070                           ;main.c: 90:         _delay((unsigned long)((1000)*(16000000/4000.0)));
  5071  3632  3015               	movlw	21
  5072  3633  0023               	movlb	3	; select bank3
  5073  3634  00E4               	movwf	(??_main^(0+384)+1)
  5074  3635  304B               	movlw	75
  5075  3636  00E3               	movwf	??_main^(0+384)
  5076  3637  30BE               	movlw	190
  5077  3638                     u11497:	
  5078  3638  0B89               	decfsz	9,f
  5079  3639  2E38               	goto	u11497
  5080  363A  0BE3               	decfsz	??_main^(0+384),f
  5081  363B  2E38               	goto	u11497
  5082  363C  0BE4               	decfsz	(??_main^(0+384)+1),f
  5083  363D  2E38               	goto	u11497
  5084  363E  0000               	nop
  5085  363F  2E2F               	goto	l8450
  5086  3640                     __end_of_main:	
  5087                           
  5088                           	psect	text1
  5089  34C3                     __ptext1:	
  5090 ;; *************** function _watchdog_timeout_shutdown *****************
  5091 ;; Defined at:
  5092 ;;		line 3 in file "algorithms.c"
  5093 ;; Parameters:    Size  Location     Type
  5094 ;;		None
  5095 ;; Auto vars:     Size  Location     Type
  5096 ;;		None
  5097 ;; Return value:  Size  Location     Type
  5098 ;;                  1    wreg      void 
  5099 ;; Registers used:
  5100 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5101 ;; Tracked objects:
  5102 ;;		On entry : 0/0
  5103 ;;		On exit  : 0/0
  5104 ;;		Unchanged: 0/0
  5105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5108 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5109 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5110 ;;Total ram usage:        2 bytes
  5111 ;; Hardware stack levels used:    1
  5112 ;; Hardware stack levels required when called:    2
  5113 ;; This function calls:
  5114 ;;		_RGB_color
  5115 ;; This function is called by:
  5116 ;;		_main
  5117 ;; This function uses a non-reentrant model
  5118 ;;
  5119                           
  5120                           
  5121                           ;psect for function _watchdog_timeout_shutdown
  5122  34C3                     _watchdog_timeout_shutdown:	
  5123                           
  5124                           ;algorithms.c: 5:     if (!STATUSbits.nTO) {
  5125                           
  5126                           ;incstack = 0
  5127                           ; Regs used in _watchdog_timeout_shutdown: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5128  34C3  0020               	movlb	0	; select bank0
  5129  34C4  1A03               	btfsc	3,4	;volatile
  5130  34C5  0008               	return
  5131                           
  5132                           ;algorithms.c: 6:         RGB_color(0);
  5133  34C6  3000               	movlw	0
  5134  34C7  00F1               	movwf	RGB_color@color
  5135  34C8  00F2               	movwf	RGB_color@color+1
  5136  34C9  31B5  2537  31B4   	fcall	_RGB_color
  5137                           
  5138                           ;algorithms.c: 7:          _delay((unsigned long)((2000)*(16000000/4000.0)));
  5139  34CC  3029               	movlw	41
  5140  34CD  00F4               	movwf	??_watchdog_timeout_shutdown+1
  5141  34CE  3096               	movlw	150
  5142  34CF  00F3               	movwf	??_watchdog_timeout_shutdown
  5143  34D0  307F               	movlw	127
  5144  34D1                     u11507:	
  5145  34D1  0B89               	decfsz	9,f
  5146  34D2  2CD1               	goto	u11507
  5147  34D3  0BF3               	decfsz	??_watchdog_timeout_shutdown,f
  5148  34D4  2CD1               	goto	u11507
  5149  34D5  0BF4               	decfsz	??_watchdog_timeout_shutdown+1,f
  5150  34D6  2CD1               	goto	u11507
  5151  34D7  0000               	nop
  5152                           
  5153                           ;algorithms.c: 8:          currState = 3;
  5154  34D8  3003               	movlw	3
  5155  34D9  00F3               	movwf	??_watchdog_timeout_shutdown
  5156  34DA  0873               	movf	??_watchdog_timeout_shutdown,w
  5157  34DB  0023               	movlb	3	; select bank3
  5158  34DC  00D9               	movwf	_currState^(0+384)
  5159  34DD  0008               	return
  5160  34DE                     __end_of_watchdog_timeout_shutdown:	
  5161                           
  5162                           	psect	text2
  5163  2940                     __ptext2:	
  5164 ;; *************** function _statemachine *****************
  5165 ;; Defined at:
  5166 ;;		line 96 in file "main.c"
  5167 ;; Parameters:    Size  Location     Type
  5168 ;;		None
  5169 ;; Auto vars:     Size  Location     Type
  5170 ;;  success         1   68[BANK2 ] unsigned char 
  5171 ;; Return value:  Size  Location     Type
  5172 ;;                  1    wreg      void 
  5173 ;; Registers used:
  5174 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5175 ;; Tracked objects:
  5176 ;;		On entry : 0/0
  5177 ;;		On exit  : 0/0
  5178 ;;		Unchanged: 0/0
  5179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5181 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5182 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5183 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5184 ;;Total ram usage:        3 bytes
  5185 ;; Hardware stack levels used:    1
  5186 ;; Hardware stack levels required when called:   11
  5187 ;; This function calls:
  5188 ;;		_AFE_UPDATE
  5189 ;;		_EUSART_Write_Text
  5190 ;;		_RGB_AWAIT_AFE_CONN
  5191 ;;		_RGB_color
  5192 ;;		_beginAFEcommunication
  5193 ;;		_init_AFE
  5194 ;;		_printcellParameters
  5195 ;;		_snprintf
  5196 ;; This function is called by:
  5197 ;;		_main
  5198 ;; This function uses a non-reentrant model
  5199 ;;
  5200                           
  5201                           
  5202                           ;psect for function _statemachine
  5203  2940                     _statemachine:	
  5204                           
  5205                           ;main.c: 98:     switch (currState) {
  5206                           
  5207                           ;incstack = 0
  5208                           ; Regs used in _statemachine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5209  2940  299F               	goto	l8426
  5210  2941                     l8392:	
  5211                           
  5212                           ;main.c: 101:             if (tmr1_flag) {
  5213  2941  0021               	movlb	1	; select bank1
  5214  2942  086F               	movf	_tmr1_flag^(0+128),w	;volatile
  5215  2943  1903               	btfsc	3,2
  5216  2944  0008               	return
  5217                           
  5218                           ;main.c: 102:                 tmr1_flag = 0;
  5219  2945  01EF               	clrf	_tmr1_flag^(0+128)	;volatile
  5220                           
  5221                           ;main.c: 103:                 RGB_AWAIT_AFE_CONN();
  5222  2946  31B5  2558  31A9   	fcall	_RGB_AWAIT_AFE_CONN
  5223                           
  5224                           ;main.c: 104:                 uint8_t success = beginAFEcommunication();
  5225  2949  31AC  24EE  31A9   	fcall	_beginAFEcommunication
  5226  294C  0020               	movlb	0	; select bank0
  5227  294D  0820               	movf	?_beginAFEcommunication,w
  5228  294E  0022               	movlb	2	; select bank2
  5229  294F  00E2               	movwf	??_statemachine^(0+256)
  5230  2950  0862               	movf	??_statemachine^(0+256),w
  5231  2951  00E4               	movwf	statemachine@success^(0+256)
  5232                           
  5233                           ;main.c: 109:                 if (success) {
  5234  2952  0864               	movf	statemachine@success^(0+256),w
  5235  2953  1903               	btfsc	3,2
  5236  2954  0008               	return
  5237                           
  5238                           ;main.c: 110:                     T1CONbits.TMR1ON = 0;
  5239  2955  0020               	movlb	0	; select bank0
  5240  2956  1018               	bcf	24,0	;volatile
  5241                           
  5242                           ;main.c: 111:                     PIE1bits.TMR1IE = 0;
  5243  2957  0021               	movlb	1	; select bank1
  5244  2958  1011               	bcf	17,0	;volatile
  5245                           
  5246                           ;main.c: 112:                     RGB_color(0);
  5247  2959  3000               	movlw	0
  5248  295A  00F1               	movwf	RGB_color@color
  5249  295B  00F2               	movwf	RGB_color@color+1
  5250  295C  31B5  2537         	fcall	_RGB_color
  5251                           
  5252                           ;main.c: 113:                     tmr1_flag = 0;
  5253  295E  0021               	movlb	1	; select bank1
  5254  295F  01EF               	clrf	_tmr1_flag^(0+128)	;volatile
  5255                           
  5256                           ;main.c: 126:                     currState = 1;
  5257  2960  0023               	movlb	3	; select bank3
  5258  2961  01D9               	clrf	_currState^(0+384)
  5259  2962  0AD9               	incf	_currState^(0+384),f
  5260  2963  0008               	return
  5261  2964                     l8410:	
  5262                           
  5263                           ;main.c: 135:             init_AFE();
  5264  2964  31A0  2006  31A9   	fcall	_init_AFE
  5265                           
  5266                           ;main.c: 154:             RGB_color(1);
  5267  2967  3001               	movlw	1
  5268  2968  00F1               	movwf	RGB_color@color
  5269  2969  3000               	movlw	0
  5270  296A  00F2               	movwf	RGB_color@color+1
  5271  296B  31B5  2537         	fcall	_RGB_color
  5272                           
  5273                           ;main.c: 155:             currState = 2;
  5274  296D  3002               	movlw	2
  5275  296E  0022               	movlb	2	; select bank2
  5276  296F  00E2               	movwf	??_statemachine^(0+256)
  5277  2970  0862               	movf	??_statemachine^(0+256),w
  5278  2971  0023               	movlb	3	; select bank3
  5279  2972  00D9               	movwf	_currState^(0+384)
  5280                           
  5281                           ;main.c: 156:             break;
  5282  2973  0008               	return
  5283  2974                     l8414:	
  5284                           
  5285                           ;main.c: 160:             AFE_UPDATE();
  5286  2974  31B4  245A  31A9   	fcall	_AFE_UPDATE
  5287  2977  0064               	clrwdt	;# 
  5288                           
  5289                           ;main.c: 164:             printcellParameters();
  5290  2978  319C  24CD  31A9   	fcall	_printcellParameters
  5291                           
  5292                           ;main.c: 166:             _delay((unsigned long)((5000)*(16000000/4000.0)));
  5293  297B  3066               	movlw	102
  5294  297C  0022               	movlb	2	; select bank2
  5295  297D  00E3               	movwf	(??_statemachine^(0+256)+1)
  5296  297E  3076               	movlw	118
  5297  297F  00E2               	movwf	??_statemachine^(0+256)
  5298  2980  30C1               	movlw	193
  5299  2981                     u11517:	
  5300  2981  0B89               	decfsz	9,f
  5301  2982  2981               	goto	u11517
  5302  2983  0BE2               	decfsz	??_statemachine^(0+256),f
  5303  2984  2981               	goto	u11517
  5304  2985  0BE3               	decfsz	(??_statemachine^(0+256)+1),f
  5305  2986  2981               	goto	u11517
  5306                           
  5307                           ;main.c: 168:             break;
  5308  2987  0008               	return
  5309  2988                     l8420:	
  5310                           
  5311                           ;main.c: 172:              snprintf(messageBuffer, 127, "WATCHDOG NOT KICKED: AFE comms 
      +                          error \n\r");
  5312  2988  3071               	movlw	113
  5313  2989  0021               	movlb	1	; select bank1
  5314  298A  00CC               	movwf	snprintf@s^(0+128)
  5315  298B  3027               	movlw	39
  5316  298C  00CD               	movwf	(snprintf@s^(0+128)+1)
  5317  298D  307F               	movlw	127
  5318  298E  00CE               	movwf	snprintf@n^(0+128)
  5319  298F  3000               	movlw	0
  5320  2990  00CF               	movwf	(snprintf@n^(0+128)+1)
  5321  2991  3049               	movlw	low (STR_1| (0+32768))
  5322  2992  00D0               	movwf	snprintf@fmt^(0+128)
  5323  2993  30B8               	movlw	high (STR_1| (0+32768))
  5324  2994  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5325  2995  31B4  24A8  31A9   	fcall	_snprintf
  5326                           
  5327                           ;main.c: 173:              EUSART_Write_Text(messageBuffer);
  5328  2998  3071               	movlw	113
  5329  2999  00F2               	movwf	EUSART_Write_Text@text
  5330  299A  3027               	movlw	39
  5331  299B  00F3               	movwf	EUSART_Write_Text@text+1
  5332  299C  31B4  2473         	fcall	_EUSART_Write_Text
  5333                           
  5334                           ;main.c: 174:             break;
  5335  299E  0008               	return
  5336  299F                     l8426:	
  5337  299F  0023               	movlb	3	; select bank3
  5338  29A0  0859               	movf	_currState^(0+384),w
  5339  29A1  0022               	movlb	2	; select bank2
  5340  29A2  00E2               	movwf	??_statemachine^(0+256)
  5341  29A3  01E3               	clrf	(??_statemachine^(0+256)+1)
  5342                           
  5343                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5344                           ; Switch size 1, requested type "simple"
  5345                           ; Number of cases is 1, Range of values is 0 to 0
  5346                           ; switch strategies available:
  5347                           ; Name         Instructions Cycles
  5348                           ; simple_byte            4     3 (average)
  5349                           ; direct_byte            8     6 (fixed)
  5350                           ; jumptable            260     6 (fixed)
  5351                           ;	Chosen strategy is simple_byte
  5352  29A4  0863               	movf	(??_statemachine+1)^(0+256),w
  5353  29A5  3A00               	xorlw	0	; case 0
  5354  29A6  1903               	skipnz
  5355  29A7  29A9               	goto	l8618
  5356  29A8  29B7               	goto	l168
  5357  29A9                     l8618:	
  5358                           
  5359                           ; Switch size 1, requested type "simple"
  5360                           ; Number of cases is 4, Range of values is 0 to 3
  5361                           ; switch strategies available:
  5362                           ; Name         Instructions Cycles
  5363                           ; simple_byte           13     7 (average)
  5364                           ; direct_byte           14     6 (fixed)
  5365                           ; jumptable            260     6 (fixed)
  5366                           ;	Chosen strategy is simple_byte
  5367  29A9  0862               	movf	??_statemachine^(0+256),w
  5368  29AA  3A00               	xorlw	0	; case 0
  5369  29AB  1903               	skipnz
  5370  29AC  2941               	goto	l8392
  5371  29AD  3A01               	xorlw	1	; case 1
  5372  29AE  1903               	skipnz
  5373  29AF  2964               	goto	l8410
  5374  29B0  3A03               	xorlw	3	; case 2
  5375  29B1  1903               	skipnz
  5376  29B2  2974               	goto	l8414
  5377  29B3  3A01               	xorlw	1	; case 3
  5378  29B4  1903               	skipnz
  5379  29B5  2988               	goto	l8420
  5380  29B6  29B7               	goto	l168
  5381  29B7                     l168:	
  5382  29B7  0008               	return
  5383  29B8                     __end_of_statemachine:	
  5384                           
  5385                           	psect	text3
  5386  1CCD                     __ptext3:	
  5387 ;; *************** function _printcellParameters *****************
  5388 ;; Defined at:
  5389 ;;		line 314 in file "BQ76920.c"
  5390 ;; Parameters:    Size  Location     Type
  5391 ;;		None
  5392 ;; Auto vars:     Size  Location     Type
  5393 ;;		None
  5394 ;; Return value:  Size  Location     Type
  5395 ;;                  1    wreg      void 
  5396 ;; Registers used:
  5397 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5398 ;; Tracked objects:
  5399 ;;		On entry : 0/0
  5400 ;;		On exit  : 0/0
  5401 ;;		Unchanged: 0/0
  5402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5407 ;;Total ram usage:        0 bytes
  5408 ;; Hardware stack levels used:    1
  5409 ;; Hardware stack levels required when called:   10
  5410 ;; This function calls:
  5411 ;;		_EUSART_Write_Text
  5412 ;;		_readRegister
  5413 ;;		_snprintf
  5414 ;; This function is called by:
  5415 ;;		_statemachine
  5416 ;; This function uses a non-reentrant model
  5417 ;;
  5418                           
  5419                           
  5420                           ;psect for function _printcellParameters
  5421  1CCD                     _printcellParameters:	
  5422                           
  5423                           ;BQ76920.c: 315:     snprintf(messageBuffer, 127, "Cell batt: %i ,%d, %d , %d, %d, %d Ba
      +                          tt Curr: %i Temp: %i CTRL2: %i \n\r", batVoltage,cellVoltages[0],cellVoltages[1],cellVol
      +                          tages[2],cellVoltages[3],cellVoltages[4], batCurrent, temperatureThermistor,readRegister
      +                          (0x18, 0x05));
  5424                           
  5425                           ;incstack = 0
  5426                           ; Regs used in _printcellParameters: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5427  1CCD  3071               	movlw	113
  5428  1CCE  0021               	movlb	1	; select bank1
  5429  1CCF  00CC               	movwf	snprintf@s^(0+128)
  5430  1CD0  3027               	movlw	39
  5431  1CD1  00CD               	movwf	(snprintf@s^(0+128)+1)
  5432  1CD2  307F               	movlw	127
  5433  1CD3  00CE               	movwf	snprintf@n^(0+128)
  5434  1CD4  3000               	movlw	0
  5435  1CD5  00CF               	movwf	(snprintf@n^(0+128)+1)
  5436  1CD6  3002               	movlw	low (STR_2| (0+32768))
  5437  1CD7  00D0               	movwf	snprintf@fmt^(0+128)
  5438  1CD8  30B8               	movlw	high (STR_2| (0+32768))
  5439  1CD9  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5440  1CDA  0023               	movlb	3	; select bank3
  5441  1CDB  0841               	movf	(_batVoltage+3)^(0+384),w
  5442  1CDC  0021               	movlb	1	; select bank1
  5443  1CDD  00D5               	movwf	((?_snprintf+3)^(0+128)+6)
  5444  1CDE  0023               	movlb	3	; select bank3
  5445  1CDF  0840               	movf	(_batVoltage+2)^(0+384),w
  5446  1CE0  0021               	movlb	1	; select bank1
  5447  1CE1  00D4               	movwf	((?_snprintf+2)^(0+128)+6)
  5448  1CE2  0023               	movlb	3	; select bank3
  5449  1CE3  083F               	movf	(_batVoltage+1)^(0+384),w
  5450  1CE4  0021               	movlb	1	; select bank1
  5451  1CE5  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5452  1CE6  0023               	movlb	3	; select bank3
  5453  1CE7  083E               	movf	_batVoltage^(0+384),w
  5454  1CE8  0021               	movlb	1	; select bank1
  5455  1CE9  00D2               	movwf	(?_snprintf^(0+128)+6)
  5456  1CEA  0023               	movlb	3	; select bank3
  5457  1CEB  0821               	movf	(_cellVoltages+1)^(0+384),w
  5458  1CEC  0021               	movlb	1	; select bank1
  5459  1CED  00D7               	movwf	((?_snprintf+1)^(0+128)+10)
  5460  1CEE  0023               	movlb	3	; select bank3
  5461  1CEF  0820               	movf	_cellVoltages^(0+384),w
  5462  1CF0  0021               	movlb	1	; select bank1
  5463  1CF1  00D6               	movwf	(?_snprintf^(0+128)+10)
  5464  1CF2  0023               	movlb	3	; select bank3
  5465  1CF3  0823               	movf	((_cellVoltages+1)^(0+384)+2),w
  5466  1CF4  0021               	movlb	1	; select bank1
  5467  1CF5  00D9               	movwf	((?_snprintf+1)^(0+128)+12)
  5468  1CF6  0023               	movlb	3	; select bank3
  5469  1CF7  0822               	movf	(_cellVoltages^(0+384)+2),w
  5470  1CF8  0021               	movlb	1	; select bank1
  5471  1CF9  00D8               	movwf	(?_snprintf^(0+128)+12)
  5472  1CFA  0023               	movlb	3	; select bank3
  5473  1CFB  0825               	movf	((_cellVoltages+1)^(0+384)+4),w
  5474  1CFC  0021               	movlb	1	; select bank1
  5475  1CFD  00DB               	movwf	((?_snprintf+1)^(0+128)+14)
  5476  1CFE  0023               	movlb	3	; select bank3
  5477  1CFF  0824               	movf	(_cellVoltages^(0+384)+4),w
  5478  1D00  0021               	movlb	1	; select bank1
  5479  1D01  00DA               	movwf	(?_snprintf^(0+128)+14)
  5480  1D02  0023               	movlb	3	; select bank3
  5481  1D03  0827               	movf	((_cellVoltages+1)^(0+384)+6),w
  5482  1D04  0021               	movlb	1	; select bank1
  5483  1D05  00DD               	movwf	((?_snprintf+1)^(0+128)+16)
  5484  1D06  0023               	movlb	3	; select bank3
  5485  1D07  0826               	movf	(_cellVoltages^(0+384)+6),w
  5486  1D08  0021               	movlb	1	; select bank1
  5487  1D09  00DC               	movwf	(?_snprintf^(0+128)+16)
  5488  1D0A  0023               	movlb	3	; select bank3
  5489  1D0B  0829               	movf	((_cellVoltages+1)^(0+384)+8),w
  5490  1D0C  0021               	movlb	1	; select bank1
  5491  1D0D  00DF               	movwf	((?_snprintf+1)^(0+128)+18)
  5492  1D0E  0023               	movlb	3	; select bank3
  5493  1D0F  0828               	movf	(_cellVoltages^(0+384)+8),w
  5494  1D10  0021               	movlb	1	; select bank1
  5495  1D11  00DE               	movwf	(?_snprintf^(0+128)+18)
  5496  1D12  0023               	movlb	3	; select bank3
  5497  1D13  083D               	movf	(_batCurrent+3)^(0+384),w
  5498  1D14  0021               	movlb	1	; select bank1
  5499  1D15  00E3               	movwf	((?_snprintf+3)^(0+128)+20)
  5500  1D16  0023               	movlb	3	; select bank3
  5501  1D17  083C               	movf	(_batCurrent+2)^(0+384),w
  5502  1D18  0021               	movlb	1	; select bank1
  5503  1D19  00E2               	movwf	((?_snprintf+2)^(0+128)+20)
  5504  1D1A  0023               	movlb	3	; select bank3
  5505  1D1B  083B               	movf	(_batCurrent+1)^(0+384),w
  5506  1D1C  0021               	movlb	1	; select bank1
  5507  1D1D  00E1               	movwf	((?_snprintf+1)^(0+128)+20)
  5508  1D1E  0023               	movlb	3	; select bank3
  5509  1D1F  083A               	movf	_batCurrent^(0+384),w
  5510  1D20  0021               	movlb	1	; select bank1
  5511  1D21  00E0               	movwf	(?_snprintf^(0+128)+20)
  5512  1D22  0023               	movlb	3	; select bank3
  5513  1D23  0839               	movf	(_temperatureThermistor+3)^(0+384),w
  5514  1D24  0021               	movlb	1	; select bank1
  5515  1D25  00E7               	movwf	((?_snprintf+3)^(0+128)+24)
  5516  1D26  0023               	movlb	3	; select bank3
  5517  1D27  0838               	movf	(_temperatureThermistor+2)^(0+384),w
  5518  1D28  0021               	movlb	1	; select bank1
  5519  1D29  00E6               	movwf	((?_snprintf+2)^(0+128)+24)
  5520  1D2A  0023               	movlb	3	; select bank3
  5521  1D2B  0837               	movf	(_temperatureThermistor+1)^(0+384),w
  5522  1D2C  0021               	movlb	1	; select bank1
  5523  1D2D  00E5               	movwf	((?_snprintf+1)^(0+128)+24)
  5524  1D2E  0023               	movlb	3	; select bank3
  5525  1D2F  0836               	movf	_temperatureThermistor^(0+384),w
  5526  1D30  0021               	movlb	1	; select bank1
  5527  1D31  00E4               	movwf	(?_snprintf^(0+128)+24)
  5528  1D32  3018               	movlw	24
  5529  1D33  00F5               	movwf	readRegister@slaveAddress
  5530  1D34  3000               	movlw	0
  5531  1D35  00F6               	movwf	readRegister@slaveAddress+1
  5532  1D36  3005               	movlw	5
  5533  1D37  00F7               	movwf	readRegister@regAddress
  5534  1D38  3000               	movlw	0
  5535  1D39  00F8               	movwf	readRegister@regAddress+1
  5536  1D3A  31B6  2675  319C   	fcall	_readRegister
  5537  1D3D  0876               	movf	?_readRegister+1,w
  5538  1D3E  0021               	movlb	1	; select bank1
  5539  1D3F  00E9               	movwf	((?_snprintf+1)^(0+128)+28)
  5540  1D40  0875               	movf	?_readRegister,w
  5541  1D41  00E8               	movwf	(?_snprintf^(0+128)+28)
  5542  1D42  31B4  24A8  319C   	fcall	_snprintf
  5543                           
  5544                           ;BQ76920.c: 316:     EUSART_Write_Text(messageBuffer);
  5545  1D45  3071               	movlw	113
  5546  1D46  00F2               	movwf	EUSART_Write_Text@text
  5547  1D47  3027               	movlw	39
  5548  1D48  00F3               	movwf	EUSART_Write_Text@text+1
  5549  1D49  31B4  2473  319C   	fcall	_EUSART_Write_Text
  5550                           
  5551                           ;BQ76920.c: 317:     snprintf(messageBuffer, 127, "0x05 SYS_CTRL2: %i \n\r", readRegiste
      +                          r(0x18, 0x05));
  5552  1D4C  3071               	movlw	113
  5553  1D4D  0021               	movlb	1	; select bank1
  5554  1D4E  00CC               	movwf	snprintf@s^(0+128)
  5555  1D4F  3027               	movlw	39
  5556  1D50  00CD               	movwf	(snprintf@s^(0+128)+1)
  5557  1D51  307F               	movlw	127
  5558  1D52  00CE               	movwf	snprintf@n^(0+128)
  5559  1D53  3000               	movlw	0
  5560  1D54  00CF               	movwf	(snprintf@n^(0+128)+1)
  5561  1D55  30E4               	movlw	low (STR_3| (0+32768))
  5562  1D56  00D0               	movwf	snprintf@fmt^(0+128)
  5563  1D57  30B8               	movlw	high (STR_3| (0+32768))
  5564  1D58  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5565  1D59  3018               	movlw	24
  5566  1D5A  00F5               	movwf	readRegister@slaveAddress
  5567  1D5B  3000               	movlw	0
  5568  1D5C  00F6               	movwf	readRegister@slaveAddress+1
  5569  1D5D  3005               	movlw	5
  5570  1D5E  00F7               	movwf	readRegister@regAddress
  5571  1D5F  3000               	movlw	0
  5572  1D60  00F8               	movwf	readRegister@regAddress+1
  5573  1D61  31B6  2675  319C   	fcall	_readRegister
  5574  1D64  0876               	movf	?_readRegister+1,w
  5575  1D65  0021               	movlb	1	; select bank1
  5576  1D66  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5577  1D67  0875               	movf	?_readRegister,w
  5578  1D68  00D2               	movwf	(?_snprintf^(0+128)+6)
  5579  1D69  31B4  24A8  319C   	fcall	_snprintf
  5580                           
  5581                           ;BQ76920.c: 318:     EUSART_Write_Text(messageBuffer);
  5582  1D6C  3071               	movlw	113
  5583  1D6D  00F2               	movwf	EUSART_Write_Text@text
  5584  1D6E  3027               	movlw	39
  5585  1D6F  00F3               	movwf	EUSART_Write_Text@text+1
  5586  1D70  31B4  2473  319C   	fcall	_EUSART_Write_Text
  5587                           
  5588                           ;BQ76920.c: 319:     snprintf(messageBuffer, 127, "0x00 SYS_STAT: %i \n\r", readRegister
      +                          (0x18, 0x00));
  5589  1D73  3071               	movlw	113
  5590  1D74  0021               	movlb	1	; select bank1
  5591  1D75  00CC               	movwf	snprintf@s^(0+128)
  5592  1D76  3027               	movlw	39
  5593  1D77  00CD               	movwf	(snprintf@s^(0+128)+1)
  5594  1D78  307F               	movlw	127
  5595  1D79  00CE               	movwf	snprintf@n^(0+128)
  5596  1D7A  3000               	movlw	0
  5597  1D7B  00CF               	movwf	(snprintf@n^(0+128)+1)
  5598  1D7C  304E               	movlw	low (STR_4| (0+32768))
  5599  1D7D  00D0               	movwf	snprintf@fmt^(0+128)
  5600  1D7E  30B9               	movlw	high (STR_4| (0+32768))
  5601  1D7F  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5602  1D80  3018               	movlw	24
  5603  1D81  00F5               	movwf	readRegister@slaveAddress
  5604  1D82  3000               	movlw	0
  5605  1D83  00F6               	movwf	readRegister@slaveAddress+1
  5606  1D84  3000               	movlw	0
  5607  1D85  00F7               	movwf	readRegister@regAddress
  5608  1D86  00F8               	movwf	readRegister@regAddress+1
  5609  1D87  31B6  2675  319C   	fcall	_readRegister
  5610  1D8A  0876               	movf	?_readRegister+1,w
  5611  1D8B  0021               	movlb	1	; select bank1
  5612  1D8C  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5613  1D8D  0875               	movf	?_readRegister,w
  5614  1D8E  00D2               	movwf	(?_snprintf^(0+128)+6)
  5615  1D8F  31B4  24A8  319C   	fcall	_snprintf
  5616                           
  5617                           ;BQ76920.c: 320:     EUSART_Write_Text(messageBuffer);
  5618  1D92  3071               	movlw	113
  5619  1D93  00F2               	movwf	EUSART_Write_Text@text
  5620  1D94  3027               	movlw	39
  5621  1D95  00F3               	movwf	EUSART_Write_Text@text+1
  5622  1D96  31B4  2473  319C   	fcall	_EUSART_Write_Text
  5623                           
  5624                           ;BQ76920.c: 321:     snprintf(messageBuffer, 127, "0x06 PROTECT1: %i \n\r", readRegister
      +                          (0x18, 0x06));
  5625  1D99  3071               	movlw	113
  5626  1D9A  0021               	movlb	1	; select bank1
  5627  1D9B  00CC               	movwf	snprintf@s^(0+128)
  5628  1D9C  3027               	movlw	39
  5629  1D9D  00CD               	movwf	(snprintf@s^(0+128)+1)
  5630  1D9E  307F               	movlw	127
  5631  1D9F  00CE               	movwf	snprintf@n^(0+128)
  5632  1DA0  3000               	movlw	0
  5633  1DA1  00CF               	movwf	(snprintf@n^(0+128)+1)
  5634  1DA2  300F               	movlw	low (STR_5| (0+32768))
  5635  1DA3  00D0               	movwf	snprintf@fmt^(0+128)
  5636  1DA4  30B9               	movlw	high (STR_5| (0+32768))
  5637  1DA5  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5638  1DA6  3018               	movlw	24
  5639  1DA7  00F5               	movwf	readRegister@slaveAddress
  5640  1DA8  3000               	movlw	0
  5641  1DA9  00F6               	movwf	readRegister@slaveAddress+1
  5642  1DAA  3006               	movlw	6
  5643  1DAB  00F7               	movwf	readRegister@regAddress
  5644  1DAC  3000               	movlw	0
  5645  1DAD  00F8               	movwf	readRegister@regAddress+1
  5646  1DAE  31B6  2675  319C   	fcall	_readRegister
  5647  1DB1  0876               	movf	?_readRegister+1,w
  5648  1DB2  0021               	movlb	1	; select bank1
  5649  1DB3  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5650  1DB4  0875               	movf	?_readRegister,w
  5651  1DB5  00D2               	movwf	(?_snprintf^(0+128)+6)
  5652  1DB6  31B4  24A8  319C   	fcall	_snprintf
  5653                           
  5654                           ;BQ76920.c: 322:     EUSART_Write_Text(messageBuffer);
  5655  1DB9  3071               	movlw	113
  5656  1DBA  00F2               	movwf	EUSART_Write_Text@text
  5657  1DBB  3027               	movlw	39
  5658  1DBC  00F3               	movwf	EUSART_Write_Text@text+1
  5659  1DBD  31B4  2473  319C   	fcall	_EUSART_Write_Text
  5660                           
  5661                           ;BQ76920.c: 323:     snprintf(messageBuffer, 127, "0x07 PROTECT2: %i \n\r", readRegister
      +                          (0x18, 0x07));
  5662  1DC0  3071               	movlw	113
  5663  1DC1  0021               	movlb	1	; select bank1
  5664  1DC2  00CC               	movwf	snprintf@s^(0+128)
  5665  1DC3  3027               	movlw	39
  5666  1DC4  00CD               	movwf	(snprintf@s^(0+128)+1)
  5667  1DC5  307F               	movlw	127
  5668  1DC6  00CE               	movwf	snprintf@n^(0+128)
  5669  1DC7  3000               	movlw	0
  5670  1DC8  00CF               	movwf	(snprintf@n^(0+128)+1)
  5671  1DC9  3024               	movlw	low (STR_6| (0+32768))
  5672  1DCA  00D0               	movwf	snprintf@fmt^(0+128)
  5673  1DCB  30B9               	movlw	high (STR_6| (0+32768))
  5674  1DCC  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5675  1DCD  3018               	movlw	24
  5676  1DCE  00F5               	movwf	readRegister@slaveAddress
  5677  1DCF  3000               	movlw	0
  5678  1DD0  00F6               	movwf	readRegister@slaveAddress+1
  5679  1DD1  3007               	movlw	7
  5680  1DD2  00F7               	movwf	readRegister@regAddress
  5681  1DD3  3000               	movlw	0
  5682  1DD4  00F8               	movwf	readRegister@regAddress+1
  5683  1DD5  31B6  2675  319C   	fcall	_readRegister
  5684  1DD8  0876               	movf	?_readRegister+1,w
  5685  1DD9  0021               	movlb	1	; select bank1
  5686  1DDA  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5687  1DDB  0875               	movf	?_readRegister,w
  5688  1DDC  00D2               	movwf	(?_snprintf^(0+128)+6)
  5689  1DDD  31B4  24A8  319C   	fcall	_snprintf
  5690                           
  5691                           ;BQ76920.c: 324:     EUSART_Write_Text(messageBuffer);
  5692  1DE0  3071               	movlw	113
  5693  1DE1  00F2               	movwf	EUSART_Write_Text@text
  5694  1DE2  3027               	movlw	39
  5695  1DE3  00F3               	movwf	EUSART_Write_Text@text+1
  5696  1DE4  31B4  2473  319C   	fcall	_EUSART_Write_Text
  5697                           
  5698                           ;BQ76920.c: 325:     snprintf(messageBuffer, 127, "Current: %d \n\r", batCurrent);
  5699  1DE7  3071               	movlw	113
  5700  1DE8  0021               	movlb	1	; select bank1
  5701  1DE9  00CC               	movwf	snprintf@s^(0+128)
  5702  1DEA  3027               	movlw	39
  5703  1DEB  00CD               	movwf	(snprintf@s^(0+128)+1)
  5704  1DEC  307F               	movlw	127
  5705  1DED  00CE               	movwf	snprintf@n^(0+128)
  5706  1DEE  3000               	movlw	0
  5707  1DEF  00CF               	movwf	(snprintf@n^(0+128)+1)
  5708  1DF0  30E2               	movlw	low (STR_7| (0+32768))
  5709  1DF1  00D0               	movwf	snprintf@fmt^(0+128)
  5710  1DF2  30B9               	movlw	high (STR_7| (0+32768))
  5711  1DF3  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5712  1DF4  0023               	movlb	3	; select bank3
  5713  1DF5  083D               	movf	(_batCurrent+3)^(0+384),w
  5714  1DF6  0021               	movlb	1	; select bank1
  5715  1DF7  00D5               	movwf	((?_snprintf+3)^(0+128)+6)
  5716  1DF8  0023               	movlb	3	; select bank3
  5717  1DF9  083C               	movf	(_batCurrent+2)^(0+384),w
  5718  1DFA  0021               	movlb	1	; select bank1
  5719  1DFB  00D4               	movwf	((?_snprintf+2)^(0+128)+6)
  5720  1DFC  0023               	movlb	3	; select bank3
  5721  1DFD  083B               	movf	(_batCurrent+1)^(0+384),w
  5722  1DFE  0021               	movlb	1	; select bank1
  5723  1DFF  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5724  1E00  0023               	movlb	3	; select bank3
  5725  1E01  083A               	movf	_batCurrent^(0+384),w
  5726  1E02  0021               	movlb	1	; select bank1
  5727  1E03  00D2               	movwf	(?_snprintf^(0+128)+6)
  5728  1E04  31B4  24A8  319C   	fcall	_snprintf
  5729                           
  5730                           ;BQ76920.c: 326:     EUSART_Write_Text(messageBuffer);
  5731  1E07  3071               	movlw	113
  5732  1E08  00F2               	movwf	EUSART_Write_Text@text
  5733  1E09  3027               	movlw	39
  5734  1E0A  00F3               	movwf	EUSART_Write_Text@text+1
  5735  1E0B  31B4  2473  319C   	fcall	_EUSART_Write_Text
  5736                           
  5737                           ;BQ76920.c: 327:     snprintf(messageBuffer, 127, "cellval: %d SOC: %d \n\r", lookupTabl
      +                          eSamsung_voltage[20],lookupTableSamsung_SOC[20]);
  5738  1E0E  3071               	movlw	113
  5739  1E0F  0021               	movlb	1	; select bank1
  5740  1E10  00CC               	movwf	snprintf@s^(0+128)
  5741  1E11  3027               	movlw	39
  5742  1E12  00CD               	movwf	(snprintf@s^(0+128)+1)
  5743  1E13  307F               	movlw	127
  5744  1E14  00CE               	movwf	snprintf@n^(0+128)
  5745  1E15  3000               	movlw	0
  5746  1E16  00CF               	movwf	(snprintf@n^(0+128)+1)
  5747  1E17  30B7               	movlw	low (STR_8| (0+32768))
  5748  1E18  00D0               	movwf	snprintf@fmt^(0+128)
  5749  1E19  30B8               	movlw	high (STR_8| (0+32768))
  5750  1E1A  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5751  1E1B  3084               	movlw	low ((_lookupTableSamsung_voltage+40)| (0+32768))
  5752  1E1C  0084               	movwf	4
  5753  1E1D  30B0               	movlw	high ((_lookupTableSamsung_voltage+40)| (0+32768))
  5754  1E1E  0085               	movwf	5
  5755  1E1F  3F00               	moviw [0]fsr0
  5756  1E20  00D2               	movwf	(?_snprintf^(0+128)+6)
  5757  1E21  3F01               	moviw [1]fsr0
  5758  1E22  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5759  1E23  3028               	movlw	low ((_lookupTableSamsung_SOC+40)| (0+32768))
  5760  1E24  0084               	movwf	4
  5761  1E25  30B0               	movlw	high ((_lookupTableSamsung_SOC+40)| (0+32768))
  5762  1E26  0085               	movwf	5
  5763  1E27  3F00               	moviw [0]fsr0
  5764  1E28  00D4               	movwf	(?_snprintf^(0+128)+8)
  5765  1E29  3F01               	moviw [1]fsr0
  5766  1E2A  00D5               	movwf	((?_snprintf+1)^(0+128)+8)
  5767  1E2B  31B4  24A8  319C   	fcall	_snprintf
  5768                           
  5769                           ;BQ76920.c: 328:     EUSART_Write_Text(messageBuffer);
  5770  1E2E  3071               	movlw	113
  5771  1E2F  00F2               	movwf	EUSART_Write_Text@text
  5772  1E30  3027               	movlw	39
  5773  1E31  00F3               	movwf	EUSART_Write_Text@text+1
  5774  1E32  31B4  2473  319C   	fcall	_EUSART_Write_Text
  5775                           
  5776                           ;BQ76920.c: 329:     snprintf(messageBuffer, 127, "Temp: %d e-2\n\r", temperatureThermis
      +                          tor);
  5777  1E35  3071               	movlw	113
  5778  1E36  0021               	movlb	1	; select bank1
  5779  1E37  00CC               	movwf	snprintf@s^(0+128)
  5780  1E38  3027               	movlw	39
  5781  1E39  00CD               	movwf	(snprintf@s^(0+128)+1)
  5782  1E3A  307F               	movlw	127
  5783  1E3B  00CE               	movwf	snprintf@n^(0+128)
  5784  1E3C  3000               	movlw	0
  5785  1E3D  00CF               	movwf	(snprintf@n^(0+128)+1)
  5786  1E3E  30F1               	movlw	low (STR_9| (0+32768))
  5787  1E3F  00D0               	movwf	snprintf@fmt^(0+128)
  5788  1E40  30B9               	movlw	high (STR_9| (0+32768))
  5789  1E41  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5790  1E42  0023               	movlb	3	; select bank3
  5791  1E43  0839               	movf	(_temperatureThermistor+3)^(0+384),w
  5792  1E44  0021               	movlb	1	; select bank1
  5793  1E45  00D5               	movwf	((?_snprintf+3)^(0+128)+6)
  5794  1E46  0023               	movlb	3	; select bank3
  5795  1E47  0838               	movf	(_temperatureThermistor+2)^(0+384),w
  5796  1E48  0021               	movlb	1	; select bank1
  5797  1E49  00D4               	movwf	((?_snprintf+2)^(0+128)+6)
  5798  1E4A  0023               	movlb	3	; select bank3
  5799  1E4B  0837               	movf	(_temperatureThermistor+1)^(0+384),w
  5800  1E4C  0021               	movlb	1	; select bank1
  5801  1E4D  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5802  1E4E  0023               	movlb	3	; select bank3
  5803  1E4F  0836               	movf	_temperatureThermistor^(0+384),w
  5804  1E50  0021               	movlb	1	; select bank1
  5805  1E51  00D2               	movwf	(?_snprintf^(0+128)+6)
  5806  1E52  31B4  24A8  319C   	fcall	_snprintf
  5807                           
  5808                           ;BQ76920.c: 330:     EUSART_Write_Text(messageBuffer);
  5809  1E55  3071               	movlw	113
  5810  1E56  00F2               	movwf	EUSART_Write_Text@text
  5811  1E57  3027               	movlw	39
  5812  1E58  00F3               	movwf	EUSART_Write_Text@text+1
  5813  1E59  31B4  2473         	fcall	_EUSART_Write_Text
  5814  1E5B  0008               	return
  5815  1E5C                     __end_of_printcellParameters:	
  5816                           
  5817                           	psect	text4
  5818  34A8                     __ptext4:	
  5819 ;; *************** function _snprintf *****************
  5820 ;; Defined at:
  5821 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\snprintf.c"
  5822 ;; Parameters:    Size  Location     Type
  5823 ;;  s               2   44[BANK1 ] PTR unsigned char 
  5824 ;;		 -> messageBuffer(127), 
  5825 ;;  n               2   46[BANK1 ] unsigned int 
  5826 ;;  fmt             2   48[BANK1 ] PTR const unsigned char 
  5827 ;;		 -> STR_23(18), STR_22(18), STR_21(19), STR_20(20), 
  5828 ;;		 -> STR_19(20), STR_18(21), STR_17(21), STR_16(21), 
  5829 ;;		 -> STR_15(22), STR_14(22), STR_13(21), STR_12(21), 
  5830 ;;		 -> STR_9(15), STR_8(23), STR_7(15), STR_6(21), 
  5831 ;;		 -> STR_5(21), STR_4(21), STR_3(22), STR_2(71), 
  5832 ;;		 -> STR_1(40), 
  5833 ;; Auto vars:     Size  Location     Type
  5834 ;;  ret             2    0        int 
  5835 ;;  ap              1   79[BANK0 ] PTR void [1]
  5836 ;;		 -> ?_snprintf(2), 
  5837 ;; Return value:  Size  Location     Type
  5838 ;;                  2   44[BANK1 ] int 
  5839 ;; Registers used:
  5840 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5841 ;; Tracked objects:
  5842 ;;		On entry : 0/0
  5843 ;;		On exit  : 0/0
  5844 ;;		Unchanged: 0/0
  5845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5846 ;;      Params:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5847 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5848 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5849 ;;      Totals:         0       4      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5850 ;;Total ram usage:       34 bytes
  5851 ;; Hardware stack levels used:    1
  5852 ;; Hardware stack levels required when called:    9
  5853 ;; This function calls:
  5854 ;;		_vsnprintf
  5855 ;; This function is called by:
  5856 ;;		_statemachine
  5857 ;;		_printcellParameters
  5858 ;;		_printotAFERegisters
  5859 ;; This function uses a non-reentrant model
  5860 ;;
  5861                           
  5862                           
  5863                           ;psect for function _snprintf
  5864  34A8                     _snprintf:	
  5865                           
  5866                           ;incstack = 0
  5867                           ; Regs used in _snprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5868  34A8  30D2               	movlw	(low ((?_snprintf| 0+6)))& (0+255)
  5869  34A9  0020               	movlb	0	; select bank0
  5870  34AA  00EC               	movwf	??_snprintf
  5871  34AB  086C               	movf	??_snprintf,w
  5872  34AC  00EF               	movwf	snprintf@ap
  5873  34AD  0021               	movlb	1	; select bank1
  5874  34AE  084D               	movf	(snprintf@s+1)^(0+128),w
  5875  34AF  00BC               	movwf	(vsnprintf@s+1)^(0+128)
  5876  34B0  084C               	movf	snprintf@s^(0+128),w
  5877  34B1  00BB               	movwf	vsnprintf@s^(0+128)
  5878  34B2  084F               	movf	(snprintf@n+1)^(0+128),w
  5879  34B3  00BE               	movwf	(vsnprintf@n+1)^(0+128)
  5880  34B4  084E               	movf	snprintf@n^(0+128),w
  5881  34B5  00BD               	movwf	vsnprintf@n^(0+128)
  5882  34B6  0851               	movf	(snprintf@fmt+1)^(0+128),w
  5883  34B7  00C0               	movwf	(vsnprintf@fmt+1)^(0+128)
  5884  34B8  0850               	movf	snprintf@fmt^(0+128),w
  5885  34B9  00BF               	movwf	vsnprintf@fmt^(0+128)
  5886  34BA  306F               	movlw	(low (snprintf@ap| 0))& (0+255)
  5887  34BB  0020               	movlb	0	; select bank0
  5888  34BC  00EC               	movwf	??_snprintf
  5889  34BD  086C               	movf	??_snprintf,w
  5890  34BE  0021               	movlb	1	; select bank1
  5891  34BF  00C1               	movwf	vsnprintf@ap^(0+128)
  5892  34C0  31AA  22B0         	fcall	_vsnprintf
  5893  34C2  0008               	return
  5894  34C3                     __end_of_snprintf:	
  5895                           
  5896                           	psect	text5
  5897  2AB0                     __ptext5:	
  5898 ;; *************** function _vsnprintf *****************
  5899 ;; Defined at:
  5900 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_vsnprintf.c"
  5901 ;; Parameters:    Size  Location     Type
  5902 ;;  s               2   27[BANK1 ] PTR unsigned char 
  5903 ;;		 -> messageBuffer(127), 
  5904 ;;  n               2   29[BANK1 ] unsigned int 
  5905 ;;  fmt             2   31[BANK1 ] PTR const unsigned char 
  5906 ;;		 -> STR_23(18), STR_22(18), STR_21(19), STR_20(20), 
  5907 ;;		 -> STR_19(20), STR_18(21), STR_17(21), STR_16(21), 
  5908 ;;		 -> STR_15(22), STR_14(22), STR_13(21), STR_12(21), 
  5909 ;;		 -> STR_9(15), STR_8(23), STR_7(15), STR_6(21), 
  5910 ;;		 -> STR_5(21), STR_4(21), STR_3(22), STR_2(71), 
  5911 ;;		 -> STR_1(40), 
  5912 ;;  ap              1   33[BANK1 ] PTR PTR void 
  5913 ;;		 -> snprintf@ap(1), 
  5914 ;; Auto vars:     Size  Location     Type
  5915 ;;  f               6   38[BANK1 ] struct _IO_FILE
  5916 ;;  cnt             2   36[BANK1 ] int 
  5917 ;; Return value:  Size  Location     Type
  5918 ;;                  2   27[BANK1 ] int 
  5919 ;; Registers used:
  5920 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5921 ;; Tracked objects:
  5922 ;;		On entry : 0/0
  5923 ;;		On exit  : 0/0
  5924 ;;		Unchanged: 0/0
  5925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5926 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5927 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5928 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5929 ;;      Totals:         0       2      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5930 ;;Total ram usage:       19 bytes
  5931 ;; Hardware stack levels used:    1
  5932 ;; Hardware stack levels required when called:    8
  5933 ;; This function calls:
  5934 ;;		_vfprintf
  5935 ;; This function is called by:
  5936 ;;		_snprintf
  5937 ;; This function uses a non-reentrant model
  5938 ;;
  5939                           
  5940                           
  5941                           ;psect for function _vsnprintf
  5942  2AB0                     _vsnprintf:	
  5943                           
  5944                           ;incstack = 0
  5945                           ; Regs used in _vsnprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5946  2AB0  3080               	movlw	128
  5947  2AB1  0021               	movlb	1	; select bank1
  5948  2AB2  023E               	subwf	(vsnprintf@n+1)^(0+128),w
  5949  2AB3  3000               	movlw	0
  5950  2AB4  1903               	skipnz
  5951  2AB5  023D               	subwf	vsnprintf@n^(0+128),w
  5952  2AB6  1C03               	skipc
  5953  2AB7  2AC3               	goto	l8002
  5954  2AB8  304B               	movlw	75
  5955  2AB9  0023               	movlb	3	; select bank3
  5956  2ABA  00C2               	movwf	_errno^(0+384)
  5957  2ABB  3000               	movlw	0
  5958  2ABC  00C3               	movwf	(_errno^(0+384)+1)
  5959  2ABD  30FF               	movlw	255
  5960  2ABE  0021               	movlb	1	; select bank1
  5961  2ABF  00BB               	movwf	?_vsnprintf^(0+128)
  5962  2AC0  30FF               	movlw	255
  5963  2AC1  00BC               	movwf	(?_vsnprintf^(0+128)+1)
  5964  2AC2  0008               	return
  5965  2AC3                     l8002:	
  5966  2AC3  083C               	movf	(vsnprintf@s+1)^(0+128),w
  5967  2AC4  00C7               	movwf	(vsnprintf@f+1)^(0+128)
  5968  2AC5  083B               	movf	vsnprintf@s^(0+128),w
  5969  2AC6  00C6               	movwf	vsnprintf@f^(0+128)
  5970  2AC7  3000               	movlw	0
  5971  2AC8  023E               	subwf	(vsnprintf@n+1)^(0+128),w
  5972  2AC9  3002               	movlw	2
  5973  2ACA  1903               	skipnz
  5974  2ACB  023D               	subwf	vsnprintf@n^(0+128),w
  5975  2ACC  1C03               	skipc
  5976  2ACD  2AD7               	goto	l8008
  5977  2ACE  083D               	movf	vsnprintf@n^(0+128),w
  5978  2ACF  3EFF               	addlw	255
  5979  2AD0  00CA               	movwf	(vsnprintf@f^(0+128)+4)
  5980  2AD1  30FF               	movlw	255
  5981  2AD2  3D3E               	addwfc	(vsnprintf@n+1)^(0+128),w
  5982  2AD3  00CB               	movwf	((vsnprintf@f+1)^(0+128)+4)
  5983  2AD4  01C8               	clrf	(vsnprintf@f^(0+128)+2)
  5984  2AD5  01C9               	clrf	((vsnprintf@f+1)^(0+128)+2)
  5985  2AD6  2ADF               	goto	l8010
  5986  2AD7                     l8008:	
  5987  2AD7  3001               	movlw	1
  5988  2AD8  00CA               	movwf	(vsnprintf@f^(0+128)+4)
  5989  2AD9  3000               	movlw	0
  5990  2ADA  00CB               	movwf	(vsnprintf@f^(0+128)+5)
  5991  2ADB  3001               	movlw	1
  5992  2ADC  00C8               	movwf	(vsnprintf@f^(0+128)+2)
  5993  2ADD  3000               	movlw	0
  5994  2ADE  00C9               	movwf	(vsnprintf@f^(0+128)+3)
  5995  2ADF                     l8010:	
  5996  2ADF  30C6               	movlw	low vsnprintf@f
  5997  2AE0  0020               	movlb	0	; select bank0
  5998  2AE1  00E1               	movwf	vfprintf@fp
  5999  2AE2  3000               	movlw	high vsnprintf@f
  6000  2AE3  00E2               	movwf	vfprintf@fp+1
  6001  2AE4  0021               	movlb	1	; select bank1
  6002  2AE5  0840               	movf	(vsnprintf@fmt+1)^(0+128),w
  6003  2AE6  0020               	movlb	0	; select bank0
  6004  2AE7  00E4               	movwf	vfprintf@fmt+1
  6005  2AE8  0021               	movlb	1	; select bank1
  6006  2AE9  083F               	movf	vsnprintf@fmt^(0+128),w
  6007  2AEA  0020               	movlb	0	; select bank0
  6008  2AEB  00E3               	movwf	vfprintf@fmt
  6009  2AEC  0021               	movlb	1	; select bank1
  6010  2AED  0841               	movf	vsnprintf@ap^(0+128),w
  6011  2AEE  0020               	movlb	0	; select bank0
  6012  2AEF  00EA               	movwf	??_vsnprintf
  6013  2AF0  086A               	movf	??_vsnprintf,w
  6014  2AF1  00E5               	movwf	vfprintf@ap
  6015  2AF2  31B5  25AB  31AA   	fcall	_vfprintf
  6016  2AF5  0020               	movlb	0	; select bank0
  6017  2AF6  0862               	movf	?_vfprintf+1,w
  6018  2AF7  0021               	movlb	1	; select bank1
  6019  2AF8  00C5               	movwf	(vsnprintf@cnt+1)^(0+128)
  6020  2AF9  0020               	movlb	0	; select bank0
  6021  2AFA  0861               	movf	?_vfprintf,w
  6022  2AFB  0021               	movlb	1	; select bank1
  6023  2AFC  00C4               	movwf	vsnprintf@cnt^(0+128)
  6024  2AFD  083D               	movf	vsnprintf@n^(0+128),w
  6025  2AFE  043E               	iorwf	(vsnprintf@n+1)^(0+128),w
  6026  2AFF  1D03               	btfss	3,2
  6027  2B00  1BC5               	btfsc	(vsnprintf@cnt+1)^(0+128),7
  6028  2B01  2B28               	goto	l8024
  6029  2B02  083D               	movf	vsnprintf@n^(0+128),w
  6030  2B03  3EFF               	addlw	255
  6031  2B04  0020               	movlb	0	; select bank0
  6032  2B05  00EA               	movwf	??_vsnprintf
  6033  2B06  30FF               	movlw	255
  6034  2B07  0021               	movlb	1	; select bank1
  6035  2B08  3D3E               	addwfc	(vsnprintf@n+1)^(0+128),w
  6036  2B09  0020               	movlb	0	; select bank0
  6037  2B0A  00EB               	movwf	??_vsnprintf+1
  6038  2B0B  086B               	movf	??_vsnprintf+1,w
  6039  2B0C  0021               	movlb	1	; select bank1
  6040  2B0D  0245               	subwf	(vsnprintf@cnt+1)^(0+128),w
  6041  2B0E  1D03               	skipz
  6042  2B0F  2B14               	goto	u11125
  6043  2B10  0020               	movlb	0	; select bank0
  6044  2B11  086A               	movf	??_vsnprintf,w
  6045  2B12  0021               	movlb	1	; select bank1
  6046  2B13  0244               	subwf	vsnprintf@cnt^(0+128),w
  6047  2B14                     u11125:	
  6048  2B14  1C03               	skipc
  6049  2B15  2B1D               	goto	l8020
  6050  2B16  083D               	movf	vsnprintf@n^(0+128),w
  6051  2B17  3EFF               	addlw	255
  6052  2B18  00C2               	movwf	_vsnprintf$1829^(0+128)
  6053  2B19  30FF               	movlw	255
  6054  2B1A  3D3E               	addwfc	(vsnprintf@n+1)^(0+128),w
  6055  2B1B  00C3               	movwf	(_vsnprintf$1829+1)^(0+128)
  6056  2B1C  2B21               	goto	l8022
  6057  2B1D                     l8020:	
  6058  2B1D  0845               	movf	(vsnprintf@cnt+1)^(0+128),w
  6059  2B1E  00C3               	movwf	(_vsnprintf$1829+1)^(0+128)
  6060  2B1F  0844               	movf	vsnprintf@cnt^(0+128),w
  6061  2B20  00C2               	movwf	_vsnprintf$1829^(0+128)
  6062  2B21                     l8022:	
  6063  2B21  0842               	movf	_vsnprintf$1829^(0+128),w
  6064  2B22  073B               	addwf	vsnprintf@s^(0+128),w
  6065  2B23  0086               	movwf	6
  6066  2B24  0843               	movf	(_vsnprintf$1829+1)^(0+128),w
  6067  2B25  3D3C               	addwfc	(vsnprintf@s+1)^(0+128),w
  6068  2B26  0087               	movwf	7
  6069  2B27  0181               	clrf	1
  6070  2B28                     l8024:	
  6071  2B28  0845               	movf	(vsnprintf@cnt+1)^(0+128),w
  6072  2B29  00BC               	movwf	(?_vsnprintf+1)^(0+128)
  6073  2B2A  0844               	movf	vsnprintf@cnt^(0+128),w
  6074  2B2B  00BB               	movwf	?_vsnprintf^(0+128)
  6075  2B2C  0008               	return
  6076  2B2D                     __end_of_vsnprintf:	
  6077                           
  6078                           	psect	text6
  6079  35AB                     __ptext6:	
  6080 ;; *************** function _vfprintf *****************
  6081 ;; Defined at:
  6082 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6083 ;; Parameters:    Size  Location     Type
  6084 ;;  fp              2   65[BANK0 ] PTR struct _IO_FILE
  6085 ;;		 -> vsnprintf@f(6), 
  6086 ;;  fmt             2   67[BANK0 ] PTR const unsigned char 
  6087 ;;		 -> STR_23(18), STR_22(18), STR_21(19), STR_20(20), 
  6088 ;;		 -> STR_19(20), STR_18(21), STR_17(21), STR_16(21), 
  6089 ;;		 -> STR_15(22), STR_14(22), STR_13(21), STR_12(21), 
  6090 ;;		 -> STR_9(15), STR_8(23), STR_7(15), STR_6(21), 
  6091 ;;		 -> STR_5(21), STR_4(21), STR_3(22), STR_2(71), 
  6092 ;;		 -> STR_1(40), 
  6093 ;;  ap              1   69[BANK0 ] PTR PTR void 
  6094 ;;		 -> snprintf@ap(1), 
  6095 ;; Auto vars:     Size  Location     Type
  6096 ;;  cfmt            2   72[BANK0 ] PTR unsigned char 
  6097 ;;		 -> STR_23(18), STR_22(18), STR_21(19), STR_20(20), 
  6098 ;;		 -> STR_19(20), STR_18(21), STR_17(21), STR_16(21), 
  6099 ;;		 -> STR_15(22), STR_14(22), STR_13(21), STR_12(21), 
  6100 ;;		 -> STR_9(15), STR_8(23), STR_7(15), STR_6(21), 
  6101 ;;		 -> STR_5(21), STR_4(21), STR_3(22), STR_2(71), 
  6102 ;;		 -> STR_1(40), 
  6103 ;; Return value:  Size  Location     Type
  6104 ;;                  2   65[BANK0 ] int 
  6105 ;; Registers used:
  6106 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6107 ;; Tracked objects:
  6108 ;;		On entry : 0/0
  6109 ;;		On exit  : 0/0
  6110 ;;		Unchanged: 0/0
  6111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6112 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6113 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6114 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6115 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6116 ;;Total ram usage:        9 bytes
  6117 ;; Hardware stack levels used:    1
  6118 ;; Hardware stack levels required when called:    7
  6119 ;; This function calls:
  6120 ;;		_vfpfcnvrt
  6121 ;; This function is called by:
  6122 ;;		_vsnprintf
  6123 ;; This function uses a non-reentrant model
  6124 ;;
  6125                           
  6126                           
  6127                           ;psect for function _vfprintf
  6128  35AB                     _vfprintf:	
  6129                           
  6130                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  6131                           
  6132                           ;incstack = 0
  6133                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6134  35AB  0020               	movlb	0	; select bank0
  6135  35AC  0864               	movf	vfprintf@fmt+1,w
  6136  35AD  00E9               	movwf	vfprintf@cfmt+1
  6137  35AE  0863               	movf	vfprintf@fmt,w
  6138  35AF  00E8               	movwf	vfprintf@cfmt
  6139                           
  6140                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  6141  35B0  0023               	movlb	3	; select bank3
  6142  35B1  01C4               	clrf	_nout^(0+384)
  6143  35B2  01C5               	clrf	(_nout+1)^(0+384)
  6144  35B3                     l7424:	
  6145                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  6146                           
  6147                           
  6148                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  6149  35B3  0020               	movlb	0	; select bank0
  6150  35B4  0868               	movf	vfprintf@cfmt,w
  6151  35B5  0084               	movwf	4
  6152  35B6  0869               	movf	vfprintf@cfmt+1,w
  6153  35B7  0085               	movwf	5
  6154  35B8  0012               	moviw fsr0++
  6155  35B9  1903               	btfsc	3,2
  6156  35BA  2DD3               	goto	l7426
  6157                           
  6158                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  6159  35BB  0862               	movf	vfprintf@fp+1,w
  6160  35BC  00D8               	movwf	vfpfcnvrt@fp+1
  6161  35BD  0861               	movf	vfprintf@fp,w
  6162  35BE  00D7               	movwf	vfpfcnvrt@fp
  6163  35BF  3068               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  6164  35C0  00E6               	movwf	??_vfprintf
  6165  35C1  0866               	movf	??_vfprintf,w
  6166  35C2  00D9               	movwf	vfpfcnvrt@fmt
  6167  35C3  0865               	movf	vfprintf@ap,w
  6168  35C4  00E7               	movwf	??_vfprintf+1
  6169  35C5  0867               	movf	??_vfprintf+1,w
  6170  35C6  00DA               	movwf	vfpfcnvrt@ap
  6171  35C7  319E  265C  31B5   	fcall	_vfpfcnvrt
  6172  35CA  0020               	movlb	0	; select bank0
  6173  35CB  0857               	movf	?_vfpfcnvrt,w
  6174  35CC  0023               	movlb	3	; select bank3
  6175  35CD  07C4               	addwf	_nout^(0+384),f
  6176  35CE  0020               	movlb	0	; select bank0
  6177  35CF  0858               	movf	?_vfpfcnvrt+1,w
  6178  35D0  0023               	movlb	3	; select bank3
  6179  35D1  3DC5               	addwfc	(_nout+1)^(0+384),f
  6180  35D2  2DB3               	goto	l7424
  6181  35D3                     l7426:	
  6182                           
  6183                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  6184  35D3  0023               	movlb	3	; select bank3
  6185  35D4  0845               	movf	(_nout+1)^(0+384),w
  6186  35D5  0020               	movlb	0	; select bank0
  6187  35D6  00E2               	movwf	?_vfprintf+1
  6188  35D7  0023               	movlb	3	; select bank3
  6189  35D8  0844               	movf	_nout^(0+384),w
  6190  35D9  0020               	movlb	0	; select bank0
  6191  35DA  00E1               	movwf	?_vfprintf
  6192  35DB  0008               	return
  6193  35DC                     __end_of_vfprintf:	
  6194                           
  6195                           	psect	text7
  6196  1E5C                     __ptext7:	
  6197 ;; *************** function _vfpfcnvrt *****************
  6198 ;; Defined at:
  6199 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6200 ;; Parameters:    Size  Location     Type
  6201 ;;  fp              2   55[BANK0 ] PTR struct _IO_FILE
  6202 ;;		 -> vsnprintf@f(6), 
  6203 ;;  fmt             1   57[BANK0 ] PTR PTR unsigned char 
  6204 ;;		 -> vfprintf@cfmt(2), 
  6205 ;;  ap              1   58[BANK0 ] PTR PTR void 
  6206 ;;		 -> snprintf@ap(1), 
  6207 ;; Auto vars:     Size  Location     Type
  6208 ;;  llu             8   19[BANK1 ] unsigned long long 
  6209 ;;  ll              8    8[BANK1 ] long long 
  6210 ;;  f               4    0        long long 
  6211 ;;  ct              3    0        unsigned char [3]
  6212 ;;  vp              2   16[BANK1 ] PTR void 
  6213 ;;		 -> ?_snprintf(2), sp__logf(4), adcGain(2), 
  6214 ;;  done            2    2[BANK1 ] int 
  6215 ;;  cp              2    0[BANK1 ] PTR unsigned char 
  6216 ;;		 -> ?_snprintf(2), sp__logf(4), adcGain(2), 
  6217 ;;  i               2    0        int 
  6218 ;;  c               1   18[BANK1 ] unsigned char 
  6219 ;; Return value:  Size  Location     Type
  6220 ;;                  2   55[BANK0 ] int 
  6221 ;; Registers used:
  6222 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6223 ;; Tracked objects:
  6224 ;;		On entry : 0/0
  6225 ;;		On exit  : 0/0
  6226 ;;		Unchanged: 0/0
  6227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6228 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6229 ;;      Locals:         0       0      27       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6230 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6231 ;;      Totals:         0      10      27       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6232 ;;Total ram usage:       37 bytes
  6233 ;; Hardware stack levels used:    1
  6234 ;; Hardware stack levels required when called:    6
  6235 ;; This function calls:
  6236 ;;		_atoi
  6237 ;;		_ctoa
  6238 ;;		_dtoa
  6239 ;;		_fputc
  6240 ;;		_isdigit
  6241 ;;		_otoa
  6242 ;;		_stoa
  6243 ;;		_strncmp
  6244 ;;		_utoa
  6245 ;;		_xtoa
  6246 ;; This function is called by:
  6247 ;;		_vfprintf
  6248 ;; This function uses a non-reentrant model
  6249 ;;
  6250                           
  6251                           
  6252                           ;psect for function _vfpfcnvrt
  6253  1E5C                     _vfpfcnvrt:	
  6254                           
  6255                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  6256                           
  6257                           ;incstack = 0
  6258                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6259  1E5C  0020               	movlb	0	; select bank0
  6260  1E5D  0859               	movf	vfpfcnvrt@fmt,w
  6261  1E5E  0086               	movwf	6
  6262  1E5F  0187               	clrf	7
  6263  1E60  3F40               	moviw [0]fsr1
  6264  1E61  00DB               	movwf	??_vfpfcnvrt
  6265  1E62  3F41               	moviw [1]fsr1
  6266  1E63  00DC               	movwf	??_vfpfcnvrt+1
  6267  1E64  085B               	movf	??_vfpfcnvrt,w
  6268  1E65  0084               	movwf	4
  6269  1E66  085C               	movf	??_vfpfcnvrt+1,w
  6270  1E67  0085               	movwf	5
  6271  1E68  0012               	moviw fsr0++
  6272  1E69  3A25               	xorlw	37
  6273  1E6A  1D03               	btfss	3,2
  6274  1E6B  2FFE               	goto	L7
  6275                           
  6276                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  6277  1E6C  0859               	movf	vfpfcnvrt@fmt,w
  6278  1E6D  0086               	movwf	6
  6279  1E6E  0187               	clrf	7
  6280  1E6F  3001               	movlw	1
  6281  1E70  0781               	addwf	1,f
  6282  1E71  3141               	addfsr 1,1
  6283  1E72  1803               	skipnc
  6284  1E73  0A81               	incf	1,f
  6285                           
  6286                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  6287  1E74  0022               	movlb	2	; select bank2
  6288  1E75  01E5               	clrf	_width^(0+256)
  6289  1E76  01E6               	clrf	(_width+1)^(0+256)
  6290  1E77  01E9               	clrf	_flags^(0+256)
  6291  1E78  01EA               	clrf	(_flags+1)^(0+256)
  6292                           
  6293                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  6294  1E79  30FF               	movlw	255
  6295  1E7A  00E7               	movwf	_prec^(0+256)
  6296  1E7B  30FF               	movlw	255
  6297  1E7C  00E8               	movwf	(_prec^(0+256)+1)
  6298                           
  6299                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  6300  1E7D  0021               	movlb	1	; select bank1
  6301  1E7E  01A2               	clrf	vfpfcnvrt@done^(0+128)
  6302  1E7F  01A3               	clrf	(vfpfcnvrt@done+1)^(0+128)
  6303                           
  6304                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  6305  1E80  2E9E               	goto	l6852
  6306  1E81                     l776:	
  6307                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 691:       
      +                                    case '-' :
  6308                           
  6309                           
  6310                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  6311  1E81  0022               	movlb	2	; select bank2
  6312  1E82  1469               	bsf	_flags^(0+256),0
  6313  1E83                     l6836:	
  6314                           
  6315                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  6316  1E83  0020               	movlb	0	; select bank0
  6317  1E84  0859               	movf	vfpfcnvrt@fmt,w
  6318  1E85  0086               	movwf	6
  6319  1E86  0187               	clrf	7
  6320  1E87  3001               	movlw	1
  6321  1E88  0781               	addwf	1,f
  6322  1E89  3141               	addfsr 1,1
  6323  1E8A  1803               	skipnc
  6324  1E8B  0A81               	incf	1,f
  6325                           
  6326                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  6327  1E8C  2E9E               	goto	l6852
  6328  1E8D                     l778:	
  6329                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 695:       
      +                                    case '0' :
  6330                           
  6331                           
  6332                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  6333  1E8D  0022               	movlb	2	; select bank2
  6334  1E8E  14E9               	bsf	_flags^(0+256),1
  6335  1E8F  2E83               	goto	l6836
  6336  1E90                     l779:	
  6337                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 699:       
      +                                    case '+' :
  6338                           
  6339                           
  6340                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  6341  1E90  0022               	movlb	2	; select bank2
  6342  1E91  1569               	bsf	_flags^(0+256),2
  6343  1E92  2E83               	goto	l6836
  6344  1E93                     l780:	
  6345                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 703:       
      +                                    case ' ' :
  6346                           
  6347                           
  6348                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  6349  1E93  0022               	movlb	2	; select bank2
  6350  1E94  15E9               	bsf	_flags^(0+256),3
  6351  1E95  2E83               	goto	l6836
  6352  1E96                     l781:	
  6353                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 707:       
      +                                    case '#' :
  6354                           
  6355                           
  6356                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  6357  1E96  0022               	movlb	2	; select bank2
  6358  1E97  1669               	bsf	_flags^(0+256),4
  6359  1E98  2E83               	goto	l6836
  6360  1E99                     l6846:	
  6361                           
  6362                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  6363  1E99  3001               	movlw	1
  6364  1E9A  0021               	movlb	1	; select bank1
  6365  1E9B  00A2               	movwf	vfpfcnvrt@done^(0+128)
  6366  1E9C  3000               	movlw	0
  6367  1E9D  00A3               	movwf	(vfpfcnvrt@done^(0+128)+1)
  6368  1E9E                     l6852:	
  6369                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  6370                           
  6371                           
  6372                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  6373  1E9E  0021               	movlb	1	; select bank1
  6374  1E9F  0822               	movf	vfpfcnvrt@done^(0+128),w
  6375  1EA0  0423               	iorwf	(vfpfcnvrt@done+1)^(0+128),w
  6376  1EA1  1D03               	btfss	3,2
  6377  1EA2  2EC9               	goto	l783
  6378  1EA3  0020               	movlb	0	; select bank0
  6379  1EA4  0859               	movf	vfpfcnvrt@fmt,w
  6380  1EA5  0086               	movwf	6
  6381  1EA6  0187               	clrf	7
  6382  1EA7  3F40               	moviw [0]fsr1
  6383  1EA8  00DB               	movwf	??_vfpfcnvrt
  6384  1EA9  3F41               	moviw [1]fsr1
  6385  1EAA  00DC               	movwf	??_vfpfcnvrt+1
  6386  1EAB  085B               	movf	??_vfpfcnvrt,w
  6387  1EAC  0084               	movwf	4
  6388  1EAD  085C               	movf	??_vfpfcnvrt+1,w
  6389  1EAE  0085               	movwf	5
  6390  1EAF  0800               	movf	0,w	;code access
  6391  1EB0  00DD               	movwf	??_vfpfcnvrt+2
  6392  1EB1  01DE               	clrf	??_vfpfcnvrt+3
  6393                           
  6394                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6395                           ; Switch size 1, requested type "simple"
  6396                           ; Number of cases is 1, Range of values is 0 to 0
  6397                           ; switch strategies available:
  6398                           ; Name         Instructions Cycles
  6399                           ; simple_byte            4     3 (average)
  6400                           ; direct_byte            8     6 (fixed)
  6401                           ; jumptable            260     6 (fixed)
  6402                           ;	Chosen strategy is simple_byte
  6403  1EB2  085E               	movf	??_vfpfcnvrt+3,w
  6404  1EB3  3A00               	xorlw	0	; case 0
  6405  1EB4  1903               	skipnz
  6406  1EB5  2EB7               	goto	l8620
  6407  1EB6  2E99               	goto	l6846
  6408  1EB7                     l8620:	
  6409                           
  6410                           ; Switch size 1, requested type "simple"
  6411                           ; Number of cases is 5, Range of values is 32 to 48
  6412                           ; switch strategies available:
  6413                           ; Name         Instructions Cycles
  6414                           ; simple_byte           16     9 (average)
  6415                           ; direct_byte           43     9 (fixed)
  6416                           ; jumptable            263     9 (fixed)
  6417                           ;	Chosen strategy is simple_byte
  6418  1EB7  085D               	movf	??_vfpfcnvrt+2,w
  6419  1EB8  3A20               	xorlw	32	; case 32
  6420  1EB9  1903               	skipnz
  6421  1EBA  2E93               	goto	l780
  6422  1EBB  3A03               	xorlw	3	; case 35
  6423  1EBC  1903               	skipnz
  6424  1EBD  2E96               	goto	l781
  6425  1EBE  3A08               	xorlw	8	; case 43
  6426  1EBF  1903               	skipnz
  6427  1EC0  2E90               	goto	l779
  6428  1EC1  3A06               	xorlw	6	; case 45
  6429  1EC2  1903               	skipnz
  6430  1EC3  2E81               	goto	l776
  6431  1EC4  3A1D               	xorlw	29	; case 48
  6432  1EC5  1903               	skipnz
  6433  1EC6  2E8D               	goto	l778
  6434  1EC7  2E99               	goto	l6846
  6435  1EC8  2E9E               	goto	l6852
  6436  1EC9                     l783:	
  6437                           
  6438                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  6439  1EC9  0022               	movlb	2	; select bank2
  6440  1ECA  1C69               	btfss	_flags^(0+256),0
  6441  1ECB  2ED0               	goto	l6856
  6442                           
  6443                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  6444  1ECC  30FD               	movlw	253
  6445  1ECD  05E9               	andwf	_flags^(0+256),f
  6446  1ECE  30FF               	movlw	255
  6447  1ECF  05EA               	andwf	(_flags+1)^(0+256),f
  6448  1ED0                     l6856:	
  6449                           
  6450                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  6451  1ED0  0020               	movlb	0	; select bank0
  6452  1ED1  0859               	movf	vfpfcnvrt@fmt,w
  6453  1ED2  0086               	movwf	6
  6454  1ED3  0187               	clrf	7
  6455  1ED4  3F40               	moviw [0]fsr1
  6456  1ED5  00DB               	movwf	??_vfpfcnvrt
  6457  1ED6  3F41               	moviw [1]fsr1
  6458  1ED7  00DC               	movwf	??_vfpfcnvrt+1
  6459  1ED8  085B               	movf	??_vfpfcnvrt,w
  6460  1ED9  0084               	movwf	4
  6461  1EDA  085C               	movf	??_vfpfcnvrt+1,w
  6462  1EDB  0085               	movwf	5
  6463  1EDC  0012               	moviw fsr0++
  6464  1EDD  3A2A               	xorlw	42
  6465  1EDE  1D03               	btfss	3,2
  6466  1EDF  2EFE               	goto	l6868
  6467                           
  6468                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  6469  1EE0  0859               	movf	vfpfcnvrt@fmt,w
  6470  1EE1  0086               	movwf	6
  6471  1EE2  0187               	clrf	7
  6472  1EE3  3001               	movlw	1
  6473  1EE4  0781               	addwf	1,f
  6474  1EE5  3141               	addfsr 1,1
  6475  1EE6  1803               	skipnc
  6476  1EE7  0A81               	incf	1,f
  6477                           
  6478                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  6479  1EE8  085A               	movf	vfpfcnvrt@ap,w
  6480  1EE9  0086               	movwf	6
  6481  1EEA  0187               	clrf	7
  6482  1EEB  0801               	movf	1,w
  6483  1EEC  0084               	movwf	4
  6484  1EED  0185               	clrf	5
  6485  1EEE  3002               	movlw	2
  6486  1EEF  0781               	addwf	1,f
  6487  1EF0  3F00               	moviw [0]fsr0
  6488  1EF1  0022               	movlb	2	; select bank2
  6489  1EF2  00E5               	movwf	_width^(0+256)
  6490  1EF3  3F01               	moviw [1]fsr0
  6491  1EF4  00E6               	movwf	(_width+1)^(0+256)
  6492                           
  6493                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  6494  1EF5  1FE6               	btfss	(_width+1)^(0+256),7
  6495  1EF6  2F41               	goto	l6878
  6496                           
  6497                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  6498  1EF7  1469               	bsf	_flags^(0+256),0
  6499                           
  6500                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  6501  1EF8  09E5               	comf	_width^(0+256),f
  6502  1EF9  09E6               	comf	(_width+1)^(0+256),f
  6503  1EFA  0AE5               	incf	_width^(0+256),f
  6504  1EFB  1903               	skipnz
  6505  1EFC  0AE6               	incf	(_width+1)^(0+256),f
  6506  1EFD  2F41               	goto	l6878
  6507  1EFE                     l6868:	
  6508                           
  6509                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  6510  1EFE  0859               	movf	vfpfcnvrt@fmt,w
  6511  1EFF  0086               	movwf	6
  6512  1F00  0187               	clrf	7
  6513  1F01  3F40               	moviw [0]fsr1
  6514  1F02  00F7               	movwf	atoi@s
  6515  1F03  3F41               	moviw [1]fsr1
  6516  1F04  00F8               	movwf	atoi@s+1
  6517  1F05  3198  2006  319E   	fcall	_atoi
  6518  1F08  0878               	movf	?_atoi+1,w
  6519  1F09  0022               	movlb	2	; select bank2
  6520  1F0A  00E6               	movwf	(_width+1)^(0+256)
  6521  1F0B  0877               	movf	?_atoi,w
  6522  1F0C  00E5               	movwf	_width^(0+256)
  6523                           
  6524                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6525  1F0D  2F17               	goto	l6872
  6526  1F0E                     l6870:	
  6527                           
  6528                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  6529  1F0E  0020               	movlb	0	; select bank0
  6530  1F0F  0859               	movf	vfpfcnvrt@fmt,w
  6531  1F10  0086               	movwf	6
  6532  1F11  0187               	clrf	7
  6533  1F12  3001               	movlw	1
  6534  1F13  0781               	addwf	1,f
  6535  1F14  3141               	addfsr 1,1
  6536  1F15  1803               	skipnc
  6537  1F16  0A81               	incf	1,f
  6538  1F17                     l6872:	
  6539  1F17  0020               	movlb	0	; select bank0
  6540  1F18  0859               	movf	vfpfcnvrt@fmt,w
  6541  1F19  0086               	movwf	6
  6542  1F1A  0187               	clrf	7
  6543  1F1B  3F40               	moviw [0]fsr1
  6544  1F1C  00DB               	movwf	??_vfpfcnvrt
  6545  1F1D  3F41               	moviw [1]fsr1
  6546  1F1E  00DC               	movwf	??_vfpfcnvrt+1
  6547  1F1F  085B               	movf	??_vfpfcnvrt,w
  6548  1F20  0084               	movwf	4
  6549  1F21  085C               	movf	??_vfpfcnvrt+1,w
  6550  1F22  0085               	movwf	5
  6551  1F23  0800               	movf	0,w	;code access
  6552  1F24  3ED0               	addlw	208
  6553  1F25  00DD               	movwf	??_vfpfcnvrt+2
  6554  1F26  30FF               	movlw	255
  6555  1F27  1803               	skipnc
  6556  1F28  3000               	movlw	0
  6557  1F29  00DE               	movwf	??_vfpfcnvrt+3
  6558  1F2A  3000               	movlw	0
  6559  1F2B  025E               	subwf	??_vfpfcnvrt+3,w
  6560  1F2C  300A               	movlw	10
  6561  1F2D  1903               	skipnz
  6562  1F2E  025D               	subwf	??_vfpfcnvrt+2,w
  6563  1F2F  1803               	btfsc	3,0
  6564  1F30  2F33               	goto	u9050
  6565  1F31  3001               	movlw	1
  6566  1F32  2F34               	goto	u9060
  6567  1F33                     u9050:	
  6568  1F33  3000               	movlw	0
  6569  1F34                     u9060:	
  6570  1F34  00DF               	movwf	??_vfpfcnvrt+4
  6571  1F35  01E0               	clrf	??_vfpfcnvrt+5
  6572  1F36  085F               	movf	??_vfpfcnvrt+4,w
  6573  1F37  0021               	movlb	1	; select bank1
  6574  1F38  00A4               	movwf	_vfpfcnvrt$1257^(0+128)
  6575  1F39  0020               	movlb	0	; select bank0
  6576  1F3A  0860               	movf	??_vfpfcnvrt+5,w
  6577  1F3B  0021               	movlb	1	; select bank1
  6578  1F3C  00A5               	movwf	(_vfpfcnvrt$1257+1)^(0+128)
  6579  1F3D  0824               	movf	_vfpfcnvrt$1257^(0+128),w
  6580  1F3E  0425               	iorwf	(_vfpfcnvrt$1257+1)^(0+128),w
  6581  1F3F  1D03               	btfss	3,2
  6582  1F40  2F0E               	goto	l6870
  6583  1F41                     l6878:	
  6584                           
  6585                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  6586  1F41  0020               	movlb	0	; select bank0
  6587  1F42  0859               	movf	vfpfcnvrt@fmt,w
  6588  1F43  0086               	movwf	6
  6589  1F44  0187               	clrf	7
  6590  1F45  3F40               	moviw [0]fsr1
  6591  1F46  00DB               	movwf	??_vfpfcnvrt
  6592  1F47  3F41               	moviw [1]fsr1
  6593  1F48  00DC               	movwf	??_vfpfcnvrt+1
  6594  1F49  085B               	movf	??_vfpfcnvrt,w
  6595  1F4A  0084               	movwf	4
  6596  1F4B  085C               	movf	??_vfpfcnvrt+1,w
  6597  1F4C  0085               	movwf	5
  6598  1F4D  0012               	moviw fsr0++
  6599  1F4E  3A2E               	xorlw	46
  6600  1F4F  1D03               	btfss	3,2
  6601  1F50  2FC5               	goto	l6900
  6602                           
  6603                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  6604  1F51  0022               	movlb	2	; select bank2
  6605  1F52  01E7               	clrf	_prec^(0+256)
  6606  1F53  01E8               	clrf	(_prec+1)^(0+256)
  6607                           
  6608                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  6609  1F54  0020               	movlb	0	; select bank0
  6610  1F55  0859               	movf	vfpfcnvrt@fmt,w
  6611  1F56  0086               	movwf	6
  6612  1F57  0187               	clrf	7
  6613  1F58  3001               	movlw	1
  6614  1F59  0781               	addwf	1,f
  6615  1F5A  3141               	addfsr 1,1
  6616  1F5B  1803               	skipnc
  6617  1F5C  0A81               	incf	1,f
  6618                           
  6619                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  6620  1F5D  0859               	movf	vfpfcnvrt@fmt,w
  6621  1F5E  0086               	movwf	6
  6622  1F5F  0187               	clrf	7
  6623  1F60  3F40               	moviw [0]fsr1
  6624  1F61  00DB               	movwf	??_vfpfcnvrt
  6625  1F62  3F41               	moviw [1]fsr1
  6626  1F63  00DC               	movwf	??_vfpfcnvrt+1
  6627  1F64  085B               	movf	??_vfpfcnvrt,w
  6628  1F65  0084               	movwf	4
  6629  1F66  085C               	movf	??_vfpfcnvrt+1,w
  6630  1F67  0085               	movwf	5
  6631  1F68  0012               	moviw fsr0++
  6632  1F69  3A2A               	xorlw	42
  6633  1F6A  1D03               	btfss	3,2
  6634  1F6B  2F82               	goto	l6890
  6635                           
  6636                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  6637  1F6C  0859               	movf	vfpfcnvrt@fmt,w
  6638  1F6D  0086               	movwf	6
  6639  1F6E  0187               	clrf	7
  6640  1F6F  3001               	movlw	1
  6641  1F70  0781               	addwf	1,f
  6642  1F71  3141               	addfsr 1,1
  6643  1F72  1803               	skipnc
  6644  1F73  0A81               	incf	1,f
  6645                           
  6646                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  6647  1F74  085A               	movf	vfpfcnvrt@ap,w
  6648  1F75  0086               	movwf	6
  6649  1F76  0187               	clrf	7
  6650  1F77  0801               	movf	1,w
  6651  1F78  0084               	movwf	4
  6652  1F79  0185               	clrf	5
  6653  1F7A  3002               	movlw	2
  6654  1F7B  0781               	addwf	1,f
  6655  1F7C  3F00               	moviw [0]fsr0
  6656  1F7D  0022               	movlb	2	; select bank2
  6657  1F7E  00E7               	movwf	_prec^(0+256)
  6658  1F7F  3F01               	moviw [1]fsr0
  6659  1F80  00E8               	movwf	(_prec+1)^(0+256)
  6660                           
  6661                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  6662  1F81  2FC5               	goto	l6900
  6663  1F82                     l6890:	
  6664                           
  6665                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  6666  1F82  0859               	movf	vfpfcnvrt@fmt,w
  6667  1F83  0086               	movwf	6
  6668  1F84  0187               	clrf	7
  6669  1F85  3F40               	moviw [0]fsr1
  6670  1F86  00F7               	movwf	atoi@s
  6671  1F87  3F41               	moviw [1]fsr1
  6672  1F88  00F8               	movwf	atoi@s+1
  6673  1F89  3198  2006  319E   	fcall	_atoi
  6674  1F8C  0878               	movf	?_atoi+1,w
  6675  1F8D  0022               	movlb	2	; select bank2
  6676  1F8E  00E8               	movwf	(_prec+1)^(0+256)
  6677  1F8F  0877               	movf	?_atoi,w
  6678  1F90  00E7               	movwf	_prec^(0+256)
  6679                           
  6680                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6681  1F91  2F9B               	goto	l6894
  6682  1F92                     l6892:	
  6683                           
  6684                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  6685  1F92  0020               	movlb	0	; select bank0
  6686  1F93  0859               	movf	vfpfcnvrt@fmt,w
  6687  1F94  0086               	movwf	6
  6688  1F95  0187               	clrf	7
  6689  1F96  3001               	movlw	1
  6690  1F97  0781               	addwf	1,f
  6691  1F98  3141               	addfsr 1,1
  6692  1F99  1803               	skipnc
  6693  1F9A  0A81               	incf	1,f
  6694  1F9B                     l6894:	
  6695  1F9B  0020               	movlb	0	; select bank0
  6696  1F9C  0859               	movf	vfpfcnvrt@fmt,w
  6697  1F9D  0086               	movwf	6
  6698  1F9E  0187               	clrf	7
  6699  1F9F  3F40               	moviw [0]fsr1
  6700  1FA0  00DB               	movwf	??_vfpfcnvrt
  6701  1FA1  3F41               	moviw [1]fsr1
  6702  1FA2  00DC               	movwf	??_vfpfcnvrt+1
  6703  1FA3  085B               	movf	??_vfpfcnvrt,w
  6704  1FA4  0084               	movwf	4
  6705  1FA5  085C               	movf	??_vfpfcnvrt+1,w
  6706  1FA6  0085               	movwf	5
  6707  1FA7  0800               	movf	0,w	;code access
  6708  1FA8  3ED0               	addlw	208
  6709  1FA9  00DD               	movwf	??_vfpfcnvrt+2
  6710  1FAA  30FF               	movlw	255
  6711  1FAB  1803               	skipnc
  6712  1FAC  3000               	movlw	0
  6713  1FAD  00DE               	movwf	??_vfpfcnvrt+3
  6714  1FAE  3000               	movlw	0
  6715  1FAF  025E               	subwf	??_vfpfcnvrt+3,w
  6716  1FB0  300A               	movlw	10
  6717  1FB1  1903               	skipnz
  6718  1FB2  025D               	subwf	??_vfpfcnvrt+2,w
  6719  1FB3  1803               	btfsc	3,0
  6720  1FB4  2FB7               	goto	u9100
  6721  1FB5  3001               	movlw	1
  6722  1FB6  2FB8               	goto	u9110
  6723  1FB7                     u9100:	
  6724  1FB7  3000               	movlw	0
  6725  1FB8                     u9110:	
  6726  1FB8  00DF               	movwf	??_vfpfcnvrt+4
  6727  1FB9  01E0               	clrf	??_vfpfcnvrt+5
  6728  1FBA  085F               	movf	??_vfpfcnvrt+4,w
  6729  1FBB  0021               	movlb	1	; select bank1
  6730  1FBC  00A6               	movwf	_vfpfcnvrt$1258^(0+128)
  6731  1FBD  0020               	movlb	0	; select bank0
  6732  1FBE  0860               	movf	??_vfpfcnvrt+5,w
  6733  1FBF  0021               	movlb	1	; select bank1
  6734  1FC0  00A7               	movwf	(_vfpfcnvrt$1258+1)^(0+128)
  6735  1FC1  0826               	movf	_vfpfcnvrt$1258^(0+128),w
  6736  1FC2  0427               	iorwf	(_vfpfcnvrt$1258+1)^(0+128),w
  6737  1FC3  1D03               	btfss	3,2
  6738  1FC4  2F92               	goto	l6892
  6739  1FC5                     l6900:	
  6740                           
  6741                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  6742  1FC5  0020               	movlb	0	; select bank0
  6743  1FC6  0859               	movf	vfpfcnvrt@fmt,w
  6744  1FC7  0086               	movwf	6
  6745  1FC8  0187               	clrf	7
  6746  1FC9  3F40               	moviw [0]fsr1
  6747  1FCA  00DB               	movwf	??_vfpfcnvrt
  6748  1FCB  3F41               	moviw [1]fsr1
  6749  1FCC  00DC               	movwf	??_vfpfcnvrt+1
  6750  1FCD  085B               	movf	??_vfpfcnvrt,w
  6751  1FCE  0084               	movwf	4
  6752  1FCF  085C               	movf	??_vfpfcnvrt+1,w
  6753  1FD0  0085               	movwf	5
  6754  1FD1  0012               	moviw fsr0++
  6755  1FD2  3A63               	xorlw	99
  6756  1FD3  31A4  1D03         	btfss	3,2
  6757  1FD5  2CD9               	goto	l6910
  6758                           
  6759                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  6760  1FD6  0859               	movf	vfpfcnvrt@fmt,w
  6761  1FD7  0086               	movwf	6
  6762  1FD8  0187               	clrf	7
  6763  1FD9  3001               	movlw	1
  6764  1FDA  0781               	addwf	1,f
  6765  1FDB  3141               	addfsr 1,1
  6766  1FDC  1803               	skipnc
  6767  1FDD  0A81               	incf	1,f
  6768                           
  6769                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6770  1FDE  085A               	movf	vfpfcnvrt@ap,w
  6771  1FDF  0086               	movwf	6
  6772  1FE0  0187               	clrf	7
  6773  1FE1  0801               	movf	1,w
  6774  1FE2  0084               	movwf	4
  6775  1FE3  0185               	clrf	5
  6776  1FE4  3002               	movlw	2
  6777  1FE5  0781               	addwf	1,f
  6778  1FE6  0800               	movf	0,w
  6779  1FE7  00DB               	movwf	??_vfpfcnvrt
  6780  1FE8  085B               	movf	??_vfpfcnvrt,w
  6781  1FE9  0021               	movlb	1	; select bank1
  6782  1FEA  00B2               	movwf	vfpfcnvrt@c^(0+128)
  6783                           
  6784                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  6785  1FEB  0020               	movlb	0	; select bank0
  6786  1FEC  0858               	movf	vfpfcnvrt@fp+1,w
  6787  1FED  00B1               	movwf	ctoa@fp+1
  6788  1FEE  0857               	movf	vfpfcnvrt@fp,w
  6789  1FEF  00B0               	movwf	ctoa@fp
  6790  1FF0  0021               	movlb	1	; select bank1
  6791  1FF1  0832               	movf	vfpfcnvrt@c^(0+128),w
  6792  1FF2  0020               	movlb	0	; select bank0
  6793  1FF3  00DB               	movwf	??_vfpfcnvrt
  6794  1FF4  085B               	movf	??_vfpfcnvrt,w
  6795  1FF5  00B2               	movwf	ctoa@c
  6796  1FF6  31B5  257A         	fcall	_ctoa
  6797  1FF8  0020               	movlb	0	; select bank0
  6798  1FF9  0831               	movf	?_ctoa+1,w
  6799  1FFA  00D8               	movwf	?_vfpfcnvrt+1
  6800  1FFB  0830               	movf	?_ctoa,w
  6801  1FFC  00D7               	movwf	?_vfpfcnvrt
  6802  1FFD  0008               	return
  6803  1FFE                     L7:	
  6804  1FFE                     L6:	
  6805  1FFE  318F  2FDD         	ljmp	l7178
  6806                           
  6807                           	psect	text8
  6808  19FA                     __ptext8:	
  6809 ;; *************** function _xtoa *****************
  6810 ;; Defined at:
  6811 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6812 ;; Parameters:    Size  Location     Type
  6813 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  6814 ;;		 -> vsnprintf@f(6), 
  6815 ;;  d               8   18[BANK0 ] unsigned long long 
  6816 ;;  x               1   26[BANK0 ] unsigned char 
  6817 ;; Auto vars:     Size  Location     Type
  6818 ;;  n               8   43[BANK0 ] unsigned long long 
  6819 ;;  c               2   53[BANK0 ] int 
  6820 ;;  i               2   51[BANK0 ] int 
  6821 ;;  w               2   41[BANK0 ] int 
  6822 ;;  p               2   39[BANK0 ] int 
  6823 ;; Return value:  Size  Location     Type
  6824 ;;                  2   16[BANK0 ] int 
  6825 ;; Registers used:
  6826 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6827 ;; Tracked objects:
  6828 ;;		On entry : 0/0
  6829 ;;		On exit  : 0/0
  6830 ;;		Unchanged: 0/0
  6831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6832 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6833 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6834 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6835 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6836 ;;Total ram usage:       39 bytes
  6837 ;; Hardware stack levels used:    1
  6838 ;; Hardware stack levels required when called:    5
  6839 ;; This function calls:
  6840 ;;		_isalpha
  6841 ;;		_isupper
  6842 ;;		_pad
  6843 ;;		_toupper
  6844 ;; This function is called by:
  6845 ;;		_vfpfcnvrt
  6846 ;; This function uses a non-reentrant model
  6847 ;;
  6848                           
  6849                           
  6850                           ;psect for function _xtoa
  6851  19FA                     _xtoa:	
  6852                           
  6853                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  6854                           
  6855                           ;incstack = 0
  6856                           ; Regs used in _xtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6857  19FA  0022               	movlb	2	; select bank2
  6858  19FB  1BE8               	btfsc	(_prec+1)^(0+256),7
  6859  19FC  2A01               	goto	l742
  6860                           
  6861                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  6862  19FD  30FD               	movlw	253
  6863  19FE  05E9               	andwf	_flags^(0+256),f
  6864  19FF  30FF               	movlw	255
  6865  1A00  05EA               	andwf	(_flags+1)^(0+256),f
  6866  1A01                     l742:	
  6867                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 631:     }
  6868                           
  6869                           
  6870                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  6871  1A01  0868               	movf	(_prec+1)^(0+256),w
  6872  1A02  3A80               	xorlw	128
  6873  1A03  0020               	movlb	0	; select bank0
  6874  1A04  00BB               	movwf	??_xtoa
  6875  1A05  3080               	movlw	128
  6876  1A06  023B               	subwf	??_xtoa,w
  6877  1A07  1D03               	skipz
  6878  1A08  2A0C               	goto	u8725
  6879  1A09  3001               	movlw	1
  6880  1A0A  0022               	movlb	2	; select bank2
  6881  1A0B  0267               	subwf	_prec^(0+256),w
  6882  1A0C                     u8725:	
  6883  1A0C  1803               	skipnc
  6884  1A0D  2A14               	goto	l6700
  6885  1A0E  3001               	movlw	1
  6886  1A0F  0020               	movlb	0	; select bank0
  6887  1A10  00C7               	movwf	xtoa@p
  6888  1A11  3000               	movlw	0
  6889  1A12  00C8               	movwf	xtoa@p+1
  6890  1A13  2A1C               	goto	l746
  6891  1A14                     l6700:	
  6892  1A14  0022               	movlb	2	; select bank2
  6893  1A15  0868               	movf	(_prec+1)^(0+256),w
  6894  1A16  0020               	movlb	0	; select bank0
  6895  1A17  00C8               	movwf	xtoa@p+1
  6896  1A18  0022               	movlb	2	; select bank2
  6897  1A19  0867               	movf	_prec^(0+256),w
  6898  1A1A  0020               	movlb	0	; select bank0
  6899  1A1B  00C7               	movwf	xtoa@p
  6900  1A1C                     l746:	
  6901                           
  6902                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  6903  1A1C  0022               	movlb	2	; select bank2
  6904  1A1D  0866               	movf	(_width+1)^(0+256),w
  6905  1A1E  0020               	movlb	0	; select bank0
  6906  1A1F  00CA               	movwf	xtoa@w+1
  6907  1A20  0022               	movlb	2	; select bank2
  6908  1A21  0865               	movf	_width^(0+256),w
  6909  1A22  0020               	movlb	0	; select bank0
  6910  1A23  00C9               	movwf	xtoa@w
  6911                           
  6912                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  6913  1A24  0022               	movlb	2	; select bank2
  6914  1A25  1E69               	btfss	_flags^(0+256),4
  6915  1A26  2A2C               	goto	l6706
  6916                           
  6917                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  6918  1A27  30FE               	movlw	254
  6919  1A28  0020               	movlb	0	; select bank0
  6920  1A29  07C9               	addwf	xtoa@w,f
  6921  1A2A  30FF               	movlw	255
  6922  1A2B  3DCA               	addwfc	xtoa@w+1,f
  6923  1A2C                     l6706:	
  6924                           
  6925                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  6926  1A2C  0020               	movlb	0	; select bank0
  6927  1A2D  0832               	movf	xtoa@d,w
  6928  1A2E  00CB               	movwf	xtoa@n
  6929  1A2F  0833               	movf	xtoa@d+1,w
  6930  1A30  00CC               	movwf	xtoa@n+1
  6931  1A31  0834               	movf	xtoa@d+2,w
  6932  1A32  00CD               	movwf	xtoa@n+2
  6933  1A33  0835               	movf	xtoa@d+3,w
  6934  1A34  00CE               	movwf	xtoa@n+3
  6935  1A35  0836               	movf	xtoa@d+4,w
  6936  1A36  00CF               	movwf	xtoa@n+4
  6937  1A37  0837               	movf	xtoa@d+5,w
  6938  1A38  00D0               	movwf	xtoa@n+5
  6939  1A39  0838               	movf	xtoa@d+6,w
  6940  1A3A  00D1               	movwf	xtoa@n+6
  6941  1A3B  0839               	movf	xtoa@d+7,w
  6942  1A3C  00D2               	movwf	xtoa@n+7
  6943                           
  6944                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  6945  1A3D  301F               	movlw	31
  6946  1A3E  00D3               	movwf	xtoa@i
  6947  1A3F  3000               	movlw	0
  6948  1A40  00D4               	movwf	xtoa@i+1
  6949                           
  6950                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  6951  1A41  0024               	movlb	4	; select bank4
  6952  1A42  01BF               	clrf	(_dbuf^(0+512)+31)
  6953                           
  6954                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6955  1A43  2AEE               	goto	l6738
  6956  1A44                     l6710:	
  6957                           
  6958                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  6959  1A44  30FF               	movlw	255
  6960  1A45  0020               	movlb	0	; select bank0
  6961  1A46  07D3               	addwf	xtoa@i,f
  6962  1A47  30FF               	movlw	255
  6963  1A48  3DD4               	addwfc	xtoa@i+1,f
  6964                           
  6965                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  6966  1A49  300F               	movlw	15
  6967  1A4A  054B               	andwf	xtoa@n,w
  6968  1A4B  00D5               	movwf	xtoa@c
  6969  1A4C  3000               	movlw	0
  6970  1A4D  054C               	andwf	xtoa@n+1,w
  6971  1A4E  00D6               	movwf	xtoa@c+1
  6972                           
  6973                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  6974  1A4F  0856               	movf	xtoa@c+1,w
  6975  1A50  3A80               	xorlw	128
  6976  1A51  00BB               	movwf	??_xtoa
  6977  1A52  3080               	movlw	128
  6978  1A53  023B               	subwf	??_xtoa,w
  6979  1A54  1D03               	skipz
  6980  1A55  2A58               	goto	u8745
  6981  1A56  300A               	movlw	10
  6982  1A57  0255               	subwf	xtoa@c,w
  6983  1A58                     u8745:	
  6984  1A58  1C03               	skipc
  6985  1A59  2A5E               	goto	l6714
  6986  1A5A  0020               	movlb	0	; select bank0
  6987  1A5B  0855               	movf	xtoa@c,w
  6988  1A5C  3E57               	addlw	87
  6989  1A5D  2A61               	goto	L1
  6990  1A5E                     l6714:	
  6991  1A5E  0020               	movlb	0	; select bank0
  6992  1A5F  0855               	movf	xtoa@c,w
  6993  1A60  3E30               	addlw	48
  6994  1A61                     L1:	
  6995  1A61  00D5               	movwf	xtoa@c
  6996  1A62  3000               	movlw	0
  6997  1A63  3D56               	addwfc	xtoa@c+1,w
  6998  1A64  00D6               	movwf	xtoa@c+1
  6999  1A65  083A               	movf	xtoa@x,w
  7000  1A66  3EBF               	addlw	191
  7001  1A67  00BB               	movwf	??_xtoa
  7002  1A68  30FF               	movlw	255
  7003  1A69  1803               	skipnc
  7004  1A6A  3000               	movlw	0
  7005  1A6B  00BC               	movwf	??_xtoa+1
  7006  1A6C  3000               	movlw	0
  7007  1A6D  023C               	subwf	??_xtoa+1,w
  7008  1A6E  301A               	movlw	26
  7009  1A6F  1903               	skipnz
  7010  1A70  023B               	subwf	??_xtoa,w
  7011  1A71  1803               	btfsc	3,0
  7012  1A72  2A75               	goto	u8750
  7013  1A73  3001               	movlw	1
  7014  1A74  2A76               	goto	u8760
  7015  1A75                     u8750:	
  7016  1A75  3000               	movlw	0
  7017  1A76                     u8760:	
  7018  1A76  00BD               	movwf	??_xtoa+2
  7019  1A77  01BE               	clrf	??_xtoa+3
  7020  1A78  083D               	movf	??_xtoa+2,w
  7021  1A79  00C3               	movwf	_xtoa$1242
  7022  1A7A  083E               	movf	??_xtoa+3,w
  7023  1A7B  00C4               	movwf	_xtoa$1242+1
  7024  1A7C  0843               	movf	_xtoa$1242,w
  7025  1A7D  0444               	iorwf	_xtoa$1242+1,w
  7026  1A7E  1903               	btfsc	3,2
  7027  1A7F  2AAC               	goto	l6730
  7028  1A80  3020               	movlw	32
  7029  1A81  0455               	iorwf	xtoa@c,w
  7030  1A82  00BB               	movwf	??_xtoa
  7031  1A83  3000               	movlw	0
  7032  1A84  0456               	iorwf	xtoa@c+1,w
  7033  1A85  00BC               	movwf	??_xtoa+1
  7034  1A86  083B               	movf	??_xtoa,w
  7035  1A87  3E9F               	addlw	159
  7036  1A88  00BD               	movwf	??_xtoa+2
  7037  1A89  30FF               	movlw	255
  7038  1A8A  3D3C               	addwfc	??_xtoa+1,w
  7039  1A8B  00BE               	movwf	??_xtoa+3
  7040  1A8C  3000               	movlw	0
  7041  1A8D  023E               	subwf	??_xtoa+3,w
  7042  1A8E  301A               	movlw	26
  7043  1A8F  1903               	skipnz
  7044  1A90  023D               	subwf	??_xtoa+2,w
  7045  1A91  1803               	btfsc	3,0
  7046  1A92  2A95               	goto	u8780
  7047  1A93  3001               	movlw	1
  7048  1A94  2A96               	goto	u8790
  7049  1A95                     u8780:	
  7050  1A95  3000               	movlw	0
  7051  1A96                     u8790:	
  7052  1A96  00BF               	movwf	??_xtoa+4
  7053  1A97  01C0               	clrf	??_xtoa+5
  7054  1A98  083F               	movf	??_xtoa+4,w
  7055  1A99  00C5               	movwf	_xtoa$1243
  7056  1A9A  0840               	movf	??_xtoa+5,w
  7057  1A9B  00C6               	movwf	_xtoa$1243+1
  7058  1A9C  0845               	movf	_xtoa$1243,w
  7059  1A9D  0446               	iorwf	_xtoa$1243+1,w
  7060  1A9E  1903               	btfsc	3,2
  7061  1A9F  2AAC               	goto	l6730
  7062                           
  7063                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  7064  1AA0  0856               	movf	xtoa@c+1,w
  7065  1AA1  00F8               	movwf	toupper@c+1
  7066  1AA2  0855               	movf	xtoa@c,w
  7067  1AA3  00F7               	movwf	toupper@c
  7068  1AA4  3190  2001  3199   	fcall	_toupper
  7069  1AA7  0878               	movf	?_toupper+1,w
  7070  1AA8  0020               	movlb	0	; select bank0
  7071  1AA9  00D6               	movwf	xtoa@c+1
  7072  1AAA  0877               	movf	?_toupper,w
  7073  1AAB  00D5               	movwf	xtoa@c
  7074  1AAC                     l6730:	
  7075                           
  7076                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  7077  1AAC  0855               	movf	xtoa@c,w
  7078  1AAD  00BB               	movwf	??_xtoa
  7079  1AAE  0853               	movf	xtoa@i,w
  7080  1AAF  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7081  1AB0  0086               	movwf	6
  7082  1AB1  3002               	movlw	2	; select bank4/5
  7083  1AB2  0087               	movwf	7
  7084  1AB3  083B               	movf	??_xtoa,w
  7085  1AB4  0081               	movwf	1
  7086                           
  7087                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  7088  1AB5  30FF               	movlw	255
  7089  1AB6  07C7               	addwf	xtoa@p,f
  7090  1AB7  30FF               	movlw	255
  7091  1AB8  3DC8               	addwfc	xtoa@p+1,f
  7092                           
  7093                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  7094  1AB9  30FF               	movlw	255
  7095  1ABA  07C9               	addwf	xtoa@w,f
  7096  1ABB  30FF               	movlw	255
  7097  1ABC  3DCA               	addwfc	xtoa@w+1,f
  7098                           
  7099                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  7100  1ABD  304B               	movlw	low xtoa@n
  7101  1ABE  0086               	movwf	6
  7102  1ABF  3000               	movlw	high xtoa@n
  7103  1AC0  0087               	movwf	7
  7104  1AC1  3F40               	moviw [0]fsr1
  7105  1AC2  00BB               	movwf	??_xtoa
  7106  1AC3  3F41               	moviw [1]fsr1
  7107  1AC4  00BC               	movwf	??_xtoa+1
  7108  1AC5  3F42               	moviw [2]fsr1
  7109  1AC6  00BD               	movwf	??_xtoa+2
  7110  1AC7  3F43               	moviw [3]fsr1
  7111  1AC8  00BE               	movwf	??_xtoa+3
  7112  1AC9  3F44               	moviw [4]fsr1
  7113  1ACA  00BF               	movwf	??_xtoa+4
  7114  1ACB  3F45               	moviw [5]fsr1
  7115  1ACC  00C0               	movwf	??_xtoa+5
  7116  1ACD  3F46               	moviw [6]fsr1
  7117  1ACE  00C1               	movwf	??_xtoa+6
  7118  1ACF  3F47               	moviw [7]fsr1
  7119  1AD0  00C2               	movwf	??_xtoa+7
  7120  1AD1  3004               	movlw	4
  7121  1AD2                     u8815:	
  7122  1AD2  0020               	movlb	0	; select bank0
  7123  1AD3  36C2               	lsrf	??_xtoa+7,f
  7124  1AD4  0CC1               	rrf	??_xtoa+6,f
  7125  1AD5  0CC0               	rrf	??_xtoa+5,f
  7126  1AD6  0CBF               	rrf	??_xtoa+4,f
  7127  1AD7  0CBE               	rrf	??_xtoa+3,f
  7128  1AD8  0CBD               	rrf	??_xtoa+2,f
  7129  1AD9  0CBC               	rrf	??_xtoa+1,f
  7130  1ADA  0CBB               	rrf	??_xtoa,f
  7131  1ADB  0B89               	decfsz	9,f
  7132  1ADC  2AD2               	goto	u8815
  7133  1ADD  0020               	movlb	0	; select bank0
  7134  1ADE  0842               	movf	??_xtoa+7,w
  7135  1ADF  00D2               	movwf	xtoa@n+7
  7136  1AE0  0841               	movf	??_xtoa+6,w
  7137  1AE1  00D1               	movwf	xtoa@n+6
  7138  1AE2  0840               	movf	??_xtoa+5,w
  7139  1AE3  00D0               	movwf	xtoa@n+5
  7140  1AE4  083F               	movf	??_xtoa+4,w
  7141  1AE5  00CF               	movwf	xtoa@n+4
  7142  1AE6  083E               	movf	??_xtoa+3,w
  7143  1AE7  00CE               	movwf	xtoa@n+3
  7144  1AE8  083D               	movf	??_xtoa+2,w
  7145  1AE9  00CD               	movwf	xtoa@n+2
  7146  1AEA  083C               	movf	??_xtoa+1,w
  7147  1AEB  00CC               	movwf	xtoa@n+1
  7148  1AEC  083B               	movf	??_xtoa,w
  7149  1AED  00CB               	movwf	xtoa@n
  7150  1AEE                     l6738:	
  7151                           
  7152                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7153  1AEE  0020               	movlb	0	; select bank0
  7154  1AEF  0854               	movf	xtoa@i+1,w
  7155  1AF0  3A80               	xorlw	128
  7156  1AF1  00BB               	movwf	??_xtoa
  7157  1AF2  3080               	movlw	128
  7158  1AF3  023B               	subwf	??_xtoa,w
  7159  1AF4  1D03               	skipz
  7160  1AF5  2AF8               	goto	u8825
  7161  1AF6  3002               	movlw	2
  7162  1AF7  0253               	subwf	xtoa@i,w
  7163  1AF8                     u8825:	
  7164  1AF8  1C03               	skipc
  7165  1AF9  2B1F               	goto	l767
  7166  1AFA  0020               	movlb	0	; select bank0
  7167  1AFB  084B               	movf	xtoa@n,w
  7168  1AFC  044C               	iorwf	xtoa@n+1,w
  7169  1AFD  044D               	iorwf	xtoa@n+2,w
  7170  1AFE  044E               	iorwf	xtoa@n+3,w
  7171  1AFF  044F               	iorwf	xtoa@n+4,w
  7172  1B00  0450               	iorwf	xtoa@n+5,w
  7173  1B01  0451               	iorwf	xtoa@n+6,w
  7174  1B02  0452               	iorwf	xtoa@n+7,w
  7175  1B03  1D03               	skipz
  7176  1B04  2A44               	goto	l6710
  7177  1B05  0848               	movf	xtoa@p+1,w
  7178  1B06  3A80               	xorlw	128
  7179  1B07  00BB               	movwf	??_xtoa
  7180  1B08  3080               	movlw	128
  7181  1B09  023B               	subwf	??_xtoa,w
  7182  1B0A  1D03               	skipz
  7183  1B0B  2B0E               	goto	u8845
  7184  1B0C  3001               	movlw	1
  7185  1B0D  0247               	subwf	xtoa@p,w
  7186  1B0E                     u8845:	
  7187  1B0E  1803               	skipnc
  7188  1B0F  2A44               	goto	l6710
  7189  1B10  0020               	movlb	0	; select bank0
  7190  1B11  084A               	movf	xtoa@w+1,w
  7191  1B12  3A80               	xorlw	128
  7192  1B13  00BB               	movwf	??_xtoa
  7193  1B14  3080               	movlw	128
  7194  1B15  023B               	subwf	??_xtoa,w
  7195  1B16  1D03               	skipz
  7196  1B17  2B1A               	goto	u8855
  7197  1B18  3001               	movlw	1
  7198  1B19  0249               	subwf	xtoa@w,w
  7199  1B1A                     u8855:	
  7200  1B1A  1C03               	skipc
  7201  1B1B  2B1F               	goto	l767
  7202  1B1C  0022               	movlb	2	; select bank2
  7203  1B1D  18E9               	btfsc	_flags^(0+256),1
  7204  1B1E  2A44               	goto	l6710
  7205  1B1F                     l767:	
  7206                           
  7207                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  7208  1B1F  0022               	movlb	2	; select bank2
  7209  1B20  1E69               	btfss	_flags^(0+256),4
  7210  1B21  2B3D               	goto	l6754
  7211                           
  7212                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  7213  1B22  30FF               	movlw	255
  7214  1B23  0020               	movlb	0	; select bank0
  7215  1B24  07D3               	addwf	xtoa@i,f
  7216  1B25  30FF               	movlw	255
  7217  1B26  3DD4               	addwfc	xtoa@i+1,f
  7218                           
  7219                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  7220  1B27  083A               	movf	xtoa@x,w
  7221  1B28  00BB               	movwf	??_xtoa
  7222  1B29  0853               	movf	xtoa@i,w
  7223  1B2A  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7224  1B2B  0086               	movwf	6
  7225  1B2C  3002               	movlw	2	; select bank4/5
  7226  1B2D  0087               	movwf	7
  7227  1B2E  083B               	movf	??_xtoa,w
  7228  1B2F  0081               	movwf	1
  7229                           
  7230                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  7231  1B30  30FF               	movlw	255
  7232  1B31  07D3               	addwf	xtoa@i,f
  7233  1B32  30FF               	movlw	255
  7234  1B33  3DD4               	addwfc	xtoa@i+1,f
  7235                           
  7236                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  7237  1B34  3030               	movlw	48
  7238  1B35  00BB               	movwf	??_xtoa
  7239  1B36  0853               	movf	xtoa@i,w
  7240  1B37  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7241  1B38  0086               	movwf	6
  7242  1B39  3002               	movlw	2	; select bank4/5
  7243  1B3A  0087               	movwf	7
  7244  1B3B  083B               	movf	??_xtoa,w
  7245  1B3C  0081               	movwf	1
  7246  1B3D                     l6754:	
  7247                           
  7248                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  7249  1B3D  0020               	movlb	0	; select bank0
  7250  1B3E  0831               	movf	xtoa@fp+1,w
  7251  1B3F  00A7               	movwf	pad@fp+1
  7252  1B40  0830               	movf	xtoa@fp,w
  7253  1B41  00A6               	movwf	pad@fp
  7254  1B42  0853               	movf	xtoa@i,w
  7255  1B43  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7256  1B44  00BB               	movwf	??_xtoa
  7257  1B45  083B               	movf	??_xtoa,w
  7258  1B46  00A8               	movwf	pad@buf
  7259  1B47  084A               	movf	xtoa@w+1,w
  7260  1B48  00AA               	movwf	pad@p+1
  7261  1B49  0849               	movf	xtoa@w,w
  7262  1B4A  00A9               	movwf	pad@p
  7263  1B4B  31B7  275D         	fcall	_pad
  7264  1B4D  0020               	movlb	0	; select bank0
  7265  1B4E  0827               	movf	?_pad+1,w
  7266  1B4F  00B1               	movwf	?_xtoa+1
  7267  1B50  0826               	movf	?_pad,w
  7268  1B51  00B0               	movwf	?_xtoa
  7269  1B52  0008               	return
  7270  1B53                     __end_of_xtoa:	
  7271                           
  7272                           	psect	text9
  7273  1001                     __ptext9:	
  7274 ;; *************** function _toupper *****************
  7275 ;; Defined at:
  7276 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  7277 ;; Parameters:    Size  Location     Type
  7278 ;;  c               2    7[COMMON] int 
  7279 ;; Auto vars:     Size  Location     Type
  7280 ;;		None
  7281 ;; Return value:  Size  Location     Type
  7282 ;;                  2    7[COMMON] int 
  7283 ;; Registers used:
  7284 ;;		wreg, status,2, status,0
  7285 ;; Tracked objects:
  7286 ;;		On entry : 0/0
  7287 ;;		On exit  : 0/0
  7288 ;;		Unchanged: 0/0
  7289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7290 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7291 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7292 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7293 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7294 ;;Total ram usage:        8 bytes
  7295 ;; Hardware stack levels used:    1
  7296 ;; Hardware stack levels required when called:    2
  7297 ;; This function calls:
  7298 ;;		_islower
  7299 ;; This function is called by:
  7300 ;;		_xtoa
  7301 ;; This function uses a non-reentrant model
  7302 ;;
  7303                           
  7304                           
  7305                           ;psect for function _toupper
  7306  1001                     _toupper:	
  7307                           
  7308                           ;incstack = 0
  7309                           ; Regs used in _toupper: [wreg+status,2+status,0]
  7310  1001  0877               	movf	toupper@c,w
  7311  1002  3E9F               	addlw	159
  7312  1003  0020               	movlb	0	; select bank0
  7313  1004  00A0               	movwf	??_toupper
  7314  1005  30FF               	movlw	255
  7315  1006  3D78               	addwfc	toupper@c+1,w
  7316  1007  00A1               	movwf	??_toupper+1
  7317  1008  3000               	movlw	0
  7318  1009  0221               	subwf	??_toupper+1,w
  7319  100A  301A               	movlw	26
  7320  100B  1903               	skipnz
  7321  100C  0220               	subwf	??_toupper,w
  7322  100D  1803               	btfsc	3,0
  7323  100E  2811               	goto	u7870
  7324  100F  3001               	movlw	1
  7325  1010  2812               	goto	u7880
  7326  1011                     u7870:	
  7327  1011  3000               	movlw	0
  7328  1012                     u7880:	
  7329  1012  00A2               	movwf	??_toupper+2
  7330  1013  01A3               	clrf	??_toupper+3
  7331  1014  0822               	movf	??_toupper+2,w
  7332  1015  00F9               	movwf	_toupper$1792
  7333  1016  0823               	movf	??_toupper+3,w
  7334  1017  00FA               	movwf	_toupper$1792+1
  7335  1018  0879               	movf	_toupper$1792,w
  7336  1019  047A               	iorwf	_toupper$1792+1,w
  7337  101A  1903               	btfsc	3,2
  7338  101B  0008               	return
  7339  101C  305F               	movlw	95
  7340  101D  0577               	andwf	toupper@c,w
  7341  101E  00F7               	movwf	?_toupper
  7342  101F  3000               	movlw	0
  7343  1020  0578               	andwf	toupper@c+1,w
  7344  1021  00F8               	movwf	?_toupper+1
  7345  1022  0008               	return
  7346  1023                     __end_of_toupper:	
  7347                           
  7348                           	psect	text10
  7349  3443                     __ptext10:	
  7350 ;; *************** function _islower *****************
  7351 ;; Defined at:
  7352 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  7353 ;; Parameters:    Size  Location     Type
  7354 ;;  c               2    1[COMMON] int 
  7355 ;; Auto vars:     Size  Location     Type
  7356 ;;		None
  7357 ;; Return value:  Size  Location     Type
  7358 ;;                  2    1[COMMON] int 
  7359 ;; Registers used:
  7360 ;;		wreg, status,2, status,0
  7361 ;; Tracked objects:
  7362 ;;		On entry : 0/0
  7363 ;;		On exit  : 0/0
  7364 ;;		Unchanged: 0/0
  7365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7366 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7368 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7369 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7370 ;;Total ram usage:        6 bytes
  7371 ;; Hardware stack levels used:    1
  7372 ;; Hardware stack levels required when called:    1
  7373 ;; This function calls:
  7374 ;;		Nothing
  7375 ;; This function is called by:
  7376 ;;		_toupper
  7377 ;; This function uses a non-reentrant model
  7378 ;;
  7379                           
  7380                           
  7381                           ;psect for function _islower
  7382  3443                     _islower:	
  7383                           
  7384                           ;incstack = 0
  7385                           ; Regs used in _islower: [wreg+status,2+status,0]
  7386  3443  0871               	movf	islower@c,w
  7387  3444  3E9F               	addlw	159
  7388  3445  00F3               	movwf	??_islower
  7389  3446  30FF               	movlw	255
  7390  3447  3D72               	addwfc	islower@c+1,w
  7391  3448  00F4               	movwf	??_islower+1
  7392  3449  3000               	movlw	0
  7393  344A  0274               	subwf	??_islower+1,w
  7394  344B  301A               	movlw	26
  7395  344C  1903               	skipnz
  7396  344D  0273               	subwf	??_islower,w
  7397  344E  1803               	btfsc	3,0
  7398  344F  2C52               	goto	u7760
  7399  3450  3001               	movlw	1
  7400  3451  2C53               	goto	u7770
  7401  3452                     u7760:	
  7402  3452  3000               	movlw	0
  7403  3453                     u7770:	
  7404  3453  00F5               	movwf	??_islower+2
  7405  3454  01F6               	clrf	??_islower+3
  7406  3455  0875               	movf	??_islower+2,w
  7407  3456  00F1               	movwf	?_islower
  7408  3457  0876               	movf	??_islower+3,w
  7409  3458  00F2               	movwf	?_islower+1
  7410  3459  0008               	return
  7411  345A                     __end_of_islower:	
  7412                           
  7413                           	psect	text11
  7414  342C                     __ptext11:	
  7415 ;; *************** function _isupper *****************
  7416 ;; Defined at:
  7417 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  7418 ;; Parameters:    Size  Location     Type
  7419 ;;  c               2    1[COMMON] int 
  7420 ;; Auto vars:     Size  Location     Type
  7421 ;;		None
  7422 ;; Return value:  Size  Location     Type
  7423 ;;                  2    1[COMMON] int 
  7424 ;; Registers used:
  7425 ;;		wreg, status,2, status,0
  7426 ;; Tracked objects:
  7427 ;;		On entry : 0/0
  7428 ;;		On exit  : 0/0
  7429 ;;		Unchanged: 0/0
  7430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7431 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7433 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7434 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7435 ;;Total ram usage:        6 bytes
  7436 ;; Hardware stack levels used:    1
  7437 ;; Hardware stack levels required when called:    1
  7438 ;; This function calls:
  7439 ;;		Nothing
  7440 ;; This function is called by:
  7441 ;;		_xtoa
  7442 ;; This function uses a non-reentrant model
  7443 ;;
  7444                           
  7445                           
  7446                           ;psect for function _isupper
  7447  342C                     _isupper:	
  7448                           
  7449                           ;incstack = 0
  7450                           ; Regs used in _isupper: [wreg+status,2+status,0]
  7451  342C  0871               	movf	isupper@c,w
  7452  342D  3EBF               	addlw	191
  7453  342E  00F3               	movwf	??_isupper
  7454  342F  30FF               	movlw	255
  7455  3430  3D72               	addwfc	isupper@c+1,w
  7456  3431  00F4               	movwf	??_isupper+1
  7457  3432  3000               	movlw	0
  7458  3433  0274               	subwf	??_isupper+1,w
  7459  3434  301A               	movlw	26
  7460  3435  1903               	skipnz
  7461  3436  0273               	subwf	??_isupper,w
  7462  3437  1803               	btfsc	3,0
  7463  3438  2C3B               	goto	u7830
  7464  3439  3001               	movlw	1
  7465  343A  2C3C               	goto	u7840
  7466  343B                     u7830:	
  7467  343B  3000               	movlw	0
  7468  343C                     u7840:	
  7469  343C  00F5               	movwf	??_isupper+2
  7470  343D  01F6               	clrf	??_isupper+3
  7471  343E  0875               	movf	??_isupper+2,w
  7472  343F  00F1               	movwf	?_isupper
  7473  3440  0876               	movf	??_isupper+3,w
  7474  3441  00F2               	movwf	?_isupper+1
  7475  3442  0008               	return
  7476  3443                     __end_of_isupper:	
  7477                           
  7478                           	psect	text12
  7479  2800                     __ptext12:	
  7480 ;; *************** function _isalpha *****************
  7481 ;; Defined at:
  7482 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  7483 ;; Parameters:    Size  Location     Type
  7484 ;;  c               2    1[COMMON] int 
  7485 ;; Auto vars:     Size  Location     Type
  7486 ;;		None
  7487 ;; Return value:  Size  Location     Type
  7488 ;;                  2    1[COMMON] int 
  7489 ;; Registers used:
  7490 ;;		wreg, status,2, status,0
  7491 ;; Tracked objects:
  7492 ;;		On entry : 0/0
  7493 ;;		On exit  : 0/0
  7494 ;;		Unchanged: 0/0
  7495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7496 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7498 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7499 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7500 ;;Total ram usage:        8 bytes
  7501 ;; Hardware stack levels used:    1
  7502 ;; Hardware stack levels required when called:    1
  7503 ;; This function calls:
  7504 ;;		Nothing
  7505 ;; This function is called by:
  7506 ;;		_xtoa
  7507 ;; This function uses a non-reentrant model
  7508 ;;
  7509                           
  7510                           
  7511                           ;psect for function _isalpha
  7512  2800                     _isalpha:	
  7513                           
  7514                           ;incstack = 0
  7515                           ; Regs used in _isalpha: [wreg+status,2+status,0]
  7516  2800  3020               	movlw	32
  7517  2801  0471               	iorwf	isalpha@c,w
  7518  2802  00F3               	movwf	??_isalpha
  7519  2803  3000               	movlw	0
  7520  2804  0472               	iorwf	isalpha@c+1,w
  7521  2805  00F4               	movwf	??_isalpha+1
  7522  2806  0873               	movf	??_isalpha,w
  7523  2807  3E9F               	addlw	159
  7524  2808  00F5               	movwf	??_isalpha+2
  7525  2809  30FF               	movlw	255
  7526  280A  3D74               	addwfc	??_isalpha+1,w
  7527  280B  00F6               	movwf	??_isalpha+3
  7528  280C  3000               	movlw	0
  7529  280D  0276               	subwf	??_isalpha+3,w
  7530  280E  301A               	movlw	26
  7531  280F  1903               	skipnz
  7532  2810  0275               	subwf	??_isalpha+2,w
  7533  2811  1803               	btfsc	3,0
  7534  2812  2815               	goto	u7850
  7535  2813  3001               	movlw	1
  7536  2814  2816               	goto	u7860
  7537  2815                     u7850:	
  7538  2815  3000               	movlw	0
  7539  2816                     u7860:	
  7540  2816  00F7               	movwf	??_isalpha+4
  7541  2817  01F8               	clrf	??_isalpha+5
  7542  2818  0877               	movf	??_isalpha+4,w
  7543  2819  00F1               	movwf	?_isalpha
  7544  281A  0878               	movf	??_isalpha+5,w
  7545  281B  00F2               	movwf	?_isalpha+1
  7546  281C  0008               	return
  7547  281D                     __end_of_isalpha:	
  7548                           
  7549                           	psect	text13
  7550  2214                     __ptext13:	
  7551 ;; *************** function _utoa *****************
  7552 ;; Defined at:
  7553 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7554 ;; Parameters:    Size  Location     Type
  7555 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  7556 ;;		 -> vsnprintf@f(6), 
  7557 ;;  d               8   18[BANK0 ] unsigned long long 
  7558 ;; Auto vars:     Size  Location     Type
  7559 ;;  n               8   31[BANK0 ] unsigned long long 
  7560 ;;  i               2   39[BANK0 ] int 
  7561 ;;  w               2   29[BANK0 ] int 
  7562 ;;  p               2   27[BANK0 ] int 
  7563 ;; Return value:  Size  Location     Type
  7564 ;;                  2   16[BANK0 ] int 
  7565 ;; Registers used:
  7566 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7567 ;; Tracked objects:
  7568 ;;		On entry : 0/0
  7569 ;;		On exit  : 0/0
  7570 ;;		Unchanged: 0/0
  7571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7572 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7573 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7574 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7575 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7576 ;;Total ram usage:       25 bytes
  7577 ;; Hardware stack levels used:    1
  7578 ;; Hardware stack levels required when called:    5
  7579 ;; This function calls:
  7580 ;;		___lodiv
  7581 ;;		___lomod
  7582 ;;		_pad
  7583 ;; This function is called by:
  7584 ;;		_vfpfcnvrt
  7585 ;; This function uses a non-reentrant model
  7586 ;;
  7587                           
  7588                           
  7589                           ;psect for function _utoa
  7590  2214                     _utoa:	
  7591                           
  7592                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  7593                           
  7594                           ;incstack = 0
  7595                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7596  2214  0022               	movlb	2	; select bank2
  7597  2215  1BE8               	btfsc	(_prec+1)^(0+256),7
  7598  2216  2A1B               	goto	l727
  7599                           
  7600                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  7601  2217  30FD               	movlw	253
  7602  2218  05E9               	andwf	_flags^(0+256),f
  7603  2219  30FF               	movlw	255
  7604  221A  05EA               	andwf	(_flags+1)^(0+256),f
  7605  221B                     l727:	
  7606                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 601:     }
  7607                           
  7608                           
  7609                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  7610  221B  0868               	movf	(_prec+1)^(0+256),w
  7611  221C  3A80               	xorlw	128
  7612  221D  0020               	movlb	0	; select bank0
  7613  221E  00BA               	movwf	??_utoa
  7614  221F  3080               	movlw	128
  7615  2220  023A               	subwf	??_utoa,w
  7616  2221  1D03               	skipz
  7617  2222  2A26               	goto	u8655
  7618  2223  3001               	movlw	1
  7619  2224  0022               	movlb	2	; select bank2
  7620  2225  0267               	subwf	_prec^(0+256),w
  7621  2226                     u8655:	
  7622  2226  1803               	skipnc
  7623  2227  2A2E               	goto	l6664
  7624  2228  3001               	movlw	1
  7625  2229  0020               	movlb	0	; select bank0
  7626  222A  00BB               	movwf	utoa@p
  7627  222B  3000               	movlw	0
  7628  222C  00BC               	movwf	utoa@p+1
  7629  222D  2A36               	goto	l731
  7630  222E                     l6664:	
  7631  222E  0022               	movlb	2	; select bank2
  7632  222F  0868               	movf	(_prec+1)^(0+256),w
  7633  2230  0020               	movlb	0	; select bank0
  7634  2231  00BC               	movwf	utoa@p+1
  7635  2232  0022               	movlb	2	; select bank2
  7636  2233  0867               	movf	_prec^(0+256),w
  7637  2234  0020               	movlb	0	; select bank0
  7638  2235  00BB               	movwf	utoa@p
  7639  2236                     l731:	
  7640                           
  7641                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  7642  2236  0022               	movlb	2	; select bank2
  7643  2237  0866               	movf	(_width+1)^(0+256),w
  7644  2238  0020               	movlb	0	; select bank0
  7645  2239  00BE               	movwf	utoa@w+1
  7646  223A  0022               	movlb	2	; select bank2
  7647  223B  0865               	movf	_width^(0+256),w
  7648  223C  0020               	movlb	0	; select bank0
  7649  223D  00BD               	movwf	utoa@w
  7650                           
  7651                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  7652  223E  0832               	movf	utoa@d,w
  7653  223F  00BF               	movwf	utoa@n
  7654  2240  0833               	movf	utoa@d+1,w
  7655  2241  00C0               	movwf	utoa@n+1
  7656  2242  0834               	movf	utoa@d+2,w
  7657  2243  00C1               	movwf	utoa@n+2
  7658  2244  0835               	movf	utoa@d+3,w
  7659  2245  00C2               	movwf	utoa@n+3
  7660  2246  0836               	movf	utoa@d+4,w
  7661  2247  00C3               	movwf	utoa@n+4
  7662  2248  0837               	movf	utoa@d+5,w
  7663  2249  00C4               	movwf	utoa@n+5
  7664  224A  0838               	movf	utoa@d+6,w
  7665  224B  00C5               	movwf	utoa@n+6
  7666  224C  0839               	movf	utoa@d+7,w
  7667  224D  00C6               	movwf	utoa@n+7
  7668                           
  7669                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  7670  224E  301F               	movlw	31
  7671  224F  00C7               	movwf	utoa@i
  7672  2250  3000               	movlw	0
  7673  2251  00C8               	movwf	utoa@i+1
  7674                           
  7675                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  7676  2252  0024               	movlb	4	; select bank4
  7677  2253  01BF               	clrf	(_dbuf^(0+512)+31)
  7678                           
  7679                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7680  2254  2ADA               	goto	l6680
  7681  2255                     l6682:	
  7682  2255  083F               	movf	utoa@n,w
  7683  2256  0440               	iorwf	utoa@n+1,w
  7684  2257  0441               	iorwf	utoa@n+2,w
  7685  2258  0442               	iorwf	utoa@n+3,w
  7686  2259  0443               	iorwf	utoa@n+4,w
  7687  225A  0444               	iorwf	utoa@n+5,w
  7688  225B  0445               	iorwf	utoa@n+6,w
  7689  225C  0446               	iorwf	utoa@n+7,w
  7690  225D  1D03               	skipz
  7691  225E  2A79               	goto	l6670
  7692  225F  083C               	movf	utoa@p+1,w
  7693  2260  3A80               	xorlw	128
  7694  2261  00BA               	movwf	??_utoa
  7695  2262  3080               	movlw	128
  7696  2263  023A               	subwf	??_utoa,w
  7697  2264  1D03               	skipz
  7698  2265  2A68               	goto	u8685
  7699  2266  3001               	movlw	1
  7700  2267  023B               	subwf	utoa@p,w
  7701  2268                     u8685:	
  7702  2268  1803               	skipnc
  7703  2269  2A79               	goto	l6670
  7704  226A  0020               	movlb	0	; select bank0
  7705  226B  083E               	movf	utoa@w+1,w
  7706  226C  3A80               	xorlw	128
  7707  226D  00BA               	movwf	??_utoa
  7708  226E  3080               	movlw	128
  7709  226F  023A               	subwf	??_utoa,w
  7710  2270  1D03               	skipz
  7711  2271  2A74               	goto	u8695
  7712  2272  3001               	movlw	1
  7713  2273  023D               	subwf	utoa@w,w
  7714  2274                     u8695:	
  7715  2274  1C03               	skipc
  7716  2275  2ADF               	goto	l6690
  7717  2276  0022               	movlb	2	; select bank2
  7718  2277  1CE9               	btfss	_flags^(0+256),1
  7719  2278  2ADF               	goto	l6690
  7720  2279                     l6670:	
  7721                           
  7722                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  7723  2279  30FF               	movlw	255
  7724  227A  0020               	movlb	0	; select bank0
  7725  227B  07C7               	addwf	utoa@i,f
  7726  227C  30FF               	movlw	255
  7727  227D  3DC8               	addwfc	utoa@i+1,f
  7728                           
  7729                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  7730  227E  300A               	movlw	10
  7731  227F  00A0               	movwf	___lomod@divisor
  7732  2280  01A1               	clrf	___lomod@divisor+1
  7733  2281  01A2               	clrf	___lomod@divisor+2
  7734  2282  01A3               	clrf	___lomod@divisor+3
  7735  2283  01A4               	clrf	___lomod@divisor+4
  7736  2284  01A5               	clrf	___lomod@divisor+5
  7737  2285  01A6               	clrf	___lomod@divisor+6
  7738  2286  01A7               	clrf	___lomod@divisor+7
  7739  2287  083F               	movf	utoa@n,w
  7740  2288  00A8               	movwf	___lomod@dividend
  7741  2289  0840               	movf	utoa@n+1,w
  7742  228A  00A9               	movwf	___lomod@dividend+1
  7743  228B  0841               	movf	utoa@n+2,w
  7744  228C  00AA               	movwf	___lomod@dividend+2
  7745  228D  0842               	movf	utoa@n+3,w
  7746  228E  00AB               	movwf	___lomod@dividend+3
  7747  228F  0843               	movf	utoa@n+4,w
  7748  2290  00AC               	movwf	___lomod@dividend+4
  7749  2291  0844               	movf	utoa@n+5,w
  7750  2292  00AD               	movwf	___lomod@dividend+5
  7751  2293  0845               	movf	utoa@n+6,w
  7752  2294  00AE               	movwf	___lomod@dividend+6
  7753  2295  0846               	movf	utoa@n+7,w
  7754  2296  00AF               	movwf	___lomod@dividend+7
  7755  2297  31A8  20D7  31A2   	fcall	___lomod
  7756  229A  0020               	movlb	0	; select bank0
  7757  229B  0820               	movf	?___lomod,w
  7758  229C  3E30               	addlw	48
  7759  229D  00BA               	movwf	??_utoa
  7760  229E  0847               	movf	utoa@i,w
  7761  229F  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7762  22A0  0086               	movwf	6
  7763  22A1  3002               	movlw	2	; select bank4/5
  7764  22A2  0087               	movwf	7
  7765  22A3  083A               	movf	??_utoa,w
  7766  22A4  0081               	movwf	1
  7767                           
  7768                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  7769  22A5  30FF               	movlw	255
  7770  22A6  07BB               	addwf	utoa@p,f
  7771  22A7  30FF               	movlw	255
  7772  22A8  3DBC               	addwfc	utoa@p+1,f
  7773                           
  7774                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  7775  22A9  30FF               	movlw	255
  7776  22AA  07BD               	addwf	utoa@w,f
  7777  22AB  30FF               	movlw	255
  7778  22AC  3DBE               	addwfc	utoa@w+1,f
  7779                           
  7780                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  7781  22AD  300A               	movlw	10
  7782  22AE  00A0               	movwf	___lodiv@divisor
  7783  22AF  01A1               	clrf	___lodiv@divisor+1
  7784  22B0  01A2               	clrf	___lodiv@divisor+2
  7785  22B1  01A3               	clrf	___lodiv@divisor+3
  7786  22B2  01A4               	clrf	___lodiv@divisor+4
  7787  22B3  01A5               	clrf	___lodiv@divisor+5
  7788  22B4  01A6               	clrf	___lodiv@divisor+6
  7789  22B5  01A7               	clrf	___lodiv@divisor+7
  7790  22B6  083F               	movf	utoa@n,w
  7791  22B7  00A8               	movwf	___lodiv@dividend
  7792  22B8  0840               	movf	utoa@n+1,w
  7793  22B9  00A9               	movwf	___lodiv@dividend+1
  7794  22BA  0841               	movf	utoa@n+2,w
  7795  22BB  00AA               	movwf	___lodiv@dividend+2
  7796  22BC  0842               	movf	utoa@n+3,w
  7797  22BD  00AB               	movwf	___lodiv@dividend+3
  7798  22BE  0843               	movf	utoa@n+4,w
  7799  22BF  00AC               	movwf	___lodiv@dividend+4
  7800  22C0  0844               	movf	utoa@n+5,w
  7801  22C1  00AD               	movwf	___lodiv@dividend+5
  7802  22C2  0845               	movf	utoa@n+6,w
  7803  22C3  00AE               	movwf	___lodiv@dividend+6
  7804  22C4  0846               	movf	utoa@n+7,w
  7805  22C5  00AF               	movwf	___lodiv@dividend+7
  7806  22C6  31AA  2234  31A2   	fcall	___lodiv
  7807  22C9  0020               	movlb	0	; select bank0
  7808  22CA  0820               	movf	?___lodiv,w
  7809  22CB  00BF               	movwf	utoa@n
  7810  22CC  0821               	movf	?___lodiv+1,w
  7811  22CD  00C0               	movwf	utoa@n+1
  7812  22CE  0822               	movf	?___lodiv+2,w
  7813  22CF  00C1               	movwf	utoa@n+2
  7814  22D0  0823               	movf	?___lodiv+3,w
  7815  22D1  00C2               	movwf	utoa@n+3
  7816  22D2  0824               	movf	?___lodiv+4,w
  7817  22D3  00C3               	movwf	utoa@n+4
  7818  22D4  0825               	movf	?___lodiv+5,w
  7819  22D5  00C4               	movwf	utoa@n+5
  7820  22D6  0826               	movf	?___lodiv+6,w
  7821  22D7  00C5               	movwf	utoa@n+6
  7822  22D8  0827               	movf	?___lodiv+7,w
  7823  22D9  00C6               	movwf	utoa@n+7
  7824  22DA                     l6680:	
  7825                           
  7826                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7827  22DA  0020               	movlb	0	; select bank0
  7828  22DB  0847               	movf	utoa@i,w
  7829  22DC  0448               	iorwf	utoa@i+1,w
  7830  22DD  1D03               	btfss	3,2
  7831  22DE  2A55               	goto	l6682
  7832  22DF                     l6690:	
  7833                           
  7834                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  7835  22DF  0020               	movlb	0	; select bank0
  7836  22E0  0831               	movf	utoa@fp+1,w
  7837  22E1  00A7               	movwf	pad@fp+1
  7838  22E2  0830               	movf	utoa@fp,w
  7839  22E3  00A6               	movwf	pad@fp
  7840  22E4  0847               	movf	utoa@i,w
  7841  22E5  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7842  22E6  00BA               	movwf	??_utoa
  7843  22E7  083A               	movf	??_utoa,w
  7844  22E8  00A8               	movwf	pad@buf
  7845  22E9  083E               	movf	utoa@w+1,w
  7846  22EA  00AA               	movwf	pad@p+1
  7847  22EB  083D               	movf	utoa@w,w
  7848  22EC  00A9               	movwf	pad@p
  7849  22ED  31B7  275D         	fcall	_pad
  7850  22EF  0020               	movlb	0	; select bank0
  7851  22F0  0827               	movf	?_pad+1,w
  7852  22F1  00B1               	movwf	?_utoa+1
  7853  22F2  0826               	movf	?_pad,w
  7854  22F3  00B0               	movwf	?_utoa
  7855  22F4  0008               	return
  7856  22F5                     __end_of_utoa:	
  7857                           
  7858                           	psect	text14
  7859  28D7                     __ptext14:	
  7860 ;; *************** function ___lomod *****************
  7861 ;; Defined at:
  7862 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lomod.c"
  7863 ;; Parameters:    Size  Location     Type
  7864 ;;  divisor         8    0[BANK0 ] unsigned long long 
  7865 ;;  dividend        8    8[BANK0 ] unsigned long long 
  7866 ;; Auto vars:     Size  Location     Type
  7867 ;;  counter         1    2[COMMON] unsigned char 
  7868 ;; Return value:  Size  Location     Type
  7869 ;;                  8    0[BANK0 ] unsigned long long 
  7870 ;; Registers used:
  7871 ;;		wreg, status,2, status,0
  7872 ;; Tracked objects:
  7873 ;;		On entry : 0/0
  7874 ;;		On exit  : 0/0
  7875 ;;		Unchanged: 0/0
  7876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7877 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7878 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7879 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7880 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7881 ;;Total ram usage:       18 bytes
  7882 ;; Hardware stack levels used:    1
  7883 ;; Hardware stack levels required when called:    1
  7884 ;; This function calls:
  7885 ;;		Nothing
  7886 ;; This function is called by:
  7887 ;;		_utoa
  7888 ;; This function uses a non-reentrant model
  7889 ;;
  7890                           
  7891                           
  7892                           ;psect for function ___lomod
  7893  28D7                     ___lomod:	
  7894                           
  7895                           ;incstack = 0
  7896                           ; Regs used in ___lomod: [wreg+status,2+status,0]
  7897  28D7  0020               	movlb	0	; select bank0
  7898  28D8  0820               	movf	___lomod@divisor,w
  7899  28D9  0421               	iorwf	___lomod@divisor+1,w
  7900  28DA  0422               	iorwf	___lomod@divisor+2,w
  7901  28DB  0423               	iorwf	___lomod@divisor+3,w
  7902  28DC  0424               	iorwf	___lomod@divisor+4,w
  7903  28DD  0425               	iorwf	___lomod@divisor+5,w
  7904  28DE  0426               	iorwf	___lomod@divisor+6,w
  7905  28DF  0427               	iorwf	___lomod@divisor+7,w
  7906  28E0  1903               	skipnz
  7907  28E1  292F               	goto	l1098
  7908  28E2  01F2               	clrf	___lomod@counter
  7909  28E3  0AF2               	incf	___lomod@counter,f
  7910  28E4                     l6472:	
  7911  28E4  1BA7               	btfsc	___lomod@divisor+7,7
  7912  28E5  28F3               	goto	l6474
  7913  28E6  35A0               	lslf	___lomod@divisor,f
  7914  28E7  0DA1               	rlf	___lomod@divisor+1,f
  7915  28E8  0DA2               	rlf	___lomod@divisor+2,f
  7916  28E9  0DA3               	rlf	___lomod@divisor+3,f
  7917  28EA  0DA4               	rlf	___lomod@divisor+4,f
  7918  28EB  0DA5               	rlf	___lomod@divisor+5,f
  7919  28EC  0DA6               	rlf	___lomod@divisor+6,f
  7920  28ED  0DA7               	rlf	___lomod@divisor+7,f
  7921  28EE  3001               	movlw	1
  7922  28EF  00F1               	movwf	??___lomod
  7923  28F0  0871               	movf	??___lomod,w
  7924  28F1  07F2               	addwf	___lomod@counter,f
  7925  28F2  28E4               	goto	l6472
  7926  28F3                     l6474:	
  7927  28F3  0827               	movf	___lomod@divisor+7,w
  7928  28F4  022F               	subwf	___lomod@dividend+7,w
  7929  28F5  1D03               	skipz
  7930  28F6  2911               	goto	u8245
  7931  28F7  0826               	movf	___lomod@divisor+6,w
  7932  28F8  022E               	subwf	___lomod@dividend+6,w
  7933  28F9  1D03               	skipz
  7934  28FA  2911               	goto	u8245
  7935  28FB  0825               	movf	___lomod@divisor+5,w
  7936  28FC  022D               	subwf	___lomod@dividend+5,w
  7937  28FD  1D03               	skipz
  7938  28FE  2911               	goto	u8245
  7939  28FF  0824               	movf	___lomod@divisor+4,w
  7940  2900  022C               	subwf	___lomod@dividend+4,w
  7941  2901  1D03               	skipz
  7942  2902  2911               	goto	u8245
  7943  2903  0823               	movf	___lomod@divisor+3,w
  7944  2904  022B               	subwf	___lomod@dividend+3,w
  7945  2905  1D03               	skipz
  7946  2906  2911               	goto	u8245
  7947  2907  0822               	movf	___lomod@divisor+2,w
  7948  2908  022A               	subwf	___lomod@dividend+2,w
  7949  2909  1D03               	skipz
  7950  290A  2911               	goto	u8245
  7951  290B  0821               	movf	___lomod@divisor+1,w
  7952  290C  0229               	subwf	___lomod@dividend+1,w
  7953  290D  1D03               	skipz
  7954  290E  2911               	goto	u8245
  7955  290F  0820               	movf	___lomod@divisor,w
  7956  2910  0228               	subwf	___lomod@dividend,w
  7957  2911                     u8245:	
  7958  2911  1C03               	skipc
  7959  2912  2923               	goto	l6478
  7960  2913  0820               	movf	___lomod@divisor,w
  7961  2914  02A8               	subwf	___lomod@dividend,f
  7962  2915  0821               	movf	___lomod@divisor+1,w
  7963  2916  3BA9               	subwfb	___lomod@dividend+1,f
  7964  2917  0822               	movf	___lomod@divisor+2,w
  7965  2918  3BAA               	subwfb	___lomod@dividend+2,f
  7966  2919  0823               	movf	___lomod@divisor+3,w
  7967  291A  3BAB               	subwfb	___lomod@dividend+3,f
  7968  291B  0824               	movf	___lomod@divisor+4,w
  7969  291C  3BAC               	subwfb	___lomod@dividend+4,f
  7970  291D  0825               	movf	___lomod@divisor+5,w
  7971  291E  3BAD               	subwfb	___lomod@dividend+5,f
  7972  291F  0826               	movf	___lomod@divisor+6,w
  7973  2920  3BAE               	subwfb	___lomod@dividend+6,f
  7974  2921  0827               	movf	___lomod@divisor+7,w
  7975  2922  3BAF               	subwfb	___lomod@dividend+7,f
  7976  2923                     l6478:	
  7977  2923  36A7               	lsrf	___lomod@divisor+7,f
  7978  2924  0CA6               	rrf	___lomod@divisor+6,f
  7979  2925  0CA5               	rrf	___lomod@divisor+5,f
  7980  2926  0CA4               	rrf	___lomod@divisor+4,f
  7981  2927  0CA3               	rrf	___lomod@divisor+3,f
  7982  2928  0CA2               	rrf	___lomod@divisor+2,f
  7983  2929  0CA1               	rrf	___lomod@divisor+1,f
  7984  292A  0CA0               	rrf	___lomod@divisor,f
  7985  292B  3001               	movlw	1
  7986  292C  02F2               	subwf	___lomod@counter,f
  7987  292D  1D03               	btfss	3,2
  7988  292E  28F3               	goto	l6474
  7989  292F                     l1098:	
  7990  292F  0828               	movf	___lomod@dividend,w
  7991  2930  00A0               	movwf	?___lomod
  7992  2931  0829               	movf	___lomod@dividend+1,w
  7993  2932  00A1               	movwf	?___lomod+1
  7994  2933  082A               	movf	___lomod@dividend+2,w
  7995  2934  00A2               	movwf	?___lomod+2
  7996  2935  082B               	movf	___lomod@dividend+3,w
  7997  2936  00A3               	movwf	?___lomod+3
  7998  2937  082C               	movf	___lomod@dividend+4,w
  7999  2938  00A4               	movwf	?___lomod+4
  8000  2939  082D               	movf	___lomod@dividend+5,w
  8001  293A  00A5               	movwf	?___lomod+5
  8002  293B  082E               	movf	___lomod@dividend+6,w
  8003  293C  00A6               	movwf	?___lomod+6
  8004  293D  082F               	movf	___lomod@dividend+7,w
  8005  293E  00A7               	movwf	?___lomod+7
  8006  293F  0008               	return
  8007  2940                     __end_of___lomod:	
  8008                           
  8009                           	psect	text15
  8010  2A34                     __ptext15:	
  8011 ;; *************** function ___lodiv *****************
  8012 ;; Defined at:
  8013 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lodiv.c"
  8014 ;; Parameters:    Size  Location     Type
  8015 ;;  divisor         8    0[BANK0 ] unsigned long long 
  8016 ;;  dividend        8    8[BANK0 ] unsigned long long 
  8017 ;; Auto vars:     Size  Location     Type
  8018 ;;  quotient        8    2[COMMON] unsigned long long 
  8019 ;;  counter         1   10[COMMON] unsigned char 
  8020 ;; Return value:  Size  Location     Type
  8021 ;;                  8    0[BANK0 ] unsigned long long 
  8022 ;; Registers used:
  8023 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8024 ;; Tracked objects:
  8025 ;;		On entry : 0/0
  8026 ;;		On exit  : 0/0
  8027 ;;		Unchanged: 0/0
  8028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8029 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8030 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8031 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8032 ;;      Totals:        10      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8033 ;;Total ram usage:       26 bytes
  8034 ;; Hardware stack levels used:    1
  8035 ;; Hardware stack levels required when called:    1
  8036 ;; This function calls:
  8037 ;;		Nothing
  8038 ;; This function is called by:
  8039 ;;		_utoa
  8040 ;; This function uses a non-reentrant model
  8041 ;;
  8042                           
  8043                           
  8044                           ;psect for function ___lodiv
  8045  2A34                     ___lodiv:	
  8046                           
  8047                           ;incstack = 0
  8048                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  8049  2A34  3072               	movlw	low ___lodiv@quotient
  8050  2A35  0086               	movwf	6
  8051  2A36  3000               	movlw	high ___lodiv@quotient
  8052  2A37  0087               	movwf	7
  8053  2A38  3008               	movlw	8
  8054  2A39  00F1               	movwf	??___lodiv
  8055  2A3A  3000               	movlw	0
  8056  2A3B                     u8170:	
  8057  2A3B  001E               	movwi fsr1++
  8058  2A3C  0BF1               	decfsz	??___lodiv,f
  8059  2A3D  2A3B               	goto	u8170
  8060  2A3E  0020               	movlb	0	; select bank0
  8061  2A3F  0820               	movf	___lodiv@divisor,w
  8062  2A40  0421               	iorwf	___lodiv@divisor+1,w
  8063  2A41  0422               	iorwf	___lodiv@divisor+2,w
  8064  2A42  0423               	iorwf	___lodiv@divisor+3,w
  8065  2A43  0424               	iorwf	___lodiv@divisor+4,w
  8066  2A44  0425               	iorwf	___lodiv@divisor+5,w
  8067  2A45  0426               	iorwf	___lodiv@divisor+6,w
  8068  2A46  0427               	iorwf	___lodiv@divisor+7,w
  8069  2A47  1903               	skipnz
  8070  2A48  2A9F               	goto	l1088
  8071  2A49  01FA               	clrf	___lodiv@counter
  8072  2A4A  0AFA               	incf	___lodiv@counter,f
  8073  2A4B                     l6452:	
  8074  2A4B  1BA7               	btfsc	___lodiv@divisor+7,7
  8075  2A4C  2A5A               	goto	l6454
  8076  2A4D  35A0               	lslf	___lodiv@divisor,f
  8077  2A4E  0DA1               	rlf	___lodiv@divisor+1,f
  8078  2A4F  0DA2               	rlf	___lodiv@divisor+2,f
  8079  2A50  0DA3               	rlf	___lodiv@divisor+3,f
  8080  2A51  0DA4               	rlf	___lodiv@divisor+4,f
  8081  2A52  0DA5               	rlf	___lodiv@divisor+5,f
  8082  2A53  0DA6               	rlf	___lodiv@divisor+6,f
  8083  2A54  0DA7               	rlf	___lodiv@divisor+7,f
  8084  2A55  3001               	movlw	1
  8085  2A56  00F1               	movwf	??___lodiv
  8086  2A57  0871               	movf	??___lodiv,w
  8087  2A58  07FA               	addwf	___lodiv@counter,f
  8088  2A59  2A4B               	goto	l6452
  8089  2A5A                     l6454:	
  8090  2A5A  35F2               	lslf	___lodiv@quotient,f
  8091  2A5B  0DF3               	rlf	___lodiv@quotient+1,f
  8092  2A5C  0DF4               	rlf	___lodiv@quotient+2,f
  8093  2A5D  0DF5               	rlf	___lodiv@quotient+3,f
  8094  2A5E  0DF6               	rlf	___lodiv@quotient+4,f
  8095  2A5F  0DF7               	rlf	___lodiv@quotient+5,f
  8096  2A60  0DF8               	rlf	___lodiv@quotient+6,f
  8097  2A61  0DF9               	rlf	___lodiv@quotient+7,f
  8098  2A62  0827               	movf	___lodiv@divisor+7,w
  8099  2A63  022F               	subwf	___lodiv@dividend+7,w
  8100  2A64  1D03               	skipz
  8101  2A65  2A80               	goto	u8205
  8102  2A66  0826               	movf	___lodiv@divisor+6,w
  8103  2A67  022E               	subwf	___lodiv@dividend+6,w
  8104  2A68  1D03               	skipz
  8105  2A69  2A80               	goto	u8205
  8106  2A6A  0825               	movf	___lodiv@divisor+5,w
  8107  2A6B  022D               	subwf	___lodiv@dividend+5,w
  8108  2A6C  1D03               	skipz
  8109  2A6D  2A80               	goto	u8205
  8110  2A6E  0824               	movf	___lodiv@divisor+4,w
  8111  2A6F  022C               	subwf	___lodiv@dividend+4,w
  8112  2A70  1D03               	skipz
  8113  2A71  2A80               	goto	u8205
  8114  2A72  0823               	movf	___lodiv@divisor+3,w
  8115  2A73  022B               	subwf	___lodiv@dividend+3,w
  8116  2A74  1D03               	skipz
  8117  2A75  2A80               	goto	u8205
  8118  2A76  0822               	movf	___lodiv@divisor+2,w
  8119  2A77  022A               	subwf	___lodiv@dividend+2,w
  8120  2A78  1D03               	skipz
  8121  2A79  2A80               	goto	u8205
  8122  2A7A  0821               	movf	___lodiv@divisor+1,w
  8123  2A7B  0229               	subwf	___lodiv@dividend+1,w
  8124  2A7C  1D03               	skipz
  8125  2A7D  2A80               	goto	u8205
  8126  2A7E  0820               	movf	___lodiv@divisor,w
  8127  2A7F  0228               	subwf	___lodiv@dividend,w
  8128  2A80                     u8205:	
  8129  2A80  1C03               	skipc
  8130  2A81  2A93               	goto	l6462
  8131  2A82  0820               	movf	___lodiv@divisor,w
  8132  2A83  02A8               	subwf	___lodiv@dividend,f
  8133  2A84  0821               	movf	___lodiv@divisor+1,w
  8134  2A85  3BA9               	subwfb	___lodiv@dividend+1,f
  8135  2A86  0822               	movf	___lodiv@divisor+2,w
  8136  2A87  3BAA               	subwfb	___lodiv@dividend+2,f
  8137  2A88  0823               	movf	___lodiv@divisor+3,w
  8138  2A89  3BAB               	subwfb	___lodiv@dividend+3,f
  8139  2A8A  0824               	movf	___lodiv@divisor+4,w
  8140  2A8B  3BAC               	subwfb	___lodiv@dividend+4,f
  8141  2A8C  0825               	movf	___lodiv@divisor+5,w
  8142  2A8D  3BAD               	subwfb	___lodiv@dividend+5,f
  8143  2A8E  0826               	movf	___lodiv@divisor+6,w
  8144  2A8F  3BAE               	subwfb	___lodiv@dividend+6,f
  8145  2A90  0827               	movf	___lodiv@divisor+7,w
  8146  2A91  3BAF               	subwfb	___lodiv@dividend+7,f
  8147  2A92  1472               	bsf	___lodiv@quotient,0
  8148  2A93                     l6462:	
  8149  2A93  36A7               	lsrf	___lodiv@divisor+7,f
  8150  2A94  0CA6               	rrf	___lodiv@divisor+6,f
  8151  2A95  0CA5               	rrf	___lodiv@divisor+5,f
  8152  2A96  0CA4               	rrf	___lodiv@divisor+4,f
  8153  2A97  0CA3               	rrf	___lodiv@divisor+3,f
  8154  2A98  0CA2               	rrf	___lodiv@divisor+2,f
  8155  2A99  0CA1               	rrf	___lodiv@divisor+1,f
  8156  2A9A  0CA0               	rrf	___lodiv@divisor,f
  8157  2A9B  3001               	movlw	1
  8158  2A9C  02FA               	subwf	___lodiv@counter,f
  8159  2A9D  1D03               	btfss	3,2
  8160  2A9E  2A5A               	goto	l6454
  8161  2A9F                     l1088:	
  8162  2A9F  0872               	movf	___lodiv@quotient,w
  8163  2AA0  00A0               	movwf	?___lodiv
  8164  2AA1  0873               	movf	___lodiv@quotient+1,w
  8165  2AA2  00A1               	movwf	?___lodiv+1
  8166  2AA3  0874               	movf	___lodiv@quotient+2,w
  8167  2AA4  00A2               	movwf	?___lodiv+2
  8168  2AA5  0875               	movf	___lodiv@quotient+3,w
  8169  2AA6  00A3               	movwf	?___lodiv+3
  8170  2AA7  0876               	movf	___lodiv@quotient+4,w
  8171  2AA8  00A4               	movwf	?___lodiv+4
  8172  2AA9  0877               	movf	___lodiv@quotient+5,w
  8173  2AAA  00A5               	movwf	?___lodiv+5
  8174  2AAB  0878               	movf	___lodiv@quotient+6,w
  8175  2AAC  00A6               	movwf	?___lodiv+6
  8176  2AAD  0879               	movf	___lodiv@quotient+7,w
  8177  2AAE  00A7               	movwf	?___lodiv+7
  8178  2AAF  0008               	return
  8179  2AB0                     __end_of___lodiv:	
  8180                           
  8181                           	psect	text16
  8182  37AE                     __ptext16:	
  8183 ;; *************** function _strncmp *****************
  8184 ;; Defined at:
  8185 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  8186 ;; Parameters:    Size  Location     Type
  8187 ;;  _l              2    1[COMMON] PTR const unsigned char 
  8188 ;;		 -> STR_23(18), STR_22(18), STR_21(19), STR_20(20), 
  8189 ;;		 -> STR_19(20), STR_18(21), STR_17(21), STR_16(21), 
  8190 ;;		 -> STR_15(22), STR_14(22), STR_13(21), STR_12(21), 
  8191 ;;		 -> STR_9(15), STR_8(23), STR_7(15), STR_6(21), 
  8192 ;;		 -> STR_5(21), STR_4(21), STR_3(22), STR_2(71), 
  8193 ;;		 -> STR_1(40), 
  8194 ;;  _r              2    3[COMMON] PTR const unsigned char 
  8195 ;;		 -> STR_121(3), STR_117(3), STR_112(3), STR_108(3), 
  8196 ;;		 -> STR_103(4), STR_99(4), STR_94(3), STR_89(3), 
  8197 ;;		 -> STR_84(4), STR_79(3), STR_74(3), STR_69(4), 
  8198 ;;		 -> STR_64(3), STR_59(3), STR_54(4), STR_49(3), 
  8199 ;;		 -> STR_45(3), STR_40(3), STR_36(3), STR_31(4), 
  8200 ;;		 -> STR_27(4), 
  8201 ;;  n               2    5[COMMON] unsigned int 
  8202 ;; Auto vars:     Size  Location     Type
  8203 ;;  r               2   10[COMMON] PTR const unsigned char 
  8204 ;;		 -> STR_121(3), STR_117(3), STR_112(3), STR_108(3), 
  8205 ;;		 -> STR_103(4), STR_99(4), STR_94(3), STR_89(3), 
  8206 ;;		 -> STR_84(4), STR_79(3), STR_74(3), STR_69(4), 
  8207 ;;		 -> STR_64(3), STR_59(3), STR_54(4), STR_49(3), 
  8208 ;;		 -> STR_45(3), STR_40(3), STR_36(3), STR_31(4), 
  8209 ;;		 -> STR_27(4), 
  8210 ;;  l               2    8[COMMON] PTR const unsigned char 
  8211 ;;		 -> STR_23(18), STR_22(18), STR_21(19), STR_20(20), 
  8212 ;;		 -> STR_19(20), STR_18(21), STR_17(21), STR_16(21), 
  8213 ;;		 -> STR_15(22), STR_14(22), STR_13(21), STR_12(21), 
  8214 ;;		 -> STR_9(15), STR_8(23), STR_7(15), STR_6(21), 
  8215 ;;		 -> STR_5(21), STR_4(21), STR_3(22), STR_2(71), 
  8216 ;;		 -> STR_1(40), 
  8217 ;; Return value:  Size  Location     Type
  8218 ;;                  2    1[COMMON] int 
  8219 ;; Registers used:
  8220 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  8221 ;; Tracked objects:
  8222 ;;		On entry : 0/0
  8223 ;;		On exit  : 0/0
  8224 ;;		Unchanged: 0/0
  8225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8226 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8227 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8228 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8229 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8230 ;;Total ram usage:       11 bytes
  8231 ;; Hardware stack levels used:    1
  8232 ;; Hardware stack levels required when called:    1
  8233 ;; This function calls:
  8234 ;;		Nothing
  8235 ;; This function is called by:
  8236 ;;		_vfpfcnvrt
  8237 ;; This function uses a non-reentrant model
  8238 ;;
  8239                           
  8240                           
  8241                           ;psect for function _strncmp
  8242  37AE                     _strncmp:	
  8243                           
  8244                           ;incstack = 0
  8245                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  8246  37AE  0872               	movf	strncmp@_l+1,w
  8247  37AF  00F9               	movwf	strncmp@l+1
  8248  37B0  0871               	movf	strncmp@_l,w
  8249  37B1  00F8               	movwf	strncmp@l
  8250  37B2  0874               	movf	strncmp@_r+1,w
  8251  37B3  00FB               	movwf	strncmp@r+1
  8252  37B4  0873               	movf	strncmp@_r,w
  8253  37B5  00FA               	movwf	strncmp@r
  8254  37B6  3001               	movlw	1
  8255  37B7  02F5               	subwf	strncmp@n,f
  8256  37B8  3000               	movlw	0
  8257  37B9  3BF6               	subwfb	strncmp@n+1,f
  8258  37BA  0A75               	incf	strncmp@n,w
  8259  37BB  1D03               	skipz
  8260  37BC  2FE8               	goto	l6814
  8261  37BD  0A76               	incf	strncmp@n+1,w
  8262  37BE  1D03               	btfss	3,2
  8263  37BF  2FE8               	goto	l6814
  8264  37C0  01F1               	clrf	?_strncmp
  8265  37C1  01F2               	clrf	?_strncmp+1
  8266  37C2  0008               	return
  8267  37C3                     l6816:	
  8268  37C3  087A               	movf	strncmp@r,w
  8269  37C4  0084               	movwf	4
  8270  37C5  087B               	movf	strncmp@r+1,w
  8271  37C6  0085               	movwf	5
  8272  37C7  0012               	moviw fsr0++
  8273  37C8  1903               	btfsc	3,2
  8274  37C9  2FEF               	goto	l6822
  8275  37CA  0875               	movf	strncmp@n,w
  8276  37CB  0476               	iorwf	strncmp@n+1,w
  8277  37CC  1903               	btfsc	3,2
  8278  37CD  2FEF               	goto	l6822
  8279  37CE  087A               	movf	strncmp@r,w
  8280  37CF  0084               	movwf	4
  8281  37D0  087B               	movf	strncmp@r+1,w
  8282  37D1  0085               	movwf	5
  8283  37D2  0800               	movf	0,w	;code access
  8284  37D3  00F7               	movwf	??_strncmp
  8285  37D4  0878               	movf	strncmp@l,w
  8286  37D5  0084               	movwf	4
  8287  37D6  0879               	movf	strncmp@l+1,w
  8288  37D7  0085               	movwf	5
  8289  37D8  0800               	movf	0,w	;code access
  8290  37D9  0677               	xorwf	??_strncmp,w
  8291  37DA  1D03               	btfss	3,2
  8292  37DB  2FEF               	goto	l6822
  8293  37DC  3001               	movlw	1
  8294  37DD  07F8               	addwf	strncmp@l,f
  8295  37DE  3000               	movlw	0
  8296  37DF  3DF9               	addwfc	strncmp@l+1,f
  8297  37E0  3001               	movlw	1
  8298  37E1  07FA               	addwf	strncmp@r,f
  8299  37E2  3000               	movlw	0
  8300  37E3  3DFB               	addwfc	strncmp@r+1,f
  8301  37E4  3001               	movlw	1
  8302  37E5  02F5               	subwf	strncmp@n,f
  8303  37E6  3000               	movlw	0
  8304  37E7  3BF6               	subwfb	strncmp@n+1,f
  8305  37E8                     l6814:	
  8306  37E8  0878               	movf	strncmp@l,w
  8307  37E9  0084               	movwf	4
  8308  37EA  0879               	movf	strncmp@l+1,w
  8309  37EB  0085               	movwf	5
  8310  37EC  0012               	moviw fsr0++
  8311  37ED  1D03               	btfss	3,2
  8312  37EE  2FC3               	goto	l6816
  8313  37EF                     l6822:	
  8314  37EF  0878               	movf	strncmp@l,w
  8315  37F0  0084               	movwf	4
  8316  37F1  0879               	movf	strncmp@l+1,w
  8317  37F2  0085               	movwf	5
  8318  37F3  0800               	movf	0,w	;code access
  8319  37F4  00F7               	movwf	??_strncmp
  8320  37F5  087A               	movf	strncmp@r,w
  8321  37F6  0084               	movwf	4
  8322  37F7  087B               	movf	strncmp@r+1,w
  8323  37F8  0085               	movwf	5
  8324  37F9  0800               	movf	0,w	;code access
  8325  37FA  0277               	subwf	??_strncmp,w
  8326  37FB  00F1               	movwf	?_strncmp
  8327  37FC  01F2               	clrf	?_strncmp+1
  8328  37FD  1C03               	skipc
  8329  37FE  03F2               	decf	?_strncmp+1,f
  8330  37FF  0008               	return
  8331  3800                     __end_of_strncmp:	
  8332                           
  8333                           	psect	text17
  8334  2E66                     __ptext17:	
  8335 ;; *************** function _stoa *****************
  8336 ;; Defined at:
  8337 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8338 ;; Parameters:    Size  Location     Type
  8339 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  8340 ;;		 -> vsnprintf@f(6), 
  8341 ;;  s               2    2[BANK0 ] PTR unsigned char 
  8342 ;;		 -> ?_snprintf(2), sp__logf(4), adcGain(2), 
  8343 ;; Auto vars:     Size  Location     Type
  8344 ;;  nuls            7    4[BANK0 ] unsigned char [7]
  8345 ;;  l               2   19[BANK0 ] int 
  8346 ;;  p               2   17[BANK0 ] int 
  8347 ;;  cp              2   15[BANK0 ] PTR unsigned char 
  8348 ;;		 -> ?_snprintf(2), stoa@nuls(7), sp__logf(4), adcGain(2), 
  8349 ;;  w               2   13[BANK0 ] int 
  8350 ;;  i               2   11[BANK0 ] int 
  8351 ;; Return value:  Size  Location     Type
  8352 ;;                  2    0[BANK0 ] int 
  8353 ;; Registers used:
  8354 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8355 ;; Tracked objects:
  8356 ;;		On entry : 0/0
  8357 ;;		On exit  : 0/0
  8358 ;;		Unchanged: 0/0
  8359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8360 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8361 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8362 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8363 ;;      Totals:         2      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8364 ;;Total ram usage:       23 bytes
  8365 ;; Hardware stack levels used:    1
  8366 ;; Hardware stack levels required when called:    3
  8367 ;; This function calls:
  8368 ;;		_fputc
  8369 ;;		_strlen
  8370 ;; This function is called by:
  8371 ;;		_vfpfcnvrt
  8372 ;; This function uses a non-reentrant model
  8373 ;;
  8374                           
  8375                           
  8376                           ;psect for function _stoa
  8377  2E66                     _stoa:	
  8378                           
  8379                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  8380                           
  8381                           ;incstack = 0
  8382                           ; Regs used in _stoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8383  2E66  30DA               	movlw	low stoa@F1152
  8384  2E67  0086               	movwf	6
  8385  2E68  3001               	movlw	high stoa@F1152
  8386  2E69  0087               	movwf	7
  8387  2E6A  3024               	movlw	low stoa@nuls
  8388  2E6B  0084               	movwf	4
  8389  2E6C  3000               	movlw	high stoa@nuls
  8390  2E6D  0085               	movwf	5
  8391  2E6E  3007               	movlw	7
  8392  2E6F  00FA               	movwf	??_stoa
  8393  2E70                     u8550:	
  8394  2E70  0016               	moviw fsr1++
  8395  2E71  001A               	movwi fsr0++
  8396  2E72  0BFA               	decfsz	??_stoa,f
  8397  2E73  2E70               	goto	u8550
  8398                           
  8399                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  8400  2E74  0020               	movlb	0	; select bank0
  8401  2E75  0823               	movf	stoa@s+1,w
  8402  2E76  00B0               	movwf	stoa@cp+1
  8403  2E77  0822               	movf	stoa@s,w
  8404  2E78  00AF               	movwf	stoa@cp
  8405                           
  8406                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  8407  2E79  082F               	movf	stoa@cp,w
  8408  2E7A  0430               	iorwf	stoa@cp+1,w
  8409  2E7B  1D03               	btfss	3,2
  8410  2E7C  2E81               	goto	l6616
  8411                           
  8412                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  8413  2E7D  3024               	movlw	low stoa@nuls
  8414  2E7E  00AF               	movwf	stoa@cp
  8415  2E7F  3000               	movlw	high stoa@nuls
  8416  2E80  00B0               	movwf	stoa@cp+1
  8417  2E81                     l6616:	
  8418                           
  8419                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  8420  2E81  0830               	movf	stoa@cp+1,w
  8421  2E82  00F2               	movwf	strlen@s+1
  8422  2E83  082F               	movf	stoa@cp,w
  8423  2E84  00F1               	movwf	strlen@s
  8424  2E85  31B3  23FE  31AE   	fcall	_strlen
  8425  2E88  0872               	movf	?_strlen+1,w
  8426  2E89  0020               	movlb	0	; select bank0
  8427  2E8A  00B4               	movwf	stoa@l+1
  8428  2E8B  0871               	movf	?_strlen,w
  8429  2E8C  00B3               	movwf	stoa@l
  8430                           
  8431                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  8432  2E8D  0022               	movlb	2	; select bank2
  8433  2E8E  0868               	movf	(_prec+1)^(0+256),w
  8434  2E8F  0020               	movlb	0	; select bank0
  8435  2E90  00B2               	movwf	stoa@p+1
  8436  2E91  0022               	movlb	2	; select bank2
  8437  2E92  0867               	movf	_prec^(0+256),w
  8438  2E93  0020               	movlb	0	; select bank0
  8439  2E94  00B1               	movwf	stoa@p
  8440                           
  8441                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  8442  2E95  1BB2               	btfsc	stoa@p+1,7
  8443  2E96  2EA8               	goto	l710
  8444  2E97  0832               	movf	stoa@p+1,w
  8445  2E98  3A80               	xorlw	128
  8446  2E99  00FA               	movwf	??_stoa
  8447  2E9A  0834               	movf	stoa@l+1,w
  8448  2E9B  3A80               	xorlw	128
  8449  2E9C  027A               	subwf	??_stoa,w
  8450  2E9D  1D03               	skipz
  8451  2E9E  2EA1               	goto	u8585
  8452  2E9F  0833               	movf	stoa@l,w
  8453  2EA0  0231               	subwf	stoa@p,w
  8454  2EA1                     u8585:	
  8455  2EA1  1803               	btfsc	3,0
  8456  2EA2  2EA8               	goto	l710
  8457  2EA3  0020               	movlb	0	; select bank0
  8458  2EA4  0832               	movf	stoa@p+1,w
  8459  2EA5  00B4               	movwf	stoa@l+1
  8460  2EA6  0831               	movf	stoa@p,w
  8461  2EA7  00B3               	movwf	stoa@l
  8462  2EA8                     l710:	
  8463                           
  8464                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  8465  2EA8  0020               	movlb	0	; select bank0
  8466  2EA9  0834               	movf	stoa@l+1,w
  8467  2EAA  00B2               	movwf	stoa@p+1
  8468  2EAB  0833               	movf	stoa@l,w
  8469  2EAC  00B1               	movwf	stoa@p
  8470                           
  8471                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  8472  2EAD  0022               	movlb	2	; select bank2
  8473  2EAE  0866               	movf	(_width+1)^(0+256),w
  8474  2EAF  0020               	movlb	0	; select bank0
  8475  2EB0  00AE               	movwf	stoa@w+1
  8476  2EB1  0022               	movlb	2	; select bank2
  8477  2EB2  0865               	movf	_width^(0+256),w
  8478  2EB3  0020               	movlb	0	; select bank0
  8479  2EB4  00AD               	movwf	stoa@w
  8480                           
  8481                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  8482  2EB5  0022               	movlb	2	; select bank2
  8483  2EB6  1C69               	btfss	_flags^(0+256),0
  8484  2EB7  2ECA               	goto	l6634
  8485  2EB8  2ED7               	goto	l6636
  8486  2EB9                     l6630:	
  8487                           
  8488                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  8489  2EB9  3020               	movlw	32
  8490  2EBA  00F1               	movwf	fputc@c
  8491  2EBB  3000               	movlw	0
  8492  2EBC  00F2               	movwf	fputc@c+1
  8493  2EBD  0020               	movlb	0	; select bank0
  8494  2EBE  0821               	movf	stoa@fp+1,w
  8495  2EBF  00F4               	movwf	fputc@fp+1
  8496  2EC0  0820               	movf	stoa@fp,w
  8497  2EC1  00F3               	movwf	fputc@fp
  8498  2EC2  31A8  201D  31AE   	fcall	_fputc
  8499                           
  8500                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  8501  2EC5  3001               	movlw	1
  8502  2EC6  0020               	movlb	0	; select bank0
  8503  2EC7  07B3               	addwf	stoa@l,f
  8504  2EC8  3000               	movlw	0
  8505  2EC9  3DB4               	addwfc	stoa@l+1,f
  8506  2ECA                     l6634:	
  8507                           
  8508                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  8509  2ECA  0020               	movlb	0	; select bank0
  8510  2ECB  0834               	movf	stoa@l+1,w
  8511  2ECC  3A80               	xorlw	128
  8512  2ECD  00FA               	movwf	??_stoa
  8513  2ECE  082E               	movf	stoa@w+1,w
  8514  2ECF  3A80               	xorlw	128
  8515  2ED0  027A               	subwf	??_stoa,w
  8516  2ED1  1D03               	skipz
  8517  2ED2  2ED5               	goto	u8605
  8518  2ED3  082D               	movf	stoa@w,w
  8519  2ED4  0233               	subwf	stoa@l,w
  8520  2ED5                     u8605:	
  8521  2ED5  1C03               	skipc
  8522  2ED6  2EB9               	goto	l6630
  8523  2ED7                     l6636:	
  8524                           
  8525                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  8526  2ED7  0020               	movlb	0	; select bank0
  8527  2ED8  01AB               	clrf	stoa@i
  8528  2ED9  01AC               	clrf	stoa@i+1
  8529  2EDA                     l6644:	
  8530                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8531                           
  8532                           
  8533                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8534  2EDA  082C               	movf	stoa@i+1,w
  8535  2EDB  3A80               	xorlw	128
  8536  2EDC  00FA               	movwf	??_stoa
  8537  2EDD  0832               	movf	stoa@p+1,w
  8538  2EDE  3A80               	xorlw	128
  8539  2EDF  027A               	subwf	??_stoa,w
  8540  2EE0  1D03               	skipz
  8541  2EE1  2EE4               	goto	u8615
  8542  2EE2  0831               	movf	stoa@p,w
  8543  2EE3  022B               	subwf	stoa@i,w
  8544  2EE4                     u8615:	
  8545  2EE4  1803               	btfsc	3,0
  8546  2EE5  2F03               	goto	l719
  8547                           
  8548                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  8549  2EE6  0020               	movlb	0	; select bank0
  8550  2EE7  082F               	movf	stoa@cp,w
  8551  2EE8  0086               	movwf	6
  8552  2EE9  0830               	movf	stoa@cp+1,w
  8553  2EEA  0087               	movwf	7
  8554  2EEB  0801               	movf	1,w
  8555  2EEC  00FA               	movwf	??_stoa
  8556  2EED  01FB               	clrf	??_stoa+1
  8557  2EEE  087A               	movf	??_stoa,w
  8558  2EEF  00F1               	movwf	fputc@c
  8559  2EF0  087B               	movf	??_stoa+1,w
  8560  2EF1  00F2               	movwf	fputc@c+1
  8561  2EF2  0821               	movf	stoa@fp+1,w
  8562  2EF3  00F4               	movwf	fputc@fp+1
  8563  2EF4  0820               	movf	stoa@fp,w
  8564  2EF5  00F3               	movwf	fputc@fp
  8565  2EF6  31A8  201D  31AE   	fcall	_fputc
  8566                           
  8567                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  8568  2EF9  3001               	movlw	1
  8569  2EFA  0020               	movlb	0	; select bank0
  8570  2EFB  07AF               	addwf	stoa@cp,f
  8571  2EFC  3000               	movlw	0
  8572  2EFD  3DB0               	addwfc	stoa@cp+1,f
  8573                           
  8574                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  8575  2EFE  3001               	movlw	1
  8576  2EFF  07AB               	addwf	stoa@i,f
  8577  2F00  3000               	movlw	0
  8578  2F01  3DAC               	addwfc	stoa@i+1,f
  8579  2F02  2EDA               	goto	l6644
  8580  2F03                     l719:	
  8581                           
  8582                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  8583  2F03  0022               	movlb	2	; select bank2
  8584  2F04  1869               	btfsc	_flags^(0+256),0
  8585  2F05  2F18               	goto	l6652
  8586  2F06  2F25               	goto	l6654
  8587  2F07                     l6648:	
  8588                           
  8589                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  8590  2F07  3020               	movlw	32
  8591  2F08  00F1               	movwf	fputc@c
  8592  2F09  3000               	movlw	0
  8593  2F0A  00F2               	movwf	fputc@c+1
  8594  2F0B  0020               	movlb	0	; select bank0
  8595  2F0C  0821               	movf	stoa@fp+1,w
  8596  2F0D  00F4               	movwf	fputc@fp+1
  8597  2F0E  0820               	movf	stoa@fp,w
  8598  2F0F  00F3               	movwf	fputc@fp
  8599  2F10  31A8  201D  31AE   	fcall	_fputc
  8600                           
  8601                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  8602  2F13  3001               	movlw	1
  8603  2F14  0020               	movlb	0	; select bank0
  8604  2F15  07B3               	addwf	stoa@l,f
  8605  2F16  3000               	movlw	0
  8606  2F17  3DB4               	addwfc	stoa@l+1,f
  8607  2F18                     l6652:	
  8608                           
  8609                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  8610  2F18  0020               	movlb	0	; select bank0
  8611  2F19  0834               	movf	stoa@l+1,w
  8612  2F1A  3A80               	xorlw	128
  8613  2F1B  00FA               	movwf	??_stoa
  8614  2F1C  082E               	movf	stoa@w+1,w
  8615  2F1D  3A80               	xorlw	128
  8616  2F1E  027A               	subwf	??_stoa,w
  8617  2F1F  1D03               	skipz
  8618  2F20  2F23               	goto	u8635
  8619  2F21  082D               	movf	stoa@w,w
  8620  2F22  0233               	subwf	stoa@l,w
  8621  2F23                     u8635:	
  8622  2F23  1C03               	skipc
  8623  2F24  2F07               	goto	l6648
  8624  2F25                     l6654:	
  8625                           
  8626                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  8627  2F25  0020               	movlb	0	; select bank0
  8628  2F26  0834               	movf	stoa@l+1,w
  8629  2F27  00A1               	movwf	?_stoa+1
  8630  2F28  0833               	movf	stoa@l,w
  8631  2F29  00A0               	movwf	?_stoa
  8632  2F2A  0008               	return
  8633  2F2B                     __end_of_stoa:	
  8634                           
  8635                           	psect	text18
  8636  22F5                     __ptext18:	
  8637 ;; *************** function _otoa *****************
  8638 ;; Defined at:
  8639 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8640 ;; Parameters:    Size  Location     Type
  8641 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  8642 ;;		 -> vsnprintf@f(6), 
  8643 ;;  d               8   18[BANK0 ] unsigned long long 
  8644 ;; Auto vars:     Size  Location     Type
  8645 ;;  n               8   40[BANK0 ] unsigned long long 
  8646 ;;  i               2   48[BANK0 ] int 
  8647 ;;  w               2   38[BANK0 ] int 
  8648 ;;  t               2   36[BANK0 ] int 
  8649 ;;  p               2   34[BANK0 ] int 
  8650 ;; Return value:  Size  Location     Type
  8651 ;;                  2   16[BANK0 ] int 
  8652 ;; Registers used:
  8653 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8654 ;; Tracked objects:
  8655 ;;		On entry : 0/0
  8656 ;;		On exit  : 0/0
  8657 ;;		Unchanged: 0/0
  8658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8659 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8660 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8661 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8662 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8663 ;;Total ram usage:       34 bytes
  8664 ;; Hardware stack levels used:    1
  8665 ;; Hardware stack levels required when called:    5
  8666 ;; This function calls:
  8667 ;;		_pad
  8668 ;; This function is called by:
  8669 ;;		_vfpfcnvrt
  8670 ;; This function uses a non-reentrant model
  8671 ;;
  8672                           
  8673                           
  8674                           ;psect for function _otoa
  8675  22F5                     _otoa:	
  8676                           
  8677                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  8678                           
  8679                           ;incstack = 0
  8680                           ; Regs used in _otoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8681  22F5  0022               	movlb	2	; select bank2
  8682  22F6  1BE8               	btfsc	(_prec+1)^(0+256),7
  8683  22F7  2AFC               	goto	l688
  8684                           
  8685                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
  8686  22F8  30FD               	movlw	253
  8687  22F9  05E9               	andwf	_flags^(0+256),f
  8688  22FA  30FF               	movlw	255
  8689  22FB  05EA               	andwf	(_flags+1)^(0+256),f
  8690  22FC                     l688:	
  8691                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 515:     }
  8692                           
  8693                           
  8694                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
  8695  22FC  0868               	movf	(_prec+1)^(0+256),w
  8696  22FD  3A80               	xorlw	128
  8697  22FE  0020               	movlb	0	; select bank0
  8698  22FF  00BA               	movwf	??_otoa
  8699  2300  3080               	movlw	128
  8700  2301  023A               	subwf	??_otoa,w
  8701  2302  1D03               	skipz
  8702  2303  2B07               	goto	u8465
  8703  2304  3001               	movlw	1
  8704  2305  0022               	movlb	2	; select bank2
  8705  2306  0267               	subwf	_prec^(0+256),w
  8706  2307                     u8465:	
  8707  2307  1803               	skipnc
  8708  2308  2B0F               	goto	l6570
  8709  2309  3001               	movlw	1
  8710  230A  0020               	movlb	0	; select bank0
  8711  230B  00C2               	movwf	otoa@p
  8712  230C  3000               	movlw	0
  8713  230D  00C3               	movwf	otoa@p+1
  8714  230E  2B17               	goto	l692
  8715  230F                     l6570:	
  8716  230F  0022               	movlb	2	; select bank2
  8717  2310  0868               	movf	(_prec+1)^(0+256),w
  8718  2311  0020               	movlb	0	; select bank0
  8719  2312  00C3               	movwf	otoa@p+1
  8720  2313  0022               	movlb	2	; select bank2
  8721  2314  0867               	movf	_prec^(0+256),w
  8722  2315  0020               	movlb	0	; select bank0
  8723  2316  00C2               	movwf	otoa@p
  8724  2317                     l692:	
  8725                           
  8726                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
  8727  2317  0022               	movlb	2	; select bank2
  8728  2318  0866               	movf	(_width+1)^(0+256),w
  8729  2319  0020               	movlb	0	; select bank0
  8730  231A  00C7               	movwf	otoa@w+1
  8731  231B  0022               	movlb	2	; select bank2
  8732  231C  0865               	movf	_width^(0+256),w
  8733  231D  0020               	movlb	0	; select bank0
  8734  231E  00C6               	movwf	otoa@w
  8735                           
  8736                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
  8737  231F  0832               	movf	otoa@d,w
  8738  2320  00C8               	movwf	otoa@n
  8739  2321  0833               	movf	otoa@d+1,w
  8740  2322  00C9               	movwf	otoa@n+1
  8741  2323  0834               	movf	otoa@d+2,w
  8742  2324  00CA               	movwf	otoa@n+2
  8743  2325  0835               	movf	otoa@d+3,w
  8744  2326  00CB               	movwf	otoa@n+3
  8745  2327  0836               	movf	otoa@d+4,w
  8746  2328  00CC               	movwf	otoa@n+4
  8747  2329  0837               	movf	otoa@d+5,w
  8748  232A  00CD               	movwf	otoa@n+5
  8749  232B  0838               	movf	otoa@d+6,w
  8750  232C  00CE               	movwf	otoa@n+6
  8751  232D  0839               	movf	otoa@d+7,w
  8752  232E  00CF               	movwf	otoa@n+7
  8753                           
  8754                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
  8755  232F  301F               	movlw	31
  8756  2330  00D0               	movwf	otoa@i
  8757  2331  3000               	movlw	0
  8758  2332  00D1               	movwf	otoa@i+1
  8759                           
  8760                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
  8761  2333  0024               	movlb	4	; select bank4
  8762  2334  01BF               	clrf	(_dbuf^(0+512)+31)
  8763                           
  8764                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
  8765  2335  0020               	movlb	0	; select bank0
  8766  2336  01C4               	clrf	otoa@t
  8767  2337  01C5               	clrf	otoa@t+1
  8768                           
  8769                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8770  2338  2BAC               	goto	l693
  8771  2339                     l6588:	
  8772  2339  0020               	movlb	0	; select bank0
  8773  233A  0848               	movf	otoa@n,w
  8774  233B  0449               	iorwf	otoa@n+1,w
  8775  233C  044A               	iorwf	otoa@n+2,w
  8776  233D  044B               	iorwf	otoa@n+3,w
  8777  233E  044C               	iorwf	otoa@n+4,w
  8778  233F  044D               	iorwf	otoa@n+5,w
  8779  2340  044E               	iorwf	otoa@n+6,w
  8780  2341  044F               	iorwf	otoa@n+7,w
  8781  2342  1D03               	skipz
  8782  2343  2B5E               	goto	l6578
  8783  2344  0843               	movf	otoa@p+1,w
  8784  2345  3A80               	xorlw	128
  8785  2346  00BA               	movwf	??_otoa
  8786  2347  3080               	movlw	128
  8787  2348  023A               	subwf	??_otoa,w
  8788  2349  1D03               	skipz
  8789  234A  2B4D               	goto	u8505
  8790  234B  3001               	movlw	1
  8791  234C  0242               	subwf	otoa@p,w
  8792  234D                     u8505:	
  8793  234D  1803               	skipnc
  8794  234E  2B5E               	goto	l6578
  8795  234F  0020               	movlb	0	; select bank0
  8796  2350  0847               	movf	otoa@w+1,w
  8797  2351  3A80               	xorlw	128
  8798  2352  00BA               	movwf	??_otoa
  8799  2353  3080               	movlw	128
  8800  2354  023A               	subwf	??_otoa,w
  8801  2355  1D03               	skipz
  8802  2356  2B59               	goto	u8515
  8803  2357  3001               	movlw	1
  8804  2358  0246               	subwf	otoa@w,w
  8805  2359                     u8515:	
  8806  2359  1C03               	skipc
  8807  235A  2BB7               	goto	l699
  8808  235B  0022               	movlb	2	; select bank2
  8809  235C  1CE9               	btfss	_flags^(0+256),1
  8810  235D  2BB7               	goto	l699
  8811  235E                     l6578:	
  8812                           
  8813                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
  8814  235E  30FF               	movlw	255
  8815  235F  0020               	movlb	0	; select bank0
  8816  2360  07D0               	addwf	otoa@i,f
  8817  2361  30FF               	movlw	255
  8818  2362  3DD1               	addwfc	otoa@i+1,f
  8819                           
  8820                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
  8821  2363  3007               	movlw	7
  8822  2364  0548               	andwf	otoa@n,w
  8823  2365  00C4               	movwf	otoa@t
  8824  2366  3000               	movlw	0
  8825  2367  0549               	andwf	otoa@n+1,w
  8826  2368  00C5               	movwf	otoa@t+1
  8827                           
  8828                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
  8829  2369  0844               	movf	otoa@t,w
  8830  236A  3E30               	addlw	48
  8831  236B  00BA               	movwf	??_otoa
  8832  236C  0850               	movf	otoa@i,w
  8833  236D  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8834  236E  0086               	movwf	6
  8835  236F  3002               	movlw	2	; select bank4/5
  8836  2370  0087               	movwf	7
  8837  2371  083A               	movf	??_otoa,w
  8838  2372  0081               	movwf	1
  8839                           
  8840                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
  8841  2373  30FF               	movlw	255
  8842  2374  07C2               	addwf	otoa@p,f
  8843  2375  30FF               	movlw	255
  8844  2376  3DC3               	addwfc	otoa@p+1,f
  8845                           
  8846                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
  8847  2377  30FF               	movlw	255
  8848  2378  07C6               	addwf	otoa@w,f
  8849  2379  30FF               	movlw	255
  8850  237A  3DC7               	addwfc	otoa@w+1,f
  8851                           
  8852                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
  8853  237B  3048               	movlw	low otoa@n
  8854  237C  0086               	movwf	6
  8855  237D  3000               	movlw	high otoa@n
  8856  237E  0087               	movwf	7
  8857  237F  3F40               	moviw [0]fsr1
  8858  2380  00BA               	movwf	??_otoa
  8859  2381  3F41               	moviw [1]fsr1
  8860  2382  00BB               	movwf	??_otoa+1
  8861  2383  3F42               	moviw [2]fsr1
  8862  2384  00BC               	movwf	??_otoa+2
  8863  2385  3F43               	moviw [3]fsr1
  8864  2386  00BD               	movwf	??_otoa+3
  8865  2387  3F44               	moviw [4]fsr1
  8866  2388  00BE               	movwf	??_otoa+4
  8867  2389  3F45               	moviw [5]fsr1
  8868  238A  00BF               	movwf	??_otoa+5
  8869  238B  3F46               	moviw [6]fsr1
  8870  238C  00C0               	movwf	??_otoa+6
  8871  238D  3F47               	moviw [7]fsr1
  8872  238E  00C1               	movwf	??_otoa+7
  8873  238F  3003               	movlw	3
  8874  2390                     u8475:	
  8875  2390  0020               	movlb	0	; select bank0
  8876  2391  36C1               	lsrf	??_otoa+7,f
  8877  2392  0CC0               	rrf	??_otoa+6,f
  8878  2393  0CBF               	rrf	??_otoa+5,f
  8879  2394  0CBE               	rrf	??_otoa+4,f
  8880  2395  0CBD               	rrf	??_otoa+3,f
  8881  2396  0CBC               	rrf	??_otoa+2,f
  8882  2397  0CBB               	rrf	??_otoa+1,f
  8883  2398  0CBA               	rrf	??_otoa,f
  8884  2399  0B89               	decfsz	9,f
  8885  239A  2B90               	goto	u8475
  8886  239B  0020               	movlb	0	; select bank0
  8887  239C  0841               	movf	??_otoa+7,w
  8888  239D  00CF               	movwf	otoa@n+7
  8889  239E  0840               	movf	??_otoa+6,w
  8890  239F  00CE               	movwf	otoa@n+6
  8891  23A0  083F               	movf	??_otoa+5,w
  8892  23A1  00CD               	movwf	otoa@n+5
  8893  23A2  083E               	movf	??_otoa+4,w
  8894  23A3  00CC               	movwf	otoa@n+4
  8895  23A4  083D               	movf	??_otoa+3,w
  8896  23A5  00CB               	movwf	otoa@n+3
  8897  23A6  083C               	movf	??_otoa+2,w
  8898  23A7  00CA               	movwf	otoa@n+2
  8899  23A8  083B               	movf	??_otoa+1,w
  8900  23A9  00C9               	movwf	otoa@n+1
  8901  23AA  083A               	movf	??_otoa,w
  8902  23AB  00C8               	movwf	otoa@n
  8903  23AC                     l693:	
  8904                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 531:     }
  8905                           
  8906                           
  8907                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8908  23AC  0851               	movf	otoa@i+1,w
  8909  23AD  3A80               	xorlw	128
  8910  23AE  00BA               	movwf	??_otoa
  8911  23AF  3080               	movlw	128
  8912  23B0  023A               	subwf	??_otoa,w
  8913  23B1  1D03               	skipz
  8914  23B2  2BB5               	goto	u8485
  8915  23B3  3001               	movlw	1
  8916  23B4  0250               	subwf	otoa@i,w
  8917  23B5                     u8485:	
  8918  23B5  1803               	btfsc	3,0
  8919  23B6  2B39               	goto	l6588
  8920  23B7                     l699:	
  8921                           
  8922                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
  8923  23B7  0022               	movlb	2	; select bank2
  8924  23B8  1E69               	btfss	_flags^(0+256),4
  8925  23B9  2BD0               	goto	l6604
  8926  23BA  0020               	movlb	0	; select bank0
  8927  23BB  0844               	movf	otoa@t,w
  8928  23BC  0445               	iorwf	otoa@t+1,w
  8929  23BD  1903               	btfsc	3,2
  8930  23BE  2BD0               	goto	l6604
  8931                           
  8932                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
  8933  23BF  30FF               	movlw	255
  8934  23C0  07D0               	addwf	otoa@i,f
  8935  23C1  30FF               	movlw	255
  8936  23C2  3DD1               	addwfc	otoa@i+1,f
  8937                           
  8938                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
  8939  23C3  3030               	movlw	48
  8940  23C4  00BA               	movwf	??_otoa
  8941  23C5  0850               	movf	otoa@i,w
  8942  23C6  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8943  23C7  0086               	movwf	6
  8944  23C8  3002               	movlw	2	; select bank4/5
  8945  23C9  0087               	movwf	7
  8946  23CA  083A               	movf	??_otoa,w
  8947  23CB  0081               	movwf	1
  8948                           
  8949                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
  8950  23CC  30FF               	movlw	255
  8951  23CD  07C6               	addwf	otoa@w,f
  8952  23CE  30FF               	movlw	255
  8953  23CF  3DC7               	addwfc	otoa@w+1,f
  8954  23D0                     l6604:	
  8955                           
  8956                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
  8957  23D0  0020               	movlb	0	; select bank0
  8958  23D1  0831               	movf	otoa@fp+1,w
  8959  23D2  00A7               	movwf	pad@fp+1
  8960  23D3  0830               	movf	otoa@fp,w
  8961  23D4  00A6               	movwf	pad@fp
  8962  23D5  0850               	movf	otoa@i,w
  8963  23D6  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8964  23D7  00BA               	movwf	??_otoa
  8965  23D8  083A               	movf	??_otoa,w
  8966  23D9  00A8               	movwf	pad@buf
  8967  23DA  0847               	movf	otoa@w+1,w
  8968  23DB  00AA               	movwf	pad@p+1
  8969  23DC  0846               	movf	otoa@w,w
  8970  23DD  00A9               	movwf	pad@p
  8971  23DE  31B7  275D         	fcall	_pad
  8972  23E0  0020               	movlb	0	; select bank0
  8973  23E1  0827               	movf	?_pad+1,w
  8974  23E2  00B1               	movwf	?_otoa+1
  8975  23E3  0826               	movf	?_pad,w
  8976  23E4  00B0               	movwf	?_otoa
  8977  23E5  0008               	return
  8978  23E6                     __end_of_otoa:	
  8979                           
  8980                           	psect	text19
  8981  18A7                     __ptext19:	
  8982 ;; *************** function _dtoa *****************
  8983 ;; Defined at:
  8984 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8985 ;; Parameters:    Size  Location     Type
  8986 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  8987 ;;		 -> vsnprintf@f(6), 
  8988 ;;  d               8   18[BANK0 ] long long 
  8989 ;; Auto vars:     Size  Location     Type
  8990 ;;  n               8   37[BANK0 ] long long 
  8991 ;;  i               2   45[BANK0 ] int 
  8992 ;;  s               2   35[BANK0 ] int 
  8993 ;;  w               2   33[BANK0 ] int 
  8994 ;;  p               2   31[BANK0 ] int 
  8995 ;; Return value:  Size  Location     Type
  8996 ;;                  2   16[BANK0 ] int 
  8997 ;; Registers used:
  8998 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8999 ;; Tracked objects:
  9000 ;;		On entry : 0/0
  9001 ;;		On exit  : 0/0
  9002 ;;		Unchanged: 0/0
  9003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9004 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9005 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9006 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9007 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9008 ;;Total ram usage:       31 bytes
  9009 ;; Hardware stack levels used:    1
  9010 ;; Hardware stack levels required when called:    5
  9011 ;; This function calls:
  9012 ;;		___aodiv
  9013 ;;		___aomod
  9014 ;;		_abs
  9015 ;;		_pad
  9016 ;; This function is called by:
  9017 ;;		_vfpfcnvrt
  9018 ;; This function uses a non-reentrant model
  9019 ;;
  9020                           
  9021                           
  9022                           ;psect for function _dtoa
  9023  18A7                     _dtoa:	
  9024                           
  9025                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  9026                           
  9027                           ;incstack = 0
  9028                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9029  18A7  0020               	movlb	0	; select bank0
  9030  18A8  0832               	movf	dtoa@d,w
  9031  18A9  00C5               	movwf	dtoa@n
  9032  18AA  0833               	movf	dtoa@d+1,w
  9033  18AB  00C6               	movwf	dtoa@n+1
  9034  18AC  0834               	movf	dtoa@d+2,w
  9035  18AD  00C7               	movwf	dtoa@n+2
  9036  18AE  0835               	movf	dtoa@d+3,w
  9037  18AF  00C8               	movwf	dtoa@n+3
  9038  18B0  0836               	movf	dtoa@d+4,w
  9039  18B1  00C9               	movwf	dtoa@n+4
  9040  18B2  0837               	movf	dtoa@d+5,w
  9041  18B3  00CA               	movwf	dtoa@n+5
  9042  18B4  0838               	movf	dtoa@d+6,w
  9043  18B5  00CB               	movwf	dtoa@n+6
  9044  18B6  0839               	movf	dtoa@d+7,w
  9045  18B7  00CC               	movwf	dtoa@n+7
  9046                           
  9047                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  9048  18B8  3045               	movlw	low dtoa@n
  9049  18B9  0086               	movwf	6
  9050  18BA  3000               	movlw	high dtoa@n
  9051  18BB  0087               	movwf	7
  9052  18BC  3F47               	moviw [7]fsr1
  9053  18BD  00BA               	movwf	??_dtoa
  9054  18BE  1FBA               	btfss	??_dtoa,7
  9055  18BF  28C2               	goto	u8290
  9056  18C0  3001               	movlw	1
  9057  18C1  28C3               	goto	u8300
  9058  18C2                     u8290:	
  9059  18C2  3000               	movlw	0
  9060  18C3                     u8300:	
  9061  18C3  0020               	movlb	0	; select bank0
  9062  18C4  00BB               	movwf	??_dtoa+1
  9063  18C5  01BC               	clrf	??_dtoa+2
  9064  18C6  083B               	movf	??_dtoa+1,w
  9065  18C7  00C3               	movwf	dtoa@s
  9066  18C8  083C               	movf	??_dtoa+2,w
  9067  18C9  00C4               	movwf	dtoa@s+1
  9068                           
  9069                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  9070  18CA  0843               	movf	dtoa@s,w
  9071  18CB  0444               	iorwf	dtoa@s+1,w
  9072  18CC  1903               	btfsc	3,2
  9073  18CD  28EC               	goto	l662
  9074                           
  9075                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  9076  18CE  09C5               	comf	dtoa@n,f
  9077  18CF  09C6               	comf	dtoa@n+1,f
  9078  18D0  09C7               	comf	dtoa@n+2,f
  9079  18D1  09C8               	comf	dtoa@n+3,f
  9080  18D2  09C9               	comf	dtoa@n+4,f
  9081  18D3  09CA               	comf	dtoa@n+5,f
  9082  18D4  09CB               	comf	dtoa@n+6,f
  9083  18D5  09CC               	comf	dtoa@n+7,f
  9084  18D6  0AC5               	incf	dtoa@n,f
  9085  18D7  1D03               	skipz
  9086  18D8  28EC               	goto	l662
  9087  18D9  0AC6               	incf	dtoa@n+1,f
  9088  18DA  1D03               	skipz
  9089  18DB  28EC               	goto	l662
  9090  18DC  0AC7               	incf	dtoa@n+2,f
  9091  18DD  1D03               	skipz
  9092  18DE  28EC               	goto	l662
  9093  18DF  0AC8               	incf	dtoa@n+3,f
  9094  18E0  1D03               	skipz
  9095  18E1  28EC               	goto	l662
  9096  18E2  0AC9               	incf	dtoa@n+4,f
  9097  18E3  1D03               	skipz
  9098  18E4  28EC               	goto	l662
  9099  18E5  0ACA               	incf	dtoa@n+5,f
  9100  18E6  1D03               	skipz
  9101  18E7  28EC               	goto	l662
  9102  18E8  0ACB               	incf	dtoa@n+6,f
  9103  18E9  1D03               	skipz
  9104  18EA  28EC               	goto	l662
  9105  18EB  0ACC               	incf	dtoa@n+7,f
  9106  18EC                     l662:	
  9107                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
  9108                           
  9109                           
  9110                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  9111  18EC  0022               	movlb	2	; select bank2
  9112  18ED  1BE8               	btfsc	(_prec+1)^(0+256),7
  9113  18EE  28F3               	goto	l663
  9114                           
  9115                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  9116  18EF  30FD               	movlw	253
  9117  18F0  05E9               	andwf	_flags^(0+256),f
  9118  18F1  30FF               	movlw	255
  9119  18F2  05EA               	andwf	(_flags+1)^(0+256),f
  9120  18F3                     l663:	
  9121                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
  9122                           
  9123                           
  9124                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  9125  18F3  0868               	movf	(_prec+1)^(0+256),w
  9126  18F4  3A80               	xorlw	128
  9127  18F5  0020               	movlb	0	; select bank0
  9128  18F6  00BA               	movwf	??_dtoa
  9129  18F7  3080               	movlw	128
  9130  18F8  023A               	subwf	??_dtoa,w
  9131  18F9  1D03               	skipz
  9132  18FA  28FE               	goto	u8345
  9133  18FB  3001               	movlw	1
  9134  18FC  0022               	movlb	2	; select bank2
  9135  18FD  0267               	subwf	_prec^(0+256),w
  9136  18FE                     u8345:	
  9137  18FE  1803               	skipnc
  9138  18FF  2906               	goto	l6518
  9139  1900  3001               	movlw	1
  9140  1901  0020               	movlb	0	; select bank0
  9141  1902  00BF               	movwf	dtoa@p
  9142  1903  3000               	movlw	0
  9143  1904  00C0               	movwf	dtoa@p+1
  9144  1905  290E               	goto	l667
  9145  1906                     l6518:	
  9146  1906  0022               	movlb	2	; select bank2
  9147  1907  0868               	movf	(_prec+1)^(0+256),w
  9148  1908  0020               	movlb	0	; select bank0
  9149  1909  00C0               	movwf	dtoa@p+1
  9150  190A  0022               	movlb	2	; select bank2
  9151  190B  0867               	movf	_prec^(0+256),w
  9152  190C  0020               	movlb	0	; select bank0
  9153  190D  00BF               	movwf	dtoa@p
  9154  190E                     l667:	
  9155                           
  9156                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  9157  190E  0022               	movlb	2	; select bank2
  9158  190F  0866               	movf	(_width+1)^(0+256),w
  9159  1910  0020               	movlb	0	; select bank0
  9160  1911  00C2               	movwf	dtoa@w+1
  9161  1912  0022               	movlb	2	; select bank2
  9162  1913  0865               	movf	_width^(0+256),w
  9163  1914  0020               	movlb	0	; select bank0
  9164  1915  00C1               	movwf	dtoa@w
  9165                           
  9166                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  9167  1916  0843               	movf	dtoa@s,w
  9168  1917  0444               	iorwf	dtoa@s+1,w
  9169  1918  1D03               	btfss	3,2
  9170  1919  291D               	goto	l6524
  9171  191A  0022               	movlb	2	; select bank2
  9172  191B  1D69               	btfss	_flags^(0+256),2
  9173  191C  2922               	goto	l668
  9174  191D                     l6524:	
  9175                           
  9176                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  9177  191D  30FF               	movlw	255
  9178  191E  0020               	movlb	0	; select bank0
  9179  191F  07C1               	addwf	dtoa@w,f
  9180  1920  30FF               	movlw	255
  9181  1921  3DC2               	addwfc	dtoa@w+1,f
  9182  1922                     l668:	
  9183                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
  9184                           
  9185                           
  9186                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  9187  1922  301F               	movlw	31
  9188  1923  0020               	movlb	0	; select bank0
  9189  1924  00CD               	movwf	dtoa@i
  9190  1925  3000               	movlw	0
  9191  1926  00CE               	movwf	dtoa@i+1
  9192                           
  9193                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  9194  1927  0024               	movlb	4	; select bank4
  9195  1928  01BF               	clrf	(_dbuf^(0+512)+31)
  9196                           
  9197                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9198  1929  29B8               	goto	l671
  9199  192A                     l6538:	
  9200  192A  0020               	movlb	0	; select bank0
  9201  192B  0845               	movf	dtoa@n,w
  9202  192C  0446               	iorwf	dtoa@n+1,w
  9203  192D  0447               	iorwf	dtoa@n+2,w
  9204  192E  0448               	iorwf	dtoa@n+3,w
  9205  192F  0449               	iorwf	dtoa@n+4,w
  9206  1930  044A               	iorwf	dtoa@n+5,w
  9207  1931  044B               	iorwf	dtoa@n+6,w
  9208  1932  044C               	iorwf	dtoa@n+7,w
  9209  1933  1D03               	skipz
  9210  1934  294F               	goto	l6528
  9211  1935  0840               	movf	dtoa@p+1,w
  9212  1936  3A80               	xorlw	128
  9213  1937  00BA               	movwf	??_dtoa
  9214  1938  3080               	movlw	128
  9215  1939  023A               	subwf	??_dtoa,w
  9216  193A  1D03               	skipz
  9217  193B  293E               	goto	u8395
  9218  193C  3001               	movlw	1
  9219  193D  023F               	subwf	dtoa@p,w
  9220  193E                     u8395:	
  9221  193E  1803               	skipnc
  9222  193F  294F               	goto	l6528
  9223  1940  0020               	movlb	0	; select bank0
  9224  1941  0842               	movf	dtoa@w+1,w
  9225  1942  3A80               	xorlw	128
  9226  1943  00BA               	movwf	??_dtoa
  9227  1944  3080               	movlw	128
  9228  1945  023A               	subwf	??_dtoa,w
  9229  1946  1D03               	skipz
  9230  1947  294A               	goto	u8405
  9231  1948  3001               	movlw	1
  9232  1949  0241               	subwf	dtoa@w,w
  9233  194A                     u8405:	
  9234  194A  1C03               	skipc
  9235  194B  29C4               	goto	l6546
  9236  194C  0022               	movlb	2	; select bank2
  9237  194D  1CE9               	btfss	_flags^(0+256),1
  9238  194E  29C4               	goto	l6546
  9239  194F                     l6528:	
  9240                           
  9241                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  9242  194F  30FF               	movlw	255
  9243  1950  0020               	movlb	0	; select bank0
  9244  1951  07CD               	addwf	dtoa@i,f
  9245  1952  30FF               	movlw	255
  9246  1953  3DCE               	addwfc	dtoa@i+1,f
  9247                           
  9248                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  9249  1954  300A               	movlw	10
  9250  1955  00A0               	movwf	___aomod@divisor
  9251  1956  01A1               	clrf	___aomod@divisor+1
  9252  1957  01A2               	clrf	___aomod@divisor+2
  9253  1958  01A3               	clrf	___aomod@divisor+3
  9254  1959  01A4               	clrf	___aomod@divisor+4
  9255  195A  01A5               	clrf	___aomod@divisor+5
  9256  195B  01A6               	clrf	___aomod@divisor+6
  9257  195C  01A7               	clrf	___aomod@divisor+7
  9258  195D  0845               	movf	dtoa@n,w
  9259  195E  00A8               	movwf	___aomod@dividend
  9260  195F  0846               	movf	dtoa@n+1,w
  9261  1960  00A9               	movwf	___aomod@dividend+1
  9262  1961  0847               	movf	dtoa@n+2,w
  9263  1962  00AA               	movwf	___aomod@dividend+2
  9264  1963  0848               	movf	dtoa@n+3,w
  9265  1964  00AB               	movwf	___aomod@dividend+3
  9266  1965  0849               	movf	dtoa@n+4,w
  9267  1966  00AC               	movwf	___aomod@dividend+4
  9268  1967  084A               	movf	dtoa@n+5,w
  9269  1968  00AD               	movwf	___aomod@dividend+5
  9270  1969  084B               	movf	dtoa@n+6,w
  9271  196A  00AE               	movwf	___aomod@dividend+6
  9272  196B  084C               	movf	dtoa@n+7,w
  9273  196C  00AF               	movwf	___aomod@dividend+7
  9274  196D  31A1  2138  3198   	fcall	___aomod
  9275  1970  0020               	movlb	0	; select bank0
  9276  1971  0821               	movf	?___aomod+1,w
  9277  1972  00F5               	movwf	abs@a+1
  9278  1973  0820               	movf	?___aomod,w
  9279  1974  00F4               	movwf	abs@a
  9280  1975  31B4  2415  3198   	fcall	_abs
  9281  1978  0874               	movf	?_abs,w
  9282  1979  3E30               	addlw	48
  9283  197A  0020               	movlb	0	; select bank0
  9284  197B  00BA               	movwf	??_dtoa
  9285  197C  084D               	movf	dtoa@i,w
  9286  197D  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9287  197E  0086               	movwf	6
  9288  197F  3002               	movlw	2	; select bank4/5
  9289  1980  0087               	movwf	7
  9290  1981  083A               	movf	??_dtoa,w
  9291  1982  0081               	movwf	1
  9292                           
  9293                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  9294  1983  30FF               	movlw	255
  9295  1984  07BF               	addwf	dtoa@p,f
  9296  1985  30FF               	movlw	255
  9297  1986  3DC0               	addwfc	dtoa@p+1,f
  9298                           
  9299                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  9300  1987  30FF               	movlw	255
  9301  1988  07C1               	addwf	dtoa@w,f
  9302  1989  30FF               	movlw	255
  9303  198A  3DC2               	addwfc	dtoa@w+1,f
  9304                           
  9305                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  9306  198B  300A               	movlw	10
  9307  198C  00A0               	movwf	___aodiv@divisor
  9308  198D  01A1               	clrf	___aodiv@divisor+1
  9309  198E  01A2               	clrf	___aodiv@divisor+2
  9310  198F  01A3               	clrf	___aodiv@divisor+3
  9311  1990  01A4               	clrf	___aodiv@divisor+4
  9312  1991  01A5               	clrf	___aodiv@divisor+5
  9313  1992  01A6               	clrf	___aodiv@divisor+6
  9314  1993  01A7               	clrf	___aodiv@divisor+7
  9315  1994  0845               	movf	dtoa@n,w
  9316  1995  00A8               	movwf	___aodiv@dividend
  9317  1996  0846               	movf	dtoa@n+1,w
  9318  1997  00A9               	movwf	___aodiv@dividend+1
  9319  1998  0847               	movf	dtoa@n+2,w
  9320  1999  00AA               	movwf	___aodiv@dividend+2
  9321  199A  0848               	movf	dtoa@n+3,w
  9322  199B  00AB               	movwf	___aodiv@dividend+3
  9323  199C  0849               	movf	dtoa@n+4,w
  9324  199D  00AC               	movwf	___aodiv@dividend+4
  9325  199E  084A               	movf	dtoa@n+5,w
  9326  199F  00AD               	movwf	___aodiv@dividend+5
  9327  19A0  084B               	movf	dtoa@n+6,w
  9328  19A1  00AE               	movwf	___aodiv@dividend+6
  9329  19A2  084C               	movf	dtoa@n+7,w
  9330  19A3  00AF               	movwf	___aodiv@dividend+7
  9331  19A4  31A3  23E6  3198   	fcall	___aodiv
  9332  19A7  0020               	movlb	0	; select bank0
  9333  19A8  0820               	movf	?___aodiv,w
  9334  19A9  00C5               	movwf	dtoa@n
  9335  19AA  0821               	movf	?___aodiv+1,w
  9336  19AB  00C6               	movwf	dtoa@n+1
  9337  19AC  0822               	movf	?___aodiv+2,w
  9338  19AD  00C7               	movwf	dtoa@n+2
  9339  19AE  0823               	movf	?___aodiv+3,w
  9340  19AF  00C8               	movwf	dtoa@n+3
  9341  19B0  0824               	movf	?___aodiv+4,w
  9342  19B1  00C9               	movwf	dtoa@n+4
  9343  19B2  0825               	movf	?___aodiv+5,w
  9344  19B3  00CA               	movwf	dtoa@n+5
  9345  19B4  0826               	movf	?___aodiv+6,w
  9346  19B5  00CB               	movwf	dtoa@n+6
  9347  19B6  0827               	movf	?___aodiv+7,w
  9348  19B7  00CC               	movwf	dtoa@n+7
  9349  19B8                     l671:	
  9350                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
  9351                           
  9352                           
  9353                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9354  19B8  0020               	movlb	0	; select bank0
  9355  19B9  084E               	movf	dtoa@i+1,w
  9356  19BA  3A80               	xorlw	128
  9357  19BB  00BA               	movwf	??_dtoa
  9358  19BC  3080               	movlw	128
  9359  19BD  023A               	subwf	??_dtoa,w
  9360  19BE  1D03               	skipz
  9361  19BF  29C2               	goto	u8375
  9362  19C0  3001               	movlw	1
  9363  19C1  024D               	subwf	dtoa@i,w
  9364  19C2                     u8375:	
  9365  19C2  1803               	btfsc	3,0
  9366  19C3  292A               	goto	l6538
  9367  19C4                     l6546:	
  9368                           
  9369                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  9370  19C4  0020               	movlb	0	; select bank0
  9371  19C5  0843               	movf	dtoa@s,w
  9372  19C6  0444               	iorwf	dtoa@s+1,w
  9373  19C7  1D03               	btfss	3,2
  9374  19C8  29CC               	goto	l6550
  9375  19C9  0022               	movlb	2	; select bank2
  9376  19CA  1D69               	btfss	_flags^(0+256),2
  9377  19CB  29E4               	goto	l6560
  9378  19CC                     l6550:	
  9379                           
  9380                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  9381  19CC  30FF               	movlw	255
  9382  19CD  0020               	movlb	0	; select bank0
  9383  19CE  07CD               	addwf	dtoa@i,f
  9384  19CF  30FF               	movlw	255
  9385  19D0  3DCE               	addwfc	dtoa@i+1,f
  9386                           
  9387                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  9388  19D1  0843               	movf	dtoa@s,w
  9389  19D2  0444               	iorwf	dtoa@s+1,w
  9390  19D3  1D03               	btfss	3,2
  9391  19D4  29D7               	goto	l6556
  9392  19D5  302B               	movlw	43
  9393  19D6  29D8               	goto	L2
  9394  19D7                     l6556:	
  9395  19D7  302D               	movlw	45
  9396  19D8                     L2:	
  9397  19D8  00BD               	movwf	_dtoa$1206
  9398  19D9  3000               	movlw	0
  9399  19DA  00BE               	movwf	_dtoa$1206+1
  9400  19DB  083D               	movf	_dtoa$1206,w
  9401  19DC  00BA               	movwf	??_dtoa
  9402  19DD  084D               	movf	dtoa@i,w
  9403  19DE  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9404  19DF  0086               	movwf	6
  9405  19E0  3002               	movlw	2	; select bank4/5
  9406  19E1  0087               	movwf	7
  9407  19E2  083A               	movf	??_dtoa,w
  9408  19E3  0081               	movwf	1
  9409  19E4                     l6560:	
  9410                           
  9411                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  9412  19E4  0020               	movlb	0	; select bank0
  9413  19E5  0831               	movf	dtoa@fp+1,w
  9414  19E6  00A7               	movwf	pad@fp+1
  9415  19E7  0830               	movf	dtoa@fp,w
  9416  19E8  00A6               	movwf	pad@fp
  9417  19E9  084D               	movf	dtoa@i,w
  9418  19EA  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9419  19EB  00BA               	movwf	??_dtoa
  9420  19EC  083A               	movf	??_dtoa,w
  9421  19ED  00A8               	movwf	pad@buf
  9422  19EE  0842               	movf	dtoa@w+1,w
  9423  19EF  00AA               	movwf	pad@p+1
  9424  19F0  0841               	movf	dtoa@w,w
  9425  19F1  00A9               	movwf	pad@p
  9426  19F2  31B7  275D         	fcall	_pad
  9427  19F4  0020               	movlb	0	; select bank0
  9428  19F5  0827               	movf	?_pad+1,w
  9429  19F6  00B1               	movwf	?_dtoa+1
  9430  19F7  0826               	movf	?_pad,w
  9431  19F8  00B0               	movwf	?_dtoa
  9432  19F9  0008               	return
  9433  19FA                     __end_of_dtoa:	
  9434                           
  9435                           	psect	text20
  9436  3415                     __ptext20:	
  9437 ;; *************** function _abs *****************
  9438 ;; Defined at:
  9439 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  9440 ;; Parameters:    Size  Location     Type
  9441 ;;  a               2    4[COMMON] int 
  9442 ;; Auto vars:     Size  Location     Type
  9443 ;;		None
  9444 ;; Return value:  Size  Location     Type
  9445 ;;                  2    4[COMMON] int 
  9446 ;; Registers used:
  9447 ;;		wreg, status,2, status,0
  9448 ;; Tracked objects:
  9449 ;;		On entry : 0/0
  9450 ;;		On exit  : 0/0
  9451 ;;		Unchanged: 0/0
  9452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9453 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9455 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9456 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9457 ;;Total ram usage:        4 bytes
  9458 ;; Hardware stack levels used:    1
  9459 ;; Hardware stack levels required when called:    1
  9460 ;; This function calls:
  9461 ;;		Nothing
  9462 ;; This function is called by:
  9463 ;;		_dtoa
  9464 ;; This function uses a non-reentrant model
  9465 ;;
  9466                           
  9467                           
  9468                           ;psect for function _abs
  9469  3415                     _abs:	
  9470                           
  9471                           ;incstack = 0
  9472                           ; Regs used in _abs: [wreg+status,2+status,0]
  9473  3415  0875               	movf	abs@a+1,w
  9474  3416  3A80               	xorlw	128
  9475  3417  00F6               	movwf	??_abs
  9476  3418  3080               	movlw	128
  9477  3419  0276               	subwf	??_abs,w
  9478  341A  1D03               	skipz
  9479  341B  2C1E               	goto	u7825
  9480  341C  3001               	movlw	1
  9481  341D  0274               	subwf	abs@a,w
  9482  341E                     u7825:	
  9483  341E  1803               	skipnc
  9484  341F  0008               	return
  9485  3420  0974               	comf	abs@a,w
  9486  3421  00F6               	movwf	??_abs
  9487  3422  0975               	comf	abs@a+1,w
  9488  3423  00F7               	movwf	??_abs+1
  9489  3424  0AF6               	incf	??_abs,f
  9490  3425  1903               	skipnz
  9491  3426  0AF7               	incf	??_abs+1,f
  9492  3427  0876               	movf	??_abs,w
  9493  3428  00F4               	movwf	?_abs
  9494  3429  0877               	movf	??_abs+1,w
  9495  342A  00F5               	movwf	?_abs+1
  9496  342B  0008               	return
  9497  342C                     __end_of_abs:	
  9498                           
  9499                           	psect	text21
  9500  2138                     __ptext21:	
  9501 ;; *************** function ___aomod *****************
  9502 ;; Defined at:
  9503 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  9504 ;; Parameters:    Size  Location     Type
  9505 ;;  divisor         8    0[BANK0 ] long long 
  9506 ;;  dividend        8    8[BANK0 ] long long 
  9507 ;; Auto vars:     Size  Location     Type
  9508 ;;  sign            1    3[COMMON] unsigned char 
  9509 ;;  counter         1    2[COMMON] unsigned char 
  9510 ;; Return value:  Size  Location     Type
  9511 ;;                  8    0[BANK0 ] long long 
  9512 ;; Registers used:
  9513 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9514 ;; Tracked objects:
  9515 ;;		On entry : 0/0
  9516 ;;		On exit  : 0/0
  9517 ;;		Unchanged: 0/0
  9518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9519 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9520 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9521 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9522 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9523 ;;Total ram usage:       19 bytes
  9524 ;; Hardware stack levels used:    1
  9525 ;; Hardware stack levels required when called:    1
  9526 ;; This function calls:
  9527 ;;		Nothing
  9528 ;; This function is called by:
  9529 ;;		_dtoa
  9530 ;; This function uses a non-reentrant model
  9531 ;;
  9532                           
  9533                           
  9534                           ;psect for function ___aomod
  9535  2138                     ___aomod:	
  9536                           
  9537                           ;incstack = 0
  9538                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  9539  2138  01F3               	clrf	___aomod@sign
  9540  2139  3028               	movlw	low ___aomod@dividend
  9541  213A  0086               	movwf	6
  9542  213B  3000               	movlw	high ___aomod@dividend
  9543  213C  0087               	movwf	7
  9544  213D  3F47               	moviw [7]fsr1
  9545  213E  00F1               	movwf	??___aomod
  9546  213F  1FF1               	btfss	??___aomod,7
  9547  2140  2962               	goto	l6418
  9548  2141  0020               	movlb	0	; select bank0
  9549  2142  09A8               	comf	___aomod@dividend,f
  9550  2143  09A9               	comf	___aomod@dividend+1,f
  9551  2144  09AA               	comf	___aomod@dividend+2,f
  9552  2145  09AB               	comf	___aomod@dividend+3,f
  9553  2146  09AC               	comf	___aomod@dividend+4,f
  9554  2147  09AD               	comf	___aomod@dividend+5,f
  9555  2148  09AE               	comf	___aomod@dividend+6,f
  9556  2149  09AF               	comf	___aomod@dividend+7,f
  9557  214A  0AA8               	incf	___aomod@dividend,f
  9558  214B  1D03               	skipz
  9559  214C  2960               	goto	u808lld
  9560  214D  0AA9               	incf	___aomod@dividend+1,f
  9561  214E  1D03               	skipz
  9562  214F  2960               	goto	u808lld
  9563  2150  0AAA               	incf	___aomod@dividend+2,f
  9564  2151  1D03               	skipz
  9565  2152  2960               	goto	u808lld
  9566  2153  0AAB               	incf	___aomod@dividend+3,f
  9567  2154  1D03               	skipz
  9568  2155  2960               	goto	u808lld
  9569  2156  0AAC               	incf	___aomod@dividend+4,f
  9570  2157  1D03               	skipz
  9571  2158  2960               	goto	u808lld
  9572  2159  0AAD               	incf	___aomod@dividend+5,f
  9573  215A  1D03               	skipz
  9574  215B  2960               	goto	u808lld
  9575  215C  0AAE               	incf	___aomod@dividend+6,f
  9576  215D  1D03               	skipz
  9577  215E  2960               	goto	u808lld
  9578  215F  0AAF               	incf	___aomod@dividend+7,f
  9579  2160                     u808lld:	
  9580  2160  01F3               	clrf	___aomod@sign
  9581  2161  0AF3               	incf	___aomod@sign,f
  9582  2162                     l6418:	
  9583  2162  3020               	movlw	low ___aomod@divisor
  9584  2163  0086               	movwf	6
  9585  2164  3000               	movlw	high ___aomod@divisor
  9586  2165  0087               	movwf	7
  9587  2166  3F47               	moviw [7]fsr1
  9588  2167  00F1               	movwf	??___aomod
  9589  2168  1FF1               	btfss	??___aomod,7
  9590  2169  2989               	goto	l6422
  9591  216A  0020               	movlb	0	; select bank0
  9592  216B  09A0               	comf	___aomod@divisor,f
  9593  216C  09A1               	comf	___aomod@divisor+1,f
  9594  216D  09A2               	comf	___aomod@divisor+2,f
  9595  216E  09A3               	comf	___aomod@divisor+3,f
  9596  216F  09A4               	comf	___aomod@divisor+4,f
  9597  2170  09A5               	comf	___aomod@divisor+5,f
  9598  2171  09A6               	comf	___aomod@divisor+6,f
  9599  2172  09A7               	comf	___aomod@divisor+7,f
  9600  2173  0AA0               	incf	___aomod@divisor,f
  9601  2174  1D03               	skipz
  9602  2175  2989               	goto	l6422
  9603  2176  0AA1               	incf	___aomod@divisor+1,f
  9604  2177  1D03               	skipz
  9605  2178  2989               	goto	l6422
  9606  2179  0AA2               	incf	___aomod@divisor+2,f
  9607  217A  1D03               	skipz
  9608  217B  2989               	goto	l6422
  9609  217C  0AA3               	incf	___aomod@divisor+3,f
  9610  217D  1D03               	skipz
  9611  217E  2989               	goto	l6422
  9612  217F  0AA4               	incf	___aomod@divisor+4,f
  9613  2180  1D03               	skipz
  9614  2181  2989               	goto	l6422
  9615  2182  0AA5               	incf	___aomod@divisor+5,f
  9616  2183  1D03               	skipz
  9617  2184  2989               	goto	l6422
  9618  2185  0AA6               	incf	___aomod@divisor+6,f
  9619  2186  1D03               	skipz
  9620  2187  2989               	goto	l6422
  9621  2188  0AA7               	incf	___aomod@divisor+7,f
  9622  2189                     l6422:	
  9623  2189  0020               	movlb	0	; select bank0
  9624  218A  0820               	movf	___aomod@divisor,w
  9625  218B  0421               	iorwf	___aomod@divisor+1,w
  9626  218C  0422               	iorwf	___aomod@divisor+2,w
  9627  218D  0423               	iorwf	___aomod@divisor+3,w
  9628  218E  0424               	iorwf	___aomod@divisor+4,w
  9629  218F  0425               	iorwf	___aomod@divisor+5,w
  9630  2190  0426               	iorwf	___aomod@divisor+6,w
  9631  2191  0427               	iorwf	___aomod@divisor+7,w
  9632  2192  1903               	skipnz
  9633  2193  29E1               	goto	l6438
  9634  2194  01F2               	clrf	___aomod@counter
  9635  2195  0AF2               	incf	___aomod@counter,f
  9636  2196                     l6430:	
  9637  2196  1BA7               	btfsc	___aomod@divisor+7,7
  9638  2197  29A5               	goto	l6432
  9639  2198  35A0               	lslf	___aomod@divisor,f
  9640  2199  0DA1               	rlf	___aomod@divisor+1,f
  9641  219A  0DA2               	rlf	___aomod@divisor+2,f
  9642  219B  0DA3               	rlf	___aomod@divisor+3,f
  9643  219C  0DA4               	rlf	___aomod@divisor+4,f
  9644  219D  0DA5               	rlf	___aomod@divisor+5,f
  9645  219E  0DA6               	rlf	___aomod@divisor+6,f
  9646  219F  0DA7               	rlf	___aomod@divisor+7,f
  9647  21A0  3001               	movlw	1
  9648  21A1  00F1               	movwf	??___aomod
  9649  21A2  0871               	movf	??___aomod,w
  9650  21A3  07F2               	addwf	___aomod@counter,f
  9651  21A4  2996               	goto	l6430
  9652  21A5                     l6432:	
  9653  21A5  0827               	movf	___aomod@divisor+7,w
  9654  21A6  022F               	subwf	___aomod@dividend+7,w
  9655  21A7  1D03               	skipz
  9656  21A8  29C3               	goto	u8135
  9657  21A9  0826               	movf	___aomod@divisor+6,w
  9658  21AA  022E               	subwf	___aomod@dividend+6,w
  9659  21AB  1D03               	skipz
  9660  21AC  29C3               	goto	u8135
  9661  21AD  0825               	movf	___aomod@divisor+5,w
  9662  21AE  022D               	subwf	___aomod@dividend+5,w
  9663  21AF  1D03               	skipz
  9664  21B0  29C3               	goto	u8135
  9665  21B1  0824               	movf	___aomod@divisor+4,w
  9666  21B2  022C               	subwf	___aomod@dividend+4,w
  9667  21B3  1D03               	skipz
  9668  21B4  29C3               	goto	u8135
  9669  21B5  0823               	movf	___aomod@divisor+3,w
  9670  21B6  022B               	subwf	___aomod@dividend+3,w
  9671  21B7  1D03               	skipz
  9672  21B8  29C3               	goto	u8135
  9673  21B9  0822               	movf	___aomod@divisor+2,w
  9674  21BA  022A               	subwf	___aomod@dividend+2,w
  9675  21BB  1D03               	skipz
  9676  21BC  29C3               	goto	u8135
  9677  21BD  0821               	movf	___aomod@divisor+1,w
  9678  21BE  0229               	subwf	___aomod@dividend+1,w
  9679  21BF  1D03               	skipz
  9680  21C0  29C3               	goto	u8135
  9681  21C1  0820               	movf	___aomod@divisor,w
  9682  21C2  0228               	subwf	___aomod@dividend,w
  9683  21C3                     u8135:	
  9684  21C3  1C03               	skipc
  9685  21C4  29D5               	goto	l6436
  9686  21C5  0820               	movf	___aomod@divisor,w
  9687  21C6  02A8               	subwf	___aomod@dividend,f
  9688  21C7  0821               	movf	___aomod@divisor+1,w
  9689  21C8  3BA9               	subwfb	___aomod@dividend+1,f
  9690  21C9  0822               	movf	___aomod@divisor+2,w
  9691  21CA  3BAA               	subwfb	___aomod@dividend+2,f
  9692  21CB  0823               	movf	___aomod@divisor+3,w
  9693  21CC  3BAB               	subwfb	___aomod@dividend+3,f
  9694  21CD  0824               	movf	___aomod@divisor+4,w
  9695  21CE  3BAC               	subwfb	___aomod@dividend+4,f
  9696  21CF  0825               	movf	___aomod@divisor+5,w
  9697  21D0  3BAD               	subwfb	___aomod@dividend+5,f
  9698  21D1  0826               	movf	___aomod@divisor+6,w
  9699  21D2  3BAE               	subwfb	___aomod@dividend+6,f
  9700  21D3  0827               	movf	___aomod@divisor+7,w
  9701  21D4  3BAF               	subwfb	___aomod@dividend+7,f
  9702  21D5                     l6436:	
  9703  21D5  36A7               	lsrf	___aomod@divisor+7,f
  9704  21D6  0CA6               	rrf	___aomod@divisor+6,f
  9705  21D7  0CA5               	rrf	___aomod@divisor+5,f
  9706  21D8  0CA4               	rrf	___aomod@divisor+4,f
  9707  21D9  0CA3               	rrf	___aomod@divisor+3,f
  9708  21DA  0CA2               	rrf	___aomod@divisor+2,f
  9709  21DB  0CA1               	rrf	___aomod@divisor+1,f
  9710  21DC  0CA0               	rrf	___aomod@divisor,f
  9711  21DD  3001               	movlw	1
  9712  21DE  02F2               	subwf	___aomod@counter,f
  9713  21DF  1D03               	btfss	3,2
  9714  21E0  29A5               	goto	l6432
  9715  21E1                     l6438:	
  9716  21E1  0873               	movf	___aomod@sign,w
  9717  21E2  1903               	btfsc	3,2
  9718  21E3  2A02               	goto	l968
  9719  21E4  09A8               	comf	___aomod@dividend,f
  9720  21E5  09A9               	comf	___aomod@dividend+1,f
  9721  21E6  09AA               	comf	___aomod@dividend+2,f
  9722  21E7  09AB               	comf	___aomod@dividend+3,f
  9723  21E8  09AC               	comf	___aomod@dividend+4,f
  9724  21E9  09AD               	comf	___aomod@dividend+5,f
  9725  21EA  09AE               	comf	___aomod@dividend+6,f
  9726  21EB  09AF               	comf	___aomod@dividend+7,f
  9727  21EC  0AA8               	incf	___aomod@dividend,f
  9728  21ED  1D03               	skipz
  9729  21EE  2A02               	goto	l968
  9730  21EF  0AA9               	incf	___aomod@dividend+1,f
  9731  21F0  1D03               	skipz
  9732  21F1  2A02               	goto	l968
  9733  21F2  0AAA               	incf	___aomod@dividend+2,f
  9734  21F3  1D03               	skipz
  9735  21F4  2A02               	goto	l968
  9736  21F5  0AAB               	incf	___aomod@dividend+3,f
  9737  21F6  1D03               	skipz
  9738  21F7  2A02               	goto	l968
  9739  21F8  0AAC               	incf	___aomod@dividend+4,f
  9740  21F9  1D03               	skipz
  9741  21FA  2A02               	goto	l968
  9742  21FB  0AAD               	incf	___aomod@dividend+5,f
  9743  21FC  1D03               	skipz
  9744  21FD  2A02               	goto	l968
  9745  21FE  0AAE               	incf	___aomod@dividend+6,f
  9746  21FF  1D03               	skipz
  9747  2200  2A02               	goto	l968
  9748  2201  0AAF               	incf	___aomod@dividend+7,f
  9749  2202                     l968:	
  9750  2202  0020               	movlb	0	; select bank0
  9751  2203  0828               	movf	___aomod@dividend,w
  9752  2204  00A0               	movwf	?___aomod
  9753  2205  0829               	movf	___aomod@dividend+1,w
  9754  2206  00A1               	movwf	?___aomod+1
  9755  2207  082A               	movf	___aomod@dividend+2,w
  9756  2208  00A2               	movwf	?___aomod+2
  9757  2209  082B               	movf	___aomod@dividend+3,w
  9758  220A  00A3               	movwf	?___aomod+3
  9759  220B  082C               	movf	___aomod@dividend+4,w
  9760  220C  00A4               	movwf	?___aomod+4
  9761  220D  082D               	movf	___aomod@dividend+5,w
  9762  220E  00A5               	movwf	?___aomod+5
  9763  220F  082E               	movf	___aomod@dividend+6,w
  9764  2210  00A6               	movwf	?___aomod+6
  9765  2211  082F               	movf	___aomod@dividend+7,w
  9766  2212  00A7               	movwf	?___aomod+7
  9767  2213  0008               	return
  9768  2214                     __end_of___aomod:	
  9769                           
  9770                           	psect	text22
  9771  23E6                     __ptext22:	
  9772 ;; *************** function ___aodiv *****************
  9773 ;; Defined at:
  9774 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  9775 ;; Parameters:    Size  Location     Type
  9776 ;;  divisor         8    0[BANK0 ] long long 
  9777 ;;  dividend        8    8[BANK0 ] long long 
  9778 ;; Auto vars:     Size  Location     Type
  9779 ;;  quotient        8    4[COMMON] long long 
  9780 ;;  sign            1    3[COMMON] unsigned char 
  9781 ;;  counter         1    2[COMMON] unsigned char 
  9782 ;; Return value:  Size  Location     Type
  9783 ;;                  8    0[BANK0 ] long long 
  9784 ;; Registers used:
  9785 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9786 ;; Tracked objects:
  9787 ;;		On entry : 0/0
  9788 ;;		On exit  : 0/0
  9789 ;;		Unchanged: 0/0
  9790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9791 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9792 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9793 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9794 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9795 ;;Total ram usage:       27 bytes
  9796 ;; Hardware stack levels used:    1
  9797 ;; Hardware stack levels required when called:    1
  9798 ;; This function calls:
  9799 ;;		Nothing
  9800 ;; This function is called by:
  9801 ;;		_dtoa
  9802 ;; This function uses a non-reentrant model
  9803 ;;
  9804                           
  9805                           
  9806                           ;psect for function ___aodiv
  9807  23E6                     ___aodiv:	
  9808                           
  9809                           ;incstack = 0
  9810                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  9811  23E6  01F3               	clrf	___aodiv@sign
  9812  23E7  3020               	movlw	low ___aodiv@divisor
  9813  23E8  0086               	movwf	6
  9814  23E9  3000               	movlw	high ___aodiv@divisor
  9815  23EA  0087               	movwf	7
  9816  23EB  3F47               	moviw [7]fsr1
  9817  23EC  00F1               	movwf	??___aodiv
  9818  23ED  1FF1               	btfss	??___aodiv,7
  9819  23EE  2C10               	goto	l6380
  9820  23EF  0020               	movlb	0	; select bank0
  9821  23F0  09A0               	comf	___aodiv@divisor,f
  9822  23F1  09A1               	comf	___aodiv@divisor+1,f
  9823  23F2  09A2               	comf	___aodiv@divisor+2,f
  9824  23F3  09A3               	comf	___aodiv@divisor+3,f
  9825  23F4  09A4               	comf	___aodiv@divisor+4,f
  9826  23F5  09A5               	comf	___aodiv@divisor+5,f
  9827  23F6  09A6               	comf	___aodiv@divisor+6,f
  9828  23F7  09A7               	comf	___aodiv@divisor+7,f
  9829  23F8  0AA0               	incf	___aodiv@divisor,f
  9830  23F9  1D03               	skipz
  9831  23FA  2C0E               	goto	u797lld
  9832  23FB  0AA1               	incf	___aodiv@divisor+1,f
  9833  23FC  1D03               	skipz
  9834  23FD  2C0E               	goto	u797lld
  9835  23FE  0AA2               	incf	___aodiv@divisor+2,f
  9836  23FF  1D03               	skipz
  9837  2400  2C0E               	goto	u797lld
  9838  2401  0AA3               	incf	___aodiv@divisor+3,f
  9839  2402  1D03               	skipz
  9840  2403  2C0E               	goto	u797lld
  9841  2404  0AA4               	incf	___aodiv@divisor+4,f
  9842  2405  1D03               	skipz
  9843  2406  2C0E               	goto	u797lld
  9844  2407  0AA5               	incf	___aodiv@divisor+5,f
  9845  2408  1D03               	skipz
  9846  2409  2C0E               	goto	u797lld
  9847  240A  0AA6               	incf	___aodiv@divisor+6,f
  9848  240B  1D03               	skipz
  9849  240C  2C0E               	goto	u797lld
  9850  240D  0AA7               	incf	___aodiv@divisor+7,f
  9851  240E                     u797lld:	
  9852  240E  01F3               	clrf	___aodiv@sign
  9853  240F  0AF3               	incf	___aodiv@sign,f
  9854  2410                     l6380:	
  9855  2410  3028               	movlw	low ___aodiv@dividend
  9856  2411  0086               	movwf	6
  9857  2412  3000               	movlw	high ___aodiv@dividend
  9858  2413  0087               	movwf	7
  9859  2414  3F47               	moviw [7]fsr1
  9860  2415  00F1               	movwf	??___aodiv
  9861  2416  1FF1               	btfss	??___aodiv,7
  9862  2417  2C3B               	goto	l6386
  9863  2418  0020               	movlb	0	; select bank0
  9864  2419  09A8               	comf	___aodiv@dividend,f
  9865  241A  09A9               	comf	___aodiv@dividend+1,f
  9866  241B  09AA               	comf	___aodiv@dividend+2,f
  9867  241C  09AB               	comf	___aodiv@dividend+3,f
  9868  241D  09AC               	comf	___aodiv@dividend+4,f
  9869  241E  09AD               	comf	___aodiv@dividend+5,f
  9870  241F  09AE               	comf	___aodiv@dividend+6,f
  9871  2420  09AF               	comf	___aodiv@dividend+7,f
  9872  2421  0AA8               	incf	___aodiv@dividend,f
  9873  2422  1D03               	skipz
  9874  2423  2C37               	goto	l6384
  9875  2424  0AA9               	incf	___aodiv@dividend+1,f
  9876  2425  1D03               	skipz
  9877  2426  2C37               	goto	l6384
  9878  2427  0AAA               	incf	___aodiv@dividend+2,f
  9879  2428  1D03               	skipz
  9880  2429  2C37               	goto	l6384
  9881  242A  0AAB               	incf	___aodiv@dividend+3,f
  9882  242B  1D03               	skipz
  9883  242C  2C37               	goto	l6384
  9884  242D  0AAC               	incf	___aodiv@dividend+4,f
  9885  242E  1D03               	skipz
  9886  242F  2C37               	goto	l6384
  9887  2430  0AAD               	incf	___aodiv@dividend+5,f
  9888  2431  1D03               	skipz
  9889  2432  2C37               	goto	l6384
  9890  2433  0AAE               	incf	___aodiv@dividend+6,f
  9891  2434  1D03               	skipz
  9892  2435  2C37               	goto	l6384
  9893  2436  0AAF               	incf	___aodiv@dividend+7,f
  9894  2437                     l6384:	
  9895  2437  3001               	movlw	1
  9896  2438  00F1               	movwf	??___aodiv
  9897  2439  0871               	movf	??___aodiv,w
  9898  243A  06F3               	xorwf	___aodiv@sign,f
  9899  243B                     l6386:	
  9900  243B  3074               	movlw	low ___aodiv@quotient
  9901  243C  0086               	movwf	6
  9902  243D  3000               	movlw	high ___aodiv@quotient
  9903  243E  0087               	movwf	7
  9904  243F  3008               	movlw	8
  9905  2440  00F1               	movwf	??___aodiv
  9906  2441  3000               	movlw	0
  9907  2442                     u8000:	
  9908  2442  001E               	movwi fsr1++
  9909  2443  0BF1               	decfsz	??___aodiv,f
  9910  2444  2C42               	goto	u8000
  9911  2445  0020               	movlb	0	; select bank0
  9912  2446  0820               	movf	___aodiv@divisor,w
  9913  2447  0421               	iorwf	___aodiv@divisor+1,w
  9914  2448  0422               	iorwf	___aodiv@divisor+2,w
  9915  2449  0423               	iorwf	___aodiv@divisor+3,w
  9916  244A  0424               	iorwf	___aodiv@divisor+4,w
  9917  244B  0425               	iorwf	___aodiv@divisor+5,w
  9918  244C  0426               	iorwf	___aodiv@divisor+6,w
  9919  244D  0427               	iorwf	___aodiv@divisor+7,w
  9920  244E  1903               	skipnz
  9921  244F  2CA6               	goto	l6408
  9922  2450  01F2               	clrf	___aodiv@counter
  9923  2451  0AF2               	incf	___aodiv@counter,f
  9924  2452                     l6396:	
  9925  2452  1BA7               	btfsc	___aodiv@divisor+7,7
  9926  2453  2C61               	goto	l6398
  9927  2454  35A0               	lslf	___aodiv@divisor,f
  9928  2455  0DA1               	rlf	___aodiv@divisor+1,f
  9929  2456  0DA2               	rlf	___aodiv@divisor+2,f
  9930  2457  0DA3               	rlf	___aodiv@divisor+3,f
  9931  2458  0DA4               	rlf	___aodiv@divisor+4,f
  9932  2459  0DA5               	rlf	___aodiv@divisor+5,f
  9933  245A  0DA6               	rlf	___aodiv@divisor+6,f
  9934  245B  0DA7               	rlf	___aodiv@divisor+7,f
  9935  245C  3001               	movlw	1
  9936  245D  00F1               	movwf	??___aodiv
  9937  245E  0871               	movf	??___aodiv,w
  9938  245F  07F2               	addwf	___aodiv@counter,f
  9939  2460  2C52               	goto	l6396
  9940  2461                     l6398:	
  9941  2461  35F4               	lslf	___aodiv@quotient,f
  9942  2462  0DF5               	rlf	___aodiv@quotient+1,f
  9943  2463  0DF6               	rlf	___aodiv@quotient+2,f
  9944  2464  0DF7               	rlf	___aodiv@quotient+3,f
  9945  2465  0DF8               	rlf	___aodiv@quotient+4,f
  9946  2466  0DF9               	rlf	___aodiv@quotient+5,f
  9947  2467  0DFA               	rlf	___aodiv@quotient+6,f
  9948  2468  0DFB               	rlf	___aodiv@quotient+7,f
  9949  2469  0827               	movf	___aodiv@divisor+7,w
  9950  246A  022F               	subwf	___aodiv@dividend+7,w
  9951  246B  1D03               	skipz
  9952  246C  2C87               	goto	u8035
  9953  246D  0826               	movf	___aodiv@divisor+6,w
  9954  246E  022E               	subwf	___aodiv@dividend+6,w
  9955  246F  1D03               	skipz
  9956  2470  2C87               	goto	u8035
  9957  2471  0825               	movf	___aodiv@divisor+5,w
  9958  2472  022D               	subwf	___aodiv@dividend+5,w
  9959  2473  1D03               	skipz
  9960  2474  2C87               	goto	u8035
  9961  2475  0824               	movf	___aodiv@divisor+4,w
  9962  2476  022C               	subwf	___aodiv@dividend+4,w
  9963  2477  1D03               	skipz
  9964  2478  2C87               	goto	u8035
  9965  2479  0823               	movf	___aodiv@divisor+3,w
  9966  247A  022B               	subwf	___aodiv@dividend+3,w
  9967  247B  1D03               	skipz
  9968  247C  2C87               	goto	u8035
  9969  247D  0822               	movf	___aodiv@divisor+2,w
  9970  247E  022A               	subwf	___aodiv@dividend+2,w
  9971  247F  1D03               	skipz
  9972  2480  2C87               	goto	u8035
  9973  2481  0821               	movf	___aodiv@divisor+1,w
  9974  2482  0229               	subwf	___aodiv@dividend+1,w
  9975  2483  1D03               	skipz
  9976  2484  2C87               	goto	u8035
  9977  2485  0820               	movf	___aodiv@divisor,w
  9978  2486  0228               	subwf	___aodiv@dividend,w
  9979  2487                     u8035:	
  9980  2487  1C03               	skipc
  9981  2488  2C9A               	goto	l6406
  9982  2489  0820               	movf	___aodiv@divisor,w
  9983  248A  02A8               	subwf	___aodiv@dividend,f
  9984  248B  0821               	movf	___aodiv@divisor+1,w
  9985  248C  3BA9               	subwfb	___aodiv@dividend+1,f
  9986  248D  0822               	movf	___aodiv@divisor+2,w
  9987  248E  3BAA               	subwfb	___aodiv@dividend+2,f
  9988  248F  0823               	movf	___aodiv@divisor+3,w
  9989  2490  3BAB               	subwfb	___aodiv@dividend+3,f
  9990  2491  0824               	movf	___aodiv@divisor+4,w
  9991  2492  3BAC               	subwfb	___aodiv@dividend+4,f
  9992  2493  0825               	movf	___aodiv@divisor+5,w
  9993  2494  3BAD               	subwfb	___aodiv@dividend+5,f
  9994  2495  0826               	movf	___aodiv@divisor+6,w
  9995  2496  3BAE               	subwfb	___aodiv@dividend+6,f
  9996  2497  0827               	movf	___aodiv@divisor+7,w
  9997  2498  3BAF               	subwfb	___aodiv@dividend+7,f
  9998  2499  1474               	bsf	___aodiv@quotient,0
  9999  249A                     l6406:	
 10000  249A  36A7               	lsrf	___aodiv@divisor+7,f
 10001  249B  0CA6               	rrf	___aodiv@divisor+6,f
 10002  249C  0CA5               	rrf	___aodiv@divisor+5,f
 10003  249D  0CA4               	rrf	___aodiv@divisor+4,f
 10004  249E  0CA3               	rrf	___aodiv@divisor+3,f
 10005  249F  0CA2               	rrf	___aodiv@divisor+2,f
 10006  24A0  0CA1               	rrf	___aodiv@divisor+1,f
 10007  24A1  0CA0               	rrf	___aodiv@divisor,f
 10008  24A2  3001               	movlw	1
 10009  24A3  02F2               	subwf	___aodiv@counter,f
 10010  24A4  1D03               	btfss	3,2
 10011  24A5  2C61               	goto	l6398
 10012  24A6                     l6408:	
 10013  24A6  0873               	movf	___aodiv@sign,w
 10014  24A7  1903               	btfsc	3,2
 10015  24A8  2CC7               	goto	l955
 10016  24A9  09F4               	comf	___aodiv@quotient,f
 10017  24AA  09F5               	comf	___aodiv@quotient+1,f
 10018  24AB  09F6               	comf	___aodiv@quotient+2,f
 10019  24AC  09F7               	comf	___aodiv@quotient+3,f
 10020  24AD  09F8               	comf	___aodiv@quotient+4,f
 10021  24AE  09F9               	comf	___aodiv@quotient+5,f
 10022  24AF  09FA               	comf	___aodiv@quotient+6,f
 10023  24B0  09FB               	comf	___aodiv@quotient+7,f
 10024  24B1  0AF4               	incf	___aodiv@quotient,f
 10025  24B2  1D03               	skipz
 10026  24B3  2CC7               	goto	l955
 10027  24B4  0AF5               	incf	___aodiv@quotient+1,f
 10028  24B5  1D03               	skipz
 10029  24B6  2CC7               	goto	l955
 10030  24B7  0AF6               	incf	___aodiv@quotient+2,f
 10031  24B8  1D03               	skipz
 10032  24B9  2CC7               	goto	l955
 10033  24BA  0AF7               	incf	___aodiv@quotient+3,f
 10034  24BB  1D03               	skipz
 10035  24BC  2CC7               	goto	l955
 10036  24BD  0AF8               	incf	___aodiv@quotient+4,f
 10037  24BE  1D03               	skipz
 10038  24BF  2CC7               	goto	l955
 10039  24C0  0AF9               	incf	___aodiv@quotient+5,f
 10040  24C1  1D03               	skipz
 10041  24C2  2CC7               	goto	l955
 10042  24C3  0AFA               	incf	___aodiv@quotient+6,f
 10043  24C4  1D03               	skipz
 10044  24C5  2CC7               	goto	l955
 10045  24C6  0AFB               	incf	___aodiv@quotient+7,f
 10046  24C7                     l955:	
 10047  24C7  0874               	movf	___aodiv@quotient,w
 10048  24C8  0020               	movlb	0	; select bank0
 10049  24C9  00A0               	movwf	?___aodiv
 10050  24CA  0875               	movf	___aodiv@quotient+1,w
 10051  24CB  00A1               	movwf	?___aodiv+1
 10052  24CC  0876               	movf	___aodiv@quotient+2,w
 10053  24CD  00A2               	movwf	?___aodiv+2
 10054  24CE  0877               	movf	___aodiv@quotient+3,w
 10055  24CF  00A3               	movwf	?___aodiv+3
 10056  24D0  0878               	movf	___aodiv@quotient+4,w
 10057  24D1  00A4               	movwf	?___aodiv+4
 10058  24D2  0879               	movf	___aodiv@quotient+5,w
 10059  24D3  00A5               	movwf	?___aodiv+5
 10060  24D4  087A               	movf	___aodiv@quotient+6,w
 10061  24D5  00A6               	movwf	?___aodiv+6
 10062  24D6  087B               	movf	___aodiv@quotient+7,w
 10063  24D7  00A7               	movwf	?___aodiv+7
 10064  24D8  0008               	return
 10065  24D9                     __end_of___aodiv:	
 10066                           
 10067                           	psect	text23
 10068  357A                     __ptext23:	
 10069 ;; *************** function _ctoa *****************
 10070 ;; Defined at:
 10071 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 10072 ;; Parameters:    Size  Location     Type
 10073 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
 10074 ;;		 -> vsnprintf@f(6), 
 10075 ;;  c               1   18[BANK0 ] unsigned char 
 10076 ;; Auto vars:     Size  Location     Type
 10077 ;;  w               2   20[BANK0 ] int 
 10078 ;;  l               2    0        int 
 10079 ;; Return value:  Size  Location     Type
 10080 ;;                  2   16[BANK0 ] int 
 10081 ;; Registers used:
 10082 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10083 ;; Tracked objects:
 10084 ;;		On entry : 0/0
 10085 ;;		On exit  : 0/0
 10086 ;;		Unchanged: 0/0
 10087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10088 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10089 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10090 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10091 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10092 ;;Total ram usage:        6 bytes
 10093 ;; Hardware stack levels used:    1
 10094 ;; Hardware stack levels required when called:    5
 10095 ;; This function calls:
 10096 ;;		_pad
 10097 ;; This function is called by:
 10098 ;;		_vfpfcnvrt
 10099 ;; This function uses a non-reentrant model
 10100 ;;
 10101                           
 10102                           
 10103                           ;psect for function _ctoa
 10104  357A                     _ctoa:	
 10105                           
 10106                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 10107                           
 10108                           ;incstack = 0
 10109                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10110  357A  0022               	movlb	2	; select bank2
 10111  357B  0865               	movf	_width^(0+256),w
 10112  357C  0466               	iorwf	(_width+1)^(0+256),w
 10113  357D  1D03               	btfss	3,2
 10114  357E  2D87               	goto	l6496
 10115  357F  0866               	movf	(_width+1)^(0+256),w
 10116  3580  0020               	movlb	0	; select bank0
 10117  3581  00B5               	movwf	ctoa@w+1
 10118  3582  0022               	movlb	2	; select bank2
 10119  3583  0865               	movf	_width^(0+256),w
 10120  3584  0020               	movlb	0	; select bank0
 10121  3585  00B4               	movwf	ctoa@w
 10122  3586  2D90               	goto	l6498
 10123  3587                     l6496:	
 10124  3587  0865               	movf	_width^(0+256),w
 10125  3588  3EFF               	addlw	255
 10126  3589  0020               	movlb	0	; select bank0
 10127  358A  00B4               	movwf	ctoa@w
 10128  358B  30FF               	movlw	255
 10129  358C  0022               	movlb	2	; select bank2
 10130  358D  3D66               	addwfc	(_width+1)^(0+256),w
 10131  358E  0020               	movlb	0	; select bank0
 10132  358F  00B5               	movwf	ctoa@w+1
 10133  3590                     l6498:	
 10134                           
 10135                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 10136  3590  0832               	movf	ctoa@c,w
 10137  3591  00B3               	movwf	??_ctoa
 10138  3592  0833               	movf	??_ctoa,w
 10139  3593  0024               	movlb	4	; select bank4
 10140  3594  00A0               	movwf	_dbuf^(0+512)
 10141                           
 10142                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 10143  3595  01A1               	clrf	(_dbuf^(0+512)+1)
 10144                           
 10145                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 10146  3596  0020               	movlb	0	; select bank0
 10147  3597  0831               	movf	ctoa@fp+1,w
 10148  3598  00A7               	movwf	pad@fp+1
 10149  3599  0830               	movf	ctoa@fp,w
 10150  359A  00A6               	movwf	pad@fp
 10151  359B  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
 10152  359C  00B3               	movwf	??_ctoa
 10153  359D  0833               	movf	??_ctoa,w
 10154  359E  00A8               	movwf	pad@buf
 10155  359F  0835               	movf	ctoa@w+1,w
 10156  35A0  00AA               	movwf	pad@p+1
 10157  35A1  0834               	movf	ctoa@w,w
 10158  35A2  00A9               	movwf	pad@p
 10159  35A3  31B7  275D         	fcall	_pad
 10160  35A5  0020               	movlb	0	; select bank0
 10161  35A6  0827               	movf	?_pad+1,w
 10162  35A7  00B1               	movwf	?_ctoa+1
 10163  35A8  0826               	movf	?_pad,w
 10164  35A9  00B0               	movwf	?_ctoa
 10165  35AA  0008               	return
 10166  35AB                     __end_of_ctoa:	
 10167                           
 10168                           	psect	text24
 10169  375D                     __ptext24:	
 10170 ;; *************** function _pad *****************
 10171 ;; Defined at:
 10172 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 10173 ;; Parameters:    Size  Location     Type
 10174 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
 10175 ;;		 -> vsnprintf@f(6), 
 10176 ;;  buf             1    8[BANK0 ] PTR unsigned char 
 10177 ;;		 -> dbuf(32), 
 10178 ;;  p               2    9[BANK0 ] int 
 10179 ;; Auto vars:     Size  Location     Type
 10180 ;;  w               2   14[BANK0 ] int 
 10181 ;;  i               2   12[BANK0 ] int 
 10182 ;; Return value:  Size  Location     Type
 10183 ;;                  2    6[BANK0 ] int 
 10184 ;; Registers used:
 10185 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10186 ;; Tracked objects:
 10187 ;;		On entry : 0/0
 10188 ;;		On exit  : 0/0
 10189 ;;		Unchanged: 0/0
 10190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10191 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10192 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10193 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10194 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10195 ;;Total ram usage:       10 bytes
 10196 ;; Hardware stack levels used:    1
 10197 ;; Hardware stack levels required when called:    4
 10198 ;; This function calls:
 10199 ;;		_fputc
 10200 ;;		_fputs
 10201 ;;		_strlen
 10202 ;; This function is called by:
 10203 ;;		_ctoa
 10204 ;;		_dtoa
 10205 ;;		_otoa
 10206 ;;		_utoa
 10207 ;;		_xtoa
 10208 ;; This function uses a non-reentrant model
 10209 ;;
 10210                           
 10211                           
 10212                           ;psect for function _pad
 10213  375D                     _pad:	
 10214                           
 10215                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 10216                           
 10217                           ;incstack = 0
 10218                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10219  375D  0022               	movlb	2	; select bank2
 10220  375E  1C69               	btfss	_flags^(0+256),0
 10221  375F  2F69               	goto	l6316
 10222                           
 10223                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 10224  3760  0020               	movlb	0	; select bank0
 10225  3761  0827               	movf	pad@fp+1,w
 10226  3762  00FB               	movwf	fputs@fp+1
 10227  3763  0826               	movf	pad@fp,w
 10228  3764  00FA               	movwf	fputs@fp
 10229  3765  0828               	movf	pad@buf,w
 10230  3766  3187  27D7  31B7   	fcall	_fputs
 10231  3769                     l6316:	
 10232                           
 10233                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 10234  3769  0020               	movlb	0	; select bank0
 10235  376A  1BAA               	btfsc	pad@p+1,7
 10236  376B  2F71               	goto	l6320
 10237  376C  082A               	movf	pad@p+1,w
 10238  376D  00AF               	movwf	pad@w+1
 10239  376E  0829               	movf	pad@p,w
 10240  376F  00AE               	movwf	pad@w
 10241  3770  2F73               	goto	l647
 10242  3771                     l6320:	
 10243  3771  01AE               	clrf	pad@w
 10244  3772  01AF               	clrf	pad@w+1
 10245  3773                     l647:	
 10246                           
 10247                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 10248  3773  01AC               	clrf	pad@i
 10249  3774  01AD               	clrf	pad@i+1
 10250  3775                     l6326:	
 10251                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 10252                           
 10253                           
 10254                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 10255  3775  082D               	movf	pad@i+1,w
 10256  3776  3A80               	xorlw	128
 10257  3777  00AB               	movwf	??_pad
 10258  3778  082F               	movf	pad@w+1,w
 10259  3779  3A80               	xorlw	128
 10260  377A  022B               	subwf	??_pad,w
 10261  377B  1D03               	skipz
 10262  377C  2F7F               	goto	u7805
 10263  377D  082E               	movf	pad@w,w
 10264  377E  022C               	subwf	pad@i,w
 10265  377F                     u7805:	
 10266  377F  1803               	btfsc	3,0
 10267  3780  2F93               	goto	l650
 10268                           
 10269                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 10270  3781  3020               	movlw	32
 10271  3782  00F1               	movwf	fputc@c
 10272  3783  3000               	movlw	0
 10273  3784  00F2               	movwf	fputc@c+1
 10274  3785  0020               	movlb	0	; select bank0
 10275  3786  0827               	movf	pad@fp+1,w
 10276  3787  00F4               	movwf	fputc@fp+1
 10277  3788  0826               	movf	pad@fp,w
 10278  3789  00F3               	movwf	fputc@fp
 10279  378A  31A8  201D  31B7   	fcall	_fputc
 10280                           
 10281                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 10282  378D  3001               	movlw	1
 10283  378E  0020               	movlb	0	; select bank0
 10284  378F  07AC               	addwf	pad@i,f
 10285  3790  3000               	movlw	0
 10286  3791  3DAD               	addwfc	pad@i+1,f
 10287  3792  2F75               	goto	l6326
 10288  3793                     l650:	
 10289                           
 10290                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 10291  3793  0022               	movlb	2	; select bank2
 10292  3794  1869               	btfsc	_flags^(0+256),0
 10293  3795  2F9F               	goto	l6330
 10294                           
 10295                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 10296  3796  0020               	movlb	0	; select bank0
 10297  3797  0827               	movf	pad@fp+1,w
 10298  3798  00FB               	movwf	fputs@fp+1
 10299  3799  0826               	movf	pad@fp,w
 10300  379A  00FA               	movwf	fputs@fp
 10301  379B  0828               	movf	pad@buf,w
 10302  379C  3187  27D7  31B7   	fcall	_fputs
 10303  379F                     l6330:	
 10304                           
 10305                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 10306  379F  0020               	movlb	0	; select bank0
 10307  37A0  0828               	movf	pad@buf,w
 10308  37A1  00F1               	movwf	strlen@s
 10309  37A2  3002               	movlw	2
 10310  37A3  00F2               	movwf	strlen@s+1
 10311  37A4  31B3  23FE         	fcall	_strlen
 10312  37A6  0020               	movlb	0	; select bank0
 10313  37A7  082E               	movf	pad@w,w
 10314  37A8  0771               	addwf	?_strlen,w
 10315  37A9  00A6               	movwf	?_pad
 10316  37AA  082F               	movf	pad@w+1,w
 10317  37AB  3D72               	addwfc	?_strlen+1,w
 10318  37AC  00A7               	movwf	?_pad+1
 10319  37AD  0008               	return
 10320  37AE                     __end_of_pad:	
 10321                           
 10322                           	psect	text25
 10323  33FE                     __ptext25:	
 10324 ;; *************** function _strlen *****************
 10325 ;; Defined at:
 10326 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 10327 ;; Parameters:    Size  Location     Type
 10328 ;;  s               2    1[COMMON] PTR const unsigned char 
 10329 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(32), sp__logf(4), 
 10330 ;;		 -> adcGain(2), 
 10331 ;; Auto vars:     Size  Location     Type
 10332 ;;  a               2    3[COMMON] PTR const unsigned char 
 10333 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(32), sp__logf(4), 
 10334 ;;		 -> adcGain(2), 
 10335 ;; Return value:  Size  Location     Type
 10336 ;;                  2    1[COMMON] unsigned int 
 10337 ;; Registers used:
 10338 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10339 ;; Tracked objects:
 10340 ;;		On entry : 0/0
 10341 ;;		On exit  : 0/0
 10342 ;;		Unchanged: 0/0
 10343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10344 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10345 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10347 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10348 ;;Total ram usage:        4 bytes
 10349 ;; Hardware stack levels used:    1
 10350 ;; Hardware stack levels required when called:    1
 10351 ;; This function calls:
 10352 ;;		Nothing
 10353 ;; This function is called by:
 10354 ;;		_pad
 10355 ;;		_stoa
 10356 ;; This function uses a non-reentrant model
 10357 ;;
 10358                           
 10359                           
 10360                           ;psect for function _strlen
 10361  33FE                     _strlen:	
 10362                           
 10363                           ;incstack = 0
 10364                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 10365  33FE  0872               	movf	strlen@s+1,w
 10366  33FF  00F4               	movwf	strlen@a+1
 10367  3400  0871               	movf	strlen@s,w
 10368  3401  00F3               	movwf	strlen@a
 10369  3402                     l6302:	
 10370  3402  0871               	movf	strlen@s,w
 10371  3403  0086               	movwf	6
 10372  3404  0872               	movf	strlen@s+1,w
 10373  3405  0087               	movwf	7
 10374  3406  0801               	movf	1,w
 10375  3407  1903               	btfsc	3,2
 10376  3408  2C0E               	goto	l6304
 10377  3409  3001               	movlw	1
 10378  340A  07F1               	addwf	strlen@s,f
 10379  340B  3000               	movlw	0
 10380  340C  3DF2               	addwfc	strlen@s+1,f
 10381  340D  2C02               	goto	l6302
 10382  340E                     l6304:	
 10383  340E  0873               	movf	strlen@a,w
 10384  340F  0271               	subwf	strlen@s,w
 10385  3410  00F1               	movwf	?_strlen
 10386  3411  0874               	movf	strlen@a+1,w
 10387  3412  3B72               	subwfb	strlen@s+1,w
 10388  3413  00F2               	movwf	?_strlen+1
 10389  3414  0008               	return
 10390  3415                     __end_of_strlen:	
 10391                           
 10392                           	psect	text26
 10393  07D7                     __ptext26:	
 10394 ;; *************** function _fputs *****************
 10395 ;; Defined at:
 10396 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 10397 ;; Parameters:    Size  Location     Type
 10398 ;;  s               1    wreg     PTR const unsigned char 
 10399 ;;		 -> dbuf(32), 
 10400 ;;  fp              2   10[COMMON] PTR struct _IO_FILE
 10401 ;;		 -> vsnprintf@f(6), 
 10402 ;; Auto vars:     Size  Location     Type
 10403 ;;  s               1    5[BANK0 ] PTR const unsigned char 
 10404 ;;		 -> dbuf(32), 
 10405 ;;  i               2    3[BANK0 ] int 
 10406 ;;  c               1    2[BANK0 ] unsigned char 
 10407 ;; Return value:  Size  Location     Type
 10408 ;;                  2   10[COMMON] int 
 10409 ;; Registers used:
 10410 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10411 ;; Tracked objects:
 10412 ;;		On entry : 0/0
 10413 ;;		On exit  : 0/0
 10414 ;;		Unchanged: 0/0
 10415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10416 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10417 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10418 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10419 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10420 ;;Total ram usage:        8 bytes
 10421 ;; Hardware stack levels used:    1
 10422 ;; Hardware stack levels required when called:    3
 10423 ;; This function calls:
 10424 ;;		_fputc
 10425 ;; This function is called by:
 10426 ;;		_pad
 10427 ;; This function uses a non-reentrant model
 10428 ;;
 10429                           
 10430                           
 10431                           ;psect for function _fputs
 10432  07D7                     _fputs:	
 10433                           
 10434                           ;incstack = 0
 10435                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10436                           ;fputs@s stored from wreg
 10437  07D7  0020               	movlb	0	; select bank0
 10438  07D8  00A5               	movwf	fputs@s
 10439  07D9  01A3               	clrf	fputs@i
 10440  07DA  01A4               	clrf	fputs@i+1
 10441  07DB                     l6296:	
 10442  07DB  0823               	movf	fputs@i,w
 10443  07DC  0725               	addwf	fputs@s,w
 10444  07DD  00A0               	movwf	??_fputs
 10445  07DE  0820               	movf	??_fputs,w
 10446  07DF  0086               	movwf	6
 10447  07E0  3002               	movlw	2	; select bank4/5
 10448  07E1  0087               	movwf	7
 10449  07E2  0801               	movf	1,w
 10450  07E3  00A1               	movwf	??_fputs+1
 10451  07E4  0821               	movf	??_fputs+1,w
 10452  07E5  00A2               	movwf	fputs@c
 10453  07E6  0822               	movf	fputs@c,w
 10454  07E7  1903               	btfsc	3,2
 10455  07E8  0008               	return
 10456  07E9  0822               	movf	fputs@c,w
 10457  07EA  00A0               	movwf	??_fputs
 10458  07EB  01A1               	clrf	??_fputs+1
 10459  07EC  0820               	movf	??_fputs,w
 10460  07ED  00F1               	movwf	fputc@c
 10461  07EE  0821               	movf	??_fputs+1,w
 10462  07EF  00F2               	movwf	fputc@c+1
 10463  07F0  087B               	movf	fputs@fp+1,w
 10464  07F1  00F4               	movwf	fputc@fp+1
 10465  07F2  087A               	movf	fputs@fp,w
 10466  07F3  00F3               	movwf	fputc@fp
 10467  07F4  31A8  201D  3187   	fcall	_fputc
 10468  07F7  3001               	movlw	1
 10469  07F8  0020               	movlb	0	; select bank0
 10470  07F9  07A3               	addwf	fputs@i,f
 10471  07FA  3000               	movlw	0
 10472  07FB  3DA4               	addwfc	fputs@i+1,f
 10473  07FC  2FDB               	goto	l6296
 10474  07FD                     __end_of_fputs:	
 10475                           
 10476                           	psect	text27
 10477  281D                     __ptext27:	
 10478 ;; *************** function _fputc *****************
 10479 ;; Defined at:
 10480 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 10481 ;; Parameters:    Size  Location     Type
 10482 ;;  c               2    1[COMMON] int 
 10483 ;;  fp              2    3[COMMON] PTR struct _IO_FILE
 10484 ;;		 -> vsnprintf@f(6), 
 10485 ;; Auto vars:     Size  Location     Type
 10486 ;;		None
 10487 ;; Return value:  Size  Location     Type
 10488 ;;                  2    1[COMMON] int 
 10489 ;; Registers used:
 10490 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10491 ;; Tracked objects:
 10492 ;;		On entry : 0/0
 10493 ;;		On exit  : 0/0
 10494 ;;		Unchanged: 0/0
 10495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10496 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10498 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10499 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10500 ;;Total ram usage:        9 bytes
 10501 ;; Hardware stack levels used:    1
 10502 ;; Hardware stack levels required when called:    2
 10503 ;; This function calls:
 10504 ;;		_putch
 10505 ;; This function is called by:
 10506 ;;		_pad
 10507 ;;		_stoa
 10508 ;;		_vfpfcnvrt
 10509 ;;		_fputs
 10510 ;; This function uses a non-reentrant model
 10511 ;;
 10512                           
 10513                           
 10514                           ;psect for function _fputc
 10515  281D                     _fputc:	
 10516                           
 10517                           ;incstack = 0
 10518                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10519  281D  0873               	movf	fputc@fp,w
 10520  281E  0474               	iorwf	fputc@fp+1,w
 10521  281F  1903               	btfsc	3,2
 10522  2820  2825               	goto	l6278
 10523  2821  0873               	movf	fputc@fp,w
 10524  2822  0474               	iorwf	fputc@fp+1,w
 10525  2823  1D03               	btfss	3,2
 10526  2824  2829               	goto	l6280
 10527  2825                     l6278:	
 10528  2825  0871               	movf	fputc@c,w
 10529  2826  3180  2003         	fcall	_putch
 10530  2828  0008               	return
 10531  2829                     l6280:	
 10532  2829  0873               	movf	fputc@fp,w
 10533  282A  0086               	movwf	6
 10534  282B  0874               	movf	fputc@fp+1,w
 10535  282C  0087               	movwf	7
 10536  282D  3144               	addfsr 1,4
 10537  282E  0016               	moviw fsr1++
 10538  282F  0401               	iorwf	1,w
 10539  2830  1903               	btfsc	3,2
 10540  2831  2850               	goto	l6284
 10541  2832  0873               	movf	fputc@fp,w
 10542  2833  0086               	movwf	6
 10543  2834  0874               	movf	fputc@fp+1,w
 10544  2835  0087               	movwf	7
 10545  2836  3144               	addfsr 1,4
 10546  2837  3F40               	moviw [0]fsr1
 10547  2838  00F5               	movwf	??_fputc
 10548  2839  3F41               	moviw [1]fsr1
 10549  283A  00F6               	movwf	??_fputc+1
 10550  283B  0873               	movf	fputc@fp,w
 10551  283C  0086               	movwf	6
 10552  283D  0874               	movf	fputc@fp+1,w
 10553  283E  0087               	movwf	7
 10554  283F  3142               	addfsr 1,2
 10555  2840  3F40               	moviw [0]fsr1
 10556  2841  00F7               	movwf	??_fputc+2
 10557  2842  3F41               	moviw [1]fsr1
 10558  2843  00F8               	movwf	??_fputc+3
 10559  2844  0878               	movf	??_fputc+3,w
 10560  2845  3A80               	xorlw	128
 10561  2846  00F9               	movwf	??_fputc+4
 10562  2847  0876               	movf	??_fputc+1,w
 10563  2848  3A80               	xorlw	128
 10564  2849  0279               	subwf	??_fputc+4,w
 10565  284A  1D03               	skipz
 10566  284B  284E               	goto	u7735
 10567  284C  0875               	movf	??_fputc,w
 10568  284D  0277               	subwf	??_fputc+2,w
 10569  284E                     u7735:	
 10570  284E  1803               	skipnc
 10571  284F  0008               	return
 10572  2850                     l6284:	
 10573  2850  0873               	movf	fputc@fp,w
 10574  2851  0086               	movwf	6
 10575  2852  0874               	movf	fputc@fp+1,w
 10576  2853  0087               	movwf	7
 10577  2854  3142               	addfsr 1,2
 10578  2855  0873               	movf	fputc@fp,w
 10579  2856  0084               	movwf	4
 10580  2857  0874               	movf	fputc@fp+1,w
 10581  2858  0085               	movwf	5
 10582  2859  3F40               	moviw [0]fsr1
 10583  285A  0700               	addwf	0,w
 10584  285B  00F5               	movwf	??_fputc
 10585  285C  3101               	addfsr 0,1
 10586  285D  3F41               	moviw [1]fsr1
 10587  285E  3D00               	addwfc	0,w
 10588  285F  00F6               	movwf	??_fputc+1
 10589  2860  0875               	movf	??_fputc,w
 10590  2861  0086               	movwf	6
 10591  2862  0876               	movf	??_fputc+1,w
 10592  2863  0087               	movwf	7
 10593  2864  0871               	movf	fputc@c,w
 10594  2865  0081               	movwf	1
 10595  2866  0873               	movf	fputc@fp,w
 10596  2867  0086               	movwf	6
 10597  2868  0874               	movf	fputc@fp+1,w
 10598  2869  0087               	movwf	7
 10599  286A  3142               	addfsr 1,2
 10600  286B  3001               	movlw	1
 10601  286C  0781               	addwf	1,f
 10602  286D  3141               	addfsr 1,1
 10603  286E  1803               	skipnc
 10604  286F  0A81               	incf	1,f
 10605  2870  0008               	return
 10606  2871                     __end_of_fputc:	
 10607                           
 10608                           	psect	text28
 10609  0003                     __ptext28:	
 10610 ;; *************** function _putch *****************
 10611 ;; Defined at:
 10612 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
 10613 ;; Parameters:    Size  Location     Type
 10614 ;;  c               1    wreg     unsigned char 
 10615 ;; Auto vars:     Size  Location     Type
 10616 ;;  c               1    0[COMMON] unsigned char 
 10617 ;; Return value:  Size  Location     Type
 10618 ;;                  1    wreg      void 
 10619 ;; Registers used:
 10620 ;;		wreg
 10621 ;; Tracked objects:
 10622 ;;		On entry : 0/0
 10623 ;;		On exit  : 0/0
 10624 ;;		Unchanged: 0/0
 10625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10630 ;;Total ram usage:        0 bytes
 10631 ;; Hardware stack levels used:    1
 10632 ;; Hardware stack levels required when called:    1
 10633 ;; This function calls:
 10634 ;;		Nothing
 10635 ;; This function is called by:
 10636 ;;		_fputc
 10637 ;; This function uses a non-reentrant model
 10638 ;;
 10639                           
 10640                           
 10641                           ;psect for function _putch
 10642  0003                     _putch:	
 10643                           
 10644                           ;incstack = 0
 10645                           ; Regs used in _putch: [wreg]
 10646  0003  0008               	return
 10647  0004                     __end_of_putch:	
 10648                           
 10649                           	psect	text29
 10650  1806                     __ptext29:	
 10651 ;; *************** function _atoi *****************
 10652 ;; Defined at:
 10653 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 10654 ;; Parameters:    Size  Location     Type
 10655 ;;  s               2    7[COMMON] PTR const unsigned char 
 10656 ;;		 -> STR_23(18), STR_22(18), STR_21(19), STR_20(20), 
 10657 ;;		 -> STR_19(20), STR_18(21), STR_17(21), STR_16(21), 
 10658 ;;		 -> STR_15(22), STR_14(22), STR_13(21), STR_12(21), 
 10659 ;;		 -> STR_9(15), STR_8(23), STR_7(15), STR_6(21), 
 10660 ;;		 -> STR_5(21), STR_4(21), STR_3(22), STR_2(71), 
 10661 ;;		 -> STR_1(40), 
 10662 ;; Auto vars:     Size  Location     Type
 10663 ;;  n               2   11[BANK0 ] int 
 10664 ;;  neg             2    4[BANK0 ] int 
 10665 ;; Return value:  Size  Location     Type
 10666 ;;                  2    7[COMMON] int 
 10667 ;; Registers used:
 10668 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10669 ;; Tracked objects:
 10670 ;;		On entry : 0/0
 10671 ;;		On exit  : 0/0
 10672 ;;		Unchanged: 0/0
 10673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10674 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10675 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10676 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10677 ;;      Totals:         2      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10678 ;;Total ram usage:       15 bytes
 10679 ;; Hardware stack levels used:    1
 10680 ;; Hardware stack levels required when called:    2
 10681 ;; This function calls:
 10682 ;;		___wmul
 10683 ;;		_isdigit
 10684 ;;		_isspace
 10685 ;; This function is called by:
 10686 ;;		_vfpfcnvrt
 10687 ;; This function uses a non-reentrant model
 10688 ;;
 10689                           
 10690                           
 10691                           ;psect for function _atoi
 10692  1806                     _atoi:	
 10693                           
 10694                           ;incstack = 0
 10695                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10696  1806  0020               	movlb	0	; select bank0
 10697  1807  01AB               	clrf	atoi@n
 10698  1808  01AC               	clrf	atoi@n+1
 10699  1809  01A4               	clrf	atoi@neg
 10700  180A  01A5               	clrf	atoi@neg+1
 10701  180B                     l6762:	
 10702  180B  01AA               	clrf	_atoi$1658
 10703  180C  0AAA               	incf	_atoi$1658,f
 10704  180D  0877               	movf	atoi@s,w
 10705  180E  0084               	movwf	4
 10706  180F  0878               	movf	atoi@s+1,w
 10707  1810  0085               	movwf	5
 10708  1811  0012               	moviw fsr0++
 10709  1812  3A20               	xorlw	32
 10710  1813  1903               	btfsc	3,2
 10711  1814  2827               	goto	l6770
 10712  1815  0877               	movf	atoi@s,w
 10713  1816  0084               	movwf	4
 10714  1817  0878               	movf	atoi@s+1,w
 10715  1818  0085               	movwf	5
 10716  1819  0800               	movf	0,w	;code access
 10717  181A  3EF7               	addlw	247
 10718  181B  00A0               	movwf	??_atoi
 10719  181C  30FF               	movlw	255
 10720  181D  1803               	skipnc
 10721  181E  3000               	movlw	0
 10722  181F  00A1               	movwf	??_atoi+1
 10723  1820  3000               	movlw	0
 10724  1821  0221               	subwf	??_atoi+1,w
 10725  1822  3005               	movlw	5
 10726  1823  1903               	skipnz
 10727  1824  0220               	subwf	??_atoi,w
 10728  1825  1803               	btfsc	3,0
 10729  1826  01AA               	clrf	_atoi$1658
 10730  1827                     l6770:	
 10731  1827  082A               	movf	_atoi$1658,w
 10732  1828  00A0               	movwf	??_atoi
 10733  1829  01A1               	clrf	??_atoi+1
 10734  182A  0820               	movf	??_atoi,w
 10735  182B  00A6               	movwf	_atoi$1657
 10736  182C  0821               	movf	??_atoi+1,w
 10737  182D  00A7               	movwf	_atoi$1657+1
 10738  182E  0826               	movf	_atoi$1657,w
 10739  182F  0427               	iorwf	_atoi$1657+1,w
 10740  1830  1903               	btfsc	3,2
 10741  1831  283C               	goto	l6778
 10742  1832  3001               	movlw	1
 10743  1833  07F7               	addwf	atoi@s,f
 10744  1834  3000               	movlw	0
 10745  1835  3DF8               	addwfc	atoi@s+1,f
 10746  1836  280B               	goto	l6762
 10747  1837                     l6776:	
 10748  1837  3001               	movlw	1
 10749  1838  00A4               	movwf	atoi@neg
 10750  1839  3000               	movlw	0
 10751  183A  00A5               	movwf	atoi@neg+1
 10752  183B  286F               	goto	l1330
 10753  183C                     l6778:	
 10754  183C  0877               	movf	atoi@s,w
 10755  183D  0084               	movwf	4
 10756  183E  0878               	movf	atoi@s+1,w
 10757  183F  0085               	movwf	5
 10758  1840  0800               	movf	0,w	;code access
 10759  1841  00A0               	movwf	??_atoi
 10760  1842  01A1               	clrf	??_atoi+1
 10761                           
 10762                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10763                           ; Switch size 1, requested type "simple"
 10764                           ; Number of cases is 1, Range of values is 0 to 0
 10765                           ; switch strategies available:
 10766                           ; Name         Instructions Cycles
 10767                           ; simple_byte            4     3 (average)
 10768                           ; direct_byte            8     6 (fixed)
 10769                           ; jumptable            260     6 (fixed)
 10770                           ;	Chosen strategy is simple_byte
 10771  1843  0821               	movf	??_atoi+1,w
 10772  1844  3A00               	xorlw	0	; case 0
 10773  1845  1903               	skipnz
 10774  1846  2848               	goto	l8622
 10775  1847  2873               	goto	l6784
 10776  1848                     l8622:	
 10777                           
 10778                           ; Switch size 1, requested type "simple"
 10779                           ; Number of cases is 2, Range of values is 43 to 45
 10780                           ; switch strategies available:
 10781                           ; Name         Instructions Cycles
 10782                           ; simple_byte            7     4 (average)
 10783                           ; direct_byte           15     9 (fixed)
 10784                           ; jumptable            263     9 (fixed)
 10785                           ;	Chosen strategy is simple_byte
 10786  1848  0820               	movf	??_atoi,w
 10787  1849  3A2B               	xorlw	43	; case 43
 10788  184A  1903               	skipnz
 10789  184B  286F               	goto	l1330
 10790  184C  3A06               	xorlw	6	; case 45
 10791  184D  1903               	skipnz
 10792  184E  2837               	goto	l6776
 10793  184F  2873               	goto	l6784
 10794  1850                     l6780:	
 10795  1850  0877               	movf	atoi@s,w
 10796  1851  0084               	movwf	4
 10797  1852  0878               	movf	atoi@s+1,w
 10798  1853  0085               	movwf	5
 10799  1854  0800               	movf	0,w	;code access
 10800  1855  00A0               	movwf	??_atoi
 10801  1856  082C               	movf	atoi@n+1,w
 10802  1857  00F2               	movwf	___wmul@multiplier+1
 10803  1858  082B               	movf	atoi@n,w
 10804  1859  00F1               	movwf	___wmul@multiplier
 10805  185A  300A               	movlw	10
 10806  185B  00F3               	movwf	___wmul@multiplicand
 10807  185C  3000               	movlw	0
 10808  185D  00F4               	movwf	___wmul@multiplicand+1
 10809  185E  31B4  248D  3198   	fcall	___wmul
 10810  1861  0872               	movf	?___wmul+1,w
 10811  1862  0020               	movlb	0	; select bank0
 10812  1863  00A2               	movwf	??_atoi+2
 10813  1864  0820               	movf	??_atoi,w
 10814  1865  0271               	subwf	?___wmul,w
 10815  1866  00A1               	movwf	??_atoi+1
 10816  1867  1C03               	skipc
 10817  1868  03A2               	decf	??_atoi+2,f
 10818  1869  0821               	movf	??_atoi+1,w
 10819  186A  3E30               	addlw	48
 10820  186B  00AB               	movwf	atoi@n
 10821  186C  3000               	movlw	0
 10822  186D  3D22               	addwfc	??_atoi+2,w
 10823  186E  00AC               	movwf	atoi@n+1
 10824  186F                     l1330:	
 10825  186F  3001               	movlw	1
 10826  1870  07F7               	addwf	atoi@s,f
 10827  1871  3000               	movlw	0
 10828  1872  3DF8               	addwfc	atoi@s+1,f
 10829  1873                     l6784:	
 10830  1873  0877               	movf	atoi@s,w
 10831  1874  0084               	movwf	4
 10832  1875  0878               	movf	atoi@s+1,w
 10833  1876  0085               	movwf	5
 10834  1877  0800               	movf	0,w	;code access
 10835  1878  3ED0               	addlw	208
 10836  1879  00A0               	movwf	??_atoi
 10837  187A  30FF               	movlw	255
 10838  187B  1803               	skipnc
 10839  187C  3000               	movlw	0
 10840  187D  00A1               	movwf	??_atoi+1
 10841  187E  3000               	movlw	0
 10842  187F  0221               	subwf	??_atoi+1,w
 10843  1880  300A               	movlw	10
 10844  1881  1903               	skipnz
 10845  1882  0220               	subwf	??_atoi,w
 10846  1883  1803               	btfsc	3,0
 10847  1884  2887               	goto	u8910
 10848  1885  3001               	movlw	1
 10849  1886  2888               	goto	u8920
 10850  1887                     u8910:	
 10851  1887  3000               	movlw	0
 10852  1888                     u8920:	
 10853  1888  00A2               	movwf	??_atoi+2
 10854  1889  01A3               	clrf	??_atoi+3
 10855  188A  0822               	movf	??_atoi+2,w
 10856  188B  00A8               	movwf	_atoi$1659
 10857  188C  0823               	movf	??_atoi+3,w
 10858  188D  00A9               	movwf	_atoi$1659+1
 10859  188E  0828               	movf	_atoi$1659,w
 10860  188F  0429               	iorwf	_atoi$1659+1,w
 10861  1890  1D03               	btfss	3,2
 10862  1891  2850               	goto	l6780
 10863  1892  0824               	movf	atoi@neg,w
 10864  1893  0425               	iorwf	atoi@neg+1,w
 10865  1894  1D03               	btfss	3,2
 10866  1895  28A2               	goto	l6794
 10867  1896  092B               	comf	atoi@n,w
 10868  1897  00A0               	movwf	??_atoi
 10869  1898  092C               	comf	atoi@n+1,w
 10870  1899  00A1               	movwf	??_atoi+1
 10871  189A  0AA0               	incf	??_atoi,f
 10872  189B  1903               	skipnz
 10873  189C  0AA1               	incf	??_atoi+1,f
 10874  189D  0820               	movf	??_atoi,w
 10875  189E  00F7               	movwf	?_atoi
 10876  189F  0821               	movf	??_atoi+1,w
 10877  18A0  00F8               	movwf	?_atoi+1
 10878  18A1  0008               	return
 10879  18A2                     l6794:	
 10880  18A2  082C               	movf	atoi@n+1,w
 10881  18A3  00F8               	movwf	?_atoi+1
 10882  18A4  082B               	movf	atoi@n,w
 10883  18A5  00F7               	movwf	?_atoi
 10884  18A6  0008               	return
 10885  18A7                     __end_of_atoi:	
 10886                           
 10887                           	psect	text30
 10888  34DE                     __ptext30:	
 10889 ;; *************** function _isspace *****************
 10890 ;; Defined at:
 10891 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 10892 ;; Parameters:    Size  Location     Type
 10893 ;;  c               2    1[COMMON] int 
 10894 ;; Auto vars:     Size  Location     Type
 10895 ;;		None
 10896 ;; Return value:  Size  Location     Type
 10897 ;;                  2    1[COMMON] int 
 10898 ;; Registers used:
 10899 ;;		wreg, status,2, status,0
 10900 ;; Tracked objects:
 10901 ;;		On entry : 0/0
 10902 ;;		On exit  : 0/0
 10903 ;;		Unchanged: 0/0
 10904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10905 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10906 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10907 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10908 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10909 ;;Total ram usage:        5 bytes
 10910 ;; Hardware stack levels used:    1
 10911 ;; Hardware stack levels required when called:    1
 10912 ;; This function calls:
 10913 ;;		Nothing
 10914 ;; This function is called by:
 10915 ;;		_atoi
 10916 ;; This function uses a non-reentrant model
 10917 ;;
 10918                           
 10919                           
 10920                           ;psect for function _isspace
 10921  34DE                     _isspace:	
 10922                           
 10923                           ;incstack = 0
 10924                           ; Regs used in _isspace: [wreg+status,2+status,0]
 10925  34DE  01F5               	clrf	_isspace$1684
 10926  34DF  0AF5               	incf	_isspace$1684,f
 10927  34E0  3020               	movlw	32
 10928  34E1  0671               	xorwf	isspace@c,w
 10929  34E2  0472               	iorwf	isspace@c+1,w
 10930  34E3  1903               	btfsc	3,2
 10931  34E4  2CF2               	goto	l6488
 10932  34E5  0871               	movf	isspace@c,w
 10933  34E6  3EF7               	addlw	247
 10934  34E7  00F3               	movwf	??_isspace
 10935  34E8  30FF               	movlw	255
 10936  34E9  3D72               	addwfc	isspace@c+1,w
 10937  34EA  00F4               	movwf	??_isspace+1
 10938  34EB  3000               	movlw	0
 10939  34EC  0274               	subwf	??_isspace+1,w
 10940  34ED  3005               	movlw	5
 10941  34EE  1903               	skipnz
 10942  34EF  0273               	subwf	??_isspace,w
 10943  34F0  1803               	btfsc	3,0
 10944  34F1  01F5               	clrf	_isspace$1684
 10945  34F2                     l6488:	
 10946  34F2  0875               	movf	_isspace$1684,w
 10947  34F3  00F3               	movwf	??_isspace
 10948  34F4  01F4               	clrf	??_isspace+1
 10949  34F5  0873               	movf	??_isspace,w
 10950  34F6  00F1               	movwf	?_isspace
 10951  34F7  0874               	movf	??_isspace+1,w
 10952  34F8  00F2               	movwf	?_isspace+1
 10953  34F9  0008               	return
 10954  34FA                     __end_of_isspace:	
 10955                           
 10956                           	psect	text31
 10957  33E7                     __ptext31:	
 10958 ;; *************** function _isdigit *****************
 10959 ;; Defined at:
 10960 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 10961 ;; Parameters:    Size  Location     Type
 10962 ;;  c               2    1[COMMON] int 
 10963 ;; Auto vars:     Size  Location     Type
 10964 ;;		None
 10965 ;; Return value:  Size  Location     Type
 10966 ;;                  2    1[COMMON] int 
 10967 ;; Registers used:
 10968 ;;		wreg, status,2, status,0
 10969 ;; Tracked objects:
 10970 ;;		On entry : 0/0
 10971 ;;		On exit  : 0/0
 10972 ;;		Unchanged: 0/0
 10973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10974 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10976 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10977 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10978 ;;Total ram usage:        6 bytes
 10979 ;; Hardware stack levels used:    1
 10980 ;; Hardware stack levels required when called:    1
 10981 ;; This function calls:
 10982 ;;		Nothing
 10983 ;; This function is called by:
 10984 ;;		_vfpfcnvrt
 10985 ;;		_atoi
 10986 ;; This function uses a non-reentrant model
 10987 ;;
 10988                           
 10989                           
 10990                           ;psect for function _isdigit
 10991  33E7                     _isdigit:	
 10992                           
 10993                           ;incstack = 0
 10994                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 10995  33E7  0871               	movf	isdigit@c,w
 10996  33E8  3ED0               	addlw	208
 10997  33E9  00F3               	movwf	??_isdigit
 10998  33EA  30FF               	movlw	255
 10999  33EB  3D72               	addwfc	isdigit@c+1,w
 11000  33EC  00F4               	movwf	??_isdigit+1
 11001  33ED  3000               	movlw	0
 11002  33EE  0274               	subwf	??_isdigit+1,w
 11003  33EF  300A               	movlw	10
 11004  33F0  1903               	skipnz
 11005  33F1  0273               	subwf	??_isdigit,w
 11006  33F2  1803               	btfsc	3,0
 11007  33F3  2BF6               	goto	u7900
 11008  33F4  3001               	movlw	1
 11009  33F5  2BF7               	goto	u7910
 11010  33F6                     u7900:	
 11011  33F6  3000               	movlw	0
 11012  33F7                     u7910:	
 11013  33F7  00F5               	movwf	??_isdigit+2
 11014  33F8  01F6               	clrf	??_isdigit+3
 11015  33F9  0875               	movf	??_isdigit+2,w
 11016  33FA  00F1               	movwf	?_isdigit
 11017  33FB  0876               	movf	??_isdigit+3,w
 11018  33FC  00F2               	movwf	?_isdigit+1
 11019  33FD  0008               	return
 11020  33FE                     __end_of_isdigit:	
 11021                           
 11022                           	psect	text32
 11023  3473                     __ptext32:	
 11024 ;; *************** function _EUSART_Write_Text *****************
 11025 ;; Defined at:
 11026 ;;		line 75 in file "EUSART.c"
 11027 ;; Parameters:    Size  Location     Type
 11028 ;;  text            2    2[COMMON] PTR unsigned char 
 11029 ;;		 -> STR_24(3), STR_11(3), STR_10(38), messageBuffer(127), 
 11030 ;; Auto vars:     Size  Location     Type
 11031 ;;  i               2    5[COMMON] int 
 11032 ;; Return value:  Size  Location     Type
 11033 ;;                  1    wreg      void 
 11034 ;; Registers used:
 11035 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11036 ;; Tracked objects:
 11037 ;;		On entry : 0/0
 11038 ;;		On exit  : 0/0
 11039 ;;		Unchanged: 0/0
 11040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11041 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11042 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11043 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11044 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11045 ;;Total ram usage:        5 bytes
 11046 ;; Hardware stack levels used:    1
 11047 ;; Hardware stack levels required when called:    2
 11048 ;; This function calls:
 11049 ;;		_EUSART_Write
 11050 ;; This function is called by:
 11051 ;;		_statemachine
 11052 ;;		_printcellParameters
 11053 ;;		_printotAFERegisters
 11054 ;; This function uses a non-reentrant model
 11055 ;;
 11056                           
 11057                           
 11058                           ;psect for function _EUSART_Write_Text
 11059  3473                     _EUSART_Write_Text:	
 11060                           
 11061                           ;EUSART.c: 75: void EUSART_Write_Text(char *text);EUSART.c: 76: {;EUSART.c: 77:   int i;
      +                          ;EUSART.c: 78:   for(i=0;text[i]!='\0';i++)
 11062                           
 11063                           ;incstack = 0
 11064                           ; Regs used in _EUSART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11065  3473  01F5               	clrf	EUSART_Write_Text@i
 11066  3474  01F6               	clrf	EUSART_Write_Text@i+1
 11067  3475                     l8050:	
 11068  3475  0872               	movf	EUSART_Write_Text@text,w
 11069  3476  0775               	addwf	EUSART_Write_Text@i,w
 11070  3477  0084               	movwf	4
 11071  3478  0873               	movf	EUSART_Write_Text@text+1,w
 11072  3479  3D76               	addwfc	EUSART_Write_Text@i+1,w
 11073  347A  0085               	movwf	5
 11074  347B  0012               	moviw fsr0++
 11075  347C  1903               	btfsc	3,2
 11076  347D  0008               	return
 11077                           
 11078                           ;EUSART.c: 79:    EUSART_Write(text[i]);
 11079  347E  0872               	movf	EUSART_Write_Text@text,w
 11080  347F  0775               	addwf	EUSART_Write_Text@i,w
 11081  3480  0084               	movwf	4
 11082  3481  0873               	movf	EUSART_Write_Text@text+1,w
 11083  3482  3D76               	addwfc	EUSART_Write_Text@i+1,w
 11084  3483  0085               	movwf	5
 11085  3484  0800               	movf	0,w	;code access
 11086  3485  3188  2000  31B4   	fcall	_EUSART_Write
 11087  3488  3001               	movlw	1
 11088  3489  07F5               	addwf	EUSART_Write_Text@i,f
 11089  348A  3000               	movlw	0
 11090  348B  3DF6               	addwfc	EUSART_Write_Text@i+1,f
 11091  348C  2C75               	goto	l8050
 11092  348D                     __end_of_EUSART_Write_Text:	
 11093                           
 11094                           	psect	text33
 11095  0800                     __ptext33:	
 11096 ;; *************** function _EUSART_Write *****************
 11097 ;; Defined at:
 11098 ;;		line 56 in file "EUSART.c"
 11099 ;; Parameters:    Size  Location     Type
 11100 ;;  txData          1    wreg     unsigned char 
 11101 ;; Auto vars:     Size  Location     Type
 11102 ;;  txData          1    1[COMMON] unsigned char 
 11103 ;; Return value:  Size  Location     Type
 11104 ;;                  1    wreg      void 
 11105 ;; Registers used:
 11106 ;;		wreg
 11107 ;; Tracked objects:
 11108 ;;		On entry : 0/0
 11109 ;;		On exit  : 0/0
 11110 ;;		Unchanged: 0/0
 11111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11113 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11115 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11116 ;;Total ram usage:        1 bytes
 11117 ;; Hardware stack levels used:    1
 11118 ;; Hardware stack levels required when called:    1
 11119 ;; This function calls:
 11120 ;;		Nothing
 11121 ;; This function is called by:
 11122 ;;		_EUSART_Write_Text
 11123 ;; This function uses a non-reentrant model
 11124 ;;
 11125                           
 11126                           
 11127                           ;psect for function _EUSART_Write
 11128  0800                     _EUSART_Write:	
 11129                           
 11130                           ;incstack = 0
 11131                           ; Regs used in _EUSART_Write: [wreg]
 11132                           ;EUSART_Write@txData stored from wreg
 11133  0800  00F1               	movwf	EUSART_Write@txData
 11134  0801                     l247:	
 11135                           ;EUSART.c: 59:     {;EUSART.c: 60:     }
 11136                           
 11137                           
 11138                           ;EUSART.c: 58:     while(0 == PIR1bits.TXIF)
 11139  0801  0020               	movlb	0	; select bank0
 11140  0802  1E11               	btfss	17,4	;volatile
 11141  0803  2801               	goto	l247
 11142                           
 11143                           ;EUSART.c: 62:     TX1REG = txData;
 11144  0804  0871               	movf	EUSART_Write@txData,w
 11145  0805  0023               	movlb	3	; select bank3
 11146  0806  009A               	movwf	26	;volatile
 11147  0807  0008               	return
 11148  0808                     __end_of_EUSART_Write:	
 11149                           
 11150                           	psect	text34
 11151  2006                     __ptext34:	
 11152 ;; *************** function _init_AFE *****************
 11153 ;; Defined at:
 11154 ;;		line 3 in file "BQ76920.c"
 11155 ;; Parameters:    Size  Location     Type
 11156 ;;		None
 11157 ;; Auto vars:     Size  Location     Type
 11158 ;;		None
 11159 ;; Return value:  Size  Location     Type
 11160 ;;                  1    wreg      void 
 11161 ;; Registers used:
 11162 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11163 ;; Tracked objects:
 11164 ;;		On entry : 0/0
 11165 ;;		On exit  : 0/0
 11166 ;;		Unchanged: 0/0
 11167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11172 ;;Total ram usage:        0 bytes
 11173 ;; Hardware stack levels used:    1
 11174 ;; Hardware stack levels required when called:    4
 11175 ;; This function calls:
 11176 ;;		_setCellOvervoltageProtection
 11177 ;;		_setCellUndervoltageProtection
 11178 ;;		_setOverCurrentDischargeProtection
 11179 ;;		_setShortCircuitProtection
 11180 ;;		_setShuntResistorValue
 11181 ;;		_setTemperatureLimitsint
 11182 ;; This function is called by:
 11183 ;;		_statemachine
 11184 ;; This function uses a non-reentrant model
 11185 ;;
 11186                           
 11187                           
 11188                           ;psect for function _init_AFE
 11189  2006                     _init_AFE:	
 11190                           
 11191                           ;BQ76920.c: 5:     setTemperatureLimitsint(-20, 45, 0, 45);
 11192                           
 11193                           ;incstack = 0
 11194                           ; Regs used in _init_AFE: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11195  2006  30EC               	movlw	236
 11196  2007  0020               	movlb	0	; select bank0
 11197  2008  00A0               	movwf	setTemperatureLimitsint@minDischarge_degC
 11198  2009  30FF               	movlw	255
 11199  200A  00A1               	movwf	setTemperatureLimitsint@minDischarge_degC+1
 11200  200B  302D               	movlw	45
 11201  200C  00A2               	movwf	setTemperatureLimitsint@maxDischarge_degC
 11202  200D  3000               	movlw	0
 11203  200E  00A3               	movwf	setTemperatureLimitsint@maxDischarge_degC+1
 11204  200F  3000               	movlw	0
 11205  2010  00A4               	movwf	setTemperatureLimitsint@minCharge_degC
 11206  2011  00A5               	movwf	setTemperatureLimitsint@minCharge_degC+1
 11207  2012  302D               	movlw	45
 11208  2013  00A6               	movwf	setTemperatureLimitsint@maxCharge_degC
 11209  2014  3000               	movlw	0
 11210  2015  00A7               	movwf	setTemperatureLimitsint@maxCharge_degC+1
 11211  2016  31B7  2719  31A0   	fcall	_setTemperatureLimitsint
 11212                           
 11213                           ;BQ76920.c: 6:     setShuntResistorValue(0.02);
 11214  2019  303C               	movlw	60
 11215  201A  00F4               	movwf	setShuntResistorValue@res_mOhm+3
 11216  201B  30A3               	movlw	163
 11217  201C  00F3               	movwf	setShuntResistorValue@res_mOhm+2
 11218  201D  30D7               	movlw	215
 11219  201E  00F2               	movwf	setShuntResistorValue@res_mOhm+1
 11220  201F  300A               	movlw	10
 11221  2020  00F1               	movwf	setShuntResistorValue@res_mOhm
 11222  2021  31B3  23A6  31A0   	fcall	_setShuntResistorValue
 11223                           
 11224                           ;BQ76920.c: 9:     setShortCircuitProtection(500, 200);
 11225  2024  3000               	movlw	0
 11226  2025  0020               	movlb	0	; select bank0
 11227  2026  00E9               	movwf	setShortCircuitProtection@current_mA+3
 11228  2027  3000               	movlw	0
 11229  2028  00E8               	movwf	setShortCircuitProtection@current_mA+2
 11230  2029  3001               	movlw	1
 11231  202A  00E7               	movwf	setShortCircuitProtection@current_mA+1
 11232  202B  30F4               	movlw	244
 11233  202C  00E6               	movwf	setShortCircuitProtection@current_mA
 11234  202D  30C8               	movlw	200
 11235  202E  00EA               	movwf	setShortCircuitProtection@delay_us
 11236  202F  3000               	movlw	0
 11237  2030  00EB               	movwf	setShortCircuitProtection@delay_us+1
 11238  2031  31A6  26E8  31A0   	fcall	_setShortCircuitProtection
 11239                           
 11240                           ;BQ76920.c: 14:     setOverCurrentDischargeProtection(10, 320);
 11241  2034  3000               	movlw	0
 11242  2035  0020               	movlb	0	; select bank0
 11243  2036  00E9               	movwf	setOverCurrentDischargeProtection@current_mA+3
 11244  2037  3000               	movlw	0
 11245  2038  00E8               	movwf	setOverCurrentDischargeProtection@current_mA+2
 11246  2039  3000               	movlw	0
 11247  203A  00E7               	movwf	setOverCurrentDischargeProtection@current_mA+1
 11248  203B  300A               	movlw	10
 11249  203C  00E6               	movwf	setOverCurrentDischargeProtection@current_mA
 11250  203D  3040               	movlw	64
 11251  203E  00EA               	movwf	setOverCurrentDischargeProtection@delay_ms
 11252  203F  3001               	movlw	1
 11253  2040  00EB               	movwf	setOverCurrentDischargeProtection@delay_ms+1
 11254  2041  31A5  25D3  31A0   	fcall	_setOverCurrentDischargeProtection
 11255                           
 11256                           ;BQ76920.c: 15:     setCellUndervoltageProtection(2900, 2);
 11257  2044  3054               	movlw	84
 11258  2045  0020               	movlb	0	; select bank0
 11259  2046  00B2               	movwf	setCellUndervoltageProtection@voltage_mV
 11260  2047  300B               	movlw	11
 11261  2048  00B3               	movwf	setCellUndervoltageProtection@voltage_mV+1
 11262  2049  3002               	movlw	2
 11263  204A  00B4               	movwf	setCellUndervoltageProtection@delay_s
 11264  204B  3000               	movlw	0
 11265  204C  00B5               	movwf	setCellUndervoltageProtection@delay_s+1
 11266  204D  31A0  205C  31A0   	fcall	_setCellUndervoltageProtection
 11267                           
 11268                           ;BQ76920.c: 16:     setCellOvervoltageProtection(4100,2);
 11269  2050  3004               	movlw	4
 11270  2051  0020               	movlb	0	; select bank0
 11271  2052  00B2               	movwf	setCellOvervoltageProtection@voltage_mV
 11272  2053  3010               	movlw	16
 11273  2054  00B3               	movwf	setCellOvervoltageProtection@voltage_mV+1
 11274  2055  3002               	movlw	2
 11275  2056  00B4               	movwf	setCellOvervoltageProtection@delay_s
 11276  2057  3000               	movlw	0
 11277  2058  00B5               	movwf	setCellOvervoltageProtection@delay_s+1
 11278  2059  31AF  272B         	fcall	_setCellOvervoltageProtection
 11279  205B  0008               	return
 11280  205C                     __end_of_init_AFE:	
 11281                           
 11282                           	psect	text35
 11283  3719                     __ptext35:	
 11284 ;; *************** function _setTemperatureLimitsint *****************
 11285 ;; Defined at:
 11286 ;;		line 61 in file "BQ76920.c"
 11287 ;; Parameters:    Size  Location     Type
 11288 ;;  minDischarge    2    0[BANK0 ] int 
 11289 ;;  maxDischarge    2    2[BANK0 ] int 
 11290 ;;  minCharge_de    2    4[BANK0 ] int 
 11291 ;;  maxCharge_de    2    6[BANK0 ] int 
 11292 ;; Auto vars:     Size  Location     Type
 11293 ;;		None
 11294 ;; Return value:  Size  Location     Type
 11295 ;;                  1    wreg      void 
 11296 ;; Registers used:
 11297 ;;		wreg, status,2, status,0, pclath, cstack
 11298 ;; Tracked objects:
 11299 ;;		On entry : 0/0
 11300 ;;		On exit  : 0/0
 11301 ;;		Unchanged: 0/0
 11302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11303 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11306 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11307 ;;Total ram usage:        8 bytes
 11308 ;; Hardware stack levels used:    1
 11309 ;; Hardware stack levels required when called:    2
 11310 ;; This function calls:
 11311 ;;		___wmul
 11312 ;; This function is called by:
 11313 ;;		_init_AFE
 11314 ;; This function uses a non-reentrant model
 11315 ;;
 11316                           
 11317                           
 11318                           ;psect for function _setTemperatureLimitsint
 11319  3719                     _setTemperatureLimitsint:	
 11320                           
 11321                           ;BQ76920.c: 63:     minCellTempDischarge = minDischarge_degC * 10;
 11322                           
 11323                           ;incstack = 0
 11324                           ; Regs used in _setTemperatureLimitsint: [wreg+status,2+status,0+pclath+cstack]
 11325  3719  0020               	movlb	0	; select bank0
 11326  371A  0821               	movf	setTemperatureLimitsint@minDischarge_degC+1,w
 11327  371B  00F2               	movwf	___wmul@multiplier+1
 11328  371C  0820               	movf	setTemperatureLimitsint@minDischarge_degC,w
 11329  371D  00F1               	movwf	___wmul@multiplier
 11330  371E  300A               	movlw	10
 11331  371F  00F3               	movwf	___wmul@multiplicand
 11332  3720  3000               	movlw	0
 11333  3721  00F4               	movwf	___wmul@multiplicand+1
 11334  3722  31B4  248D  31B7   	fcall	___wmul
 11335  3725  0872               	movf	?___wmul+1,w
 11336  3726  0023               	movlb	3	; select bank3
 11337  3727  00CF               	movwf	(_minCellTempDischarge+1)^(0+384)
 11338  3728  0871               	movf	?___wmul,w
 11339  3729  00CE               	movwf	_minCellTempDischarge^(0+384)
 11340                           
 11341                           ;BQ76920.c: 64:     maxCellTempDischarge = maxDischarge_degC * 10;
 11342  372A  0020               	movlb	0	; select bank0
 11343  372B  0823               	movf	setTemperatureLimitsint@maxDischarge_degC+1,w
 11344  372C  00F2               	movwf	___wmul@multiplier+1
 11345  372D  0822               	movf	setTemperatureLimitsint@maxDischarge_degC,w
 11346  372E  00F1               	movwf	___wmul@multiplier
 11347  372F  300A               	movlw	10
 11348  3730  00F3               	movwf	___wmul@multiplicand
 11349  3731  3000               	movlw	0
 11350  3732  00F4               	movwf	___wmul@multiplicand+1
 11351  3733  31B4  248D  31B7   	fcall	___wmul
 11352  3736  0872               	movf	?___wmul+1,w
 11353  3737  0023               	movlb	3	; select bank3
 11354  3738  00CB               	movwf	(_maxCellTempDischarge+1)^(0+384)
 11355  3739  0871               	movf	?___wmul,w
 11356  373A  00CA               	movwf	_maxCellTempDischarge^(0+384)
 11357                           
 11358                           ;BQ76920.c: 65:     minCellTempCharge = minCharge_degC * 10;
 11359  373B  0020               	movlb	0	; select bank0
 11360  373C  0825               	movf	setTemperatureLimitsint@minCharge_degC+1,w
 11361  373D  00F2               	movwf	___wmul@multiplier+1
 11362  373E  0824               	movf	setTemperatureLimitsint@minCharge_degC,w
 11363  373F  00F1               	movwf	___wmul@multiplier
 11364  3740  300A               	movlw	10
 11365  3741  00F3               	movwf	___wmul@multiplicand
 11366  3742  3000               	movlw	0
 11367  3743  00F4               	movwf	___wmul@multiplicand+1
 11368  3744  31B4  248D  31B7   	fcall	___wmul
 11369  3747  0872               	movf	?___wmul+1,w
 11370  3748  0023               	movlb	3	; select bank3
 11371  3749  00D1               	movwf	(_minCellTempCharge+1)^(0+384)
 11372  374A  0871               	movf	?___wmul,w
 11373  374B  00D0               	movwf	_minCellTempCharge^(0+384)
 11374                           
 11375                           ;BQ76920.c: 66:     maxCellTempCharge = maxCharge_degC * 10;
 11376  374C  0020               	movlb	0	; select bank0
 11377  374D  0827               	movf	setTemperatureLimitsint@maxCharge_degC+1,w
 11378  374E  00F2               	movwf	___wmul@multiplier+1
 11379  374F  0826               	movf	setTemperatureLimitsint@maxCharge_degC,w
 11380  3750  00F1               	movwf	___wmul@multiplier
 11381  3751  300A               	movlw	10
 11382  3752  00F3               	movwf	___wmul@multiplicand
 11383  3753  3000               	movlw	0
 11384  3754  00F4               	movwf	___wmul@multiplicand+1
 11385  3755  31B4  248D         	fcall	___wmul
 11386  3757  0872               	movf	?___wmul+1,w
 11387  3758  0023               	movlb	3	; select bank3
 11388  3759  00CD               	movwf	(_maxCellTempCharge+1)^(0+384)
 11389  375A  0871               	movf	?___wmul,w
 11390  375B  00CC               	movwf	_maxCellTempCharge^(0+384)
 11391  375C  0008               	return
 11392  375D                     __end_of_setTemperatureLimitsint:	
 11393                           
 11394                           	psect	text36
 11395  348D                     __ptext36:	
 11396 ;; *************** function ___wmul *****************
 11397 ;; Defined at:
 11398 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 11399 ;; Parameters:    Size  Location     Type
 11400 ;;  multiplier      2    1[COMMON] unsigned int 
 11401 ;;  multiplicand    2    3[COMMON] unsigned int 
 11402 ;; Auto vars:     Size  Location     Type
 11403 ;;  product         2    5[COMMON] unsigned int 
 11404 ;; Return value:  Size  Location     Type
 11405 ;;                  2    1[COMMON] unsigned int 
 11406 ;; Registers used:
 11407 ;;		wreg, status,2, status,0
 11408 ;; Tracked objects:
 11409 ;;		On entry : 0/0
 11410 ;;		On exit  : 0/0
 11411 ;;		Unchanged: 0/0
 11412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11413 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11414 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11416 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11417 ;;Total ram usage:        6 bytes
 11418 ;; Hardware stack levels used:    1
 11419 ;; Hardware stack levels required when called:    1
 11420 ;; This function calls:
 11421 ;;		Nothing
 11422 ;; This function is called by:
 11423 ;;		_setTemperatureLimitsint
 11424 ;;		_atoi
 11425 ;; This function uses a non-reentrant model
 11426 ;;
 11427                           
 11428                           
 11429                           ;psect for function ___wmul
 11430  348D                     ___wmul:	
 11431                           
 11432                           ;incstack = 0
 11433                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 11434  348D  01F5               	clrf	___wmul@product
 11435  348E  01F6               	clrf	___wmul@product+1
 11436  348F                     l6362:	
 11437  348F  1C71               	btfss	___wmul@multiplier,0
 11438  3490  2C95               	goto	l855
 11439  3491  0873               	movf	___wmul@multiplicand,w
 11440  3492  07F5               	addwf	___wmul@product,f
 11441  3493  0874               	movf	___wmul@multiplicand+1,w
 11442  3494  3DF6               	addwfc	___wmul@product+1,f
 11443  3495                     l855:	
 11444  3495  3001               	movlw	1
 11445  3496                     u7935:	
 11446  3496  35F3               	lslf	___wmul@multiplicand,f
 11447  3497  0DF4               	rlf	___wmul@multiplicand+1,f
 11448  3498  0B89               	decfsz	9,f
 11449  3499  2C96               	goto	u7935
 11450  349A  3001               	movlw	1
 11451  349B                     u7945:	
 11452  349B  36F2               	lsrf	___wmul@multiplier+1,f
 11453  349C  0CF1               	rrf	___wmul@multiplier,f
 11454  349D  0B89               	decfsz	9,f
 11455  349E  2C9B               	goto	u7945
 11456  349F  0871               	movf	___wmul@multiplier,w
 11457  34A0  0472               	iorwf	___wmul@multiplier+1,w
 11458  34A1  1D03               	btfss	3,2
 11459  34A2  2C8F               	goto	l6362
 11460  34A3  0876               	movf	___wmul@product+1,w
 11461  34A4  00F2               	movwf	?___wmul+1
 11462  34A5  0875               	movf	___wmul@product,w
 11463  34A6  00F1               	movwf	?___wmul
 11464  34A7  0008               	return
 11465  34A8                     __end_of___wmul:	
 11466                           
 11467                           	psect	text37
 11468  33A6                     __ptext37:	
 11469 ;; *************** function _setShuntResistorValue *****************
 11470 ;; Defined at:
 11471 ;;		line 73 in file "BQ76920.c"
 11472 ;; Parameters:    Size  Location     Type
 11473 ;;  res_mOhm        4    1[COMMON] float 
 11474 ;; Auto vars:     Size  Location     Type
 11475 ;;		None
 11476 ;; Return value:  Size  Location     Type
 11477 ;;                  1    wreg      void 
 11478 ;; Registers used:
 11479 ;;		wreg
 11480 ;; Tracked objects:
 11481 ;;		On entry : 0/0
 11482 ;;		On exit  : 0/0
 11483 ;;		Unchanged: 0/0
 11484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11485 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11488 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11489 ;;Total ram usage:        4 bytes
 11490 ;; Hardware stack levels used:    1
 11491 ;; Hardware stack levels required when called:    1
 11492 ;; This function calls:
 11493 ;;		Nothing
 11494 ;; This function is called by:
 11495 ;;		_init_AFE
 11496 ;; This function uses a non-reentrant model
 11497 ;;
 11498                           
 11499                           
 11500                           ;psect for function _setShuntResistorValue
 11501  33A6                     _setShuntResistorValue:	
 11502                           
 11503                           ;BQ76920.c: 74:     shuntResistorValue_mOhm = res_mOhm;
 11504                           
 11505                           ;incstack = 0
 11506                           ; Regs used in _setShuntResistorValue: [wreg]
 11507  33A6  0874               	movf	setShuntResistorValue@res_mOhm+3,w
 11508  33A7  0023               	movlb	3	; select bank3
 11509  33A8  00B1               	movwf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384)
 11510  33A9  0873               	movf	setShuntResistorValue@res_mOhm+2,w
 11511  33AA  00B0               	movwf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384)
 11512  33AB  0872               	movf	setShuntResistorValue@res_mOhm+1,w
 11513  33AC  00AF               	movwf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384)
 11514  33AD  0871               	movf	setShuntResistorValue@res_mOhm,w
 11515  33AE  00AE               	movwf	BQ76920@shuntResistorValue_mOhm^(0+384)
 11516  33AF  0008               	return
 11517  33B0                     __end_of_setShuntResistorValue:	
 11518                           
 11519                           	psect	text38
 11520  26E8                     __ptext38:	
 11521 ;; *************** function _setShortCircuitProtection *****************
 11522 ;; Defined at:
 11523 ;;		line 81 in file "BQ76920.c"
 11524 ;; Parameters:    Size  Location     Type
 11525 ;;  current_mA      4   70[BANK0 ] long 
 11526 ;;  delay_us        2   74[BANK0 ] int 
 11527 ;; Auto vars:     Size  Location     Type
 11528 ;;  i               2   10[BANK1 ] int 
 11529 ;;  i               2    8[BANK1 ] int 
 11530 ;;  scaler          4    0[BANK1 ] float 
 11531 ;; Return value:  Size  Location     Type
 11532 ;;                  1    wreg      void 
 11533 ;; Registers used:
 11534 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11535 ;; Tracked objects:
 11536 ;;		On entry : 0/0
 11537 ;;		On exit  : 0/0
 11538 ;;		Unchanged: 0/0
 11539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11540 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11541 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11542 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11543 ;;      Totals:         0       9      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11544 ;;Total ram usage:       21 bytes
 11545 ;; Hardware stack levels used:    1
 11546 ;; Hardware stack levels required when called:    3
 11547 ;; This function calls:
 11548 ;;		_I2C_writeRegister
 11549 ;;		___fldiv
 11550 ;;		___flge
 11551 ;;		___flmul
 11552 ;;		___xxtofl
 11553 ;; This function is called by:
 11554 ;;		_init_AFE
 11555 ;; This function uses a non-reentrant model
 11556 ;;
 11557                           
 11558                           
 11559                           ;psect for function _setShortCircuitProtection
 11560  26E8                     _setShortCircuitProtection:	
 11561                           
 11562                           ;BQ76920.c: 86:     float scaler = 1000.0;
 11563                           
 11564                           ;incstack = 0
 11565                           ; Regs used in _setShortCircuitProtection: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11566  26E8  3044               	movlw	68
 11567  26E9  0021               	movlb	1	; select bank1
 11568  26EA  00A3               	movwf	(setShortCircuitProtection@scaler+3)^(0+128)
 11569  26EB  307A               	movlw	122
 11570  26EC  00A2               	movwf	(setShortCircuitProtection@scaler+2)^(0+128)
 11571  26ED  3000               	movlw	0
 11572  26EE  00A1               	movwf	(setShortCircuitProtection@scaler+1)^(0+128)
 11573  26EF  3000               	movlw	0
 11574  26F0  00A0               	movwf	setShortCircuitProtection@scaler^(0+128)
 11575                           
 11576                           ;BQ76920.c: 87:     protect1.bits.SCD_THRESH = 0;
 11577  26F1  30F8               	movlw	-8
 11578  26F2  0023               	movlb	3	; select bank3
 11579  26F3  05D4               	andwf	BQ76920@protect1^(0+384),f
 11580                           
 11581                           ;BQ76920.c: 88:     for (int i = 0; i < (sizeof(SCD_threshold_setting) / sizeof((SCD_thr
      +                          eshold_setting)[0])) - 1; i++) {
 11582  26F4  0021               	movlb	1	; select bank1
 11583  26F5  01A8               	clrf	setShortCircuitProtection@i^(0+128)
 11584  26F6  01A9               	clrf	(setShortCircuitProtection@i+1)^(0+128)
 11585  26F7                     l8066:	
 11586                           
 11587                           ;BQ76920.c: 89:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) >
      +                          = SCD_threshold_setting[i]) {
 11588  26F7  0023               	movlb	3	; select bank3
 11589  26F8  0831               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 11590  26F9  0020               	movlb	0	; select bank0
 11591  26FA  00A9               	movwf	___flmul@b+3
 11592  26FB  0023               	movlb	3	; select bank3
 11593  26FC  0830               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 11594  26FD  0020               	movlb	0	; select bank0
 11595  26FE  00A8               	movwf	___flmul@b+2
 11596  26FF  0023               	movlb	3	; select bank3
 11597  2700  082F               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 11598  2701  0020               	movlb	0	; select bank0
 11599  2702  00A7               	movwf	___flmul@b+1
 11600  2703  0023               	movlb	3	; select bank3
 11601  2704  082E               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 11602  2705  0020               	movlb	0	; select bank0
 11603  2706  00A6               	movwf	___flmul@b
 11604  2707  0869               	movf	setShortCircuitProtection@current_mA+3,w
 11605  2708  00F4               	movwf	___xxtofl@val+3
 11606  2709  0868               	movf	setShortCircuitProtection@current_mA+2,w
 11607  270A  00F3               	movwf	___xxtofl@val+2
 11608  270B  0867               	movf	setShortCircuitProtection@current_mA+1,w
 11609  270C  00F2               	movwf	___xxtofl@val+1
 11610  270D  0866               	movf	setShortCircuitProtection@current_mA,w
 11611  270E  00F1               	movwf	___xxtofl@val
 11612  270F  3001               	movlw	1
 11613  2710  31AB  23AF  31A6   	fcall	___xxtofl
 11614  2713  0874               	movf	?___xxtofl+3,w
 11615  2714  0020               	movlb	0	; select bank0
 11616  2715  00AD               	movwf	___flmul@a+3
 11617  2716  0873               	movf	?___xxtofl+2,w
 11618  2717  00AC               	movwf	___flmul@a+2
 11619  2718  0872               	movf	?___xxtofl+1,w
 11620  2719  00AB               	movwf	___flmul@a+1
 11621  271A  0871               	movf	?___xxtofl,w
 11622  271B  00AA               	movwf	___flmul@a
 11623  271C  3190  2023  31A6   	fcall	___flmul
 11624  271F  0020               	movlb	0	; select bank0
 11625  2720  0829               	movf	?___flmul+3,w
 11626  2721  0021               	movlb	1	; select bank1
 11627  2722  00A7               	movwf	(_setShortCircuitProtection$2033+3)^(0+128)
 11628  2723  0020               	movlb	0	; select bank0
 11629  2724  0828               	movf	?___flmul+2,w
 11630  2725  0021               	movlb	1	; select bank1
 11631  2726  00A6               	movwf	(_setShortCircuitProtection$2033+2)^(0+128)
 11632  2727  0020               	movlb	0	; select bank0
 11633  2728  0827               	movf	?___flmul+1,w
 11634  2729  0021               	movlb	1	; select bank1
 11635  272A  00A5               	movwf	(_setShortCircuitProtection$2033+1)^(0+128)
 11636  272B  0020               	movlb	0	; select bank0
 11637  272C  0826               	movf	?___flmul,w
 11638  272D  0021               	movlb	1	; select bank1
 11639  272E  00A4               	movwf	_setShortCircuitProtection$2033^(0+128)
 11640                           
 11641                           ;BQ76920.c: 89:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) >
      +                          = SCD_threshold_setting[i]) {
 11642  272F  3044               	movlw	68
 11643  2730  0020               	movlb	0	; select bank0
 11644  2731  00C3               	movwf	___fldiv@a+3
 11645  2732  307A               	movlw	122
 11646  2733  00C2               	movwf	___fldiv@a+2
 11647  2734  3000               	movlw	0
 11648  2735  00C1               	movwf	___fldiv@a+1
 11649  2736  3000               	movlw	0
 11650  2737  00C0               	movwf	___fldiv@a
 11651  2738  0021               	movlb	1	; select bank1
 11652  2739  0823               	movf	(setShortCircuitProtection@scaler+3)^(0+128),w
 11653  273A  0020               	movlb	0	; select bank0
 11654  273B  00A9               	movwf	___flmul@b+3
 11655  273C  0021               	movlb	1	; select bank1
 11656  273D  0822               	movf	(setShortCircuitProtection@scaler+2)^(0+128),w
 11657  273E  0020               	movlb	0	; select bank0
 11658  273F  00A8               	movwf	___flmul@b+2
 11659  2740  0021               	movlb	1	; select bank1
 11660  2741  0821               	movf	(setShortCircuitProtection@scaler+1)^(0+128),w
 11661  2742  0020               	movlb	0	; select bank0
 11662  2743  00A7               	movwf	___flmul@b+1
 11663  2744  0021               	movlb	1	; select bank1
 11664  2745  0820               	movf	setShortCircuitProtection@scaler^(0+128),w
 11665  2746  0020               	movlb	0	; select bank0
 11666  2747  00A6               	movwf	___flmul@b
 11667  2748  0021               	movlb	1	; select bank1
 11668  2749  0827               	movf	(_setShortCircuitProtection$2033+3)^(0+128),w
 11669  274A  0020               	movlb	0	; select bank0
 11670  274B  00AD               	movwf	___flmul@a+3
 11671  274C  0021               	movlb	1	; select bank1
 11672  274D  0826               	movf	(_setShortCircuitProtection$2033+2)^(0+128),w
 11673  274E  0020               	movlb	0	; select bank0
 11674  274F  00AC               	movwf	___flmul@a+2
 11675  2750  0021               	movlb	1	; select bank1
 11676  2751  0825               	movf	(_setShortCircuitProtection$2033+1)^(0+128),w
 11677  2752  0020               	movlb	0	; select bank0
 11678  2753  00AB               	movwf	___flmul@a+1
 11679  2754  0021               	movlb	1	; select bank1
 11680  2755  0824               	movf	_setShortCircuitProtection$2033^(0+128),w
 11681  2756  0020               	movlb	0	; select bank0
 11682  2757  00AA               	movwf	___flmul@a
 11683  2758  3190  2023  31A6   	fcall	___flmul
 11684  275B  0020               	movlb	0	; select bank0
 11685  275C  0829               	movf	?___flmul+3,w
 11686  275D  00C7               	movwf	___fldiv@b+3
 11687  275E  0828               	movf	?___flmul+2,w
 11688  275F  00C6               	movwf	___fldiv@b+2
 11689  2760  0827               	movf	?___flmul+1,w
 11690  2761  00C5               	movwf	___fldiv@b+1
 11691  2762  0826               	movf	?___flmul,w
 11692  2763  00C4               	movwf	___fldiv@b
 11693  2764  319B  2353  31A6   	fcall	___fldiv
 11694  2767  0020               	movlb	0	; select bank0
 11695  2768  0843               	movf	?___fldiv+3,w
 11696  2769  00DD               	movwf	___flge@ff1+3
 11697  276A  0842               	movf	?___fldiv+2,w
 11698  276B  00DC               	movwf	___flge@ff1+2
 11699  276C  0841               	movf	?___fldiv+1,w
 11700  276D  00DB               	movwf	___flge@ff1+1
 11701  276E  0840               	movf	?___fldiv,w
 11702  276F  00DA               	movwf	___flge@ff1
 11703  2770  0021               	movlb	1	; select bank1
 11704  2771  0829               	movf	(setShortCircuitProtection@i+1)^(0+128),w
 11705  2772  0085               	movwf	5
 11706  2773  0828               	movf	setShortCircuitProtection@i^(0+128),w
 11707  2774  0084               	movwf	4
 11708  2775  3584               	lslf	4,f
 11709  2776  0D85               	rlf	5,f
 11710  2777  30D2               	movlw	low (_SCD_threshold_setting| (0+32768))
 11711  2778  0784               	addwf	4,f
 11712  2779  30B9               	movlw	high (_SCD_threshold_setting| (0+32768))
 11713  277A  3D85               	addwfc	5,f
 11714  277B  3F00               	moviw [0]fsr0
 11715  277C  0020               	movlb	0	; select bank0
 11716  277D  00EC               	movwf	??_setShortCircuitProtection
 11717  277E  3F01               	moviw [1]fsr0
 11718  277F  00ED               	movwf	??_setShortCircuitProtection+1
 11719  2780  086C               	movf	??_setShortCircuitProtection,w
 11720  2781  00F1               	movwf	___xxtofl@val
 11721  2782  086D               	movf	??_setShortCircuitProtection+1,w
 11722  2783  00F2               	movwf	___xxtofl@val+1
 11723  2784  0D89               	rlf	9,f
 11724  2785  3B89               	subwfb	9,f
 11725  2786  0989               	comf	9,f
 11726  2787  00F3               	movwf	___xxtofl@val+2
 11727  2788  00F4               	movwf	___xxtofl@val+3
 11728  2789  3001               	movlw	1
 11729  278A  31AB  23AF  31A6   	fcall	___xxtofl
 11730  278D  0874               	movf	?___xxtofl+3,w
 11731  278E  0020               	movlb	0	; select bank0
 11732  278F  00E1               	movwf	___flge@ff2+3
 11733  2790  0873               	movf	?___xxtofl+2,w
 11734  2791  00E0               	movwf	___flge@ff2+2
 11735  2792  0872               	movf	?___xxtofl+1,w
 11736  2793  00DF               	movwf	___flge@ff2+1
 11737  2794  0871               	movf	?___xxtofl,w
 11738  2795  00DE               	movwf	___flge@ff2
 11739  2796  31A9  21B8  31A6   	fcall	___flge
 11740  2799  1C03               	btfss	3,0
 11741  279A  2FA3               	goto	l8072
 11742                           
 11743                           ;BQ76920.c: 90:             protect1.bits.SCD_THRESH = i;
 11744  279B  0023               	movlb	3	; select bank3
 11745  279C  0854               	movf	BQ76920@protect1^(0+384),w
 11746  279D  0021               	movlb	1	; select bank1
 11747  279E  0628               	xorwf	setShortCircuitProtection@i^(0+128),w
 11748  279F  39F8               	andlw	-8
 11749  27A0  0628               	xorwf	setShortCircuitProtection@i^(0+128),w
 11750  27A1  0023               	movlb	3	; select bank3
 11751  27A2  00D4               	movwf	BQ76920@protect1^(0+384)
 11752  27A3                     l8072:	
 11753                           
 11754                           ;BQ76920.c: 92:     }
 11755  27A3  3001               	movlw	1
 11756  27A4  0021               	movlb	1	; select bank1
 11757  27A5  07A8               	addwf	setShortCircuitProtection@i^(0+128),f
 11758  27A6  3000               	movlw	0
 11759  27A7  3DA9               	addwfc	(setShortCircuitProtection@i+1)^(0+128),f
 11760  27A8  3000               	movlw	0
 11761  27A9  0229               	subwf	(setShortCircuitProtection@i+1)^(0+128),w
 11762  27AA  3007               	movlw	7
 11763  27AB  1903               	skipnz
 11764  27AC  0228               	subwf	setShortCircuitProtection@i^(0+128),w
 11765  27AD  1C03               	skipc
 11766  27AE  2EF7               	goto	l8066
 11767                           
 11768                           ;BQ76920.c: 94:     protect1.bits.SCD_DELAY = 0;
 11769  27AF  30E7               	movlw	-25
 11770  27B0  0023               	movlb	3	; select bank3
 11771  27B1  05D4               	andwf	BQ76920@protect1^(0+384),f
 11772                           
 11773                           ;BQ76920.c: 95:     for (int i = 0; i < (sizeof(SCD_threshold_setting) / sizeof((SCD_thr
      +                          eshold_setting)[0])) - 1; i++) {
 11774  27B2  0021               	movlb	1	; select bank1
 11775  27B3  01AA               	clrf	setShortCircuitProtection@i_976^(0+128)
 11776  27B4  01AB               	clrf	(setShortCircuitProtection@i_976+1)^(0+128)
 11777  27B5                     l8084:	
 11778                           
 11779                           ;BQ76920.c: 96:         if (delay_us >= SCD_delay_setting[i]) {
 11780  27B5  082B               	movf	(setShortCircuitProtection@i_976+1)^(0+128),w
 11781  27B6  0085               	movwf	5
 11782  27B7  082A               	movf	setShortCircuitProtection@i_976^(0+128),w
 11783  27B8  0084               	movwf	4
 11784  27B9  3584               	lslf	4,f
 11785  27BA  0D85               	rlf	5,f
 11786  27BB  3010               	movlw	low (_SCD_delay_setting| (0+32768))
 11787  27BC  0784               	addwf	4,f
 11788  27BD  30BA               	movlw	high (_SCD_delay_setting| (0+32768))
 11789  27BE  3D85               	addwfc	5,f
 11790  27BF  3F00               	moviw [0]fsr0
 11791  27C0  0020               	movlb	0	; select bank0
 11792  27C1  00EC               	movwf	??_setShortCircuitProtection
 11793  27C2  3F01               	moviw [1]fsr0
 11794  27C3  00ED               	movwf	??_setShortCircuitProtection+1
 11795  27C4  086B               	movf	setShortCircuitProtection@delay_us+1,w
 11796  27C5  3A80               	xorlw	128
 11797  27C6  00EE               	movwf	??_setShortCircuitProtection+2
 11798  27C7  086D               	movf	??_setShortCircuitProtection+1,w
 11799  27C8  3A80               	xorlw	128
 11800  27C9  026E               	subwf	??_setShortCircuitProtection+2,w
 11801  27CA  1D03               	skipz
 11802  27CB  2FCE               	goto	u11165
 11803  27CC  086C               	movf	??_setShortCircuitProtection,w
 11804  27CD  026A               	subwf	setShortCircuitProtection@delay_us,w
 11805  27CE                     u11165:	
 11806  27CE  1C03               	skipc
 11807  27CF  2FDF               	goto	l8088
 11808                           
 11809                           ;BQ76920.c: 97:             protect1.bits.SCD_DELAY = i;
 11810  27D0  0021               	movlb	1	; select bank1
 11811  27D1  082A               	movf	setShortCircuitProtection@i_976^(0+128),w
 11812  27D2  0020               	movlb	0	; select bank0
 11813  27D3  00EC               	movwf	??_setShortCircuitProtection
 11814  27D4  0DEC               	rlf	??_setShortCircuitProtection,f
 11815  27D5  0DEC               	rlf	??_setShortCircuitProtection,f
 11816  27D6  0DEC               	rlf	??_setShortCircuitProtection,f
 11817  27D7  0023               	movlb	3	; select bank3
 11818  27D8  0854               	movf	BQ76920@protect1^(0+384),w
 11819  27D9  0020               	movlb	0	; select bank0
 11820  27DA  066C               	xorwf	??_setShortCircuitProtection,w
 11821  27DB  39E7               	andlw	-25
 11822  27DC  066C               	xorwf	??_setShortCircuitProtection,w
 11823  27DD  0023               	movlb	3	; select bank3
 11824  27DE  00D4               	movwf	BQ76920@protect1^(0+384)
 11825  27DF                     l8088:	
 11826                           
 11827                           ;BQ76920.c: 99:     }
 11828  27DF  3001               	movlw	1
 11829  27E0  0021               	movlb	1	; select bank1
 11830  27E1  07AA               	addwf	setShortCircuitProtection@i_976^(0+128),f
 11831  27E2  3000               	movlw	0
 11832  27E3  3DAB               	addwfc	(setShortCircuitProtection@i_976+1)^(0+128),f
 11833  27E4  3000               	movlw	0
 11834  27E5  022B               	subwf	(setShortCircuitProtection@i_976+1)^(0+128),w
 11835  27E6  3007               	movlw	7
 11836  27E7  1903               	skipnz
 11837  27E8  022A               	subwf	setShortCircuitProtection@i_976^(0+128),w
 11838  27E9  1C03               	skipc
 11839  27EA  2FB5               	goto	l8084
 11840                           
 11841                           ;BQ76920.c: 100:     protect1.bits.RSNS = 0;
 11842  27EB  0023               	movlb	3	; select bank3
 11843  27EC  13D4               	bcf	BQ76920@protect1^(0+384),7
 11844                           
 11845                           ;BQ76920.c: 102:     I2C_writeRegister(0x18, 0x06, protect1.regByte);
 11846  27ED  3018               	movlw	24
 11847  27EE  00F5               	movwf	I2C_writeRegister@slaveAddress
 11848  27EF  3000               	movlw	0
 11849  27F0  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 11850  27F1  3006               	movlw	6
 11851  27F2  00F7               	movwf	I2C_writeRegister@regAddress
 11852  27F3  3000               	movlw	0
 11853  27F4  00F8               	movwf	I2C_writeRegister@regAddress+1
 11854  27F5  0854               	movf	BQ76920@protect1^(0+384),w
 11855  27F6  0020               	movlb	0	; select bank0
 11856  27F7  00EC               	movwf	??_setShortCircuitProtection
 11857  27F8  01ED               	clrf	??_setShortCircuitProtection+1
 11858  27F9  086C               	movf	??_setShortCircuitProtection,w
 11859  27FA  00F9               	movwf	I2C_writeRegister@data
 11860  27FB  086D               	movf	??_setShortCircuitProtection+1,w
 11861  27FC  00FA               	movwf	I2C_writeRegister@data+1
 11862  27FD  31B4  24FA         	fcall	_I2C_writeRegister
 11863  27FF  0008               	return
 11864  2800                     __end_of_setShortCircuitProtection:	
 11865                           
 11866                           	psect	text39
 11867  25D3                     __ptext39:	
 11868 ;; *************** function _setOverCurrentDischargeProtection *****************
 11869 ;; Defined at:
 11870 ;;		line 109 in file "BQ76920.c"
 11871 ;; Parameters:    Size  Location     Type
 11872 ;;  current_mA      4   70[BANK0 ] long 
 11873 ;;  delay_ms        2   74[BANK0 ] int 
 11874 ;; Auto vars:     Size  Location     Type
 11875 ;;  i               2   10[BANK1 ] int 
 11876 ;;  i               2    8[BANK1 ] int 
 11877 ;;  scaler          4    0[BANK1 ] float 
 11878 ;; Return value:  Size  Location     Type
 11879 ;;                  1    wreg      void 
 11880 ;; Registers used:
 11881 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11882 ;; Tracked objects:
 11883 ;;		On entry : 0/0
 11884 ;;		On exit  : 0/0
 11885 ;;		Unchanged: 0/0
 11886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11887 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11888 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11889 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11890 ;;      Totals:         0       9      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11891 ;;Total ram usage:       21 bytes
 11892 ;; Hardware stack levels used:    1
 11893 ;; Hardware stack levels required when called:    3
 11894 ;; This function calls:
 11895 ;;		_I2C_writeRegister
 11896 ;;		___fldiv
 11897 ;;		___flge
 11898 ;;		___flmul
 11899 ;;		___xxtofl
 11900 ;; This function is called by:
 11901 ;;		_init_AFE
 11902 ;; This function uses a non-reentrant model
 11903 ;;
 11904                           
 11905                           
 11906                           ;psect for function _setOverCurrentDischargeProtection
 11907  25D3                     _setOverCurrentDischargeProtection:	
 11908                           
 11909                           ;BQ76920.c: 112:     float scaler = 1000.0;
 11910                           
 11911                           ;incstack = 0
 11912                           ; Regs used in _setOverCurrentDischargeProtection: [wreg-fsr0h+status,2+status,0+pclath+
      +                          cstack]
 11913  25D3  3044               	movlw	68
 11914  25D4  0021               	movlb	1	; select bank1
 11915  25D5  00A3               	movwf	(setOverCurrentDischargeProtection@scaler+3)^(0+128)
 11916  25D6  307A               	movlw	122
 11917  25D7  00A2               	movwf	(setOverCurrentDischargeProtection@scaler+2)^(0+128)
 11918  25D8  3000               	movlw	0
 11919  25D9  00A1               	movwf	(setOverCurrentDischargeProtection@scaler+1)^(0+128)
 11920  25DA  3000               	movlw	0
 11921  25DB  00A0               	movwf	setOverCurrentDischargeProtection@scaler^(0+128)
 11922                           
 11923                           ;BQ76920.c: 113:     protect2.bits.OCD_THRESH = 0;
 11924  25DC  30F0               	movlw	-16
 11925  25DD  0023               	movlb	3	; select bank3
 11926  25DE  05D3               	andwf	BQ76920@protect2^(0+384),f
 11927                           
 11928                           ;BQ76920.c: 114:     for (int i = 0; i < (sizeof(OCD_threshold_setting) / sizeof((OCD_th
      +                          reshold_setting)[0])) - 1; i++) {
 11929  25DF  0021               	movlb	1	; select bank1
 11930  25E0  01A8               	clrf	setOverCurrentDischargeProtection@i^(0+128)
 11931  25E1  01A9               	clrf	(setOverCurrentDischargeProtection@i+1)^(0+128)
 11932  25E2                     l8104:	
 11933                           
 11934                           ;BQ76920.c: 115:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) 
      +                          >= OCD_threshold_setting[i]) {
 11935  25E2  0023               	movlb	3	; select bank3
 11936  25E3  0831               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 11937  25E4  0020               	movlb	0	; select bank0
 11938  25E5  00A9               	movwf	___flmul@b+3
 11939  25E6  0023               	movlb	3	; select bank3
 11940  25E7  0830               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 11941  25E8  0020               	movlb	0	; select bank0
 11942  25E9  00A8               	movwf	___flmul@b+2
 11943  25EA  0023               	movlb	3	; select bank3
 11944  25EB  082F               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 11945  25EC  0020               	movlb	0	; select bank0
 11946  25ED  00A7               	movwf	___flmul@b+1
 11947  25EE  0023               	movlb	3	; select bank3
 11948  25EF  082E               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 11949  25F0  0020               	movlb	0	; select bank0
 11950  25F1  00A6               	movwf	___flmul@b
 11951  25F2  0869               	movf	setOverCurrentDischargeProtection@current_mA+3,w
 11952  25F3  00F4               	movwf	___xxtofl@val+3
 11953  25F4  0868               	movf	setOverCurrentDischargeProtection@current_mA+2,w
 11954  25F5  00F3               	movwf	___xxtofl@val+2
 11955  25F6  0867               	movf	setOverCurrentDischargeProtection@current_mA+1,w
 11956  25F7  00F2               	movwf	___xxtofl@val+1
 11957  25F8  0866               	movf	setOverCurrentDischargeProtection@current_mA,w
 11958  25F9  00F1               	movwf	___xxtofl@val
 11959  25FA  3001               	movlw	1
 11960  25FB  31AB  23AF  31A5   	fcall	___xxtofl
 11961  25FE  0874               	movf	?___xxtofl+3,w
 11962  25FF  0020               	movlb	0	; select bank0
 11963  2600  00AD               	movwf	___flmul@a+3
 11964  2601  0873               	movf	?___xxtofl+2,w
 11965  2602  00AC               	movwf	___flmul@a+2
 11966  2603  0872               	movf	?___xxtofl+1,w
 11967  2604  00AB               	movwf	___flmul@a+1
 11968  2605  0871               	movf	?___xxtofl,w
 11969  2606  00AA               	movwf	___flmul@a
 11970  2607  3190  2023  31A5   	fcall	___flmul
 11971  260A  0020               	movlb	0	; select bank0
 11972  260B  0829               	movf	?___flmul+3,w
 11973  260C  0021               	movlb	1	; select bank1
 11974  260D  00A7               	movwf	(_setOverCurrentDischargeProtection$2034+3)^(0+128)
 11975  260E  0020               	movlb	0	; select bank0
 11976  260F  0828               	movf	?___flmul+2,w
 11977  2610  0021               	movlb	1	; select bank1
 11978  2611  00A6               	movwf	(_setOverCurrentDischargeProtection$2034+2)^(0+128)
 11979  2612  0020               	movlb	0	; select bank0
 11980  2613  0827               	movf	?___flmul+1,w
 11981  2614  0021               	movlb	1	; select bank1
 11982  2615  00A5               	movwf	(_setOverCurrentDischargeProtection$2034+1)^(0+128)
 11983  2616  0020               	movlb	0	; select bank0
 11984  2617  0826               	movf	?___flmul,w
 11985  2618  0021               	movlb	1	; select bank1
 11986  2619  00A4               	movwf	_setOverCurrentDischargeProtection$2034^(0+128)
 11987                           
 11988                           ;BQ76920.c: 115:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) 
      +                          >= OCD_threshold_setting[i]) {
 11989  261A  3044               	movlw	68
 11990  261B  0020               	movlb	0	; select bank0
 11991  261C  00C3               	movwf	___fldiv@a+3
 11992  261D  307A               	movlw	122
 11993  261E  00C2               	movwf	___fldiv@a+2
 11994  261F  3000               	movlw	0
 11995  2620  00C1               	movwf	___fldiv@a+1
 11996  2621  3000               	movlw	0
 11997  2622  00C0               	movwf	___fldiv@a
 11998  2623  0021               	movlb	1	; select bank1
 11999  2624  0823               	movf	(setOverCurrentDischargeProtection@scaler+3)^(0+128),w
 12000  2625  0020               	movlb	0	; select bank0
 12001  2626  00A9               	movwf	___flmul@b+3
 12002  2627  0021               	movlb	1	; select bank1
 12003  2628  0822               	movf	(setOverCurrentDischargeProtection@scaler+2)^(0+128),w
 12004  2629  0020               	movlb	0	; select bank0
 12005  262A  00A8               	movwf	___flmul@b+2
 12006  262B  0021               	movlb	1	; select bank1
 12007  262C  0821               	movf	(setOverCurrentDischargeProtection@scaler+1)^(0+128),w
 12008  262D  0020               	movlb	0	; select bank0
 12009  262E  00A7               	movwf	___flmul@b+1
 12010  262F  0021               	movlb	1	; select bank1
 12011  2630  0820               	movf	setOverCurrentDischargeProtection@scaler^(0+128),w
 12012  2631  0020               	movlb	0	; select bank0
 12013  2632  00A6               	movwf	___flmul@b
 12014  2633  0021               	movlb	1	; select bank1
 12015  2634  0827               	movf	(_setOverCurrentDischargeProtection$2034+3)^(0+128),w
 12016  2635  0020               	movlb	0	; select bank0
 12017  2636  00AD               	movwf	___flmul@a+3
 12018  2637  0021               	movlb	1	; select bank1
 12019  2638  0826               	movf	(_setOverCurrentDischargeProtection$2034+2)^(0+128),w
 12020  2639  0020               	movlb	0	; select bank0
 12021  263A  00AC               	movwf	___flmul@a+2
 12022  263B  0021               	movlb	1	; select bank1
 12023  263C  0825               	movf	(_setOverCurrentDischargeProtection$2034+1)^(0+128),w
 12024  263D  0020               	movlb	0	; select bank0
 12025  263E  00AB               	movwf	___flmul@a+1
 12026  263F  0021               	movlb	1	; select bank1
 12027  2640  0824               	movf	_setOverCurrentDischargeProtection$2034^(0+128),w
 12028  2641  0020               	movlb	0	; select bank0
 12029  2642  00AA               	movwf	___flmul@a
 12030  2643  3190  2023  31A5   	fcall	___flmul
 12031  2646  0020               	movlb	0	; select bank0
 12032  2647  0829               	movf	?___flmul+3,w
 12033  2648  00C7               	movwf	___fldiv@b+3
 12034  2649  0828               	movf	?___flmul+2,w
 12035  264A  00C6               	movwf	___fldiv@b+2
 12036  264B  0827               	movf	?___flmul+1,w
 12037  264C  00C5               	movwf	___fldiv@b+1
 12038  264D  0826               	movf	?___flmul,w
 12039  264E  00C4               	movwf	___fldiv@b
 12040  264F  319B  2353  31A5   	fcall	___fldiv
 12041  2652  0020               	movlb	0	; select bank0
 12042  2653  0843               	movf	?___fldiv+3,w
 12043  2654  00DD               	movwf	___flge@ff1+3
 12044  2655  0842               	movf	?___fldiv+2,w
 12045  2656  00DC               	movwf	___flge@ff1+2
 12046  2657  0841               	movf	?___fldiv+1,w
 12047  2658  00DB               	movwf	___flge@ff1+1
 12048  2659  0840               	movf	?___fldiv,w
 12049  265A  00DA               	movwf	___flge@ff1
 12050  265B  0021               	movlb	1	; select bank1
 12051  265C  0829               	movf	(setOverCurrentDischargeProtection@i+1)^(0+128),w
 12052  265D  0085               	movwf	5
 12053  265E  0828               	movf	setOverCurrentDischargeProtection@i^(0+128),w
 12054  265F  0084               	movwf	4
 12055  2660  3584               	lslf	4,f
 12056  2661  0D85               	rlf	5,f
 12057  2662  3097               	movlw	low (_OCD_threshold_setting| (0+32768))
 12058  2663  0784               	addwf	4,f
 12059  2664  30B8               	movlw	high (_OCD_threshold_setting| (0+32768))
 12060  2665  3D85               	addwfc	5,f
 12061  2666  3F00               	moviw [0]fsr0
 12062  2667  0020               	movlb	0	; select bank0
 12063  2668  00EC               	movwf	??_setOverCurrentDischargeProtection
 12064  2669  3F01               	moviw [1]fsr0
 12065  266A  00ED               	movwf	??_setOverCurrentDischargeProtection+1
 12066  266B  086C               	movf	??_setOverCurrentDischargeProtection,w
 12067  266C  00F1               	movwf	___xxtofl@val
 12068  266D  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 12069  266E  00F2               	movwf	___xxtofl@val+1
 12070  266F  0D89               	rlf	9,f
 12071  2670  3B89               	subwfb	9,f
 12072  2671  0989               	comf	9,f
 12073  2672  00F3               	movwf	___xxtofl@val+2
 12074  2673  00F4               	movwf	___xxtofl@val+3
 12075  2674  3001               	movlw	1
 12076  2675  31AB  23AF  31A5   	fcall	___xxtofl
 12077  2678  0874               	movf	?___xxtofl+3,w
 12078  2679  0020               	movlb	0	; select bank0
 12079  267A  00E1               	movwf	___flge@ff2+3
 12080  267B  0873               	movf	?___xxtofl+2,w
 12081  267C  00E0               	movwf	___flge@ff2+2
 12082  267D  0872               	movf	?___xxtofl+1,w
 12083  267E  00DF               	movwf	___flge@ff2+1
 12084  267F  0871               	movf	?___xxtofl,w
 12085  2680  00DE               	movwf	___flge@ff2
 12086  2681  31A9  21B8  31A5   	fcall	___flge
 12087  2684  1C03               	btfss	3,0
 12088  2685  2E8E               	goto	l8110
 12089                           
 12090                           ;BQ76920.c: 116:             protect2.bits.OCD_THRESH = i;
 12091  2686  0023               	movlb	3	; select bank3
 12092  2687  0853               	movf	BQ76920@protect2^(0+384),w
 12093  2688  0021               	movlb	1	; select bank1
 12094  2689  0628               	xorwf	setOverCurrentDischargeProtection@i^(0+128),w
 12095  268A  39F0               	andlw	-16
 12096  268B  0628               	xorwf	setOverCurrentDischargeProtection@i^(0+128),w
 12097  268C  0023               	movlb	3	; select bank3
 12098  268D  00D3               	movwf	BQ76920@protect2^(0+384)
 12099  268E                     l8110:	
 12100                           
 12101                           ;BQ76920.c: 118:     }
 12102  268E  3001               	movlw	1
 12103  268F  0021               	movlb	1	; select bank1
 12104  2690  07A8               	addwf	setOverCurrentDischargeProtection@i^(0+128),f
 12105  2691  3000               	movlw	0
 12106  2692  3DA9               	addwfc	(setOverCurrentDischargeProtection@i+1)^(0+128),f
 12107  2693  3000               	movlw	0
 12108  2694  0229               	subwf	(setOverCurrentDischargeProtection@i+1)^(0+128),w
 12109  2695  300F               	movlw	15
 12110  2696  1903               	skipnz
 12111  2697  0228               	subwf	setOverCurrentDischargeProtection@i^(0+128),w
 12112  2698  1C03               	skipc
 12113  2699  2DE2               	goto	l8104
 12114                           
 12115                           ;BQ76920.c: 120:     protect2.bits.OCD_DELAY = 0;
 12116  269A  308F               	movlw	-113
 12117  269B  0023               	movlb	3	; select bank3
 12118  269C  05D3               	andwf	BQ76920@protect2^(0+384),f
 12119                           
 12120                           ;BQ76920.c: 121:     for (int i = 0; i < (sizeof(OCD_delay_setting) / sizeof((OCD_delay_
      +                          setting)[0])) - 1; i++) {
 12121  269D  0021               	movlb	1	; select bank1
 12122  269E  01AA               	clrf	setOverCurrentDischargeProtection@i_985^(0+128)
 12123  269F  01AB               	clrf	(setOverCurrentDischargeProtection@i_985+1)^(0+128)
 12124  26A0                     l8122:	
 12125                           
 12126                           ;BQ76920.c: 122:         if (delay_ms >= OCD_delay_setting[i]) {
 12127  26A0  082B               	movf	(setOverCurrentDischargeProtection@i_985+1)^(0+128),w
 12128  26A1  0085               	movwf	5
 12129  26A2  082A               	movf	setOverCurrentDischargeProtection@i_985^(0+128),w
 12130  26A3  0084               	movwf	4
 12131  26A4  3584               	lslf	4,f
 12132  26A5  0D85               	rlf	5,f
 12133  26A6  30C2               	movlw	low (_OCD_delay_setting| (0+32768))
 12134  26A7  0784               	addwf	4,f
 12135  26A8  30B9               	movlw	high (_OCD_delay_setting| (0+32768))
 12136  26A9  3D85               	addwfc	5,f
 12137  26AA  3F00               	moviw [0]fsr0
 12138  26AB  0020               	movlb	0	; select bank0
 12139  26AC  00EC               	movwf	??_setOverCurrentDischargeProtection
 12140  26AD  3F01               	moviw [1]fsr0
 12141  26AE  00ED               	movwf	??_setOverCurrentDischargeProtection+1
 12142  26AF  086B               	movf	setOverCurrentDischargeProtection@delay_ms+1,w
 12143  26B0  3A80               	xorlw	128
 12144  26B1  00EE               	movwf	??_setOverCurrentDischargeProtection+2
 12145  26B2  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 12146  26B3  3A80               	xorlw	128
 12147  26B4  026E               	subwf	??_setOverCurrentDischargeProtection+2,w
 12148  26B5  1D03               	skipz
 12149  26B6  2EB9               	goto	u11205
 12150  26B7  086C               	movf	??_setOverCurrentDischargeProtection,w
 12151  26B8  026A               	subwf	setOverCurrentDischargeProtection@delay_ms,w
 12152  26B9                     u11205:	
 12153  26B9  1C03               	skipc
 12154  26BA  2EC8               	goto	l8126
 12155                           
 12156                           ;BQ76920.c: 123:             protect2.bits.OCD_DELAY = i;
 12157  26BB  0021               	movlb	1	; select bank1
 12158  26BC  082A               	movf	setOverCurrentDischargeProtection@i_985^(0+128),w
 12159  26BD  0020               	movlb	0	; select bank0
 12160  26BE  00EC               	movwf	??_setOverCurrentDischargeProtection
 12161  26BF  0EEC               	swapf	??_setOverCurrentDischargeProtection,f
 12162  26C0  0023               	movlb	3	; select bank3
 12163  26C1  0853               	movf	BQ76920@protect2^(0+384),w
 12164  26C2  0020               	movlb	0	; select bank0
 12165  26C3  066C               	xorwf	??_setOverCurrentDischargeProtection,w
 12166  26C4  398F               	andlw	-113
 12167  26C5  066C               	xorwf	??_setOverCurrentDischargeProtection,w
 12168  26C6  0023               	movlb	3	; select bank3
 12169  26C7  00D3               	movwf	BQ76920@protect2^(0+384)
 12170  26C8                     l8126:	
 12171                           
 12172                           ;BQ76920.c: 125:     }
 12173  26C8  3001               	movlw	1
 12174  26C9  0021               	movlb	1	; select bank1
 12175  26CA  07AA               	addwf	setOverCurrentDischargeProtection@i_985^(0+128),f
 12176  26CB  3000               	movlw	0
 12177  26CC  3DAB               	addwfc	(setOverCurrentDischargeProtection@i_985+1)^(0+128),f
 12178  26CD  3000               	movlw	0
 12179  26CE  022B               	subwf	(setOverCurrentDischargeProtection@i_985+1)^(0+128),w
 12180  26CF  3007               	movlw	7
 12181  26D0  1903               	skipnz
 12182  26D1  022A               	subwf	setOverCurrentDischargeProtection@i_985^(0+128),w
 12183  26D2  1C03               	skipc
 12184  26D3  2EA0               	goto	l8122
 12185                           
 12186                           ;BQ76920.c: 127:     I2C_writeRegister(0x18, 0x07, protect2.regByte);
 12187  26D4  3018               	movlw	24
 12188  26D5  00F5               	movwf	I2C_writeRegister@slaveAddress
 12189  26D6  3000               	movlw	0
 12190  26D7  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12191  26D8  3007               	movlw	7
 12192  26D9  00F7               	movwf	I2C_writeRegister@regAddress
 12193  26DA  3000               	movlw	0
 12194  26DB  00F8               	movwf	I2C_writeRegister@regAddress+1
 12195  26DC  0023               	movlb	3	; select bank3
 12196  26DD  0853               	movf	BQ76920@protect2^(0+384),w
 12197  26DE  0020               	movlb	0	; select bank0
 12198  26DF  00EC               	movwf	??_setOverCurrentDischargeProtection
 12199  26E0  01ED               	clrf	??_setOverCurrentDischargeProtection+1
 12200  26E1  086C               	movf	??_setOverCurrentDischargeProtection,w
 12201  26E2  00F9               	movwf	I2C_writeRegister@data
 12202  26E3  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 12203  26E4  00FA               	movwf	I2C_writeRegister@data+1
 12204  26E5  31B4  24FA         	fcall	_I2C_writeRegister
 12205  26E7  0008               	return
 12206  26E8                     __end_of_setOverCurrentDischargeProtection:	
 12207                           
 12208                           	psect	text40
 12209  29B8                     __ptext40:	
 12210 ;; *************** function ___flge *****************
 12211 ;; Defined at:
 12212 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
 12213 ;; Parameters:    Size  Location     Type
 12214 ;;  ff1             4   58[BANK0 ] void 
 12215 ;;  ff2             4   62[BANK0 ] void 
 12216 ;; Auto vars:     Size  Location     Type
 12217 ;;		None
 12218 ;; Return value:  Size  Location     Type
 12219 ;;		None               void
 12220 ;; Registers used:
 12221 ;;		wreg, status,2, status,0
 12222 ;; Tracked objects:
 12223 ;;		On entry : 0/0
 12224 ;;		On exit  : 0/0
 12225 ;;		Unchanged: 0/0
 12226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12227 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12229 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12230 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12231 ;;Total ram usage:       12 bytes
 12232 ;; Hardware stack levels used:    1
 12233 ;; Hardware stack levels required when called:    1
 12234 ;; This function calls:
 12235 ;;		Nothing
 12236 ;; This function is called by:
 12237 ;;		_setShortCircuitProtection
 12238 ;;		_setOverCurrentDischargeProtection
 12239 ;; This function uses a non-reentrant model
 12240 ;;
 12241                           
 12242                           
 12243                           ;psect for function ___flge
 12244  29B8                     ___flge:	
 12245                           
 12246                           ;incstack = 0
 12247                           ; Regs used in ___flge: [wreg+status,2+status,0]
 12248  29B8  3000               	movlw	0
 12249  29B9  0020               	movlb	0	; select bank0
 12250  29BA  055A               	andwf	___flge@ff1,w
 12251  29BB  00E2               	movwf	??___flge
 12252  29BC  3000               	movlw	0
 12253  29BD  055B               	andwf	___flge@ff1+1,w
 12254  29BE  00E3               	movwf	??___flge+1
 12255  29BF  3080               	movlw	128
 12256  29C0  055C               	andwf	___flge@ff1+2,w
 12257  29C1  00E4               	movwf	??___flge+2
 12258  29C2  307F               	movlw	127
 12259  29C3  055D               	andwf	___flge@ff1+3,w
 12260  29C4  00E5               	movwf	??___flge+3
 12261  29C5  0865               	movf	??___flge+3,w
 12262  29C6  0464               	iorwf	??___flge+2,w
 12263  29C7  0463               	iorwf	??___flge+1,w
 12264  29C8  0462               	iorwf	??___flge,w
 12265  29C9  1D03               	skipz
 12266  29CA  29D3               	goto	l1033
 12267  29CB  3000               	movlw	0
 12268  29CC  00DD               	movwf	___flge@ff1+3
 12269  29CD  3000               	movlw	0
 12270  29CE  00DC               	movwf	___flge@ff1+2
 12271  29CF  3000               	movlw	0
 12272  29D0  00DB               	movwf	___flge@ff1+1
 12273  29D1  3000               	movlw	0
 12274  29D2  00DA               	movwf	___flge@ff1
 12275  29D3                     l1033:	
 12276  29D3  3000               	movlw	0
 12277  29D4  055E               	andwf	___flge@ff2,w
 12278  29D5  00E2               	movwf	??___flge
 12279  29D6  3000               	movlw	0
 12280  29D7  055F               	andwf	___flge@ff2+1,w
 12281  29D8  00E3               	movwf	??___flge+1
 12282  29D9  3080               	movlw	128
 12283  29DA  0560               	andwf	___flge@ff2+2,w
 12284  29DB  00E4               	movwf	??___flge+2
 12285  29DC  307F               	movlw	127
 12286  29DD  0561               	andwf	___flge@ff2+3,w
 12287  29DE  00E5               	movwf	??___flge+3
 12288  29DF  0865               	movf	??___flge+3,w
 12289  29E0  0464               	iorwf	??___flge+2,w
 12290  29E1  0463               	iorwf	??___flge+1,w
 12291  29E2  0462               	iorwf	??___flge,w
 12292  29E3  1D03               	skipz
 12293  29E4  29ED               	goto	l7938
 12294  29E5  3000               	movlw	0
 12295  29E6  00E1               	movwf	___flge@ff2+3
 12296  29E7  3000               	movlw	0
 12297  29E8  00E0               	movwf	___flge@ff2+2
 12298  29E9  3000               	movlw	0
 12299  29EA  00DF               	movwf	___flge@ff2+1
 12300  29EB  3000               	movlw	0
 12301  29EC  00DE               	movwf	___flge@ff2
 12302  29ED                     l7938:	
 12303  29ED  1FDD               	btfss	___flge@ff1+3,7
 12304  29EE  2A07               	goto	l7942
 12305  29EF  3000               	movlw	0
 12306  29F0  00E2               	movwf	??___flge
 12307  29F1  3000               	movlw	0
 12308  29F2  00E3               	movwf	??___flge+1
 12309  29F3  3000               	movlw	0
 12310  29F4  00E4               	movwf	??___flge+2
 12311  29F5  3080               	movlw	128
 12312  29F6  00E5               	movwf	??___flge+3
 12313  29F7  085A               	movf	___flge@ff1,w
 12314  29F8  02E2               	subwf	??___flge,f
 12315  29F9  085B               	movf	___flge@ff1+1,w
 12316  29FA  3BE3               	subwfb	??___flge+1,f
 12317  29FB  085C               	movf	___flge@ff1+2,w
 12318  29FC  3BE4               	subwfb	??___flge+2,f
 12319  29FD  085D               	movf	___flge@ff1+3,w
 12320  29FE  3BE5               	subwfb	??___flge+3,f
 12321  29FF  0865               	movf	??___flge+3,w
 12322  2A00  00DD               	movwf	___flge@ff1+3
 12323  2A01  0864               	movf	??___flge+2,w
 12324  2A02  00DC               	movwf	___flge@ff1+2
 12325  2A03  0863               	movf	??___flge+1,w
 12326  2A04  00DB               	movwf	___flge@ff1+1
 12327  2A05  0862               	movf	??___flge,w
 12328  2A06  00DA               	movwf	___flge@ff1
 12329  2A07                     l7942:	
 12330  2A07  1FE1               	btfss	___flge@ff2+3,7
 12331  2A08  2A21               	goto	l1036
 12332  2A09  3000               	movlw	0
 12333  2A0A  00E2               	movwf	??___flge
 12334  2A0B  3000               	movlw	0
 12335  2A0C  00E3               	movwf	??___flge+1
 12336  2A0D  3000               	movlw	0
 12337  2A0E  00E4               	movwf	??___flge+2
 12338  2A0F  3080               	movlw	128
 12339  2A10  00E5               	movwf	??___flge+3
 12340  2A11  085E               	movf	___flge@ff2,w
 12341  2A12  02E2               	subwf	??___flge,f
 12342  2A13  085F               	movf	___flge@ff2+1,w
 12343  2A14  3BE3               	subwfb	??___flge+1,f
 12344  2A15  0860               	movf	___flge@ff2+2,w
 12345  2A16  3BE4               	subwfb	??___flge+2,f
 12346  2A17  0861               	movf	___flge@ff2+3,w
 12347  2A18  3BE5               	subwfb	??___flge+3,f
 12348  2A19  0865               	movf	??___flge+3,w
 12349  2A1A  00E1               	movwf	___flge@ff2+3
 12350  2A1B  0864               	movf	??___flge+2,w
 12351  2A1C  00E0               	movwf	___flge@ff2+2
 12352  2A1D  0863               	movf	??___flge+1,w
 12353  2A1E  00DF               	movwf	___flge@ff2+1
 12354  2A1F  0862               	movf	??___flge,w
 12355  2A20  00DE               	movwf	___flge@ff2
 12356  2A21                     l1036:	
 12357  2A21  3080               	movlw	128
 12358  2A22  06DD               	xorwf	___flge@ff1+3,f
 12359  2A23  3080               	movlw	128
 12360  2A24  06E1               	xorwf	___flge@ff2+3,f
 12361  2A25  0861               	movf	___flge@ff2+3,w
 12362  2A26  025D               	subwf	___flge@ff1+3,w
 12363  2A27  1D03               	skipz
 12364  2A28  0008               	return
 12365  2A29  0860               	movf	___flge@ff2+2,w
 12366  2A2A  025C               	subwf	___flge@ff1+2,w
 12367  2A2B  1D03               	skipz
 12368  2A2C  0008               	return
 12369  2A2D  085F               	movf	___flge@ff2+1,w
 12370  2A2E  025B               	subwf	___flge@ff1+1,w
 12371  2A2F  1D03               	skipz
 12372  2A30  0008               	return
 12373  2A31  085E               	movf	___flge@ff2,w
 12374  2A32  025A               	subwf	___flge@ff1,w
 12375  2A33  0008               	return
 12376  2A34                     __end_of___flge:	
 12377                           
 12378                           	psect	text41
 12379  205C                     __ptext41:	
 12380 ;; *************** function _setCellUndervoltageProtection *****************
 12381 ;; Defined at:
 12382 ;;		line 133 in file "BQ76920.c"
 12383 ;; Parameters:    Size  Location     Type
 12384 ;;  voltage_mV      2   18[BANK0 ] int 
 12385 ;;  delay_s         2   20[BANK0 ] int 
 12386 ;; Auto vars:     Size  Location     Type
 12387 ;;  i               2   37[BANK0 ] int 
 12388 ;;  uv_trip         1   36[BANK0 ] unsigned char 
 12389 ;; Return value:  Size  Location     Type
 12390 ;;                  1    wreg      void 
 12391 ;; Registers used:
 12392 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12393 ;; Tracked objects:
 12394 ;;		On entry : 0/0
 12395 ;;		On exit  : 0/0
 12396 ;;		Unchanged: 0/0
 12397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12398 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12399 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12400 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12401 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12402 ;;Total ram usage:       21 bytes
 12403 ;; Hardware stack levels used:    1
 12404 ;; Hardware stack levels required when called:    3
 12405 ;; This function calls:
 12406 ;;		_I2C_writeRegister
 12407 ;;		___aldiv
 12408 ;;		___lmul
 12409 ;;		_readRegister
 12410 ;; This function is called by:
 12411 ;;		_init_AFE
 12412 ;; This function uses a non-reentrant model
 12413 ;;
 12414                           
 12415                           
 12416                           ;psect for function _setCellUndervoltageProtection
 12417  205C                     _setCellUndervoltageProtection:	
 12418                           
 12419                           ;BQ76920.c: 135:     minCellVoltage = voltage_mV;
 12420                           
 12421                           ;incstack = 0
 12422                           ; Regs used in _setCellUndervoltageProtection: [wreg-fsr0h+status,2+status,0+pclath+csta
      +                          ck]
 12423  205C  0020               	movlb	0	; select bank0
 12424  205D  0833               	movf	setCellUndervoltageProtection@voltage_mV+1,w
 12425  205E  0023               	movlb	3	; select bank3
 12426  205F  00C7               	movwf	(_minCellVoltage+1)^(0+384)
 12427  2060  0020               	movlb	0	; select bank0
 12428  2061  0832               	movf	setCellUndervoltageProtection@voltage_mV,w
 12429  2062  0023               	movlb	3	; select bank3
 12430  2063  00C6               	movwf	_minCellVoltage^(0+384)
 12431                           
 12432                           ;BQ76920.c: 137:     protect3.regByte = readRegister(0x18, 0x08);
 12433  2064  3018               	movlw	24
 12434  2065  00F5               	movwf	readRegister@slaveAddress
 12435  2066  3000               	movlw	0
 12436  2067  00F6               	movwf	readRegister@slaveAddress+1
 12437  2068  3008               	movlw	8
 12438  2069  00F7               	movwf	readRegister@regAddress
 12439  206A  3000               	movlw	0
 12440  206B  00F8               	movwf	readRegister@regAddress+1
 12441  206C  31B6  2675  31A0   	fcall	_readRegister
 12442  206F  0875               	movf	?_readRegister,w
 12443  2070  0020               	movlb	0	; select bank0
 12444  2071  00B6               	movwf	??_setCellUndervoltageProtection
 12445  2072  0836               	movf	??_setCellUndervoltageProtection,w
 12446  2073  0023               	movlb	3	; select bank3
 12447  2074  00D2               	movwf	BQ76920@protect3^(0+384)
 12448                           
 12449                           ;BQ76920.c: 138:     uv_trip = ((((long) voltage_mV - adcOffset) * 1000 / adcGain) >> 4)
      +                           & 0x00FF;
 12450  2075  0022               	movlb	2	; select bank2
 12451  2076  086D               	movf	_adcGain^(0+256),w
 12452  2077  0020               	movlb	0	; select bank0
 12453  2078  00A4               	movwf	___aldiv@divisor
 12454  2079  0022               	movlb	2	; select bank2
 12455  207A  086E               	movf	(_adcGain+1)^(0+256),w
 12456  207B  0020               	movlb	0	; select bank0
 12457  207C  00A5               	movwf	___aldiv@divisor+1
 12458  207D  0D89               	rlf	9,f
 12459  207E  3B89               	subwfb	9,f
 12460  207F  0989               	comf	9,f
 12461  2080  00A6               	movwf	___aldiv@divisor+2
 12462  2081  00A7               	movwf	___aldiv@divisor+3
 12463  2082  0022               	movlb	2	; select bank2
 12464  2083  086B               	movf	_adcOffset^(0+256),w
 12465  2084  0020               	movlb	0	; select bank0
 12466  2085  00B6               	movwf	??_setCellUndervoltageProtection
 12467  2086  0022               	movlb	2	; select bank2
 12468  2087  086C               	movf	(_adcOffset+1)^(0+256),w
 12469  2088  0020               	movlb	0	; select bank0
 12470  2089  00B7               	movwf	??_setCellUndervoltageProtection+1
 12471  208A  3000               	movlw	0
 12472  208B  1BB7               	btfsc	??_setCellUndervoltageProtection+1,7
 12473  208C  30FF               	movlw	255
 12474  208D  00B8               	movwf	??_setCellUndervoltageProtection+2
 12475  208E  00B9               	movwf	??_setCellUndervoltageProtection+3
 12476  208F  0832               	movf	setCellUndervoltageProtection@voltage_mV,w
 12477  2090  00BA               	movwf	??_setCellUndervoltageProtection+4
 12478  2091  0833               	movf	setCellUndervoltageProtection@voltage_mV+1,w
 12479  2092  00BB               	movwf	??_setCellUndervoltageProtection+5
 12480  2093  3000               	movlw	0
 12481  2094  1BBB               	btfsc	??_setCellUndervoltageProtection+5,7
 12482  2095  30FF               	movlw	255
 12483  2096  00BC               	movwf	??_setCellUndervoltageProtection+6
 12484  2097  00BD               	movwf	??_setCellUndervoltageProtection+7
 12485  2098  0836               	movf	??_setCellUndervoltageProtection,w
 12486  2099  02BA               	subwf	??_setCellUndervoltageProtection+4,f
 12487  209A  0837               	movf	??_setCellUndervoltageProtection+1,w
 12488  209B  3BBB               	subwfb	??_setCellUndervoltageProtection+5,f
 12489  209C  0838               	movf	??_setCellUndervoltageProtection+2,w
 12490  209D  3BBC               	subwfb	??_setCellUndervoltageProtection+6,f
 12491  209E  0839               	movf	??_setCellUndervoltageProtection+3,w
 12492  209F  3BBD               	subwfb	??_setCellUndervoltageProtection+7,f
 12493  20A0  083D               	movf	??_setCellUndervoltageProtection+7,w
 12494  20A1  00F4               	movwf	___lmul@multiplier+3
 12495  20A2  083C               	movf	??_setCellUndervoltageProtection+6,w
 12496  20A3  00F3               	movwf	___lmul@multiplier+2
 12497  20A4  083B               	movf	??_setCellUndervoltageProtection+5,w
 12498  20A5  00F2               	movwf	___lmul@multiplier+1
 12499  20A6  083A               	movf	??_setCellUndervoltageProtection+4,w
 12500  20A7  00F1               	movwf	___lmul@multiplier
 12501  20A8  3000               	movlw	0
 12502  20A9  00F8               	movwf	___lmul@multiplicand+3
 12503  20AA  3000               	movlw	0
 12504  20AB  00F7               	movwf	___lmul@multiplicand+2
 12505  20AC  3003               	movlw	3
 12506  20AD  00F6               	movwf	___lmul@multiplicand+1
 12507  20AE  30E8               	movlw	232
 12508  20AF  00F5               	movwf	___lmul@multiplicand
 12509  20B0  31B5  25DC  31A0   	fcall	___lmul
 12510  20B3  0874               	movf	?___lmul+3,w
 12511  20B4  0020               	movlb	0	; select bank0
 12512  20B5  00AB               	movwf	___aldiv@dividend+3
 12513  20B6  0873               	movf	?___lmul+2,w
 12514  20B7  00AA               	movwf	___aldiv@dividend+2
 12515  20B8  0872               	movf	?___lmul+1,w
 12516  20B9  00A9               	movwf	___aldiv@dividend+1
 12517  20BA  0871               	movf	?___lmul,w
 12518  20BB  00A8               	movwf	___aldiv@dividend
 12519  20BC  31AB  232D  31A0   	fcall	___aldiv
 12520  20BF  0020               	movlb	0	; select bank0
 12521  20C0  0824               	movf	?___aldiv,w
 12522  20C1  00BE               	movwf	??_setCellUndervoltageProtection+8
 12523  20C2  0825               	movf	?___aldiv+1,w
 12524  20C3  00BF               	movwf	??_setCellUndervoltageProtection+9
 12525  20C4  0826               	movf	?___aldiv+2,w
 12526  20C5  00C0               	movwf	??_setCellUndervoltageProtection+10
 12527  20C6  0827               	movf	?___aldiv+3,w
 12528  20C7  00C1               	movwf	??_setCellUndervoltageProtection+11
 12529  20C8  3004               	movlw	4
 12530  20C9  00C2               	movwf	??_setCellUndervoltageProtection+12
 12531  20CA                     u11225:	
 12532  20CA  37C1               	asrf	??_setCellUndervoltageProtection+11,f
 12533  20CB  0CC0               	rrf	??_setCellUndervoltageProtection+10,f
 12534  20CC  0CBF               	rrf	??_setCellUndervoltageProtection+9,f
 12535  20CD  0CBE               	rrf	??_setCellUndervoltageProtection+8,f
 12536  20CE  0BC2               	decfsz	??_setCellUndervoltageProtection+12,f
 12537  20CF  28CA               	goto	u11225
 12538  20D0  083E               	movf	??_setCellUndervoltageProtection+8,w
 12539  20D1  00C3               	movwf	??_setCellUndervoltageProtection+13
 12540  20D2  0843               	movf	??_setCellUndervoltageProtection+13,w
 12541  20D3  00C4               	movwf	setCellUndervoltageProtection@uv_trip
 12542                           
 12543                           ;BQ76920.c: 139:     uv_trip += 1;
 12544  20D4  3001               	movlw	1
 12545  20D5  00B6               	movwf	??_setCellUndervoltageProtection
 12546  20D6  0836               	movf	??_setCellUndervoltageProtection,w
 12547  20D7  07C4               	addwf	setCellUndervoltageProtection@uv_trip,f
 12548                           
 12549                           ;BQ76920.c: 140:     I2C_writeRegister(0x18, 0x0A, uv_trip);
 12550  20D8  3018               	movlw	24
 12551  20D9  00F5               	movwf	I2C_writeRegister@slaveAddress
 12552  20DA  3000               	movlw	0
 12553  20DB  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12554  20DC  300A               	movlw	10
 12555  20DD  00F7               	movwf	I2C_writeRegister@regAddress
 12556  20DE  3000               	movlw	0
 12557  20DF  00F8               	movwf	I2C_writeRegister@regAddress+1
 12558  20E0  0844               	movf	setCellUndervoltageProtection@uv_trip,w
 12559  20E1  00B6               	movwf	??_setCellUndervoltageProtection
 12560  20E2  01B7               	clrf	??_setCellUndervoltageProtection+1
 12561  20E3  0836               	movf	??_setCellUndervoltageProtection,w
 12562  20E4  00F9               	movwf	I2C_writeRegister@data
 12563  20E5  0837               	movf	??_setCellUndervoltageProtection+1,w
 12564  20E6  00FA               	movwf	I2C_writeRegister@data+1
 12565  20E7  31B4  24FA  31A0   	fcall	_I2C_writeRegister
 12566                           
 12567                           ;BQ76920.c: 142:     protect3.bits.UV_DELAY = 0;
 12568  20EA  303F               	movlw	-193
 12569  20EB  0023               	movlb	3	; select bank3
 12570  20EC  05D2               	andwf	BQ76920@protect3^(0+384),f
 12571                           
 12572                           ;BQ76920.c: 143:     for (int i = 0; i < (sizeof(UV_delay_setting) / sizeof((UV_delay_se
      +                          tting)[0])) - 1; i++) {
 12573  20ED  0020               	movlb	0	; select bank0
 12574  20EE  01C5               	clrf	setCellUndervoltageProtection@i
 12575  20EF  01C6               	clrf	setCellUndervoltageProtection@i+1
 12576  20F0                     l8152:	
 12577                           
 12578                           ;BQ76920.c: 144:         if (delay_s >= UV_delay_setting[i]) {
 12579  20F0  0846               	movf	setCellUndervoltageProtection@i+1,w
 12580  20F1  0085               	movwf	5
 12581  20F2  0845               	movf	setCellUndervoltageProtection@i,w
 12582  20F3  0084               	movwf	4
 12583  20F4  3584               	lslf	4,f
 12584  20F5  0D85               	rlf	5,f
 12585  20F6  3008               	movlw	low (_UV_delay_setting| (0+32768))
 12586  20F7  0784               	addwf	4,f
 12587  20F8  30BA               	movlw	high (_UV_delay_setting| (0+32768))
 12588  20F9  3D85               	addwfc	5,f
 12589  20FA  3F00               	moviw [0]fsr0
 12590  20FB  00B6               	movwf	??_setCellUndervoltageProtection
 12591  20FC  3F01               	moviw [1]fsr0
 12592  20FD  00B7               	movwf	??_setCellUndervoltageProtection+1
 12593  20FE  0835               	movf	setCellUndervoltageProtection@delay_s+1,w
 12594  20FF  3A80               	xorlw	128
 12595  2100  00B8               	movwf	??_setCellUndervoltageProtection+2
 12596  2101  0837               	movf	??_setCellUndervoltageProtection+1,w
 12597  2102  3A80               	xorlw	128
 12598  2103  0238               	subwf	??_setCellUndervoltageProtection+2,w
 12599  2104  1D03               	skipz
 12600  2105  2908               	goto	u11235
 12601  2106  0836               	movf	??_setCellUndervoltageProtection,w
 12602  2107  0234               	subwf	setCellUndervoltageProtection@delay_s,w
 12603  2108                     u11235:	
 12604  2108  1C03               	skipc
 12605  2109  2918               	goto	l8156
 12606                           
 12607                           ;BQ76920.c: 145:             protect3.bits.UV_DELAY = i;
 12608  210A  0020               	movlb	0	; select bank0
 12609  210B  0845               	movf	setCellUndervoltageProtection@i,w
 12610  210C  00B6               	movwf	??_setCellUndervoltageProtection
 12611  210D  0EB6               	swapf	??_setCellUndervoltageProtection,f
 12612  210E  0DB6               	rlf	??_setCellUndervoltageProtection,f
 12613  210F  0DB6               	rlf	??_setCellUndervoltageProtection,f
 12614  2110  0023               	movlb	3	; select bank3
 12615  2111  0852               	movf	BQ76920@protect3^(0+384),w
 12616  2112  0020               	movlb	0	; select bank0
 12617  2113  0636               	xorwf	??_setCellUndervoltageProtection,w
 12618  2114  393F               	andlw	-193
 12619  2115  0636               	xorwf	??_setCellUndervoltageProtection,w
 12620  2116  0023               	movlb	3	; select bank3
 12621  2117  00D2               	movwf	BQ76920@protect3^(0+384)
 12622  2118                     l8156:	
 12623                           
 12624                           ;BQ76920.c: 147:     }
 12625  2118  3001               	movlw	1
 12626  2119  0020               	movlb	0	; select bank0
 12627  211A  07C5               	addwf	setCellUndervoltageProtection@i,f
 12628  211B  3000               	movlw	0
 12629  211C  3DC6               	addwfc	setCellUndervoltageProtection@i+1,f
 12630  211D  3000               	movlw	0
 12631  211E  0246               	subwf	setCellUndervoltageProtection@i+1,w
 12632  211F  3003               	movlw	3
 12633  2120  1903               	skipnz
 12634  2121  0245               	subwf	setCellUndervoltageProtection@i,w
 12635  2122  1C03               	skipc
 12636  2123  28F0               	goto	l8152
 12637                           
 12638                           ;BQ76920.c: 148:     I2C_writeRegister(0x18, 0x08, protect3.regByte);
 12639  2124  3018               	movlw	24
 12640  2125  00F5               	movwf	I2C_writeRegister@slaveAddress
 12641  2126  3000               	movlw	0
 12642  2127  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12643  2128  3008               	movlw	8
 12644  2129  00F7               	movwf	I2C_writeRegister@regAddress
 12645  212A  3000               	movlw	0
 12646  212B  00F8               	movwf	I2C_writeRegister@regAddress+1
 12647  212C  0023               	movlb	3	; select bank3
 12648  212D  0852               	movf	BQ76920@protect3^(0+384),w
 12649  212E  0020               	movlb	0	; select bank0
 12650  212F  00B6               	movwf	??_setCellUndervoltageProtection
 12651  2130  01B7               	clrf	??_setCellUndervoltageProtection+1
 12652  2131  0836               	movf	??_setCellUndervoltageProtection,w
 12653  2132  00F9               	movwf	I2C_writeRegister@data
 12654  2133  0837               	movf	??_setCellUndervoltageProtection+1,w
 12655  2134  00FA               	movwf	I2C_writeRegister@data+1
 12656  2135  31B4  24FA         	fcall	_I2C_writeRegister
 12657  2137  0008               	return
 12658  2138                     __end_of_setCellUndervoltageProtection:	
 12659                           
 12660                           	psect	text42
 12661  2F2B                     __ptext42:	
 12662 ;; *************** function _setCellOvervoltageProtection *****************
 12663 ;; Defined at:
 12664 ;;		line 154 in file "BQ76920.c"
 12665 ;; Parameters:    Size  Location     Type
 12666 ;;  voltage_mV      2   18[BANK0 ] int 
 12667 ;;  delay_s         2   20[BANK0 ] int 
 12668 ;; Auto vars:     Size  Location     Type
 12669 ;;  i               2   37[BANK0 ] int 
 12670 ;;  ov_trip         1   36[BANK0 ] unsigned char 
 12671 ;; Return value:  Size  Location     Type
 12672 ;;                  1    wreg      void 
 12673 ;; Registers used:
 12674 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12675 ;; Tracked objects:
 12676 ;;		On entry : 0/0
 12677 ;;		On exit  : 0/0
 12678 ;;		Unchanged: 0/0
 12679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12680 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12681 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12682 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12683 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12684 ;;Total ram usage:       21 bytes
 12685 ;; Hardware stack levels used:    1
 12686 ;; Hardware stack levels required when called:    3
 12687 ;; This function calls:
 12688 ;;		_I2C_writeRegister
 12689 ;;		___aldiv
 12690 ;;		___lmul
 12691 ;;		_readRegister
 12692 ;; This function is called by:
 12693 ;;		_init_AFE
 12694 ;; This function uses a non-reentrant model
 12695 ;;
 12696                           
 12697                           
 12698                           ;psect for function _setCellOvervoltageProtection
 12699  2F2B                     _setCellOvervoltageProtection:	
 12700                           
 12701                           ;BQ76920.c: 156:     maxCellVoltage = voltage_mV;
 12702                           
 12703                           ;incstack = 0
 12704                           ; Regs used in _setCellOvervoltageProtection: [wreg-fsr0h+status,2+status,0+pclath+cstac
      +                          k]
 12705  2F2B  0020               	movlb	0	; select bank0
 12706  2F2C  0833               	movf	setCellOvervoltageProtection@voltage_mV+1,w
 12707  2F2D  0023               	movlb	3	; select bank3
 12708  2F2E  00C9               	movwf	(_maxCellVoltage+1)^(0+384)
 12709  2F2F  0020               	movlb	0	; select bank0
 12710  2F30  0832               	movf	setCellOvervoltageProtection@voltage_mV,w
 12711  2F31  0023               	movlb	3	; select bank3
 12712  2F32  00C8               	movwf	_maxCellVoltage^(0+384)
 12713                           
 12714                           ;BQ76920.c: 157:     protect3.regByte = readRegister(0x18, 0x08);
 12715  2F33  3018               	movlw	24
 12716  2F34  00F5               	movwf	readRegister@slaveAddress
 12717  2F35  3000               	movlw	0
 12718  2F36  00F6               	movwf	readRegister@slaveAddress+1
 12719  2F37  3008               	movlw	8
 12720  2F38  00F7               	movwf	readRegister@regAddress
 12721  2F39  3000               	movlw	0
 12722  2F3A  00F8               	movwf	readRegister@regAddress+1
 12723  2F3B  31B6  2675  31AF   	fcall	_readRegister
 12724  2F3E  0875               	movf	?_readRegister,w
 12725  2F3F  0020               	movlb	0	; select bank0
 12726  2F40  00B6               	movwf	??_setCellOvervoltageProtection
 12727  2F41  0836               	movf	??_setCellOvervoltageProtection,w
 12728  2F42  0023               	movlb	3	; select bank3
 12729  2F43  00D2               	movwf	BQ76920@protect3^(0+384)
 12730                           
 12731                           ;BQ76920.c: 158:     ov_trip = ((((long) voltage_mV - adcOffset) * 1000 / adcGain) >> 4)
      +                           & 0x00FF;
 12732  2F44  0022               	movlb	2	; select bank2
 12733  2F45  086D               	movf	_adcGain^(0+256),w
 12734  2F46  0020               	movlb	0	; select bank0
 12735  2F47  00A4               	movwf	___aldiv@divisor
 12736  2F48  0022               	movlb	2	; select bank2
 12737  2F49  086E               	movf	(_adcGain+1)^(0+256),w
 12738  2F4A  0020               	movlb	0	; select bank0
 12739  2F4B  00A5               	movwf	___aldiv@divisor+1
 12740  2F4C  0D89               	rlf	9,f
 12741  2F4D  3B89               	subwfb	9,f
 12742  2F4E  0989               	comf	9,f
 12743  2F4F  00A6               	movwf	___aldiv@divisor+2
 12744  2F50  00A7               	movwf	___aldiv@divisor+3
 12745  2F51  0022               	movlb	2	; select bank2
 12746  2F52  086B               	movf	_adcOffset^(0+256),w
 12747  2F53  0020               	movlb	0	; select bank0
 12748  2F54  00B6               	movwf	??_setCellOvervoltageProtection
 12749  2F55  0022               	movlb	2	; select bank2
 12750  2F56  086C               	movf	(_adcOffset+1)^(0+256),w
 12751  2F57  0020               	movlb	0	; select bank0
 12752  2F58  00B7               	movwf	??_setCellOvervoltageProtection+1
 12753  2F59  3000               	movlw	0
 12754  2F5A  1BB7               	btfsc	??_setCellOvervoltageProtection+1,7
 12755  2F5B  30FF               	movlw	255
 12756  2F5C  00B8               	movwf	??_setCellOvervoltageProtection+2
 12757  2F5D  00B9               	movwf	??_setCellOvervoltageProtection+3
 12758  2F5E  0832               	movf	setCellOvervoltageProtection@voltage_mV,w
 12759  2F5F  00BA               	movwf	??_setCellOvervoltageProtection+4
 12760  2F60  0833               	movf	setCellOvervoltageProtection@voltage_mV+1,w
 12761  2F61  00BB               	movwf	??_setCellOvervoltageProtection+5
 12762  2F62  3000               	movlw	0
 12763  2F63  1BBB               	btfsc	??_setCellOvervoltageProtection+5,7
 12764  2F64  30FF               	movlw	255
 12765  2F65  00BC               	movwf	??_setCellOvervoltageProtection+6
 12766  2F66  00BD               	movwf	??_setCellOvervoltageProtection+7
 12767  2F67  0836               	movf	??_setCellOvervoltageProtection,w
 12768  2F68  02BA               	subwf	??_setCellOvervoltageProtection+4,f
 12769  2F69  0837               	movf	??_setCellOvervoltageProtection+1,w
 12770  2F6A  3BBB               	subwfb	??_setCellOvervoltageProtection+5,f
 12771  2F6B  0838               	movf	??_setCellOvervoltageProtection+2,w
 12772  2F6C  3BBC               	subwfb	??_setCellOvervoltageProtection+6,f
 12773  2F6D  0839               	movf	??_setCellOvervoltageProtection+3,w
 12774  2F6E  3BBD               	subwfb	??_setCellOvervoltageProtection+7,f
 12775  2F6F  083D               	movf	??_setCellOvervoltageProtection+7,w
 12776  2F70  00F4               	movwf	___lmul@multiplier+3
 12777  2F71  083C               	movf	??_setCellOvervoltageProtection+6,w
 12778  2F72  00F3               	movwf	___lmul@multiplier+2
 12779  2F73  083B               	movf	??_setCellOvervoltageProtection+5,w
 12780  2F74  00F2               	movwf	___lmul@multiplier+1
 12781  2F75  083A               	movf	??_setCellOvervoltageProtection+4,w
 12782  2F76  00F1               	movwf	___lmul@multiplier
 12783  2F77  3000               	movlw	0
 12784  2F78  00F8               	movwf	___lmul@multiplicand+3
 12785  2F79  3000               	movlw	0
 12786  2F7A  00F7               	movwf	___lmul@multiplicand+2
 12787  2F7B  3003               	movlw	3
 12788  2F7C  00F6               	movwf	___lmul@multiplicand+1
 12789  2F7D  30E8               	movlw	232
 12790  2F7E  00F5               	movwf	___lmul@multiplicand
 12791  2F7F  31B5  25DC  31AF   	fcall	___lmul
 12792  2F82  0874               	movf	?___lmul+3,w
 12793  2F83  0020               	movlb	0	; select bank0
 12794  2F84  00AB               	movwf	___aldiv@dividend+3
 12795  2F85  0873               	movf	?___lmul+2,w
 12796  2F86  00AA               	movwf	___aldiv@dividend+2
 12797  2F87  0872               	movf	?___lmul+1,w
 12798  2F88  00A9               	movwf	___aldiv@dividend+1
 12799  2F89  0871               	movf	?___lmul,w
 12800  2F8A  00A8               	movwf	___aldiv@dividend
 12801  2F8B  31AB  232D  31AF   	fcall	___aldiv
 12802  2F8E  0020               	movlb	0	; select bank0
 12803  2F8F  0824               	movf	?___aldiv,w
 12804  2F90  00BE               	movwf	??_setCellOvervoltageProtection+8
 12805  2F91  0825               	movf	?___aldiv+1,w
 12806  2F92  00BF               	movwf	??_setCellOvervoltageProtection+9
 12807  2F93  0826               	movf	?___aldiv+2,w
 12808  2F94  00C0               	movwf	??_setCellOvervoltageProtection+10
 12809  2F95  0827               	movf	?___aldiv+3,w
 12810  2F96  00C1               	movwf	??_setCellOvervoltageProtection+11
 12811  2F97  3004               	movlw	4
 12812  2F98  00C2               	movwf	??_setCellOvervoltageProtection+12
 12813  2F99                     u11255:	
 12814  2F99  37C1               	asrf	??_setCellOvervoltageProtection+11,f
 12815  2F9A  0CC0               	rrf	??_setCellOvervoltageProtection+10,f
 12816  2F9B  0CBF               	rrf	??_setCellOvervoltageProtection+9,f
 12817  2F9C  0CBE               	rrf	??_setCellOvervoltageProtection+8,f
 12818  2F9D  0BC2               	decfsz	??_setCellOvervoltageProtection+12,f
 12819  2F9E  2F99               	goto	u11255
 12820  2F9F  083E               	movf	??_setCellOvervoltageProtection+8,w
 12821  2FA0  00C3               	movwf	??_setCellOvervoltageProtection+13
 12822  2FA1  0843               	movf	??_setCellOvervoltageProtection+13,w
 12823  2FA2  00C4               	movwf	setCellOvervoltageProtection@ov_trip
 12824                           
 12825                           ;BQ76920.c: 159:     I2C_writeRegister(0x18, 0x09, ov_trip);
 12826  2FA3  3018               	movlw	24
 12827  2FA4  00F5               	movwf	I2C_writeRegister@slaveAddress
 12828  2FA5  3000               	movlw	0
 12829  2FA6  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12830  2FA7  3009               	movlw	9
 12831  2FA8  00F7               	movwf	I2C_writeRegister@regAddress
 12832  2FA9  3000               	movlw	0
 12833  2FAA  00F8               	movwf	I2C_writeRegister@regAddress+1
 12834  2FAB  0844               	movf	setCellOvervoltageProtection@ov_trip,w
 12835  2FAC  00B6               	movwf	??_setCellOvervoltageProtection
 12836  2FAD  01B7               	clrf	??_setCellOvervoltageProtection+1
 12837  2FAE  0836               	movf	??_setCellOvervoltageProtection,w
 12838  2FAF  00F9               	movwf	I2C_writeRegister@data
 12839  2FB0  0837               	movf	??_setCellOvervoltageProtection+1,w
 12840  2FB1  00FA               	movwf	I2C_writeRegister@data+1
 12841  2FB2  31B4  24FA  31AF   	fcall	_I2C_writeRegister
 12842                           
 12843                           ;BQ76920.c: 161:     for (int i = 0; i < (sizeof(OV_delay_setting) / sizeof((OV_delay_se
      +                          tting)[0])) - 1; i++) {
 12844  2FB5  0020               	movlb	0	; select bank0
 12845  2FB6  01C5               	clrf	setCellOvervoltageProtection@i
 12846  2FB7  01C6               	clrf	setCellOvervoltageProtection@i+1
 12847  2FB8                     l8178:	
 12848                           
 12849                           ;BQ76920.c: 162:         if (delay_s >= OV_delay_setting[i]) {
 12850  2FB8  0846               	movf	setCellOvervoltageProtection@i+1,w
 12851  2FB9  0085               	movwf	5
 12852  2FBA  0845               	movf	setCellOvervoltageProtection@i,w
 12853  2FBB  0084               	movwf	4
 12854  2FBC  3584               	lslf	4,f
 12855  2FBD  0D85               	rlf	5,f
 12856  2FBE  3000               	movlw	low (_OV_delay_setting| (0+32768))
 12857  2FBF  0784               	addwf	4,f
 12858  2FC0  30BA               	movlw	high (_OV_delay_setting| (0+32768))
 12859  2FC1  3D85               	addwfc	5,f
 12860  2FC2  3F00               	moviw [0]fsr0
 12861  2FC3  00B6               	movwf	??_setCellOvervoltageProtection
 12862  2FC4  3F01               	moviw [1]fsr0
 12863  2FC5  00B7               	movwf	??_setCellOvervoltageProtection+1
 12864  2FC6  0835               	movf	setCellOvervoltageProtection@delay_s+1,w
 12865  2FC7  3A80               	xorlw	128
 12866  2FC8  00B8               	movwf	??_setCellOvervoltageProtection+2
 12867  2FC9  0837               	movf	??_setCellOvervoltageProtection+1,w
 12868  2FCA  3A80               	xorlw	128
 12869  2FCB  0238               	subwf	??_setCellOvervoltageProtection+2,w
 12870  2FCC  1D03               	skipz
 12871  2FCD  2FD0               	goto	u11265
 12872  2FCE  0836               	movf	??_setCellOvervoltageProtection,w
 12873  2FCF  0234               	subwf	setCellOvervoltageProtection@delay_s,w
 12874  2FD0                     u11265:	
 12875  2FD0  1C03               	skipc
 12876  2FD1  2FE0               	goto	l8182
 12877                           
 12878                           ;BQ76920.c: 163:             protect3.bits.UV_DELAY = i;
 12879  2FD2  0020               	movlb	0	; select bank0
 12880  2FD3  0845               	movf	setCellOvervoltageProtection@i,w
 12881  2FD4  00B6               	movwf	??_setCellOvervoltageProtection
 12882  2FD5  0EB6               	swapf	??_setCellOvervoltageProtection,f
 12883  2FD6  0DB6               	rlf	??_setCellOvervoltageProtection,f
 12884  2FD7  0DB6               	rlf	??_setCellOvervoltageProtection,f
 12885  2FD8  0023               	movlb	3	; select bank3
 12886  2FD9  0852               	movf	BQ76920@protect3^(0+384),w
 12887  2FDA  0020               	movlb	0	; select bank0
 12888  2FDB  0636               	xorwf	??_setCellOvervoltageProtection,w
 12889  2FDC  393F               	andlw	-193
 12890  2FDD  0636               	xorwf	??_setCellOvervoltageProtection,w
 12891  2FDE  0023               	movlb	3	; select bank3
 12892  2FDF  00D2               	movwf	BQ76920@protect3^(0+384)
 12893  2FE0                     l8182:	
 12894                           
 12895                           ;BQ76920.c: 165:     }
 12896  2FE0  3001               	movlw	1
 12897  2FE1  0020               	movlb	0	; select bank0
 12898  2FE2  07C5               	addwf	setCellOvervoltageProtection@i,f
 12899  2FE3  3000               	movlw	0
 12900  2FE4  3DC6               	addwfc	setCellOvervoltageProtection@i+1,f
 12901  2FE5  3000               	movlw	0
 12902  2FE6  0246               	subwf	setCellOvervoltageProtection@i+1,w
 12903  2FE7  3003               	movlw	3
 12904  2FE8  1903               	skipnz
 12905  2FE9  0245               	subwf	setCellOvervoltageProtection@i,w
 12906  2FEA  1C03               	skipc
 12907  2FEB  2FB8               	goto	l8178
 12908                           
 12909                           ;BQ76920.c: 166:     I2C_writeRegister(0x18,0x08, protect3.regByte);
 12910  2FEC  3018               	movlw	24
 12911  2FED  00F5               	movwf	I2C_writeRegister@slaveAddress
 12912  2FEE  3000               	movlw	0
 12913  2FEF  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12914  2FF0  3008               	movlw	8
 12915  2FF1  00F7               	movwf	I2C_writeRegister@regAddress
 12916  2FF2  3000               	movlw	0
 12917  2FF3  00F8               	movwf	I2C_writeRegister@regAddress+1
 12918  2FF4  0023               	movlb	3	; select bank3
 12919  2FF5  0852               	movf	BQ76920@protect3^(0+384),w
 12920  2FF6  0020               	movlb	0	; select bank0
 12921  2FF7  00B6               	movwf	??_setCellOvervoltageProtection
 12922  2FF8  01B7               	clrf	??_setCellOvervoltageProtection+1
 12923  2FF9  0836               	movf	??_setCellOvervoltageProtection,w
 12924  2FFA  00F9               	movwf	I2C_writeRegister@data
 12925  2FFB  0837               	movf	??_setCellOvervoltageProtection+1,w
 12926  2FFC  00FA               	movwf	I2C_writeRegister@data+1
 12927  2FFD  31B4  24FA         	fcall	_I2C_writeRegister
 12928  2FFF  0008               	return
 12929  3000                     __end_of_setCellOvervoltageProtection:	
 12930                           
 12931                           	psect	text43
 12932  2CEE                     __ptext43:	
 12933 ;; *************** function _beginAFEcommunication *****************
 12934 ;; Defined at:
 12935 ;;		line 28 in file "BQ76920.c"
 12936 ;; Parameters:    Size  Location     Type
 12937 ;;		None
 12938 ;; Auto vars:     Size  Location     Type
 12939 ;;  i               2   13[BANK0 ] int 
 12940 ;;  commSuccess     2   11[BANK0 ] int 
 12941 ;; Return value:  Size  Location     Type
 12942 ;;                  2    0[BANK0 ] int 
 12943 ;; Registers used:
 12944 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12945 ;; Tracked objects:
 12946 ;;		On entry : 0/0
 12947 ;;		On exit  : 0/0
 12948 ;;		Unchanged: 0/0
 12949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12950 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12951 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12952 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12953 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12954 ;;Total ram usage:       15 bytes
 12955 ;; Hardware stack levels used:    1
 12956 ;; Hardware stack levels required when called:    3
 12957 ;; This function calls:
 12958 ;;		_I2C_writeRegister
 12959 ;;		_readRegister
 12960 ;; This function is called by:
 12961 ;;		_statemachine
 12962 ;; This function uses a non-reentrant model
 12963 ;;
 12964                           
 12965                           
 12966                           ;psect for function _beginAFEcommunication
 12967  2CEE                     _beginAFEcommunication:	
 12968                           
 12969                           ;BQ76920.c: 30:     int commSuccess = 0;
 12970                           
 12971                           ;incstack = 0
 12972                           ; Regs used in _beginAFEcommunication: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 12973  2CEE  0020               	movlb	0	; select bank0
 12974  2CEF  01AB               	clrf	beginAFEcommunication@commSuccess
 12975  2CF0  01AC               	clrf	beginAFEcommunication@commSuccess+1
 12976                           
 12977                           ;BQ76920.c: 33:     for (int i = 0; i < 4; i++) {
 12978  2CF1  01AD               	clrf	beginAFEcommunication@i
 12979  2CF2  01AE               	clrf	beginAFEcommunication@i+1
 12980  2CF3                     l8302:	
 12981                           
 12982                           ;BQ76920.c: 34:         cellVoltages[i] = 0;
 12983  2CF3  0020               	movlb	0	; select bank0
 12984  2CF4  352D               	lslf	beginAFEcommunication@i,w
 12985  2CF5  3EA0               	addlw	(low (_cellVoltages| (0+256)))& (0+255)
 12986  2CF6  0086               	movwf	6
 12987  2CF7  3001               	movlw	1	; select bank3/4
 12988  2CF8  0087               	movwf	7
 12989  2CF9  3000               	movlw	0
 12990  2CFA  3FC0               	movwi [0]fsr1
 12991  2CFB  3FC1               	movwi [1]fsr1
 12992                           
 12993                           ;BQ76920.c: 35:     }
 12994  2CFC  3001               	movlw	1
 12995  2CFD  07AD               	addwf	beginAFEcommunication@i,f
 12996  2CFE  3000               	movlw	0
 12997  2CFF  3DAE               	addwfc	beginAFEcommunication@i+1,f
 12998  2D00  082E               	movf	beginAFEcommunication@i+1,w
 12999  2D01  3A80               	xorlw	128
 13000  2D02  00A2               	movwf	??_beginAFEcommunication
 13001  2D03  3080               	movlw	128
 13002  2D04  0222               	subwf	??_beginAFEcommunication,w
 13003  2D05  1D03               	skipz
 13004  2D06  2D09               	goto	u11375
 13005  2D07  3004               	movlw	4
 13006  2D08  022D               	subwf	beginAFEcommunication@i,w
 13007  2D09                     u11375:	
 13008  2D09  1C03               	skipc
 13009  2D0A  2CF3               	goto	l8302
 13010                           
 13011                           ;BQ76920.c: 38:     I2C_writeRegister(0x18, 0x0B, 0x19);
 13012  2D0B  3018               	movlw	24
 13013  2D0C  00F5               	movwf	I2C_writeRegister@slaveAddress
 13014  2D0D  3000               	movlw	0
 13015  2D0E  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 13016  2D0F  300B               	movlw	11
 13017  2D10  00F7               	movwf	I2C_writeRegister@regAddress
 13018  2D11  3000               	movlw	0
 13019  2D12  00F8               	movwf	I2C_writeRegister@regAddress+1
 13020  2D13  3019               	movlw	25
 13021  2D14  00F9               	movwf	I2C_writeRegister@data
 13022  2D15  3000               	movlw	0
 13023  2D16  00FA               	movwf	I2C_writeRegister@data+1
 13024  2D17  31B4  24FA  31AC   	fcall	_I2C_writeRegister
 13025                           
 13026                           ;BQ76920.c: 40:     if (readRegister(0x18, 0x0B) == 0x19) {
 13027  2D1A  3018               	movlw	24
 13028  2D1B  00F5               	movwf	readRegister@slaveAddress
 13029  2D1C  3000               	movlw	0
 13030  2D1D  00F6               	movwf	readRegister@slaveAddress+1
 13031  2D1E  300B               	movlw	11
 13032  2D1F  00F7               	movwf	readRegister@regAddress
 13033  2D20  3000               	movlw	0
 13034  2D21  00F8               	movwf	readRegister@regAddress+1
 13035  2D22  31B6  2675  31AC   	fcall	_readRegister
 13036  2D25  3019               	movlw	25
 13037  2D26  0675               	xorwf	?_readRegister,w
 13038  2D27  0476               	iorwf	?_readRegister+1,w
 13039  2D28  1D03               	btfss	3,2
 13040  2D29  2D9C               	goto	l455
 13041                           
 13042                           ;BQ76920.c: 41:         commSuccess = 1;
 13043  2D2A  3001               	movlw	1
 13044  2D2B  0020               	movlb	0	; select bank0
 13045  2D2C  00AB               	movwf	beginAFEcommunication@commSuccess
 13046  2D2D  3000               	movlw	0
 13047  2D2E  00AC               	movwf	beginAFEcommunication@commSuccess+1
 13048                           
 13049                           ;BQ76920.c: 45:         I2C_writeRegister(0x18, 0x04, 0x18);
 13050  2D2F  3018               	movlw	24
 13051  2D30  00F5               	movwf	I2C_writeRegister@slaveAddress
 13052  2D31  3000               	movlw	0
 13053  2D32  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 13054  2D33  3004               	movlw	4
 13055  2D34  00F7               	movwf	I2C_writeRegister@regAddress
 13056  2D35  3000               	movlw	0
 13057  2D36  00F8               	movwf	I2C_writeRegister@regAddress+1
 13058  2D37  3018               	movlw	24
 13059  2D38  00F9               	movwf	I2C_writeRegister@data
 13060  2D39  3000               	movlw	0
 13061  2D3A  00FA               	movwf	I2C_writeRegister@data+1
 13062  2D3B  31B4  24FA  31AC   	fcall	_I2C_writeRegister
 13063                           
 13064                           ;BQ76920.c: 46:         I2C_writeRegister(0x18, 0x05, 0x40);
 13065  2D3E  3018               	movlw	24
 13066  2D3F  00F5               	movwf	I2C_writeRegister@slaveAddress
 13067  2D40  3000               	movlw	0
 13068  2D41  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 13069  2D42  3005               	movlw	5
 13070  2D43  00F7               	movwf	I2C_writeRegister@regAddress
 13071  2D44  3000               	movlw	0
 13072  2D45  00F8               	movwf	I2C_writeRegister@regAddress+1
 13073  2D46  3040               	movlw	64
 13074  2D47  00F9               	movwf	I2C_writeRegister@data
 13075  2D48  3000               	movlw	0
 13076  2D49  00FA               	movwf	I2C_writeRegister@data+1
 13077  2D4A  31B4  24FA  31AC   	fcall	_I2C_writeRegister
 13078                           
 13079                           ;BQ76920.c: 49:         adcOffset = (signed int) readRegister(0x18, 0x51);
 13080  2D4D  3018               	movlw	24
 13081  2D4E  00F5               	movwf	readRegister@slaveAddress
 13082  2D4F  3000               	movlw	0
 13083  2D50  00F6               	movwf	readRegister@slaveAddress+1
 13084  2D51  3051               	movlw	81
 13085  2D52  00F7               	movwf	readRegister@regAddress
 13086  2D53  3000               	movlw	0
 13087  2D54  00F8               	movwf	readRegister@regAddress+1
 13088  2D55  31B6  2675  31AC   	fcall	_readRegister
 13089  2D58  0876               	movf	?_readRegister+1,w
 13090  2D59  0022               	movlb	2	; select bank2
 13091  2D5A  00EC               	movwf	(_adcOffset+1)^(0+256)
 13092  2D5B  0875               	movf	?_readRegister,w
 13093  2D5C  00EB               	movwf	_adcOffset^(0+256)
 13094                           
 13095                           ;BQ76920.c: 50:         adcGain = 365 + (((readRegister(0x18, 0x50) & 0x0C) << 1) |
 13096  2D5D  3018               	movlw	24
 13097  2D5E  00F5               	movwf	readRegister@slaveAddress
 13098  2D5F  3000               	movlw	0
 13099  2D60  00F6               	movwf	readRegister@slaveAddress+1
 13100  2D61  3059               	movlw	89
 13101  2D62  00F7               	movwf	readRegister@regAddress
 13102  2D63  3000               	movlw	0
 13103  2D64  00F8               	movwf	readRegister@regAddress+1
 13104  2D65  31B6  2675  31AC   	fcall	_readRegister
 13105  2D68  0875               	movf	?_readRegister,w
 13106  2D69  0020               	movlb	0	; select bank0
 13107  2D6A  00A2               	movwf	??_beginAFEcommunication
 13108  2D6B  0876               	movf	?_readRegister+1,w
 13109  2D6C  00A3               	movwf	??_beginAFEcommunication+1
 13110  2D6D  3005               	movlw	5
 13111  2D6E  00A4               	movwf	??_beginAFEcommunication+2
 13112  2D6F                     u11395:	
 13113  2D6F  0D23               	rlf	??_beginAFEcommunication+1,w
 13114  2D70  0CA3               	rrf	??_beginAFEcommunication+1,f
 13115  2D71  0CA2               	rrf	??_beginAFEcommunication,f
 13116  2D72  0BA4               	decfsz	??_beginAFEcommunication+2,f
 13117  2D73  2D6F               	goto	u11395
 13118  2D74  3007               	movlw	7
 13119  2D75  0522               	andwf	??_beginAFEcommunication,w
 13120  2D76  00A5               	movwf	??_beginAFEcommunication+3
 13121  2D77  3000               	movlw	0
 13122  2D78  0523               	andwf	??_beginAFEcommunication+1,w
 13123  2D79  00A6               	movwf	??_beginAFEcommunication+4
 13124  2D7A  3018               	movlw	24
 13125  2D7B  00F5               	movwf	readRegister@slaveAddress
 13126  2D7C  3000               	movlw	0
 13127  2D7D  00F6               	movwf	readRegister@slaveAddress+1
 13128  2D7E  3050               	movlw	80
 13129  2D7F  00F7               	movwf	readRegister@regAddress
 13130  2D80  3000               	movlw	0
 13131  2D81  00F8               	movwf	readRegister@regAddress+1
 13132  2D82  31B6  2675         	fcall	_readRegister
 13133  2D84  300C               	movlw	12
 13134  2D85  0575               	andwf	?_readRegister,w
 13135  2D86  0020               	movlb	0	; select bank0
 13136  2D87  00A7               	movwf	??_beginAFEcommunication+5
 13137  2D88  3000               	movlw	0
 13138  2D89  0576               	andwf	?_readRegister+1,w
 13139  2D8A  00A8               	movwf	??_beginAFEcommunication+6
 13140  2D8B  35A7               	lslf	??_beginAFEcommunication+5,f
 13141  2D8C  0DA8               	rlf	??_beginAFEcommunication+6,f
 13142  2D8D  0825               	movf	??_beginAFEcommunication+3,w
 13143  2D8E  0427               	iorwf	??_beginAFEcommunication+5,w
 13144  2D8F  00A9               	movwf	??_beginAFEcommunication+7
 13145  2D90  0826               	movf	??_beginAFEcommunication+4,w
 13146  2D91  0428               	iorwf	??_beginAFEcommunication+6,w
 13147  2D92  00AA               	movwf	??_beginAFEcommunication+8
 13148  2D93  0829               	movf	??_beginAFEcommunication+7,w
 13149  2D94  3E6D               	addlw	109
 13150  2D95  0022               	movlb	2	; select bank2
 13151  2D96  00ED               	movwf	_adcGain^(0+256)
 13152  2D97  3001               	movlw	1
 13153  2D98  0020               	movlb	0	; select bank0
 13154  2D99  3D2A               	addwfc	??_beginAFEcommunication+8,w
 13155  2D9A  0022               	movlb	2	; select bank2
 13156  2D9B  00EE               	movwf	(_adcGain+1)^(0+256)
 13157  2D9C                     l455:	
 13158                           ;BQ76920.c: 53:     }
 13159                           
 13160                           
 13161                           ;BQ76920.c: 54:     return commSuccess;
 13162  2D9C  0020               	movlb	0	; select bank0
 13163  2D9D  082C               	movf	beginAFEcommunication@commSuccess+1,w
 13164  2D9E  00A1               	movwf	?_beginAFEcommunication+1
 13165  2D9F  082B               	movf	beginAFEcommunication@commSuccess,w
 13166  2DA0  00A0               	movwf	?_beginAFEcommunication
 13167  2DA1  0008               	return
 13168  2DA2                     __end_of_beginAFEcommunication:	
 13169                           
 13170                           	psect	text44
 13171  3558                     __ptext44:	
 13172 ;; *************** function _RGB_AWAIT_AFE_CONN *****************
 13173 ;; Defined at:
 13174 ;;		line 43 in file "RGB.c"
 13175 ;; Parameters:    Size  Location     Type
 13176 ;;		None
 13177 ;; Auto vars:     Size  Location     Type
 13178 ;;		None
 13179 ;; Return value:  Size  Location     Type
 13180 ;;                  1    wreg      void 
 13181 ;; Registers used:
 13182 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13183 ;; Tracked objects:
 13184 ;;		On entry : 0/0
 13185 ;;		On exit  : 0/0
 13186 ;;		Unchanged: 0/0
 13187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13190 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13191 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13192 ;;Total ram usage:        1 bytes
 13193 ;; Hardware stack levels used:    1
 13194 ;; Hardware stack levels required when called:    2
 13195 ;; This function calls:
 13196 ;;		_RGB_color
 13197 ;; This function is called by:
 13198 ;;		_statemachine
 13199 ;; This function uses a non-reentrant model
 13200 ;;
 13201                           
 13202                           
 13203                           ;psect for function _RGB_AWAIT_AFE_CONN
 13204  3558                     _RGB_AWAIT_AFE_CONN:	
 13205                           
 13206                           ;RGB.c: 45:     if (toggleColor) {
 13207                           
 13208                           ;incstack = 0
 13209                           ; Regs used in _RGB_AWAIT_AFE_CONN: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13210  3558  087C               	movf	_toggleColor,w
 13211  3559  1903               	btfsc	3,2
 13212  355A  2D6A               	goto	l8292
 13213                           
 13214                           ;RGB.c: 46:         toggleColor = !toggleColor;
 13215  355B  087C               	movf	_toggleColor,w
 13216  355C  1D03               	btfss	3,2
 13217  355D  2D60               	goto	u11330
 13218  355E  3001               	movlw	1
 13219  355F  2D61               	goto	u11340
 13220  3560                     u11330:	
 13221  3560  3000               	movlw	0
 13222  3561                     u11340:	
 13223  3561  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 13224  3562  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 13225  3563  00FC               	movwf	_toggleColor
 13226                           
 13227                           ;RGB.c: 47:         RGB_color(0);
 13228  3564  3000               	movlw	0
 13229  3565  00F1               	movwf	RGB_color@color
 13230  3566  00F2               	movwf	RGB_color@color+1
 13231  3567  31B5  2537         	fcall	_RGB_color
 13232                           
 13233                           ;RGB.c: 48:     } else {
 13234  3569  0008               	return
 13235  356A                     l8292:	
 13236                           
 13237                           ;RGB.c: 49:         toggleColor = !toggleColor;
 13238  356A  087C               	movf	_toggleColor,w
 13239  356B  1D03               	btfss	3,2
 13240  356C  2D6F               	goto	u11350
 13241  356D  3001               	movlw	1
 13242  356E  2D70               	goto	u11360
 13243  356F                     u11350:	
 13244  356F  3000               	movlw	0
 13245  3570                     u11360:	
 13246  3570  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 13247  3571  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 13248  3572  00FC               	movwf	_toggleColor
 13249                           
 13250                           ;RGB.c: 50:         RGB_color(1);
 13251  3573  3001               	movlw	1
 13252  3574  00F1               	movwf	RGB_color@color
 13253  3575  3000               	movlw	0
 13254  3576  00F2               	movwf	RGB_color@color+1
 13255  3577  31B5  2537         	fcall	_RGB_color
 13256  3579  0008               	return
 13257  357A                     __end_of_RGB_AWAIT_AFE_CONN:	
 13258                           
 13259                           	psect	text45
 13260  3537                     __ptext45:	
 13261 ;; *************** function _RGB_color *****************
 13262 ;; Defined at:
 13263 ;;		line 17 in file "RGB.c"
 13264 ;; Parameters:    Size  Location     Type
 13265 ;;  color           2    1[COMMON] int 
 13266 ;; Auto vars:     Size  Location     Type
 13267 ;;		None
 13268 ;; Return value:  Size  Location     Type
 13269 ;;                  1    wreg      void 
 13270 ;; Registers used:
 13271 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 13272 ;; Tracked objects:
 13273 ;;		On entry : 0/0
 13274 ;;		On exit  : 0/0
 13275 ;;		Unchanged: 0/0
 13276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13277 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13280 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13281 ;;Total ram usage:        2 bytes
 13282 ;; Hardware stack levels used:    1
 13283 ;; Hardware stack levels required when called:    1
 13284 ;; This function calls:
 13285 ;;		Nothing
 13286 ;; This function is called by:
 13287 ;;		_statemachine
 13288 ;;		_RGB_AWAIT_AFE_CONN
 13289 ;;		_watchdog_timeout_shutdown
 13290 ;; This function uses a non-reentrant model
 13291 ;;
 13292                           
 13293                           
 13294                           ;psect for function _RGB_color
 13295  3537                     _RGB_color:	
 13296                           
 13297                           ;RGB.c: 19:     switch (color) {
 13298                           
 13299                           ;incstack = 0
 13300                           ; Regs used in _RGB_color: [wreg-fsr0h+status,2+status,0]
 13301  3537  2D47               	goto	l8032
 13302  3538                     l346:	
 13303                           ;RGB.c: 20:         case 0:
 13304                           
 13305                           
 13306                           ;RGB.c: 21:             LATAbits.LATA4 = 0;
 13307  3538  0022               	movlb	2	; select bank2
 13308  3539  120C               	bcf	12,4	;volatile
 13309                           
 13310                           ;RGB.c: 22:             LATAbits.LATA5 = 1;
 13311  353A  168C               	bsf	12,5	;volatile
 13312                           
 13313                           ;RGB.c: 23:             LATEbits.LATE0 = 1;
 13314  353B  1410               	bsf	16,0	;volatile
 13315                           
 13316                           ;RGB.c: 24:             break;
 13317  353C  0008               	return
 13318  353D                     l348:	
 13319                           ;RGB.c: 25:         case 1:
 13320                           
 13321                           
 13322                           ;RGB.c: 26:             LATAbits.LATA4 = 1;
 13323  353D  0022               	movlb	2	; select bank2
 13324  353E  160C               	bsf	12,4	;volatile
 13325                           
 13326                           ;RGB.c: 27:             LATAbits.LATA5 = 0;
 13327  353F  128C               	bcf	12,5	;volatile
 13328                           
 13329                           ;RGB.c: 28:             LATEbits.LATE0 = 1;
 13330  3540  1410               	bsf	16,0	;volatile
 13331                           
 13332                           ;RGB.c: 29:             break;
 13333  3541  0008               	return
 13334  3542                     l349:	
 13335                           ;RGB.c: 30:         case 2:
 13336                           
 13337                           
 13338                           ;RGB.c: 31:             LATAbits.LATA4 = 1;
 13339  3542  0022               	movlb	2	; select bank2
 13340  3543  160C               	bsf	12,4	;volatile
 13341                           
 13342                           ;RGB.c: 32:             LATAbits.LATA5 = 1;
 13343  3544  168C               	bsf	12,5	;volatile
 13344                           
 13345                           ;RGB.c: 33:             LATEbits.LATE0 = 0;
 13346  3545  1010               	bcf	16,0	;volatile
 13347                           
 13348                           ;RGB.c: 34:             break;
 13349  3546  0008               	return
 13350  3547                     l8032:	
 13351                           
 13352                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13353                           ; Switch size 1, requested type "simple"
 13354                           ; Number of cases is 1, Range of values is 0 to 0
 13355                           ; switch strategies available:
 13356                           ; Name         Instructions Cycles
 13357                           ; simple_byte            4     3 (average)
 13358                           ; direct_byte            8     6 (fixed)
 13359                           ; jumptable            260     6 (fixed)
 13360                           ;	Chosen strategy is simple_byte
 13361  3547  0872               	movf	RGB_color@color+1,w
 13362  3548  3A00               	xorlw	0	; case 0
 13363  3549  1903               	skipnz
 13364  354A  2D4C               	goto	l8624
 13365  354B  2D57               	goto	l350
 13366  354C                     l8624:	
 13367                           
 13368                           ; Switch size 1, requested type "simple"
 13369                           ; Number of cases is 3, Range of values is 0 to 2
 13370                           ; switch strategies available:
 13371                           ; Name         Instructions Cycles
 13372                           ; simple_byte           10     6 (average)
 13373                           ; direct_byte           12     6 (fixed)
 13374                           ; jumptable            260     6 (fixed)
 13375                           ;	Chosen strategy is simple_byte
 13376  354C  0871               	movf	RGB_color@color,w
 13377  354D  3A00               	xorlw	0	; case 0
 13378  354E  1903               	skipnz
 13379  354F  2D38               	goto	l346
 13380  3550  3A01               	xorlw	1	; case 1
 13381  3551  1903               	skipnz
 13382  3552  2D3D               	goto	l348
 13383  3553  3A03               	xorlw	3	; case 2
 13384  3554  1903               	skipnz
 13385  3555  2D42               	goto	l349
 13386  3556  2D57               	goto	l350
 13387  3557                     l350:	
 13388  3557  0008               	return
 13389  3558                     __end_of_RGB_color:	
 13390                           
 13391                           	psect	text46
 13392  345A                     __ptext46:	
 13393 ;; *************** function _AFE_UPDATE *****************
 13394 ;; Defined at:
 13395 ;;		line 172 in file "BQ76920.c"
 13396 ;; Parameters:    Size  Location     Type
 13397 ;;		None
 13398 ;; Auto vars:     Size  Location     Type
 13399 ;;		None
 13400 ;; Return value:  Size  Location     Type
 13401 ;;                  1    wreg      void 
 13402 ;; Registers used:
 13403 ;;		wreg, status,2, status,0, pclath, cstack
 13404 ;; Tracked objects:
 13405 ;;		On entry : 0/0
 13406 ;;		On exit  : 0/0
 13407 ;;		Unchanged: 0/0
 13408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13413 ;;Total ram usage:        0 bytes
 13414 ;; Hardware stack levels used:    1
 13415 ;; Hardware stack levels required when called:    5
 13416 ;; This function calls:
 13417 ;;		_enableCharging
 13418 ;;		_enableDischarging
 13419 ;;		_updateCurrent
 13420 ;;		_updateTemperatures
 13421 ;;		_updateVoltages
 13422 ;; This function is called by:
 13423 ;;		_statemachine
 13424 ;; This function uses a non-reentrant model
 13425 ;;
 13426                           
 13427                           
 13428                           ;psect for function _AFE_UPDATE
 13429  345A                     _AFE_UPDATE:	
 13430                           
 13431                           ;BQ76920.c: 173:     updateCurrent();
 13432                           
 13433                           ;incstack = 0
 13434                           ; Regs used in _AFE_UPDATE: [wreg+status,2+status,0+pclath+cstack]
 13435  345A  31AD  25A2  31B4   	fcall	_updateCurrent
 13436                           
 13437                           ;BQ76920.c: 174:     updateVoltages();
 13438  345D  3192  224F  31B4   	fcall	_updateVoltages
 13439                           
 13440                           ;BQ76920.c: 175:     updateTemperatures();
 13441  3460  3195  2527  31B4   	fcall	_updateTemperatures
 13442                           
 13443                           ;BQ76920.c: 178:     enableDischarging(1);
 13444  3463  3001               	movlw	1
 13445  3464  0020               	movlb	0	; select bank0
 13446  3465  00A0               	movwf	enableDischarging@enable
 13447  3466  3000               	movlw	0
 13448  3467  00A1               	movwf	enableDischarging@enable+1
 13449  3468  31B6  26E2  31B4   	fcall	_enableDischarging
 13450                           
 13451                           ;BQ76920.c: 179:     enableCharging(1);
 13452  346B  3001               	movlw	1
 13453  346C  0020               	movlb	0	; select bank0
 13454  346D  00A0               	movwf	enableCharging@enable
 13455  346E  3000               	movlw	0
 13456  346F  00A1               	movwf	enableCharging@enable+1
 13457  3470  31B6  26AB         	fcall	_enableCharging
 13458  3472  0008               	return
 13459  3473                     __end_of_AFE_UPDATE:	
 13460                           
 13461                           	psect	text47
 13462  124F                     __ptext47:	
 13463 ;; *************** function _updateVoltages *****************
 13464 ;; Defined at:
 13465 ;;		line 209 in file "BQ76920.c"
 13466 ;; Parameters:    Size  Location     Type
 13467 ;;		None
 13468 ;; Auto vars:     Size  Location     Type
 13469 ;;  adcVal          4   24[BANK1 ] long 
 13470 ;; Return value:  Size  Location     Type
 13471 ;;                  1    wreg      void 
 13472 ;; Registers used:
 13473 ;;		wreg, status,2, status,0, pclath, cstack
 13474 ;; Tracked objects:
 13475 ;;		On entry : 0/0
 13476 ;;		On exit  : 0/0
 13477 ;;		Unchanged: 0/0
 13478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13480 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13481 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13482 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13483 ;;Total ram usage:       11 bytes
 13484 ;; Hardware stack levels used:    1
 13485 ;; Hardware stack levels required when called:    3
 13486 ;; This function calls:
 13487 ;;		___aldiv
 13488 ;;		___fladd
 13489 ;;		___fldiv
 13490 ;;		___flmul
 13491 ;;		___fltol
 13492 ;;		___lmul
 13493 ;;		___xxtofl
 13494 ;;		_readRegister
 13495 ;; This function is called by:
 13496 ;;		_AFE_UPDATE
 13497 ;; This function uses a non-reentrant model
 13498 ;;
 13499                           
 13500                           
 13501                           ;psect for function _updateVoltages
 13502  124F                     _updateVoltages:	
 13503                           
 13504                           ;BQ76920.c: 213:   adcVal = (readRegister(0x18, 0x2A) << 8) | readRegister(0x18, 0x2B);
 13505                           
 13506                           ;incstack = 0
 13507                           ; Regs used in _updateVoltages: [wreg+status,2+status,0+pclath+cstack]
 13508  124F  3018               	movlw	24
 13509  1250  00F5               	movwf	readRegister@slaveAddress
 13510  1251  3000               	movlw	0
 13511  1252  00F6               	movwf	readRegister@slaveAddress+1
 13512  1253  302A               	movlw	42
 13513  1254  00F7               	movwf	readRegister@regAddress
 13514  1255  3000               	movlw	0
 13515  1256  00F8               	movwf	readRegister@regAddress+1
 13516  1257  31B6  2675  3192   	fcall	_readRegister
 13517  125A  0875               	movf	?_readRegister,w
 13518  125B  0021               	movlb	1	; select bank1
 13519  125C  00B1               	movwf	??_updateVoltages^(0+128)
 13520  125D  0876               	movf	?_readRegister+1,w
 13521  125E  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13522  125F  0831               	movf	??_updateVoltages^(0+128),w
 13523  1260  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13524  1261  01B1               	clrf	??_updateVoltages^(0+128)
 13525  1262  3018               	movlw	24
 13526  1263  00F5               	movwf	readRegister@slaveAddress
 13527  1264  3000               	movlw	0
 13528  1265  00F6               	movwf	readRegister@slaveAddress+1
 13529  1266  302B               	movlw	43
 13530  1267  00F7               	movwf	readRegister@regAddress
 13531  1268  3000               	movlw	0
 13532  1269  00F8               	movwf	readRegister@regAddress+1
 13533  126A  31B6  2675  3192   	fcall	_readRegister
 13534  126D  0875               	movf	?_readRegister,w
 13535  126E  0021               	movlb	1	; select bank1
 13536  126F  0431               	iorwf	??_updateVoltages^(0+128),w
 13537  1270  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13538  1271  0876               	movf	?_readRegister+1,w
 13539  1272  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13540  1273  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13541  1274  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13542  1275  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13543  1276  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13544  1277  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13545  1278  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13546                           
 13547                           ;BQ76920.c: 214:   batVoltage = 4.0 * adcGain * adcVal / 1000.0 + 4 * adcOffset;
 13548  1279  0022               	movlb	2	; select bank2
 13549  127A  086D               	movf	_adcGain^(0+256),w
 13550  127B  00F1               	movwf	___xxtofl@val
 13551  127C  086E               	movf	(_adcGain+1)^(0+256),w
 13552  127D  00F2               	movwf	___xxtofl@val+1
 13553  127E  0D89               	rlf	9,f
 13554  127F  3B89               	subwfb	9,f
 13555  1280  0989               	comf	9,f
 13556  1281  00F3               	movwf	___xxtofl@val+2
 13557  1282  00F4               	movwf	___xxtofl@val+3
 13558  1283  3001               	movlw	1
 13559  1284  31AB  23AF  3192   	fcall	___xxtofl
 13560  1287  0874               	movf	?___xxtofl+3,w
 13561  1288  0020               	movlb	0	; select bank0
 13562  1289  00AD               	movwf	___flmul@a+3
 13563  128A  0873               	movf	?___xxtofl+2,w
 13564  128B  00AC               	movwf	___flmul@a+2
 13565  128C  0872               	movf	?___xxtofl+1,w
 13566  128D  00AB               	movwf	___flmul@a+1
 13567  128E  0871               	movf	?___xxtofl,w
 13568  128F  00AA               	movwf	___flmul@a
 13569  1290  3040               	movlw	64
 13570  1291  00A9               	movwf	___flmul@b+3
 13571  1292  3080               	movlw	128
 13572  1293  00A8               	movwf	___flmul@b+2
 13573  1294  3000               	movlw	0
 13574  1295  00A7               	movwf	___flmul@b+1
 13575  1296  3000               	movlw	0
 13576  1297  00A6               	movwf	___flmul@b
 13577  1298  3190  2023  3192   	fcall	___flmul
 13578  129B  0020               	movlb	0	; select bank0
 13579  129C  0829               	movf	?___flmul+3,w
 13580  129D  0021               	movlb	1	; select bank1
 13581  129E  00B7               	movwf	(_updateVoltages$2035+3)^(0+128)
 13582  129F  0020               	movlb	0	; select bank0
 13583  12A0  0828               	movf	?___flmul+2,w
 13584  12A1  0021               	movlb	1	; select bank1
 13585  12A2  00B6               	movwf	(_updateVoltages$2035+2)^(0+128)
 13586  12A3  0020               	movlb	0	; select bank0
 13587  12A4  0827               	movf	?___flmul+1,w
 13588  12A5  0021               	movlb	1	; select bank1
 13589  12A6  00B5               	movwf	(_updateVoltages$2035+1)^(0+128)
 13590  12A7  0020               	movlb	0	; select bank0
 13591  12A8  0826               	movf	?___flmul,w
 13592  12A9  0021               	movlb	1	; select bank1
 13593  12AA  00B4               	movwf	_updateVoltages$2035^(0+128)
 13594                           
 13595                           ;BQ76920.c: 214:   batVoltage = 4.0 * adcGain * adcVal / 1000.0 + 4 * adcOffset;
 13596  12AB  0837               	movf	(_updateVoltages$2035+3)^(0+128),w
 13597  12AC  0020               	movlb	0	; select bank0
 13598  12AD  00AD               	movwf	___flmul@a+3
 13599  12AE  0021               	movlb	1	; select bank1
 13600  12AF  0836               	movf	(_updateVoltages$2035+2)^(0+128),w
 13601  12B0  0020               	movlb	0	; select bank0
 13602  12B1  00AC               	movwf	___flmul@a+2
 13603  12B2  0021               	movlb	1	; select bank1
 13604  12B3  0835               	movf	(_updateVoltages$2035+1)^(0+128),w
 13605  12B4  0020               	movlb	0	; select bank0
 13606  12B5  00AB               	movwf	___flmul@a+1
 13607  12B6  0021               	movlb	1	; select bank1
 13608  12B7  0834               	movf	_updateVoltages$2035^(0+128),w
 13609  12B8  0020               	movlb	0	; select bank0
 13610  12B9  00AA               	movwf	___flmul@a
 13611  12BA  0021               	movlb	1	; select bank1
 13612  12BB  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13613  12BC  00F4               	movwf	___xxtofl@val+3
 13614  12BD  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13615  12BE  00F3               	movwf	___xxtofl@val+2
 13616  12BF  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13617  12C0  00F2               	movwf	___xxtofl@val+1
 13618  12C1  0838               	movf	updateVoltages@adcVal^(0+128),w
 13619  12C2  00F1               	movwf	___xxtofl@val
 13620  12C3  3001               	movlw	1
 13621  12C4  31AB  23AF  3192   	fcall	___xxtofl
 13622  12C7  0874               	movf	?___xxtofl+3,w
 13623  12C8  0020               	movlb	0	; select bank0
 13624  12C9  00A9               	movwf	___flmul@b+3
 13625  12CA  0873               	movf	?___xxtofl+2,w
 13626  12CB  00A8               	movwf	___flmul@b+2
 13627  12CC  0872               	movf	?___xxtofl+1,w
 13628  12CD  00A7               	movwf	___flmul@b+1
 13629  12CE  0871               	movf	?___xxtofl,w
 13630  12CF  00A6               	movwf	___flmul@b
 13631  12D0  3190  2023  3192   	fcall	___flmul
 13632  12D3  0020               	movlb	0	; select bank0
 13633  12D4  0829               	movf	?___flmul+3,w
 13634  12D5  00C7               	movwf	___fldiv@b+3
 13635  12D6  0828               	movf	?___flmul+2,w
 13636  12D7  00C6               	movwf	___fldiv@b+2
 13637  12D8  0827               	movf	?___flmul+1,w
 13638  12D9  00C5               	movwf	___fldiv@b+1
 13639  12DA  0826               	movf	?___flmul,w
 13640  12DB  00C4               	movwf	___fldiv@b
 13641  12DC  3044               	movlw	68
 13642  12DD  00C3               	movwf	___fldiv@a+3
 13643  12DE  307A               	movlw	122
 13644  12DF  00C2               	movwf	___fldiv@a+2
 13645  12E0  3000               	movlw	0
 13646  12E1  00C1               	movwf	___fldiv@a+1
 13647  12E2  3000               	movlw	0
 13648  12E3  00C0               	movwf	___fldiv@a
 13649  12E4  319B  2353  3192   	fcall	___fldiv
 13650  12E7  0020               	movlb	0	; select bank0
 13651  12E8  0843               	movf	?___fldiv+3,w
 13652  12E9  00E1               	movwf	___fladd@a+3
 13653  12EA  0842               	movf	?___fldiv+2,w
 13654  12EB  00E0               	movwf	___fladd@a+2
 13655  12EC  0841               	movf	?___fldiv+1,w
 13656  12ED  00DF               	movwf	___fladd@a+1
 13657  12EE  0840               	movf	?___fldiv,w
 13658  12EF  00DE               	movwf	___fladd@a
 13659  12F0  0022               	movlb	2	; select bank2
 13660  12F1  086C               	movf	(_adcOffset+1)^(0+256),w
 13661  12F2  0021               	movlb	1	; select bank1
 13662  12F3  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13663  12F4  0022               	movlb	2	; select bank2
 13664  12F5  086B               	movf	_adcOffset^(0+256),w
 13665  12F6  0021               	movlb	1	; select bank1
 13666  12F7  00B1               	movwf	??_updateVoltages^(0+128)
 13667  12F8  35B1               	lslf	??_updateVoltages^(0+128),f
 13668  12F9  0DB2               	rlf	(??_updateVoltages^(0+128)+1),f
 13669  12FA  35B1               	lslf	??_updateVoltages^(0+128),f
 13670  12FB  0DB2               	rlf	(??_updateVoltages^(0+128)+1),f
 13671  12FC  0831               	movf	??_updateVoltages^(0+128),w
 13672  12FD  00F1               	movwf	___xxtofl@val
 13673  12FE  0832               	movf	(??_updateVoltages+1)^(0+128),w
 13674  12FF  00F2               	movwf	___xxtofl@val+1
 13675  1300  0D89               	rlf	9,f
 13676  1301  3B89               	subwfb	9,f
 13677  1302  0989               	comf	9,f
 13678  1303  00F3               	movwf	___xxtofl@val+2
 13679  1304  00F4               	movwf	___xxtofl@val+3
 13680  1305  3001               	movlw	1
 13681  1306  31AB  23AF  3192   	fcall	___xxtofl
 13682  1309  0874               	movf	?___xxtofl+3,w
 13683  130A  0020               	movlb	0	; select bank0
 13684  130B  00DD               	movwf	___fladd@b+3
 13685  130C  0873               	movf	?___xxtofl+2,w
 13686  130D  00DC               	movwf	___fladd@b+2
 13687  130E  0872               	movf	?___xxtofl+1,w
 13688  130F  00DB               	movwf	___fladd@b+1
 13689  1310  0871               	movf	?___xxtofl,w
 13690  1311  00DA               	movwf	___fladd@b
 13691  1312  3185  25F5  3192   	fcall	___fladd
 13692  1315  0020               	movlb	0	; select bank0
 13693  1316  085D               	movf	?___fladd+3,w
 13694  1317  0021               	movlb	1	; select bank1
 13695  1318  00AB               	movwf	(___fltol@f1+3)^(0+128)
 13696  1319  0020               	movlb	0	; select bank0
 13697  131A  085C               	movf	?___fladd+2,w
 13698  131B  0021               	movlb	1	; select bank1
 13699  131C  00AA               	movwf	(___fltol@f1+2)^(0+128)
 13700  131D  0020               	movlb	0	; select bank0
 13701  131E  085B               	movf	?___fladd+1,w
 13702  131F  0021               	movlb	1	; select bank1
 13703  1320  00A9               	movwf	(___fltol@f1+1)^(0+128)
 13704  1321  0020               	movlb	0	; select bank0
 13705  1322  085A               	movf	?___fladd,w
 13706  1323  0021               	movlb	1	; select bank1
 13707  1324  00A8               	movwf	___fltol@f1^(0+128)
 13708  1325  31A8  2071  3192   	fcall	___fltol
 13709  1328  0021               	movlb	1	; select bank1
 13710  1329  082B               	movf	(?___fltol+3)^(0+128),w
 13711  132A  0023               	movlb	3	; select bank3
 13712  132B  00C1               	movwf	(_batVoltage+3)^(0+384)
 13713  132C  0021               	movlb	1	; select bank1
 13714  132D  082A               	movf	(?___fltol+2)^(0+128),w
 13715  132E  0023               	movlb	3	; select bank3
 13716  132F  00C0               	movwf	(_batVoltage+2)^(0+384)
 13717  1330  0021               	movlb	1	; select bank1
 13718  1331  0829               	movf	(?___fltol+1)^(0+128),w
 13719  1332  0023               	movlb	3	; select bank3
 13720  1333  00BF               	movwf	(_batVoltage+1)^(0+384)
 13721  1334  0021               	movlb	1	; select bank1
 13722  1335  0828               	movf	?___fltol^(0+128),w
 13723  1336  0023               	movlb	3	; select bank3
 13724  1337  00BE               	movwf	_batVoltage^(0+384)
 13725                           
 13726                           ;BQ76920.c: 237:     adcVal = ((readRegister(0x18, 0x0C) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x0D);
 13727  1338  3018               	movlw	24
 13728  1339  00F5               	movwf	readRegister@slaveAddress
 13729  133A  3000               	movlw	0
 13730  133B  00F6               	movwf	readRegister@slaveAddress+1
 13731  133C  300C               	movlw	12
 13732  133D  00F7               	movwf	readRegister@regAddress
 13733  133E  3000               	movlw	0
 13734  133F  00F8               	movwf	readRegister@regAddress+1
 13735  1340  31B6  2675  3192   	fcall	_readRegister
 13736  1343  303F               	movlw	63
 13737  1344  0575               	andwf	?_readRegister,w
 13738  1345  0021               	movlb	1	; select bank1
 13739  1346  00B1               	movwf	??_updateVoltages^(0+128)
 13740  1347  3000               	movlw	0
 13741  1348  0576               	andwf	?_readRegister+1,w
 13742  1349  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13743  134A  0831               	movf	??_updateVoltages^(0+128),w
 13744  134B  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13745  134C  01B1               	clrf	??_updateVoltages^(0+128)
 13746  134D  3018               	movlw	24
 13747  134E  00F5               	movwf	readRegister@slaveAddress
 13748  134F  3000               	movlw	0
 13749  1350  00F6               	movwf	readRegister@slaveAddress+1
 13750  1351  300D               	movlw	13
 13751  1352  00F7               	movwf	readRegister@regAddress
 13752  1353  3000               	movlw	0
 13753  1354  00F8               	movwf	readRegister@regAddress+1
 13754  1355  31B6  2675  3192   	fcall	_readRegister
 13755  1358  0875               	movf	?_readRegister,w
 13756  1359  0021               	movlb	1	; select bank1
 13757  135A  0431               	iorwf	??_updateVoltages^(0+128),w
 13758  135B  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13759  135C  0876               	movf	?_readRegister+1,w
 13760  135D  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13761  135E  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13762  135F  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13763  1360  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13764  1361  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13765  1362  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13766  1363  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13767                           
 13768                           ;BQ76920.c: 238:     cellVoltages[0] = (adcVal * adcGain / 1000) + adcOffset;
 13769  1364  3000               	movlw	0
 13770  1365  0020               	movlb	0	; select bank0
 13771  1366  00A7               	movwf	___aldiv@divisor+3
 13772  1367  3000               	movlw	0
 13773  1368  00A6               	movwf	___aldiv@divisor+2
 13774  1369  3003               	movlw	3
 13775  136A  00A5               	movwf	___aldiv@divisor+1
 13776  136B  30E8               	movlw	232
 13777  136C  00A4               	movwf	___aldiv@divisor
 13778  136D  0022               	movlb	2	; select bank2
 13779  136E  086D               	movf	_adcGain^(0+256),w
 13780  136F  00F1               	movwf	___lmul@multiplier
 13781  1370  086E               	movf	(_adcGain+1)^(0+256),w
 13782  1371  00F2               	movwf	___lmul@multiplier+1
 13783  1372  0D89               	rlf	9,f
 13784  1373  3B89               	subwfb	9,f
 13785  1374  0989               	comf	9,f
 13786  1375  00F3               	movwf	___lmul@multiplier+2
 13787  1376  00F4               	movwf	___lmul@multiplier+3
 13788  1377  0021               	movlb	1	; select bank1
 13789  1378  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13790  1379  00F8               	movwf	___lmul@multiplicand+3
 13791  137A  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13792  137B  00F7               	movwf	___lmul@multiplicand+2
 13793  137C  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13794  137D  00F6               	movwf	___lmul@multiplicand+1
 13795  137E  0838               	movf	updateVoltages@adcVal^(0+128),w
 13796  137F  00F5               	movwf	___lmul@multiplicand
 13797  1380  31B5  25DC  3192   	fcall	___lmul
 13798  1383  0874               	movf	?___lmul+3,w
 13799  1384  0020               	movlb	0	; select bank0
 13800  1385  00AB               	movwf	___aldiv@dividend+3
 13801  1386  0873               	movf	?___lmul+2,w
 13802  1387  00AA               	movwf	___aldiv@dividend+2
 13803  1388  0872               	movf	?___lmul+1,w
 13804  1389  00A9               	movwf	___aldiv@dividend+1
 13805  138A  0871               	movf	?___lmul,w
 13806  138B  00A8               	movwf	___aldiv@dividend
 13807  138C  31AB  232D  3192   	fcall	___aldiv
 13808  138F  0022               	movlb	2	; select bank2
 13809  1390  086B               	movf	_adcOffset^(0+256),w
 13810  1391  0020               	movlb	0	; select bank0
 13811  1392  0724               	addwf	?___aldiv,w
 13812  1393  0023               	movlb	3	; select bank3
 13813  1394  00A0               	movwf	_cellVoltages^(0+384)
 13814  1395  0022               	movlb	2	; select bank2
 13815  1396  086C               	movf	(_adcOffset+1)^(0+256),w
 13816  1397  0020               	movlb	0	; select bank0
 13817  1398  3D25               	addwfc	?___aldiv+1,w
 13818  1399  0023               	movlb	3	; select bank3
 13819  139A  00A1               	movwf	(_cellVoltages+1)^(0+384)
 13820                           
 13821                           ;BQ76920.c: 239:     adcVal = ((readRegister(0x18, 0x0E) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x0F);
 13822  139B  3018               	movlw	24
 13823  139C  00F5               	movwf	readRegister@slaveAddress
 13824  139D  3000               	movlw	0
 13825  139E  00F6               	movwf	readRegister@slaveAddress+1
 13826  139F  300E               	movlw	14
 13827  13A0  00F7               	movwf	readRegister@regAddress
 13828  13A1  3000               	movlw	0
 13829  13A2  00F8               	movwf	readRegister@regAddress+1
 13830  13A3  31B6  2675  3192   	fcall	_readRegister
 13831  13A6  303F               	movlw	63
 13832  13A7  0575               	andwf	?_readRegister,w
 13833  13A8  0021               	movlb	1	; select bank1
 13834  13A9  00B1               	movwf	??_updateVoltages^(0+128)
 13835  13AA  3000               	movlw	0
 13836  13AB  0576               	andwf	?_readRegister+1,w
 13837  13AC  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13838  13AD  0831               	movf	??_updateVoltages^(0+128),w
 13839  13AE  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13840  13AF  01B1               	clrf	??_updateVoltages^(0+128)
 13841  13B0  3018               	movlw	24
 13842  13B1  00F5               	movwf	readRegister@slaveAddress
 13843  13B2  3000               	movlw	0
 13844  13B3  00F6               	movwf	readRegister@slaveAddress+1
 13845  13B4  300F               	movlw	15
 13846  13B5  00F7               	movwf	readRegister@regAddress
 13847  13B6  3000               	movlw	0
 13848  13B7  00F8               	movwf	readRegister@regAddress+1
 13849  13B8  31B6  2675  3192   	fcall	_readRegister
 13850  13BB  0875               	movf	?_readRegister,w
 13851  13BC  0021               	movlb	1	; select bank1
 13852  13BD  0431               	iorwf	??_updateVoltages^(0+128),w
 13853  13BE  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13854  13BF  0876               	movf	?_readRegister+1,w
 13855  13C0  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13856  13C1  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13857  13C2  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13858  13C3  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13859  13C4  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13860  13C5  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13861  13C6  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13862                           
 13863                           ;BQ76920.c: 240:     cellVoltages[1] = (adcVal * adcGain / 1000) + adcOffset;
 13864  13C7  3000               	movlw	0
 13865  13C8  0020               	movlb	0	; select bank0
 13866  13C9  00A7               	movwf	___aldiv@divisor+3
 13867  13CA  3000               	movlw	0
 13868  13CB  00A6               	movwf	___aldiv@divisor+2
 13869  13CC  3003               	movlw	3
 13870  13CD  00A5               	movwf	___aldiv@divisor+1
 13871  13CE  30E8               	movlw	232
 13872  13CF  00A4               	movwf	___aldiv@divisor
 13873  13D0  0022               	movlb	2	; select bank2
 13874  13D1  086D               	movf	_adcGain^(0+256),w
 13875  13D2  00F1               	movwf	___lmul@multiplier
 13876  13D3  086E               	movf	(_adcGain+1)^(0+256),w
 13877  13D4  00F2               	movwf	___lmul@multiplier+1
 13878  13D5  0D89               	rlf	9,f
 13879  13D6  3B89               	subwfb	9,f
 13880  13D7  0989               	comf	9,f
 13881  13D8  00F3               	movwf	___lmul@multiplier+2
 13882  13D9  00F4               	movwf	___lmul@multiplier+3
 13883  13DA  0021               	movlb	1	; select bank1
 13884  13DB  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13885  13DC  00F8               	movwf	___lmul@multiplicand+3
 13886  13DD  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13887  13DE  00F7               	movwf	___lmul@multiplicand+2
 13888  13DF  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13889  13E0  00F6               	movwf	___lmul@multiplicand+1
 13890  13E1  0838               	movf	updateVoltages@adcVal^(0+128),w
 13891  13E2  00F5               	movwf	___lmul@multiplicand
 13892  13E3  31B5  25DC  3192   	fcall	___lmul
 13893  13E6  0874               	movf	?___lmul+3,w
 13894  13E7  0020               	movlb	0	; select bank0
 13895  13E8  00AB               	movwf	___aldiv@dividend+3
 13896  13E9  0873               	movf	?___lmul+2,w
 13897  13EA  00AA               	movwf	___aldiv@dividend+2
 13898  13EB  0872               	movf	?___lmul+1,w
 13899  13EC  00A9               	movwf	___aldiv@dividend+1
 13900  13ED  0871               	movf	?___lmul,w
 13901  13EE  00A8               	movwf	___aldiv@dividend
 13902  13EF  31AB  232D  3192   	fcall	___aldiv
 13903  13F2  0022               	movlb	2	; select bank2
 13904  13F3  086B               	movf	_adcOffset^(0+256),w
 13905  13F4  0020               	movlb	0	; select bank0
 13906  13F5  0724               	addwf	?___aldiv,w
 13907  13F6  0023               	movlb	3	; select bank3
 13908  13F7  00A2               	movwf	(_cellVoltages^(0+384)+2)
 13909  13F8  0022               	movlb	2	; select bank2
 13910  13F9  086C               	movf	(_adcOffset+1)^(0+256),w
 13911  13FA  0020               	movlb	0	; select bank0
 13912  13FB  3D25               	addwfc	?___aldiv+1,w
 13913  13FC  0023               	movlb	3	; select bank3
 13914  13FD  00A3               	movwf	((_cellVoltages+1)^(0+384)+2)
 13915                           
 13916                           ;BQ76920.c: 241:     adcVal = ((readRegister(0x18, 0x10) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x11);
 13917  13FE  3018               	movlw	24
 13918  13FF  00F5               	movwf	readRegister@slaveAddress
 13919  1400  3000               	movlw	0
 13920  1401  00F6               	movwf	readRegister@slaveAddress+1
 13921  1402  3010               	movlw	16
 13922  1403  00F7               	movwf	readRegister@regAddress
 13923  1404  3000               	movlw	0
 13924  1405  00F8               	movwf	readRegister@regAddress+1
 13925  1406  31B6  2675  3192   	fcall	_readRegister
 13926  1409  303F               	movlw	63
 13927  140A  0575               	andwf	?_readRegister,w
 13928  140B  0021               	movlb	1	; select bank1
 13929  140C  00B1               	movwf	??_updateVoltages^(0+128)
 13930  140D  3000               	movlw	0
 13931  140E  0576               	andwf	?_readRegister+1,w
 13932  140F  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13933  1410  0831               	movf	??_updateVoltages^(0+128),w
 13934  1411  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13935  1412  01B1               	clrf	??_updateVoltages^(0+128)
 13936  1413  3018               	movlw	24
 13937  1414  00F5               	movwf	readRegister@slaveAddress
 13938  1415  3000               	movlw	0
 13939  1416  00F6               	movwf	readRegister@slaveAddress+1
 13940  1417  3011               	movlw	17
 13941  1418  00F7               	movwf	readRegister@regAddress
 13942  1419  3000               	movlw	0
 13943  141A  00F8               	movwf	readRegister@regAddress+1
 13944  141B  31B6  2675  3192   	fcall	_readRegister
 13945  141E  0875               	movf	?_readRegister,w
 13946  141F  0021               	movlb	1	; select bank1
 13947  1420  0431               	iorwf	??_updateVoltages^(0+128),w
 13948  1421  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13949  1422  0876               	movf	?_readRegister+1,w
 13950  1423  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13951  1424  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13952  1425  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13953  1426  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13954  1427  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13955  1428  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13956  1429  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13957                           
 13958                           ;BQ76920.c: 242:     cellVoltages[2] = (adcVal * adcGain / 1000) + adcOffset;
 13959  142A  3000               	movlw	0
 13960  142B  0020               	movlb	0	; select bank0
 13961  142C  00A7               	movwf	___aldiv@divisor+3
 13962  142D  3000               	movlw	0
 13963  142E  00A6               	movwf	___aldiv@divisor+2
 13964  142F  3003               	movlw	3
 13965  1430  00A5               	movwf	___aldiv@divisor+1
 13966  1431  30E8               	movlw	232
 13967  1432  00A4               	movwf	___aldiv@divisor
 13968  1433  0022               	movlb	2	; select bank2
 13969  1434  086D               	movf	_adcGain^(0+256),w
 13970  1435  00F1               	movwf	___lmul@multiplier
 13971  1436  086E               	movf	(_adcGain+1)^(0+256),w
 13972  1437  00F2               	movwf	___lmul@multiplier+1
 13973  1438  0D89               	rlf	9,f
 13974  1439  3B89               	subwfb	9,f
 13975  143A  0989               	comf	9,f
 13976  143B  00F3               	movwf	___lmul@multiplier+2
 13977  143C  00F4               	movwf	___lmul@multiplier+3
 13978  143D  0021               	movlb	1	; select bank1
 13979  143E  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13980  143F  00F8               	movwf	___lmul@multiplicand+3
 13981  1440  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13982  1441  00F7               	movwf	___lmul@multiplicand+2
 13983  1442  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13984  1443  00F6               	movwf	___lmul@multiplicand+1
 13985  1444  0838               	movf	updateVoltages@adcVal^(0+128),w
 13986  1445  00F5               	movwf	___lmul@multiplicand
 13987  1446  31B5  25DC  3192   	fcall	___lmul
 13988  1449  0874               	movf	?___lmul+3,w
 13989  144A  0020               	movlb	0	; select bank0
 13990  144B  00AB               	movwf	___aldiv@dividend+3
 13991  144C  0873               	movf	?___lmul+2,w
 13992  144D  00AA               	movwf	___aldiv@dividend+2
 13993  144E  0872               	movf	?___lmul+1,w
 13994  144F  00A9               	movwf	___aldiv@dividend+1
 13995  1450  0871               	movf	?___lmul,w
 13996  1451  00A8               	movwf	___aldiv@dividend
 13997  1452  31AB  232D  3192   	fcall	___aldiv
 13998  1455  0022               	movlb	2	; select bank2
 13999  1456  086B               	movf	_adcOffset^(0+256),w
 14000  1457  0020               	movlb	0	; select bank0
 14001  1458  0724               	addwf	?___aldiv,w
 14002  1459  0023               	movlb	3	; select bank3
 14003  145A  00A4               	movwf	(_cellVoltages^(0+384)+4)
 14004  145B  0022               	movlb	2	; select bank2
 14005  145C  086C               	movf	(_adcOffset+1)^(0+256),w
 14006  145D  0020               	movlb	0	; select bank0
 14007  145E  3D25               	addwfc	?___aldiv+1,w
 14008  145F  0023               	movlb	3	; select bank3
 14009  1460  00A5               	movwf	((_cellVoltages+1)^(0+384)+4)
 14010                           
 14011                           ;BQ76920.c: 243:     adcVal = ((readRegister(0x18, 0x12) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x13);
 14012  1461  3018               	movlw	24
 14013  1462  00F5               	movwf	readRegister@slaveAddress
 14014  1463  3000               	movlw	0
 14015  1464  00F6               	movwf	readRegister@slaveAddress+1
 14016  1465  3012               	movlw	18
 14017  1466  00F7               	movwf	readRegister@regAddress
 14018  1467  3000               	movlw	0
 14019  1468  00F8               	movwf	readRegister@regAddress+1
 14020  1469  31B6  2675  3192   	fcall	_readRegister
 14021  146C  303F               	movlw	63
 14022  146D  0575               	andwf	?_readRegister,w
 14023  146E  0021               	movlb	1	; select bank1
 14024  146F  00B1               	movwf	??_updateVoltages^(0+128)
 14025  1470  3000               	movlw	0
 14026  1471  0576               	andwf	?_readRegister+1,w
 14027  1472  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 14028  1473  0831               	movf	??_updateVoltages^(0+128),w
 14029  1474  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 14030  1475  01B1               	clrf	??_updateVoltages^(0+128)
 14031  1476  3018               	movlw	24
 14032  1477  00F5               	movwf	readRegister@slaveAddress
 14033  1478  3000               	movlw	0
 14034  1479  00F6               	movwf	readRegister@slaveAddress+1
 14035  147A  3013               	movlw	19
 14036  147B  00F7               	movwf	readRegister@regAddress
 14037  147C  3000               	movlw	0
 14038  147D  00F8               	movwf	readRegister@regAddress+1
 14039  147E  31B6  2675  3192   	fcall	_readRegister
 14040  1481  0875               	movf	?_readRegister,w
 14041  1482  0021               	movlb	1	; select bank1
 14042  1483  0431               	iorwf	??_updateVoltages^(0+128),w
 14043  1484  00B8               	movwf	updateVoltages@adcVal^(0+128)
 14044  1485  0876               	movf	?_readRegister+1,w
 14045  1486  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 14046  1487  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 14047  1488  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 14048  1489  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 14049  148A  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 14050  148B  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 14051  148C  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 14052                           
 14053                           ;BQ76920.c: 244:     cellVoltages[3] = (adcVal * adcGain / 1000) + adcOffset;
 14054  148D  3000               	movlw	0
 14055  148E  0020               	movlb	0	; select bank0
 14056  148F  00A7               	movwf	___aldiv@divisor+3
 14057  1490  3000               	movlw	0
 14058  1491  00A6               	movwf	___aldiv@divisor+2
 14059  1492  3003               	movlw	3
 14060  1493  00A5               	movwf	___aldiv@divisor+1
 14061  1494  30E8               	movlw	232
 14062  1495  00A4               	movwf	___aldiv@divisor
 14063  1496  0022               	movlb	2	; select bank2
 14064  1497  086D               	movf	_adcGain^(0+256),w
 14065  1498  00F1               	movwf	___lmul@multiplier
 14066  1499  086E               	movf	(_adcGain+1)^(0+256),w
 14067  149A  00F2               	movwf	___lmul@multiplier+1
 14068  149B  0D89               	rlf	9,f
 14069  149C  3B89               	subwfb	9,f
 14070  149D  0989               	comf	9,f
 14071  149E  00F3               	movwf	___lmul@multiplier+2
 14072  149F  00F4               	movwf	___lmul@multiplier+3
 14073  14A0  0021               	movlb	1	; select bank1
 14074  14A1  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 14075  14A2  00F8               	movwf	___lmul@multiplicand+3
 14076  14A3  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 14077  14A4  00F7               	movwf	___lmul@multiplicand+2
 14078  14A5  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 14079  14A6  00F6               	movwf	___lmul@multiplicand+1
 14080  14A7  0838               	movf	updateVoltages@adcVal^(0+128),w
 14081  14A8  00F5               	movwf	___lmul@multiplicand
 14082  14A9  31B5  25DC  3192   	fcall	___lmul
 14083  14AC  0874               	movf	?___lmul+3,w
 14084  14AD  0020               	movlb	0	; select bank0
 14085  14AE  00AB               	movwf	___aldiv@dividend+3
 14086  14AF  0873               	movf	?___lmul+2,w
 14087  14B0  00AA               	movwf	___aldiv@dividend+2
 14088  14B1  0872               	movf	?___lmul+1,w
 14089  14B2  00A9               	movwf	___aldiv@dividend+1
 14090  14B3  0871               	movf	?___lmul,w
 14091  14B4  00A8               	movwf	___aldiv@dividend
 14092  14B5  31AB  232D  3192   	fcall	___aldiv
 14093  14B8  0022               	movlb	2	; select bank2
 14094  14B9  086B               	movf	_adcOffset^(0+256),w
 14095  14BA  0020               	movlb	0	; select bank0
 14096  14BB  0724               	addwf	?___aldiv,w
 14097  14BC  0023               	movlb	3	; select bank3
 14098  14BD  00A6               	movwf	(_cellVoltages^(0+384)+6)
 14099  14BE  0022               	movlb	2	; select bank2
 14100  14BF  086C               	movf	(_adcOffset+1)^(0+256),w
 14101  14C0  0020               	movlb	0	; select bank0
 14102  14C1  3D25               	addwfc	?___aldiv+1,w
 14103  14C2  0023               	movlb	3	; select bank3
 14104  14C3  00A7               	movwf	((_cellVoltages+1)^(0+384)+6)
 14105                           
 14106                           ;BQ76920.c: 245:     adcVal = ((readRegister(0x18, 0x14) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x15);
 14107  14C4  3018               	movlw	24
 14108  14C5  00F5               	movwf	readRegister@slaveAddress
 14109  14C6  3000               	movlw	0
 14110  14C7  00F6               	movwf	readRegister@slaveAddress+1
 14111  14C8  3014               	movlw	20
 14112  14C9  00F7               	movwf	readRegister@regAddress
 14113  14CA  3000               	movlw	0
 14114  14CB  00F8               	movwf	readRegister@regAddress+1
 14115  14CC  31B6  2675  3192   	fcall	_readRegister
 14116  14CF  303F               	movlw	63
 14117  14D0  0575               	andwf	?_readRegister,w
 14118  14D1  0021               	movlb	1	; select bank1
 14119  14D2  00B1               	movwf	??_updateVoltages^(0+128)
 14120  14D3  3000               	movlw	0
 14121  14D4  0576               	andwf	?_readRegister+1,w
 14122  14D5  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 14123  14D6  0831               	movf	??_updateVoltages^(0+128),w
 14124  14D7  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 14125  14D8  01B1               	clrf	??_updateVoltages^(0+128)
 14126  14D9  3018               	movlw	24
 14127  14DA  00F5               	movwf	readRegister@slaveAddress
 14128  14DB  3000               	movlw	0
 14129  14DC  00F6               	movwf	readRegister@slaveAddress+1
 14130  14DD  3015               	movlw	21
 14131  14DE  00F7               	movwf	readRegister@regAddress
 14132  14DF  3000               	movlw	0
 14133  14E0  00F8               	movwf	readRegister@regAddress+1
 14134  14E1  31B6  2675  3192   	fcall	_readRegister
 14135  14E4  0875               	movf	?_readRegister,w
 14136  14E5  0021               	movlb	1	; select bank1
 14137  14E6  0431               	iorwf	??_updateVoltages^(0+128),w
 14138  14E7  00B8               	movwf	updateVoltages@adcVal^(0+128)
 14139  14E8  0876               	movf	?_readRegister+1,w
 14140  14E9  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 14141  14EA  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 14142  14EB  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 14143  14EC  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 14144  14ED  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 14145  14EE  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 14146  14EF  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 14147                           
 14148                           ;BQ76920.c: 246:     cellVoltages[4] = (adcVal * adcGain / 1000) + adcOffset;
 14149  14F0  3000               	movlw	0
 14150  14F1  0020               	movlb	0	; select bank0
 14151  14F2  00A7               	movwf	___aldiv@divisor+3
 14152  14F3  3000               	movlw	0
 14153  14F4  00A6               	movwf	___aldiv@divisor+2
 14154  14F5  3003               	movlw	3
 14155  14F6  00A5               	movwf	___aldiv@divisor+1
 14156  14F7  30E8               	movlw	232
 14157  14F8  00A4               	movwf	___aldiv@divisor
 14158  14F9  0022               	movlb	2	; select bank2
 14159  14FA  086D               	movf	_adcGain^(0+256),w
 14160  14FB  00F1               	movwf	___lmul@multiplier
 14161  14FC  086E               	movf	(_adcGain+1)^(0+256),w
 14162  14FD  00F2               	movwf	___lmul@multiplier+1
 14163  14FE  0D89               	rlf	9,f
 14164  14FF  3B89               	subwfb	9,f
 14165  1500  0989               	comf	9,f
 14166  1501  00F3               	movwf	___lmul@multiplier+2
 14167  1502  00F4               	movwf	___lmul@multiplier+3
 14168  1503  0021               	movlb	1	; select bank1
 14169  1504  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 14170  1505  00F8               	movwf	___lmul@multiplicand+3
 14171  1506  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 14172  1507  00F7               	movwf	___lmul@multiplicand+2
 14173  1508  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 14174  1509  00F6               	movwf	___lmul@multiplicand+1
 14175  150A  0838               	movf	updateVoltages@adcVal^(0+128),w
 14176  150B  00F5               	movwf	___lmul@multiplicand
 14177  150C  31B5  25DC  3192   	fcall	___lmul
 14178  150F  0874               	movf	?___lmul+3,w
 14179  1510  0020               	movlb	0	; select bank0
 14180  1511  00AB               	movwf	___aldiv@dividend+3
 14181  1512  0873               	movf	?___lmul+2,w
 14182  1513  00AA               	movwf	___aldiv@dividend+2
 14183  1514  0872               	movf	?___lmul+1,w
 14184  1515  00A9               	movwf	___aldiv@dividend+1
 14185  1516  0871               	movf	?___lmul,w
 14186  1517  00A8               	movwf	___aldiv@dividend
 14187  1518  31AB  232D         	fcall	___aldiv
 14188  151A  0022               	movlb	2	; select bank2
 14189  151B  086B               	movf	_adcOffset^(0+256),w
 14190  151C  0020               	movlb	0	; select bank0
 14191  151D  0724               	addwf	?___aldiv,w
 14192  151E  0023               	movlb	3	; select bank3
 14193  151F  00A8               	movwf	(_cellVoltages^(0+384)+8)
 14194  1520  0022               	movlb	2	; select bank2
 14195  1521  086C               	movf	(_adcOffset+1)^(0+256),w
 14196  1522  0020               	movlb	0	; select bank0
 14197  1523  3D25               	addwfc	?___aldiv+1,w
 14198  1524  0023               	movlb	3	; select bank3
 14199  1525  00A9               	movwf	((_cellVoltages+1)^(0+384)+8)
 14200  1526  0008               	return
 14201  1527                     __end_of_updateVoltages:	
 14202                           
 14203                           	psect	text48
 14204  35DC                     __ptext48:	
 14205 ;; *************** function ___lmul *****************
 14206 ;; Defined at:
 14207 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c"
 14208 ;; Parameters:    Size  Location     Type
 14209 ;;  multiplier      4    1[COMMON] unsigned long 
 14210 ;;  multiplicand    4    5[COMMON] unsigned long 
 14211 ;; Auto vars:     Size  Location     Type
 14212 ;;  product         4    0[BANK0 ] unsigned long 
 14213 ;; Return value:  Size  Location     Type
 14214 ;;                  4    1[COMMON] unsigned long 
 14215 ;; Registers used:
 14216 ;;		wreg, status,2, status,0
 14217 ;; Tracked objects:
 14218 ;;		On entry : 0/0
 14219 ;;		On exit  : 0/0
 14220 ;;		Unchanged: 0/0
 14221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14222 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14223 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14225 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14226 ;;Total ram usage:       12 bytes
 14227 ;; Hardware stack levels used:    1
 14228 ;; Hardware stack levels required when called:    1
 14229 ;; This function calls:
 14230 ;;		Nothing
 14231 ;; This function is called by:
 14232 ;;		_setCellUndervoltageProtection
 14233 ;;		_setCellOvervoltageProtection
 14234 ;;		_updateVoltages
 14235 ;; This function uses a non-reentrant model
 14236 ;;
 14237                           
 14238                           
 14239                           ;psect for function ___lmul
 14240  35DC                     ___lmul:	
 14241                           
 14242                           ;incstack = 0
 14243                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 14244  35DC  3000               	movlw	0
 14245  35DD  0020               	movlb	0	; select bank0
 14246  35DE  00A3               	movwf	___lmul@product+3
 14247  35DF  3000               	movlw	0
 14248  35E0  00A2               	movwf	___lmul@product+2
 14249  35E1  3000               	movlw	0
 14250  35E2  00A1               	movwf	___lmul@product+1
 14251  35E3  3000               	movlw	0
 14252  35E4  00A0               	movwf	___lmul@product
 14253  35E5                     l7880:	
 14254  35E5  1C71               	btfss	___lmul@multiplier,0
 14255  35E6  2DF0               	goto	l7884
 14256  35E7  0875               	movf	___lmul@multiplicand,w
 14257  35E8  0020               	movlb	0	; select bank0
 14258  35E9  07A0               	addwf	___lmul@product,f
 14259  35EA  0876               	movf	___lmul@multiplicand+1,w
 14260  35EB  3DA1               	addwfc	___lmul@product+1,f
 14261  35EC  0877               	movf	___lmul@multiplicand+2,w
 14262  35ED  3DA2               	addwfc	___lmul@product+2,f
 14263  35EE  0878               	movf	___lmul@multiplicand+3,w
 14264  35EF  3DA3               	addwfc	___lmul@product+3,f
 14265  35F0                     l7884:	
 14266  35F0  3001               	movlw	1
 14267  35F1                     u10795:	
 14268  35F1  35F5               	lslf	___lmul@multiplicand,f
 14269  35F2  0DF6               	rlf	___lmul@multiplicand+1,f
 14270  35F3  0DF7               	rlf	___lmul@multiplicand+2,f
 14271  35F4  0DF8               	rlf	___lmul@multiplicand+3,f
 14272  35F5  0B89               	decfsz	9,f
 14273  35F6  2DF1               	goto	u10795
 14274  35F7  3001               	movlw	1
 14275  35F8                     u10805:	
 14276  35F8  36F4               	lsrf	___lmul@multiplier+3,f
 14277  35F9  0CF3               	rrf	___lmul@multiplier+2,f
 14278  35FA  0CF2               	rrf	___lmul@multiplier+1,f
 14279  35FB  0CF1               	rrf	___lmul@multiplier,f
 14280  35FC  0B89               	decfsz	9,f
 14281  35FD  2DF8               	goto	u10805
 14282  35FE  0874               	movf	___lmul@multiplier+3,w
 14283  35FF  0473               	iorwf	___lmul@multiplier+2,w
 14284  3600  0472               	iorwf	___lmul@multiplier+1,w
 14285  3601  0471               	iorwf	___lmul@multiplier,w
 14286  3602  1D03               	skipz
 14287  3603  2DE5               	goto	l7880
 14288  3604  0020               	movlb	0	; select bank0
 14289  3605  0823               	movf	___lmul@product+3,w
 14290  3606  00F4               	movwf	?___lmul+3
 14291  3607  0822               	movf	___lmul@product+2,w
 14292  3608  00F3               	movwf	?___lmul+2
 14293  3609  0821               	movf	___lmul@product+1,w
 14294  360A  00F2               	movwf	?___lmul+1
 14295  360B  0820               	movf	___lmul@product,w
 14296  360C  00F1               	movwf	?___lmul
 14297  360D  0008               	return
 14298  360E                     __end_of___lmul:	
 14299                           
 14300                           	psect	text49
 14301  1527                     __ptext49:	
 14302 ;; *************** function _updateTemperatures *****************
 14303 ;; Defined at:
 14304 ;;		line 253 in file "BQ76920.c"
 14305 ;; Parameters:    Size  Location     Type
 14306 ;;		None
 14307 ;; Auto vars:     Size  Location     Type
 14308 ;;  rts             4   75[BANK1 ] unsigned long 
 14309 ;;  tmp             4   67[BANK1 ] float 
 14310 ;;  vtsx            2   73[BANK1 ] int 
 14311 ;;  adcVal          2   71[BANK1 ] int 
 14312 ;; Return value:  Size  Location     Type
 14313 ;;                  1    wreg      void 
 14314 ;; Registers used:
 14315 ;;		wreg, status,2, status,0, pclath, cstack
 14316 ;; Tracked objects:
 14317 ;;		On entry : 0/0
 14318 ;;		On exit  : 0/0
 14319 ;;		Unchanged: 0/0
 14320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14322 ;;      Locals:         0       0      56       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14323 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14324 ;;      Totals:         0       0      59       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14325 ;;Total ram usage:       59 bytes
 14326 ;; Hardware stack levels used:    1
 14327 ;; Hardware stack levels required when called:    4
 14328 ;; This function calls:
 14329 ;;		___fladd
 14330 ;;		___fldiv
 14331 ;;		___flmul
 14332 ;;		___flsub
 14333 ;;		___fltol
 14334 ;;		___xxtofl
 14335 ;;		_logf
 14336 ;;		_readRegister
 14337 ;; This function is called by:
 14338 ;;		_AFE_UPDATE
 14339 ;; This function uses a non-reentrant model
 14340 ;;
 14341                           
 14342                           
 14343                           ;psect for function _updateTemperatures
 14344  1527                     _updateTemperatures:	
 14345                           
 14346                           ;BQ76920.c: 257:      unsigned long rts = 0;
 14347                           
 14348                           ;incstack = 0
 14349                           ; Regs used in _updateTemperatures: [wreg+status,2+status,0+pclath+cstack]
 14350  1527  3000               	movlw	0
 14351  1528  0021               	movlb	1	; select bank1
 14352  1529  00EE               	movwf	(updateTemperatures@rts+3)^(0+128)
 14353  152A  3000               	movlw	0
 14354  152B  00ED               	movwf	(updateTemperatures@rts+2)^(0+128)
 14355  152C  3000               	movlw	0
 14356  152D  00EC               	movwf	(updateTemperatures@rts+1)^(0+128)
 14357  152E  3000               	movlw	0
 14358  152F  00EB               	movwf	updateTemperatures@rts^(0+128)
 14359                           
 14360                           ;BQ76920.c: 259:      adcVal = ((readRegister(0x18, 0x2C) & 0x3F) << 8) | readRegister(0
      +                          x18, 0x2D);
 14361  1530  3018               	movlw	24
 14362  1531  00F5               	movwf	readRegister@slaveAddress
 14363  1532  3000               	movlw	0
 14364  1533  00F6               	movwf	readRegister@slaveAddress+1
 14365  1534  302C               	movlw	44
 14366  1535  00F7               	movwf	readRegister@regAddress
 14367  1536  3000               	movlw	0
 14368  1537  00F8               	movwf	readRegister@regAddress+1
 14369  1538  31B6  2675  3195   	fcall	_readRegister
 14370  153B  303F               	movlw	63
 14371  153C  0575               	andwf	?_readRegister,w
 14372  153D  0021               	movlb	1	; select bank1
 14373  153E  00B4               	movwf	??_updateTemperatures^(0+128)
 14374  153F  3000               	movlw	0
 14375  1540  0576               	andwf	?_readRegister+1,w
 14376  1541  00B5               	movwf	(??_updateTemperatures+1)^(0+128)
 14377  1542  0834               	movf	??_updateTemperatures^(0+128),w
 14378  1543  00B5               	movwf	(??_updateTemperatures^(0+128)+1)
 14379  1544  01B4               	clrf	??_updateTemperatures^(0+128)
 14380  1545  3018               	movlw	24
 14381  1546  00F5               	movwf	readRegister@slaveAddress
 14382  1547  3000               	movlw	0
 14383  1548  00F6               	movwf	readRegister@slaveAddress+1
 14384  1549  302D               	movlw	45
 14385  154A  00F7               	movwf	readRegister@regAddress
 14386  154B  3000               	movlw	0
 14387  154C  00F8               	movwf	readRegister@regAddress+1
 14388  154D  31B6  2675  3195   	fcall	_readRegister
 14389  1550  0875               	movf	?_readRegister,w
 14390  1551  0021               	movlb	1	; select bank1
 14391  1552  0434               	iorwf	??_updateTemperatures^(0+128),w
 14392  1553  00E7               	movwf	updateTemperatures@adcVal^(0+128)
 14393  1554  0876               	movf	?_readRegister+1,w
 14394  1555  0435               	iorwf	(??_updateTemperatures+1)^(0+128),w
 14395  1556  00E8               	movwf	(updateTemperatures@adcVal+1)^(0+128)
 14396                           
 14397                           ;BQ76920.c: 260:      vtsx = adcVal * 0.382;
 14398  1557  0867               	movf	updateTemperatures@adcVal^(0+128),w
 14399  1558  00F1               	movwf	___xxtofl@val
 14400  1559  0868               	movf	(updateTemperatures@adcVal+1)^(0+128),w
 14401  155A  00F2               	movwf	___xxtofl@val+1
 14402  155B  0D89               	rlf	9,f
 14403  155C  3B89               	subwfb	9,f
 14404  155D  0989               	comf	9,f
 14405  155E  00F3               	movwf	___xxtofl@val+2
 14406  155F  00F4               	movwf	___xxtofl@val+3
 14407  1560  3001               	movlw	1
 14408  1561  31AB  23AF  3195   	fcall	___xxtofl
 14409  1564  0874               	movf	?___xxtofl+3,w
 14410  1565  0020               	movlb	0	; select bank0
 14411  1566  00AD               	movwf	___flmul@a+3
 14412  1567  0873               	movf	?___xxtofl+2,w
 14413  1568  00AC               	movwf	___flmul@a+2
 14414  1569  0872               	movf	?___xxtofl+1,w
 14415  156A  00AB               	movwf	___flmul@a+1
 14416  156B  0871               	movf	?___xxtofl,w
 14417  156C  00AA               	movwf	___flmul@a
 14418  156D  303E               	movlw	62
 14419  156E  00A9               	movwf	___flmul@b+3
 14420  156F  30C3               	movlw	195
 14421  1570  00A8               	movwf	___flmul@b+2
 14422  1571  3095               	movlw	149
 14423  1572  00A7               	movwf	___flmul@b+1
 14424  1573  3081               	movlw	129
 14425  1574  00A6               	movwf	___flmul@b
 14426  1575  3190  2023  3195   	fcall	___flmul
 14427  1578  0020               	movlb	0	; select bank0
 14428  1579  0829               	movf	?___flmul+3,w
 14429  157A  0021               	movlb	1	; select bank1
 14430  157B  00AB               	movwf	(___fltol@f1+3)^(0+128)
 14431  157C  0020               	movlb	0	; select bank0
 14432  157D  0828               	movf	?___flmul+2,w
 14433  157E  0021               	movlb	1	; select bank1
 14434  157F  00AA               	movwf	(___fltol@f1+2)^(0+128)
 14435  1580  0020               	movlb	0	; select bank0
 14436  1581  0827               	movf	?___flmul+1,w
 14437  1582  0021               	movlb	1	; select bank1
 14438  1583  00A9               	movwf	(___fltol@f1+1)^(0+128)
 14439  1584  0020               	movlb	0	; select bank0
 14440  1585  0826               	movf	?___flmul,w
 14441  1586  0021               	movlb	1	; select bank1
 14442  1587  00A8               	movwf	___fltol@f1^(0+128)
 14443  1588  31A8  2071  3195   	fcall	___fltol
 14444  158B  0021               	movlb	1	; select bank1
 14445  158C  0829               	movf	(?___fltol+1)^(0+128),w
 14446  158D  00EA               	movwf	(updateTemperatures@vtsx+1)^(0+128)
 14447  158E  0828               	movf	?___fltol^(0+128),w
 14448  158F  00E9               	movwf	updateTemperatures@vtsx^(0+128)
 14449                           
 14450                           ;BQ76920.c: 261:      rts = 10000.0 * vtsx / (3300.0 - vtsx);
 14451  1590  0869               	movf	updateTemperatures@vtsx^(0+128),w
 14452  1591  00F1               	movwf	___xxtofl@val
 14453  1592  086A               	movf	(updateTemperatures@vtsx+1)^(0+128),w
 14454  1593  00F2               	movwf	___xxtofl@val+1
 14455  1594  0D89               	rlf	9,f
 14456  1595  3B89               	subwfb	9,f
 14457  1596  0989               	comf	9,f
 14458  1597  00F3               	movwf	___xxtofl@val+2
 14459  1598  00F4               	movwf	___xxtofl@val+3
 14460  1599  3001               	movlw	1
 14461  159A  31AB  23AF  3195   	fcall	___xxtofl
 14462  159D  0874               	movf	?___xxtofl+3,w
 14463  159E  0020               	movlb	0	; select bank0
 14464  159F  00AD               	movwf	___flmul@a+3
 14465  15A0  0873               	movf	?___xxtofl+2,w
 14466  15A1  00AC               	movwf	___flmul@a+2
 14467  15A2  0872               	movf	?___xxtofl+1,w
 14468  15A3  00AB               	movwf	___flmul@a+1
 14469  15A4  0871               	movf	?___xxtofl,w
 14470  15A5  00AA               	movwf	___flmul@a
 14471  15A6  3046               	movlw	70
 14472  15A7  00A9               	movwf	___flmul@b+3
 14473  15A8  301C               	movlw	28
 14474  15A9  00A8               	movwf	___flmul@b+2
 14475  15AA  3040               	movlw	64
 14476  15AB  00A7               	movwf	___flmul@b+1
 14477  15AC  3000               	movlw	0
 14478  15AD  00A6               	movwf	___flmul@b
 14479  15AE  3190  2023  3195   	fcall	___flmul
 14480  15B1  0020               	movlb	0	; select bank0
 14481  15B2  0829               	movf	?___flmul+3,w
 14482  15B3  00C7               	movwf	___fldiv@b+3
 14483  15B4  0828               	movf	?___flmul+2,w
 14484  15B5  00C6               	movwf	___fldiv@b+2
 14485  15B6  0827               	movf	?___flmul+1,w
 14486  15B7  00C5               	movwf	___fldiv@b+1
 14487  15B8  0826               	movf	?___flmul,w
 14488  15B9  00C4               	movwf	___fldiv@b
 14489  15BA  3045               	movlw	69
 14490  15BB  0021               	movlb	1	; select bank1
 14491  15BC  00A7               	movwf	(___flsub@b+3)^(0+128)
 14492  15BD  304E               	movlw	78
 14493  15BE  00A6               	movwf	(___flsub@b+2)^(0+128)
 14494  15BF  3040               	movlw	64
 14495  15C0  00A5               	movwf	(___flsub@b+1)^(0+128)
 14496  15C1  3000               	movlw	0
 14497  15C2  00A4               	movwf	___flsub@b^(0+128)
 14498  15C3  0869               	movf	updateTemperatures@vtsx^(0+128),w
 14499  15C4  00F1               	movwf	___xxtofl@val
 14500  15C5  086A               	movf	(updateTemperatures@vtsx+1)^(0+128),w
 14501  15C6  00F2               	movwf	___xxtofl@val+1
 14502  15C7  0D89               	rlf	9,f
 14503  15C8  3B89               	subwfb	9,f
 14504  15C9  0989               	comf	9,f
 14505  15CA  00F3               	movwf	___xxtofl@val+2
 14506  15CB  00F4               	movwf	___xxtofl@val+3
 14507  15CC  3001               	movlw	1
 14508  15CD  31AB  23AF  3195   	fcall	___xxtofl
 14509  15D0  0874               	movf	?___xxtofl+3,w
 14510  15D1  0021               	movlb	1	; select bank1
 14511  15D2  00A3               	movwf	(___flsub@a+3)^(0+128)
 14512  15D3  0873               	movf	?___xxtofl+2,w
 14513  15D4  00A2               	movwf	(___flsub@a+2)^(0+128)
 14514  15D5  0872               	movf	?___xxtofl+1,w
 14515  15D6  00A1               	movwf	(___flsub@a+1)^(0+128)
 14516  15D7  0871               	movf	?___xxtofl,w
 14517  15D8  00A0               	movwf	___flsub@a^(0+128)
 14518  15D9  31B6  2640  3195   	fcall	___flsub
 14519  15DC  0021               	movlb	1	; select bank1
 14520  15DD  0823               	movf	(?___flsub+3)^(0+128),w
 14521  15DE  0020               	movlb	0	; select bank0
 14522  15DF  00C3               	movwf	___fldiv@a+3
 14523  15E0  0021               	movlb	1	; select bank1
 14524  15E1  0822               	movf	(?___flsub+2)^(0+128),w
 14525  15E2  0020               	movlb	0	; select bank0
 14526  15E3  00C2               	movwf	___fldiv@a+2
 14527  15E4  0021               	movlb	1	; select bank1
 14528  15E5  0821               	movf	(?___flsub+1)^(0+128),w
 14529  15E6  0020               	movlb	0	; select bank0
 14530  15E7  00C1               	movwf	___fldiv@a+1
 14531  15E8  0021               	movlb	1	; select bank1
 14532  15E9  0820               	movf	?___flsub^(0+128),w
 14533  15EA  0020               	movlb	0	; select bank0
 14534  15EB  00C0               	movwf	___fldiv@a
 14535  15EC  319B  2353  3195   	fcall	___fldiv
 14536  15EF  0020               	movlb	0	; select bank0
 14537  15F0  0843               	movf	?___fldiv+3,w
 14538  15F1  0021               	movlb	1	; select bank1
 14539  15F2  00AB               	movwf	(___fltol@f1+3)^(0+128)
 14540  15F3  0020               	movlb	0	; select bank0
 14541  15F4  0842               	movf	?___fldiv+2,w
 14542  15F5  0021               	movlb	1	; select bank1
 14543  15F6  00AA               	movwf	(___fltol@f1+2)^(0+128)
 14544  15F7  0020               	movlb	0	; select bank0
 14545  15F8  0841               	movf	?___fldiv+1,w
 14546  15F9  0021               	movlb	1	; select bank1
 14547  15FA  00A9               	movwf	(___fltol@f1+1)^(0+128)
 14548  15FB  0020               	movlb	0	; select bank0
 14549  15FC  0840               	movf	?___fldiv,w
 14550  15FD  0021               	movlb	1	; select bank1
 14551  15FE  00A8               	movwf	___fltol@f1^(0+128)
 14552  15FF  31A8  2071  3195   	fcall	___fltol
 14553  1602  0021               	movlb	1	; select bank1
 14554  1603  082B               	movf	(?___fltol+3)^(0+128),w
 14555  1604  00EE               	movwf	(updateTemperatures@rts+3)^(0+128)
 14556  1605  082A               	movf	(?___fltol+2)^(0+128),w
 14557  1606  00ED               	movwf	(updateTemperatures@rts+2)^(0+128)
 14558  1607  0829               	movf	(?___fltol+1)^(0+128),w
 14559  1608  00EC               	movwf	(updateTemperatures@rts+1)^(0+128)
 14560  1609  0828               	movf	?___fltol^(0+128),w
 14561  160A  00EB               	movwf	updateTemperatures@rts^(0+128)
 14562                           
 14563                           ;BQ76920.c: 268:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14564  160B  086E               	movf	(updateTemperatures@rts+3)^(0+128),w
 14565  160C  00F4               	movwf	___xxtofl@val+3
 14566  160D  086D               	movf	(updateTemperatures@rts+2)^(0+128),w
 14567  160E  00F3               	movwf	___xxtofl@val+2
 14568  160F  086C               	movf	(updateTemperatures@rts+1)^(0+128),w
 14569  1610  00F2               	movwf	___xxtofl@val+1
 14570  1611  086B               	movf	updateTemperatures@rts^(0+128),w
 14571  1612  00F1               	movwf	___xxtofl@val
 14572  1613  3000               	movlw	0
 14573  1614  31AB  23AF  3195   	fcall	___xxtofl
 14574  1617  0874               	movf	?___xxtofl+3,w
 14575  1618  0021               	movlb	1	; select bank1
 14576  1619  00BA               	movwf	(_updateTemperatures$2036+3)^(0+128)
 14577  161A  0873               	movf	?___xxtofl+2,w
 14578  161B  00B9               	movwf	(_updateTemperatures$2036+2)^(0+128)
 14579  161C  0872               	movf	?___xxtofl+1,w
 14580  161D  00B8               	movwf	(_updateTemperatures$2036+1)^(0+128)
 14581  161E  0871               	movf	?___xxtofl,w
 14582  161F  00B7               	movwf	_updateTemperatures$2036^(0+128)
 14583                           
 14584                           ;BQ76920.c: 268:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14585  1620  086E               	movf	(updateTemperatures@rts+3)^(0+128),w
 14586  1621  00F4               	movwf	___xxtofl@val+3
 14587  1622  086D               	movf	(updateTemperatures@rts+2)^(0+128),w
 14588  1623  00F3               	movwf	___xxtofl@val+2
 14589  1624  086C               	movf	(updateTemperatures@rts+1)^(0+128),w
 14590  1625  00F2               	movwf	___xxtofl@val+1
 14591  1626  086B               	movf	updateTemperatures@rts^(0+128),w
 14592  1627  00F1               	movwf	___xxtofl@val
 14593  1628  3000               	movlw	0
 14594  1629  31AB  23AF  3195   	fcall	___xxtofl
 14595  162C  0874               	movf	?___xxtofl+3,w
 14596  162D  0021               	movlb	1	; select bank1
 14597  162E  00BE               	movwf	(_updateTemperatures$2037+3)^(0+128)
 14598  162F  0873               	movf	?___xxtofl+2,w
 14599  1630  00BD               	movwf	(_updateTemperatures$2037+2)^(0+128)
 14600  1631  0872               	movf	?___xxtofl+1,w
 14601  1632  00BC               	movwf	(_updateTemperatures$2037+1)^(0+128)
 14602  1633  0871               	movf	?___xxtofl,w
 14603  1634  00BB               	movwf	_updateTemperatures$2037^(0+128)
 14604                           
 14605                           ;BQ76920.c: 268:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14606  1635  086E               	movf	(updateTemperatures@rts+3)^(0+128),w
 14607  1636  00F4               	movwf	___xxtofl@val+3
 14608  1637  086D               	movf	(updateTemperatures@rts+2)^(0+128),w
 14609  1638  00F3               	movwf	___xxtofl@val+2
 14610  1639  086C               	movf	(updateTemperatures@rts+1)^(0+128),w
 14611  163A  00F2               	movwf	___xxtofl@val+1
 14612  163B  086B               	movf	updateTemperatures@rts^(0+128),w
 14613  163C  00F1               	movwf	___xxtofl@val
 14614  163D  3000               	movlw	0
 14615  163E  31AB  23AF  3195   	fcall	___xxtofl
 14616  1641  0874               	movf	?___xxtofl+3,w
 14617  1642  0021               	movlb	1	; select bank1
 14618  1643  00C2               	movwf	(_updateTemperatures$2038+3)^(0+128)
 14619  1644  0873               	movf	?___xxtofl+2,w
 14620  1645  00C1               	movwf	(_updateTemperatures$2038+2)^(0+128)
 14621  1646  0872               	movf	?___xxtofl+1,w
 14622  1647  00C0               	movwf	(_updateTemperatures$2038+1)^(0+128)
 14623  1648  0871               	movf	?___xxtofl,w
 14624  1649  00BF               	movwf	_updateTemperatures$2038^(0+128)
 14625                           
 14626                           ;BQ76920.c: 268:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14627  164A  083E               	movf	(_updateTemperatures$2037+3)^(0+128),w
 14628  164B  00AB               	movwf	(logf@x+3)^(0+128)
 14629  164C  083D               	movf	(_updateTemperatures$2037+2)^(0+128),w
 14630  164D  00AA               	movwf	(logf@x+2)^(0+128)
 14631  164E  083C               	movf	(_updateTemperatures$2037+1)^(0+128),w
 14632  164F  00A9               	movwf	(logf@x+1)^(0+128)
 14633  1650  083B               	movf	_updateTemperatures$2037^(0+128),w
 14634  1651  00A8               	movwf	logf@x^(0+128)
 14635  1652  3180  206B  3195   	fcall	_logf
 14636  1655  0021               	movlb	1	; select bank1
 14637  1656  082B               	movf	(?_logf+3)^(0+128),w
 14638  1657  00C6               	movwf	(_updateTemperatures$2039+3)^(0+128)
 14639  1658  082A               	movf	(?_logf+2)^(0+128),w
 14640  1659  00C5               	movwf	(_updateTemperatures$2039+2)^(0+128)
 14641  165A  0829               	movf	(?_logf+1)^(0+128),w
 14642  165B  00C4               	movwf	(_updateTemperatures$2039+1)^(0+128)
 14643  165C  0828               	movf	?_logf^(0+128),w
 14644  165D  00C3               	movwf	_updateTemperatures$2039^(0+128)
 14645                           
 14646                           ;BQ76920.c: 268:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14647  165E  0842               	movf	(_updateTemperatures$2038+3)^(0+128),w
 14648  165F  00AB               	movwf	(logf@x+3)^(0+128)
 14649  1660  0841               	movf	(_updateTemperatures$2038+2)^(0+128),w
 14650  1661  00AA               	movwf	(logf@x+2)^(0+128)
 14651  1662  0840               	movf	(_updateTemperatures$2038+1)^(0+128),w
 14652  1663  00A9               	movwf	(logf@x+1)^(0+128)
 14653  1664  083F               	movf	_updateTemperatures$2038^(0+128),w
 14654  1665  00A8               	movwf	logf@x^(0+128)
 14655  1666  3180  206B  3195   	fcall	_logf
 14656  1669  0021               	movlb	1	; select bank1
 14657  166A  082B               	movf	(?_logf+3)^(0+128),w
 14658  166B  00CA               	movwf	(_updateTemperatures$2040+3)^(0+128)
 14659  166C  082A               	movf	(?_logf+2)^(0+128),w
 14660  166D  00C9               	movwf	(_updateTemperatures$2040+2)^(0+128)
 14661  166E  0829               	movf	(?_logf+1)^(0+128),w
 14662  166F  00C8               	movwf	(_updateTemperatures$2040+1)^(0+128)
 14663  1670  0828               	movf	?_logf^(0+128),w
 14664  1671  00C7               	movwf	_updateTemperatures$2040^(0+128)
 14665                           
 14666                           ;BQ76920.c: 268:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14667  1672  083A               	movf	(_updateTemperatures$2036+3)^(0+128),w
 14668  1673  00AB               	movwf	(logf@x+3)^(0+128)
 14669  1674  0839               	movf	(_updateTemperatures$2036+2)^(0+128),w
 14670  1675  00AA               	movwf	(logf@x+2)^(0+128)
 14671  1676  0838               	movf	(_updateTemperatures$2036+1)^(0+128),w
 14672  1677  00A9               	movwf	(logf@x+1)^(0+128)
 14673  1678  0837               	movf	_updateTemperatures$2036^(0+128),w
 14674  1679  00A8               	movwf	logf@x^(0+128)
 14675  167A  3180  206B  3195   	fcall	_logf
 14676  167D  0021               	movlb	1	; select bank1
 14677  167E  082B               	movf	(?_logf+3)^(0+128),w
 14678  167F  00CE               	movwf	(_updateTemperatures$2041+3)^(0+128)
 14679  1680  082A               	movf	(?_logf+2)^(0+128),w
 14680  1681  00CD               	movwf	(_updateTemperatures$2041+2)^(0+128)
 14681  1682  0829               	movf	(?_logf+1)^(0+128),w
 14682  1683  00CC               	movwf	(_updateTemperatures$2041+1)^(0+128)
 14683  1684  0828               	movf	?_logf^(0+128),w
 14684  1685  00CB               	movwf	_updateTemperatures$2041^(0+128)
 14685                           
 14686                           ;BQ76920.c: 268:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14687  1686  0846               	movf	(_updateTemperatures$2039+3)^(0+128),w
 14688  1687  0020               	movlb	0	; select bank0
 14689  1688  00A9               	movwf	___flmul@b+3
 14690  1689  0021               	movlb	1	; select bank1
 14691  168A  0845               	movf	(_updateTemperatures$2039+2)^(0+128),w
 14692  168B  0020               	movlb	0	; select bank0
 14693  168C  00A8               	movwf	___flmul@b+2
 14694  168D  0021               	movlb	1	; select bank1
 14695  168E  0844               	movf	(_updateTemperatures$2039+1)^(0+128),w
 14696  168F  0020               	movlb	0	; select bank0
 14697  1690  00A7               	movwf	___flmul@b+1
 14698  1691  0021               	movlb	1	; select bank1
 14699  1692  0843               	movf	_updateTemperatures$2039^(0+128),w
 14700  1693  0020               	movlb	0	; select bank0
 14701  1694  00A6               	movwf	___flmul@b
 14702  1695  0021               	movlb	1	; select bank1
 14703  1696  084A               	movf	(_updateTemperatures$2040+3)^(0+128),w
 14704  1697  0020               	movlb	0	; select bank0
 14705  1698  00AD               	movwf	___flmul@a+3
 14706  1699  0021               	movlb	1	; select bank1
 14707  169A  0849               	movf	(_updateTemperatures$2040+2)^(0+128),w
 14708  169B  0020               	movlb	0	; select bank0
 14709  169C  00AC               	movwf	___flmul@a+2
 14710  169D  0021               	movlb	1	; select bank1
 14711  169E  0848               	movf	(_updateTemperatures$2040+1)^(0+128),w
 14712  169F  0020               	movlb	0	; select bank0
 14713  16A0  00AB               	movwf	___flmul@a+1
 14714  16A1  0021               	movlb	1	; select bank1
 14715  16A2  0847               	movf	_updateTemperatures$2040^(0+128),w
 14716  16A3  0020               	movlb	0	; select bank0
 14717  16A4  00AA               	movwf	___flmul@a
 14718  16A5  3190  2023  3195   	fcall	___flmul
 14719  16A8  0020               	movlb	0	; select bank0
 14720  16A9  0829               	movf	?___flmul+3,w
 14721  16AA  0021               	movlb	1	; select bank1
 14722  16AB  00D2               	movwf	(_updateTemperatures$2042+3)^(0+128)
 14723  16AC  0020               	movlb	0	; select bank0
 14724  16AD  0828               	movf	?___flmul+2,w
 14725  16AE  0021               	movlb	1	; select bank1
 14726  16AF  00D1               	movwf	(_updateTemperatures$2042+2)^(0+128)
 14727  16B0  0020               	movlb	0	; select bank0
 14728  16B1  0827               	movf	?___flmul+1,w
 14729  16B2  0021               	movlb	1	; select bank1
 14730  16B3  00D0               	movwf	(_updateTemperatures$2042+1)^(0+128)
 14731  16B4  0020               	movlb	0	; select bank0
 14732  16B5  0826               	movf	?___flmul,w
 14733  16B6  0021               	movlb	1	; select bank1
 14734  16B7  00CF               	movwf	_updateTemperatures$2042^(0+128)
 14735                           
 14736                           ;BQ76920.c: 268:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14737  16B8  084E               	movf	(_updateTemperatures$2041+3)^(0+128),w
 14738  16B9  0020               	movlb	0	; select bank0
 14739  16BA  00A9               	movwf	___flmul@b+3
 14740  16BB  0021               	movlb	1	; select bank1
 14741  16BC  084D               	movf	(_updateTemperatures$2041+2)^(0+128),w
 14742  16BD  0020               	movlb	0	; select bank0
 14743  16BE  00A8               	movwf	___flmul@b+2
 14744  16BF  0021               	movlb	1	; select bank1
 14745  16C0  084C               	movf	(_updateTemperatures$2041+1)^(0+128),w
 14746  16C1  0020               	movlb	0	; select bank0
 14747  16C2  00A7               	movwf	___flmul@b+1
 14748  16C3  0021               	movlb	1	; select bank1
 14749  16C4  084B               	movf	_updateTemperatures$2041^(0+128),w
 14750  16C5  0020               	movlb	0	; select bank0
 14751  16C6  00A6               	movwf	___flmul@b
 14752  16C7  0021               	movlb	1	; select bank1
 14753  16C8  0852               	movf	(_updateTemperatures$2042+3)^(0+128),w
 14754  16C9  0020               	movlb	0	; select bank0
 14755  16CA  00AD               	movwf	___flmul@a+3
 14756  16CB  0021               	movlb	1	; select bank1
 14757  16CC  0851               	movf	(_updateTemperatures$2042+2)^(0+128),w
 14758  16CD  0020               	movlb	0	; select bank0
 14759  16CE  00AC               	movwf	___flmul@a+2
 14760  16CF  0021               	movlb	1	; select bank1
 14761  16D0  0850               	movf	(_updateTemperatures$2042+1)^(0+128),w
 14762  16D1  0020               	movlb	0	; select bank0
 14763  16D2  00AB               	movwf	___flmul@a+1
 14764  16D3  0021               	movlb	1	; select bank1
 14765  16D4  084F               	movf	_updateTemperatures$2042^(0+128),w
 14766  16D5  0020               	movlb	0	; select bank0
 14767  16D6  00AA               	movwf	___flmul@a
 14768  16D7  3190  2023  3195   	fcall	___flmul
 14769  16DA  0020               	movlb	0	; select bank0
 14770  16DB  0829               	movf	?___flmul+3,w
 14771  16DC  0021               	movlb	1	; select bank1
 14772  16DD  00D6               	movwf	(_updateTemperatures$2043+3)^(0+128)
 14773  16DE  0020               	movlb	0	; select bank0
 14774  16DF  0828               	movf	?___flmul+2,w
 14775  16E0  0021               	movlb	1	; select bank1
 14776  16E1  00D5               	movwf	(_updateTemperatures$2043+2)^(0+128)
 14777  16E2  0020               	movlb	0	; select bank0
 14778  16E3  0827               	movf	?___flmul+1,w
 14779  16E4  0021               	movlb	1	; select bank1
 14780  16E5  00D4               	movwf	(_updateTemperatures$2043+1)^(0+128)
 14781  16E6  0020               	movlb	0	; select bank0
 14782  16E7  0826               	movf	?___flmul,w
 14783  16E8  0021               	movlb	1	; select bank1
 14784  16E9  00D3               	movwf	_updateTemperatures$2043^(0+128)
 14785                           
 14786                           ;BQ76920.c: 268:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14787  16EA  086E               	movf	(updateTemperatures@rts+3)^(0+128),w
 14788  16EB  00F4               	movwf	___xxtofl@val+3
 14789  16EC  086D               	movf	(updateTemperatures@rts+2)^(0+128),w
 14790  16ED  00F3               	movwf	___xxtofl@val+2
 14791  16EE  086C               	movf	(updateTemperatures@rts+1)^(0+128),w
 14792  16EF  00F2               	movwf	___xxtofl@val+1
 14793  16F0  086B               	movf	updateTemperatures@rts^(0+128),w
 14794  16F1  00F1               	movwf	___xxtofl@val
 14795  16F2  3000               	movlw	0
 14796  16F3  31AB  23AF  3195   	fcall	___xxtofl
 14797  16F6  0874               	movf	?___xxtofl+3,w
 14798  16F7  0021               	movlb	1	; select bank1
 14799  16F8  00DA               	movwf	(_updateTemperatures$2044+3)^(0+128)
 14800  16F9  0873               	movf	?___xxtofl+2,w
 14801  16FA  00D9               	movwf	(_updateTemperatures$2044+2)^(0+128)
 14802  16FB  0872               	movf	?___xxtofl+1,w
 14803  16FC  00D8               	movwf	(_updateTemperatures$2044+1)^(0+128)
 14804  16FD  0871               	movf	?___xxtofl,w
 14805  16FE  00D7               	movwf	_updateTemperatures$2044^(0+128)
 14806                           
 14807                           ;BQ76920.c: 268:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14808  16FF  085A               	movf	(_updateTemperatures$2044+3)^(0+128),w
 14809  1700  00AB               	movwf	(logf@x+3)^(0+128)
 14810  1701  0859               	movf	(_updateTemperatures$2044+2)^(0+128),w
 14811  1702  00AA               	movwf	(logf@x+2)^(0+128)
 14812  1703  0858               	movf	(_updateTemperatures$2044+1)^(0+128),w
 14813  1704  00A9               	movwf	(logf@x+1)^(0+128)
 14814  1705  0857               	movf	_updateTemperatures$2044^(0+128),w
 14815  1706  00A8               	movwf	logf@x^(0+128)
 14816  1707  3180  206B  3195   	fcall	_logf
 14817  170A  0021               	movlb	1	; select bank1
 14818  170B  082B               	movf	(?_logf+3)^(0+128),w
 14819  170C  00DE               	movwf	(_updateTemperatures$2045+3)^(0+128)
 14820  170D  082A               	movf	(?_logf+2)^(0+128),w
 14821  170E  00DD               	movwf	(_updateTemperatures$2045+2)^(0+128)
 14822  170F  0829               	movf	(?_logf+1)^(0+128),w
 14823  1710  00DC               	movwf	(_updateTemperatures$2045+1)^(0+128)
 14824  1711  0828               	movf	?_logf^(0+128),w
 14825  1712  00DB               	movwf	_updateTemperatures$2045^(0+128)
 14826                           
 14827                           ;BQ76920.c: 268:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14828  1713  30BC               	movlw	188
 14829  1714  0020               	movlb	0	; select bank0
 14830  1715  00DD               	movwf	___fladd@b+3
 14831  1716  308E               	movlw	142
 14832  1717  00DC               	movwf	___fladd@b+2
 14833  1718  30C5               	movlw	197
 14834  1719  00DB               	movwf	___fladd@b+1
 14835  171A  3072               	movlw	114
 14836  171B  00DA               	movwf	___fladd@b
 14837  171C  303B               	movlw	59
 14838  171D  00A9               	movwf	___flmul@b+3
 14839  171E  304D               	movlw	77
 14840  171F  00A8               	movwf	___flmul@b+2
 14841  1720  3098               	movlw	152
 14842  1721  00A7               	movwf	___flmul@b+1
 14843  1722  3025               	movlw	37
 14844  1723  00A6               	movwf	___flmul@b
 14845  1724  0021               	movlb	1	; select bank1
 14846  1725  085E               	movf	(_updateTemperatures$2045+3)^(0+128),w
 14847  1726  0020               	movlb	0	; select bank0
 14848  1727  00AD               	movwf	___flmul@a+3
 14849  1728  0021               	movlb	1	; select bank1
 14850  1729  085D               	movf	(_updateTemperatures$2045+2)^(0+128),w
 14851  172A  0020               	movlb	0	; select bank0
 14852  172B  00AC               	movwf	___flmul@a+2
 14853  172C  0021               	movlb	1	; select bank1
 14854  172D  085C               	movf	(_updateTemperatures$2045+1)^(0+128),w
 14855  172E  0020               	movlb	0	; select bank0
 14856  172F  00AB               	movwf	___flmul@a+1
 14857  1730  0021               	movlb	1	; select bank1
 14858  1731  085B               	movf	_updateTemperatures$2045^(0+128),w
 14859  1732  0020               	movlb	0	; select bank0
 14860  1733  00AA               	movwf	___flmul@a
 14861  1734  3190  2023  3195   	fcall	___flmul
 14862  1737  0020               	movlb	0	; select bank0
 14863  1738  0829               	movf	?___flmul+3,w
 14864  1739  00E1               	movwf	___fladd@a+3
 14865  173A  0828               	movf	?___flmul+2,w
 14866  173B  00E0               	movwf	___fladd@a+2
 14867  173C  0827               	movf	?___flmul+1,w
 14868  173D  00DF               	movwf	___fladd@a+1
 14869  173E  0826               	movf	?___flmul,w
 14870  173F  00DE               	movwf	___fladd@a
 14871  1740  3185  25F5  3195   	fcall	___fladd
 14872  1743  0020               	movlb	0	; select bank0
 14873  1744  085D               	movf	?___fladd+3,w
 14874  1745  0021               	movlb	1	; select bank1
 14875  1746  00E2               	movwf	(_updateTemperatures$2046+3)^(0+128)
 14876  1747  0020               	movlb	0	; select bank0
 14877  1748  085C               	movf	?___fladd+2,w
 14878  1749  0021               	movlb	1	; select bank1
 14879  174A  00E1               	movwf	(_updateTemperatures$2046+2)^(0+128)
 14880  174B  0020               	movlb	0	; select bank0
 14881  174C  085B               	movf	?___fladd+1,w
 14882  174D  0021               	movlb	1	; select bank1
 14883  174E  00E0               	movwf	(_updateTemperatures$2046+1)^(0+128)
 14884  174F  0020               	movlb	0	; select bank0
 14885  1750  085A               	movf	?___fladd,w
 14886  1751  0021               	movlb	1	; select bank1
 14887  1752  00DF               	movwf	_updateTemperatures$2046^(0+128)
 14888                           
 14889                           ;BQ76920.c: 268:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14890  1753  30B7               	movlw	183
 14891  1754  0020               	movlb	0	; select bank0
 14892  1755  00A9               	movwf	___flmul@b+3
 14893  1756  302E               	movlw	46
 14894  1757  00A8               	movwf	___flmul@b+2
 14895  1758  302F               	movlw	47
 14896  1759  00A7               	movwf	___flmul@b+1
 14897  175A  3045               	movlw	69
 14898  175B  00A6               	movwf	___flmul@b
 14899  175C  0021               	movlb	1	; select bank1
 14900  175D  0856               	movf	(_updateTemperatures$2043+3)^(0+128),w
 14901  175E  0020               	movlb	0	; select bank0
 14902  175F  00AD               	movwf	___flmul@a+3
 14903  1760  0021               	movlb	1	; select bank1
 14904  1761  0855               	movf	(_updateTemperatures$2043+2)^(0+128),w
 14905  1762  0020               	movlb	0	; select bank0
 14906  1763  00AC               	movwf	___flmul@a+2
 14907  1764  0021               	movlb	1	; select bank1
 14908  1765  0854               	movf	(_updateTemperatures$2043+1)^(0+128),w
 14909  1766  0020               	movlb	0	; select bank0
 14910  1767  00AB               	movwf	___flmul@a+1
 14911  1768  0021               	movlb	1	; select bank1
 14912  1769  0853               	movf	_updateTemperatures$2043^(0+128),w
 14913  176A  0020               	movlb	0	; select bank0
 14914  176B  00AA               	movwf	___flmul@a
 14915  176C  3190  2023  3195   	fcall	___flmul
 14916  176F  0020               	movlb	0	; select bank0
 14917  1770  0829               	movf	?___flmul+3,w
 14918  1771  00DD               	movwf	___fladd@b+3
 14919  1772  0828               	movf	?___flmul+2,w
 14920  1773  00DC               	movwf	___fladd@b+2
 14921  1774  0827               	movf	?___flmul+1,w
 14922  1775  00DB               	movwf	___fladd@b+1
 14923  1776  0826               	movf	?___flmul,w
 14924  1777  00DA               	movwf	___fladd@b
 14925  1778  0021               	movlb	1	; select bank1
 14926  1779  0862               	movf	(_updateTemperatures$2046+3)^(0+128),w
 14927  177A  0020               	movlb	0	; select bank0
 14928  177B  00E1               	movwf	___fladd@a+3
 14929  177C  0021               	movlb	1	; select bank1
 14930  177D  0861               	movf	(_updateTemperatures$2046+2)^(0+128),w
 14931  177E  0020               	movlb	0	; select bank0
 14932  177F  00E0               	movwf	___fladd@a+2
 14933  1780  0021               	movlb	1	; select bank1
 14934  1781  0860               	movf	(_updateTemperatures$2046+1)^(0+128),w
 14935  1782  0020               	movlb	0	; select bank0
 14936  1783  00DF               	movwf	___fladd@a+1
 14937  1784  0021               	movlb	1	; select bank1
 14938  1785  085F               	movf	_updateTemperatures$2046^(0+128),w
 14939  1786  0020               	movlb	0	; select bank0
 14940  1787  00DE               	movwf	___fladd@a
 14941  1788  3185  25F5  3195   	fcall	___fladd
 14942  178B  0020               	movlb	0	; select bank0
 14943  178C  085D               	movf	?___fladd+3,w
 14944  178D  00C3               	movwf	___fldiv@a+3
 14945  178E  085C               	movf	?___fladd+2,w
 14946  178F  00C2               	movwf	___fldiv@a+2
 14947  1790  085B               	movf	?___fladd+1,w
 14948  1791  00C1               	movwf	___fldiv@a+1
 14949  1792  085A               	movf	?___fladd,w
 14950  1793  00C0               	movwf	___fldiv@a
 14951  1794  303F               	movlw	63
 14952  1795  00C7               	movwf	___fldiv@b+3
 14953  1796  3080               	movlw	128
 14954  1797  00C6               	movwf	___fldiv@b+2
 14955  1798  3000               	movlw	0
 14956  1799  00C5               	movwf	___fldiv@b+1
 14957  179A  3000               	movlw	0
 14958  179B  00C4               	movwf	___fldiv@b
 14959  179C  319B  2353  3195   	fcall	___fldiv
 14960  179F  0020               	movlb	0	; select bank0
 14961  17A0  0843               	movf	?___fldiv+3,w
 14962  17A1  0021               	movlb	1	; select bank1
 14963  17A2  00E6               	movwf	(updateTemperatures@tmp+3)^(0+128)
 14964  17A3  0020               	movlb	0	; select bank0
 14965  17A4  0842               	movf	?___fldiv+2,w
 14966  17A5  0021               	movlb	1	; select bank1
 14967  17A6  00E5               	movwf	(updateTemperatures@tmp+2)^(0+128)
 14968  17A7  0020               	movlb	0	; select bank0
 14969  17A8  0841               	movf	?___fldiv+1,w
 14970  17A9  0021               	movlb	1	; select bank1
 14971  17AA  00E4               	movwf	(updateTemperatures@tmp+1)^(0+128)
 14972  17AB  0020               	movlb	0	; select bank0
 14973  17AC  0840               	movf	?___fldiv,w
 14974  17AD  0021               	movlb	1	; select bank1
 14975  17AE  00E3               	movwf	updateTemperatures@tmp^(0+128)
 14976                           
 14977                           ;BQ76920.c: 270:      temperatureThermistor = (tmp - 273.15)*100;
 14978  17AF  0866               	movf	(updateTemperatures@tmp+3)^(0+128),w
 14979  17B0  0020               	movlb	0	; select bank0
 14980  17B1  00E1               	movwf	___fladd@a+3
 14981  17B2  0021               	movlb	1	; select bank1
 14982  17B3  0865               	movf	(updateTemperatures@tmp+2)^(0+128),w
 14983  17B4  0020               	movlb	0	; select bank0
 14984  17B5  00E0               	movwf	___fladd@a+2
 14985  17B6  0021               	movlb	1	; select bank1
 14986  17B7  0864               	movf	(updateTemperatures@tmp+1)^(0+128),w
 14987  17B8  0020               	movlb	0	; select bank0
 14988  17B9  00DF               	movwf	___fladd@a+1
 14989  17BA  0021               	movlb	1	; select bank1
 14990  17BB  0863               	movf	updateTemperatures@tmp^(0+128),w
 14991  17BC  0020               	movlb	0	; select bank0
 14992  17BD  00DE               	movwf	___fladd@a
 14993  17BE  30C3               	movlw	195
 14994  17BF  00DD               	movwf	___fladd@b+3
 14995  17C0  3088               	movlw	136
 14996  17C1  00DC               	movwf	___fladd@b+2
 14997  17C2  3093               	movlw	147
 14998  17C3  00DB               	movwf	___fladd@b+1
 14999  17C4  3033               	movlw	51
 15000  17C5  00DA               	movwf	___fladd@b
 15001  17C6  3185  25F5  3195   	fcall	___fladd
 15002  17C9  0020               	movlb	0	; select bank0
 15003  17CA  085D               	movf	?___fladd+3,w
 15004  17CB  00AD               	movwf	___flmul@a+3
 15005  17CC  085C               	movf	?___fladd+2,w
 15006  17CD  00AC               	movwf	___flmul@a+2
 15007  17CE  085B               	movf	?___fladd+1,w
 15008  17CF  00AB               	movwf	___flmul@a+1
 15009  17D0  085A               	movf	?___fladd,w
 15010  17D1  00AA               	movwf	___flmul@a
 15011  17D2  3042               	movlw	66
 15012  17D3  00A9               	movwf	___flmul@b+3
 15013  17D4  30C8               	movlw	200
 15014  17D5  00A8               	movwf	___flmul@b+2
 15015  17D6  3000               	movlw	0
 15016  17D7  00A7               	movwf	___flmul@b+1
 15017  17D8  3000               	movlw	0
 15018  17D9  00A6               	movwf	___flmul@b
 15019  17DA  3190  2023  3195   	fcall	___flmul
 15020  17DD  0020               	movlb	0	; select bank0
 15021  17DE  0829               	movf	?___flmul+3,w
 15022  17DF  0021               	movlb	1	; select bank1
 15023  17E0  00AB               	movwf	(___fltol@f1+3)^(0+128)
 15024  17E1  0020               	movlb	0	; select bank0
 15025  17E2  0828               	movf	?___flmul+2,w
 15026  17E3  0021               	movlb	1	; select bank1
 15027  17E4  00AA               	movwf	(___fltol@f1+2)^(0+128)
 15028  17E5  0020               	movlb	0	; select bank0
 15029  17E6  0827               	movf	?___flmul+1,w
 15030  17E7  0021               	movlb	1	; select bank1
 15031  17E8  00A9               	movwf	(___fltol@f1+1)^(0+128)
 15032  17E9  0020               	movlb	0	; select bank0
 15033  17EA  0826               	movf	?___flmul,w
 15034  17EB  0021               	movlb	1	; select bank1
 15035  17EC  00A8               	movwf	___fltol@f1^(0+128)
 15036  17ED  31A8  2071         	fcall	___fltol
 15037  17EF  0021               	movlb	1	; select bank1
 15038  17F0  082B               	movf	(?___fltol+3)^(0+128),w
 15039  17F1  0023               	movlb	3	; select bank3
 15040  17F2  00B9               	movwf	(_temperatureThermistor+3)^(0+384)
 15041  17F3  0021               	movlb	1	; select bank1
 15042  17F4  082A               	movf	(?___fltol+2)^(0+128),w
 15043  17F5  0023               	movlb	3	; select bank3
 15044  17F6  00B8               	movwf	(_temperatureThermistor+2)^(0+384)
 15045  17F7  0021               	movlb	1	; select bank1
 15046  17F8  0829               	movf	(?___fltol+1)^(0+128),w
 15047  17F9  0023               	movlb	3	; select bank3
 15048  17FA  00B7               	movwf	(_temperatureThermistor+1)^(0+384)
 15049  17FB  0021               	movlb	1	; select bank1
 15050  17FC  0828               	movf	?___fltol^(0+128),w
 15051  17FD  0023               	movlb	3	; select bank3
 15052  17FE  00B6               	movwf	_temperatureThermistor^(0+384)
 15053  17FF  0008               	return
 15054  1800                     __end_of_updateTemperatures:	
 15055                           
 15056                           	psect	text50
 15057  006B                     __ptext50:	
 15058 ;; *************** function _logf *****************
 15059 ;; Defined at:
 15060 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\logf.c"
 15061 ;; Parameters:    Size  Location     Type
 15062 ;;  x               4    8[BANK1 ] float 
 15063 ;; Auto vars:     Size  Location     Type
 15064 ;;  ix              4   62[BANK2 ] unsigned long 
 15065 ;;  f               4   58[BANK2 ] float 
 15066 ;;  u               4   54[BANK2 ] struct .
 15067 ;;  w               4   46[BANK2 ] float 
 15068 ;;  z               4   42[BANK2 ] float 
 15069 ;;  s               4   38[BANK2 ] float 
 15070 ;;  dk              4   34[BANK2 ] float 
 15071 ;;  hfsq            4   30[BANK2 ] float 
 15072 ;;  t2              4    8[BANK2 ] float 
 15073 ;;  t1              4    4[BANK2 ] float 
 15074 ;;  R               4    0[BANK2 ] float 
 15075 ;;  k               2   28[BANK2 ] int 
 15076 ;; Return value:  Size  Location     Type
 15077 ;;                  4    8[BANK1 ] float 
 15078 ;; Registers used:
 15079 ;;		wreg, status,2, status,0, pclath, cstack
 15080 ;; Tracked objects:
 15081 ;;		On entry : 0/0
 15082 ;;		On exit  : 0/0
 15083 ;;		Unchanged: 0/0
 15084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15085 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15086 ;;      Locals:         0       0       0      66       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15087 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15088 ;;      Totals:         0       0      12      66       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15089 ;;Total ram usage:       78 bytes
 15090 ;; Hardware stack levels used:    1
 15091 ;; Hardware stack levels required when called:    3
 15092 ;; This function calls:
 15093 ;;		___fladd
 15094 ;;		___fldiv
 15095 ;;		___flmul
 15096 ;;		___flsub
 15097 ;;		___xxtofl
 15098 ;; This function is called by:
 15099 ;;		_updateTemperatures
 15100 ;; This function uses a non-reentrant model
 15101 ;;
 15102                           
 15103                           
 15104                           ;psect for function _logf
 15105  006B                     _logf:	
 15106                           
 15107                           ;incstack = 0
 15108                           ; Regs used in _logf: [wreg+status,2+status,0+pclath+cstack]
 15109  006B  0023               	movlb	3	; select bank3
 15110  006C  082D               	movf	(logf@F469+3)^(0+384),w
 15111  006D  0022               	movlb	2	; select bank2
 15112  006E  00D9               	movwf	(logf@u+3)^(0+256)
 15113  006F  0023               	movlb	3	; select bank3
 15114  0070  082C               	movf	(logf@F469+2)^(0+384),w
 15115  0071  0022               	movlb	2	; select bank2
 15116  0072  00D8               	movwf	(logf@u+2)^(0+256)
 15117  0073  0023               	movlb	3	; select bank3
 15118  0074  082B               	movf	(logf@F469+1)^(0+384),w
 15119  0075  0022               	movlb	2	; select bank2
 15120  0076  00D7               	movwf	(logf@u+1)^(0+256)
 15121  0077  0023               	movlb	3	; select bank3
 15122  0078  082A               	movf	logf@F469^(0+384),w
 15123  0079  0022               	movlb	2	; select bank2
 15124  007A  00D6               	movwf	logf@u^(0+256)
 15125  007B  0021               	movlb	1	; select bank1
 15126  007C  082B               	movf	(logf@x+3)^(0+128),w
 15127  007D  0022               	movlb	2	; select bank2
 15128  007E  00D9               	movwf	(logf@u+3)^(0+256)
 15129  007F  0021               	movlb	1	; select bank1
 15130  0080  082A               	movf	(logf@x+2)^(0+128),w
 15131  0081  0022               	movlb	2	; select bank2
 15132  0082  00D8               	movwf	(logf@u+2)^(0+256)
 15133  0083  0021               	movlb	1	; select bank1
 15134  0084  0829               	movf	(logf@x+1)^(0+128),w
 15135  0085  0022               	movlb	2	; select bank2
 15136  0086  00D7               	movwf	(logf@u+1)^(0+256)
 15137  0087  0021               	movlb	1	; select bank1
 15138  0088  0828               	movf	logf@x^(0+128),w
 15139  0089  0022               	movlb	2	; select bank2
 15140  008A  00D6               	movwf	logf@u^(0+256)
 15141  008B  0859               	movf	(logf@u+3)^(0+256),w
 15142  008C  00E1               	movwf	(logf@ix+3)^(0+256)
 15143  008D  0858               	movf	(logf@u+2)^(0+256),w
 15144  008E  00E0               	movwf	(logf@ix+2)^(0+256)
 15145  008F  0857               	movf	(logf@u+1)^(0+256),w
 15146  0090  00DF               	movwf	(logf@ix+1)^(0+256)
 15147  0091  0856               	movf	logf@u^(0+256),w
 15148  0092  00DE               	movwf	logf@ix^(0+256)
 15149  0093  01BC               	clrf	logf@k^(0+256)
 15150  0094  01BD               	clrf	(logf@k+1)^(0+256)
 15151  0095  0861               	movf	(logf@ix+3)^(0+256),w
 15152  0096  1D03               	btfss	3,2
 15153  0097  289C               	goto	l7798
 15154  0098  3080               	movlw	128
 15155  0099  0260               	subwf	(logf@ix+2)^(0+256),w
 15156  009A  1C03               	btfss	3,0
 15157  009B  28B8               	goto	l7800
 15158  009C                     l7798:	
 15159  009C  085E               	movf	logf@ix^(0+256),w
 15160  009D  0021               	movlb	1	; select bank1
 15161  009E  00AC               	movwf	??_logf^(0+128)
 15162  009F  0022               	movlb	2	; select bank2
 15163  00A0  085F               	movf	(logf@ix+1)^(0+256),w
 15164  00A1  0021               	movlb	1	; select bank1
 15165  00A2  00AD               	movwf	(??_logf^(0+128)+1)
 15166  00A3  0022               	movlb	2	; select bank2
 15167  00A4  0860               	movf	(logf@ix+2)^(0+256),w
 15168  00A5  0021               	movlb	1	; select bank1
 15169  00A6  00AE               	movwf	(??_logf^(0+128)+2)
 15170  00A7  0022               	movlb	2	; select bank2
 15171  00A8  0861               	movf	(logf@ix+3)^(0+256),w
 15172  00A9  0021               	movlb	1	; select bank1
 15173  00AA  00AF               	movwf	(??_logf^(0+128)+3)
 15174  00AB  301F               	movlw	31
 15175  00AC                     u10695:	
 15176  00AC  36AF               	lsrf	(??_logf^(0+128)+3),f
 15177  00AD  0CAE               	rrf	(??_logf^(0+128)+2),f
 15178  00AE  0CAD               	rrf	(??_logf^(0+128)+1),f
 15179  00AF  0CAC               	rrf	??_logf^(0+128),f
 15180  00B0  0B89               	decfsz	9,f
 15181  00B1  28AC               	goto	u10695
 15182  00B2  082F               	movf	(??_logf+3)^(0+128),w
 15183  00B3  042E               	iorwf	(??_logf+2)^(0+128),w
 15184  00B4  042D               	iorwf	(??_logf+1)^(0+128),w
 15185  00B5  042C               	iorwf	??_logf^(0+128),w
 15186  00B6  1903               	skipnz
 15187  00B7  29C1               	goto	l7820
 15188  00B8                     l7800:	
 15189  00B8  0022               	movlb	2	; select bank2
 15190  00B9  085E               	movf	logf@ix^(0+256),w
 15191  00BA  0021               	movlb	1	; select bank1
 15192  00BB  00AC               	movwf	??_logf^(0+128)
 15193  00BC  0022               	movlb	2	; select bank2
 15194  00BD  085F               	movf	(logf@ix+1)^(0+256),w
 15195  00BE  0021               	movlb	1	; select bank1
 15196  00BF  00AD               	movwf	(??_logf^(0+128)+1)
 15197  00C0  0022               	movlb	2	; select bank2
 15198  00C1  0860               	movf	(logf@ix+2)^(0+256),w
 15199  00C2  0021               	movlb	1	; select bank1
 15200  00C3  00AE               	movwf	(??_logf^(0+128)+2)
 15201  00C4  0022               	movlb	2	; select bank2
 15202  00C5  0861               	movf	(logf@ix+3)^(0+256),w
 15203  00C6  0021               	movlb	1	; select bank1
 15204  00C7  00AF               	movwf	(??_logf^(0+128)+3)
 15205  00C8  3001               	movlw	1
 15206  00C9                     u10715:	
 15207  00C9  35AC               	lslf	??_logf^(0+128),f
 15208  00CA  0DAD               	rlf	(??_logf^(0+128)+1),f
 15209  00CB  0DAE               	rlf	(??_logf^(0+128)+2),f
 15210  00CC  0DAF               	rlf	(??_logf^(0+128)+3),f
 15211  00CD  0B89               	decfsz	9,f
 15212  00CE  28C9               	goto	u10715
 15213  00CF  082F               	movf	(??_logf+3)^(0+128),w
 15214  00D0  042E               	iorwf	(??_logf+2)^(0+128),w
 15215  00D1  042D               	iorwf	(??_logf+1)^(0+128),w
 15216  00D2  042C               	iorwf	??_logf^(0+128),w
 15217  00D3  1D03               	skipz
 15218  00D4  291B               	goto	l7806
 15219  00D5  082B               	movf	(logf@x+3)^(0+128),w
 15220  00D6  0020               	movlb	0	; select bank0
 15221  00D7  00A9               	movwf	___flmul@b+3
 15222  00D8  0021               	movlb	1	; select bank1
 15223  00D9  082A               	movf	(logf@x+2)^(0+128),w
 15224  00DA  0020               	movlb	0	; select bank0
 15225  00DB  00A8               	movwf	___flmul@b+2
 15226  00DC  0021               	movlb	1	; select bank1
 15227  00DD  0829               	movf	(logf@x+1)^(0+128),w
 15228  00DE  0020               	movlb	0	; select bank0
 15229  00DF  00A7               	movwf	___flmul@b+1
 15230  00E0  0021               	movlb	1	; select bank1
 15231  00E1  0828               	movf	logf@x^(0+128),w
 15232  00E2  0020               	movlb	0	; select bank0
 15233  00E3  00A6               	movwf	___flmul@b
 15234  00E4  0021               	movlb	1	; select bank1
 15235  00E5  082B               	movf	(logf@x+3)^(0+128),w
 15236  00E6  0020               	movlb	0	; select bank0
 15237  00E7  00AD               	movwf	___flmul@a+3
 15238  00E8  0021               	movlb	1	; select bank1
 15239  00E9  082A               	movf	(logf@x+2)^(0+128),w
 15240  00EA  0020               	movlb	0	; select bank0
 15241  00EB  00AC               	movwf	___flmul@a+2
 15242  00EC  0021               	movlb	1	; select bank1
 15243  00ED  0829               	movf	(logf@x+1)^(0+128),w
 15244  00EE  0020               	movlb	0	; select bank0
 15245  00EF  00AB               	movwf	___flmul@a+1
 15246  00F0  0021               	movlb	1	; select bank1
 15247  00F1  0828               	movf	logf@x^(0+128),w
 15248  00F2  0020               	movlb	0	; select bank0
 15249  00F3  00AA               	movwf	___flmul@a
 15250  00F4  3190  2023  3180   	fcall	___flmul
 15251  00F7  0020               	movlb	0	; select bank0
 15252  00F8  0829               	movf	?___flmul+3,w
 15253  00F9  00C3               	movwf	___fldiv@a+3
 15254  00FA  0828               	movf	?___flmul+2,w
 15255  00FB  00C2               	movwf	___fldiv@a+2
 15256  00FC  0827               	movf	?___flmul+1,w
 15257  00FD  00C1               	movwf	___fldiv@a+1
 15258  00FE  0826               	movf	?___flmul,w
 15259  00FF  00C0               	movwf	___fldiv@a
 15260  0100  30BF               	movlw	191
 15261  0101  00C7               	movwf	___fldiv@b+3
 15262  0102  3080               	movlw	128
 15263  0103  00C6               	movwf	___fldiv@b+2
 15264  0104  3000               	movlw	0
 15265  0105  00C5               	movwf	___fldiv@b+1
 15266  0106  3000               	movlw	0
 15267  0107  00C4               	movwf	___fldiv@b
 15268  0108  319B  2353         	fcall	___fldiv
 15269  010A  0020               	movlb	0	; select bank0
 15270  010B  0843               	movf	?___fldiv+3,w
 15271  010C  0021               	movlb	1	; select bank1
 15272  010D  00AB               	movwf	(?_logf+3)^(0+128)
 15273  010E  0020               	movlb	0	; select bank0
 15274  010F  0842               	movf	?___fldiv+2,w
 15275  0110  0021               	movlb	1	; select bank1
 15276  0111  00AA               	movwf	(?_logf+2)^(0+128)
 15277  0112  0020               	movlb	0	; select bank0
 15278  0113  0841               	movf	?___fldiv+1,w
 15279  0114  0021               	movlb	1	; select bank1
 15280  0115  00A9               	movwf	(?_logf+1)^(0+128)
 15281  0116  0020               	movlb	0	; select bank0
 15282  0117  0840               	movf	?___fldiv,w
 15283  0118  0021               	movlb	1	; select bank1
 15284  0119  00A8               	movwf	?_logf^(0+128)
 15285  011A  0008               	return
 15286  011B                     l7806:	
 15287  011B  0022               	movlb	2	; select bank2
 15288  011C  085E               	movf	logf@ix^(0+256),w
 15289  011D  0021               	movlb	1	; select bank1
 15290  011E  00AC               	movwf	??_logf^(0+128)
 15291  011F  0022               	movlb	2	; select bank2
 15292  0120  085F               	movf	(logf@ix+1)^(0+256),w
 15293  0121  0021               	movlb	1	; select bank1
 15294  0122  00AD               	movwf	(??_logf^(0+128)+1)
 15295  0123  0022               	movlb	2	; select bank2
 15296  0124  0860               	movf	(logf@ix+2)^(0+256),w
 15297  0125  0021               	movlb	1	; select bank1
 15298  0126  00AE               	movwf	(??_logf^(0+128)+2)
 15299  0127  0022               	movlb	2	; select bank2
 15300  0128  0861               	movf	(logf@ix+3)^(0+256),w
 15301  0129  0021               	movlb	1	; select bank1
 15302  012A  00AF               	movwf	(??_logf^(0+128)+3)
 15303  012B  301F               	movlw	31
 15304  012C                     u10735:	
 15305  012C  36AF               	lsrf	(??_logf^(0+128)+3),f
 15306  012D  0CAE               	rrf	(??_logf^(0+128)+2),f
 15307  012E  0CAD               	rrf	(??_logf^(0+128)+1),f
 15308  012F  0CAC               	rrf	??_logf^(0+128),f
 15309  0130  0B89               	decfsz	9,f
 15310  0131  292C               	goto	u10735
 15311  0132  082F               	movf	(??_logf+3)^(0+128),w
 15312  0133  042E               	iorwf	(??_logf+2)^(0+128),w
 15313  0134  042D               	iorwf	(??_logf+1)^(0+128),w
 15314  0135  042C               	iorwf	??_logf^(0+128),w
 15315  0136  1903               	skipnz
 15316  0137  2978               	goto	l7812
 15317  0138  3000               	movlw	0
 15318  0139  0020               	movlb	0	; select bank0
 15319  013A  00C3               	movwf	___fldiv@a+3
 15320  013B  3000               	movlw	0
 15321  013C  00C2               	movwf	___fldiv@a+2
 15322  013D  3000               	movlw	0
 15323  013E  00C1               	movwf	___fldiv@a+1
 15324  013F  3000               	movlw	0
 15325  0140  00C0               	movwf	___fldiv@a
 15326  0141  0021               	movlb	1	; select bank1
 15327  0142  082B               	movf	(logf@x+3)^(0+128),w
 15328  0143  00A3               	movwf	(___flsub@a+3)^(0+128)
 15329  0144  082A               	movf	(logf@x+2)^(0+128),w
 15330  0145  00A2               	movwf	(___flsub@a+2)^(0+128)
 15331  0146  0829               	movf	(logf@x+1)^(0+128),w
 15332  0147  00A1               	movwf	(___flsub@a+1)^(0+128)
 15333  0148  0828               	movf	logf@x^(0+128),w
 15334  0149  00A0               	movwf	___flsub@a^(0+128)
 15335  014A  082B               	movf	(logf@x+3)^(0+128),w
 15336  014B  00A7               	movwf	(___flsub@b+3)^(0+128)
 15337  014C  082A               	movf	(logf@x+2)^(0+128),w
 15338  014D  00A6               	movwf	(___flsub@b+2)^(0+128)
 15339  014E  0829               	movf	(logf@x+1)^(0+128),w
 15340  014F  00A5               	movwf	(___flsub@b+1)^(0+128)
 15341  0150  0828               	movf	logf@x^(0+128),w
 15342  0151  00A4               	movwf	___flsub@b^(0+128)
 15343  0152  31B6  2640  3180   	fcall	___flsub
 15344  0155  0021               	movlb	1	; select bank1
 15345  0156  0823               	movf	(?___flsub+3)^(0+128),w
 15346  0157  0020               	movlb	0	; select bank0
 15347  0158  00C7               	movwf	___fldiv@b+3
 15348  0159  0021               	movlb	1	; select bank1
 15349  015A  0822               	movf	(?___flsub+2)^(0+128),w
 15350  015B  0020               	movlb	0	; select bank0
 15351  015C  00C6               	movwf	___fldiv@b+2
 15352  015D  0021               	movlb	1	; select bank1
 15353  015E  0821               	movf	(?___flsub+1)^(0+128),w
 15354  015F  0020               	movlb	0	; select bank0
 15355  0160  00C5               	movwf	___fldiv@b+1
 15356  0161  0021               	movlb	1	; select bank1
 15357  0162  0820               	movf	?___flsub^(0+128),w
 15358  0163  0020               	movlb	0	; select bank0
 15359  0164  00C4               	movwf	___fldiv@b
 15360  0165  319B  2353         	fcall	___fldiv
 15361  0167  0020               	movlb	0	; select bank0
 15362  0168  0843               	movf	?___fldiv+3,w
 15363  0169  0021               	movlb	1	; select bank1
 15364  016A  00AB               	movwf	(?_logf+3)^(0+128)
 15365  016B  0020               	movlb	0	; select bank0
 15366  016C  0842               	movf	?___fldiv+2,w
 15367  016D  0021               	movlb	1	; select bank1
 15368  016E  00AA               	movwf	(?_logf+2)^(0+128)
 15369  016F  0020               	movlb	0	; select bank0
 15370  0170  0841               	movf	?___fldiv+1,w
 15371  0171  0021               	movlb	1	; select bank1
 15372  0172  00A9               	movwf	(?_logf+1)^(0+128)
 15373  0173  0020               	movlb	0	; select bank0
 15374  0174  0840               	movf	?___fldiv,w
 15375  0175  0021               	movlb	1	; select bank1
 15376  0176  00A8               	movwf	?_logf^(0+128)
 15377  0177  0008               	return
 15378  0178                     l7812:	
 15379  0178  30E7               	movlw	231
 15380  0179  0022               	movlb	2	; select bank2
 15381  017A  07BC               	addwf	logf@k^(0+256),f
 15382  017B  30FF               	movlw	255
 15383  017C  3DBD               	addwfc	(logf@k+1)^(0+256),f
 15384  017D  304C               	movlw	76
 15385  017E  0020               	movlb	0	; select bank0
 15386  017F  00A9               	movwf	___flmul@b+3
 15387  0180  3000               	movlw	0
 15388  0181  00A8               	movwf	___flmul@b+2
 15389  0182  3000               	movlw	0
 15390  0183  00A7               	movwf	___flmul@b+1
 15391  0184  3000               	movlw	0
 15392  0185  00A6               	movwf	___flmul@b
 15393  0186  0021               	movlb	1	; select bank1
 15394  0187  082B               	movf	(logf@x+3)^(0+128),w
 15395  0188  0020               	movlb	0	; select bank0
 15396  0189  00AD               	movwf	___flmul@a+3
 15397  018A  0021               	movlb	1	; select bank1
 15398  018B  082A               	movf	(logf@x+2)^(0+128),w
 15399  018C  0020               	movlb	0	; select bank0
 15400  018D  00AC               	movwf	___flmul@a+2
 15401  018E  0021               	movlb	1	; select bank1
 15402  018F  0829               	movf	(logf@x+1)^(0+128),w
 15403  0190  0020               	movlb	0	; select bank0
 15404  0191  00AB               	movwf	___flmul@a+1
 15405  0192  0021               	movlb	1	; select bank1
 15406  0193  0828               	movf	logf@x^(0+128),w
 15407  0194  0020               	movlb	0	; select bank0
 15408  0195  00AA               	movwf	___flmul@a
 15409  0196  3190  2023  3180   	fcall	___flmul
 15410  0199  0020               	movlb	0	; select bank0
 15411  019A  0829               	movf	?___flmul+3,w
 15412  019B  0021               	movlb	1	; select bank1
 15413  019C  00AB               	movwf	(logf@x+3)^(0+128)
 15414  019D  0020               	movlb	0	; select bank0
 15415  019E  0828               	movf	?___flmul+2,w
 15416  019F  0021               	movlb	1	; select bank1
 15417  01A0  00AA               	movwf	(logf@x+2)^(0+128)
 15418  01A1  0020               	movlb	0	; select bank0
 15419  01A2  0827               	movf	?___flmul+1,w
 15420  01A3  0021               	movlb	1	; select bank1
 15421  01A4  00A9               	movwf	(logf@x+1)^(0+128)
 15422  01A5  0020               	movlb	0	; select bank0
 15423  01A6  0826               	movf	?___flmul,w
 15424  01A7  0021               	movlb	1	; select bank1
 15425  01A8  00A8               	movwf	logf@x^(0+128)
 15426  01A9  082B               	movf	(logf@x+3)^(0+128),w
 15427  01AA  0022               	movlb	2	; select bank2
 15428  01AB  00D9               	movwf	(logf@u+3)^(0+256)
 15429  01AC  0021               	movlb	1	; select bank1
 15430  01AD  082A               	movf	(logf@x+2)^(0+128),w
 15431  01AE  0022               	movlb	2	; select bank2
 15432  01AF  00D8               	movwf	(logf@u+2)^(0+256)
 15433  01B0  0021               	movlb	1	; select bank1
 15434  01B1  0829               	movf	(logf@x+1)^(0+128),w
 15435  01B2  0022               	movlb	2	; select bank2
 15436  01B3  00D7               	movwf	(logf@u+1)^(0+256)
 15437  01B4  0021               	movlb	1	; select bank1
 15438  01B5  0828               	movf	logf@x^(0+128),w
 15439  01B6  0022               	movlb	2	; select bank2
 15440  01B7  00D6               	movwf	logf@u^(0+256)
 15441  01B8  0859               	movf	(logf@u+3)^(0+256),w
 15442  01B9  00E1               	movwf	(logf@ix+3)^(0+256)
 15443  01BA  0858               	movf	(logf@u+2)^(0+256),w
 15444  01BB  00E0               	movwf	(logf@ix+2)^(0+256)
 15445  01BC  0857               	movf	(logf@u+1)^(0+256),w
 15446  01BD  00DF               	movwf	(logf@ix+1)^(0+256)
 15447  01BE  0856               	movf	logf@u^(0+256),w
 15448  01BF  00DE               	movwf	logf@ix^(0+256)
 15449  01C0  29DB               	goto	l7832
 15450  01C1                     l7820:	
 15451  01C1  3080               	movlw	128
 15452  01C2  0022               	movlb	2	; select bank2
 15453  01C3  0260               	subwf	(logf@ix+2)^(0+256),w
 15454  01C4  307F               	movlw	127
 15455  01C5  3B61               	subwfb	(logf@ix+3)^(0+256),w
 15456  01C6  1803               	btfsc	3,0
 15457  01C7  0008               	return
 15458  01C8  3080               	movlw	128
 15459  01C9  0660               	xorwf	(logf@ix+2)^(0+256),w
 15460  01CA  303F               	movlw	63
 15461  01CB  1903               	skipnz
 15462  01CC  0661               	xorwf	(logf@ix+3)^(0+256),w
 15463  01CD  045E               	iorwf	logf@ix^(0+256),w
 15464  01CE  045F               	iorwf	(logf@ix+1)^(0+256),w
 15465  01CF  1D03               	btfss	3,2
 15466  01D0  29DB               	goto	l7832
 15467  01D1  3000               	movlw	0
 15468  01D2  0021               	movlb	1	; select bank1
 15469  01D3  00AB               	movwf	(?_logf+3)^(0+128)
 15470  01D4  3000               	movlw	0
 15471  01D5  00AA               	movwf	(?_logf+2)^(0+128)
 15472  01D6  3000               	movlw	0
 15473  01D7  00A9               	movwf	(?_logf+1)^(0+128)
 15474  01D8  3000               	movlw	0
 15475  01D9  00A8               	movwf	?_logf^(0+128)
 15476  01DA  0008               	return
 15477  01DB                     l7832:	
 15478  01DB  300D               	movlw	13
 15479  01DC  07DE               	addwf	logf@ix^(0+256),f
 15480  01DD  30FB               	movlw	251
 15481  01DE  3DDF               	addwfc	(logf@ix+1)^(0+256),f
 15482  01DF  304A               	movlw	74
 15483  01E0  3DE0               	addwfc	(logf@ix+2)^(0+256),f
 15484  01E1  3000               	movlw	0
 15485  01E2  3DE1               	addwfc	(logf@ix+3)^(0+256),f
 15486  01E3  085E               	movf	logf@ix^(0+256),w
 15487  01E4  0021               	movlb	1	; select bank1
 15488  01E5  00AC               	movwf	??_logf^(0+128)
 15489  01E6  0022               	movlb	2	; select bank2
 15490  01E7  085F               	movf	(logf@ix+1)^(0+256),w
 15491  01E8  0021               	movlb	1	; select bank1
 15492  01E9  00AD               	movwf	(??_logf^(0+128)+1)
 15493  01EA  0022               	movlb	2	; select bank2
 15494  01EB  0860               	movf	(logf@ix+2)^(0+256),w
 15495  01EC  0021               	movlb	1	; select bank1
 15496  01ED  00AE               	movwf	(??_logf^(0+128)+2)
 15497  01EE  0022               	movlb	2	; select bank2
 15498  01EF  0861               	movf	(logf@ix+3)^(0+256),w
 15499  01F0  0021               	movlb	1	; select bank1
 15500  01F1  00AF               	movwf	(??_logf^(0+128)+3)
 15501  01F2  3017               	movlw	23
 15502  01F3                     u10775:	
 15503  01F3  36AF               	lsrf	(??_logf^(0+128)+3),f
 15504  01F4  0CAE               	rrf	(??_logf^(0+128)+2),f
 15505  01F5  0CAD               	rrf	(??_logf^(0+128)+1),f
 15506  01F6  0CAC               	rrf	??_logf^(0+128),f
 15507  01F7  0B89               	decfsz	9,f
 15508  01F8  29F3               	goto	u10775
 15509  01F9  082C               	movf	??_logf^(0+128),w
 15510  01FA  3E81               	addlw	129
 15511  01FB  00B0               	movwf	(??_logf+4)^(0+128)
 15512  01FC  30FF               	movlw	255
 15513  01FD  3D2D               	addwfc	(??_logf+1)^(0+128),w
 15514  01FE  00B1               	movwf	(??_logf+5)^(0+128)
 15515  01FF  0830               	movf	(??_logf+4)^(0+128),w
 15516  0200  0022               	movlb	2	; select bank2
 15517  0201  07BC               	addwf	logf@k^(0+256),f
 15518  0202  0021               	movlb	1	; select bank1
 15519  0203  0831               	movf	(??_logf+5)^(0+128),w
 15520  0204  0022               	movlb	2	; select bank2
 15521  0205  3DBD               	addwfc	(logf@k+1)^(0+256),f
 15522  0206  30F3               	movlw	243
 15523  0207  0021               	movlb	1	; select bank1
 15524  0208  00AC               	movwf	??_logf^(0+128)
 15525  0209  3004               	movlw	4
 15526  020A  00AD               	movwf	(??_logf^(0+128)+1)
 15527  020B  3035               	movlw	53
 15528  020C  00AE               	movwf	(??_logf^(0+128)+2)
 15529  020D  303F               	movlw	63
 15530  020E  00AF               	movwf	(??_logf^(0+128)+3)
 15531  020F  30FF               	movlw	255
 15532  0210  0022               	movlb	2	; select bank2
 15533  0211  055E               	andwf	logf@ix^(0+256),w
 15534  0212  0021               	movlb	1	; select bank1
 15535  0213  00B0               	movwf	(??_logf+4)^(0+128)
 15536  0214  30FF               	movlw	255
 15537  0215  0022               	movlb	2	; select bank2
 15538  0216  055F               	andwf	(logf@ix+1)^(0+256),w
 15539  0217  0021               	movlb	1	; select bank1
 15540  0218  00B1               	movwf	((??_logf+4)^(0+128)+1)
 15541  0219  307F               	movlw	127
 15542  021A  0022               	movlb	2	; select bank2
 15543  021B  0560               	andwf	(logf@ix+2)^(0+256),w
 15544  021C  0021               	movlb	1	; select bank1
 15545  021D  00B2               	movwf	((??_logf+4)^(0+128)+2)
 15546  021E  3000               	movlw	0
 15547  021F  0022               	movlb	2	; select bank2
 15548  0220  0561               	andwf	(logf@ix+3)^(0+256),w
 15549  0221  0021               	movlb	1	; select bank1
 15550  0222  00B3               	movwf	((??_logf+4)^(0+128)+3)
 15551  0223  0830               	movf	(??_logf+4)^(0+128),w
 15552  0224  07AC               	addwf	??_logf^(0+128),f
 15553  0225  0831               	movf	(??_logf+5)^(0+128),w
 15554  0226  3DAD               	addwfc	(??_logf^(0+128)+1),f
 15555  0227  0832               	movf	(??_logf+6)^(0+128),w
 15556  0228  3DAE               	addwfc	(??_logf^(0+128)+2),f
 15557  0229  0833               	movf	(??_logf+7)^(0+128),w
 15558  022A  3DAF               	addwfc	(??_logf^(0+128)+3),f
 15559  022B  082F               	movf	(??_logf+3)^(0+128),w
 15560  022C  0022               	movlb	2	; select bank2
 15561  022D  00E1               	movwf	(logf@ix+3)^(0+256)
 15562  022E  0021               	movlb	1	; select bank1
 15563  022F  082E               	movf	(??_logf+2)^(0+128),w
 15564  0230  0022               	movlb	2	; select bank2
 15565  0231  00E0               	movwf	(logf@ix+2)^(0+256)
 15566  0232  0021               	movlb	1	; select bank1
 15567  0233  082D               	movf	(??_logf+1)^(0+128),w
 15568  0234  0022               	movlb	2	; select bank2
 15569  0235  00DF               	movwf	(logf@ix+1)^(0+256)
 15570  0236  0021               	movlb	1	; select bank1
 15571  0237  082C               	movf	??_logf^(0+128),w
 15572  0238  0022               	movlb	2	; select bank2
 15573  0239  00DE               	movwf	logf@ix^(0+256)
 15574  023A  0861               	movf	(logf@ix+3)^(0+256),w
 15575  023B  00D9               	movwf	(logf@u+3)^(0+256)
 15576  023C  0860               	movf	(logf@ix+2)^(0+256),w
 15577  023D  00D8               	movwf	(logf@u+2)^(0+256)
 15578  023E  085F               	movf	(logf@ix+1)^(0+256),w
 15579  023F  00D7               	movwf	(logf@u+1)^(0+256)
 15580  0240  085E               	movf	logf@ix^(0+256),w
 15581  0241  00D6               	movwf	logf@u^(0+256)
 15582  0242  0859               	movf	(logf@u+3)^(0+256),w
 15583  0243  0021               	movlb	1	; select bank1
 15584  0244  00AB               	movwf	(logf@x+3)^(0+128)
 15585  0245  0022               	movlb	2	; select bank2
 15586  0246  0858               	movf	(logf@u+2)^(0+256),w
 15587  0247  0021               	movlb	1	; select bank1
 15588  0248  00AA               	movwf	(logf@x+2)^(0+128)
 15589  0249  0022               	movlb	2	; select bank2
 15590  024A  0857               	movf	(logf@u+1)^(0+256),w
 15591  024B  0021               	movlb	1	; select bank1
 15592  024C  00A9               	movwf	(logf@x+1)^(0+128)
 15593  024D  0022               	movlb	2	; select bank2
 15594  024E  0856               	movf	logf@u^(0+256),w
 15595  024F  0021               	movlb	1	; select bank1
 15596  0250  00A8               	movwf	logf@x^(0+128)
 15597  0251  30BF               	movlw	191
 15598  0252  0020               	movlb	0	; select bank0
 15599  0253  00DD               	movwf	___fladd@b+3
 15600  0254  3080               	movlw	128
 15601  0255  00DC               	movwf	___fladd@b+2
 15602  0256  3000               	movlw	0
 15603  0257  00DB               	movwf	___fladd@b+1
 15604  0258  3000               	movlw	0
 15605  0259  00DA               	movwf	___fladd@b
 15606  025A  0021               	movlb	1	; select bank1
 15607  025B  082B               	movf	(logf@x+3)^(0+128),w
 15608  025C  0020               	movlb	0	; select bank0
 15609  025D  00E1               	movwf	___fladd@a+3
 15610  025E  0021               	movlb	1	; select bank1
 15611  025F  082A               	movf	(logf@x+2)^(0+128),w
 15612  0260  0020               	movlb	0	; select bank0
 15613  0261  00E0               	movwf	___fladd@a+2
 15614  0262  0021               	movlb	1	; select bank1
 15615  0263  0829               	movf	(logf@x+1)^(0+128),w
 15616  0264  0020               	movlb	0	; select bank0
 15617  0265  00DF               	movwf	___fladd@a+1
 15618  0266  0021               	movlb	1	; select bank1
 15619  0267  0828               	movf	logf@x^(0+128),w
 15620  0268  0020               	movlb	0	; select bank0
 15621  0269  00DE               	movwf	___fladd@a
 15622  026A  3185  25F5  3180   	fcall	___fladd
 15623  026D  0020               	movlb	0	; select bank0
 15624  026E  085D               	movf	?___fladd+3,w
 15625  026F  0022               	movlb	2	; select bank2
 15626  0270  00DD               	movwf	(logf@f+3)^(0+256)
 15627  0271  0020               	movlb	0	; select bank0
 15628  0272  085C               	movf	?___fladd+2,w
 15629  0273  0022               	movlb	2	; select bank2
 15630  0274  00DC               	movwf	(logf@f+2)^(0+256)
 15631  0275  0020               	movlb	0	; select bank0
 15632  0276  085B               	movf	?___fladd+1,w
 15633  0277  0022               	movlb	2	; select bank2
 15634  0278  00DB               	movwf	(logf@f+1)^(0+256)
 15635  0279  0020               	movlb	0	; select bank0
 15636  027A  085A               	movf	?___fladd,w
 15637  027B  0022               	movlb	2	; select bank2
 15638  027C  00DA               	movwf	logf@f^(0+256)
 15639  027D  3040               	movlw	64
 15640  027E  0020               	movlb	0	; select bank0
 15641  027F  00DD               	movwf	___fladd@b+3
 15642  0280  3000               	movlw	0
 15643  0281  00DC               	movwf	___fladd@b+2
 15644  0282  3000               	movlw	0
 15645  0283  00DB               	movwf	___fladd@b+1
 15646  0284  3000               	movlw	0
 15647  0285  00DA               	movwf	___fladd@b
 15648  0286  0022               	movlb	2	; select bank2
 15649  0287  085D               	movf	(logf@f+3)^(0+256),w
 15650  0288  0020               	movlb	0	; select bank0
 15651  0289  00E1               	movwf	___fladd@a+3
 15652  028A  0022               	movlb	2	; select bank2
 15653  028B  085C               	movf	(logf@f+2)^(0+256),w
 15654  028C  0020               	movlb	0	; select bank0
 15655  028D  00E0               	movwf	___fladd@a+2
 15656  028E  0022               	movlb	2	; select bank2
 15657  028F  085B               	movf	(logf@f+1)^(0+256),w
 15658  0290  0020               	movlb	0	; select bank0
 15659  0291  00DF               	movwf	___fladd@a+1
 15660  0292  0022               	movlb	2	; select bank2
 15661  0293  085A               	movf	logf@f^(0+256),w
 15662  0294  0020               	movlb	0	; select bank0
 15663  0295  00DE               	movwf	___fladd@a
 15664  0296  3185  25F5  3180   	fcall	___fladd
 15665  0299  0020               	movlb	0	; select bank0
 15666  029A  085D               	movf	?___fladd+3,w
 15667  029B  00C3               	movwf	___fldiv@a+3
 15668  029C  085C               	movf	?___fladd+2,w
 15669  029D  00C2               	movwf	___fldiv@a+2
 15670  029E  085B               	movf	?___fladd+1,w
 15671  029F  00C1               	movwf	___fldiv@a+1
 15672  02A0  085A               	movf	?___fladd,w
 15673  02A1  00C0               	movwf	___fldiv@a
 15674  02A2  0022               	movlb	2	; select bank2
 15675  02A3  085D               	movf	(logf@f+3)^(0+256),w
 15676  02A4  0020               	movlb	0	; select bank0
 15677  02A5  00C7               	movwf	___fldiv@b+3
 15678  02A6  0022               	movlb	2	; select bank2
 15679  02A7  085C               	movf	(logf@f+2)^(0+256),w
 15680  02A8  0020               	movlb	0	; select bank0
 15681  02A9  00C6               	movwf	___fldiv@b+2
 15682  02AA  0022               	movlb	2	; select bank2
 15683  02AB  085B               	movf	(logf@f+1)^(0+256),w
 15684  02AC  0020               	movlb	0	; select bank0
 15685  02AD  00C5               	movwf	___fldiv@b+1
 15686  02AE  0022               	movlb	2	; select bank2
 15687  02AF  085A               	movf	logf@f^(0+256),w
 15688  02B0  0020               	movlb	0	; select bank0
 15689  02B1  00C4               	movwf	___fldiv@b
 15690  02B2  319B  2353  3180   	fcall	___fldiv
 15691  02B5  0020               	movlb	0	; select bank0
 15692  02B6  0843               	movf	?___fldiv+3,w
 15693  02B7  0022               	movlb	2	; select bank2
 15694  02B8  00C9               	movwf	(logf@s+3)^(0+256)
 15695  02B9  0020               	movlb	0	; select bank0
 15696  02BA  0842               	movf	?___fldiv+2,w
 15697  02BB  0022               	movlb	2	; select bank2
 15698  02BC  00C8               	movwf	(logf@s+2)^(0+256)
 15699  02BD  0020               	movlb	0	; select bank0
 15700  02BE  0841               	movf	?___fldiv+1,w
 15701  02BF  0022               	movlb	2	; select bank2
 15702  02C0  00C7               	movwf	(logf@s+1)^(0+256)
 15703  02C1  0020               	movlb	0	; select bank0
 15704  02C2  0840               	movf	?___fldiv,w
 15705  02C3  0022               	movlb	2	; select bank2
 15706  02C4  00C6               	movwf	logf@s^(0+256)
 15707  02C5  0849               	movf	(logf@s+3)^(0+256),w
 15708  02C6  0020               	movlb	0	; select bank0
 15709  02C7  00A9               	movwf	___flmul@b+3
 15710  02C8  0022               	movlb	2	; select bank2
 15711  02C9  0848               	movf	(logf@s+2)^(0+256),w
 15712  02CA  0020               	movlb	0	; select bank0
 15713  02CB  00A8               	movwf	___flmul@b+2
 15714  02CC  0022               	movlb	2	; select bank2
 15715  02CD  0847               	movf	(logf@s+1)^(0+256),w
 15716  02CE  0020               	movlb	0	; select bank0
 15717  02CF  00A7               	movwf	___flmul@b+1
 15718  02D0  0022               	movlb	2	; select bank2
 15719  02D1  0846               	movf	logf@s^(0+256),w
 15720  02D2  0020               	movlb	0	; select bank0
 15721  02D3  00A6               	movwf	___flmul@b
 15722  02D4  0022               	movlb	2	; select bank2
 15723  02D5  0849               	movf	(logf@s+3)^(0+256),w
 15724  02D6  0020               	movlb	0	; select bank0
 15725  02D7  00AD               	movwf	___flmul@a+3
 15726  02D8  0022               	movlb	2	; select bank2
 15727  02D9  0848               	movf	(logf@s+2)^(0+256),w
 15728  02DA  0020               	movlb	0	; select bank0
 15729  02DB  00AC               	movwf	___flmul@a+2
 15730  02DC  0022               	movlb	2	; select bank2
 15731  02DD  0847               	movf	(logf@s+1)^(0+256),w
 15732  02DE  0020               	movlb	0	; select bank0
 15733  02DF  00AB               	movwf	___flmul@a+1
 15734  02E0  0022               	movlb	2	; select bank2
 15735  02E1  0846               	movf	logf@s^(0+256),w
 15736  02E2  0020               	movlb	0	; select bank0
 15737  02E3  00AA               	movwf	___flmul@a
 15738  02E4  3190  2023  3180   	fcall	___flmul
 15739  02E7  0020               	movlb	0	; select bank0
 15740  02E8  0829               	movf	?___flmul+3,w
 15741  02E9  0022               	movlb	2	; select bank2
 15742  02EA  00CD               	movwf	(logf@z+3)^(0+256)
 15743  02EB  0020               	movlb	0	; select bank0
 15744  02EC  0828               	movf	?___flmul+2,w
 15745  02ED  0022               	movlb	2	; select bank2
 15746  02EE  00CC               	movwf	(logf@z+2)^(0+256)
 15747  02EF  0020               	movlb	0	; select bank0
 15748  02F0  0827               	movf	?___flmul+1,w
 15749  02F1  0022               	movlb	2	; select bank2
 15750  02F2  00CB               	movwf	(logf@z+1)^(0+256)
 15751  02F3  0020               	movlb	0	; select bank0
 15752  02F4  0826               	movf	?___flmul,w
 15753  02F5  0022               	movlb	2	; select bank2
 15754  02F6  00CA               	movwf	logf@z^(0+256)
 15755  02F7  084D               	movf	(logf@z+3)^(0+256),w
 15756  02F8  0020               	movlb	0	; select bank0
 15757  02F9  00A9               	movwf	___flmul@b+3
 15758  02FA  0022               	movlb	2	; select bank2
 15759  02FB  084C               	movf	(logf@z+2)^(0+256),w
 15760  02FC  0020               	movlb	0	; select bank0
 15761  02FD  00A8               	movwf	___flmul@b+2
 15762  02FE  0022               	movlb	2	; select bank2
 15763  02FF  084B               	movf	(logf@z+1)^(0+256),w
 15764  0300  0020               	movlb	0	; select bank0
 15765  0301  00A7               	movwf	___flmul@b+1
 15766  0302  0022               	movlb	2	; select bank2
 15767  0303  084A               	movf	logf@z^(0+256),w
 15768  0304  0020               	movlb	0	; select bank0
 15769  0305  00A6               	movwf	___flmul@b
 15770  0306  0022               	movlb	2	; select bank2
 15771  0307  084D               	movf	(logf@z+3)^(0+256),w
 15772  0308  0020               	movlb	0	; select bank0
 15773  0309  00AD               	movwf	___flmul@a+3
 15774  030A  0022               	movlb	2	; select bank2
 15775  030B  084C               	movf	(logf@z+2)^(0+256),w
 15776  030C  0020               	movlb	0	; select bank0
 15777  030D  00AC               	movwf	___flmul@a+2
 15778  030E  0022               	movlb	2	; select bank2
 15779  030F  084B               	movf	(logf@z+1)^(0+256),w
 15780  0310  0020               	movlb	0	; select bank0
 15781  0311  00AB               	movwf	___flmul@a+1
 15782  0312  0022               	movlb	2	; select bank2
 15783  0313  084A               	movf	logf@z^(0+256),w
 15784  0314  0020               	movlb	0	; select bank0
 15785  0315  00AA               	movwf	___flmul@a
 15786  0316  3190  2023  3180   	fcall	___flmul
 15787  0319  0020               	movlb	0	; select bank0
 15788  031A  0829               	movf	?___flmul+3,w
 15789  031B  0022               	movlb	2	; select bank2
 15790  031C  00D1               	movwf	(logf@w+3)^(0+256)
 15791  031D  0020               	movlb	0	; select bank0
 15792  031E  0828               	movf	?___flmul+2,w
 15793  031F  0022               	movlb	2	; select bank2
 15794  0320  00D0               	movwf	(logf@w+2)^(0+256)
 15795  0321  0020               	movlb	0	; select bank0
 15796  0322  0827               	movf	?___flmul+1,w
 15797  0323  0022               	movlb	2	; select bank2
 15798  0324  00CF               	movwf	(logf@w+1)^(0+256)
 15799  0325  0020               	movlb	0	; select bank0
 15800  0326  0826               	movf	?___flmul,w
 15801  0327  0022               	movlb	2	; select bank2
 15802  0328  00CE               	movwf	logf@w^(0+256)
 15803  0329  303E               	movlw	62
 15804  032A  0020               	movlb	0	; select bank0
 15805  032B  00DD               	movwf	___fladd@b+3
 15806  032C  30CC               	movlw	204
 15807  032D  00DC               	movwf	___fladd@b+2
 15808  032E  30CE               	movlw	206
 15809  032F  00DB               	movwf	___fladd@b+1
 15810  0330  3013               	movlw	19
 15811  0331  00DA               	movwf	___fladd@b
 15812  0332  303E               	movlw	62
 15813  0333  00A9               	movwf	___flmul@b+3
 15814  0334  3078               	movlw	120
 15815  0335  00A8               	movwf	___flmul@b+2
 15816  0336  309E               	movlw	158
 15817  0337  00A7               	movwf	___flmul@b+1
 15818  0338  3026               	movlw	38
 15819  0339  00A6               	movwf	___flmul@b
 15820  033A  0022               	movlb	2	; select bank2
 15821  033B  0851               	movf	(logf@w+3)^(0+256),w
 15822  033C  0020               	movlb	0	; select bank0
 15823  033D  00AD               	movwf	___flmul@a+3
 15824  033E  0022               	movlb	2	; select bank2
 15825  033F  0850               	movf	(logf@w+2)^(0+256),w
 15826  0340  0020               	movlb	0	; select bank0
 15827  0341  00AC               	movwf	___flmul@a+2
 15828  0342  0022               	movlb	2	; select bank2
 15829  0343  084F               	movf	(logf@w+1)^(0+256),w
 15830  0344  0020               	movlb	0	; select bank0
 15831  0345  00AB               	movwf	___flmul@a+1
 15832  0346  0022               	movlb	2	; select bank2
 15833  0347  084E               	movf	logf@w^(0+256),w
 15834  0348  0020               	movlb	0	; select bank0
 15835  0349  00AA               	movwf	___flmul@a
 15836  034A  3190  2023  3180   	fcall	___flmul
 15837  034D  0020               	movlb	0	; select bank0
 15838  034E  0829               	movf	?___flmul+3,w
 15839  034F  00E1               	movwf	___fladd@a+3
 15840  0350  0828               	movf	?___flmul+2,w
 15841  0351  00E0               	movwf	___fladd@a+2
 15842  0352  0827               	movf	?___flmul+1,w
 15843  0353  00DF               	movwf	___fladd@a+1
 15844  0354  0826               	movf	?___flmul,w
 15845  0355  00DE               	movwf	___fladd@a
 15846  0356  3185  25F5  3180   	fcall	___fladd
 15847  0359  0020               	movlb	0	; select bank0
 15848  035A  085D               	movf	?___fladd+3,w
 15849  035B  0022               	movlb	2	; select bank2
 15850  035C  00D5               	movwf	(_logf$2047+3)^(0+256)
 15851  035D  0020               	movlb	0	; select bank0
 15852  035E  085C               	movf	?___fladd+2,w
 15853  035F  0022               	movlb	2	; select bank2
 15854  0360  00D4               	movwf	(_logf$2047+2)^(0+256)
 15855  0361  0020               	movlb	0	; select bank0
 15856  0362  085B               	movf	?___fladd+1,w
 15857  0363  0022               	movlb	2	; select bank2
 15858  0364  00D3               	movwf	(_logf$2047+1)^(0+256)
 15859  0365  0020               	movlb	0	; select bank0
 15860  0366  085A               	movf	?___fladd,w
 15861  0367  0022               	movlb	2	; select bank2
 15862  0368  00D2               	movwf	_logf$2047^(0+256)
 15863  0369  0851               	movf	(logf@w+3)^(0+256),w
 15864  036A  0020               	movlb	0	; select bank0
 15865  036B  00A9               	movwf	___flmul@b+3
 15866  036C  0022               	movlb	2	; select bank2
 15867  036D  0850               	movf	(logf@w+2)^(0+256),w
 15868  036E  0020               	movlb	0	; select bank0
 15869  036F  00A8               	movwf	___flmul@b+2
 15870  0370  0022               	movlb	2	; select bank2
 15871  0371  084F               	movf	(logf@w+1)^(0+256),w
 15872  0372  0020               	movlb	0	; select bank0
 15873  0373  00A7               	movwf	___flmul@b+1
 15874  0374  0022               	movlb	2	; select bank2
 15875  0375  084E               	movf	logf@w^(0+256),w
 15876  0376  0020               	movlb	0	; select bank0
 15877  0377  00A6               	movwf	___flmul@b
 15878  0378  0022               	movlb	2	; select bank2
 15879  0379  0855               	movf	(_logf$2047+3)^(0+256),w
 15880  037A  0020               	movlb	0	; select bank0
 15881  037B  00AD               	movwf	___flmul@a+3
 15882  037C  0022               	movlb	2	; select bank2
 15883  037D  0854               	movf	(_logf$2047+2)^(0+256),w
 15884  037E  0020               	movlb	0	; select bank0
 15885  037F  00AC               	movwf	___flmul@a+2
 15886  0380  0022               	movlb	2	; select bank2
 15887  0381  0853               	movf	(_logf$2047+1)^(0+256),w
 15888  0382  0020               	movlb	0	; select bank0
 15889  0383  00AB               	movwf	___flmul@a+1
 15890  0384  0022               	movlb	2	; select bank2
 15891  0385  0852               	movf	_logf$2047^(0+256),w
 15892  0386  0020               	movlb	0	; select bank0
 15893  0387  00AA               	movwf	___flmul@a
 15894  0388  3190  2023  3180   	fcall	___flmul
 15895  038B  0020               	movlb	0	; select bank0
 15896  038C  0829               	movf	?___flmul+3,w
 15897  038D  0022               	movlb	2	; select bank2
 15898  038E  00A7               	movwf	(logf@t1+3)^(0+256)
 15899  038F  0020               	movlb	0	; select bank0
 15900  0390  0828               	movf	?___flmul+2,w
 15901  0391  0022               	movlb	2	; select bank2
 15902  0392  00A6               	movwf	(logf@t1+2)^(0+256)
 15903  0393  0020               	movlb	0	; select bank0
 15904  0394  0827               	movf	?___flmul+1,w
 15905  0395  0022               	movlb	2	; select bank2
 15906  0396  00A5               	movwf	(logf@t1+1)^(0+256)
 15907  0397  0020               	movlb	0	; select bank0
 15908  0398  0826               	movf	?___flmul,w
 15909  0399  0022               	movlb	2	; select bank2
 15910  039A  00A4               	movwf	logf@t1^(0+256)
 15911  039B  303F               	movlw	63
 15912  039C  0020               	movlb	0	; select bank0
 15913  039D  00DD               	movwf	___fladd@b+3
 15914  039E  302A               	movlw	42
 15915  039F  00DC               	movwf	___fladd@b+2
 15916  03A0  30AA               	movlw	170
 15917  03A1  00DB               	movwf	___fladd@b+1
 15918  03A2  30AA               	movlw	170
 15919  03A3  00DA               	movwf	___fladd@b
 15920  03A4  303E               	movlw	62
 15921  03A5  00A9               	movwf	___flmul@b+3
 15922  03A6  3091               	movlw	145
 15923  03A7  00A8               	movwf	___flmul@b+2
 15924  03A8  30E9               	movlw	233
 15925  03A9  00A7               	movwf	___flmul@b+1
 15926  03AA  30EE               	movlw	238
 15927  03AB  00A6               	movwf	___flmul@b
 15928  03AC  0022               	movlb	2	; select bank2
 15929  03AD  0851               	movf	(logf@w+3)^(0+256),w
 15930  03AE  0020               	movlb	0	; select bank0
 15931  03AF  00AD               	movwf	___flmul@a+3
 15932  03B0  0022               	movlb	2	; select bank2
 15933  03B1  0850               	movf	(logf@w+2)^(0+256),w
 15934  03B2  0020               	movlb	0	; select bank0
 15935  03B3  00AC               	movwf	___flmul@a+2
 15936  03B4  0022               	movlb	2	; select bank2
 15937  03B5  084F               	movf	(logf@w+1)^(0+256),w
 15938  03B6  0020               	movlb	0	; select bank0
 15939  03B7  00AB               	movwf	___flmul@a+1
 15940  03B8  0022               	movlb	2	; select bank2
 15941  03B9  084E               	movf	logf@w^(0+256),w
 15942  03BA  0020               	movlb	0	; select bank0
 15943  03BB  00AA               	movwf	___flmul@a
 15944  03BC  3190  2023  3180   	fcall	___flmul
 15945  03BF  0020               	movlb	0	; select bank0
 15946  03C0  0829               	movf	?___flmul+3,w
 15947  03C1  00E1               	movwf	___fladd@a+3
 15948  03C2  0828               	movf	?___flmul+2,w
 15949  03C3  00E0               	movwf	___fladd@a+2
 15950  03C4  0827               	movf	?___flmul+1,w
 15951  03C5  00DF               	movwf	___fladd@a+1
 15952  03C6  0826               	movf	?___flmul,w
 15953  03C7  00DE               	movwf	___fladd@a
 15954  03C8  3185  25F5  3180   	fcall	___fladd
 15955  03CB  0020               	movlb	0	; select bank0
 15956  03CC  085D               	movf	?___fladd+3,w
 15957  03CD  0022               	movlb	2	; select bank2
 15958  03CE  00D5               	movwf	(_logf$2047+3)^(0+256)
 15959  03CF  0020               	movlb	0	; select bank0
 15960  03D0  085C               	movf	?___fladd+2,w
 15961  03D1  0022               	movlb	2	; select bank2
 15962  03D2  00D4               	movwf	(_logf$2047+2)^(0+256)
 15963  03D3  0020               	movlb	0	; select bank0
 15964  03D4  085B               	movf	?___fladd+1,w
 15965  03D5  0022               	movlb	2	; select bank2
 15966  03D6  00D3               	movwf	(_logf$2047+1)^(0+256)
 15967  03D7  0020               	movlb	0	; select bank0
 15968  03D8  085A               	movf	?___fladd,w
 15969  03D9  0022               	movlb	2	; select bank2
 15970  03DA  00D2               	movwf	_logf$2047^(0+256)
 15971  03DB  084D               	movf	(logf@z+3)^(0+256),w
 15972  03DC  0020               	movlb	0	; select bank0
 15973  03DD  00A9               	movwf	___flmul@b+3
 15974  03DE  0022               	movlb	2	; select bank2
 15975  03DF  084C               	movf	(logf@z+2)^(0+256),w
 15976  03E0  0020               	movlb	0	; select bank0
 15977  03E1  00A8               	movwf	___flmul@b+2
 15978  03E2  0022               	movlb	2	; select bank2
 15979  03E3  084B               	movf	(logf@z+1)^(0+256),w
 15980  03E4  0020               	movlb	0	; select bank0
 15981  03E5  00A7               	movwf	___flmul@b+1
 15982  03E6  0022               	movlb	2	; select bank2
 15983  03E7  084A               	movf	logf@z^(0+256),w
 15984  03E8  0020               	movlb	0	; select bank0
 15985  03E9  00A6               	movwf	___flmul@b
 15986  03EA  0022               	movlb	2	; select bank2
 15987  03EB  0855               	movf	(_logf$2047+3)^(0+256),w
 15988  03EC  0020               	movlb	0	; select bank0
 15989  03ED  00AD               	movwf	___flmul@a+3
 15990  03EE  0022               	movlb	2	; select bank2
 15991  03EF  0854               	movf	(_logf$2047+2)^(0+256),w
 15992  03F0  0020               	movlb	0	; select bank0
 15993  03F1  00AC               	movwf	___flmul@a+2
 15994  03F2  0022               	movlb	2	; select bank2
 15995  03F3  0853               	movf	(_logf$2047+1)^(0+256),w
 15996  03F4  0020               	movlb	0	; select bank0
 15997  03F5  00AB               	movwf	___flmul@a+1
 15998  03F6  0022               	movlb	2	; select bank2
 15999  03F7  0852               	movf	_logf$2047^(0+256),w
 16000  03F8  0020               	movlb	0	; select bank0
 16001  03F9  00AA               	movwf	___flmul@a
 16002  03FA  3190  2023  3180   	fcall	___flmul
 16003  03FD  0020               	movlb	0	; select bank0
 16004  03FE  0829               	movf	?___flmul+3,w
 16005  03FF  0022               	movlb	2	; select bank2
 16006  0400  00AB               	movwf	(logf@t2+3)^(0+256)
 16007  0401  0020               	movlb	0	; select bank0
 16008  0402  0828               	movf	?___flmul+2,w
 16009  0403  0022               	movlb	2	; select bank2
 16010  0404  00AA               	movwf	(logf@t2+2)^(0+256)
 16011  0405  0020               	movlb	0	; select bank0
 16012  0406  0827               	movf	?___flmul+1,w
 16013  0407  0022               	movlb	2	; select bank2
 16014  0408  00A9               	movwf	(logf@t2+1)^(0+256)
 16015  0409  0020               	movlb	0	; select bank0
 16016  040A  0826               	movf	?___flmul,w
 16017  040B  0022               	movlb	2	; select bank2
 16018  040C  00A8               	movwf	logf@t2^(0+256)
 16019  040D  0827               	movf	(logf@t1+3)^(0+256),w
 16020  040E  0020               	movlb	0	; select bank0
 16021  040F  00DD               	movwf	___fladd@b+3
 16022  0410  0022               	movlb	2	; select bank2
 16023  0411  0826               	movf	(logf@t1+2)^(0+256),w
 16024  0412  0020               	movlb	0	; select bank0
 16025  0413  00DC               	movwf	___fladd@b+2
 16026  0414  0022               	movlb	2	; select bank2
 16027  0415  0825               	movf	(logf@t1+1)^(0+256),w
 16028  0416  0020               	movlb	0	; select bank0
 16029  0417  00DB               	movwf	___fladd@b+1
 16030  0418  0022               	movlb	2	; select bank2
 16031  0419  0824               	movf	logf@t1^(0+256),w
 16032  041A  0020               	movlb	0	; select bank0
 16033  041B  00DA               	movwf	___fladd@b
 16034  041C  0022               	movlb	2	; select bank2
 16035  041D  082B               	movf	(logf@t2+3)^(0+256),w
 16036  041E  0020               	movlb	0	; select bank0
 16037  041F  00E1               	movwf	___fladd@a+3
 16038  0420  0022               	movlb	2	; select bank2
 16039  0421  082A               	movf	(logf@t2+2)^(0+256),w
 16040  0422  0020               	movlb	0	; select bank0
 16041  0423  00E0               	movwf	___fladd@a+2
 16042  0424  0022               	movlb	2	; select bank2
 16043  0425  0829               	movf	(logf@t2+1)^(0+256),w
 16044  0426  0020               	movlb	0	; select bank0
 16045  0427  00DF               	movwf	___fladd@a+1
 16046  0428  0022               	movlb	2	; select bank2
 16047  0429  0828               	movf	logf@t2^(0+256),w
 16048  042A  0020               	movlb	0	; select bank0
 16049  042B  00DE               	movwf	___fladd@a
 16050  042C  3185  25F5  3180   	fcall	___fladd
 16051  042F  0020               	movlb	0	; select bank0
 16052  0430  085D               	movf	?___fladd+3,w
 16053  0431  0022               	movlb	2	; select bank2
 16054  0432  00A3               	movwf	(logf@R+3)^(0+256)
 16055  0433  0020               	movlb	0	; select bank0
 16056  0434  085C               	movf	?___fladd+2,w
 16057  0435  0022               	movlb	2	; select bank2
 16058  0436  00A2               	movwf	(logf@R+2)^(0+256)
 16059  0437  0020               	movlb	0	; select bank0
 16060  0438  085B               	movf	?___fladd+1,w
 16061  0439  0022               	movlb	2	; select bank2
 16062  043A  00A1               	movwf	(logf@R+1)^(0+256)
 16063  043B  0020               	movlb	0	; select bank0
 16064  043C  085A               	movf	?___fladd,w
 16065  043D  0022               	movlb	2	; select bank2
 16066  043E  00A0               	movwf	logf@R^(0+256)
 16067  043F  303F               	movlw	63
 16068  0440  0020               	movlb	0	; select bank0
 16069  0441  00A9               	movwf	___flmul@b+3
 16070  0442  3000               	movlw	0
 16071  0443  00A8               	movwf	___flmul@b+2
 16072  0444  3000               	movlw	0
 16073  0445  00A7               	movwf	___flmul@b+1
 16074  0446  3000               	movlw	0
 16075  0447  00A6               	movwf	___flmul@b
 16076  0448  0022               	movlb	2	; select bank2
 16077  0449  085D               	movf	(logf@f+3)^(0+256),w
 16078  044A  0020               	movlb	0	; select bank0
 16079  044B  00AD               	movwf	___flmul@a+3
 16080  044C  0022               	movlb	2	; select bank2
 16081  044D  085C               	movf	(logf@f+2)^(0+256),w
 16082  044E  0020               	movlb	0	; select bank0
 16083  044F  00AC               	movwf	___flmul@a+2
 16084  0450  0022               	movlb	2	; select bank2
 16085  0451  085B               	movf	(logf@f+1)^(0+256),w
 16086  0452  0020               	movlb	0	; select bank0
 16087  0453  00AB               	movwf	___flmul@a+1
 16088  0454  0022               	movlb	2	; select bank2
 16089  0455  085A               	movf	logf@f^(0+256),w
 16090  0456  0020               	movlb	0	; select bank0
 16091  0457  00AA               	movwf	___flmul@a
 16092  0458  3190  2023  3180   	fcall	___flmul
 16093  045B  0020               	movlb	0	; select bank0
 16094  045C  0829               	movf	?___flmul+3,w
 16095  045D  0022               	movlb	2	; select bank2
 16096  045E  00D5               	movwf	(_logf$2047+3)^(0+256)
 16097  045F  0020               	movlb	0	; select bank0
 16098  0460  0828               	movf	?___flmul+2,w
 16099  0461  0022               	movlb	2	; select bank2
 16100  0462  00D4               	movwf	(_logf$2047+2)^(0+256)
 16101  0463  0020               	movlb	0	; select bank0
 16102  0464  0827               	movf	?___flmul+1,w
 16103  0465  0022               	movlb	2	; select bank2
 16104  0466  00D3               	movwf	(_logf$2047+1)^(0+256)
 16105  0467  0020               	movlb	0	; select bank0
 16106  0468  0826               	movf	?___flmul,w
 16107  0469  0022               	movlb	2	; select bank2
 16108  046A  00D2               	movwf	_logf$2047^(0+256)
 16109  046B  085D               	movf	(logf@f+3)^(0+256),w
 16110  046C  0020               	movlb	0	; select bank0
 16111  046D  00A9               	movwf	___flmul@b+3
 16112  046E  0022               	movlb	2	; select bank2
 16113  046F  085C               	movf	(logf@f+2)^(0+256),w
 16114  0470  0020               	movlb	0	; select bank0
 16115  0471  00A8               	movwf	___flmul@b+2
 16116  0472  0022               	movlb	2	; select bank2
 16117  0473  085B               	movf	(logf@f+1)^(0+256),w
 16118  0474  0020               	movlb	0	; select bank0
 16119  0475  00A7               	movwf	___flmul@b+1
 16120  0476  0022               	movlb	2	; select bank2
 16121  0477  085A               	movf	logf@f^(0+256),w
 16122  0478  0020               	movlb	0	; select bank0
 16123  0479  00A6               	movwf	___flmul@b
 16124  047A  0022               	movlb	2	; select bank2
 16125  047B  0855               	movf	(_logf$2047+3)^(0+256),w
 16126  047C  0020               	movlb	0	; select bank0
 16127  047D  00AD               	movwf	___flmul@a+3
 16128  047E  0022               	movlb	2	; select bank2
 16129  047F  0854               	movf	(_logf$2047+2)^(0+256),w
 16130  0480  0020               	movlb	0	; select bank0
 16131  0481  00AC               	movwf	___flmul@a+2
 16132  0482  0022               	movlb	2	; select bank2
 16133  0483  0853               	movf	(_logf$2047+1)^(0+256),w
 16134  0484  0020               	movlb	0	; select bank0
 16135  0485  00AB               	movwf	___flmul@a+1
 16136  0486  0022               	movlb	2	; select bank2
 16137  0487  0852               	movf	_logf$2047^(0+256),w
 16138  0488  0020               	movlb	0	; select bank0
 16139  0489  00AA               	movwf	___flmul@a
 16140  048A  3190  2023  3180   	fcall	___flmul
 16141  048D  0020               	movlb	0	; select bank0
 16142  048E  0829               	movf	?___flmul+3,w
 16143  048F  0022               	movlb	2	; select bank2
 16144  0490  00C1               	movwf	(logf@hfsq+3)^(0+256)
 16145  0491  0020               	movlb	0	; select bank0
 16146  0492  0828               	movf	?___flmul+2,w
 16147  0493  0022               	movlb	2	; select bank2
 16148  0494  00C0               	movwf	(logf@hfsq+2)^(0+256)
 16149  0495  0020               	movlb	0	; select bank0
 16150  0496  0827               	movf	?___flmul+1,w
 16151  0497  0022               	movlb	2	; select bank2
 16152  0498  00BF               	movwf	(logf@hfsq+1)^(0+256)
 16153  0499  0020               	movlb	0	; select bank0
 16154  049A  0826               	movf	?___flmul,w
 16155  049B  0022               	movlb	2	; select bank2
 16156  049C  00BE               	movwf	logf@hfsq^(0+256)
 16157  049D  083C               	movf	logf@k^(0+256),w
 16158  049E  00F1               	movwf	___xxtofl@val
 16159  049F  083D               	movf	(logf@k+1)^(0+256),w
 16160  04A0  00F2               	movwf	___xxtofl@val+1
 16161  04A1  0D89               	rlf	9,f
 16162  04A2  3B89               	subwfb	9,f
 16163  04A3  0989               	comf	9,f
 16164  04A4  00F3               	movwf	___xxtofl@val+2
 16165  04A5  00F4               	movwf	___xxtofl@val+3
 16166  04A6  3001               	movlw	1
 16167  04A7  31AB  23AF  3180   	fcall	___xxtofl
 16168  04AA  0874               	movf	?___xxtofl+3,w
 16169  04AB  0022               	movlb	2	; select bank2
 16170  04AC  00C5               	movwf	(logf@dk+3)^(0+256)
 16171  04AD  0873               	movf	?___xxtofl+2,w
 16172  04AE  00C4               	movwf	(logf@dk+2)^(0+256)
 16173  04AF  0872               	movf	?___xxtofl+1,w
 16174  04B0  00C3               	movwf	(logf@dk+1)^(0+256)
 16175  04B1  0871               	movf	?___xxtofl,w
 16176  04B2  00C2               	movwf	logf@dk^(0+256)
 16177  04B3  0849               	movf	(logf@s+3)^(0+256),w
 16178  04B4  0020               	movlb	0	; select bank0
 16179  04B5  00A9               	movwf	___flmul@b+3
 16180  04B6  0022               	movlb	2	; select bank2
 16181  04B7  0848               	movf	(logf@s+2)^(0+256),w
 16182  04B8  0020               	movlb	0	; select bank0
 16183  04B9  00A8               	movwf	___flmul@b+2
 16184  04BA  0022               	movlb	2	; select bank2
 16185  04BB  0847               	movf	(logf@s+1)^(0+256),w
 16186  04BC  0020               	movlb	0	; select bank0
 16187  04BD  00A7               	movwf	___flmul@b+1
 16188  04BE  0022               	movlb	2	; select bank2
 16189  04BF  0846               	movf	logf@s^(0+256),w
 16190  04C0  0020               	movlb	0	; select bank0
 16191  04C1  00A6               	movwf	___flmul@b
 16192  04C2  0022               	movlb	2	; select bank2
 16193  04C3  0823               	movf	(logf@R+3)^(0+256),w
 16194  04C4  0020               	movlb	0	; select bank0
 16195  04C5  00DD               	movwf	___fladd@b+3
 16196  04C6  0022               	movlb	2	; select bank2
 16197  04C7  0822               	movf	(logf@R+2)^(0+256),w
 16198  04C8  0020               	movlb	0	; select bank0
 16199  04C9  00DC               	movwf	___fladd@b+2
 16200  04CA  0022               	movlb	2	; select bank2
 16201  04CB  0821               	movf	(logf@R+1)^(0+256),w
 16202  04CC  0020               	movlb	0	; select bank0
 16203  04CD  00DB               	movwf	___fladd@b+1
 16204  04CE  0022               	movlb	2	; select bank2
 16205  04CF  0820               	movf	logf@R^(0+256),w
 16206  04D0  0020               	movlb	0	; select bank0
 16207  04D1  00DA               	movwf	___fladd@b
 16208  04D2  0022               	movlb	2	; select bank2
 16209  04D3  0841               	movf	(logf@hfsq+3)^(0+256),w
 16210  04D4  0020               	movlb	0	; select bank0
 16211  04D5  00E1               	movwf	___fladd@a+3
 16212  04D6  0022               	movlb	2	; select bank2
 16213  04D7  0840               	movf	(logf@hfsq+2)^(0+256),w
 16214  04D8  0020               	movlb	0	; select bank0
 16215  04D9  00E0               	movwf	___fladd@a+2
 16216  04DA  0022               	movlb	2	; select bank2
 16217  04DB  083F               	movf	(logf@hfsq+1)^(0+256),w
 16218  04DC  0020               	movlb	0	; select bank0
 16219  04DD  00DF               	movwf	___fladd@a+1
 16220  04DE  0022               	movlb	2	; select bank2
 16221  04DF  083E               	movf	logf@hfsq^(0+256),w
 16222  04E0  0020               	movlb	0	; select bank0
 16223  04E1  00DE               	movwf	___fladd@a
 16224  04E2  3185  25F5  3180   	fcall	___fladd
 16225  04E5  0020               	movlb	0	; select bank0
 16226  04E6  085D               	movf	?___fladd+3,w
 16227  04E7  00AD               	movwf	___flmul@a+3
 16228  04E8  085C               	movf	?___fladd+2,w
 16229  04E9  00AC               	movwf	___flmul@a+2
 16230  04EA  085B               	movf	?___fladd+1,w
 16231  04EB  00AB               	movwf	___flmul@a+1
 16232  04EC  085A               	movf	?___fladd,w
 16233  04ED  00AA               	movwf	___flmul@a
 16234  04EE  3190  2023  3180   	fcall	___flmul
 16235  04F1  0020               	movlb	0	; select bank0
 16236  04F2  0829               	movf	?___flmul+3,w
 16237  04F3  0022               	movlb	2	; select bank2
 16238  04F4  00AF               	movwf	(_logf$2048+3)^(0+256)
 16239  04F5  0020               	movlb	0	; select bank0
 16240  04F6  0828               	movf	?___flmul+2,w
 16241  04F7  0022               	movlb	2	; select bank2
 16242  04F8  00AE               	movwf	(_logf$2048+2)^(0+256)
 16243  04F9  0020               	movlb	0	; select bank0
 16244  04FA  0827               	movf	?___flmul+1,w
 16245  04FB  0022               	movlb	2	; select bank2
 16246  04FC  00AD               	movwf	(_logf$2048+1)^(0+256)
 16247  04FD  0020               	movlb	0	; select bank0
 16248  04FE  0826               	movf	?___flmul,w
 16249  04FF  0022               	movlb	2	; select bank2
 16250  0500  00AC               	movwf	_logf$2048^(0+256)
 16251  0501  3037               	movlw	55
 16252  0502  0020               	movlb	0	; select bank0
 16253  0503  00A9               	movwf	___flmul@b+3
 16254  0504  3017               	movlw	23
 16255  0505  00A8               	movwf	___flmul@b+2
 16256  0506  30F7               	movlw	247
 16257  0507  00A7               	movwf	___flmul@b+1
 16258  0508  30D1               	movlw	209
 16259  0509  00A6               	movwf	___flmul@b
 16260  050A  0022               	movlb	2	; select bank2
 16261  050B  0845               	movf	(logf@dk+3)^(0+256),w
 16262  050C  0020               	movlb	0	; select bank0
 16263  050D  00AD               	movwf	___flmul@a+3
 16264  050E  0022               	movlb	2	; select bank2
 16265  050F  0844               	movf	(logf@dk+2)^(0+256),w
 16266  0510  0020               	movlb	0	; select bank0
 16267  0511  00AC               	movwf	___flmul@a+2
 16268  0512  0022               	movlb	2	; select bank2
 16269  0513  0843               	movf	(logf@dk+1)^(0+256),w
 16270  0514  0020               	movlb	0	; select bank0
 16271  0515  00AB               	movwf	___flmul@a+1
 16272  0516  0022               	movlb	2	; select bank2
 16273  0517  0842               	movf	logf@dk^(0+256),w
 16274  0518  0020               	movlb	0	; select bank0
 16275  0519  00AA               	movwf	___flmul@a
 16276  051A  3190  2023  3180   	fcall	___flmul
 16277  051D  0020               	movlb	0	; select bank0
 16278  051E  0829               	movf	?___flmul+3,w
 16279  051F  00DD               	movwf	___fladd@b+3
 16280  0520  0828               	movf	?___flmul+2,w
 16281  0521  00DC               	movwf	___fladd@b+2
 16282  0522  0827               	movf	?___flmul+1,w
 16283  0523  00DB               	movwf	___fladd@b+1
 16284  0524  0826               	movf	?___flmul,w
 16285  0525  00DA               	movwf	___fladd@b
 16286  0526  0022               	movlb	2	; select bank2
 16287  0527  082F               	movf	(_logf$2048+3)^(0+256),w
 16288  0528  0020               	movlb	0	; select bank0
 16289  0529  00E1               	movwf	___fladd@a+3
 16290  052A  0022               	movlb	2	; select bank2
 16291  052B  082E               	movf	(_logf$2048+2)^(0+256),w
 16292  052C  0020               	movlb	0	; select bank0
 16293  052D  00E0               	movwf	___fladd@a+2
 16294  052E  0022               	movlb	2	; select bank2
 16295  052F  082D               	movf	(_logf$2048+1)^(0+256),w
 16296  0530  0020               	movlb	0	; select bank0
 16297  0531  00DF               	movwf	___fladd@a+1
 16298  0532  0022               	movlb	2	; select bank2
 16299  0533  082C               	movf	_logf$2048^(0+256),w
 16300  0534  0020               	movlb	0	; select bank0
 16301  0535  00DE               	movwf	___fladd@a
 16302  0536  3185  25F5  3180   	fcall	___fladd
 16303  0539  0020               	movlb	0	; select bank0
 16304  053A  085D               	movf	?___fladd+3,w
 16305  053B  0022               	movlb	2	; select bank2
 16306  053C  00B3               	movwf	(_logf$2049+3)^(0+256)
 16307  053D  0020               	movlb	0	; select bank0
 16308  053E  085C               	movf	?___fladd+2,w
 16309  053F  0022               	movlb	2	; select bank2
 16310  0540  00B2               	movwf	(_logf$2049+2)^(0+256)
 16311  0541  0020               	movlb	0	; select bank0
 16312  0542  085B               	movf	?___fladd+1,w
 16313  0543  0022               	movlb	2	; select bank2
 16314  0544  00B1               	movwf	(_logf$2049+1)^(0+256)
 16315  0545  0020               	movlb	0	; select bank0
 16316  0546  085A               	movf	?___fladd,w
 16317  0547  0022               	movlb	2	; select bank2
 16318  0548  00B0               	movwf	_logf$2049^(0+256)
 16319  0549  0841               	movf	(logf@hfsq+3)^(0+256),w
 16320  054A  0021               	movlb	1	; select bank1
 16321  054B  00A3               	movwf	(___flsub@a+3)^(0+128)
 16322  054C  0022               	movlb	2	; select bank2
 16323  054D  0840               	movf	(logf@hfsq+2)^(0+256),w
 16324  054E  0021               	movlb	1	; select bank1
 16325  054F  00A2               	movwf	(___flsub@a+2)^(0+128)
 16326  0550  0022               	movlb	2	; select bank2
 16327  0551  083F               	movf	(logf@hfsq+1)^(0+256),w
 16328  0552  0021               	movlb	1	; select bank1
 16329  0553  00A1               	movwf	(___flsub@a+1)^(0+128)
 16330  0554  0022               	movlb	2	; select bank2
 16331  0555  083E               	movf	logf@hfsq^(0+256),w
 16332  0556  0021               	movlb	1	; select bank1
 16333  0557  00A0               	movwf	___flsub@a^(0+128)
 16334  0558  0022               	movlb	2	; select bank2
 16335  0559  0833               	movf	(_logf$2049+3)^(0+256),w
 16336  055A  0021               	movlb	1	; select bank1
 16337  055B  00A7               	movwf	(___flsub@b+3)^(0+128)
 16338  055C  0022               	movlb	2	; select bank2
 16339  055D  0832               	movf	(_logf$2049+2)^(0+256),w
 16340  055E  0021               	movlb	1	; select bank1
 16341  055F  00A6               	movwf	(___flsub@b+2)^(0+128)
 16342  0560  0022               	movlb	2	; select bank2
 16343  0561  0831               	movf	(_logf$2049+1)^(0+256),w
 16344  0562  0021               	movlb	1	; select bank1
 16345  0563  00A5               	movwf	(___flsub@b+1)^(0+128)
 16346  0564  0022               	movlb	2	; select bank2
 16347  0565  0830               	movf	_logf$2049^(0+256),w
 16348  0566  0021               	movlb	1	; select bank1
 16349  0567  00A4               	movwf	___flsub@b^(0+128)
 16350  0568  31B6  2640  3180   	fcall	___flsub
 16351  056B  0021               	movlb	1	; select bank1
 16352  056C  0823               	movf	(?___flsub+3)^(0+128),w
 16353  056D  0022               	movlb	2	; select bank2
 16354  056E  00B7               	movwf	(_logf$2050+3)^(0+256)
 16355  056F  0021               	movlb	1	; select bank1
 16356  0570  0822               	movf	(?___flsub+2)^(0+128),w
 16357  0571  0022               	movlb	2	; select bank2
 16358  0572  00B6               	movwf	(_logf$2050+2)^(0+256)
 16359  0573  0021               	movlb	1	; select bank1
 16360  0574  0821               	movf	(?___flsub+1)^(0+128),w
 16361  0575  0022               	movlb	2	; select bank2
 16362  0576  00B5               	movwf	(_logf$2050+1)^(0+256)
 16363  0577  0021               	movlb	1	; select bank1
 16364  0578  0820               	movf	?___flsub^(0+128),w
 16365  0579  0022               	movlb	2	; select bank2
 16366  057A  00B4               	movwf	_logf$2050^(0+256)
 16367  057B  085D               	movf	(logf@f+3)^(0+256),w
 16368  057C  0020               	movlb	0	; select bank0
 16369  057D  00DD               	movwf	___fladd@b+3
 16370  057E  0022               	movlb	2	; select bank2
 16371  057F  085C               	movf	(logf@f+2)^(0+256),w
 16372  0580  0020               	movlb	0	; select bank0
 16373  0581  00DC               	movwf	___fladd@b+2
 16374  0582  0022               	movlb	2	; select bank2
 16375  0583  085B               	movf	(logf@f+1)^(0+256),w
 16376  0584  0020               	movlb	0	; select bank0
 16377  0585  00DB               	movwf	___fladd@b+1
 16378  0586  0022               	movlb	2	; select bank2
 16379  0587  085A               	movf	logf@f^(0+256),w
 16380  0588  0020               	movlb	0	; select bank0
 16381  0589  00DA               	movwf	___fladd@b
 16382  058A  0022               	movlb	2	; select bank2
 16383  058B  0837               	movf	(_logf$2050+3)^(0+256),w
 16384  058C  0020               	movlb	0	; select bank0
 16385  058D  00E1               	movwf	___fladd@a+3
 16386  058E  0022               	movlb	2	; select bank2
 16387  058F  0836               	movf	(_logf$2050+2)^(0+256),w
 16388  0590  0020               	movlb	0	; select bank0
 16389  0591  00E0               	movwf	___fladd@a+2
 16390  0592  0022               	movlb	2	; select bank2
 16391  0593  0835               	movf	(_logf$2050+1)^(0+256),w
 16392  0594  0020               	movlb	0	; select bank0
 16393  0595  00DF               	movwf	___fladd@a+1
 16394  0596  0022               	movlb	2	; select bank2
 16395  0597  0834               	movf	_logf$2050^(0+256),w
 16396  0598  0020               	movlb	0	; select bank0
 16397  0599  00DE               	movwf	___fladd@a
 16398  059A  3185  25F5  3180   	fcall	___fladd
 16399  059D  0020               	movlb	0	; select bank0
 16400  059E  085D               	movf	?___fladd+3,w
 16401  059F  0022               	movlb	2	; select bank2
 16402  05A0  00BB               	movwf	(_logf$2051+3)^(0+256)
 16403  05A1  0020               	movlb	0	; select bank0
 16404  05A2  085C               	movf	?___fladd+2,w
 16405  05A3  0022               	movlb	2	; select bank2
 16406  05A4  00BA               	movwf	(_logf$2051+2)^(0+256)
 16407  05A5  0020               	movlb	0	; select bank0
 16408  05A6  085B               	movf	?___fladd+1,w
 16409  05A7  0022               	movlb	2	; select bank2
 16410  05A8  00B9               	movwf	(_logf$2051+1)^(0+256)
 16411  05A9  0020               	movlb	0	; select bank0
 16412  05AA  085A               	movf	?___fladd,w
 16413  05AB  0022               	movlb	2	; select bank2
 16414  05AC  00B8               	movwf	_logf$2051^(0+256)
 16415  05AD  303F               	movlw	63
 16416  05AE  0020               	movlb	0	; select bank0
 16417  05AF  00A9               	movwf	___flmul@b+3
 16418  05B0  3031               	movlw	49
 16419  05B1  00A8               	movwf	___flmul@b+2
 16420  05B2  3071               	movlw	113
 16421  05B3  00A7               	movwf	___flmul@b+1
 16422  05B4  3080               	movlw	128
 16423  05B5  00A6               	movwf	___flmul@b
 16424  05B6  0022               	movlb	2	; select bank2
 16425  05B7  0845               	movf	(logf@dk+3)^(0+256),w
 16426  05B8  0020               	movlb	0	; select bank0
 16427  05B9  00AD               	movwf	___flmul@a+3
 16428  05BA  0022               	movlb	2	; select bank2
 16429  05BB  0844               	movf	(logf@dk+2)^(0+256),w
 16430  05BC  0020               	movlb	0	; select bank0
 16431  05BD  00AC               	movwf	___flmul@a+2
 16432  05BE  0022               	movlb	2	; select bank2
 16433  05BF  0843               	movf	(logf@dk+1)^(0+256),w
 16434  05C0  0020               	movlb	0	; select bank0
 16435  05C1  00AB               	movwf	___flmul@a+1
 16436  05C2  0022               	movlb	2	; select bank2
 16437  05C3  0842               	movf	logf@dk^(0+256),w
 16438  05C4  0020               	movlb	0	; select bank0
 16439  05C5  00AA               	movwf	___flmul@a
 16440  05C6  3190  2023  3180   	fcall	___flmul
 16441  05C9  0020               	movlb	0	; select bank0
 16442  05CA  0829               	movf	?___flmul+3,w
 16443  05CB  00DD               	movwf	___fladd@b+3
 16444  05CC  0828               	movf	?___flmul+2,w
 16445  05CD  00DC               	movwf	___fladd@b+2
 16446  05CE  0827               	movf	?___flmul+1,w
 16447  05CF  00DB               	movwf	___fladd@b+1
 16448  05D0  0826               	movf	?___flmul,w
 16449  05D1  00DA               	movwf	___fladd@b
 16450  05D2  0022               	movlb	2	; select bank2
 16451  05D3  083B               	movf	(_logf$2051+3)^(0+256),w
 16452  05D4  0020               	movlb	0	; select bank0
 16453  05D5  00E1               	movwf	___fladd@a+3
 16454  05D6  0022               	movlb	2	; select bank2
 16455  05D7  083A               	movf	(_logf$2051+2)^(0+256),w
 16456  05D8  0020               	movlb	0	; select bank0
 16457  05D9  00E0               	movwf	___fladd@a+2
 16458  05DA  0022               	movlb	2	; select bank2
 16459  05DB  0839               	movf	(_logf$2051+1)^(0+256),w
 16460  05DC  0020               	movlb	0	; select bank0
 16461  05DD  00DF               	movwf	___fladd@a+1
 16462  05DE  0022               	movlb	2	; select bank2
 16463  05DF  0838               	movf	_logf$2051^(0+256),w
 16464  05E0  0020               	movlb	0	; select bank0
 16465  05E1  00DE               	movwf	___fladd@a
 16466  05E2  3185  25F5         	fcall	___fladd
 16467  05E4  0020               	movlb	0	; select bank0
 16468  05E5  085D               	movf	?___fladd+3,w
 16469  05E6  0021               	movlb	1	; select bank1
 16470  05E7  00AB               	movwf	(?_logf+3)^(0+128)
 16471  05E8  0020               	movlb	0	; select bank0
 16472  05E9  085C               	movf	?___fladd+2,w
 16473  05EA  0021               	movlb	1	; select bank1
 16474  05EB  00AA               	movwf	(?_logf+2)^(0+128)
 16475  05EC  0020               	movlb	0	; select bank0
 16476  05ED  085B               	movf	?___fladd+1,w
 16477  05EE  0021               	movlb	1	; select bank1
 16478  05EF  00A9               	movwf	(?_logf+1)^(0+128)
 16479  05F0  0020               	movlb	0	; select bank0
 16480  05F1  085A               	movf	?___fladd,w
 16481  05F2  0021               	movlb	1	; select bank1
 16482  05F3  00A8               	movwf	?_logf^(0+128)
 16483  05F4  0008               	return
 16484  05F5                     __end_of_logf:	
 16485                           
 16486                           	psect	text51
 16487  3640                     __ptext51:	
 16488 ;; *************** function ___flsub *****************
 16489 ;; Defined at:
 16490 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 16491 ;; Parameters:    Size  Location     Type
 16492 ;;  a               4    0[BANK1 ] float 
 16493 ;;  b               4    4[BANK1 ] float 
 16494 ;; Auto vars:     Size  Location     Type
 16495 ;;		None
 16496 ;; Return value:  Size  Location     Type
 16497 ;;                  4    0[BANK1 ] float 
 16498 ;; Registers used:
 16499 ;;		wreg, status,2, status,0, pclath, cstack
 16500 ;; Tracked objects:
 16501 ;;		On entry : 0/0
 16502 ;;		On exit  : 0/0
 16503 ;;		Unchanged: 0/0
 16504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16505 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16508 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16509 ;;Total ram usage:        8 bytes
 16510 ;; Hardware stack levels used:    1
 16511 ;; Hardware stack levels required when called:    2
 16512 ;; This function calls:
 16513 ;;		___fladd
 16514 ;; This function is called by:
 16515 ;;		_updateTemperatures
 16516 ;;		_logf
 16517 ;; This function uses a non-reentrant model
 16518 ;;
 16519                           
 16520                           
 16521                           ;psect for function ___flsub
 16522  3640                     ___flsub:	
 16523                           
 16524                           ;incstack = 0
 16525                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 16526  3640  3080               	movlw	128
 16527  3641  0021               	movlb	1	; select bank1
 16528  3642  06A3               	xorwf	(___flsub@a+3)^(0+128),f
 16529  3643  0827               	movf	(___flsub@b+3)^(0+128),w
 16530  3644  0020               	movlb	0	; select bank0
 16531  3645  00DD               	movwf	___fladd@b+3
 16532  3646  0021               	movlb	1	; select bank1
 16533  3647  0826               	movf	(___flsub@b+2)^(0+128),w
 16534  3648  0020               	movlb	0	; select bank0
 16535  3649  00DC               	movwf	___fladd@b+2
 16536  364A  0021               	movlb	1	; select bank1
 16537  364B  0825               	movf	(___flsub@b+1)^(0+128),w
 16538  364C  0020               	movlb	0	; select bank0
 16539  364D  00DB               	movwf	___fladd@b+1
 16540  364E  0021               	movlb	1	; select bank1
 16541  364F  0824               	movf	___flsub@b^(0+128),w
 16542  3650  0020               	movlb	0	; select bank0
 16543  3651  00DA               	movwf	___fladd@b
 16544  3652  0021               	movlb	1	; select bank1
 16545  3653  0823               	movf	(___flsub@a+3)^(0+128),w
 16546  3654  0020               	movlb	0	; select bank0
 16547  3655  00E1               	movwf	___fladd@a+3
 16548  3656  0021               	movlb	1	; select bank1
 16549  3657  0822               	movf	(___flsub@a+2)^(0+128),w
 16550  3658  0020               	movlb	0	; select bank0
 16551  3659  00E0               	movwf	___fladd@a+2
 16552  365A  0021               	movlb	1	; select bank1
 16553  365B  0821               	movf	(___flsub@a+1)^(0+128),w
 16554  365C  0020               	movlb	0	; select bank0
 16555  365D  00DF               	movwf	___fladd@a+1
 16556  365E  0021               	movlb	1	; select bank1
 16557  365F  0820               	movf	___flsub@a^(0+128),w
 16558  3660  0020               	movlb	0	; select bank0
 16559  3661  00DE               	movwf	___fladd@a
 16560  3662  3185  25F5         	fcall	___fladd
 16561  3664  0020               	movlb	0	; select bank0
 16562  3665  085D               	movf	?___fladd+3,w
 16563  3666  0021               	movlb	1	; select bank1
 16564  3667  00A3               	movwf	(?___flsub+3)^(0+128)
 16565  3668  0020               	movlb	0	; select bank0
 16566  3669  085C               	movf	?___fladd+2,w
 16567  366A  0021               	movlb	1	; select bank1
 16568  366B  00A2               	movwf	(?___flsub+2)^(0+128)
 16569  366C  0020               	movlb	0	; select bank0
 16570  366D  085B               	movf	?___fladd+1,w
 16571  366E  0021               	movlb	1	; select bank1
 16572  366F  00A1               	movwf	(?___flsub+1)^(0+128)
 16573  3670  0020               	movlb	0	; select bank0
 16574  3671  085A               	movf	?___fladd,w
 16575  3672  0021               	movlb	1	; select bank1
 16576  3673  00A0               	movwf	?___flsub^(0+128)
 16577  3674  0008               	return
 16578  3675                     __end_of___flsub:	
 16579                           
 16580                           	psect	text52
 16581  05F5                     __ptext52:	
 16582 ;; *************** function ___fladd *****************
 16583 ;; Defined at:
 16584 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 16585 ;; Parameters:    Size  Location     Type
 16586 ;;  b               4   58[BANK0 ] float 
 16587 ;;  a               4   62[BANK0 ] float 
 16588 ;; Auto vars:     Size  Location     Type
 16589 ;;  grs             1   77[BANK0 ] unsigned char 
 16590 ;;  bexp            1   76[BANK0 ] unsigned char 
 16591 ;;  aexp            1   75[BANK0 ] unsigned char 
 16592 ;;  signs           1   74[BANK0 ] unsigned char 
 16593 ;; Return value:  Size  Location     Type
 16594 ;;                  4   58[BANK0 ] unsigned char 
 16595 ;; Registers used:
 16596 ;;		wreg, status,2, status,0
 16597 ;; Tracked objects:
 16598 ;;		On entry : 0/0
 16599 ;;		On exit  : 0/0
 16600 ;;		Unchanged: 0/0
 16601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16602 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16603 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16604 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16605 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16606 ;;Total ram usage:       20 bytes
 16607 ;; Hardware stack levels used:    1
 16608 ;; Hardware stack levels required when called:    1
 16609 ;; This function calls:
 16610 ;;		Nothing
 16611 ;; This function is called by:
 16612 ;;		_updateVoltages
 16613 ;;		_updateTemperatures
 16614 ;;		___flsub
 16615 ;;		_logf
 16616 ;; This function uses a non-reentrant model
 16617 ;;
 16618                           
 16619                           
 16620                           ;psect for function ___fladd
 16621  05F5                     ___fladd:	
 16622                           
 16623                           ;incstack = 0
 16624                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 16625  05F5  0020               	movlb	0	; select bank0
 16626  05F6  085D               	movf	___fladd@b+3,w
 16627  05F7  3980               	andlw	128
 16628  05F8  00E2               	movwf	??___fladd
 16629  05F9  0862               	movf	??___fladd,w
 16630  05FA  00EA               	movwf	___fladd@signs
 16631  05FB  355D               	lslf	___fladd@b+3,w
 16632  05FC  00E2               	movwf	??___fladd
 16633  05FD  0862               	movf	??___fladd,w
 16634  05FE  00EC               	movwf	___fladd@bexp
 16635  05FF  1BDC               	btfsc	___fladd@b+2,7
 16636  0600  146C               	bsf	___fladd@bexp,0
 16637  0601  086C               	movf	___fladd@bexp,w
 16638  0602  1903               	btfsc	3,2
 16639  0603  2E12               	goto	l7208
 16640  0604  0A6C               	incf	___fladd@bexp,w
 16641  0605  1D03               	btfss	3,2
 16642  0606  2E0F               	goto	l7204
 16643  0607  3000               	movlw	0
 16644  0608  00DD               	movwf	___fladd@b+3
 16645  0609  3000               	movlw	0
 16646  060A  00DC               	movwf	___fladd@b+2
 16647  060B  3000               	movlw	0
 16648  060C  00DB               	movwf	___fladd@b+1
 16649  060D  3000               	movlw	0
 16650  060E  00DA               	movwf	___fladd@b
 16651  060F                     l7204:	
 16652  060F  17DC               	bsf	___fladd@b+2,7
 16653  0610  01DD               	clrf	___fladd@b+3
 16654  0611  2E1A               	goto	l7210
 16655  0612                     l7208:	
 16656  0612  3000               	movlw	0
 16657  0613  00DD               	movwf	___fladd@b+3
 16658  0614  3000               	movlw	0
 16659  0615  00DC               	movwf	___fladd@b+2
 16660  0616  3000               	movlw	0
 16661  0617  00DB               	movwf	___fladd@b+1
 16662  0618  3000               	movlw	0
 16663  0619  00DA               	movwf	___fladd@b
 16664  061A                     l7210:	
 16665  061A  0861               	movf	___fladd@a+3,w
 16666  061B  3980               	andlw	128
 16667  061C  00E2               	movwf	??___fladd
 16668  061D  0862               	movf	??___fladd,w
 16669  061E  00EB               	movwf	___fladd@aexp
 16670  061F  086B               	movf	___fladd@aexp,w
 16671  0620  066A               	xorwf	___fladd@signs,w
 16672  0621  1D03               	btfss	3,2
 16673  0622  176A               	bsf	___fladd@signs,6
 16674  0623  3561               	lslf	___fladd@a+3,w
 16675  0624  00E2               	movwf	??___fladd
 16676  0625  0862               	movf	??___fladd,w
 16677  0626  00EB               	movwf	___fladd@aexp
 16678  0627  1BE0               	btfsc	___fladd@a+2,7
 16679  0628  146B               	bsf	___fladd@aexp,0
 16680  0629  086B               	movf	___fladd@aexp,w
 16681  062A  1903               	btfsc	3,2
 16682  062B  2E3A               	goto	l7232
 16683  062C  0A6B               	incf	___fladd@aexp,w
 16684  062D  1D03               	btfss	3,2
 16685  062E  2E37               	goto	l7228
 16686  062F  3000               	movlw	0
 16687  0630  00E1               	movwf	___fladd@a+3
 16688  0631  3000               	movlw	0
 16689  0632  00E0               	movwf	___fladd@a+2
 16690  0633  3000               	movlw	0
 16691  0634  00DF               	movwf	___fladd@a+1
 16692  0635  3000               	movlw	0
 16693  0636  00DE               	movwf	___fladd@a
 16694  0637                     l7228:	
 16695  0637  17E0               	bsf	___fladd@a+2,7
 16696  0638  01E1               	clrf	___fladd@a+3
 16697  0639  2E42               	goto	l1156
 16698  063A                     l7232:	
 16699  063A  3000               	movlw	0
 16700  063B  00E1               	movwf	___fladd@a+3
 16701  063C  3000               	movlw	0
 16702  063D  00E0               	movwf	___fladd@a+2
 16703  063E  3000               	movlw	0
 16704  063F  00DF               	movwf	___fladd@a+1
 16705  0640  3000               	movlw	0
 16706  0641  00DE               	movwf	___fladd@a
 16707  0642                     l1156:	
 16708  0642  086C               	movf	___fladd@bexp,w
 16709  0643  026B               	subwf	___fladd@aexp,w
 16710  0644  1803               	skipnc
 16711  0645  2E88               	goto	l7268
 16712  0646  1F6A               	btfss	___fladd@signs,6
 16713  0647  2E4C               	goto	l7238
 16714  0648  3080               	movlw	128
 16715  0649  00E2               	movwf	??___fladd
 16716  064A  0862               	movf	??___fladd,w
 16717  064B  06EA               	xorwf	___fladd@signs,f
 16718  064C                     l7238:	
 16719  064C  086C               	movf	___fladd@bexp,w
 16720  064D  00E2               	movwf	??___fladd
 16721  064E  0862               	movf	??___fladd,w
 16722  064F  00ED               	movwf	___fladd@grs
 16723  0650  086B               	movf	___fladd@aexp,w
 16724  0651  00E2               	movwf	??___fladd
 16725  0652  0862               	movf	??___fladd,w
 16726  0653  00EC               	movwf	___fladd@bexp
 16727  0654  086D               	movf	___fladd@grs,w
 16728  0655  00E2               	movwf	??___fladd
 16729  0656  0862               	movf	??___fladd,w
 16730  0657  00EB               	movwf	___fladd@aexp
 16731  0658  085A               	movf	___fladd@b,w
 16732  0659  00E2               	movwf	??___fladd
 16733  065A  0862               	movf	??___fladd,w
 16734  065B  00ED               	movwf	___fladd@grs
 16735  065C  085E               	movf	___fladd@a,w
 16736  065D  00E2               	movwf	??___fladd
 16737  065E  0862               	movf	??___fladd,w
 16738  065F  00DA               	movwf	___fladd@b
 16739  0660  086D               	movf	___fladd@grs,w
 16740  0661  00E2               	movwf	??___fladd
 16741  0662  0862               	movf	??___fladd,w
 16742  0663  00DE               	movwf	___fladd@a
 16743  0664  085B               	movf	___fladd@b+1,w
 16744  0665  00E2               	movwf	??___fladd
 16745  0666  0862               	movf	??___fladd,w
 16746  0667  00ED               	movwf	___fladd@grs
 16747  0668  085F               	movf	___fladd@a+1,w
 16748  0669  00E2               	movwf	??___fladd
 16749  066A  0862               	movf	??___fladd,w
 16750  066B  00DB               	movwf	___fladd@b+1
 16751  066C  086D               	movf	___fladd@grs,w
 16752  066D  00E2               	movwf	??___fladd
 16753  066E  0862               	movf	??___fladd,w
 16754  066F  00DF               	movwf	___fladd@a+1
 16755  0670  085C               	movf	___fladd@b+2,w
 16756  0671  00E2               	movwf	??___fladd
 16757  0672  0862               	movf	??___fladd,w
 16758  0673  00ED               	movwf	___fladd@grs
 16759  0674  0860               	movf	___fladd@a+2,w
 16760  0675  00E2               	movwf	??___fladd
 16761  0676  0862               	movf	??___fladd,w
 16762  0677  00DC               	movwf	___fladd@b+2
 16763  0678  086D               	movf	___fladd@grs,w
 16764  0679  00E2               	movwf	??___fladd
 16765  067A  0862               	movf	??___fladd,w
 16766  067B  00E0               	movwf	___fladd@a+2
 16767  067C  085D               	movf	___fladd@b+3,w
 16768  067D  00E2               	movwf	??___fladd
 16769  067E  0862               	movf	??___fladd,w
 16770  067F  00ED               	movwf	___fladd@grs
 16771  0680  0861               	movf	___fladd@a+3,w
 16772  0681  00E2               	movwf	??___fladd
 16773  0682  0862               	movf	??___fladd,w
 16774  0683  00DD               	movwf	___fladd@b+3
 16775  0684  086D               	movf	___fladd@grs,w
 16776  0685  00E2               	movwf	??___fladd
 16777  0686  0862               	movf	??___fladd,w
 16778  0687  00E1               	movwf	___fladd@a+3
 16779  0688                     l7268:	
 16780  0688  01ED               	clrf	___fladd@grs
 16781  0689  086B               	movf	___fladd@aexp,w
 16782  068A  00E2               	movwf	??___fladd
 16783  068B  01E3               	clrf	??___fladd+1
 16784  068C  0863               	movf	??___fladd+1,w
 16785  068D  00E5               	movwf	??___fladd+3
 16786  068E  086C               	movf	___fladd@bexp,w
 16787  068F  0262               	subwf	??___fladd,w
 16788  0690  00E4               	movwf	??___fladd+2
 16789  0691  1C03               	skipc
 16790  0692  03E5               	decf	??___fladd+3,f
 16791  0693  0865               	movf	??___fladd+3,w
 16792  0694  3A80               	xorlw	128
 16793  0695  00E6               	movwf	??___fladd+4
 16794  0696  3080               	movlw	128
 16795  0697  0266               	subwf	??___fladd+4,w
 16796  0698  1D03               	skipz
 16797  0699  2E9C               	goto	u9545
 16798  069A  301A               	movlw	26
 16799  069B  0264               	subwf	??___fladd+2,w
 16800  069C                     u9545:	
 16801  069C  1C03               	skipc
 16802  069D  2ED0               	goto	l7286
 16803  069E  0020               	movlb	0	; select bank0
 16804  069F  085D               	movf	___fladd@b+3,w
 16805  06A0  045C               	iorwf	___fladd@b+2,w
 16806  06A1  045B               	iorwf	___fladd@b+1,w
 16807  06A2  045A               	iorwf	___fladd@b,w
 16808  06A3  1903               	btfsc	3,2
 16809  06A4  2EA7               	goto	u9550
 16810  06A5  3001               	movlw	1
 16811  06A6  2EA8               	goto	u9560
 16812  06A7                     u9550:	
 16813  06A7  3000               	movlw	0
 16814  06A8                     u9560:	
 16815  06A8  00E2               	movwf	??___fladd
 16816  06A9  0862               	movf	??___fladd,w
 16817  06AA  00ED               	movwf	___fladd@grs
 16818  06AB  3000               	movlw	0
 16819  06AC  00DD               	movwf	___fladd@b+3
 16820  06AD  3000               	movlw	0
 16821  06AE  00DC               	movwf	___fladd@b+2
 16822  06AF  3000               	movlw	0
 16823  06B0  00DB               	movwf	___fladd@b+1
 16824  06B1  3000               	movlw	0
 16825  06B2  00DA               	movwf	___fladd@b
 16826  06B3  086B               	movf	___fladd@aexp,w
 16827  06B4  00E2               	movwf	??___fladd
 16828  06B5  0862               	movf	??___fladd,w
 16829  06B6  00EC               	movwf	___fladd@bexp
 16830  06B7  2ED5               	goto	l1160
 16831  06B8                     l1162:	
 16832  06B8  1C6D               	btfss	___fladd@grs,0
 16833  06B9  2EC0               	goto	l7276
 16834  06BA  366D               	lsrf	___fladd@grs,w
 16835  06BB  3801               	iorlw	1
 16836  06BC  00E2               	movwf	??___fladd
 16837  06BD  0862               	movf	??___fladd,w
 16838  06BE  00ED               	movwf	___fladd@grs
 16839  06BF  2EC2               	goto	l7278
 16840  06C0                     l7276:	
 16841  06C0  1003               	clrc
 16842  06C1  0CED               	rrf	___fladd@grs,f
 16843  06C2                     l7278:	
 16844  06C2  185A               	btfsc	___fladd@b,0
 16845  06C3  17ED               	bsf	___fladd@grs,7
 16846  06C4  3001               	movlw	1
 16847  06C5  00E2               	movwf	??___fladd
 16848  06C6                     u9595:	
 16849  06C6  37DD               	asrf	___fladd@b+3,f
 16850  06C7  0CDC               	rrf	___fladd@b+2,f
 16851  06C8  0CDB               	rrf	___fladd@b+1,f
 16852  06C9  0CDA               	rrf	___fladd@b,f
 16853  06CA  0BE2               	decfsz	??___fladd& (0+127),f
 16854  06CB  2EC6               	goto	u9595
 16855  06CC  3001               	movlw	1
 16856  06CD  00E2               	movwf	??___fladd
 16857  06CE  0862               	movf	??___fladd,w
 16858  06CF  07EC               	addwf	___fladd@bexp,f
 16859  06D0                     l7286:	
 16860  06D0  0020               	movlb	0	; select bank0
 16861  06D1  086B               	movf	___fladd@aexp,w
 16862  06D2  026C               	subwf	___fladd@bexp,w
 16863  06D3  1C03               	skipc
 16864  06D4  2EB8               	goto	l1162
 16865  06D5                     l1160:	
 16866  06D5  1B6A               	btfsc	___fladd@signs,6
 16867  06D6  2F06               	goto	l7312
 16868  06D7  086C               	movf	___fladd@bexp,w
 16869  06D8  1D03               	btfss	3,2
 16870  06D9  2EE3               	goto	l7294
 16871  06DA  3000               	movlw	0
 16872  06DB  00DD               	movwf	?___fladd+3
 16873  06DC  3000               	movlw	0
 16874  06DD  00DC               	movwf	?___fladd+2
 16875  06DE  3000               	movlw	0
 16876  06DF  00DB               	movwf	?___fladd+1
 16877  06E0  3000               	movlw	0
 16878  06E1  00DA               	movwf	?___fladd
 16879  06E2  0008               	return
 16880  06E3                     l7294:	
 16881  06E3  085E               	movf	___fladd@a,w
 16882  06E4  07DA               	addwf	___fladd@b,f
 16883  06E5  085F               	movf	___fladd@a+1,w
 16884  06E6  3DDB               	addwfc	___fladd@b+1,f
 16885  06E7  0860               	movf	___fladd@a+2,w
 16886  06E8  3DDC               	addwfc	___fladd@b+2,f
 16887  06E9  0861               	movf	___fladd@a+3,w
 16888  06EA  3DDD               	addwfc	___fladd@b+3,f
 16889  06EB  1C5D               	btfss	___fladd@b+3,0
 16890  06EC  2F80               	goto	l7346
 16891  06ED  1C6D               	btfss	___fladd@grs,0
 16892  06EE  2EF5               	goto	l7302
 16893  06EF  366D               	lsrf	___fladd@grs,w
 16894  06F0  3801               	iorlw	1
 16895  06F1  00E2               	movwf	??___fladd
 16896  06F2  0862               	movf	??___fladd,w
 16897  06F3  00ED               	movwf	___fladd@grs
 16898  06F4  2EF7               	goto	l7304
 16899  06F5                     l7302:	
 16900  06F5  1003               	clrc
 16901  06F6  0CED               	rrf	___fladd@grs,f
 16902  06F7                     l7304:	
 16903  06F7  185A               	btfsc	___fladd@b,0
 16904  06F8  17ED               	bsf	___fladd@grs,7
 16905  06F9  3001               	movlw	1
 16906  06FA  00E2               	movwf	??___fladd
 16907  06FB                     u9665:	
 16908  06FB  37DD               	asrf	___fladd@b+3,f
 16909  06FC  0CDC               	rrf	___fladd@b+2,f
 16910  06FD  0CDB               	rrf	___fladd@b+1,f
 16911  06FE  0CDA               	rrf	___fladd@b,f
 16912  06FF  0BE2               	decfsz	??___fladd& (0+127),f
 16913  0700  2EFB               	goto	u9665
 16914  0701  3001               	movlw	1
 16915  0702  00E2               	movwf	??___fladd
 16916  0703  0862               	movf	??___fladd,w
 16917  0704  07EC               	addwf	___fladd@bexp,f
 16918  0705  2F80               	goto	l7346
 16919  0706                     l7312:	
 16920  0706  085D               	movf	___fladd@b+3,w
 16921  0707  3A80               	xorlw	128
 16922  0708  00E2               	movwf	??___fladd
 16923  0709  0861               	movf	___fladd@a+3,w
 16924  070A  3A80               	xorlw	128
 16925  070B  0262               	subwf	??___fladd,w
 16926  070C  1D03               	skipz
 16927  070D  2F18               	goto	u9673
 16928  070E  0860               	movf	___fladd@a+2,w
 16929  070F  025C               	subwf	___fladd@b+2,w
 16930  0710  1D03               	skipz
 16931  0711  2F18               	goto	u9673
 16932  0712  085F               	movf	___fladd@a+1,w
 16933  0713  025B               	subwf	___fladd@b+1,w
 16934  0714  1D03               	skipz
 16935  0715  2F18               	goto	u9673
 16936  0716  085E               	movf	___fladd@a,w
 16937  0717  025A               	subwf	___fladd@b,w
 16938  0718                     u9673:	
 16939  0718  1803               	skipnc
 16940  0719  2F50               	goto	l7322
 16941  071A  30FF               	movlw	255
 16942  071B  00E2               	movwf	??___fladd
 16943  071C  30FF               	movlw	255
 16944  071D  00E3               	movwf	??___fladd+1
 16945  071E  30FF               	movlw	255
 16946  071F  00E4               	movwf	??___fladd+2
 16947  0720  30FF               	movlw	255
 16948  0721  00E5               	movwf	??___fladd+3
 16949  0722  085A               	movf	___fladd@b,w
 16950  0723  025E               	subwf	___fladd@a,w
 16951  0724  00E6               	movwf	??___fladd+4
 16952  0725  085B               	movf	___fladd@b+1,w
 16953  0726  3B5F               	subwfb	___fladd@a+1,w
 16954  0727  00E7               	movwf	??___fladd+5
 16955  0728  085C               	movf	___fladd@b+2,w
 16956  0729  3B60               	subwfb	___fladd@a+2,w
 16957  072A  00E8               	movwf	??___fladd+6
 16958  072B  085D               	movf	___fladd@b+3,w
 16959  072C  3B61               	subwfb	___fladd@a+3,w
 16960  072D  00E9               	movwf	??___fladd+7
 16961  072E  0866               	movf	??___fladd+4,w
 16962  072F  07E2               	addwf	??___fladd,f
 16963  0730  0867               	movf	??___fladd+5,w
 16964  0731  3DE3               	addwfc	??___fladd+1,f
 16965  0732  0868               	movf	??___fladd+6,w
 16966  0733  3DE4               	addwfc	??___fladd+2,f
 16967  0734  0869               	movf	??___fladd+7,w
 16968  0735  3DE5               	addwfc	??___fladd+3,f
 16969  0736  0865               	movf	??___fladd+3,w
 16970  0737  00DD               	movwf	___fladd@b+3
 16971  0738  0864               	movf	??___fladd+2,w
 16972  0739  00DC               	movwf	___fladd@b+2
 16973  073A  0863               	movf	??___fladd+1,w
 16974  073B  00DB               	movwf	___fladd@b+1
 16975  073C  0862               	movf	??___fladd,w
 16976  073D  00DA               	movwf	___fladd@b
 16977  073E  3080               	movlw	128
 16978  073F  00E2               	movwf	??___fladd
 16979  0740  0862               	movf	??___fladd,w
 16980  0741  06EA               	xorwf	___fladd@signs,f
 16981  0742  09ED               	comf	___fladd@grs,f
 16982  0743  0AED               	incf	___fladd@grs,f
 16983  0744  086D               	movf	___fladd@grs,w
 16984  0745  1D03               	btfss	3,2
 16985  0746  2F58               	goto	l1177
 16986  0747  3001               	movlw	1
 16987  0748  07DA               	addwf	___fladd@b,f
 16988  0749  3000               	movlw	0
 16989  074A  3DDB               	addwfc	___fladd@b+1,f
 16990  074B  3000               	movlw	0
 16991  074C  3DDC               	addwfc	___fladd@b+2,f
 16992  074D  3000               	movlw	0
 16993  074E  3DDD               	addwfc	___fladd@b+3,f
 16994  074F  2F58               	goto	l1177
 16995  0750                     l7322:	
 16996  0750  085E               	movf	___fladd@a,w
 16997  0751  02DA               	subwf	___fladd@b,f
 16998  0752  085F               	movf	___fladd@a+1,w
 16999  0753  3BDB               	subwfb	___fladd@b+1,f
 17000  0754  0860               	movf	___fladd@a+2,w
 17001  0755  3BDC               	subwfb	___fladd@b+2,f
 17002  0756  0861               	movf	___fladd@a+3,w
 17003  0757  3BDD               	subwfb	___fladd@b+3,f
 17004  0758                     l1177:	
 17005  0758  085D               	movf	___fladd@b+3,w
 17006  0759  045C               	iorwf	___fladd@b+2,w
 17007  075A  045B               	iorwf	___fladd@b+1,w
 17008  075B  045A               	iorwf	___fladd@b,w
 17009  075C  1D03               	skipz
 17010  075D  2F7E               	goto	l7344
 17011  075E  086D               	movf	___fladd@grs,w
 17012  075F  1D03               	btfss	3,2
 17013  0760  2F7E               	goto	l7344
 17014  0761  3000               	movlw	0
 17015  0762  00DD               	movwf	?___fladd+3
 17016  0763  3000               	movlw	0
 17017  0764  00DC               	movwf	?___fladd+2
 17018  0765  3000               	movlw	0
 17019  0766  00DB               	movwf	?___fladd+1
 17020  0767  3000               	movlw	0
 17021  0768  00DA               	movwf	?___fladd
 17022  0769  0008               	return
 17023  076A                     l7330:	
 17024  076A  3001               	movlw	1
 17025  076B                     u9715:	
 17026  076B  35DA               	lslf	___fladd@b,f
 17027  076C  0DDB               	rlf	___fladd@b+1,f
 17028  076D  0DDC               	rlf	___fladd@b+2,f
 17029  076E  0DDD               	rlf	___fladd@b+3,f
 17030  076F  0B89               	decfsz	9,f
 17031  0770  2F6B               	goto	u9715
 17032  0771  1BED               	btfsc	___fladd@grs,7
 17033  0772  145A               	bsf	___fladd@b,0
 17034  0773  1C6D               	btfss	___fladd@grs,0
 17035  0774  2F77               	goto	l7338
 17036  0775  1403               	setc
 17037  0776  2F78               	goto	L4
 17038  0777                     l7338:	
 17039  0777  1003               	clrc
 17040  0778                     L4:	
 17041  0778  0DED               	rlf	___fladd@grs,f
 17042  0779  086C               	movf	___fladd@bexp,w
 17043  077A  1903               	btfsc	3,2
 17044  077B  2F7E               	goto	l7344
 17045  077C  3001               	movlw	1
 17046  077D  02EC               	subwf	___fladd@bexp,f
 17047  077E                     l7344:	
 17048  077E  1FDC               	btfss	___fladd@b+2,7
 17049  077F  2F6A               	goto	l7330
 17050  0780                     l7346:	
 17051  0780  01EB               	clrf	___fladd@aexp
 17052  0781  1FED               	btfss	___fladd@grs,7
 17053  0782  2F8B               	goto	l7356
 17054  0783  086D               	movf	___fladd@grs,w
 17055  0784  397F               	andlw	127
 17056  0785  1903               	btfsc	3,2
 17057  0786  185A               	btfsc	___fladd@b,0
 17058  0787  2F89               	goto	l7352
 17059  0788  2F8B               	goto	l7356
 17060  0789                     l7352:	
 17061  0789  01EB               	clrf	___fladd@aexp
 17062  078A  0AEB               	incf	___fladd@aexp,f
 17063  078B                     l7356:	
 17064  078B  086B               	movf	___fladd@aexp,w
 17065  078C  1903               	btfsc	3,2
 17066  078D  2FB7               	goto	l1190
 17067  078E  3001               	movlw	1
 17068  078F  07DA               	addwf	___fladd@b,f
 17069  0790  3000               	movlw	0
 17070  0791  3DDB               	addwfc	___fladd@b+1,f
 17071  0792  3000               	movlw	0
 17072  0793  3DDC               	addwfc	___fladd@b+2,f
 17073  0794  3000               	movlw	0
 17074  0795  3DDD               	addwfc	___fladd@b+3,f
 17075  0796  1C5D               	btfss	___fladd@b+3,0
 17076  0797  2FB7               	goto	l1190
 17077  0798  085A               	movf	___fladd@b,w
 17078  0799  00E2               	movwf	??___fladd
 17079  079A  085B               	movf	___fladd@b+1,w
 17080  079B  00E3               	movwf	??___fladd+1
 17081  079C  085C               	movf	___fladd@b+2,w
 17082  079D  00E4               	movwf	??___fladd+2
 17083  079E  085D               	movf	___fladd@b+3,w
 17084  079F  00E5               	movwf	??___fladd+3
 17085  07A0  3001               	movlw	1
 17086  07A1  00E6               	movwf	??___fladd+4
 17087  07A2                     u9815:	
 17088  07A2  37E5               	asrf	??___fladd+3,f
 17089  07A3  0CE4               	rrf	??___fladd+2,f
 17090  07A4  0CE3               	rrf	??___fladd+1,f
 17091  07A5  0CE2               	rrf	??___fladd,f
 17092  07A6  0BE6               	decfsz	??___fladd+4,f
 17093  07A7  2FA2               	goto	u9815
 17094  07A8  0865               	movf	??___fladd+3,w
 17095  07A9  00DD               	movwf	___fladd@b+3
 17096  07AA  0864               	movf	??___fladd+2,w
 17097  07AB  00DC               	movwf	___fladd@b+2
 17098  07AC  0863               	movf	??___fladd+1,w
 17099  07AD  00DB               	movwf	___fladd@b+1
 17100  07AE  0862               	movf	??___fladd,w
 17101  07AF  00DA               	movwf	___fladd@b
 17102  07B0  0A6C               	incf	___fladd@bexp,w
 17103  07B1  1903               	btfsc	3,2
 17104  07B2  2FB7               	goto	l1190
 17105  07B3  3001               	movlw	1
 17106  07B4  00E2               	movwf	??___fladd
 17107  07B5  0862               	movf	??___fladd,w
 17108  07B6  07EC               	addwf	___fladd@bexp,f
 17109  07B7                     l1190:	
 17110  07B7  0A6C               	incf	___fladd@bexp,w
 17111  07B8  1D03               	btfss	3,2
 17112  07B9  086C               	movf	___fladd@bexp,w
 17113  07BA  1D03               	btfss	3,2
 17114  07BB  2FC7               	goto	l7374
 17115  07BC  3000               	movlw	0
 17116  07BD  00DD               	movwf	___fladd@b+3
 17117  07BE  3000               	movlw	0
 17118  07BF  00DC               	movwf	___fladd@b+2
 17119  07C0  3000               	movlw	0
 17120  07C1  00DB               	movwf	___fladd@b+1
 17121  07C2  3000               	movlw	0
 17122  07C3  00DA               	movwf	___fladd@b
 17123  07C4  086C               	movf	___fladd@bexp,w
 17124  07C5  1903               	btfsc	3,2
 17125  07C6  01EA               	clrf	___fladd@signs
 17126  07C7                     l7374:	
 17127  07C7  1C6C               	btfss	___fladd@bexp,0
 17128  07C8  2FCB               	goto	l7378
 17129  07C9  17DC               	bsf	___fladd@b+2,7
 17130  07CA  2FCF               	goto	l1198
 17131  07CB                     l7378:	
 17132  07CB  307F               	movlw	127
 17133  07CC  00E2               	movwf	??___fladd
 17134  07CD  0862               	movf	??___fladd,w
 17135  07CE  05DC               	andwf	___fladd@b+2,f
 17136  07CF                     l1198:	
 17137  07CF  366C               	lsrf	___fladd@bexp,w
 17138  07D0  00E2               	movwf	??___fladd
 17139  07D1  0862               	movf	??___fladd,w
 17140  07D2  00DD               	movwf	___fladd@b+3
 17141  07D3  1FEA               	btfss	___fladd@signs,7
 17142  07D4  0008               	return
 17143  07D5  17DD               	bsf	___fladd@b+3,7
 17144  07D6  0008               	return
 17145  07D7                     __end_of___fladd:	
 17146                           
 17147                           	psect	text53
 17148  2DA2                     __ptext53:	
 17149 ;; *************** function _updateCurrent *****************
 17150 ;; Defined at:
 17151 ;;		line 186 in file "BQ76920.c"
 17152 ;; Parameters:    Size  Location     Type
 17153 ;;		None
 17154 ;; Auto vars:     Size  Location     Type
 17155 ;;  adcVal          2   21[BANK1 ] int 
 17156 ;;  sys_stat        1    0        struct regSYS_STAT
 17157 ;; Return value:  Size  Location     Type
 17158 ;;                  1    wreg      void 
 17159 ;; Registers used:
 17160 ;;		wreg, status,2, status,0, pclath, cstack
 17161 ;; Tracked objects:
 17162 ;;		On entry : 0/0
 17163 ;;		On exit  : 0/0
 17164 ;;		Unchanged: 0/0
 17165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17167 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17168 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17169 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17170 ;;Total ram usage:        6 bytes
 17171 ;; Hardware stack levels used:    1
 17172 ;; Hardware stack levels required when called:    3
 17173 ;; This function calls:
 17174 ;;		_I2C_writeRegister
 17175 ;;		___fldiv
 17176 ;;		___flmul
 17177 ;;		___flneg
 17178 ;;		___fltol
 17179 ;;		___xxtofl
 17180 ;;		_readRegister
 17181 ;; This function is called by:
 17182 ;;		_AFE_UPDATE
 17183 ;; This function uses a non-reentrant model
 17184 ;;
 17185                           
 17186                           
 17187                           ;psect for function _updateCurrent
 17188  2DA2                     _updateCurrent:	
 17189                           
 17190                           ;incstack = 0
 17191                           ; Regs used in _updateCurrent: [wreg+status,2+status,0+pclath+cstack]
 17192  2DA2  3018               	movlw	24
 17193  2DA3  00F5               	movwf	readRegister@slaveAddress
 17194  2DA4  3000               	movlw	0
 17195  2DA5  00F6               	movwf	readRegister@slaveAddress+1
 17196  2DA6  3000               	movlw	0
 17197  2DA7  00F7               	movwf	readRegister@regAddress
 17198  2DA8  00F8               	movwf	readRegister@regAddress+1
 17199  2DA9  31B6  2675  31AD   	fcall	_readRegister
 17200                           
 17201                           ;BQ76920.c: 193:     adcVal = (readRegister(0x18, 0x32) << 8)| readRegister(0x18, 0x33);
 17202  2DAC  3018               	movlw	24
 17203  2DAD  00F5               	movwf	readRegister@slaveAddress
 17204  2DAE  3000               	movlw	0
 17205  2DAF  00F6               	movwf	readRegister@slaveAddress+1
 17206  2DB0  3032               	movlw	50
 17207  2DB1  00F7               	movwf	readRegister@regAddress
 17208  2DB2  3000               	movlw	0
 17209  2DB3  00F8               	movwf	readRegister@regAddress+1
 17210  2DB4  31B6  2675  31AD   	fcall	_readRegister
 17211  2DB7  0875               	movf	?_readRegister,w
 17212  2DB8  0021               	movlb	1	; select bank1
 17213  2DB9  00B1               	movwf	??_updateCurrent^(0+128)
 17214  2DBA  0876               	movf	?_readRegister+1,w
 17215  2DBB  00B2               	movwf	(??_updateCurrent^(0+128)+1)
 17216  2DBC  0831               	movf	??_updateCurrent^(0+128),w
 17217  2DBD  00B2               	movwf	(??_updateCurrent^(0+128)+1)
 17218  2DBE  01B1               	clrf	??_updateCurrent^(0+128)
 17219  2DBF  3018               	movlw	24
 17220  2DC0  00F5               	movwf	readRegister@slaveAddress
 17221  2DC1  3000               	movlw	0
 17222  2DC2  00F6               	movwf	readRegister@slaveAddress+1
 17223  2DC3  3033               	movlw	51
 17224  2DC4  00F7               	movwf	readRegister@regAddress
 17225  2DC5  3000               	movlw	0
 17226  2DC6  00F8               	movwf	readRegister@regAddress+1
 17227  2DC7  31B6  2675  31AD   	fcall	_readRegister
 17228  2DCA  0875               	movf	?_readRegister,w
 17229  2DCB  0021               	movlb	1	; select bank1
 17230  2DCC  0431               	iorwf	??_updateCurrent^(0+128),w
 17231  2DCD  00B5               	movwf	updateCurrent@adcVal^(0+128)
 17232  2DCE  0876               	movf	?_readRegister+1,w
 17233  2DCF  0432               	iorwf	(??_updateCurrent+1)^(0+128),w
 17234  2DD0  00B6               	movwf	(updateCurrent@adcVal+1)^(0+128)
 17235                           
 17236                           ;BQ76920.c: 194:     batCurrent = -(adcVal * 8.44 / 19.6);
 17237  2DD1  0835               	movf	updateCurrent@adcVal^(0+128),w
 17238  2DD2  00F1               	movwf	___xxtofl@val
 17239  2DD3  0836               	movf	(updateCurrent@adcVal+1)^(0+128),w
 17240  2DD4  00F2               	movwf	___xxtofl@val+1
 17241  2DD5  0D89               	rlf	9,f
 17242  2DD6  3B89               	subwfb	9,f
 17243  2DD7  0989               	comf	9,f
 17244  2DD8  00F3               	movwf	___xxtofl@val+2
 17245  2DD9  00F4               	movwf	___xxtofl@val+3
 17246  2DDA  3001               	movlw	1
 17247  2DDB  31AB  23AF  31AD   	fcall	___xxtofl
 17248  2DDE  0874               	movf	?___xxtofl+3,w
 17249  2DDF  0020               	movlb	0	; select bank0
 17250  2DE0  00AD               	movwf	___flmul@a+3
 17251  2DE1  0873               	movf	?___xxtofl+2,w
 17252  2DE2  00AC               	movwf	___flmul@a+2
 17253  2DE3  0872               	movf	?___xxtofl+1,w
 17254  2DE4  00AB               	movwf	___flmul@a+1
 17255  2DE5  0871               	movf	?___xxtofl,w
 17256  2DE6  00AA               	movwf	___flmul@a
 17257  2DE7  3041               	movlw	65
 17258  2DE8  00A9               	movwf	___flmul@b+3
 17259  2DE9  3007               	movlw	7
 17260  2DEA  00A8               	movwf	___flmul@b+2
 17261  2DEB  300A               	movlw	10
 17262  2DEC  00A7               	movwf	___flmul@b+1
 17263  2DED  303D               	movlw	61
 17264  2DEE  00A6               	movwf	___flmul@b
 17265  2DEF  3190  2023  31AD   	fcall	___flmul
 17266  2DF2  0020               	movlb	0	; select bank0
 17267  2DF3  0829               	movf	?___flmul+3,w
 17268  2DF4  00C7               	movwf	___fldiv@b+3
 17269  2DF5  0828               	movf	?___flmul+2,w
 17270  2DF6  00C6               	movwf	___fldiv@b+2
 17271  2DF7  0827               	movf	?___flmul+1,w
 17272  2DF8  00C5               	movwf	___fldiv@b+1
 17273  2DF9  0826               	movf	?___flmul,w
 17274  2DFA  00C4               	movwf	___fldiv@b
 17275  2DFB  3041               	movlw	65
 17276  2DFC  00C3               	movwf	___fldiv@a+3
 17277  2DFD  309C               	movlw	156
 17278  2DFE  00C2               	movwf	___fldiv@a+2
 17279  2DFF  30CC               	movlw	204
 17280  2E00  00C1               	movwf	___fldiv@a+1
 17281  2E01  30CD               	movlw	205
 17282  2E02  00C0               	movwf	___fldiv@a
 17283  2E03  319B  2353  31AD   	fcall	___fldiv
 17284  2E06  0020               	movlb	0	; select bank0
 17285  2E07  0843               	movf	?___fldiv+3,w
 17286  2E08  00DD               	movwf	___flneg@f1+3
 17287  2E09  0842               	movf	?___fldiv+2,w
 17288  2E0A  00DC               	movwf	___flneg@f1+2
 17289  2E0B  0841               	movf	?___fldiv+1,w
 17290  2E0C  00DB               	movwf	___flneg@f1+1
 17291  2E0D  0840               	movf	?___fldiv,w
 17292  2E0E  00DA               	movwf	___flneg@f1
 17293  2E0F  31B3  239C  31AD   	fcall	___flneg
 17294  2E12  0020               	movlb	0	; select bank0
 17295  2E13  085D               	movf	?___flneg+3,w
 17296  2E14  0021               	movlb	1	; select bank1
 17297  2E15  00AB               	movwf	(___fltol@f1+3)^(0+128)
 17298  2E16  0020               	movlb	0	; select bank0
 17299  2E17  085C               	movf	?___flneg+2,w
 17300  2E18  0021               	movlb	1	; select bank1
 17301  2E19  00AA               	movwf	(___fltol@f1+2)^(0+128)
 17302  2E1A  0020               	movlb	0	; select bank0
 17303  2E1B  085B               	movf	?___flneg+1,w
 17304  2E1C  0021               	movlb	1	; select bank1
 17305  2E1D  00A9               	movwf	(___fltol@f1+1)^(0+128)
 17306  2E1E  0020               	movlb	0	; select bank0
 17307  2E1F  085A               	movf	?___flneg,w
 17308  2E20  0021               	movlb	1	; select bank1
 17309  2E21  00A8               	movwf	___fltol@f1^(0+128)
 17310  2E22  31A8  2071  31AD   	fcall	___fltol
 17311  2E25  0021               	movlb	1	; select bank1
 17312  2E26  082B               	movf	(?___fltol+3)^(0+128),w
 17313  2E27  0023               	movlb	3	; select bank3
 17314  2E28  00BD               	movwf	(_batCurrent+3)^(0+384)
 17315  2E29  0021               	movlb	1	; select bank1
 17316  2E2A  082A               	movf	(?___fltol+2)^(0+128),w
 17317  2E2B  0023               	movlb	3	; select bank3
 17318  2E2C  00BC               	movwf	(_batCurrent+2)^(0+384)
 17319  2E2D  0021               	movlb	1	; select bank1
 17320  2E2E  0829               	movf	(?___fltol+1)^(0+128),w
 17321  2E2F  0023               	movlb	3	; select bank3
 17322  2E30  00BB               	movwf	(_batCurrent+1)^(0+384)
 17323  2E31  0021               	movlb	1	; select bank1
 17324  2E32  0828               	movf	?___fltol^(0+128),w
 17325  2E33  0023               	movlb	3	; select bank3
 17326  2E34  00BA               	movwf	_batCurrent^(0+384)
 17327                           
 17328                           ;BQ76920.c: 196:     if (batCurrent > -10 && batCurrent < 10)
 17329  2E35  1FBD               	btfss	(_batCurrent+3)^(0+384),7
 17330  2E36  2E41               	goto	l8198
 17331  2E37  30F7               	movlw	247
 17332  2E38  023A               	subwf	_batCurrent^(0+384),w
 17333  2E39  30FF               	movlw	255
 17334  2E3A  3B3B               	subwfb	(_batCurrent+1)^(0+384),w
 17335  2E3B  30FF               	movlw	255
 17336  2E3C  3B3C               	subwfb	(_batCurrent+2)^(0+384),w
 17337  2E3D  30FF               	movlw	255
 17338  2E3E  3B3D               	subwfb	(_batCurrent+3)^(0+384),w
 17339  2E3F  1C03               	btfss	3,0
 17340  2E40  2E58               	goto	l8202
 17341  2E41                     l8198:	
 17342  2E41  1BBD               	btfsc	(_batCurrent+3)^(0+384),7
 17343  2E42  2E50               	goto	l8200
 17344  2E43  083D               	movf	(_batCurrent+3)^(0+384),w
 17345  2E44  1D03               	btfss	3,2
 17346  2E45  2E58               	goto	l8202
 17347  2E46  083C               	movf	(_batCurrent+2)^(0+384),w
 17348  2E47  1D03               	btfss	3,2
 17349  2E48  2E58               	goto	l8202
 17350  2E49  083B               	movf	(_batCurrent+1)^(0+384),w
 17351  2E4A  1D03               	btfss	3,2
 17352  2E4B  2E58               	goto	l8202
 17353  2E4C  300A               	movlw	10
 17354  2E4D  023A               	subwf	_batCurrent^(0+384),w
 17355  2E4E  1803               	btfsc	3,0
 17356  2E4F  2E58               	goto	l8202
 17357  2E50                     l8200:	
 17358                           
 17359                           ;BQ76920.c: 197:     {;BQ76920.c: 198:       batCurrent = 0;
 17360  2E50  3000               	movlw	0
 17361  2E51  00BD               	movwf	(_batCurrent+3)^(0+384)
 17362  2E52  3000               	movlw	0
 17363  2E53  00BC               	movwf	(_batCurrent+2)^(0+384)
 17364  2E54  3000               	movlw	0
 17365  2E55  00BB               	movwf	(_batCurrent+1)^(0+384)
 17366  2E56  3000               	movlw	0
 17367  2E57  00BA               	movwf	_batCurrent^(0+384)
 17368  2E58                     l8202:	
 17369                           
 17370                           ;BQ76920.c: 201:     I2C_writeRegister(0x18, 0x00, 0x80);
 17371  2E58  3018               	movlw	24
 17372  2E59  00F5               	movwf	I2C_writeRegister@slaveAddress
 17373  2E5A  3000               	movlw	0
 17374  2E5B  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 17375  2E5C  3000               	movlw	0
 17376  2E5D  00F7               	movwf	I2C_writeRegister@regAddress
 17377  2E5E  00F8               	movwf	I2C_writeRegister@regAddress+1
 17378  2E5F  3080               	movlw	128
 17379  2E60  00F9               	movwf	I2C_writeRegister@data
 17380  2E61  3000               	movlw	0
 17381  2E62  00FA               	movwf	I2C_writeRegister@data+1
 17382  2E63  31B4  24FA         	fcall	_I2C_writeRegister
 17383  2E65  0008               	return
 17384  2E66                     __end_of_updateCurrent:	
 17385                           
 17386                           	psect	text54
 17387  2BAF                     __ptext54:	
 17388 ;; *************** function ___xxtofl *****************
 17389 ;; Defined at:
 17390 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 17391 ;; Parameters:    Size  Location     Type
 17392 ;;  sign            1    wreg     unsigned char 
 17393 ;;  val             4    1[COMMON] long 
 17394 ;; Auto vars:     Size  Location     Type
 17395 ;;  sign            1    0[BANK0 ] unsigned char 
 17396 ;;  arg             4    2[BANK0 ] unsigned long 
 17397 ;;  exp             1    1[BANK0 ] unsigned char 
 17398 ;; Return value:  Size  Location     Type
 17399 ;;                  4    1[COMMON] unsigned char 
 17400 ;; Registers used:
 17401 ;;		wreg, status,2, status,0
 17402 ;; Tracked objects:
 17403 ;;		On entry : 0/0
 17404 ;;		On exit  : 0/0
 17405 ;;		Unchanged: 0/0
 17406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17407 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17408 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17409 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17410 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17411 ;;Total ram usage:       14 bytes
 17412 ;; Hardware stack levels used:    1
 17413 ;; Hardware stack levels required when called:    1
 17414 ;; This function calls:
 17415 ;;		Nothing
 17416 ;; This function is called by:
 17417 ;;		_setShortCircuitProtection
 17418 ;;		_setOverCurrentDischargeProtection
 17419 ;;		_updateCurrent
 17420 ;;		_updateVoltages
 17421 ;;		_updateTemperatures
 17422 ;;		_logf
 17423 ;;		_AFE_getSetShortCircuitCurrent
 17424 ;;		_AFE_getOverCurrentDischargeCurrent
 17425 ;; This function uses a non-reentrant model
 17426 ;;
 17427                           
 17428                           
 17429                           ;psect for function ___xxtofl
 17430  2BAF                     ___xxtofl:	
 17431                           
 17432                           ;incstack = 0
 17433                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 17434                           ;___xxtofl@sign stored from wreg
 17435  2BAF  0020               	movlb	0	; select bank0
 17436  2BB0  00A0               	movwf	___xxtofl@sign
 17437  2BB1  0820               	movf	___xxtofl@sign,w
 17438  2BB2  1D03               	btfss	3,2
 17439  2BB3  1FF4               	btfss	___xxtofl@val+3,7
 17440  2BB4  2BC5               	goto	l7722
 17441  2BB5  0971               	comf	___xxtofl@val,w
 17442  2BB6  00A2               	movwf	___xxtofl@arg
 17443  2BB7  0972               	comf	___xxtofl@val+1,w
 17444  2BB8  00A3               	movwf	___xxtofl@arg+1
 17445  2BB9  0973               	comf	___xxtofl@val+2,w
 17446  2BBA  00A4               	movwf	___xxtofl@arg+2
 17447  2BBB  0974               	comf	___xxtofl@val+3,w
 17448  2BBC  00A5               	movwf	___xxtofl@arg+3
 17449  2BBD  0AA2               	incf	___xxtofl@arg,f
 17450  2BBE  1903               	skipnz
 17451  2BBF  0AA3               	incf	___xxtofl@arg+1,f
 17452  2BC0  1903               	skipnz
 17453  2BC1  0AA4               	incf	___xxtofl@arg+2,f
 17454  2BC2  1903               	skipnz
 17455  2BC3  0AA5               	incf	___xxtofl@arg+3,f
 17456  2BC4  2BCD               	goto	l1290
 17457  2BC5                     l7722:	
 17458  2BC5  0874               	movf	___xxtofl@val+3,w
 17459  2BC6  00A5               	movwf	___xxtofl@arg+3
 17460  2BC7  0873               	movf	___xxtofl@val+2,w
 17461  2BC8  00A4               	movwf	___xxtofl@arg+2
 17462  2BC9  0872               	movf	___xxtofl@val+1,w
 17463  2BCA  00A3               	movwf	___xxtofl@arg+1
 17464  2BCB  0871               	movf	___xxtofl@val,w
 17465  2BCC  00A2               	movwf	___xxtofl@arg
 17466  2BCD                     l1290:	
 17467  2BCD  0874               	movf	___xxtofl@val+3,w
 17468  2BCE  0473               	iorwf	___xxtofl@val+2,w
 17469  2BCF  0472               	iorwf	___xxtofl@val+1,w
 17470  2BD0  0471               	iorwf	___xxtofl@val,w
 17471  2BD1  1D03               	skipz
 17472  2BD2  2BDC               	goto	l7728
 17473  2BD3  3000               	movlw	0
 17474  2BD4  00F4               	movwf	?___xxtofl+3
 17475  2BD5  3000               	movlw	0
 17476  2BD6  00F3               	movwf	?___xxtofl+2
 17477  2BD7  3000               	movlw	0
 17478  2BD8  00F2               	movwf	?___xxtofl+1
 17479  2BD9  3000               	movlw	0
 17480  2BDA  00F1               	movwf	?___xxtofl
 17481  2BDB  0008               	return
 17482  2BDC                     l7728:	
 17483  2BDC  3096               	movlw	150
 17484  2BDD  00F5               	movwf	??___xxtofl
 17485  2BDE  0875               	movf	??___xxtofl,w
 17486  2BDF  00A1               	movwf	___xxtofl@exp
 17487  2BE0                     l7732:	
 17488  2BE0  30FE               	movlw	254
 17489  2BE1  0525               	andwf	___xxtofl@arg+3,w
 17490  2BE2  1903               	btfsc	3,2
 17491  2BE3  2C03               	goto	l1296
 17492  2BE4  3001               	movlw	1
 17493  2BE5  00F5               	movwf	??___xxtofl
 17494  2BE6  0875               	movf	??___xxtofl,w
 17495  2BE7  07A1               	addwf	___xxtofl@exp,f
 17496  2BE8  3001               	movlw	1
 17497  2BE9                     u10565:	
 17498  2BE9  36A5               	lsrf	___xxtofl@arg+3,f
 17499  2BEA  0CA4               	rrf	___xxtofl@arg+2,f
 17500  2BEB  0CA3               	rrf	___xxtofl@arg+1,f
 17501  2BEC  0CA2               	rrf	___xxtofl@arg,f
 17502  2BED  0B89               	decfsz	9,f
 17503  2BEE  2BE9               	goto	u10565
 17504  2BEF  2BE0               	goto	l7732
 17505  2BF0                     l7734:	
 17506  2BF0  3001               	movlw	1
 17507  2BF1  00F5               	movwf	??___xxtofl
 17508  2BF2  0875               	movf	??___xxtofl,w
 17509  2BF3  07A1               	addwf	___xxtofl@exp,f
 17510  2BF4  3001               	movlw	1
 17511  2BF5  07A2               	addwf	___xxtofl@arg,f
 17512  2BF6  3000               	movlw	0
 17513  2BF7  3DA3               	addwfc	___xxtofl@arg+1,f
 17514  2BF8  3000               	movlw	0
 17515  2BF9  3DA4               	addwfc	___xxtofl@arg+2,f
 17516  2BFA  3000               	movlw	0
 17517  2BFB  3DA5               	addwfc	___xxtofl@arg+3,f
 17518  2BFC  3001               	movlw	1
 17519  2BFD                     u10585:	
 17520  2BFD  36A5               	lsrf	___xxtofl@arg+3,f
 17521  2BFE  0CA4               	rrf	___xxtofl@arg+2,f
 17522  2BFF  0CA3               	rrf	___xxtofl@arg+1,f
 17523  2C00  0CA2               	rrf	___xxtofl@arg,f
 17524  2C01  0B89               	decfsz	9,f
 17525  2C02  2BFD               	goto	u10585
 17526  2C03                     l1296:	
 17527  2C03  30FF               	movlw	255
 17528  2C04  0525               	andwf	___xxtofl@arg+3,w
 17529  2C05  1903               	btfsc	3,2
 17530  2C06  2C15               	goto	l7742
 17531  2C07  2BF0               	goto	l7734
 17532  2C08                     l7744:	
 17533  2C08  3002               	movlw	2
 17534  2C09  0221               	subwf	___xxtofl@exp,w
 17535  2C0A  1C03               	btfss	3,0
 17536  2C0B  2C17               	goto	l1303
 17537  2C0C  3001               	movlw	1
 17538  2C0D  02A1               	subwf	___xxtofl@exp,f
 17539  2C0E  3001               	movlw	1
 17540  2C0F                     u10605:	
 17541  2C0F  35A2               	lslf	___xxtofl@arg,f
 17542  2C10  0DA3               	rlf	___xxtofl@arg+1,f
 17543  2C11  0DA4               	rlf	___xxtofl@arg+2,f
 17544  2C12  0DA5               	rlf	___xxtofl@arg+3,f
 17545  2C13  0B89               	decfsz	9,f
 17546  2C14  2C0F               	goto	u10605
 17547  2C15                     l7742:	
 17548  2C15  1FA4               	btfss	___xxtofl@arg+2,7
 17549  2C16  2C08               	goto	l7744
 17550  2C17                     l1303:	
 17551  2C17  1821               	btfsc	___xxtofl@exp,0
 17552  2C18  2C21               	goto	l1304
 17553  2C19  30FF               	movlw	255
 17554  2C1A  05A2               	andwf	___xxtofl@arg,f
 17555  2C1B  30FF               	movlw	255
 17556  2C1C  05A3               	andwf	___xxtofl@arg+1,f
 17557  2C1D  307F               	movlw	127
 17558  2C1E  05A4               	andwf	___xxtofl@arg+2,f
 17559  2C1F  30FF               	movlw	255
 17560  2C20  05A5               	andwf	___xxtofl@arg+3,f
 17561  2C21                     l1304:	
 17562  2C21  1003               	clrc
 17563  2C22  0CA1               	rrf	___xxtofl@exp,f
 17564  2C23  0821               	movf	___xxtofl@exp,w
 17565  2C24  00F5               	movwf	??___xxtofl
 17566  2C25  01F6               	clrf	??___xxtofl+1
 17567  2C26  01F7               	clrf	??___xxtofl+2
 17568  2C27  01F8               	clrf	??___xxtofl+3
 17569  2C28  3018               	movlw	24
 17570  2C29                     u10645:	
 17571  2C29  35F5               	lslf	??___xxtofl,f
 17572  2C2A  0DF6               	rlf	??___xxtofl+1,f
 17573  2C2B  0DF7               	rlf	??___xxtofl+2,f
 17574  2C2C  0DF8               	rlf	??___xxtofl+3,f
 17575  2C2D  0B89               	decfsz	9,f
 17576  2C2E  2C29               	goto	u10645
 17577  2C2F  0875               	movf	??___xxtofl,w
 17578  2C30  04A2               	iorwf	___xxtofl@arg,f
 17579  2C31  0876               	movf	??___xxtofl+1,w
 17580  2C32  04A3               	iorwf	___xxtofl@arg+1,f
 17581  2C33  0877               	movf	??___xxtofl+2,w
 17582  2C34  04A4               	iorwf	___xxtofl@arg+2,f
 17583  2C35  0878               	movf	??___xxtofl+3,w
 17584  2C36  04A5               	iorwf	___xxtofl@arg+3,f
 17585  2C37  0820               	movf	___xxtofl@sign,w
 17586  2C38  1D03               	btfss	3,2
 17587  2C39  1FF4               	btfss	___xxtofl@val+3,7
 17588  2C3A  2C3C               	goto	l7756
 17589  2C3B  17A5               	bsf	___xxtofl@arg+3,7
 17590  2C3C                     l7756:	
 17591  2C3C  0825               	movf	___xxtofl@arg+3,w
 17592  2C3D  00F4               	movwf	?___xxtofl+3
 17593  2C3E  0824               	movf	___xxtofl@arg+2,w
 17594  2C3F  00F3               	movwf	?___xxtofl+2
 17595  2C40  0823               	movf	___xxtofl@arg+1,w
 17596  2C41  00F2               	movwf	?___xxtofl+1
 17597  2C42  0822               	movf	___xxtofl@arg,w
 17598  2C43  00F1               	movwf	?___xxtofl
 17599  2C44  0008               	return
 17600  2C45                     __end_of___xxtofl:	
 17601                           
 17602                           	psect	text55
 17603  2871                     __ptext55:	
 17604 ;; *************** function ___fltol *****************
 17605 ;; Defined at:
 17606 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 17607 ;; Parameters:    Size  Location     Type
 17608 ;;  f1              4    8[BANK1 ] unsigned char 
 17609 ;; Auto vars:     Size  Location     Type
 17610 ;;  exp1            1   11[COMMON] unsigned char 
 17611 ;;  sign1           1   10[COMMON] unsigned char 
 17612 ;; Return value:  Size  Location     Type
 17613 ;;                  4    8[BANK1 ] long 
 17614 ;; Registers used:
 17615 ;;		wreg, status,2, status,0
 17616 ;; Tracked objects:
 17617 ;;		On entry : 0/0
 17618 ;;		On exit  : 0/0
 17619 ;;		Unchanged: 0/0
 17620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17621 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17622 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17623 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17624 ;;      Totals:         2       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17625 ;;Total ram usage:       11 bytes
 17626 ;; Hardware stack levels used:    1
 17627 ;; Hardware stack levels required when called:    1
 17628 ;; This function calls:
 17629 ;;		Nothing
 17630 ;; This function is called by:
 17631 ;;		_updateCurrent
 17632 ;;		_updateVoltages
 17633 ;;		_updateTemperatures
 17634 ;;		_AFE_getSetShortCircuitCurrent
 17635 ;;		_AFE_getOverCurrentDischargeCurrent
 17636 ;; This function uses a non-reentrant model
 17637 ;;
 17638                           
 17639                           
 17640                           ;psect for function ___fltol
 17641  2871                     ___fltol:	
 17642                           
 17643                           ;incstack = 0
 17644                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 17645  2871  1003               	clrc
 17646  2872  0021               	movlb	1	; select bank1
 17647  2873  0D2A               	rlf	(___fltol@f1+2)^(0+128),w
 17648  2874  0D2B               	rlf	(___fltol@f1+3)^(0+128),w
 17649  2875  00AC               	movwf	??___fltol^(0+128)
 17650  2876  082C               	movf	??___fltol^(0+128),w
 17651  2877  00FB               	movwf	___fltol@exp1
 17652  2878  087B               	movf	___fltol@exp1,w
 17653  2879  1D03               	btfss	3,2
 17654  287A  2884               	goto	l7966
 17655  287B                     l7962:	
 17656  287B  3000               	movlw	0
 17657  287C  00AB               	movwf	(?___fltol+3)^(0+128)
 17658  287D  3000               	movlw	0
 17659  287E  00AA               	movwf	(?___fltol+2)^(0+128)
 17660  287F  3000               	movlw	0
 17661  2880  00A9               	movwf	(?___fltol+1)^(0+128)
 17662  2881  3000               	movlw	0
 17663  2882  00A8               	movwf	?___fltol^(0+128)
 17664  2883  0008               	return
 17665  2884                     l7966:	
 17666  2884  0828               	movf	___fltol@f1^(0+128),w
 17667  2885  00AC               	movwf	??___fltol^(0+128)
 17668  2886  0829               	movf	(___fltol@f1+1)^(0+128),w
 17669  2887  00AD               	movwf	(??___fltol^(0+128)+1)
 17670  2888  082A               	movf	(___fltol@f1+2)^(0+128),w
 17671  2889  00AE               	movwf	(??___fltol^(0+128)+2)
 17672  288A  082B               	movf	(___fltol@f1+3)^(0+128),w
 17673  288B  00AF               	movwf	(??___fltol^(0+128)+3)
 17674  288C  301F               	movlw	31
 17675  288D                     u10995:	
 17676  288D  36AF               	lsrf	(??___fltol^(0+128)+3),f
 17677  288E  0CAE               	rrf	(??___fltol^(0+128)+2),f
 17678  288F  0CAD               	rrf	(??___fltol^(0+128)+1),f
 17679  2890  0CAC               	rrf	??___fltol^(0+128),f
 17680  2891  0B89               	decfsz	9,f
 17681  2892  288D               	goto	u10995
 17682  2893  082C               	movf	??___fltol^(0+128),w
 17683  2894  00B0               	movwf	(??___fltol+4)^(0+128)
 17684  2895  0830               	movf	(??___fltol+4)^(0+128),w
 17685  2896  00FA               	movwf	___fltol@sign1
 17686  2897  17AA               	bsf	(___fltol@f1^(0+128)+2),7
 17687  2898  30FF               	movlw	255
 17688  2899  05A8               	andwf	___fltol@f1^(0+128),f
 17689  289A  30FF               	movlw	255
 17690  289B  05A9               	andwf	(___fltol@f1+1)^(0+128),f
 17691  289C  30FF               	movlw	255
 17692  289D  05AA               	andwf	(___fltol@f1+2)^(0+128),f
 17693  289E  3000               	movlw	0
 17694  289F  05AB               	andwf	(___fltol@f1+3)^(0+128),f
 17695  28A0  3096               	movlw	150
 17696  28A1  02FB               	subwf	___fltol@exp1,f
 17697  28A2  1FFB               	btfss	___fltol@exp1,7
 17698  28A3  28B7               	goto	l7984
 17699  28A4  087B               	movf	___fltol@exp1,w
 17700  28A5  3A80               	xorlw	128
 17701  28A6  3E97               	addlw	151
 17702  28A7  1C03               	btfss	3,0
 17703  28A8  287B               	goto	l7962
 17704  28A9                     l7982:	
 17705  28A9  3001               	movlw	1
 17706  28AA                     u11025:	
 17707  28AA  36AB               	lsrf	(___fltol@f1+3)^(0+128),f
 17708  28AB  0CAA               	rrf	(___fltol@f1+2)^(0+128),f
 17709  28AC  0CA9               	rrf	(___fltol@f1+1)^(0+128),f
 17710  28AD  0CA8               	rrf	___fltol@f1^(0+128),f
 17711  28AE  0B89               	decfsz	9,f
 17712  28AF  28AA               	goto	u11025
 17713  28B0  3001               	movlw	1
 17714  28B1  00AC               	movwf	??___fltol^(0+128)
 17715  28B2  082C               	movf	??___fltol^(0+128),w
 17716  28B3  07FB               	addwf	___fltol@exp1,f
 17717  28B4  1903               	btfsc	3,2
 17718  28B5  28C8               	goto	l7992
 17719  28B6  28A9               	goto	l7982
 17720  28B7                     l7984:	
 17721  28B7  3020               	movlw	32
 17722  28B8  027B               	subwf	___fltol@exp1,w
 17723  28B9  1803               	btfsc	3,0
 17724  28BA  287B               	goto	l7962
 17725  28BB                     l1056:	
 17726  28BB  087B               	movf	___fltol@exp1,w
 17727  28BC  1903               	btfsc	3,2
 17728  28BD  28C8               	goto	l7992
 17729  28BE  3001               	movlw	1
 17730  28BF                     u11055:	
 17731  28BF  35A8               	lslf	___fltol@f1^(0+128),f
 17732  28C0  0DA9               	rlf	(___fltol@f1+1)^(0+128),f
 17733  28C1  0DAA               	rlf	(___fltol@f1+2)^(0+128),f
 17734  28C2  0DAB               	rlf	(___fltol@f1+3)^(0+128),f
 17735  28C3  0B89               	decfsz	9,f
 17736  28C4  28BF               	goto	u11055
 17737  28C5  3001               	movlw	1
 17738  28C6  02FB               	subwf	___fltol@exp1,f
 17739  28C7  28BB               	goto	l1056
 17740  28C8                     l7992:	
 17741  28C8  087A               	movf	___fltol@sign1,w
 17742  28C9  1903               	btfsc	3,2
 17743  28CA  0008               	return
 17744  28CB  09A8               	comf	___fltol@f1^(0+128),f
 17745  28CC  09A9               	comf	(___fltol@f1+1)^(0+128),f
 17746  28CD  09AA               	comf	(___fltol@f1+2)^(0+128),f
 17747  28CE  09AB               	comf	(___fltol@f1+3)^(0+128),f
 17748  28CF  0AA8               	incf	___fltol@f1^(0+128),f
 17749  28D0  1903               	skipnz
 17750  28D1  0AA9               	incf	(___fltol@f1+1)^(0+128),f
 17751  28D2  1903               	skipnz
 17752  28D3  0AAA               	incf	(___fltol@f1+2)^(0+128),f
 17753  28D4  1903               	skipnz
 17754  28D5  0AAB               	incf	(___fltol@f1+3)^(0+128),f
 17755  28D6  0008               	return
 17756  28D7                     __end_of___fltol:	
 17757                           
 17758                           	psect	text56
 17759  339C                     __ptext56:	
 17760 ;; *************** function ___flneg *****************
 17761 ;; Defined at:
 17762 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
 17763 ;; Parameters:    Size  Location     Type
 17764 ;;  f1              4   58[BANK0 ] long 
 17765 ;; Auto vars:     Size  Location     Type
 17766 ;;		None
 17767 ;; Return value:  Size  Location     Type
 17768 ;;                  4   58[BANK0 ] long 
 17769 ;; Registers used:
 17770 ;;		wreg
 17771 ;; Tracked objects:
 17772 ;;		On entry : 0/0
 17773 ;;		On exit  : 0/0
 17774 ;;		Unchanged: 0/0
 17775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17776 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17779 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17780 ;;Total ram usage:        4 bytes
 17781 ;; Hardware stack levels used:    1
 17782 ;; Hardware stack levels required when called:    1
 17783 ;; This function calls:
 17784 ;;		Nothing
 17785 ;; This function is called by:
 17786 ;;		_updateCurrent
 17787 ;; This function uses a non-reentrant model
 17788 ;;
 17789                           
 17790                           
 17791                           ;psect for function ___flneg
 17792  339C                     ___flneg:	
 17793                           
 17794                           ;incstack = 0
 17795                           ; Regs used in ___flneg: [wreg]
 17796  339C  0020               	movlb	0	; select bank0
 17797  339D  085D               	movf	___flneg@f1+3,w
 17798  339E  045C               	iorwf	___flneg@f1+2,w
 17799  339F  045B               	iorwf	___flneg@f1+1,w
 17800  33A0  045A               	iorwf	___flneg@f1,w
 17801  33A1  1903               	skipnz
 17802  33A2  0008               	return
 17803  33A3  3080               	movlw	128
 17804  33A4  06DD               	xorwf	___flneg@f1+3,f
 17805  33A5  0008               	return
 17806  33A6                     __end_of___flneg:	
 17807                           
 17808                           	psect	text57
 17809  1023                     __ptext57:	
 17810 ;; *************** function ___flmul *****************
 17811 ;; Defined at:
 17812 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
 17813 ;; Parameters:    Size  Location     Type
 17814 ;;  b               4    6[BANK0 ] long 
 17815 ;;  a               4   10[BANK0 ] long 
 17816 ;; Auto vars:     Size  Location     Type
 17817 ;;  prod            4   26[BANK0 ] struct .
 17818 ;;  grs             4   21[BANK0 ] unsigned long 
 17819 ;;  temp            2   30[BANK0 ] struct .
 17820 ;;  bexp            1   25[BANK0 ] unsigned char 
 17821 ;;  aexp            1   20[BANK0 ] unsigned char 
 17822 ;;  sign            1   19[BANK0 ] unsigned char 
 17823 ;; Return value:  Size  Location     Type
 17824 ;;                  4    6[BANK0 ] unsigned char 
 17825 ;; Registers used:
 17826 ;;		wreg, status,2, status,0, pclath, cstack
 17827 ;; Tracked objects:
 17828 ;;		On entry : 0/0
 17829 ;;		On exit  : 0/0
 17830 ;;		Unchanged: 0/0
 17831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17832 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17833 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17834 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17835 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17836 ;;Total ram usage:       26 bytes
 17837 ;; Hardware stack levels used:    1
 17838 ;; Hardware stack levels required when called:    2
 17839 ;; This function calls:
 17840 ;;		__Umul8_16
 17841 ;; This function is called by:
 17842 ;;		_setShortCircuitProtection
 17843 ;;		_setOverCurrentDischargeProtection
 17844 ;;		_updateCurrent
 17845 ;;		_updateVoltages
 17846 ;;		_updateTemperatures
 17847 ;;		_logf
 17848 ;; This function uses a non-reentrant model
 17849 ;;
 17850                           
 17851                           
 17852                           ;psect for function ___flmul
 17853  1023                     ___flmul:	
 17854                           
 17855                           ;incstack = 0
 17856                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 17857  1023  0020               	movlb	0	; select bank0
 17858  1024  0829               	movf	___flmul@b+3,w
 17859  1025  3980               	andlw	128
 17860  1026  00AE               	movwf	??___flmul
 17861  1027  082E               	movf	??___flmul,w
 17862  1028  00B3               	movwf	___flmul@sign
 17863  1029  3529               	lslf	___flmul@b+3,w
 17864  102A  00AE               	movwf	??___flmul
 17865  102B  082E               	movf	??___flmul,w
 17866  102C  00B9               	movwf	___flmul@bexp
 17867  102D  1BA8               	btfsc	___flmul@b+2,7
 17868  102E  1439               	bsf	___flmul@bexp,0
 17869  102F  0839               	movf	___flmul@bexp,w
 17870  1030  1903               	btfsc	3,2
 17871  1031  283F               	goto	l7592
 17872  1032  0A39               	incf	___flmul@bexp,w
 17873  1033  1D03               	btfss	3,2
 17874  1034  283D               	goto	l7590
 17875  1035  3000               	movlw	0
 17876  1036  00A9               	movwf	___flmul@b+3
 17877  1037  3000               	movlw	0
 17878  1038  00A8               	movwf	___flmul@b+2
 17879  1039  3000               	movlw	0
 17880  103A  00A7               	movwf	___flmul@b+1
 17881  103B  3000               	movlw	0
 17882  103C  00A6               	movwf	___flmul@b
 17883  103D                     l7590:	
 17884  103D  17A8               	bsf	___flmul@b+2,7
 17885  103E  2847               	goto	l7594
 17886  103F                     l7592:	
 17887  103F  3000               	movlw	0
 17888  1040  00A9               	movwf	___flmul@b+3
 17889  1041  3000               	movlw	0
 17890  1042  00A8               	movwf	___flmul@b+2
 17891  1043  3000               	movlw	0
 17892  1044  00A7               	movwf	___flmul@b+1
 17893  1045  3000               	movlw	0
 17894  1046  00A6               	movwf	___flmul@b
 17895  1047                     l7594:	
 17896  1047  082D               	movf	___flmul@a+3,w
 17897  1048  3980               	andlw	128
 17898  1049  00AE               	movwf	??___flmul
 17899  104A  082E               	movf	??___flmul,w
 17900  104B  06B3               	xorwf	___flmul@sign,f
 17901  104C  352D               	lslf	___flmul@a+3,w
 17902  104D  00AE               	movwf	??___flmul
 17903  104E  082E               	movf	??___flmul,w
 17904  104F  00B4               	movwf	___flmul@aexp
 17905  1050  1BAC               	btfsc	___flmul@a+2,7
 17906  1051  1434               	bsf	___flmul@aexp,0
 17907  1052  0834               	movf	___flmul@aexp,w
 17908  1053  1903               	btfsc	3,2
 17909  1054  2862               	goto	l7610
 17910  1055  0A34               	incf	___flmul@aexp,w
 17911  1056  1D03               	btfss	3,2
 17912  1057  2860               	goto	l7608
 17913  1058  3000               	movlw	0
 17914  1059  00AD               	movwf	___flmul@a+3
 17915  105A  3000               	movlw	0
 17916  105B  00AC               	movwf	___flmul@a+2
 17917  105C  3000               	movlw	0
 17918  105D  00AB               	movwf	___flmul@a+1
 17919  105E  3000               	movlw	0
 17920  105F  00AA               	movwf	___flmul@a
 17921  1060                     l7608:	
 17922  1060  17AC               	bsf	___flmul@a+2,7
 17923  1061  286A               	goto	l7612
 17924  1062                     l7610:	
 17925  1062  3000               	movlw	0
 17926  1063  00AD               	movwf	___flmul@a+3
 17927  1064  3000               	movlw	0
 17928  1065  00AC               	movwf	___flmul@a+2
 17929  1066  3000               	movlw	0
 17930  1067  00AB               	movwf	___flmul@a+1
 17931  1068  3000               	movlw	0
 17932  1069  00AA               	movwf	___flmul@a
 17933  106A                     l7612:	
 17934  106A  0834               	movf	___flmul@aexp,w
 17935  106B  1D03               	btfss	3,2
 17936  106C  0839               	movf	___flmul@bexp,w
 17937  106D  1D03               	btfss	3,2
 17938  106E  2878               	goto	l7620
 17939  106F  3000               	movlw	0
 17940  1070  00A9               	movwf	?___flmul+3
 17941  1071  3000               	movlw	0
 17942  1072  00A8               	movwf	?___flmul+2
 17943  1073  3000               	movlw	0
 17944  1074  00A7               	movwf	?___flmul+1
 17945  1075  3000               	movlw	0
 17946  1076  00A6               	movwf	?___flmul
 17947  1077  0008               	return
 17948  1078                     l7620:	
 17949  1078  0826               	movf	___flmul@b,w
 17950  1079  00AE               	movwf	??___flmul
 17951  107A  082E               	movf	??___flmul,w
 17952  107B  00F1               	movwf	__Umul8_16@multiplicand
 17953  107C  082C               	movf	___flmul@a+2,w
 17954  107D  31B5  2518  3190   	fcall	__Umul8_16
 17955  1080  0872               	movf	?__Umul8_16+1,w
 17956  1081  0020               	movlb	0	; select bank0
 17957  1082  00BF               	movwf	___flmul@temp+1
 17958  1083  0871               	movf	?__Umul8_16,w
 17959  1084  00BE               	movwf	___flmul@temp
 17960  1085  083E               	movf	___flmul@temp,w
 17961  1086  00AE               	movwf	??___flmul
 17962  1087  01AF               	clrf	??___flmul+1
 17963  1088  01B0               	clrf	??___flmul+2
 17964  1089  01B1               	clrf	??___flmul+3
 17965  108A  0831               	movf	??___flmul+3,w
 17966  108B  00B8               	movwf	___flmul@grs+3
 17967  108C  0830               	movf	??___flmul+2,w
 17968  108D  00B7               	movwf	___flmul@grs+2
 17969  108E  082F               	movf	??___flmul+1,w
 17970  108F  00B6               	movwf	___flmul@grs+1
 17971  1090  082E               	movf	??___flmul,w
 17972  1091  00B5               	movwf	___flmul@grs
 17973  1092  083F               	movf	___flmul@temp+1,w
 17974  1093  00AE               	movwf	??___flmul
 17975  1094  01AF               	clrf	??___flmul+1
 17976  1095  01B0               	clrf	??___flmul+2
 17977  1096  01B1               	clrf	??___flmul+3
 17978  1097  0831               	movf	??___flmul+3,w
 17979  1098  00BD               	movwf	___flmul@prod+3
 17980  1099  0830               	movf	??___flmul+2,w
 17981  109A  00BC               	movwf	___flmul@prod+2
 17982  109B  082F               	movf	??___flmul+1,w
 17983  109C  00BB               	movwf	___flmul@prod+1
 17984  109D  082E               	movf	??___flmul,w
 17985  109E  00BA               	movwf	___flmul@prod
 17986  109F  0827               	movf	___flmul@b+1,w
 17987  10A0  00AE               	movwf	??___flmul
 17988  10A1  082E               	movf	??___flmul,w
 17989  10A2  00F1               	movwf	__Umul8_16@multiplicand
 17990  10A3  082B               	movf	___flmul@a+1,w
 17991  10A4  31B5  2518  3190   	fcall	__Umul8_16
 17992  10A7  0872               	movf	?__Umul8_16+1,w
 17993  10A8  0020               	movlb	0	; select bank0
 17994  10A9  00BF               	movwf	___flmul@temp+1
 17995  10AA  0871               	movf	?__Umul8_16,w
 17996  10AB  00BE               	movwf	___flmul@temp
 17997  10AC  083E               	movf	___flmul@temp,w
 17998  10AD  00AE               	movwf	??___flmul
 17999  10AE  01AF               	clrf	??___flmul+1
 18000  10AF  01B0               	clrf	??___flmul+2
 18001  10B0  01B1               	clrf	??___flmul+3
 18002  10B1  082E               	movf	??___flmul,w
 18003  10B2  07B5               	addwf	___flmul@grs,f
 18004  10B3  082F               	movf	??___flmul+1,w
 18005  10B4  3DB6               	addwfc	___flmul@grs+1,f
 18006  10B5  0830               	movf	??___flmul+2,w
 18007  10B6  3DB7               	addwfc	___flmul@grs+2,f
 18008  10B7  0831               	movf	??___flmul+3,w
 18009  10B8  3DB8               	addwfc	___flmul@grs+3,f
 18010  10B9  083F               	movf	___flmul@temp+1,w
 18011  10BA  00AE               	movwf	??___flmul
 18012  10BB  01AF               	clrf	??___flmul+1
 18013  10BC  01B0               	clrf	??___flmul+2
 18014  10BD  01B1               	clrf	??___flmul+3
 18015  10BE  082E               	movf	??___flmul,w
 18016  10BF  07BA               	addwf	___flmul@prod,f
 18017  10C0  082F               	movf	??___flmul+1,w
 18018  10C1  3DBB               	addwfc	___flmul@prod+1,f
 18019  10C2  0830               	movf	??___flmul+2,w
 18020  10C3  3DBC               	addwfc	___flmul@prod+2,f
 18021  10C4  0831               	movf	??___flmul+3,w
 18022  10C5  3DBD               	addwfc	___flmul@prod+3,f
 18023  10C6  0828               	movf	___flmul@b+2,w
 18024  10C7  00AE               	movwf	??___flmul
 18025  10C8  082E               	movf	??___flmul,w
 18026  10C9  00F1               	movwf	__Umul8_16@multiplicand
 18027  10CA  082A               	movf	___flmul@a,w
 18028  10CB  31B5  2518  3190   	fcall	__Umul8_16
 18029  10CE  0872               	movf	?__Umul8_16+1,w
 18030  10CF  0020               	movlb	0	; select bank0
 18031  10D0  00BF               	movwf	___flmul@temp+1
 18032  10D1  0871               	movf	?__Umul8_16,w
 18033  10D2  00BE               	movwf	___flmul@temp
 18034  10D3  083E               	movf	___flmul@temp,w
 18035  10D4  00AE               	movwf	??___flmul
 18036  10D5  01AF               	clrf	??___flmul+1
 18037  10D6  01B0               	clrf	??___flmul+2
 18038  10D7  01B1               	clrf	??___flmul+3
 18039  10D8  082E               	movf	??___flmul,w
 18040  10D9  07B5               	addwf	___flmul@grs,f
 18041  10DA  082F               	movf	??___flmul+1,w
 18042  10DB  3DB6               	addwfc	___flmul@grs+1,f
 18043  10DC  0830               	movf	??___flmul+2,w
 18044  10DD  3DB7               	addwfc	___flmul@grs+2,f
 18045  10DE  0831               	movf	??___flmul+3,w
 18046  10DF  3DB8               	addwfc	___flmul@grs+3,f
 18047  10E0  083F               	movf	___flmul@temp+1,w
 18048  10E1  00AE               	movwf	??___flmul
 18049  10E2  01AF               	clrf	??___flmul+1
 18050  10E3  01B0               	clrf	??___flmul+2
 18051  10E4  01B1               	clrf	??___flmul+3
 18052  10E5  082E               	movf	??___flmul,w
 18053  10E6  07BA               	addwf	___flmul@prod,f
 18054  10E7  082F               	movf	??___flmul+1,w
 18055  10E8  3DBB               	addwfc	___flmul@prod+1,f
 18056  10E9  0830               	movf	??___flmul+2,w
 18057  10EA  3DBC               	addwfc	___flmul@prod+2,f
 18058  10EB  0831               	movf	??___flmul+3,w
 18059  10EC  3DBD               	addwfc	___flmul@prod+3,f
 18060  10ED  3008               	movlw	8
 18061  10EE                     u10355:	
 18062  10EE  35B5               	lslf	___flmul@grs,f
 18063  10EF  0DB6               	rlf	___flmul@grs+1,f
 18064  10F0  0DB7               	rlf	___flmul@grs+2,f
 18065  10F1  0DB8               	rlf	___flmul@grs+3,f
 18066  10F2  0B89               	decfsz	9,f
 18067  10F3  28EE               	goto	u10355
 18068  10F4  0827               	movf	___flmul@b+1,w
 18069  10F5  00AE               	movwf	??___flmul
 18070  10F6  082E               	movf	??___flmul,w
 18071  10F7  00F1               	movwf	__Umul8_16@multiplicand
 18072  10F8  082A               	movf	___flmul@a,w
 18073  10F9  31B5  2518  3190   	fcall	__Umul8_16
 18074  10FC  0872               	movf	?__Umul8_16+1,w
 18075  10FD  0020               	movlb	0	; select bank0
 18076  10FE  00BF               	movwf	___flmul@temp+1
 18077  10FF  0871               	movf	?__Umul8_16,w
 18078  1100  00BE               	movwf	___flmul@temp
 18079  1101  083E               	movf	___flmul@temp,w
 18080  1102  07B5               	addwf	___flmul@grs,f
 18081  1103  083F               	movf	___flmul@temp+1,w
 18082  1104  3DB6               	addwfc	___flmul@grs+1,f
 18083  1105  3000               	movlw	0
 18084  1106  3DB7               	addwfc	___flmul@grs+2,f
 18085  1107  3DB8               	addwfc	___flmul@grs+3,f
 18086  1108  0826               	movf	___flmul@b,w
 18087  1109  00AE               	movwf	??___flmul
 18088  110A  082E               	movf	??___flmul,w
 18089  110B  00F1               	movwf	__Umul8_16@multiplicand
 18090  110C  082B               	movf	___flmul@a+1,w
 18091  110D  31B5  2518  3190   	fcall	__Umul8_16
 18092  1110  0872               	movf	?__Umul8_16+1,w
 18093  1111  0020               	movlb	0	; select bank0
 18094  1112  00BF               	movwf	___flmul@temp+1
 18095  1113  0871               	movf	?__Umul8_16,w
 18096  1114  00BE               	movwf	___flmul@temp
 18097  1115  083E               	movf	___flmul@temp,w
 18098  1116  07B5               	addwf	___flmul@grs,f
 18099  1117  083F               	movf	___flmul@temp+1,w
 18100  1118  3DB6               	addwfc	___flmul@grs+1,f
 18101  1119  3000               	movlw	0
 18102  111A  3DB7               	addwfc	___flmul@grs+2,f
 18103  111B  3DB8               	addwfc	___flmul@grs+3,f
 18104  111C  3008               	movlw	8
 18105  111D                     u10365:	
 18106  111D  35B5               	lslf	___flmul@grs,f
 18107  111E  0DB6               	rlf	___flmul@grs+1,f
 18108  111F  0DB7               	rlf	___flmul@grs+2,f
 18109  1120  0DB8               	rlf	___flmul@grs+3,f
 18110  1121  0B89               	decfsz	9,f
 18111  1122  291D               	goto	u10365
 18112  1123  0826               	movf	___flmul@b,w
 18113  1124  00AE               	movwf	??___flmul
 18114  1125  082E               	movf	??___flmul,w
 18115  1126  00F1               	movwf	__Umul8_16@multiplicand
 18116  1127  082A               	movf	___flmul@a,w
 18117  1128  31B5  2518  3190   	fcall	__Umul8_16
 18118  112B  0872               	movf	?__Umul8_16+1,w
 18119  112C  0020               	movlb	0	; select bank0
 18120  112D  00BF               	movwf	___flmul@temp+1
 18121  112E  0871               	movf	?__Umul8_16,w
 18122  112F  00BE               	movwf	___flmul@temp
 18123  1130  083E               	movf	___flmul@temp,w
 18124  1131  07B5               	addwf	___flmul@grs,f
 18125  1132  083F               	movf	___flmul@temp+1,w
 18126  1133  3DB6               	addwfc	___flmul@grs+1,f
 18127  1134  3000               	movlw	0
 18128  1135  3DB7               	addwfc	___flmul@grs+2,f
 18129  1136  3DB8               	addwfc	___flmul@grs+3,f
 18130  1137  0827               	movf	___flmul@b+1,w
 18131  1138  00AE               	movwf	??___flmul
 18132  1139  082E               	movf	??___flmul,w
 18133  113A  00F1               	movwf	__Umul8_16@multiplicand
 18134  113B  082C               	movf	___flmul@a+2,w
 18135  113C  31B5  2518  3190   	fcall	__Umul8_16
 18136  113F  0872               	movf	?__Umul8_16+1,w
 18137  1140  0020               	movlb	0	; select bank0
 18138  1141  00BF               	movwf	___flmul@temp+1
 18139  1142  0871               	movf	?__Umul8_16,w
 18140  1143  00BE               	movwf	___flmul@temp
 18141  1144  083E               	movf	___flmul@temp,w
 18142  1145  07BA               	addwf	___flmul@prod,f
 18143  1146  083F               	movf	___flmul@temp+1,w
 18144  1147  3DBB               	addwfc	___flmul@prod+1,f
 18145  1148  3000               	movlw	0
 18146  1149  3DBC               	addwfc	___flmul@prod+2,f
 18147  114A  3DBD               	addwfc	___flmul@prod+3,f
 18148  114B  0828               	movf	___flmul@b+2,w
 18149  114C  00AE               	movwf	??___flmul
 18150  114D  082E               	movf	??___flmul,w
 18151  114E  00F1               	movwf	__Umul8_16@multiplicand
 18152  114F  082B               	movf	___flmul@a+1,w
 18153  1150  31B5  2518  3190   	fcall	__Umul8_16
 18154  1153  0872               	movf	?__Umul8_16+1,w
 18155  1154  0020               	movlb	0	; select bank0
 18156  1155  00BF               	movwf	___flmul@temp+1
 18157  1156  0871               	movf	?__Umul8_16,w
 18158  1157  00BE               	movwf	___flmul@temp
 18159  1158  083E               	movf	___flmul@temp,w
 18160  1159  07BA               	addwf	___flmul@prod,f
 18161  115A  083F               	movf	___flmul@temp+1,w
 18162  115B  3DBB               	addwfc	___flmul@prod+1,f
 18163  115C  3000               	movlw	0
 18164  115D  3DBC               	addwfc	___flmul@prod+2,f
 18165  115E  3DBD               	addwfc	___flmul@prod+3,f
 18166  115F  0828               	movf	___flmul@b+2,w
 18167  1160  00AE               	movwf	??___flmul
 18168  1161  082E               	movf	??___flmul,w
 18169  1162  00F1               	movwf	__Umul8_16@multiplicand
 18170  1163  082C               	movf	___flmul@a+2,w
 18171  1164  31B5  2518  3190   	fcall	__Umul8_16
 18172  1167  0872               	movf	?__Umul8_16+1,w
 18173  1168  0020               	movlb	0	; select bank0
 18174  1169  00BF               	movwf	___flmul@temp+1
 18175  116A  0871               	movf	?__Umul8_16,w
 18176  116B  00BE               	movwf	___flmul@temp
 18177  116C  083E               	movf	___flmul@temp,w
 18178  116D  00AE               	movwf	??___flmul
 18179  116E  083F               	movf	___flmul@temp+1,w
 18180  116F  00AF               	movwf	??___flmul+1
 18181  1170  01B0               	clrf	??___flmul+2
 18182  1171  01B1               	clrf	??___flmul+3
 18183  1172  3008               	movlw	8
 18184  1173                     u10375:	
 18185  1173  35AE               	lslf	??___flmul,f
 18186  1174  0DAF               	rlf	??___flmul+1,f
 18187  1175  0DB0               	rlf	??___flmul+2,f
 18188  1176  0DB1               	rlf	??___flmul+3,f
 18189  1177  0B89               	decfsz	9,f
 18190  1178  2973               	goto	u10375
 18191  1179  082E               	movf	??___flmul,w
 18192  117A  07BA               	addwf	___flmul@prod,f
 18193  117B  082F               	movf	??___flmul+1,w
 18194  117C  3DBB               	addwfc	___flmul@prod+1,f
 18195  117D  0830               	movf	??___flmul+2,w
 18196  117E  3DBC               	addwfc	___flmul@prod+2,f
 18197  117F  0831               	movf	??___flmul+3,w
 18198  1180  3DBD               	addwfc	___flmul@prod+3,f
 18199  1181  0835               	movf	___flmul@grs,w
 18200  1182  00AE               	movwf	??___flmul
 18201  1183  0836               	movf	___flmul@grs+1,w
 18202  1184  00AF               	movwf	??___flmul+1
 18203  1185  0837               	movf	___flmul@grs+2,w
 18204  1186  00B0               	movwf	??___flmul+2
 18205  1187  0838               	movf	___flmul@grs+3,w
 18206  1188  00B1               	movwf	??___flmul+3
 18207  1189  3018               	movlw	24
 18208  118A                     u10385:	
 18209  118A  36B1               	lsrf	??___flmul+3,f
 18210  118B  0CB0               	rrf	??___flmul+2,f
 18211  118C  0CAF               	rrf	??___flmul+1,f
 18212  118D  0CAE               	rrf	??___flmul,f
 18213  118E  0B89               	decfsz	9,f
 18214  118F  298A               	goto	u10385
 18215  1190  082E               	movf	??___flmul,w
 18216  1191  07BA               	addwf	___flmul@prod,f
 18217  1192  082F               	movf	??___flmul+1,w
 18218  1193  3DBB               	addwfc	___flmul@prod+1,f
 18219  1194  0830               	movf	??___flmul+2,w
 18220  1195  3DBC               	addwfc	___flmul@prod+2,f
 18221  1196  0831               	movf	??___flmul+3,w
 18222  1197  3DBD               	addwfc	___flmul@prod+3,f
 18223  1198  3008               	movlw	8
 18224  1199                     u10395:	
 18225  1199  35B5               	lslf	___flmul@grs,f
 18226  119A  0DB6               	rlf	___flmul@grs+1,f
 18227  119B  0DB7               	rlf	___flmul@grs+2,f
 18228  119C  0DB8               	rlf	___flmul@grs+3,f
 18229  119D  0B89               	decfsz	9,f
 18230  119E  2999               	goto	u10395
 18231  119F  0839               	movf	___flmul@bexp,w
 18232  11A0  0734               	addwf	___flmul@aexp,w
 18233  11A1  00AE               	movwf	??___flmul
 18234  11A2  01AF               	clrf	??___flmul+1
 18235  11A3  0DAF               	rlf	??___flmul+1,f
 18236  11A4  082E               	movf	??___flmul,w
 18237  11A5  3E82               	addlw	130
 18238  11A6  00BE               	movwf	___flmul@temp
 18239  11A7  30FF               	movlw	255
 18240  11A8  3D2F               	addwfc	??___flmul+1,w
 18241  11A9  00BF               	movwf	___flmul@temp+1
 18242  11AA                     l7672:	
 18243  11AA  1BBC               	btfsc	___flmul@prod+2,7
 18244  11AB  29C1               	goto	l7674
 18245  11AC  3001               	movlw	1
 18246  11AD                     u10405:	
 18247  11AD  35BA               	lslf	___flmul@prod,f
 18248  11AE  0DBB               	rlf	___flmul@prod+1,f
 18249  11AF  0DBC               	rlf	___flmul@prod+2,f
 18250  11B0  0DBD               	rlf	___flmul@prod+3,f
 18251  11B1  0B89               	decfsz	9,f
 18252  11B2  29AD               	goto	u10405
 18253  11B3  1BB8               	btfsc	___flmul@grs+3,7
 18254  11B4  143A               	bsf	___flmul@prod,0
 18255  11B5  3001               	movlw	1
 18256  11B6                     u10425:	
 18257  11B6  35B5               	lslf	___flmul@grs,f
 18258  11B7  0DB6               	rlf	___flmul@grs+1,f
 18259  11B8  0DB7               	rlf	___flmul@grs+2,f
 18260  11B9  0DB8               	rlf	___flmul@grs+3,f
 18261  11BA  0B89               	decfsz	9,f
 18262  11BB  29B6               	goto	u10425
 18263  11BC  30FF               	movlw	255
 18264  11BD  07BE               	addwf	___flmul@temp,f
 18265  11BE  30FF               	movlw	255
 18266  11BF  3DBF               	addwfc	___flmul@temp+1,f
 18267  11C0  29AA               	goto	l7672
 18268  11C1                     l7674:	
 18269  11C1  01B4               	clrf	___flmul@aexp
 18270  11C2  1FB8               	btfss	___flmul@grs+3,7
 18271  11C3  29DA               	goto	l7684
 18272  11C4  30FF               	movlw	255
 18273  11C5  0535               	andwf	___flmul@grs,w
 18274  11C6  00AE               	movwf	??___flmul
 18275  11C7  30FF               	movlw	255
 18276  11C8  0536               	andwf	___flmul@grs+1,w
 18277  11C9  00AF               	movwf	??___flmul+1
 18278  11CA  30FF               	movlw	255
 18279  11CB  0537               	andwf	___flmul@grs+2,w
 18280  11CC  00B0               	movwf	??___flmul+2
 18281  11CD  307F               	movlw	127
 18282  11CE  0538               	andwf	___flmul@grs+3,w
 18283  11CF  00B1               	movwf	??___flmul+3
 18284  11D0  0831               	movf	??___flmul+3,w
 18285  11D1  0430               	iorwf	??___flmul+2,w
 18286  11D2  042F               	iorwf	??___flmul+1,w
 18287  11D3  042E               	iorwf	??___flmul,w
 18288  11D4  1903               	skipnz
 18289  11D5  183A               	btfsc	___flmul@prod,0
 18290  11D6  29D8               	goto	l7680
 18291  11D7  29DA               	goto	l7684
 18292  11D8                     l7680:	
 18293  11D8  01B4               	clrf	___flmul@aexp
 18294  11D9  0AB4               	incf	___flmul@aexp,f
 18295  11DA                     l7684:	
 18296  11DA  0834               	movf	___flmul@aexp,w
 18297  11DB  1903               	btfsc	3,2
 18298  11DC  2A03               	goto	l7694
 18299  11DD  3001               	movlw	1
 18300  11DE  07BA               	addwf	___flmul@prod,f
 18301  11DF  3000               	movlw	0
 18302  11E0  3DBB               	addwfc	___flmul@prod+1,f
 18303  11E1  3000               	movlw	0
 18304  11E2  3DBC               	addwfc	___flmul@prod+2,f
 18305  11E3  3000               	movlw	0
 18306  11E4  3DBD               	addwfc	___flmul@prod+3,f
 18307  11E5  1C3D               	btfss	___flmul@prod+3,0
 18308  11E6  2A03               	goto	l7694
 18309  11E7  083A               	movf	___flmul@prod,w
 18310  11E8  00AE               	movwf	??___flmul
 18311  11E9  083B               	movf	___flmul@prod+1,w
 18312  11EA  00AF               	movwf	??___flmul+1
 18313  11EB  083C               	movf	___flmul@prod+2,w
 18314  11EC  00B0               	movwf	??___flmul+2
 18315  11ED  083D               	movf	___flmul@prod+3,w
 18316  11EE  00B1               	movwf	??___flmul+3
 18317  11EF  3001               	movlw	1
 18318  11F0  00B2               	movwf	??___flmul+4
 18319  11F1                     u10495:	
 18320  11F1  37B1               	asrf	??___flmul+3,f
 18321  11F2  0CB0               	rrf	??___flmul+2,f
 18322  11F3  0CAF               	rrf	??___flmul+1,f
 18323  11F4  0CAE               	rrf	??___flmul,f
 18324  11F5  0BB2               	decfsz	??___flmul+4,f
 18325  11F6  29F1               	goto	u10495
 18326  11F7  0831               	movf	??___flmul+3,w
 18327  11F8  00BD               	movwf	___flmul@prod+3
 18328  11F9  0830               	movf	??___flmul+2,w
 18329  11FA  00BC               	movwf	___flmul@prod+2
 18330  11FB  082F               	movf	??___flmul+1,w
 18331  11FC  00BB               	movwf	___flmul@prod+1
 18332  11FD  082E               	movf	??___flmul,w
 18333  11FE  00BA               	movwf	___flmul@prod
 18334  11FF  3001               	movlw	1
 18335  1200  07BE               	addwf	___flmul@temp,f
 18336  1201  3000               	movlw	0
 18337  1202  3DBF               	addwfc	___flmul@temp+1,f
 18338  1203                     l7694:	
 18339  1203  083F               	movf	___flmul@temp+1,w
 18340  1204  3A80               	xorlw	128
 18341  1205  00AE               	movwf	??___flmul
 18342  1206  3080               	movlw	128
 18343  1207  022E               	subwf	??___flmul,w
 18344  1208  1D03               	skipz
 18345  1209  2A0C               	goto	u10505
 18346  120A  30FF               	movlw	255
 18347  120B  023E               	subwf	___flmul@temp,w
 18348  120C                     u10505:	
 18349  120C  1C03               	skipc
 18350  120D  2A18               	goto	l7698
 18351  120E  307F               	movlw	127
 18352  120F  0020               	movlb	0	; select bank0
 18353  1210  00BD               	movwf	___flmul@prod+3
 18354  1211  3080               	movlw	128
 18355  1212  00BC               	movwf	___flmul@prod+2
 18356  1213  3000               	movlw	0
 18357  1214  00BB               	movwf	___flmul@prod+1
 18358  1215  3000               	movlw	0
 18359  1216  00BA               	movwf	___flmul@prod
 18360  1217  2A42               	goto	l1264
 18361  1218                     l7698:	
 18362  1218  0020               	movlb	0	; select bank0
 18363  1219  083F               	movf	___flmul@temp+1,w
 18364  121A  3A80               	xorlw	128
 18365  121B  00AE               	movwf	??___flmul
 18366  121C  3080               	movlw	128
 18367  121D  022E               	subwf	??___flmul,w
 18368  121E  1D03               	skipz
 18369  121F  2A22               	goto	u10515
 18370  1220  3001               	movlw	1
 18371  1221  023E               	subwf	___flmul@temp,w
 18372  1222                     u10515:	
 18373  1222  1803               	skipnc
 18374  1223  2A2F               	goto	l7704
 18375  1224  3000               	movlw	0
 18376  1225  0020               	movlb	0	; select bank0
 18377  1226  00BD               	movwf	___flmul@prod+3
 18378  1227  3000               	movlw	0
 18379  1228  00BC               	movwf	___flmul@prod+2
 18380  1229  3000               	movlw	0
 18381  122A  00BB               	movwf	___flmul@prod+1
 18382  122B  3000               	movlw	0
 18383  122C  00BA               	movwf	___flmul@prod
 18384  122D  01B3               	clrf	___flmul@sign
 18385  122E  2A42               	goto	l1264
 18386  122F                     l7704:	
 18387  122F  0020               	movlb	0	; select bank0
 18388  1230  083E               	movf	___flmul@temp,w
 18389  1231  00AE               	movwf	??___flmul
 18390  1232  082E               	movf	??___flmul,w
 18391  1233  00B9               	movwf	___flmul@bexp
 18392  1234  30FF               	movlw	255
 18393  1235  05BA               	andwf	___flmul@prod,f
 18394  1236  30FF               	movlw	255
 18395  1237  05BB               	andwf	___flmul@prod+1,f
 18396  1238  307F               	movlw	127
 18397  1239  05BC               	andwf	___flmul@prod+2,f
 18398  123A  3000               	movlw	0
 18399  123B  05BD               	andwf	___flmul@prod+3,f
 18400  123C  1839               	btfsc	___flmul@bexp,0
 18401  123D  17BC               	bsf	___flmul@prod+2,7
 18402  123E  3639               	lsrf	___flmul@bexp,w
 18403  123F  00AE               	movwf	??___flmul
 18404  1240  082E               	movf	??___flmul,w
 18405  1241  00BD               	movwf	___flmul@prod+3
 18406  1242                     l1264:	
 18407  1242  0833               	movf	___flmul@sign,w
 18408  1243  00AE               	movwf	??___flmul
 18409  1244  082E               	movf	??___flmul,w
 18410  1245  04BD               	iorwf	___flmul@prod+3,f
 18411  1246  083D               	movf	___flmul@prod+3,w
 18412  1247  00A9               	movwf	?___flmul+3
 18413  1248  083C               	movf	___flmul@prod+2,w
 18414  1249  00A8               	movwf	?___flmul+2
 18415  124A  083B               	movf	___flmul@prod+1,w
 18416  124B  00A7               	movwf	?___flmul+1
 18417  124C  083A               	movf	___flmul@prod,w
 18418  124D  00A6               	movwf	?___flmul
 18419  124E  0008               	return
 18420  124F                     __end_of___flmul:	
 18421                           
 18422                           	psect	text58
 18423  3518                     __ptext58:	
 18424 ;; *************** function __Umul8_16 *****************
 18425 ;; Defined at:
 18426 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
 18427 ;; Parameters:    Size  Location     Type
 18428 ;;  multiplier      1    wreg     unsigned char 
 18429 ;;  multiplicand    1    1[COMMON] unsigned char 
 18430 ;; Auto vars:     Size  Location     Type
 18431 ;;  multiplier      1    9[COMMON] unsigned char 
 18432 ;;  word_mpld       2    7[COMMON] unsigned int 
 18433 ;;  product         2    5[COMMON] unsigned int 
 18434 ;; Return value:  Size  Location     Type
 18435 ;;                  2    1[COMMON] unsigned int 
 18436 ;; Registers used:
 18437 ;;		wreg, status,2, status,0
 18438 ;; Tracked objects:
 18439 ;;		On entry : 0/0
 18440 ;;		On exit  : 0/0
 18441 ;;		Unchanged: 0/0
 18442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18443 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18444 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18445 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18446 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18447 ;;Total ram usage:        9 bytes
 18448 ;; Hardware stack levels used:    1
 18449 ;; Hardware stack levels required when called:    1
 18450 ;; This function calls:
 18451 ;;		Nothing
 18452 ;; This function is called by:
 18453 ;;		___flmul
 18454 ;; This function uses a non-reentrant model
 18455 ;;
 18456                           
 18457                           
 18458                           ;psect for function __Umul8_16
 18459  3518                     __Umul8_16:	
 18460                           
 18461                           ;incstack = 0
 18462                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 18463                           ;__Umul8_16@multiplier stored from wreg
 18464  3518  00F9               	movwf	__Umul8_16@multiplier
 18465  3519  01F5               	clrf	__Umul8_16@product
 18466  351A  01F6               	clrf	__Umul8_16@product+1
 18467  351B  0871               	movf	__Umul8_16@multiplicand,w
 18468  351C  00F3               	movwf	??__Umul8_16
 18469  351D  01F4               	clrf	??__Umul8_16+1
 18470  351E  0873               	movf	??__Umul8_16,w
 18471  351F  00F7               	movwf	__Umul8_16@word_mpld
 18472  3520  0874               	movf	??__Umul8_16+1,w
 18473  3521  00F8               	movwf	__Umul8_16@word_mpld+1
 18474  3522                     l7388:	
 18475  3522  1C79               	btfss	__Umul8_16@multiplier,0
 18476  3523  2D28               	goto	l1457
 18477  3524  0877               	movf	__Umul8_16@word_mpld,w
 18478  3525  07F5               	addwf	__Umul8_16@product,f
 18479  3526  0878               	movf	__Umul8_16@word_mpld+1,w
 18480  3527  3DF6               	addwfc	__Umul8_16@product+1,f
 18481  3528                     l1457:	
 18482  3528  3001               	movlw	1
 18483  3529                     u9895:	
 18484  3529  35F7               	lslf	__Umul8_16@word_mpld,f
 18485  352A  0DF8               	rlf	__Umul8_16@word_mpld+1,f
 18486  352B  0B89               	decfsz	9,f
 18487  352C  2D29               	goto	u9895
 18488  352D  1003               	clrc
 18489  352E  0CF9               	rrf	__Umul8_16@multiplier,f
 18490  352F  0879               	movf	__Umul8_16@multiplier,w
 18491  3530  1D03               	btfss	3,2
 18492  3531  2D22               	goto	l7388
 18493  3532  0876               	movf	__Umul8_16@product+1,w
 18494  3533  00F2               	movwf	?__Umul8_16+1
 18495  3534  0875               	movf	__Umul8_16@product,w
 18496  3535  00F1               	movwf	?__Umul8_16
 18497  3536  0008               	return
 18498  3537                     __end_of__Umul8_16:	
 18499                           
 18500                           	psect	text59
 18501  1B53                     __ptext59:	
 18502 ;; *************** function ___fldiv *****************
 18503 ;; Defined at:
 18504 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 18505 ;; Parameters:    Size  Location     Type
 18506 ;;  a               4   32[BANK0 ] unsigned int 
 18507 ;;  b               4   36[BANK0 ] unsigned int 
 18508 ;; Auto vars:     Size  Location     Type
 18509 ;;  grs             4   52[BANK0 ] unsigned long 
 18510 ;;  rem             4   45[BANK0 ] unsigned long 
 18511 ;;  new_exp         2   50[BANK0 ] int 
 18512 ;;  aexp            1   57[BANK0 ] unsigned char 
 18513 ;;  bexp            1   56[BANK0 ] unsigned char 
 18514 ;;  sign            1   49[BANK0 ] unsigned char 
 18515 ;; Return value:  Size  Location     Type
 18516 ;;                  4   32[BANK0 ] unsigned char 
 18517 ;; Registers used:
 18518 ;;		wreg, status,2, status,0
 18519 ;; Tracked objects:
 18520 ;;		On entry : 0/0
 18521 ;;		On exit  : 0/0
 18522 ;;		Unchanged: 0/0
 18523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18524 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18525 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18526 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18527 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18528 ;;Total ram usage:       26 bytes
 18529 ;; Hardware stack levels used:    1
 18530 ;; Hardware stack levels required when called:    1
 18531 ;; This function calls:
 18532 ;;		Nothing
 18533 ;; This function is called by:
 18534 ;;		_setShortCircuitProtection
 18535 ;;		_setOverCurrentDischargeProtection
 18536 ;;		_updateCurrent
 18537 ;;		_updateVoltages
 18538 ;;		_updateTemperatures
 18539 ;;		_logf
 18540 ;;		_AFE_getSetShortCircuitCurrent
 18541 ;;		_AFE_getOverCurrentDischargeCurrent
 18542 ;; This function uses a non-reentrant model
 18543 ;;
 18544                           
 18545                           
 18546                           ;psect for function ___fldiv
 18547  1B53                     ___fldiv:	
 18548                           
 18549                           ;incstack = 0
 18550                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 18551  1B53  0020               	movlb	0	; select bank0
 18552  1B54  0847               	movf	___fldiv@b+3,w
 18553  1B55  3980               	andlw	128
 18554  1B56  00C8               	movwf	??___fldiv
 18555  1B57  0848               	movf	??___fldiv,w
 18556  1B58  00D1               	movwf	___fldiv@sign
 18557  1B59  3547               	lslf	___fldiv@b+3,w
 18558  1B5A  00C8               	movwf	??___fldiv
 18559  1B5B  0848               	movf	??___fldiv,w
 18560  1B5C  00D8               	movwf	___fldiv@bexp
 18561  1B5D  1BC6               	btfsc	___fldiv@b+2,7
 18562  1B5E  1458               	bsf	___fldiv@bexp,0
 18563  1B5F  0858               	movf	___fldiv@bexp,w
 18564  1B60  1903               	btfsc	3,2
 18565  1B61  2B70               	goto	l7454
 18566  1B62  0A58               	incf	___fldiv@bexp,w
 18567  1B63  1D03               	btfss	3,2
 18568  1B64  2B6D               	goto	l7450
 18569  1B65  3000               	movlw	0
 18570  1B66  00C7               	movwf	___fldiv@b+3
 18571  1B67  3000               	movlw	0
 18572  1B68  00C6               	movwf	___fldiv@b+2
 18573  1B69  3000               	movlw	0
 18574  1B6A  00C5               	movwf	___fldiv@b+1
 18575  1B6B  3000               	movlw	0
 18576  1B6C  00C4               	movwf	___fldiv@b
 18577  1B6D                     l7450:	
 18578  1B6D  17C6               	bsf	___fldiv@b+2,7
 18579  1B6E  01C7               	clrf	___fldiv@b+3
 18580  1B6F  2B78               	goto	l7456
 18581  1B70                     l7454:	
 18582  1B70  3000               	movlw	0
 18583  1B71  00C7               	movwf	___fldiv@b+3
 18584  1B72  3000               	movlw	0
 18585  1B73  00C6               	movwf	___fldiv@b+2
 18586  1B74  3000               	movlw	0
 18587  1B75  00C5               	movwf	___fldiv@b+1
 18588  1B76  3000               	movlw	0
 18589  1B77  00C4               	movwf	___fldiv@b
 18590  1B78                     l7456:	
 18591  1B78  0843               	movf	___fldiv@a+3,w
 18592  1B79  3980               	andlw	128
 18593  1B7A  00C8               	movwf	??___fldiv
 18594  1B7B  0848               	movf	??___fldiv,w
 18595  1B7C  06D1               	xorwf	___fldiv@sign,f
 18596  1B7D  3543               	lslf	___fldiv@a+3,w
 18597  1B7E  00C8               	movwf	??___fldiv
 18598  1B7F  0848               	movf	??___fldiv,w
 18599  1B80  00D9               	movwf	___fldiv@aexp
 18600  1B81  1BC2               	btfsc	___fldiv@a+2,7
 18601  1B82  1459               	bsf	___fldiv@aexp,0
 18602  1B83  0859               	movf	___fldiv@aexp,w
 18603  1B84  1903               	btfsc	3,2
 18604  1B85  2B94               	goto	l7474
 18605  1B86  0A59               	incf	___fldiv@aexp,w
 18606  1B87  1D03               	btfss	3,2
 18607  1B88  2B91               	goto	l7470
 18608  1B89  3000               	movlw	0
 18609  1B8A  00C3               	movwf	___fldiv@a+3
 18610  1B8B  3000               	movlw	0
 18611  1B8C  00C2               	movwf	___fldiv@a+2
 18612  1B8D  3000               	movlw	0
 18613  1B8E  00C1               	movwf	___fldiv@a+1
 18614  1B8F  3000               	movlw	0
 18615  1B90  00C0               	movwf	___fldiv@a
 18616  1B91                     l7470:	
 18617  1B91  17C2               	bsf	___fldiv@a+2,7
 18618  1B92  01C3               	clrf	___fldiv@a+3
 18619  1B93  2B9C               	goto	l1212
 18620  1B94                     l7474:	
 18621  1B94  3000               	movlw	0
 18622  1B95  00C3               	movwf	___fldiv@a+3
 18623  1B96  3000               	movlw	0
 18624  1B97  00C2               	movwf	___fldiv@a+2
 18625  1B98  3000               	movlw	0
 18626  1B99  00C1               	movwf	___fldiv@a+1
 18627  1B9A  3000               	movlw	0
 18628  1B9B  00C0               	movwf	___fldiv@a
 18629  1B9C                     l1212:	
 18630  1B9C  0843               	movf	___fldiv@a+3,w
 18631  1B9D  0442               	iorwf	___fldiv@a+2,w
 18632  1B9E  0441               	iorwf	___fldiv@a+1,w
 18633  1B9F  0440               	iorwf	___fldiv@a,w
 18634  1BA0  1D03               	skipz
 18635  1BA1  2BBB               	goto	l7484
 18636  1BA2  3000               	movlw	0
 18637  1BA3  00C7               	movwf	___fldiv@b+3
 18638  1BA4  3000               	movlw	0
 18639  1BA5  00C6               	movwf	___fldiv@b+2
 18640  1BA6  3000               	movlw	0
 18641  1BA7  00C5               	movwf	___fldiv@b+1
 18642  1BA8  3000               	movlw	0
 18643  1BA9  00C4               	movwf	___fldiv@b
 18644  1BAA  3080               	movlw	128
 18645  1BAB  04C6               	iorwf	___fldiv@b+2,f
 18646  1BAC  307F               	movlw	127
 18647  1BAD  04C7               	iorwf	___fldiv@b+3,f
 18648  1BAE                     L5:	
 18649  1BAE  0851               	movf	___fldiv@sign,w
 18650  1BAF  00C8               	movwf	??___fldiv
 18651  1BB0  0848               	movf	??___fldiv,w
 18652  1BB1  04C7               	iorwf	___fldiv@b+3,f
 18653  1BB2  0847               	movf	___fldiv@b+3,w
 18654  1BB3  00C3               	movwf	?___fldiv+3
 18655  1BB4  0846               	movf	___fldiv@b+2,w
 18656  1BB5  00C2               	movwf	?___fldiv+2
 18657  1BB6  0845               	movf	___fldiv@b+1,w
 18658  1BB7  00C1               	movwf	?___fldiv+1
 18659  1BB8  0844               	movf	___fldiv@b,w
 18660  1BB9  00C0               	movwf	?___fldiv
 18661  1BBA  0008               	return
 18662  1BBB                     l7484:	
 18663  1BBB  0858               	movf	___fldiv@bexp,w
 18664  1BBC  1D03               	btfss	3,2
 18665  1BBD  2BC7               	goto	l7490
 18666  1BBE  3000               	movlw	0
 18667  1BBF  00C3               	movwf	?___fldiv+3
 18668  1BC0  3000               	movlw	0
 18669  1BC1  00C2               	movwf	?___fldiv+2
 18670  1BC2  3000               	movlw	0
 18671  1BC3  00C1               	movwf	?___fldiv+1
 18672  1BC4  3000               	movlw	0
 18673  1BC5  00C0               	movwf	?___fldiv
 18674  1BC6  0008               	return
 18675  1BC7                     l7490:	
 18676  1BC7  0858               	movf	___fldiv@bexp,w
 18677  1BC8  00C8               	movwf	??___fldiv
 18678  1BC9  01C9               	clrf	??___fldiv+1
 18679  1BCA  0849               	movf	??___fldiv+1,w
 18680  1BCB  00CB               	movwf	??___fldiv+3
 18681  1BCC  0859               	movf	___fldiv@aexp,w
 18682  1BCD  0248               	subwf	??___fldiv,w
 18683  1BCE  00CA               	movwf	??___fldiv+2
 18684  1BCF  1C03               	skipc
 18685  1BD0  03CB               	decf	??___fldiv+3,f
 18686  1BD1  084A               	movf	??___fldiv+2,w
 18687  1BD2  3E7F               	addlw	127
 18688  1BD3  00D2               	movwf	___fldiv@new_exp
 18689  1BD4  3000               	movlw	0
 18690  1BD5  3D4B               	addwfc	??___fldiv+3,w
 18691  1BD6  00D3               	movwf	___fldiv@new_exp+1
 18692  1BD7  0847               	movf	___fldiv@b+3,w
 18693  1BD8  00D0               	movwf	___fldiv@rem+3
 18694  1BD9  0846               	movf	___fldiv@b+2,w
 18695  1BDA  00CF               	movwf	___fldiv@rem+2
 18696  1BDB  0845               	movf	___fldiv@b+1,w
 18697  1BDC  00CE               	movwf	___fldiv@rem+1
 18698  1BDD  0844               	movf	___fldiv@b,w
 18699  1BDE  00CD               	movwf	___fldiv@rem
 18700  1BDF  3000               	movlw	0
 18701  1BE0  00C7               	movwf	___fldiv@b+3
 18702  1BE1  3000               	movlw	0
 18703  1BE2  00C6               	movwf	___fldiv@b+2
 18704  1BE3  3000               	movlw	0
 18705  1BE4  00C5               	movwf	___fldiv@b+1
 18706  1BE5  3000               	movlw	0
 18707  1BE6  00C4               	movwf	___fldiv@b
 18708  1BE7  3000               	movlw	0
 18709  1BE8  00D7               	movwf	___fldiv@grs+3
 18710  1BE9  3000               	movlw	0
 18711  1BEA  00D6               	movwf	___fldiv@grs+2
 18712  1BEB  3000               	movlw	0
 18713  1BEC  00D5               	movwf	___fldiv@grs+1
 18714  1BED  3000               	movlw	0
 18715  1BEE  00D4               	movwf	___fldiv@grs
 18716  1BEF  01D9               	clrf	___fldiv@aexp
 18717  1BF0                     l7518:	
 18718  1BF0  301A               	movlw	26
 18719  1BF1  0259               	subwf	___fldiv@aexp,w
 18720  1BF2  1803               	btfsc	3,0
 18721  1BF3  2C2C               	goto	l7520
 18722  1BF4  0859               	movf	___fldiv@aexp,w
 18723  1BF5  1903               	btfsc	3,2
 18724  1BF6  2C0E               	goto	l7510
 18725  1BF7  3001               	movlw	1
 18726  1BF8                     u10075:	
 18727  1BF8  35CD               	lslf	___fldiv@rem,f
 18728  1BF9  0DCE               	rlf	___fldiv@rem+1,f
 18729  1BFA  0DCF               	rlf	___fldiv@rem+2,f
 18730  1BFB  0DD0               	rlf	___fldiv@rem+3,f
 18731  1BFC  0B89               	decfsz	9,f
 18732  1BFD  2BF8               	goto	u10075
 18733  1BFE  3001               	movlw	1
 18734  1BFF                     u10085:	
 18735  1BFF  35C4               	lslf	___fldiv@b,f
 18736  1C00  0DC5               	rlf	___fldiv@b+1,f
 18737  1C01  0DC6               	rlf	___fldiv@b+2,f
 18738  1C02  0DC7               	rlf	___fldiv@b+3,f
 18739  1C03  0B89               	decfsz	9,f
 18740  1C04  2BFF               	goto	u10085
 18741  1C05  1BD7               	btfsc	___fldiv@grs+3,7
 18742  1C06  1444               	bsf	___fldiv@b,0
 18743  1C07  3001               	movlw	1
 18744  1C08                     u10105:	
 18745  1C08  35D4               	lslf	___fldiv@grs,f
 18746  1C09  0DD5               	rlf	___fldiv@grs+1,f
 18747  1C0A  0DD6               	rlf	___fldiv@grs+2,f
 18748  1C0B  0DD7               	rlf	___fldiv@grs+3,f
 18749  1C0C  0B89               	decfsz	9,f
 18750  1C0D  2C08               	goto	u10105
 18751  1C0E                     l7510:	
 18752  1C0E  0843               	movf	___fldiv@a+3,w
 18753  1C0F  0250               	subwf	___fldiv@rem+3,w
 18754  1C10  1D03               	skipz
 18755  1C11  2C1C               	goto	u10115
 18756  1C12  0842               	movf	___fldiv@a+2,w
 18757  1C13  024F               	subwf	___fldiv@rem+2,w
 18758  1C14  1D03               	skipz
 18759  1C15  2C1C               	goto	u10115
 18760  1C16  0841               	movf	___fldiv@a+1,w
 18761  1C17  024E               	subwf	___fldiv@rem+1,w
 18762  1C18  1D03               	skipz
 18763  1C19  2C1C               	goto	u10115
 18764  1C1A  0840               	movf	___fldiv@a,w
 18765  1C1B  024D               	subwf	___fldiv@rem,w
 18766  1C1C                     u10115:	
 18767  1C1C  1C03               	skipc
 18768  1C1D  2C27               	goto	l7516
 18769  1C1E  1757               	bsf	___fldiv@grs+3,6
 18770  1C1F  0840               	movf	___fldiv@a,w
 18771  1C20  02CD               	subwf	___fldiv@rem,f
 18772  1C21  0841               	movf	___fldiv@a+1,w
 18773  1C22  3BCE               	subwfb	___fldiv@rem+1,f
 18774  1C23  0842               	movf	___fldiv@a+2,w
 18775  1C24  3BCF               	subwfb	___fldiv@rem+2,f
 18776  1C25  0843               	movf	___fldiv@a+3,w
 18777  1C26  3BD0               	subwfb	___fldiv@rem+3,f
 18778  1C27                     l7516:	
 18779  1C27  3001               	movlw	1
 18780  1C28  00C8               	movwf	??___fldiv
 18781  1C29  0848               	movf	??___fldiv,w
 18782  1C2A  07D9               	addwf	___fldiv@aexp,f
 18783  1C2B  2BF0               	goto	l7518
 18784  1C2C                     l7520:	
 18785  1C2C  0850               	movf	___fldiv@rem+3,w
 18786  1C2D  044F               	iorwf	___fldiv@rem+2,w
 18787  1C2E  044E               	iorwf	___fldiv@rem+1,w
 18788  1C2F  044D               	iorwf	___fldiv@rem,w
 18789  1C30  1D03               	btfss	3,2
 18790  1C31  1454               	bsf	___fldiv@grs,0
 18791  1C32                     l7534:	
 18792  1C32  1BC6               	btfsc	___fldiv@b+2,7
 18793  1C33  2C49               	goto	l7536
 18794  1C34  3001               	movlw	1
 18795  1C35                     u10145:	
 18796  1C35  35C4               	lslf	___fldiv@b,f
 18797  1C36  0DC5               	rlf	___fldiv@b+1,f
 18798  1C37  0DC6               	rlf	___fldiv@b+2,f
 18799  1C38  0DC7               	rlf	___fldiv@b+3,f
 18800  1C39  0B89               	decfsz	9,f
 18801  1C3A  2C35               	goto	u10145
 18802  1C3B  1BD7               	btfsc	___fldiv@grs+3,7
 18803  1C3C  1444               	bsf	___fldiv@b,0
 18804  1C3D  3001               	movlw	1
 18805  1C3E                     u10165:	
 18806  1C3E  35D4               	lslf	___fldiv@grs,f
 18807  1C3F  0DD5               	rlf	___fldiv@grs+1,f
 18808  1C40  0DD6               	rlf	___fldiv@grs+2,f
 18809  1C41  0DD7               	rlf	___fldiv@grs+3,f
 18810  1C42  0B89               	decfsz	9,f
 18811  1C43  2C3E               	goto	u10165
 18812  1C44  30FF               	movlw	255
 18813  1C45  07D2               	addwf	___fldiv@new_exp,f
 18814  1C46  30FF               	movlw	255
 18815  1C47  3DD3               	addwfc	___fldiv@new_exp+1,f
 18816  1C48  2C32               	goto	l7534
 18817  1C49                     l7536:	
 18818  1C49  01D9               	clrf	___fldiv@aexp
 18819  1C4A  1FD7               	btfss	___fldiv@grs+3,7
 18820  1C4B  2C62               	goto	l7546
 18821  1C4C  30FF               	movlw	255
 18822  1C4D  0554               	andwf	___fldiv@grs,w
 18823  1C4E  00C8               	movwf	??___fldiv
 18824  1C4F  30FF               	movlw	255
 18825  1C50  0555               	andwf	___fldiv@grs+1,w
 18826  1C51  00C9               	movwf	??___fldiv+1
 18827  1C52  30FF               	movlw	255
 18828  1C53  0556               	andwf	___fldiv@grs+2,w
 18829  1C54  00CA               	movwf	??___fldiv+2
 18830  1C55  307F               	movlw	127
 18831  1C56  0557               	andwf	___fldiv@grs+3,w
 18832  1C57  00CB               	movwf	??___fldiv+3
 18833  1C58  084B               	movf	??___fldiv+3,w
 18834  1C59  044A               	iorwf	??___fldiv+2,w
 18835  1C5A  0449               	iorwf	??___fldiv+1,w
 18836  1C5B  0448               	iorwf	??___fldiv,w
 18837  1C5C  1903               	skipnz
 18838  1C5D  1844               	btfsc	___fldiv@b,0
 18839  1C5E  2C60               	goto	l7542
 18840  1C5F  2C62               	goto	l7546
 18841  1C60                     l7542:	
 18842  1C60  01D9               	clrf	___fldiv@aexp
 18843  1C61  0AD9               	incf	___fldiv@aexp,f
 18844  1C62                     l7546:	
 18845  1C62  0859               	movf	___fldiv@aexp,w
 18846  1C63  1903               	btfsc	3,2
 18847  1C64  2C8B               	goto	l7556
 18848  1C65  3001               	movlw	1
 18849  1C66  07C4               	addwf	___fldiv@b,f
 18850  1C67  3000               	movlw	0
 18851  1C68  3DC5               	addwfc	___fldiv@b+1,f
 18852  1C69  3000               	movlw	0
 18853  1C6A  3DC6               	addwfc	___fldiv@b+2,f
 18854  1C6B  3000               	movlw	0
 18855  1C6C  3DC7               	addwfc	___fldiv@b+3,f
 18856  1C6D  1C47               	btfss	___fldiv@b+3,0
 18857  1C6E  2C8B               	goto	l7556
 18858  1C6F  0844               	movf	___fldiv@b,w
 18859  1C70  00C8               	movwf	??___fldiv
 18860  1C71  0845               	movf	___fldiv@b+1,w
 18861  1C72  00C9               	movwf	??___fldiv+1
 18862  1C73  0846               	movf	___fldiv@b+2,w
 18863  1C74  00CA               	movwf	??___fldiv+2
 18864  1C75  0847               	movf	___fldiv@b+3,w
 18865  1C76  00CB               	movwf	??___fldiv+3
 18866  1C77  3001               	movlw	1
 18867  1C78  00CC               	movwf	??___fldiv+4
 18868  1C79                     u10235:	
 18869  1C79  37CB               	asrf	??___fldiv+3,f
 18870  1C7A  0CCA               	rrf	??___fldiv+2,f
 18871  1C7B  0CC9               	rrf	??___fldiv+1,f
 18872  1C7C  0CC8               	rrf	??___fldiv,f
 18873  1C7D  0BCC               	decfsz	??___fldiv+4,f
 18874  1C7E  2C79               	goto	u10235
 18875  1C7F  084B               	movf	??___fldiv+3,w
 18876  1C80  00C7               	movwf	___fldiv@b+3
 18877  1C81  084A               	movf	??___fldiv+2,w
 18878  1C82  00C6               	movwf	___fldiv@b+2
 18879  1C83  0849               	movf	??___fldiv+1,w
 18880  1C84  00C5               	movwf	___fldiv@b+1
 18881  1C85  0848               	movf	??___fldiv,w
 18882  1C86  00C4               	movwf	___fldiv@b
 18883  1C87  3001               	movlw	1
 18884  1C88  07D2               	addwf	___fldiv@new_exp,f
 18885  1C89  3000               	movlw	0
 18886  1C8A  3DD3               	addwfc	___fldiv@new_exp+1,f
 18887  1C8B                     l7556:	
 18888  1C8B  0853               	movf	___fldiv@new_exp+1,w
 18889  1C8C  3A80               	xorlw	128
 18890  1C8D  00C8               	movwf	??___fldiv
 18891  1C8E  3080               	movlw	128
 18892  1C8F  0248               	subwf	??___fldiv,w
 18893  1C90  1D03               	skipz
 18894  1C91  2C94               	goto	u10245
 18895  1C92  30FF               	movlw	255
 18896  1C93  0252               	subwf	___fldiv@new_exp,w
 18897  1C94                     u10245:	
 18898  1C94  1C03               	skipc
 18899  1C95  2CA3               	goto	l1233
 18900  1C96  30FF               	movlw	255
 18901  1C97  0020               	movlb	0	; select bank0
 18902  1C98  00D2               	movwf	___fldiv@new_exp
 18903  1C99  3000               	movlw	0
 18904  1C9A  00D3               	movwf	___fldiv@new_exp+1
 18905  1C9B  3000               	movlw	0
 18906  1C9C  00C7               	movwf	___fldiv@b+3
 18907  1C9D  3000               	movlw	0
 18908  1C9E  00C6               	movwf	___fldiv@b+2
 18909  1C9F  3000               	movlw	0
 18910  1CA0  00C5               	movwf	___fldiv@b+1
 18911  1CA1  3000               	movlw	0
 18912  1CA2  00C4               	movwf	___fldiv@b
 18913  1CA3                     l1233:	
 18914  1CA3  0020               	movlb	0	; select bank0
 18915  1CA4  0853               	movf	___fldiv@new_exp+1,w
 18916  1CA5  3A80               	xorlw	128
 18917  1CA6  00C8               	movwf	??___fldiv
 18918  1CA7  3080               	movlw	128
 18919  1CA8  0248               	subwf	??___fldiv,w
 18920  1CA9  1D03               	skipz
 18921  1CAA  2CAD               	goto	u10255
 18922  1CAB  3001               	movlw	1
 18923  1CAC  0252               	subwf	___fldiv@new_exp,w
 18924  1CAD                     u10255:	
 18925  1CAD  1803               	skipnc
 18926  1CAE  2CBB               	goto	l1234
 18927  1CAF  0020               	movlb	0	; select bank0
 18928  1CB0  01D2               	clrf	___fldiv@new_exp
 18929  1CB1  01D3               	clrf	___fldiv@new_exp+1
 18930  1CB2  3000               	movlw	0
 18931  1CB3  00C7               	movwf	___fldiv@b+3
 18932  1CB4  3000               	movlw	0
 18933  1CB5  00C6               	movwf	___fldiv@b+2
 18934  1CB6  3000               	movlw	0
 18935  1CB7  00C5               	movwf	___fldiv@b+1
 18936  1CB8  3000               	movlw	0
 18937  1CB9  00C4               	movwf	___fldiv@b
 18938  1CBA  01D1               	clrf	___fldiv@sign
 18939  1CBB                     l1234:	
 18940  1CBB  0020               	movlb	0	; select bank0
 18941  1CBC  0852               	movf	___fldiv@new_exp,w
 18942  1CBD  00C8               	movwf	??___fldiv
 18943  1CBE  0848               	movf	??___fldiv,w
 18944  1CBF  00D8               	movwf	___fldiv@bexp
 18945  1CC0  1C58               	btfss	___fldiv@bexp,0
 18946  1CC1  2CC4               	goto	l7570
 18947  1CC2  17C6               	bsf	___fldiv@b+2,7
 18948  1CC3  2CC8               	goto	l1236
 18949  1CC4                     l7570:	
 18950  1CC4  307F               	movlw	127
 18951  1CC5  00C8               	movwf	??___fldiv
 18952  1CC6  0848               	movf	??___fldiv,w
 18953  1CC7  05C6               	andwf	___fldiv@b+2,f
 18954  1CC8                     l1236:	
 18955  1CC8  3658               	lsrf	___fldiv@bexp,w
 18956  1CC9  00C8               	movwf	??___fldiv
 18957  1CCA  0848               	movf	??___fldiv,w
 18958  1CCB  00C7               	movwf	___fldiv@b+3
 18959  1CCC  2BAE               	goto	L5
 18960  1CCD                     __end_of___fldiv:	
 18961                           
 18962                           	psect	text60
 18963  36E2                     __ptext60:	
 18964 ;; *************** function _enableDischarging *****************
 18965 ;; Defined at:
 18966 ;;		line 277 in file "BQ76920.c"
 18967 ;; Parameters:    Size  Location     Type
 18968 ;;  enable          2    0[BANK0 ] unsigned int 
 18969 ;; Auto vars:     Size  Location     Type
 18970 ;;  sys_ctrl2       1   11[COMMON] unsigned char 
 18971 ;; Return value:  Size  Location     Type
 18972 ;;                  1    wreg      void 
 18973 ;; Registers used:
 18974 ;;		wreg, status,2, status,0, pclath, cstack
 18975 ;; Tracked objects:
 18976 ;;		On entry : 0/0
 18977 ;;		On exit  : 0/0
 18978 ;;		Unchanged: 0/0
 18979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18980 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18981 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18982 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18983 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18984 ;;Total ram usage:        5 bytes
 18985 ;; Hardware stack levels used:    1
 18986 ;; Hardware stack levels required when called:    3
 18987 ;; This function calls:
 18988 ;;		_I2C_writeRegister
 18989 ;;		_readRegister
 18990 ;; This function is called by:
 18991 ;;		_AFE_UPDATE
 18992 ;; This function uses a non-reentrant model
 18993 ;;
 18994                           
 18995                           
 18996                           ;psect for function _enableDischarging
 18997  36E2                     _enableDischarging:	
 18998                           
 18999                           ;BQ76920.c: 278:     uint8_t sys_ctrl2;;BQ76920.c: 279:     sys_ctrl2 = readRegister(0x1
      +                          8, 0x05);
 19000                           
 19001                           ;incstack = 0
 19002                           ; Regs used in _enableDischarging: [wreg+status,2+status,0+pclath+cstack]
 19003  36E2  3018               	movlw	24
 19004  36E3  00F5               	movwf	readRegister@slaveAddress
 19005  36E4  3000               	movlw	0
 19006  36E5  00F6               	movwf	readRegister@slaveAddress+1
 19007  36E6  3005               	movlw	5
 19008  36E7  00F7               	movwf	readRegister@regAddress
 19009  36E8  3000               	movlw	0
 19010  36E9  00F8               	movwf	readRegister@regAddress+1
 19011  36EA  31B6  2675  31B6   	fcall	_readRegister
 19012  36ED  0875               	movf	?_readRegister,w
 19013  36EE  0020               	movlb	0	; select bank0
 19014  36EF  00A2               	movwf	??_enableDischarging
 19015  36F0  0822               	movf	??_enableDischarging,w
 19016  36F1  00FB               	movwf	enableDischarging@sys_ctrl2
 19017                           
 19018                           ;BQ76920.c: 280:     if(enable){
 19019  36F2  0820               	movf	enableDischarging@enable,w
 19020  36F3  0421               	iorwf	enableDischarging@enable+1,w
 19021  36F4  1903               	btfsc	3,2
 19022  36F5  2F06               	goto	l8276
 19023                           
 19024                           ;BQ76920.c: 281:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 | 0x02);
 19025  36F6  3018               	movlw	24
 19026  36F7  00F5               	movwf	I2C_writeRegister@slaveAddress
 19027  36F8  3000               	movlw	0
 19028  36F9  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 19029  36FA  3005               	movlw	5
 19030  36FB  00F7               	movwf	I2C_writeRegister@regAddress
 19031  36FC  3000               	movlw	0
 19032  36FD  00F8               	movwf	I2C_writeRegister@regAddress+1
 19033  36FE  3002               	movlw	2
 19034  36FF  047B               	iorwf	enableDischarging@sys_ctrl2,w
 19035  3700  00F9               	movwf	I2C_writeRegister@data
 19036  3701  3000               	movlw	0
 19037  3702  00FA               	movwf	I2C_writeRegister@data+1
 19038  3703  31B4  24FA         	fcall	_I2C_writeRegister
 19039                           
 19040                           ;BQ76920.c: 282:     }else{
 19041  3705  0008               	return
 19042  3706                     l8276:	
 19043                           
 19044                           ;BQ76920.c: 283:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 & ~(0x02));
 19045  3706  3018               	movlw	24
 19046  3707  00F5               	movwf	I2C_writeRegister@slaveAddress
 19047  3708  3000               	movlw	0
 19048  3709  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 19049  370A  3005               	movlw	5
 19050  370B  00F7               	movwf	I2C_writeRegister@regAddress
 19051  370C  3000               	movlw	0
 19052  370D  00F8               	movwf	I2C_writeRegister@regAddress+1
 19053  370E  087B               	movf	enableDischarging@sys_ctrl2,w
 19054  370F  39FD               	andlw	253
 19055  3710  00A2               	movwf	??_enableDischarging
 19056  3711  01A3               	clrf	??_enableDischarging+1
 19057  3712  0822               	movf	??_enableDischarging,w
 19058  3713  00F9               	movwf	I2C_writeRegister@data
 19059  3714  0823               	movf	??_enableDischarging+1,w
 19060  3715  00FA               	movwf	I2C_writeRegister@data+1
 19061  3716  31B4  24FA         	fcall	_I2C_writeRegister
 19062  3718  0008               	return
 19063  3719                     __end_of_enableDischarging:	
 19064                           
 19065                           	psect	text61
 19066  36AB                     __ptext61:	
 19067 ;; *************** function _enableCharging *****************
 19068 ;; Defined at:
 19069 ;;		line 287 in file "BQ76920.c"
 19070 ;; Parameters:    Size  Location     Type
 19071 ;;  enable          2    0[BANK0 ] unsigned int 
 19072 ;; Auto vars:     Size  Location     Type
 19073 ;;  sys_ctrl2       1   11[COMMON] unsigned char 
 19074 ;; Return value:  Size  Location     Type
 19075 ;;                  1    wreg      void 
 19076 ;; Registers used:
 19077 ;;		wreg, status,2, status,0, pclath, cstack
 19078 ;; Tracked objects:
 19079 ;;		On entry : 0/0
 19080 ;;		On exit  : 0/0
 19081 ;;		Unchanged: 0/0
 19082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19083 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19084 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19085 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19086 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19087 ;;Total ram usage:        5 bytes
 19088 ;; Hardware stack levels used:    1
 19089 ;; Hardware stack levels required when called:    3
 19090 ;; This function calls:
 19091 ;;		_I2C_writeRegister
 19092 ;;		_readRegister
 19093 ;; This function is called by:
 19094 ;;		_AFE_UPDATE
 19095 ;; This function uses a non-reentrant model
 19096 ;;
 19097                           
 19098                           
 19099                           ;psect for function _enableCharging
 19100  36AB                     _enableCharging:	
 19101                           
 19102                           ;BQ76920.c: 288:     uint8_t sys_ctrl2;;BQ76920.c: 289:     sys_ctrl2 = readRegister(0x1
      +                          8, 0x05);
 19103                           
 19104                           ;incstack = 0
 19105                           ; Regs used in _enableCharging: [wreg+status,2+status,0+pclath+cstack]
 19106  36AB  3018               	movlw	24
 19107  36AC  00F5               	movwf	readRegister@slaveAddress
 19108  36AD  3000               	movlw	0
 19109  36AE  00F6               	movwf	readRegister@slaveAddress+1
 19110  36AF  3005               	movlw	5
 19111  36B0  00F7               	movwf	readRegister@regAddress
 19112  36B1  3000               	movlw	0
 19113  36B2  00F8               	movwf	readRegister@regAddress+1
 19114  36B3  31B6  2675  31B6   	fcall	_readRegister
 19115  36B6  0875               	movf	?_readRegister,w
 19116  36B7  0020               	movlb	0	; select bank0
 19117  36B8  00A2               	movwf	??_enableCharging
 19118  36B9  0822               	movf	??_enableCharging,w
 19119  36BA  00FB               	movwf	enableCharging@sys_ctrl2
 19120                           
 19121                           ;BQ76920.c: 290:     if(enable){
 19122  36BB  0820               	movf	enableCharging@enable,w
 19123  36BC  0421               	iorwf	enableCharging@enable+1,w
 19124  36BD  1903               	btfsc	3,2
 19125  36BE  2ECF               	goto	l8284
 19126                           
 19127                           ;BQ76920.c: 291:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 | 0x01);
 19128  36BF  3018               	movlw	24
 19129  36C0  00F5               	movwf	I2C_writeRegister@slaveAddress
 19130  36C1  3000               	movlw	0
 19131  36C2  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 19132  36C3  3005               	movlw	5
 19133  36C4  00F7               	movwf	I2C_writeRegister@regAddress
 19134  36C5  3000               	movlw	0
 19135  36C6  00F8               	movwf	I2C_writeRegister@regAddress+1
 19136  36C7  3001               	movlw	1
 19137  36C8  047B               	iorwf	enableCharging@sys_ctrl2,w
 19138  36C9  00F9               	movwf	I2C_writeRegister@data
 19139  36CA  3000               	movlw	0
 19140  36CB  00FA               	movwf	I2C_writeRegister@data+1
 19141  36CC  31B4  24FA         	fcall	_I2C_writeRegister
 19142                           
 19143                           ;BQ76920.c: 292:     }else{
 19144  36CE  0008               	return
 19145  36CF                     l8284:	
 19146                           
 19147                           ;BQ76920.c: 293:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 & ~(0x01));
 19148  36CF  3018               	movlw	24
 19149  36D0  00F5               	movwf	I2C_writeRegister@slaveAddress
 19150  36D1  3000               	movlw	0
 19151  36D2  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 19152  36D3  3005               	movlw	5
 19153  36D4  00F7               	movwf	I2C_writeRegister@regAddress
 19154  36D5  3000               	movlw	0
 19155  36D6  00F8               	movwf	I2C_writeRegister@regAddress+1
 19156  36D7  087B               	movf	enableCharging@sys_ctrl2,w
 19157  36D8  39FE               	andlw	254
 19158  36D9  00A2               	movwf	??_enableCharging
 19159  36DA  01A3               	clrf	??_enableCharging+1
 19160  36DB  0822               	movf	??_enableCharging,w
 19161  36DC  00F9               	movwf	I2C_writeRegister@data
 19162  36DD  0823               	movf	??_enableCharging+1,w
 19163  36DE  00FA               	movwf	I2C_writeRegister@data+1
 19164  36DF  31B4  24FA         	fcall	_I2C_writeRegister
 19165  36E1  0008               	return
 19166  36E2                     __end_of_enableCharging:	
 19167                           
 19168                           	psect	text62
 19169  3675                     __ptext62:	
 19170 ;; *************** function _readRegister *****************
 19171 ;; Defined at:
 19172 ;;		line 115 in file "I2C.c"
 19173 ;; Parameters:    Size  Location     Type
 19174 ;;  slaveAddress    2    5[COMMON] int 
 19175 ;;  regAddress      2    7[COMMON] int 
 19176 ;; Auto vars:     Size  Location     Type
 19177 ;;  recievedData    2    9[COMMON] int 
 19178 ;; Return value:  Size  Location     Type
 19179 ;;                  2    5[COMMON] int 
 19180 ;; Registers used:
 19181 ;;		wreg, status,2, status,0, pclath, cstack
 19182 ;; Tracked objects:
 19183 ;;		On entry : 0/0
 19184 ;;		On exit  : 0/0
 19185 ;;		Unchanged: 0/0
 19186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19187 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19188 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19190 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19191 ;;Total ram usage:        6 bytes
 19192 ;; Hardware stack levels used:    1
 19193 ;; Hardware stack levels required when called:    2
 19194 ;; This function calls:
 19195 ;;		_read_I2C_data
 19196 ;;		_send_I2C_NACK
 19197 ;;		_send_I2C_controlByte
 19198 ;;		_send_I2C_data
 19199 ;;		_send_I2C_startBit
 19200 ;;		_send_I2C_stopBit
 19201 ;; This function is called by:
 19202 ;;		_beginAFEcommunication
 19203 ;;		_setCellUndervoltageProtection
 19204 ;;		_setCellOvervoltageProtection
 19205 ;;		_updateCurrent
 19206 ;;		_updateVoltages
 19207 ;;		_updateTemperatures
 19208 ;;		_enableDischarging
 19209 ;;		_enableCharging
 19210 ;;		_printcellParameters
 19211 ;;		_printotAFERegisters
 19212 ;; This function uses a non-reentrant model
 19213 ;;
 19214                           
 19215                           
 19216                           ;psect for function _readRegister
 19217  3675                     _readRegister:	
 19218                           
 19219                           ;I2C.c: 116:     int recievedData;;I2C.c: 117:     send_I2C_startBit();
 19220                           
 19221                           ;incstack = 0
 19222                           ; Regs used in _readRegister: [wreg+status,2+status,0+pclath+cstack]
 19223  3675  31B3  235E  31B6   	fcall	_send_I2C_startBit
 19224                           
 19225                           ;I2C.c: 118:     send_I2C_controlByte(slaveAddress, 0);
 19226  3678  0876               	movf	readRegister@slaveAddress+1,w
 19227  3679  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 19228  367A  0875               	movf	readRegister@slaveAddress,w
 19229  367B  00F1               	movwf	send_I2C_controlByte@BlockAddress
 19230  367C  3000               	movlw	0
 19231  367D  00F3               	movwf	send_I2C_controlByte@RW_bit
 19232  367E  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 19233  367F  31B3  2392  31B6   	fcall	_send_I2C_controlByte
 19234                           
 19235                           ;I2C.c: 119:     send_I2C_data(regAddress);
 19236  3682  0878               	movf	readRegister@regAddress+1,w
 19237  3683  00F2               	movwf	send_I2C_data@databyte+1
 19238  3684  0877               	movf	readRegister@regAddress,w
 19239  3685  00F1               	movwf	send_I2C_data@databyte
 19240  3686  31B3  2377  31B6   	fcall	_send_I2C_data
 19241                           
 19242                           ;I2C.c: 120:     send_I2C_stopBit();
 19243  3689  31B3  2366  31B6   	fcall	_send_I2C_stopBit
 19244                           
 19245                           ;I2C.c: 121:     send_I2C_startBit();
 19246  368C  31B3  235E  31B6   	fcall	_send_I2C_startBit
 19247                           
 19248                           ;I2C.c: 122:     send_I2C_controlByte(slaveAddress, 1);
 19249  368F  0876               	movf	readRegister@slaveAddress+1,w
 19250  3690  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 19251  3691  0875               	movf	readRegister@slaveAddress,w
 19252  3692  00F1               	movwf	send_I2C_controlByte@BlockAddress
 19253  3693  3001               	movlw	1
 19254  3694  00F3               	movwf	send_I2C_controlByte@RW_bit
 19255  3695  3000               	movlw	0
 19256  3696  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 19257  3697  31B3  2392  31B6   	fcall	_send_I2C_controlByte
 19258                           
 19259                           ;I2C.c: 123:     recievedData = read_I2C_data();
 19260  369A  31B3  23D7  31B6   	fcall	_read_I2C_data
 19261  369D  0872               	movf	?_read_I2C_data+1,w
 19262  369E  00FA               	movwf	readRegister@recievedData+1
 19263  369F  0871               	movf	?_read_I2C_data,w
 19264  36A0  00F9               	movwf	readRegister@recievedData
 19265                           
 19266                           ;I2C.c: 124:     send_I2C_NACK();
 19267  36A1  31B3  2380  31B6   	fcall	_send_I2C_NACK
 19268                           
 19269                           ;I2C.c: 125:     send_I2C_stopBit();
 19270  36A4  31B3  2366         	fcall	_send_I2C_stopBit
 19271                           
 19272                           ;I2C.c: 126:     return recievedData;
 19273  36A6  087A               	movf	readRegister@recievedData+1,w
 19274  36A7  00F6               	movwf	?_readRegister+1
 19275  36A8  0879               	movf	readRegister@recievedData,w
 19276  36A9  00F5               	movwf	?_readRegister
 19277  36AA  0008               	return
 19278  36AB                     __end_of_readRegister:	
 19279                           
 19280                           	psect	text63
 19281  3380                     __ptext63:	
 19282 ;; *************** function _send_I2C_NACK *****************
 19283 ;; Defined at:
 19284 ;;		line 91 in file "I2C.c"
 19285 ;; Parameters:    Size  Location     Type
 19286 ;;		None
 19287 ;; Auto vars:     Size  Location     Type
 19288 ;;		None
 19289 ;; Return value:  Size  Location     Type
 19290 ;;                  1    wreg      void 
 19291 ;; Registers used:
 19292 ;;		None
 19293 ;; Tracked objects:
 19294 ;;		On entry : 0/0
 19295 ;;		On exit  : 0/0
 19296 ;;		Unchanged: 0/0
 19297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19302 ;;Total ram usage:        0 bytes
 19303 ;; Hardware stack levels used:    1
 19304 ;; Hardware stack levels required when called:    1
 19305 ;; This function calls:
 19306 ;;		Nothing
 19307 ;; This function is called by:
 19308 ;;		_readRegister
 19309 ;; This function uses a non-reentrant model
 19310 ;;
 19311                           
 19312                           
 19313                           ;psect for function _send_I2C_NACK
 19314  3380                     _send_I2C_NACK:	
 19315                           
 19316                           ;I2C.c: 92:     PIR1bits.SSP1IF = 0;
 19317                           
 19318                           ;incstack = 0
 19319                           ; Regs used in _send_I2C_NACK: []
 19320  3380  0020               	movlb	0	; select bank0
 19321  3381  1191               	bcf	17,3	;volatile
 19322                           
 19323                           ;I2C.c: 93:     SSPCON2bits.ACKDT = 1;
 19324  3382  0024               	movlb	4	; select bank4
 19325  3383  1696               	bsf	22,5	;volatile
 19326                           
 19327                           ;I2C.c: 94:     SSPCON2bits.ACKEN = 1;
 19328  3384  1616               	bsf	22,4	;volatile
 19329  3385                     l324:	
 19330                           ;I2C.c: 95:     while (!PIR1bits.SSP1IF);
 19331                           
 19332  3385  0020               	movlb	0	; select bank0
 19333  3386  1991               	btfsc	17,3	;volatile
 19334  3387  0008               	return
 19335  3388  2B85               	goto	l324
 19336  3389                     __end_of_send_I2C_NACK:	
 19337                           
 19338                           	psect	text64
 19339  33D7                     __ptext64:	
 19340 ;; *************** function _read_I2C_data *****************
 19341 ;; Defined at:
 19342 ;;		line 43 in file "I2C.c"
 19343 ;; Parameters:    Size  Location     Type
 19344 ;;		None
 19345 ;; Auto vars:     Size  Location     Type
 19346 ;;		None
 19347 ;; Return value:  Size  Location     Type
 19348 ;;                  2    1[COMMON] unsigned int 
 19349 ;; Registers used:
 19350 ;;		wreg
 19351 ;; Tracked objects:
 19352 ;;		On entry : 0/0
 19353 ;;		On exit  : 0/0
 19354 ;;		Unchanged: 0/0
 19355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19356 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19358 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19359 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19360 ;;Total ram usage:        4 bytes
 19361 ;; Hardware stack levels used:    1
 19362 ;; Hardware stack levels required when called:    1
 19363 ;; This function calls:
 19364 ;;		Nothing
 19365 ;; This function is called by:
 19366 ;;		_readRegister
 19367 ;; This function uses a non-reentrant model
 19368 ;;
 19369                           
 19370                           
 19371                           ;psect for function _read_I2C_data
 19372  33D7                     _read_I2C_data:	
 19373                           
 19374                           ;I2C.c: 44:     PIR1bits.SSP1IF = 0;
 19375                           
 19376                           ;incstack = 0
 19377                           ; Regs used in _read_I2C_data: [wreg]
 19378  33D7  0020               	movlb	0	; select bank0
 19379  33D8  1191               	bcf	17,3	;volatile
 19380                           
 19381                           ;I2C.c: 45:     SSPCON2bits.RCEN = 1;
 19382  33D9  0024               	movlb	4	; select bank4
 19383  33DA  1596               	bsf	22,3	;volatile
 19384  33DB                     l288:	
 19385                           ;I2C.c: 46:     while (!PIR1bits.SSP1IF);
 19386                           
 19387  33DB  0020               	movlb	0	; select bank0
 19388  33DC  1D91               	btfss	17,3	;volatile
 19389  33DD  2BDB               	goto	l288
 19390                           
 19391                           ;I2C.c: 47:     return (SSPBUF);
 19392  33DE  0024               	movlb	4	; select bank4
 19393  33DF  0811               	movf	17,w	;volatile
 19394  33E0  00F3               	movwf	??_read_I2C_data
 19395  33E1  01F4               	clrf	??_read_I2C_data+1
 19396  33E2  0873               	movf	??_read_I2C_data,w
 19397  33E3  00F1               	movwf	?_read_I2C_data
 19398  33E4  0874               	movf	??_read_I2C_data+1,w
 19399  33E5  00F2               	movwf	?_read_I2C_data+1
 19400  33E6  0008               	return
 19401  33E7                     __end_of_read_I2C_data:	
 19402                           
 19403                           	psect	text65
 19404  34FA                     __ptext65:	
 19405 ;; *************** function _I2C_writeRegister *****************
 19406 ;; Defined at:
 19407 ;;		line 104 in file "I2C.c"
 19408 ;; Parameters:    Size  Location     Type
 19409 ;;  slaveAddress    2    5[COMMON] int 
 19410 ;;  regAddress      2    7[COMMON] int 
 19411 ;;  data            2    9[COMMON] int 
 19412 ;; Auto vars:     Size  Location     Type
 19413 ;;		None
 19414 ;; Return value:  Size  Location     Type
 19415 ;;                  1    wreg      void 
 19416 ;; Registers used:
 19417 ;;		wreg, status,2, status,0, pclath, cstack
 19418 ;; Tracked objects:
 19419 ;;		On entry : 0/0
 19420 ;;		On exit  : 0/0
 19421 ;;		Unchanged: 0/0
 19422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19423 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19426 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19427 ;;Total ram usage:        6 bytes
 19428 ;; Hardware stack levels used:    1
 19429 ;; Hardware stack levels required when called:    2
 19430 ;; This function calls:
 19431 ;;		_send_I2C_controlByte
 19432 ;;		_send_I2C_data
 19433 ;;		_send_I2C_startBit
 19434 ;;		_send_I2C_stopBit
 19435 ;; This function is called by:
 19436 ;;		_beginAFEcommunication
 19437 ;;		_setShortCircuitProtection
 19438 ;;		_setOverCurrentDischargeProtection
 19439 ;;		_setCellUndervoltageProtection
 19440 ;;		_setCellOvervoltageProtection
 19441 ;;		_updateCurrent
 19442 ;;		_enableDischarging
 19443 ;;		_enableCharging
 19444 ;; This function uses a non-reentrant model
 19445 ;;
 19446                           
 19447                           
 19448                           ;psect for function _I2C_writeRegister
 19449  34FA                     _I2C_writeRegister:	
 19450                           
 19451                           ;I2C.c: 105:     send_I2C_startBit();
 19452                           
 19453                           ;incstack = 0
 19454                           ; Regs used in _I2C_writeRegister: [wreg+status,2+status,0+pclath+cstack]
 19455  34FA  31B3  235E  31B4   	fcall	_send_I2C_startBit
 19456                           
 19457                           ;I2C.c: 106:     send_I2C_controlByte(slaveAddress, 0);
 19458  34FD  0876               	movf	I2C_writeRegister@slaveAddress+1,w
 19459  34FE  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 19460  34FF  0875               	movf	I2C_writeRegister@slaveAddress,w
 19461  3500  00F1               	movwf	send_I2C_controlByte@BlockAddress
 19462  3501  3000               	movlw	0
 19463  3502  00F3               	movwf	send_I2C_controlByte@RW_bit
 19464  3503  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 19465  3504  31B3  2392  31B4   	fcall	_send_I2C_controlByte
 19466                           
 19467                           ;I2C.c: 107:     send_I2C_data(regAddress);
 19468  3507  0878               	movf	I2C_writeRegister@regAddress+1,w
 19469  3508  00F2               	movwf	send_I2C_data@databyte+1
 19470  3509  0877               	movf	I2C_writeRegister@regAddress,w
 19471  350A  00F1               	movwf	send_I2C_data@databyte
 19472  350B  31B3  2377  31B4   	fcall	_send_I2C_data
 19473                           
 19474                           ;I2C.c: 108:     send_I2C_data(data);
 19475  350E  087A               	movf	I2C_writeRegister@data+1,w
 19476  350F  00F2               	movwf	send_I2C_data@databyte+1
 19477  3510  0879               	movf	I2C_writeRegister@data,w
 19478  3511  00F1               	movwf	send_I2C_data@databyte
 19479  3512  31B3  2377  31B4   	fcall	_send_I2C_data
 19480                           
 19481                           ;I2C.c: 109:     send_I2C_stopBit();
 19482  3515  31B3  2366         	fcall	_send_I2C_stopBit
 19483  3517  0008               	return
 19484  3518                     __end_of_I2C_writeRegister:	
 19485                           
 19486                           	psect	text66
 19487  3366                     __ptext66:	
 19488 ;; *************** function _send_I2C_stopBit *****************
 19489 ;; Defined at:
 19490 ;;		line 78 in file "I2C.c"
 19491 ;; Parameters:    Size  Location     Type
 19492 ;;		None
 19493 ;; Auto vars:     Size  Location     Type
 19494 ;;		None
 19495 ;; Return value:  Size  Location     Type
 19496 ;;                  1    wreg      void 
 19497 ;; Registers used:
 19498 ;;		None
 19499 ;; Tracked objects:
 19500 ;;		On entry : 0/0
 19501 ;;		On exit  : 0/0
 19502 ;;		Unchanged: 0/0
 19503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19508 ;;Total ram usage:        0 bytes
 19509 ;; Hardware stack levels used:    1
 19510 ;; Hardware stack levels required when called:    1
 19511 ;; This function calls:
 19512 ;;		Nothing
 19513 ;; This function is called by:
 19514 ;;		_I2C_writeRegister
 19515 ;;		_readRegister
 19516 ;; This function uses a non-reentrant model
 19517 ;;
 19518                           
 19519                           
 19520                           ;psect for function _send_I2C_stopBit
 19521  3366                     _send_I2C_stopBit:	
 19522                           
 19523                           ;I2C.c: 79:     PIR1bits.SSP1IF = 0;
 19524                           
 19525                           ;incstack = 0
 19526                           ; Regs used in _send_I2C_stopBit: []
 19527  3366  0020               	movlb	0	; select bank0
 19528  3367  1191               	bcf	17,3	;volatile
 19529                           
 19530                           ;I2C.c: 80:     SSPCON2bits.PEN = 1;
 19531  3368  0024               	movlb	4	; select bank4
 19532  3369  1516               	bsf	22,2	;volatile
 19533  336A                     l312:	
 19534                           ;I2C.c: 81:     while (!PIR1bits.SSP1IF);
 19535                           
 19536  336A  0020               	movlb	0	; select bank0
 19537  336B  1991               	btfsc	17,3	;volatile
 19538  336C  0008               	return
 19539  336D  2B6A               	goto	l312
 19540  336E                     __end_of_send_I2C_stopBit:	
 19541                           
 19542                           	psect	text67
 19543  335E                     __ptext67:	
 19544 ;; *************** function _send_I2C_startBit *****************
 19545 ;; Defined at:
 19546 ;;		line 65 in file "I2C.c"
 19547 ;; Parameters:    Size  Location     Type
 19548 ;;		None
 19549 ;; Auto vars:     Size  Location     Type
 19550 ;;		None
 19551 ;; Return value:  Size  Location     Type
 19552 ;;                  1    wreg      void 
 19553 ;; Registers used:
 19554 ;;		None
 19555 ;; Tracked objects:
 19556 ;;		On entry : 0/0
 19557 ;;		On exit  : 0/0
 19558 ;;		Unchanged: 0/0
 19559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19564 ;;Total ram usage:        0 bytes
 19565 ;; Hardware stack levels used:    1
 19566 ;; Hardware stack levels required when called:    1
 19567 ;; This function calls:
 19568 ;;		Nothing
 19569 ;; This function is called by:
 19570 ;;		_I2C_writeRegister
 19571 ;;		_readRegister
 19572 ;; This function uses a non-reentrant model
 19573 ;;
 19574                           
 19575                           
 19576                           ;psect for function _send_I2C_startBit
 19577  335E                     _send_I2C_startBit:	
 19578                           
 19579                           ;I2C.c: 66:     PIR1bits.SSP1IF = 0;
 19580                           
 19581                           ;incstack = 0
 19582                           ; Regs used in _send_I2C_startBit: []
 19583  335E  0020               	movlb	0	; select bank0
 19584  335F  1191               	bcf	17,3	;volatile
 19585                           
 19586                           ;I2C.c: 67:     SSPCON2bits.SEN = 1;
 19587  3360  0024               	movlb	4	; select bank4
 19588  3361  1416               	bsf	22,0	;volatile
 19589  3362                     l300:	
 19590                           ;I2C.c: 68:     while (!PIR1bits.SSP1IF);
 19591                           
 19592  3362  0020               	movlb	0	; select bank0
 19593  3363  1991               	btfsc	17,3	;volatile
 19594  3364  0008               	return
 19595  3365  2B62               	goto	l300
 19596  3366                     __end_of_send_I2C_startBit:	
 19597                           
 19598                           	psect	text68
 19599  3377                     __ptext68:	
 19600 ;; *************** function _send_I2C_data *****************
 19601 ;; Defined at:
 19602 ;;		line 33 in file "I2C.c"
 19603 ;; Parameters:    Size  Location     Type
 19604 ;;  databyte        2    1[COMMON] unsigned int 
 19605 ;; Auto vars:     Size  Location     Type
 19606 ;;		None
 19607 ;; Return value:  Size  Location     Type
 19608 ;;                  1    wreg      void 
 19609 ;; Registers used:
 19610 ;;		wreg
 19611 ;; Tracked objects:
 19612 ;;		On entry : 0/0
 19613 ;;		On exit  : 0/0
 19614 ;;		Unchanged: 0/0
 19615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19616 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19619 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19620 ;;Total ram usage:        2 bytes
 19621 ;; Hardware stack levels used:    1
 19622 ;; Hardware stack levels required when called:    1
 19623 ;; This function calls:
 19624 ;;		Nothing
 19625 ;; This function is called by:
 19626 ;;		_I2C_writeRegister
 19627 ;;		_readRegister
 19628 ;; This function uses a non-reentrant model
 19629 ;;
 19630                           
 19631                           
 19632                           ;psect for function _send_I2C_data
 19633  3377                     _send_I2C_data:	
 19634                           
 19635                           ;I2C.c: 34:     PIR1bits.SSP1IF = 0;
 19636                           
 19637                           ;incstack = 0
 19638                           ; Regs used in _send_I2C_data: [wreg]
 19639  3377  0020               	movlb	0	; select bank0
 19640  3378  1191               	bcf	17,3	;volatile
 19641                           
 19642                           ;I2C.c: 35:     SSPBUF = databyte;
 19643  3379  0871               	movf	send_I2C_data@databyte,w
 19644  337A  0024               	movlb	4	; select bank4
 19645  337B  0091               	movwf	17	;volatile
 19646  337C                     l282:	
 19647                           ;I2C.c: 37:     while (!PIR1bits.SSP1IF);
 19648                           
 19649  337C  0020               	movlb	0	; select bank0
 19650  337D  1991               	btfsc	17,3	;volatile
 19651  337E  0008               	return
 19652  337F  2B7C               	goto	l282
 19653  3380                     __end_of_send_I2C_data:	
 19654                           
 19655                           	psect	text69
 19656  3392                     __ptext69:	
 19657 ;; *************** function _send_I2C_controlByte *****************
 19658 ;; Defined at:
 19659 ;;		line 53 in file "I2C.c"
 19660 ;; Parameters:    Size  Location     Type
 19661 ;;  BlockAddress    2    1[COMMON] unsigned int 
 19662 ;;  RW_bit          2    3[COMMON] unsigned int 
 19663 ;; Auto vars:     Size  Location     Type
 19664 ;;		None
 19665 ;; Return value:  Size  Location     Type
 19666 ;;                  1    wreg      void 
 19667 ;; Registers used:
 19668 ;;		wreg, status,2, status,0
 19669 ;; Tracked objects:
 19670 ;;		On entry : 0/0
 19671 ;;		On exit  : 0/0
 19672 ;;		Unchanged: 0/0
 19673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19674 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19677 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19678 ;;Total ram usage:        4 bytes
 19679 ;; Hardware stack levels used:    1
 19680 ;; Hardware stack levels required when called:    1
 19681 ;; This function calls:
 19682 ;;		Nothing
 19683 ;; This function is called by:
 19684 ;;		_I2C_writeRegister
 19685 ;;		_readRegister
 19686 ;; This function uses a non-reentrant model
 19687 ;;
 19688                           
 19689                           
 19690                           ;psect for function _send_I2C_controlByte
 19691  3392                     _send_I2C_controlByte:	
 19692                           
 19693                           ;I2C.c: 54:     PIR1bits.SSP1IF = 0;
 19694                           
 19695                           ;incstack = 0
 19696                           ; Regs used in _send_I2C_controlByte: [wreg+status,2+status,0]
 19697  3392  0020               	movlb	0	; select bank0
 19698  3393  1191               	bcf	17,3	;volatile
 19699                           
 19700                           ;I2C.c: 60:     SSPBUF = (((0b0000 << 4) | (BlockAddress << 1)) + RW_bit);
 19701  3394  3571               	lslf	send_I2C_controlByte@BlockAddress,w
 19702  3395  0773               	addwf	send_I2C_controlByte@RW_bit,w
 19703  3396  0024               	movlb	4	; select bank4
 19704  3397  0091               	movwf	17	;volatile
 19705  3398                     l294:	
 19706                           ;I2C.c: 62:     while (!PIR1bits.SSP1IF);
 19707                           
 19708  3398  0020               	movlb	0	; select bank0
 19709  3399  1991               	btfsc	17,3	;volatile
 19710  339A  0008               	return
 19711  339B  2B98               	goto	l294
 19712  339C                     __end_of_send_I2C_controlByte:	
 19713                           
 19714                           	psect	text70
 19715  33B0                     __ptext70:	
 19716 ;; *************** function _init_TMR1 *****************
 19717 ;; Defined at:
 19718 ;;		line 189 in file "main.c"
 19719 ;; Parameters:    Size  Location     Type
 19720 ;;		None
 19721 ;; Auto vars:     Size  Location     Type
 19722 ;;		None
 19723 ;; Return value:  Size  Location     Type
 19724 ;;                  1    wreg      void 
 19725 ;; Registers used:
 19726 ;;		wreg, status,2, status,0
 19727 ;; Tracked objects:
 19728 ;;		On entry : 0/0
 19729 ;;		On exit  : 0/0
 19730 ;;		Unchanged: 0/0
 19731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19736 ;;Total ram usage:        0 bytes
 19737 ;; Hardware stack levels used:    1
 19738 ;; Hardware stack levels required when called:    1
 19739 ;; This function calls:
 19740 ;;		Nothing
 19741 ;; This function is called by:
 19742 ;;		_main
 19743 ;; This function uses a non-reentrant model
 19744 ;;
 19745                           
 19746                           
 19747                           ;psect for function _init_TMR1
 19748  33B0                     _init_TMR1:	
 19749                           
 19750                           ;main.c: 192:     T1CONbits.T1CKPS = 0b00;
 19751                           
 19752                           ;incstack = 0
 19753                           ; Regs used in _init_TMR1: [wreg+status,2+status,0]
 19754  33B0  30CF               	movlw	-49
 19755  33B1  0020               	movlb	0	; select bank0
 19756  33B2  0598               	andwf	24,f	;volatile
 19757                           
 19758                           ;main.c: 194:     TMR1 = 0;
 19759  33B3  0196               	clrf	22	;volatile
 19760  33B4  0197               	clrf	23	;volatile
 19761                           
 19762                           ;main.c: 196:     T1CONbits.TMR1ON = 1;
 19763  33B5  1418               	bsf	24,0	;volatile
 19764                           
 19765                           ;main.c: 198:     PIE1bits.TMR1IE = 1;
 19766  33B6  0021               	movlb	1	; select bank1
 19767  33B7  1411               	bsf	17,0	;volatile
 19768                           
 19769                           ;main.c: 200:     INTCONbits.PEIE = 1;
 19770  33B8  170B               	bsf	11,6	;volatile
 19771                           
 19772                           ;main.c: 202:     (INTCONbits.GIE = 1);
 19773  33B9  178B               	bsf	11,7	;volatile
 19774  33BA  0008               	return
 19775  33BB                     __end_of_init_TMR1:	
 19776                           
 19777                           	psect	text71
 19778  2001                     __ptext71:	
 19779 ;; *************** function _init_RGB *****************
 19780 ;; Defined at:
 19781 ;;		line 6 in file "RGB.c"
 19782 ;; Parameters:    Size  Location     Type
 19783 ;;		None
 19784 ;; Auto vars:     Size  Location     Type
 19785 ;;		None
 19786 ;; Return value:  Size  Location     Type
 19787 ;;                  1    wreg      void 
 19788 ;; Registers used:
 19789 ;;		None
 19790 ;; Tracked objects:
 19791 ;;		On entry : 0/0
 19792 ;;		On exit  : 0/0
 19793 ;;		Unchanged: 0/0
 19794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19799 ;;Total ram usage:        0 bytes
 19800 ;; Hardware stack levels used:    1
 19801 ;; Hardware stack levels required when called:    1
 19802 ;; This function calls:
 19803 ;;		Nothing
 19804 ;; This function is called by:
 19805 ;;		_main
 19806 ;; This function uses a non-reentrant model
 19807 ;;
 19808                           
 19809                           
 19810                           ;psect for function _init_RGB
 19811  2001                     _init_RGB:	
 19812                           
 19813                           ;RGB.c: 8:     LATAbits.LATA4 = 1;
 19814                           
 19815                           ;incstack = 0
 19816                           ; Regs used in _init_RGB: []
 19817  2001  0022               	movlb	2	; select bank2
 19818  2002  160C               	bsf	12,4	;volatile
 19819                           
 19820                           ;RGB.c: 9:     LATAbits.LATA5 = 1;
 19821  2003  168C               	bsf	12,5	;volatile
 19822                           
 19823                           ;RGB.c: 10:     LATEbits.LATE0 = 1;
 19824  2004  1410               	bsf	16,0	;volatile
 19825  2005  0008               	return
 19826  2006                     __end_of_init_RGB:	
 19827                           
 19828                           	psect	text72
 19829  33C7                     __ptext72:	
 19830 ;; *************** function _init_I2C *****************
 19831 ;; Defined at:
 19832 ;;		line 10 in file "I2C.c"
 19833 ;; Parameters:    Size  Location     Type
 19834 ;;		None
 19835 ;; Auto vars:     Size  Location     Type
 19836 ;;		None
 19837 ;; Return value:  Size  Location     Type
 19838 ;;                  1    wreg      void 
 19839 ;; Registers used:
 19840 ;;		wreg, status,2, status,0
 19841 ;; Tracked objects:
 19842 ;;		On entry : 0/0
 19843 ;;		On exit  : 0/0
 19844 ;;		Unchanged: 0/0
 19845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19848 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19849 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19850 ;;Total ram usage:        1 bytes
 19851 ;; Hardware stack levels used:    1
 19852 ;; Hardware stack levels required when called:    1
 19853 ;; This function calls:
 19854 ;;		Nothing
 19855 ;; This function is called by:
 19856 ;;		_main
 19857 ;; This function uses a non-reentrant model
 19858 ;;
 19859                           
 19860                           
 19861                           ;psect for function _init_I2C
 19862  33C7                     _init_I2C:	
 19863                           
 19864                           ;I2C.c: 14:     SSPCONbits.SSPM = 0x08;
 19865                           
 19866                           ;incstack = 0
 19867                           ; Regs used in _init_I2C: [wreg+status,2+status,0]
 19868  33C7  0024               	movlb	4	; select bank4
 19869  33C8  0815               	movf	21,w	;volatile
 19870  33C9  39F0               	andlw	-16
 19871  33CA  3808               	iorlw	8
 19872  33CB  0095               	movwf	21	;volatile
 19873                           
 19874                           ;I2C.c: 15:     SSPCONbits.SSPEN = 1;
 19875  33CC  1695               	bsf	21,5	;volatile
 19876                           
 19877                           ;I2C.c: 24:     SSPADD = 39;
 19878  33CD  3027               	movlw	39
 19879  33CE  0092               	movwf	18	;volatile
 19880                           
 19881                           ;I2C.c: 27:     _delay((unsigned long)((10)*(16000000/4000.0)));
 19882  33CF  3034               	movlw	52
 19883  33D0  00F1               	movwf	??_init_I2C
 19884  33D1  30F2               	movlw	242
 19885  33D2                     u11527:	
 19886  33D2  0B89               	decfsz	9,f
 19887  33D3  2BD2               	goto	u11527
 19888  33D4  0BF1               	decfsz	??_init_I2C,f
 19889  33D5  2BD2               	goto	u11527
 19890  33D6  0008               	return
 19891  33D7                     __end_of_init_I2C:	
 19892                           
 19893                           	psect	text73
 19894  0808                     __ptext73:	
 19895 ;; *************** function _init_GPIO *****************
 19896 ;; Defined at:
 19897 ;;		line 206 in file "main.c"
 19898 ;; Parameters:    Size  Location     Type
 19899 ;;		None
 19900 ;; Auto vars:     Size  Location     Type
 19901 ;;		None
 19902 ;; Return value:  Size  Location     Type
 19903 ;;                  1    wreg      void 
 19904 ;; Registers used:
 19905 ;;		wreg, status,2, status,0
 19906 ;; Tracked objects:
 19907 ;;		On entry : 0/0
 19908 ;;		On exit  : 0/0
 19909 ;;		Unchanged: 0/0
 19910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19915 ;;Total ram usage:        0 bytes
 19916 ;; Hardware stack levels used:    1
 19917 ;; Hardware stack levels required when called:    1
 19918 ;; This function calls:
 19919 ;;		Nothing
 19920 ;; This function is called by:
 19921 ;;		_main
 19922 ;; This function uses a non-reentrant model
 19923 ;;
 19924                           
 19925                           
 19926                           ;psect for function _init_GPIO
 19927  0808                     _init_GPIO:	
 19928                           
 19929                           ;main.c: 212:     TRISBbits.TRISB2 = 0;
 19930                           
 19931                           ;incstack = 0
 19932                           ; Regs used in _init_GPIO: [wreg+status,2+status,0]
 19933  0808  0021               	movlb	1	; select bank1
 19934  0809  110D               	bcf	13,2	;volatile
 19935                           
 19936                           ;main.c: 213:     ANSELBbits.ANSB2 = 0;
 19937  080A  0023               	movlb	3	; select bank3
 19938  080B  110D               	bcf	13,2	;volatile
 19939                           
 19940                           ;main.c: 214:     TRISBbits.TRISB3 = 1;
 19941  080C  0021               	movlb	1	; select bank1
 19942  080D  158D               	bsf	13,3	;volatile
 19943                           
 19944                           ;main.c: 215:     ANSELBbits.ANSB3 = 0;
 19945  080E  0023               	movlb	3	; select bank3
 19946  080F  118D               	bcf	13,3	;volatile
 19947                           
 19948                           ;main.c: 220:     ANSELCbits.ANSC4 = 0;
 19949  0810  120E               	bcf	14,4	;volatile
 19950                           
 19951                           ;main.c: 221:     ANSELCbits.ANSC5 = 0;
 19952  0811  128E               	bcf	14,5	;volatile
 19953                           
 19954                           ;main.c: 222:     TRISCbits.TRISC4 = 1;
 19955  0812  0021               	movlb	1	; select bank1
 19956  0813  160E               	bsf	14,4	;volatile
 19957                           
 19958                           ;main.c: 223:     TRISCbits.TRISC5 = 1;
 19959  0814  168E               	bsf	14,5	;volatile
 19960                           
 19961                           ;main.c: 232:     TRISAbits.TRISA4 = 0;
 19962  0815  120C               	bcf	12,4	;volatile
 19963                           
 19964                           ;main.c: 233:     TRISAbits.TRISA5 = 0;
 19965  0816  128C               	bcf	12,5	;volatile
 19966                           
 19967                           ;main.c: 234:     TRISEbits.TRISE0 = 0;
 19968  0817  1010               	bcf	16,0	;volatile
 19969                           
 19970                           ;main.c: 239:     TRISAbits.TRISA3 = 0;
 19971  0818  118C               	bcf	12,3	;volatile
 19972                           
 19973                           ;main.c: 240:     LATAbits.LATA3 = 0;
 19974  0819  0022               	movlb	2	; select bank2
 19975  081A  118C               	bcf	12,3	;volatile
 19976                           
 19977                           ;main.c: 246:     PPSLOCK = 0x55;
 19978  081B  3055               	movlw	85
 19979  081C  003C               	movlb	28	; select bank28
 19980  081D  008F               	movwf	15	;volsfr
 19981                           
 19982                           ;main.c: 247:     PPSLOCK = 0xAA;
 19983  081E  30AA               	movlw	170
 19984  081F  008F               	movwf	15	;volsfr
 19985                           
 19986                           ;main.c: 248:     PPSLOCKbits.PPSLOCKED = 0x00;
 19987  0820  100F               	bcf	15,0	;volsfr
 19988                           
 19989                           ;main.c: 252:     RC4PPSbits.RC4PPS = 0x0011;
 19990  0821  003D               	movlb	29	; select bank29
 19991  0822  0824               	movf	36,w	;volatile
 19992  0823  39E0               	andlw	-32
 19993  0824  3811               	iorlw	17
 19994  0825  00A4               	movwf	36	;volatile
 19995                           
 19996                           ;main.c: 253:     SSPDATPPSbits.SSPDATPPS = 0x0014;
 19997  0826  003C               	movlb	28	; select bank28
 19998  0827  0821               	movf	33,w	;volatile
 19999  0828  39E0               	andlw	-32
 20000  0829  3814               	iorlw	20
 20001  082A  00A1               	movwf	33	;volatile
 20002                           
 20003                           ;main.c: 254:     SSPCLKPPSbits.SSPCLKPPS = 0x0015;
 20004  082B  0820               	movf	32,w	;volatile
 20005  082C  39E0               	andlw	-32
 20006  082D  3815               	iorlw	21
 20007  082E  00A0               	movwf	32	;volatile
 20008                           
 20009                           ;main.c: 255:     RC5PPSbits.RC5PPS = 0x0010;
 20010  082F  003D               	movlb	29	; select bank29
 20011  0830  0825               	movf	37,w	;volatile
 20012  0831  39E0               	andlw	-32
 20013  0832  3810               	iorlw	16
 20014  0833  00A5               	movwf	37	;volatile
 20015                           
 20016                           ;main.c: 258:     RB2PPSbits.RB2PPS = 0x14;
 20017  0834  081A               	movf	26,w	;volatile
 20018  0835  39E0               	andlw	-32
 20019  0836  3814               	iorlw	20
 20020  0837  009A               	movwf	26	;volatile
 20021                           
 20022                           ;main.c: 259:     RXPPSbits.RXPPS = 0x0B;
 20023  0838  003C               	movlb	28	; select bank28
 20024  0839  0824               	movf	36,w	;volatile
 20025  083A  39E0               	andlw	-32
 20026  083B  380B               	iorlw	11
 20027  083C  00A4               	movwf	36	;volatile
 20028                           
 20029                           ;main.c: 261:     PPSLOCK = 0x55;
 20030  083D  3055               	movlw	85
 20031  083E  008F               	movwf	15	;volsfr
 20032                           
 20033                           ;main.c: 262:     PPSLOCK = 0xAA;
 20034  083F  30AA               	movlw	170
 20035  0840  008F               	movwf	15	;volsfr
 20036                           
 20037                           ;main.c: 263:     PPSLOCKbits.PPSLOCKED = 0x01;
 20038  0841  140F               	bsf	15,0	;volsfr
 20039  0842  0008               	return
 20040  0843                     __end_of_init_GPIO:	
 20041                           
 20042                           	psect	text74
 20043  1800                     __ptext74:	
 20044 ;; *************** function _initWDT *****************
 20045 ;; Defined at:
 20046 ;;		line 267 in file "main.c"
 20047 ;; Parameters:    Size  Location     Type
 20048 ;;		None
 20049 ;; Auto vars:     Size  Location     Type
 20050 ;;		None
 20051 ;; Return value:  Size  Location     Type
 20052 ;;                  1    wreg      void 
 20053 ;; Registers used:
 20054 ;;		wreg, status,2, status,0
 20055 ;; Tracked objects:
 20056 ;;		On entry : 0/0
 20057 ;;		On exit  : 0/0
 20058 ;;		Unchanged: 0/0
 20059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20064 ;;Total ram usage:        0 bytes
 20065 ;; Hardware stack levels used:    1
 20066 ;; Hardware stack levels required when called:    1
 20067 ;; This function calls:
 20068 ;;		Nothing
 20069 ;; This function is called by:
 20070 ;;		_main
 20071 ;; This function uses a non-reentrant model
 20072 ;;
 20073                           
 20074                           
 20075                           ;psect for function _initWDT
 20076  1800                     _initWDT:	
 20077                           
 20078                           ;main.c: 269:     WDTCONbits.WDTPS = 0b01101;
 20079                           
 20080                           ;incstack = 0
 20081                           ; Regs used in _initWDT: [wreg+status,2+status,0]
 20082  1800  0021               	movlb	1	; select bank1
 20083  1801  0817               	movf	23,w	;volatile
 20084  1802  39C1               	andlw	-63
 20085  1803  381A               	iorlw	26
 20086  1804  0097               	movwf	23	;volatile
 20087  1805  0008               	return
 20088  1806                     __end_of_initWDT:	
 20089                           
 20090                           	psect	text75
 20091  07FD                     __ptext75:	
 20092 ;; *************** function _initClock *****************
 20093 ;; Defined at:
 20094 ;;		line 180 in file "main.c"
 20095 ;; Parameters:    Size  Location     Type
 20096 ;;		None
 20097 ;; Auto vars:     Size  Location     Type
 20098 ;;		None
 20099 ;; Return value:  Size  Location     Type
 20100 ;;                  1    wreg      void 
 20101 ;; Registers used:
 20102 ;;		status,2, status,0, pclath, cstack
 20103 ;; Tracked objects:
 20104 ;;		On entry : 0/0
 20105 ;;		On exit  : 0/0
 20106 ;;		Unchanged: 0/0
 20107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20112 ;;Total ram usage:        0 bytes
 20113 ;; Hardware stack levels used:    1
 20114 ;; Hardware stack levels required when called:    2
 20115 ;; This function calls:
 20116 ;;		_internal_16
 20117 ;; This function is called by:
 20118 ;;		_main
 20119 ;; This function uses a non-reentrant model
 20120 ;;
 20121                           
 20122                           
 20123                           ;psect for function _initClock
 20124  07FD                     _initClock:	
 20125                           
 20126                           ;main.c: 182:     internal_16();
 20127                           
 20128                           ;incstack = 0
 20129                           ; Regs used in _initClock: [status,2+status,0+pclath+cstack]
 20130  07FD  31B3  236E         	fcall	_internal_16
 20131  07FF  0008               	return
 20132  0800                     __end_of_initClock:	
 20133                           
 20134                           	psect	text76
 20135  336E                     __ptext76:	
 20136 ;; *************** function _internal_16 *****************
 20137 ;; Defined at:
 20138 ;;		line 26 in file "pic16f1719_internals.c"
 20139 ;; Parameters:    Size  Location     Type
 20140 ;;		None
 20141 ;; Auto vars:     Size  Location     Type
 20142 ;;		None
 20143 ;; Return value:  Size  Location     Type
 20144 ;;                  1    wreg      void 
 20145 ;; Registers used:
 20146 ;;		None
 20147 ;; Tracked objects:
 20148 ;;		On entry : 0/0
 20149 ;;		On exit  : 0/0
 20150 ;;		Unchanged: 0/0
 20151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20156 ;;Total ram usage:        0 bytes
 20157 ;; Hardware stack levels used:    1
 20158 ;; Hardware stack levels required when called:    1
 20159 ;; This function calls:
 20160 ;;		Nothing
 20161 ;; This function is called by:
 20162 ;;		_initClock
 20163 ;; This function uses a non-reentrant model
 20164 ;;
 20165                           
 20166                           
 20167                           ;psect for function _internal_16
 20168  336E                     _internal_16:	
 20169                           
 20170                           ;pic16f1719_internals.c: 28: SCS0 = 0;
 20171                           
 20172                           ;incstack = 0
 20173                           ; Regs used in _internal_16: []
 20174  336E  0021               	movlb	1	; select bank1
 20175  336F  1019               	bcf	25,0	;volatile
 20176                           
 20177                           ;pic16f1719_internals.c: 29: SCS1 = 0;
 20178  3370  1099               	bcf	25,1	;volatile
 20179                           
 20180                           ;pic16f1719_internals.c: 31: IRCF0 = 1;
 20181  3371  1599               	bsf	25,3	;volatile
 20182                           
 20183                           ;pic16f1719_internals.c: 32: IRCF1 = 1;
 20184  3372  1619               	bsf	25,4	;volatile
 20185                           
 20186                           ;pic16f1719_internals.c: 33: IRCF2 = 1;
 20187  3373  1699               	bsf	25,5	;volatile
 20188                           
 20189                           ;pic16f1719_internals.c: 34: IRCF3 = 1;
 20190  3374  1719               	bsf	25,6	;volatile
 20191                           
 20192                           ;pic16f1719_internals.c: 36: SPLLEN = 0;
 20193  3375  1399               	bcf	25,7	;volatile
 20194  3376  0008               	return
 20195  3377                     __end_of_internal_16:	
 20196                           
 20197                           	psect	text77
 20198  2C45                     __ptext77:	
 20199 ;; *************** function _EUSART_Initialize *****************
 20200 ;; Defined at:
 20201 ;;		line 6 in file "EUSART.c"
 20202 ;; Parameters:    Size  Location     Type
 20203 ;;  baudrate        4   18[BANK0 ] const long 
 20204 ;; Auto vars:     Size  Location     Type
 20205 ;;  x               2   10[COMMON] unsigned int 
 20206 ;; Return value:  Size  Location     Type
 20207 ;;                  1    wreg      unsigned char 
 20208 ;; Registers used:
 20209 ;;		wreg, status,2, status,0, pclath, cstack
 20210 ;; Tracked objects:
 20211 ;;		On entry : 0/0
 20212 ;;		On exit  : 0/0
 20213 ;;		Unchanged: 0/0
 20214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20215 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20216 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20217 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20218 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20219 ;;Total ram usage:       18 bytes
 20220 ;; Hardware stack levels used:    1
 20221 ;; Hardware stack levels required when called:    2
 20222 ;; This function calls:
 20223 ;;		___aldiv
 20224 ;; This function is called by:
 20225 ;;		_main
 20226 ;; This function uses a non-reentrant model
 20227 ;;
 20228                           
 20229                           
 20230                           ;psect for function _EUSART_Initialize
 20231  2C45                     _EUSART_Initialize:	
 20232                           
 20233                           ;EUSART.c: 6: char EUSART_Initialize(const long int baudrate);EUSART.c: 7: {;EUSART.c: 8
      +                          :  unsigned int x;;EUSART.c: 9:  x = (16000000 - baudrate*64)/(baudrate*64);
 20234                           
 20235                           ;incstack = 0
 20236                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 20237  2C45  0020               	movlb	0	; select bank0
 20238  2C46  0832               	movf	EUSART_Initialize@baudrate,w
 20239  2C47  00B6               	movwf	??_EUSART_Initialize
 20240  2C48  0833               	movf	EUSART_Initialize@baudrate+1,w
 20241  2C49  00B7               	movwf	??_EUSART_Initialize+1
 20242  2C4A  0834               	movf	EUSART_Initialize@baudrate+2,w
 20243  2C4B  00B8               	movwf	??_EUSART_Initialize+2
 20244  2C4C  0835               	movf	EUSART_Initialize@baudrate+3,w
 20245  2C4D  00B9               	movwf	??_EUSART_Initialize+3
 20246  2C4E  3006               	movlw	6
 20247  2C4F                     u11405:	
 20248  2C4F  35B6               	lslf	??_EUSART_Initialize,f
 20249  2C50  0DB7               	rlf	??_EUSART_Initialize+1,f
 20250  2C51  0DB8               	rlf	??_EUSART_Initialize+2,f
 20251  2C52  0DB9               	rlf	??_EUSART_Initialize+3,f
 20252  2C53  0B89               	decfsz	9,f
 20253  2C54  2C4F               	goto	u11405
 20254  2C55  0839               	movf	??_EUSART_Initialize+3,w
 20255  2C56  00A7               	movwf	___aldiv@divisor+3
 20256  2C57  0838               	movf	??_EUSART_Initialize+2,w
 20257  2C58  00A6               	movwf	___aldiv@divisor+2
 20258  2C59  0837               	movf	??_EUSART_Initialize+1,w
 20259  2C5A  00A5               	movwf	___aldiv@divisor+1
 20260  2C5B  0836               	movf	??_EUSART_Initialize,w
 20261  2C5C  00A4               	movwf	___aldiv@divisor
 20262  2C5D  0832               	movf	EUSART_Initialize@baudrate,w
 20263  2C5E  00BA               	movwf	??_EUSART_Initialize+4
 20264  2C5F  0833               	movf	EUSART_Initialize@baudrate+1,w
 20265  2C60  00BB               	movwf	??_EUSART_Initialize+5
 20266  2C61  0834               	movf	EUSART_Initialize@baudrate+2,w
 20267  2C62  00BC               	movwf	??_EUSART_Initialize+6
 20268  2C63  0835               	movf	EUSART_Initialize@baudrate+3,w
 20269  2C64  00BD               	movwf	??_EUSART_Initialize+7
 20270  2C65  3006               	movlw	6
 20271  2C66                     u11415:	
 20272  2C66  35BA               	lslf	??_EUSART_Initialize+4,f
 20273  2C67  0DBB               	rlf	??_EUSART_Initialize+5,f
 20274  2C68  0DBC               	rlf	??_EUSART_Initialize+6,f
 20275  2C69  0DBD               	rlf	??_EUSART_Initialize+7,f
 20276  2C6A  0B89               	decfsz	9,f
 20277  2C6B  2C66               	goto	u11415
 20278  2C6C  3000               	movlw	0
 20279  2C6D  00BE               	movwf	??_EUSART_Initialize+8
 20280  2C6E  3024               	movlw	36
 20281  2C6F  00BF               	movwf	??_EUSART_Initialize+9
 20282  2C70  30F4               	movlw	244
 20283  2C71  00C0               	movwf	??_EUSART_Initialize+10
 20284  2C72  3000               	movlw	0
 20285  2C73  00C1               	movwf	??_EUSART_Initialize+11
 20286  2C74  083A               	movf	??_EUSART_Initialize+4,w
 20287  2C75  02BE               	subwf	??_EUSART_Initialize+8,f
 20288  2C76  083B               	movf	??_EUSART_Initialize+5,w
 20289  2C77  3BBF               	subwfb	??_EUSART_Initialize+9,f
 20290  2C78  083C               	movf	??_EUSART_Initialize+6,w
 20291  2C79  3BC0               	subwfb	??_EUSART_Initialize+10,f
 20292  2C7A  083D               	movf	??_EUSART_Initialize+7,w
 20293  2C7B  3BC1               	subwfb	??_EUSART_Initialize+11,f
 20294  2C7C  0841               	movf	??_EUSART_Initialize+11,w
 20295  2C7D  00AB               	movwf	___aldiv@dividend+3
 20296  2C7E  0840               	movf	??_EUSART_Initialize+10,w
 20297  2C7F  00AA               	movwf	___aldiv@dividend+2
 20298  2C80  083F               	movf	??_EUSART_Initialize+9,w
 20299  2C81  00A9               	movwf	___aldiv@dividend+1
 20300  2C82  083E               	movf	??_EUSART_Initialize+8,w
 20301  2C83  00A8               	movwf	___aldiv@dividend
 20302  2C84  31AB  232D  31AC   	fcall	___aldiv
 20303  2C87  0020               	movlb	0	; select bank0
 20304  2C88  0825               	movf	?___aldiv+1,w
 20305  2C89  00FB               	movwf	EUSART_Initialize@x+1
 20306  2C8A  0824               	movf	?___aldiv,w
 20307  2C8B  00FA               	movwf	EUSART_Initialize@x
 20308                           
 20309                           ;EUSART.c: 10:  if(x>255)
 20310  2C8C  3001               	movlw	1
 20311  2C8D  027B               	subwf	EUSART_Initialize@x+1,w
 20312  2C8E  3000               	movlw	0
 20313  2C8F  1903               	skipnz
 20314  2C90  027A               	subwf	EUSART_Initialize@x,w
 20315  2C91  1C03               	skipc
 20316  2C92  2CDB               	goto	l8364
 20317                           
 20318                           ;EUSART.c: 11:  {;EUSART.c: 12:   x = (16000000 - baudrate*16)/(baudrate*16);
 20319  2C93  0832               	movf	EUSART_Initialize@baudrate,w
 20320  2C94  00B6               	movwf	??_EUSART_Initialize
 20321  2C95  0833               	movf	EUSART_Initialize@baudrate+1,w
 20322  2C96  00B7               	movwf	??_EUSART_Initialize+1
 20323  2C97  0834               	movf	EUSART_Initialize@baudrate+2,w
 20324  2C98  00B8               	movwf	??_EUSART_Initialize+2
 20325  2C99  0835               	movf	EUSART_Initialize@baudrate+3,w
 20326  2C9A  00B9               	movwf	??_EUSART_Initialize+3
 20327  2C9B  3004               	movlw	4
 20328  2C9C                     u11435:	
 20329  2C9C  35B6               	lslf	??_EUSART_Initialize,f
 20330  2C9D  0DB7               	rlf	??_EUSART_Initialize+1,f
 20331  2C9E  0DB8               	rlf	??_EUSART_Initialize+2,f
 20332  2C9F  0DB9               	rlf	??_EUSART_Initialize+3,f
 20333  2CA0  0B89               	decfsz	9,f
 20334  2CA1  2C9C               	goto	u11435
 20335  2CA2  0839               	movf	??_EUSART_Initialize+3,w
 20336  2CA3  00A7               	movwf	___aldiv@divisor+3
 20337  2CA4  0838               	movf	??_EUSART_Initialize+2,w
 20338  2CA5  00A6               	movwf	___aldiv@divisor+2
 20339  2CA6  0837               	movf	??_EUSART_Initialize+1,w
 20340  2CA7  00A5               	movwf	___aldiv@divisor+1
 20341  2CA8  0836               	movf	??_EUSART_Initialize,w
 20342  2CA9  00A4               	movwf	___aldiv@divisor
 20343  2CAA  0832               	movf	EUSART_Initialize@baudrate,w
 20344  2CAB  00BA               	movwf	??_EUSART_Initialize+4
 20345  2CAC  0833               	movf	EUSART_Initialize@baudrate+1,w
 20346  2CAD  00BB               	movwf	??_EUSART_Initialize+5
 20347  2CAE  0834               	movf	EUSART_Initialize@baudrate+2,w
 20348  2CAF  00BC               	movwf	??_EUSART_Initialize+6
 20349  2CB0  0835               	movf	EUSART_Initialize@baudrate+3,w
 20350  2CB1  00BD               	movwf	??_EUSART_Initialize+7
 20351  2CB2  3004               	movlw	4
 20352  2CB3                     u11445:	
 20353  2CB3  35BA               	lslf	??_EUSART_Initialize+4,f
 20354  2CB4  0DBB               	rlf	??_EUSART_Initialize+5,f
 20355  2CB5  0DBC               	rlf	??_EUSART_Initialize+6,f
 20356  2CB6  0DBD               	rlf	??_EUSART_Initialize+7,f
 20357  2CB7  0B89               	decfsz	9,f
 20358  2CB8  2CB3               	goto	u11445
 20359  2CB9  3000               	movlw	0
 20360  2CBA  00BE               	movwf	??_EUSART_Initialize+8
 20361  2CBB  3024               	movlw	36
 20362  2CBC  00BF               	movwf	??_EUSART_Initialize+9
 20363  2CBD  30F4               	movlw	244
 20364  2CBE  00C0               	movwf	??_EUSART_Initialize+10
 20365  2CBF  3000               	movlw	0
 20366  2CC0  00C1               	movwf	??_EUSART_Initialize+11
 20367  2CC1  083A               	movf	??_EUSART_Initialize+4,w
 20368  2CC2  02BE               	subwf	??_EUSART_Initialize+8,f
 20369  2CC3  083B               	movf	??_EUSART_Initialize+5,w
 20370  2CC4  3BBF               	subwfb	??_EUSART_Initialize+9,f
 20371  2CC5  083C               	movf	??_EUSART_Initialize+6,w
 20372  2CC6  3BC0               	subwfb	??_EUSART_Initialize+10,f
 20373  2CC7  083D               	movf	??_EUSART_Initialize+7,w
 20374  2CC8  3BC1               	subwfb	??_EUSART_Initialize+11,f
 20375  2CC9  0841               	movf	??_EUSART_Initialize+11,w
 20376  2CCA  00AB               	movwf	___aldiv@dividend+3
 20377  2CCB  0840               	movf	??_EUSART_Initialize+10,w
 20378  2CCC  00AA               	movwf	___aldiv@dividend+2
 20379  2CCD  083F               	movf	??_EUSART_Initialize+9,w
 20380  2CCE  00A9               	movwf	___aldiv@dividend+1
 20381  2CCF  083E               	movf	??_EUSART_Initialize+8,w
 20382  2CD0  00A8               	movwf	___aldiv@dividend
 20383  2CD1  31AB  232D  31AC   	fcall	___aldiv
 20384  2CD4  0020               	movlb	0	; select bank0
 20385  2CD5  0825               	movf	?___aldiv+1,w
 20386  2CD6  00FB               	movwf	EUSART_Initialize@x+1
 20387  2CD7  0824               	movf	?___aldiv,w
 20388  2CD8  00FA               	movwf	EUSART_Initialize@x
 20389                           
 20390                           ;EUSART.c: 13:   BRGH = 1;
 20391  2CD9  0023               	movlb	3	; select bank3
 20392  2CDA  151E               	bsf	30,2	;volatile
 20393  2CDB                     l8364:	
 20394                           
 20395                           ;EUSART.c: 15:  if(x<256)
 20396  2CDB  3001               	movlw	1
 20397  2CDC  027B               	subwf	EUSART_Initialize@x+1,w
 20398  2CDD  3000               	movlw	0
 20399  2CDE  1903               	skipnz
 20400  2CDF  027A               	subwf	EUSART_Initialize@x,w
 20401  2CE0  1803               	skipnc
 20402  2CE1  0008               	return
 20403                           
 20404                           ;EUSART.c: 16:  {;EUSART.c: 17:    SPBRG = x;
 20405  2CE2  087A               	movf	EUSART_Initialize@x,w
 20406  2CE3  0023               	movlb	3	; select bank3
 20407  2CE4  009B               	movwf	27	;volatile
 20408                           
 20409                           ;EUSART.c: 18:    SYNC = 0;
 20410  2CE5  121E               	bcf	30,4	;volatile
 20411                           
 20412                           ;EUSART.c: 19:    SPEN = 1;
 20413  2CE6  179D               	bsf	29,7	;volatile
 20414                           
 20415                           ;EUSART.c: 20:           TRISC7 = 1;
 20416  2CE7  0021               	movlb	1	; select bank1
 20417  2CE8  178E               	bsf	14,7	;volatile
 20418                           
 20419                           ;EUSART.c: 21:           TRISC6 = 1;
 20420  2CE9  170E               	bsf	14,6	;volatile
 20421                           
 20422                           ;EUSART.c: 22:           CREN = 1;
 20423  2CEA  0023               	movlb	3	; select bank3
 20424  2CEB  161D               	bsf	29,4	;volatile
 20425                           
 20426                           ;EUSART.c: 23:           TXEN = 1;
 20427  2CEC  169E               	bsf	30,5	;volatile
 20428  2CED  0008               	return
 20429  2CEE                     __end_of_EUSART_Initialize:	
 20430                           
 20431                           	psect	text78
 20432  2B2D                     __ptext78:	
 20433 ;; *************** function ___aldiv *****************
 20434 ;; Defined at:
 20435 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
 20436 ;; Parameters:    Size  Location     Type
 20437 ;;  divisor         4    4[BANK0 ] long 
 20438 ;;  dividend        4    8[BANK0 ] long 
 20439 ;; Auto vars:     Size  Location     Type
 20440 ;;  quotient        4   14[BANK0 ] long 
 20441 ;;  sign            1   13[BANK0 ] unsigned char 
 20442 ;;  counter         1   12[BANK0 ] unsigned char 
 20443 ;; Return value:  Size  Location     Type
 20444 ;;                  4    4[BANK0 ] long 
 20445 ;; Registers used:
 20446 ;;		wreg, status,2, status,0
 20447 ;; Tracked objects:
 20448 ;;		On entry : 0/0
 20449 ;;		On exit  : 0/0
 20450 ;;		Unchanged: 0/0
 20451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20452 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20453 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20454 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20455 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20456 ;;Total ram usage:       15 bytes
 20457 ;; Hardware stack levels used:    1
 20458 ;; Hardware stack levels required when called:    1
 20459 ;; This function calls:
 20460 ;;		Nothing
 20461 ;; This function is called by:
 20462 ;;		_EUSART_Initialize
 20463 ;;		_setCellUndervoltageProtection
 20464 ;;		_setCellOvervoltageProtection
 20465 ;;		_updateVoltages
 20466 ;; This function uses a non-reentrant model
 20467 ;;
 20468                           
 20469                           
 20470                           ;psect for function ___aldiv
 20471  2B2D                     ___aldiv:	
 20472                           
 20473                           ;incstack = 0
 20474                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 20475  2B2D  0020               	movlb	0	; select bank0
 20476  2B2E  01AD               	clrf	___aldiv@sign
 20477  2B2F  1FA7               	btfss	___aldiv@divisor+3,7
 20478  2B30  2B3E               	goto	l920
 20479  2B31  09A4               	comf	___aldiv@divisor,f
 20480  2B32  09A5               	comf	___aldiv@divisor+1,f
 20481  2B33  09A6               	comf	___aldiv@divisor+2,f
 20482  2B34  09A7               	comf	___aldiv@divisor+3,f
 20483  2B35  0AA4               	incf	___aldiv@divisor,f
 20484  2B36  1903               	skipnz
 20485  2B37  0AA5               	incf	___aldiv@divisor+1,f
 20486  2B38  1903               	skipnz
 20487  2B39  0AA6               	incf	___aldiv@divisor+2,f
 20488  2B3A  1903               	skipnz
 20489  2B3B  0AA7               	incf	___aldiv@divisor+3,f
 20490  2B3C  01AD               	clrf	___aldiv@sign
 20491  2B3D  0AAD               	incf	___aldiv@sign,f
 20492  2B3E                     l920:	
 20493  2B3E  1FAB               	btfss	___aldiv@dividend+3,7
 20494  2B3F  2B4F               	goto	l7902
 20495  2B40  09A8               	comf	___aldiv@dividend,f
 20496  2B41  09A9               	comf	___aldiv@dividend+1,f
 20497  2B42  09AA               	comf	___aldiv@dividend+2,f
 20498  2B43  09AB               	comf	___aldiv@dividend+3,f
 20499  2B44  0AA8               	incf	___aldiv@dividend,f
 20500  2B45  1903               	skipnz
 20501  2B46  0AA9               	incf	___aldiv@dividend+1,f
 20502  2B47  1903               	skipnz
 20503  2B48  0AAA               	incf	___aldiv@dividend+2,f
 20504  2B49  1903               	skipnz
 20505  2B4A  0AAB               	incf	___aldiv@dividend+3,f
 20506  2B4B  3001               	movlw	1
 20507  2B4C  00F9               	movwf	??___aldiv
 20508  2B4D  0879               	movf	??___aldiv,w
 20509  2B4E  06AD               	xorwf	___aldiv@sign,f
 20510  2B4F                     l7902:	
 20511  2B4F  3000               	movlw	0
 20512  2B50  00B1               	movwf	___aldiv@quotient+3
 20513  2B51  3000               	movlw	0
 20514  2B52  00B0               	movwf	___aldiv@quotient+2
 20515  2B53  3000               	movlw	0
 20516  2B54  00AF               	movwf	___aldiv@quotient+1
 20517  2B55  3000               	movlw	0
 20518  2B56  00AE               	movwf	___aldiv@quotient
 20519  2B57  0827               	movf	___aldiv@divisor+3,w
 20520  2B58  0426               	iorwf	___aldiv@divisor+2,w
 20521  2B59  0425               	iorwf	___aldiv@divisor+1,w
 20522  2B5A  0424               	iorwf	___aldiv@divisor,w
 20523  2B5B  1903               	skipnz
 20524  2B5C  2B98               	goto	l7924
 20525  2B5D  01AC               	clrf	___aldiv@counter
 20526  2B5E  0AAC               	incf	___aldiv@counter,f
 20527  2B5F                     l7910:	
 20528  2B5F  1BA7               	btfsc	___aldiv@divisor+3,7
 20529  2B60  2B6D               	goto	l7912
 20530  2B61  3001               	movlw	1
 20531  2B62                     u10855:	
 20532  2B62  35A4               	lslf	___aldiv@divisor,f
 20533  2B63  0DA5               	rlf	___aldiv@divisor+1,f
 20534  2B64  0DA6               	rlf	___aldiv@divisor+2,f
 20535  2B65  0DA7               	rlf	___aldiv@divisor+3,f
 20536  2B66  0B89               	decfsz	9,f
 20537  2B67  2B62               	goto	u10855
 20538  2B68  3001               	movlw	1
 20539  2B69  00F9               	movwf	??___aldiv
 20540  2B6A  0879               	movf	??___aldiv,w
 20541  2B6B  07AC               	addwf	___aldiv@counter,f
 20542  2B6C  2B5F               	goto	l7910
 20543  2B6D                     l7912:	
 20544  2B6D  3001               	movlw	1
 20545  2B6E                     u10875:	
 20546  2B6E  35AE               	lslf	___aldiv@quotient,f
 20547  2B6F  0DAF               	rlf	___aldiv@quotient+1,f
 20548  2B70  0DB0               	rlf	___aldiv@quotient+2,f
 20549  2B71  0DB1               	rlf	___aldiv@quotient+3,f
 20550  2B72  0B89               	decfsz	9,f
 20551  2B73  2B6E               	goto	u10875
 20552  2B74  0827               	movf	___aldiv@divisor+3,w
 20553  2B75  022B               	subwf	___aldiv@dividend+3,w
 20554  2B76  1D03               	skipz
 20555  2B77  2B82               	goto	u10885
 20556  2B78  0826               	movf	___aldiv@divisor+2,w
 20557  2B79  022A               	subwf	___aldiv@dividend+2,w
 20558  2B7A  1D03               	skipz
 20559  2B7B  2B82               	goto	u10885
 20560  2B7C  0825               	movf	___aldiv@divisor+1,w
 20561  2B7D  0229               	subwf	___aldiv@dividend+1,w
 20562  2B7E  1D03               	skipz
 20563  2B7F  2B82               	goto	u10885
 20564  2B80  0824               	movf	___aldiv@divisor,w
 20565  2B81  0228               	subwf	___aldiv@dividend,w
 20566  2B82                     u10885:	
 20567  2B82  1C03               	skipc
 20568  2B83  2B8D               	goto	l7920
 20569  2B84  0824               	movf	___aldiv@divisor,w
 20570  2B85  02A8               	subwf	___aldiv@dividend,f
 20571  2B86  0825               	movf	___aldiv@divisor+1,w
 20572  2B87  3BA9               	subwfb	___aldiv@dividend+1,f
 20573  2B88  0826               	movf	___aldiv@divisor+2,w
 20574  2B89  3BAA               	subwfb	___aldiv@dividend+2,f
 20575  2B8A  0827               	movf	___aldiv@divisor+3,w
 20576  2B8B  3BAB               	subwfb	___aldiv@dividend+3,f
 20577  2B8C  142E               	bsf	___aldiv@quotient,0
 20578  2B8D                     l7920:	
 20579  2B8D  3001               	movlw	1
 20580  2B8E                     u10895:	
 20581  2B8E  36A7               	lsrf	___aldiv@divisor+3,f
 20582  2B8F  0CA6               	rrf	___aldiv@divisor+2,f
 20583  2B90  0CA5               	rrf	___aldiv@divisor+1,f
 20584  2B91  0CA4               	rrf	___aldiv@divisor,f
 20585  2B92  0B89               	decfsz	9,f
 20586  2B93  2B8E               	goto	u10895
 20587  2B94  3001               	movlw	1
 20588  2B95  02AC               	subwf	___aldiv@counter,f
 20589  2B96  1D03               	btfss	3,2
 20590  2B97  2B6D               	goto	l7912
 20591  2B98                     l7924:	
 20592  2B98  082D               	movf	___aldiv@sign,w
 20593  2B99  1903               	btfsc	3,2
 20594  2B9A  2BA6               	goto	l7928
 20595  2B9B  09AE               	comf	___aldiv@quotient,f
 20596  2B9C  09AF               	comf	___aldiv@quotient+1,f
 20597  2B9D  09B0               	comf	___aldiv@quotient+2,f
 20598  2B9E  09B1               	comf	___aldiv@quotient+3,f
 20599  2B9F  0AAE               	incf	___aldiv@quotient,f
 20600  2BA0  1903               	skipnz
 20601  2BA1  0AAF               	incf	___aldiv@quotient+1,f
 20602  2BA2  1903               	skipnz
 20603  2BA3  0AB0               	incf	___aldiv@quotient+2,f
 20604  2BA4  1903               	skipnz
 20605  2BA5  0AB1               	incf	___aldiv@quotient+3,f
 20606  2BA6                     l7928:	
 20607  2BA6  0831               	movf	___aldiv@quotient+3,w
 20608  2BA7  00A7               	movwf	?___aldiv+3
 20609  2BA8  0830               	movf	___aldiv@quotient+2,w
 20610  2BA9  00A6               	movwf	?___aldiv+2
 20611  2BAA  082F               	movf	___aldiv@quotient+1,w
 20612  2BAB  00A5               	movwf	?___aldiv+1
 20613  2BAC  082E               	movf	___aldiv@quotient,w
 20614  2BAD  00A4               	movwf	?___aldiv
 20615  2BAE  0008               	return
 20616  2BAF                     __end_of___aldiv:	
 20617                           
 20618                           	psect	intentry
 20619  0004                     __pintentry:	
 20620 ;; *************** function _myIsr *****************
 20621 ;; Defined at:
 20622 ;;		line 54 in file "main.c"
 20623 ;; Parameters:    Size  Location     Type
 20624 ;;		None
 20625 ;; Auto vars:     Size  Location     Type
 20626 ;;		None
 20627 ;; Return value:  Size  Location     Type
 20628 ;;                  1    wreg      void 
 20629 ;; Registers used:
 20630 ;;		wreg, status,2, status,0
 20631 ;; Tracked objects:
 20632 ;;		On entry : 0/0
 20633 ;;		On exit  : 0/0
 20634 ;;		Unchanged: 0/0
 20635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20638 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20639 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20640 ;;Total ram usage:        1 bytes
 20641 ;; Hardware stack levels used:    1
 20642 ;; This function calls:
 20643 ;;		Nothing
 20644 ;; This function is called by:
 20645 ;;		Interrupt level 1
 20646 ;; This function uses a non-reentrant model
 20647 ;;
 20648                           
 20649  0004                     _myIsr:	
 20650                           
 20651                           ;incstack = 0
 20652  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 20653                           
 20654                           ; Regs used in _myIsr: [wreg+status,2+status,0]
 20655  0005  3180               	pagesel	$
 20656                           
 20657                           ;main.c: 56:     static uint8_t count = 0;;main.c: 58:     if (PIR1bits.TMR1IF && PIE1bi
      +                          ts.TMR1IE) {
 20658  0006  0020               	movlb	0	; select bank0
 20659  0007  1C11               	btfss	17,0	;volatile
 20660  0008  281E               	goto	i1l149
 20661  0009  0021               	movlb	1	; select bank1
 20662  000A  1C11               	btfss	17,0	;volatile
 20663  000B  281E               	goto	i1l149
 20664                           
 20665                           ;main.c: 59:         PIR1bits.TMR1IF = 0;
 20666  000C  0020               	movlb	0	; select bank0
 20667  000D  1011               	bcf	17,0	;volatile
 20668                           
 20669                           ;main.c: 60:         count++;
 20670  000E  3001               	movlw	1
 20671  000F  00F0               	movwf	??_myIsr
 20672  0010  0870               	movf	??_myIsr,w
 20673  0011  0023               	movlb	3	; select bank3
 20674  0012  07D5               	addwf	myIsr@count^(0+384),f
 20675                           
 20676                           ;main.c: 63:         if (count == 61) {
 20677  0013  303D               	movlw	61
 20678  0014  0655               	xorwf	myIsr@count^(0+384),w
 20679  0015  1D03               	btfss	3,2
 20680  0016  281E               	goto	i1l149
 20681                           
 20682                           ;main.c: 64:             tmr1_flag = 1;
 20683  0017  3001               	movlw	1
 20684  0018  00F0               	movwf	??_myIsr
 20685  0019  0870               	movf	??_myIsr,w
 20686  001A  0021               	movlb	1	; select bank1
 20687  001B  00EF               	movwf	_tmr1_flag^(0+128)	;volatile
 20688                           
 20689                           ;main.c: 65:             count = 0;
 20690  001C  0023               	movlb	3	; select bank3
 20691  001D  01D5               	clrf	myIsr@count^(0+384)
 20692  001E                     i1l149:	
 20693  001E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 20694  001F  0009               	retfie
 20695  0020                     __end_of_myIsr:	
 20696  007E                     btemp	set	126	;btemp
 20697  007E                     int$flags	set	126
 20698  007E                     wtemp0	set	126
 20699  2771                     
 20700                           	psect	text7_split_1
 20701  24D9                     l6910:	
 20702                           
 20703                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
 20704  24D9  0859               	movf	vfpfcnvrt@fmt,w
 20705  24DA  0086               	movwf	6
 20706  24DB  0187               	clrf	7
 20707  24DC  3F40               	moviw [0]fsr1
 20708  24DD  00F1               	movwf	strncmp@_l
 20709  24DE  3F41               	moviw [1]fsr1
 20710  24DF  00F2               	movwf	strncmp@_l+1
 20711  24E0  3034               	movlw	low (STR_25| (0+32768))
 20712  24E1  00F3               	movwf	strncmp@_r
 20713  24E2  30BA               	movlw	high (STR_25| (0+32768))
 20714  24E3  00F4               	movwf	strncmp@_r+1
 20715  24E4  3003               	movlw	3
 20716  24E5  00F5               	movwf	strncmp@n
 20717  24E6  3000               	movlw	0
 20718  24E7  00F6               	movwf	strncmp@n+1
 20719  24E8  31B7  27AE  31A4   	fcall	_strncmp
 20720  24EB  0871               	movf	?_strncmp,w
 20721  24EC  0472               	iorwf	?_strncmp+1,w
 20722  24ED  1903               	btfsc	3,2
 20723  24EE  2D06               	goto	l6914
 20724  24EF  0020               	movlb	0	; select bank0
 20725  24F0  0859               	movf	vfpfcnvrt@fmt,w
 20726  24F1  0086               	movwf	6
 20727  24F2  0187               	clrf	7
 20728  24F3  3F40               	moviw [0]fsr1
 20729  24F4  00F1               	movwf	strncmp@_l
 20730  24F5  3F41               	moviw [1]fsr1
 20731  24F6  00F2               	movwf	strncmp@_l+1
 20732  24F7  3038               	movlw	low (STR_29| (0+32768))
 20733  24F8  00F3               	movwf	strncmp@_r
 20734  24F9  30BA               	movlw	high (STR_29| (0+32768))
 20735  24FA  00F4               	movwf	strncmp@_r+1
 20736  24FB  3003               	movlw	3
 20737  24FC  00F5               	movwf	strncmp@n
 20738  24FD  3000               	movlw	0
 20739  24FE  00F6               	movwf	strncmp@n+1
 20740  24FF  31B7  27AE  31A4   	fcall	_strncmp
 20741  2502  0871               	movf	?_strncmp,w
 20742  2503  0472               	iorwf	?_strncmp+1,w
 20743  2504  1D03               	btfss	3,2
 20744  2505  2D51               	goto	l6922
 20745  2506                     l6914:	
 20746                           
 20747                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
 20748  2506  0020               	movlb	0	; select bank0
 20749  2507  0859               	movf	vfpfcnvrt@fmt,w
 20750  2508  0086               	movwf	6
 20751  2509  0187               	clrf	7
 20752  250A  3003               	movlw	3
 20753  250B  0781               	addwf	1,f
 20754  250C  3141               	addfsr 1,1
 20755  250D  1803               	skipnc
 20756  250E  0A81               	incf	1,f
 20757                           
 20758                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
 20759  250F  085A               	movf	vfpfcnvrt@ap,w
 20760  2510  0086               	movwf	6
 20761  2511  0187               	clrf	7
 20762  2512  0801               	movf	1,w
 20763  2513  0084               	movwf	4
 20764  2514  0185               	clrf	5
 20765  2515  3002               	movlw	2
 20766  2516  0781               	addwf	1,f
 20767  2517  0800               	movf	0,w
 20768  2518  0021               	movlb	1	; select bank1
 20769  2519  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 20770  251A  3980               	andlw	128
 20771  251B  1D03               	skipz
 20772  251C  30FF               	movlw	255
 20773  251D  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 20774  251E  00AA               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 20775  251F  00AB               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 20776  2520  00AC               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 20777  2521  00AD               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 20778  2522  00AE               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 20779  2523  00AF               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 20780                           
 20781                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
 20782  2524  0020               	movlb	0	; select bank0
 20783  2525  0858               	movf	vfpfcnvrt@fp+1,w
 20784  2526  00B1               	movwf	dtoa@fp+1
 20785  2527  0857               	movf	vfpfcnvrt@fp,w
 20786  2528  00B0               	movwf	dtoa@fp
 20787  2529  0021               	movlb	1	; select bank1
 20788  252A  0828               	movf	vfpfcnvrt@ll^(0+128),w
 20789  252B  0020               	movlb	0	; select bank0
 20790  252C  00B2               	movwf	dtoa@d
 20791  252D  0021               	movlb	1	; select bank1
 20792  252E  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 20793  252F  0020               	movlb	0	; select bank0
 20794  2530  00B3               	movwf	dtoa@d+1
 20795  2531  0021               	movlb	1	; select bank1
 20796  2532  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 20797  2533  0020               	movlb	0	; select bank0
 20798  2534  00B4               	movwf	dtoa@d+2
 20799  2535  0021               	movlb	1	; select bank1
 20800  2536  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 20801  2537  0020               	movlb	0	; select bank0
 20802  2538  00B5               	movwf	dtoa@d+3
 20803  2539  0021               	movlb	1	; select bank1
 20804  253A  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 20805  253B  0020               	movlb	0	; select bank0
 20806  253C  00B6               	movwf	dtoa@d+4
 20807  253D  0021               	movlb	1	; select bank1
 20808  253E  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 20809  253F  0020               	movlb	0	; select bank0
 20810  2540  00B7               	movwf	dtoa@d+5
 20811  2541  0021               	movlb	1	; select bank1
 20812  2542  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 20813  2543  0020               	movlb	0	; select bank0
 20814  2544  00B8               	movwf	dtoa@d+6
 20815  2545  0021               	movlb	1	; select bank1
 20816  2546  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 20817  2547  0020               	movlb	0	; select bank0
 20818  2548  00B9               	movwf	dtoa@d+7
 20819  2549  3198  20A7         	fcall	_dtoa
 20820  254B  0020               	movlb	0	; select bank0
 20821  254C  0831               	movf	?_dtoa+1,w
 20822  254D  00D8               	movwf	?_vfpfcnvrt+1
 20823  254E  0830               	movf	?_dtoa,w
 20824  254F  00D7               	movwf	?_vfpfcnvrt
 20825  2550  0008               	return
 20826  2551                     l6922:	
 20827                           
 20828                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
 20829  2551  0020               	movlb	0	; select bank0
 20830  2552  0859               	movf	vfpfcnvrt@fmt,w
 20831  2553  0086               	movwf	6
 20832  2554  0187               	clrf	7
 20833  2555  3F40               	moviw [0]fsr1
 20834  2556  00F1               	movwf	strncmp@_l
 20835  2557  3F41               	moviw [1]fsr1
 20836  2558  00F2               	movwf	strncmp@_l+1
 20837  2559  3035               	movlw	low ((STR_25+1)| (0+32768))
 20838  255A  00F3               	movwf	strncmp@_r
 20839  255B  30BA               	movlw	high ((STR_25+1)| (0+32768))
 20840  255C  00F4               	movwf	strncmp@_r+1
 20841  255D  3002               	movlw	2
 20842  255E  00F5               	movwf	strncmp@n
 20843  255F  3000               	movlw	0
 20844  2560  00F6               	movwf	strncmp@n+1
 20845  2561  31B7  27AE  31A4   	fcall	_strncmp
 20846  2564  0871               	movf	?_strncmp,w
 20847  2565  0472               	iorwf	?_strncmp+1,w
 20848  2566  1903               	btfsc	3,2
 20849  2567  2D7F               	goto	l6926
 20850  2568  0020               	movlb	0	; select bank0
 20851  2569  0859               	movf	vfpfcnvrt@fmt,w
 20852  256A  0086               	movwf	6
 20853  256B  0187               	clrf	7
 20854  256C  3F40               	moviw [0]fsr1
 20855  256D  00F1               	movwf	strncmp@_l
 20856  256E  3F41               	moviw [1]fsr1
 20857  256F  00F2               	movwf	strncmp@_l+1
 20858  2570  3039               	movlw	low ((STR_29+1)| (0+32768))
 20859  2571  00F3               	movwf	strncmp@_r
 20860  2572  30BA               	movlw	high ((STR_29+1)| (0+32768))
 20861  2573  00F4               	movwf	strncmp@_r+1
 20862  2574  3002               	movlw	2
 20863  2575  00F5               	movwf	strncmp@n
 20864  2576  3000               	movlw	0
 20865  2577  00F6               	movwf	strncmp@n+1
 20866  2578  31B7  27AE  31A4   	fcall	_strncmp
 20867  257B  0871               	movf	?_strncmp,w
 20868  257C  0472               	iorwf	?_strncmp+1,w
 20869  257D  1D03               	btfss	3,2
 20870  257E  2DD1               	goto	L9
 20871  257F                     l6926:	
 20872                           
 20873                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
 20874  257F  0020               	movlb	0	; select bank0
 20875  2580  0859               	movf	vfpfcnvrt@fmt,w
 20876  2581  0086               	movwf	6
 20877  2582  0187               	clrf	7
 20878  2583  3002               	movlw	2
 20879  2584  0781               	addwf	1,f
 20880  2585  3141               	addfsr 1,1
 20881  2586  1803               	skipnc
 20882  2587  0A81               	incf	1,f
 20883                           
 20884                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
 20885  2588  085A               	movf	vfpfcnvrt@ap,w
 20886  2589  0086               	movwf	6
 20887  258A  0187               	clrf	7
 20888  258B  0801               	movf	1,w
 20889  258C  0084               	movwf	4
 20890  258D  0185               	clrf	5
 20891  258E  3002               	movlw	2
 20892  258F  0781               	addwf	1,f
 20893  2590  3F00               	moviw [0]fsr0
 20894  2591  00DB               	movwf	??_vfpfcnvrt
 20895  2592  3F01               	moviw [1]fsr0
 20896  2593  00DC               	movwf	??_vfpfcnvrt+1
 20897  2594  085B               	movf	??_vfpfcnvrt,w
 20898  2595  0021               	movlb	1	; select bank1
 20899  2596  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 20900  2597  0020               	movlb	0	; select bank0
 20901  2598  085C               	movf	??_vfpfcnvrt+1,w
 20902  2599  0021               	movlb	1	; select bank1
 20903  259A  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 20904  259B  0D89               	rlf	9,f
 20905  259C  3B89               	subwfb	9,f
 20906  259D  0989               	comf	9,f
 20907  259E  00AA               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 20908  259F  00AB               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 20909  25A0  00AC               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 20910  25A1  00AD               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 20911  25A2  00AE               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 20912  25A3  00AF               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 20913                           
 20914                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 820:       
      +                                return dtoa(fp, ll);
 20915  25A4  0020               	movlb	0	; select bank0
 20916  25A5  0858               	movf	vfpfcnvrt@fp+1,w
 20917  25A6  00B1               	movwf	dtoa@fp+1
 20918  25A7  0857               	movf	vfpfcnvrt@fp,w
 20919  25A8  00B0               	movwf	dtoa@fp
 20920  25A9  0021               	movlb	1	; select bank1
 20921  25AA  0828               	movf	vfpfcnvrt@ll^(0+128),w
 20922  25AB  0020               	movlb	0	; select bank0
 20923  25AC  00B2               	movwf	dtoa@d
 20924  25AD  0021               	movlb	1	; select bank1
 20925  25AE  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 20926  25AF  0020               	movlb	0	; select bank0
 20927  25B0  00B3               	movwf	dtoa@d+1
 20928  25B1  0021               	movlb	1	; select bank1
 20929  25B2  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 20930  25B3  0020               	movlb	0	; select bank0
 20931  25B4  00B4               	movwf	dtoa@d+2
 20932  25B5  0021               	movlb	1	; select bank1
 20933  25B6  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 20934  25B7  0020               	movlb	0	; select bank0
 20935  25B8  00B5               	movwf	dtoa@d+3
 20936  25B9  0021               	movlb	1	; select bank1
 20937  25BA  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 20938  25BB  0020               	movlb	0	; select bank0
 20939  25BC  00B6               	movwf	dtoa@d+4
 20940  25BD  0021               	movlb	1	; select bank1
 20941  25BE  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 20942  25BF  0020               	movlb	0	; select bank0
 20943  25C0  00B7               	movwf	dtoa@d+5
 20944  25C1  0021               	movlb	1	; select bank1
 20945  25C2  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 20946  25C3  0020               	movlb	0	; select bank0
 20947  25C4  00B8               	movwf	dtoa@d+6
 20948  25C5  0021               	movlb	1	; select bank1
 20949  25C6  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 20950  25C7  0020               	movlb	0	; select bank0
 20951  25C8  00B9               	movwf	dtoa@d+7
 20952  25C9  3198  20A7         	fcall	_dtoa
 20953  25CB  0020               	movlb	0	; select bank0
 20954  25CC  0831               	movf	?_dtoa+1,w
 20955  25CD  00D8               	movwf	?_vfpfcnvrt+1
 20956  25CE  0830               	movf	?_dtoa,w
 20957  25CF  00D7               	movwf	?_vfpfcnvrt
 20958  25D0  0008               	return
 20959  25D1                     L9:	
 20960  25D1                     L8:	
 20961  25D1  3188  2843         	ljmp	l6934
 20962                           
 20963                           	psect	text7_split_2
 20964  0843                     l6934:	
 20965                           
 20966                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 20967  0843  0020               	movlb	0	; select bank0
 20968  0844  0859               	movf	vfpfcnvrt@fmt,w
 20969  0845  0086               	movwf	6
 20970  0846  0187               	clrf	7
 20971  0847  3F40               	moviw [0]fsr1
 20972  0848  00DB               	movwf	??_vfpfcnvrt
 20973  0849  3F41               	moviw [1]fsr1
 20974  084A  00DC               	movwf	??_vfpfcnvrt+1
 20975  084B  085B               	movf	??_vfpfcnvrt,w
 20976  084C  0084               	movwf	4
 20977  084D  085C               	movf	??_vfpfcnvrt+1,w
 20978  084E  0085               	movwf	5
 20979  084F  0012               	moviw fsr0++
 20980  0850  3A64               	xorlw	100
 20981  0851  1903               	btfsc	3,2
 20982  0852  2862               	goto	l6938
 20983  0853  0859               	movf	vfpfcnvrt@fmt,w
 20984  0854  0086               	movwf	6
 20985  0855  0187               	clrf	7
 20986  0856  3F40               	moviw [0]fsr1
 20987  0857  00DB               	movwf	??_vfpfcnvrt
 20988  0858  3F41               	moviw [1]fsr1
 20989  0859  00DC               	movwf	??_vfpfcnvrt+1
 20990  085A  085B               	movf	??_vfpfcnvrt,w
 20991  085B  0084               	movwf	4
 20992  085C  085C               	movf	??_vfpfcnvrt+1,w
 20993  085D  0085               	movwf	5
 20994  085E  0012               	moviw fsr0++
 20995  085F  3A69               	xorlw	105
 20996  0860  1D03               	btfss	3,2
 20997  0861  28B3               	goto	l6946
 20998  0862                     l6938:	
 20999                           
 21000                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 21001  0862  0859               	movf	vfpfcnvrt@fmt,w
 21002  0863  0086               	movwf	6
 21003  0864  0187               	clrf	7
 21004  0865  3001               	movlw	1
 21005  0866  0781               	addwf	1,f
 21006  0867  3141               	addfsr 1,1
 21007  0868  1803               	skipnc
 21008  0869  0A81               	incf	1,f
 21009                           
 21010                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 21011  086A  085A               	movf	vfpfcnvrt@ap,w
 21012  086B  0086               	movwf	6
 21013  086C  0187               	clrf	7
 21014  086D  0801               	movf	1,w
 21015  086E  0084               	movwf	4
 21016  086F  0185               	clrf	5
 21017  0870  3002               	movlw	2
 21018  0871  0781               	addwf	1,f
 21019  0872  3F00               	moviw [0]fsr0
 21020  0873  00DB               	movwf	??_vfpfcnvrt
 21021  0874  3F01               	moviw [1]fsr0
 21022  0875  00DC               	movwf	??_vfpfcnvrt+1
 21023  0876  085B               	movf	??_vfpfcnvrt,w
 21024  0877  0021               	movlb	1	; select bank1
 21025  0878  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 21026  0879  0020               	movlb	0	; select bank0
 21027  087A  085C               	movf	??_vfpfcnvrt+1,w
 21028  087B  0021               	movlb	1	; select bank1
 21029  087C  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 21030  087D  0D89               	rlf	9,f
 21031  087E  3B89               	subwfb	9,f
 21032  087F  0989               	comf	9,f
 21033  0880  00AA               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 21034  0881  00AB               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 21035  0882  00AC               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 21036  0883  00AD               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 21037  0884  00AE               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 21038  0885  00AF               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 21039                           
 21040                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 21041  0886  0020               	movlb	0	; select bank0
 21042  0887  0858               	movf	vfpfcnvrt@fp+1,w
 21043  0888  00B1               	movwf	dtoa@fp+1
 21044  0889  0857               	movf	vfpfcnvrt@fp,w
 21045  088A  00B0               	movwf	dtoa@fp
 21046  088B  0021               	movlb	1	; select bank1
 21047  088C  0828               	movf	vfpfcnvrt@ll^(0+128),w
 21048  088D  0020               	movlb	0	; select bank0
 21049  088E  00B2               	movwf	dtoa@d
 21050  088F  0021               	movlb	1	; select bank1
 21051  0890  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 21052  0891  0020               	movlb	0	; select bank0
 21053  0892  00B3               	movwf	dtoa@d+1
 21054  0893  0021               	movlb	1	; select bank1
 21055  0894  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 21056  0895  0020               	movlb	0	; select bank0
 21057  0896  00B4               	movwf	dtoa@d+2
 21058  0897  0021               	movlb	1	; select bank1
 21059  0898  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 21060  0899  0020               	movlb	0	; select bank0
 21061  089A  00B5               	movwf	dtoa@d+3
 21062  089B  0021               	movlb	1	; select bank1
 21063  089C  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 21064  089D  0020               	movlb	0	; select bank0
 21065  089E  00B6               	movwf	dtoa@d+4
 21066  089F  0021               	movlb	1	; select bank1
 21067  08A0  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 21068  08A1  0020               	movlb	0	; select bank0
 21069  08A2  00B7               	movwf	dtoa@d+5
 21070  08A3  0021               	movlb	1	; select bank1
 21071  08A4  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 21072  08A5  0020               	movlb	0	; select bank0
 21073  08A6  00B8               	movwf	dtoa@d+6
 21074  08A7  0021               	movlb	1	; select bank1
 21075  08A8  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 21076  08A9  0020               	movlb	0	; select bank0
 21077  08AA  00B9               	movwf	dtoa@d+7
 21078  08AB  3198  20A7         	fcall	_dtoa
 21079  08AD  0020               	movlb	0	; select bank0
 21080  08AE  0831               	movf	?_dtoa+1,w
 21081  08AF  00D8               	movwf	?_vfpfcnvrt+1
 21082  08B0  0830               	movf	?_dtoa,w
 21083  08B1  00D7               	movwf	?_vfpfcnvrt
 21084  08B2  0008               	return
 21085  08B3                     l6946:	
 21086                           
 21087                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
 21088  08B3  0859               	movf	vfpfcnvrt@fmt,w
 21089  08B4  0086               	movwf	6
 21090  08B5  0187               	clrf	7
 21091  08B6  3F40               	moviw [0]fsr1
 21092  08B7  00F1               	movwf	strncmp@_l
 21093  08B8  3F41               	moviw [1]fsr1
 21094  08B9  00F2               	movwf	strncmp@_l+1
 21095  08BA  304F               	movlw	low (STR_43| (0+32768))
 21096  08BB  00F3               	movwf	strncmp@_r
 21097  08BC  30BA               	movlw	high (STR_43| (0+32768))
 21098  08BD  00F4               	movwf	strncmp@_r+1
 21099  08BE  3002               	movlw	2
 21100  08BF  00F5               	movwf	strncmp@n
 21101  08C0  3000               	movlw	0
 21102  08C1  00F6               	movwf	strncmp@n+1
 21103  08C2  31B7  27AE  3188   	fcall	_strncmp
 21104  08C5  0871               	movf	?_strncmp,w
 21105  08C6  0472               	iorwf	?_strncmp+1,w
 21106  08C7  1903               	btfsc	3,2
 21107  08C8  28E0               	goto	l6950
 21108  08C9  0020               	movlb	0	; select bank0
 21109  08CA  0859               	movf	vfpfcnvrt@fmt,w
 21110  08CB  0086               	movwf	6
 21111  08CC  0187               	clrf	7
 21112  08CD  3F40               	moviw [0]fsr1
 21113  08CE  00F1               	movwf	strncmp@_l
 21114  08CF  3F41               	moviw [1]fsr1
 21115  08D0  00F2               	movwf	strncmp@_l+1
 21116  08D1  3052               	movlw	low (STR_47| (0+32768))
 21117  08D2  00F3               	movwf	strncmp@_r
 21118  08D3  30BA               	movlw	high (STR_47| (0+32768))
 21119  08D4  00F4               	movwf	strncmp@_r+1
 21120  08D5  3002               	movlw	2
 21121  08D6  00F5               	movwf	strncmp@n
 21122  08D7  3000               	movlw	0
 21123  08D8  00F6               	movwf	strncmp@n+1
 21124  08D9  31B7  27AE  3188   	fcall	_strncmp
 21125  08DC  0871               	movf	?_strncmp,w
 21126  08DD  0472               	iorwf	?_strncmp+1,w
 21127  08DE  1D03               	btfss	3,2
 21128  08DF  2929               	goto	l6958
 21129  08E0                     l6950:	
 21130                           
 21131                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
 21132  08E0  0020               	movlb	0	; select bank0
 21133  08E1  0859               	movf	vfpfcnvrt@fmt,w
 21134  08E2  0086               	movwf	6
 21135  08E3  0187               	clrf	7
 21136  08E4  3002               	movlw	2
 21137  08E5  0781               	addwf	1,f
 21138  08E6  3141               	addfsr 1,1
 21139  08E7  1803               	skipnc
 21140  08E8  0A81               	incf	1,f
 21141                           
 21142                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 21143  08E9  085A               	movf	vfpfcnvrt@ap,w
 21144  08EA  0086               	movwf	6
 21145  08EB  0187               	clrf	7
 21146  08EC  0801               	movf	1,w
 21147  08ED  0084               	movwf	4
 21148  08EE  0185               	clrf	5
 21149  08EF  3002               	movlw	2
 21150  08F0  0781               	addwf	1,f
 21151  08F1  3F00               	moviw [0]fsr0
 21152  08F2  0021               	movlb	1	; select bank1
 21153  08F3  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 21154  08F4  3F01               	moviw [1]fsr0
 21155  08F5  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 21156  08F6  01AA               	clrf	(vfpfcnvrt@ll+2)^(0+128)
 21157  08F7  01AB               	clrf	(vfpfcnvrt@ll+3)^(0+128)
 21158  08F8  01AC               	clrf	(vfpfcnvrt@ll+4)^(0+128)
 21159  08F9  01AD               	clrf	(vfpfcnvrt@ll+5)^(0+128)
 21160  08FA  01AE               	clrf	(vfpfcnvrt@ll+6)^(0+128)
 21161  08FB  01AF               	clrf	(vfpfcnvrt@ll+7)^(0+128)
 21162                           
 21163                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 889:       
      +                                return dtoa(fp, ll);
 21164  08FC  0020               	movlb	0	; select bank0
 21165  08FD  0858               	movf	vfpfcnvrt@fp+1,w
 21166  08FE  00B1               	movwf	dtoa@fp+1
 21167  08FF  0857               	movf	vfpfcnvrt@fp,w
 21168  0900  00B0               	movwf	dtoa@fp
 21169  0901  0021               	movlb	1	; select bank1
 21170  0902  0828               	movf	vfpfcnvrt@ll^(0+128),w
 21171  0903  0020               	movlb	0	; select bank0
 21172  0904  00B2               	movwf	dtoa@d
 21173  0905  0021               	movlb	1	; select bank1
 21174  0906  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 21175  0907  0020               	movlb	0	; select bank0
 21176  0908  00B3               	movwf	dtoa@d+1
 21177  0909  0021               	movlb	1	; select bank1
 21178  090A  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 21179  090B  0020               	movlb	0	; select bank0
 21180  090C  00B4               	movwf	dtoa@d+2
 21181  090D  0021               	movlb	1	; select bank1
 21182  090E  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 21183  090F  0020               	movlb	0	; select bank0
 21184  0910  00B5               	movwf	dtoa@d+3
 21185  0911  0021               	movlb	1	; select bank1
 21186  0912  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 21187  0913  0020               	movlb	0	; select bank0
 21188  0914  00B6               	movwf	dtoa@d+4
 21189  0915  0021               	movlb	1	; select bank1
 21190  0916  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 21191  0917  0020               	movlb	0	; select bank0
 21192  0918  00B7               	movwf	dtoa@d+5
 21193  0919  0021               	movlb	1	; select bank1
 21194  091A  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 21195  091B  0020               	movlb	0	; select bank0
 21196  091C  00B8               	movwf	dtoa@d+6
 21197  091D  0021               	movlb	1	; select bank1
 21198  091E  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 21199  091F  0020               	movlb	0	; select bank0
 21200  0920  00B9               	movwf	dtoa@d+7
 21201  0921  3198  20A7         	fcall	_dtoa
 21202  0923  0020               	movlb	0	; select bank0
 21203  0924  0831               	movf	?_dtoa+1,w
 21204  0925  00D8               	movwf	?_vfpfcnvrt+1
 21205  0926  0830               	movf	?_dtoa,w
 21206  0927  00D7               	movwf	?_vfpfcnvrt
 21207  0928  0008               	return
 21208  0929                     l6958:	
 21209                           
 21210                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
 21211  0929  0020               	movlb	0	; select bank0
 21212  092A  0859               	movf	vfpfcnvrt@fmt,w
 21213  092B  0086               	movwf	6
 21214  092C  0187               	clrf	7
 21215  092D  3F40               	moviw [0]fsr1
 21216  092E  00F1               	movwf	strncmp@_l
 21217  092F  3F41               	moviw [1]fsr1
 21218  0930  00F2               	movwf	strncmp@_l+1
 21219  0931  3040               	movlw	low (STR_52| (0+32768))
 21220  0932  00F3               	movwf	strncmp@_r
 21221  0933  30BA               	movlw	high (STR_52| (0+32768))
 21222  0934  00F4               	movwf	strncmp@_r+1
 21223  0935  3003               	movlw	3
 21224  0936  00F5               	movwf	strncmp@n
 21225  0937  3000               	movlw	0
 21226  0938  00F6               	movwf	strncmp@n+1
 21227  0939  31B7  27AE  3188   	fcall	_strncmp
 21228  093C  0871               	movf	?_strncmp,w
 21229  093D  0472               	iorwf	?_strncmp+1,w
 21230  093E  1D03               	btfss	3,2
 21231  093F  2988               	goto	l6968
 21232                           
 21233                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
 21234  0940  0020               	movlb	0	; select bank0
 21235  0941  0859               	movf	vfpfcnvrt@fmt,w
 21236  0942  0086               	movwf	6
 21237  0943  0187               	clrf	7
 21238  0944  3003               	movlw	3
 21239  0945  0781               	addwf	1,f
 21240  0946  3141               	addfsr 1,1
 21241  0947  1803               	skipnc
 21242  0948  0A81               	incf	1,f
 21243                           
 21244                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 21245  0949  085A               	movf	vfpfcnvrt@ap,w
 21246  094A  0086               	movwf	6
 21247  094B  0187               	clrf	7
 21248  094C  0801               	movf	1,w
 21249  094D  0084               	movwf	4
 21250  094E  0185               	clrf	5
 21251  094F  3002               	movlw	2
 21252  0950  0781               	addwf	1,f
 21253  0951  0800               	movf	0,w
 21254  0952  0021               	movlb	1	; select bank1
 21255  0953  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21256  0954  01B4               	clrf	(vfpfcnvrt@llu+1)^(0+128)
 21257  0955  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21258  0956  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21259  0957  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21260  0958  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21261  0959  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21262  095A  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21263                           
 21264                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
 21265  095B  0020               	movlb	0	; select bank0
 21266  095C  0858               	movf	vfpfcnvrt@fp+1,w
 21267  095D  00B1               	movwf	otoa@fp+1
 21268  095E  0857               	movf	vfpfcnvrt@fp,w
 21269  095F  00B0               	movwf	otoa@fp
 21270  0960  0021               	movlb	1	; select bank1
 21271  0961  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21272  0962  0020               	movlb	0	; select bank0
 21273  0963  00B2               	movwf	otoa@d
 21274  0964  0021               	movlb	1	; select bank1
 21275  0965  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21276  0966  0020               	movlb	0	; select bank0
 21277  0967  00B3               	movwf	otoa@d+1
 21278  0968  0021               	movlb	1	; select bank1
 21279  0969  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21280  096A  0020               	movlb	0	; select bank0
 21281  096B  00B4               	movwf	otoa@d+2
 21282  096C  0021               	movlb	1	; select bank1
 21283  096D  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21284  096E  0020               	movlb	0	; select bank0
 21285  096F  00B5               	movwf	otoa@d+3
 21286  0970  0021               	movlb	1	; select bank1
 21287  0971  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21288  0972  0020               	movlb	0	; select bank0
 21289  0973  00B6               	movwf	otoa@d+4
 21290  0974  0021               	movlb	1	; select bank1
 21291  0975  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21292  0976  0020               	movlb	0	; select bank0
 21293  0977  00B7               	movwf	otoa@d+5
 21294  0978  0021               	movlb	1	; select bank1
 21295  0979  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21296  097A  0020               	movlb	0	; select bank0
 21297  097B  00B8               	movwf	otoa@d+6
 21298  097C  0021               	movlb	1	; select bank1
 21299  097D  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21300  097E  0020               	movlb	0	; select bank0
 21301  097F  00B9               	movwf	otoa@d+7
 21302  0980  31A2  22F5         	fcall	_otoa
 21303  0982  0020               	movlb	0	; select bank0
 21304  0983  0831               	movf	?_otoa+1,w
 21305  0984  00D8               	movwf	?_vfpfcnvrt+1
 21306  0985  0830               	movf	?_otoa,w
 21307  0986  00D7               	movwf	?_vfpfcnvrt
 21308  0987  0008               	return
 21309  0988                     l6968:	
 21310                           
 21311                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
 21312  0988  0020               	movlb	0	; select bank0
 21313  0989  0859               	movf	vfpfcnvrt@fmt,w
 21314  098A  0086               	movwf	6
 21315  098B  0187               	clrf	7
 21316  098C  3F40               	moviw [0]fsr1
 21317  098D  00F1               	movwf	strncmp@_l
 21318  098E  3F41               	moviw [1]fsr1
 21319  098F  00F2               	movwf	strncmp@_l+1
 21320  0990  3041               	movlw	low ((STR_52+1)| (0+32768))
 21321  0991  00F3               	movwf	strncmp@_r
 21322  0992  30BA               	movlw	high ((STR_52+1)| (0+32768))
 21323  0993  00F4               	movwf	strncmp@_r+1
 21324  0994  3002               	movlw	2
 21325  0995  00F5               	movwf	strncmp@n
 21326  0996  3000               	movlw	0
 21327  0997  00F6               	movwf	strncmp@n+1
 21328  0998  31B7  27AE  3188   	fcall	_strncmp
 21329  099B  0871               	movf	?_strncmp,w
 21330  099C  0472               	iorwf	?_strncmp+1,w
 21331  099D  1D03               	btfss	3,2
 21332  099E  29E8               	goto	l6978
 21333                           
 21334                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
 21335  099F  0020               	movlb	0	; select bank0
 21336  09A0  0859               	movf	vfpfcnvrt@fmt,w
 21337  09A1  0086               	movwf	6
 21338  09A2  0187               	clrf	7
 21339  09A3  3002               	movlw	2
 21340  09A4  0781               	addwf	1,f
 21341  09A5  3141               	addfsr 1,1
 21342  09A6  1803               	skipnc
 21343  09A7  0A81               	incf	1,f
 21344                           
 21345                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
 21346  09A8  085A               	movf	vfpfcnvrt@ap,w
 21347  09A9  0086               	movwf	6
 21348  09AA  0187               	clrf	7
 21349  09AB  0801               	movf	1,w
 21350  09AC  0084               	movwf	4
 21351  09AD  0185               	clrf	5
 21352  09AE  3002               	movlw	2
 21353  09AF  0781               	addwf	1,f
 21354  09B0  3F00               	moviw [0]fsr0
 21355  09B1  0021               	movlb	1	; select bank1
 21356  09B2  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21357  09B3  3F01               	moviw [1]fsr0
 21358  09B4  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 21359  09B5  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21360  09B6  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21361  09B7  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21362  09B8  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21363  09B9  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21364  09BA  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21365                           
 21366                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 985:       
      +                                return otoa(fp, llu);
 21367  09BB  0020               	movlb	0	; select bank0
 21368  09BC  0858               	movf	vfpfcnvrt@fp+1,w
 21369  09BD  00B1               	movwf	otoa@fp+1
 21370  09BE  0857               	movf	vfpfcnvrt@fp,w
 21371  09BF  00B0               	movwf	otoa@fp
 21372  09C0  0021               	movlb	1	; select bank1
 21373  09C1  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21374  09C2  0020               	movlb	0	; select bank0
 21375  09C3  00B2               	movwf	otoa@d
 21376  09C4  0021               	movlb	1	; select bank1
 21377  09C5  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21378  09C6  0020               	movlb	0	; select bank0
 21379  09C7  00B3               	movwf	otoa@d+1
 21380  09C8  0021               	movlb	1	; select bank1
 21381  09C9  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21382  09CA  0020               	movlb	0	; select bank0
 21383  09CB  00B4               	movwf	otoa@d+2
 21384  09CC  0021               	movlb	1	; select bank1
 21385  09CD  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21386  09CE  0020               	movlb	0	; select bank0
 21387  09CF  00B5               	movwf	otoa@d+3
 21388  09D0  0021               	movlb	1	; select bank1
 21389  09D1  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21390  09D2  0020               	movlb	0	; select bank0
 21391  09D3  00B6               	movwf	otoa@d+4
 21392  09D4  0021               	movlb	1	; select bank1
 21393  09D5  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21394  09D6  0020               	movlb	0	; select bank0
 21395  09D7  00B7               	movwf	otoa@d+5
 21396  09D8  0021               	movlb	1	; select bank1
 21397  09D9  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21398  09DA  0020               	movlb	0	; select bank0
 21399  09DB  00B8               	movwf	otoa@d+6
 21400  09DC  0021               	movlb	1	; select bank1
 21401  09DD  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21402  09DE  0020               	movlb	0	; select bank0
 21403  09DF  00B9               	movwf	otoa@d+7
 21404  09E0  31A2  22F5         	fcall	_otoa
 21405  09E2  0020               	movlb	0	; select bank0
 21406  09E3  0831               	movf	?_otoa+1,w
 21407  09E4  00D8               	movwf	?_vfpfcnvrt+1
 21408  09E5  0830               	movf	?_otoa,w
 21409  09E6  00D7               	movwf	?_vfpfcnvrt
 21410  09E7  0008               	return
 21411  09E8                     l6978:	
 21412                           
 21413                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
 21414  09E8  0020               	movlb	0	; select bank0
 21415  09E9  0859               	movf	vfpfcnvrt@fmt,w
 21416  09EA  0086               	movwf	6
 21417  09EB  0187               	clrf	7
 21418  09EC  3F40               	moviw [0]fsr1
 21419  09ED  00DB               	movwf	??_vfpfcnvrt
 21420  09EE  3F41               	moviw [1]fsr1
 21421  09EF  00DC               	movwf	??_vfpfcnvrt+1
 21422  09F0  085B               	movf	??_vfpfcnvrt,w
 21423  09F1  0084               	movwf	4
 21424  09F2  085C               	movf	??_vfpfcnvrt+1,w
 21425  09F3  0085               	movwf	5
 21426  09F4  0012               	moviw fsr0++
 21427  09F5  3A6F               	xorlw	111
 21428  09F6  1D03               	btfss	3,2
 21429  09F7  2A40               	goto	l6988
 21430                           
 21431                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
 21432  09F8  0859               	movf	vfpfcnvrt@fmt,w
 21433  09F9  0086               	movwf	6
 21434  09FA  0187               	clrf	7
 21435  09FB  3001               	movlw	1
 21436  09FC  0781               	addwf	1,f
 21437  09FD  3141               	addfsr 1,1
 21438  09FE  1803               	skipnc
 21439  09FF  0A81               	incf	1,f
 21440                           
 21441                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
 21442  0A00  085A               	movf	vfpfcnvrt@ap,w
 21443  0A01  0086               	movwf	6
 21444  0A02  0187               	clrf	7
 21445  0A03  0801               	movf	1,w
 21446  0A04  0084               	movwf	4
 21447  0A05  0185               	clrf	5
 21448  0A06  3002               	movlw	2
 21449  0A07  0781               	addwf	1,f
 21450  0A08  3F00               	moviw [0]fsr0
 21451  0A09  0021               	movlb	1	; select bank1
 21452  0A0A  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21453  0A0B  3F01               	moviw [1]fsr0
 21454  0A0C  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 21455  0A0D  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21456  0A0E  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21457  0A0F  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21458  0A10  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21459  0A11  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21460  0A12  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21461                           
 21462                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 995:       
      +                                return otoa(fp, llu);
 21463  0A13  0020               	movlb	0	; select bank0
 21464  0A14  0858               	movf	vfpfcnvrt@fp+1,w
 21465  0A15  00B1               	movwf	otoa@fp+1
 21466  0A16  0857               	movf	vfpfcnvrt@fp,w
 21467  0A17  00B0               	movwf	otoa@fp
 21468  0A18  0021               	movlb	1	; select bank1
 21469  0A19  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21470  0A1A  0020               	movlb	0	; select bank0
 21471  0A1B  00B2               	movwf	otoa@d
 21472  0A1C  0021               	movlb	1	; select bank1
 21473  0A1D  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21474  0A1E  0020               	movlb	0	; select bank0
 21475  0A1F  00B3               	movwf	otoa@d+1
 21476  0A20  0021               	movlb	1	; select bank1
 21477  0A21  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21478  0A22  0020               	movlb	0	; select bank0
 21479  0A23  00B4               	movwf	otoa@d+2
 21480  0A24  0021               	movlb	1	; select bank1
 21481  0A25  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21482  0A26  0020               	movlb	0	; select bank0
 21483  0A27  00B5               	movwf	otoa@d+3
 21484  0A28  0021               	movlb	1	; select bank1
 21485  0A29  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21486  0A2A  0020               	movlb	0	; select bank0
 21487  0A2B  00B6               	movwf	otoa@d+4
 21488  0A2C  0021               	movlb	1	; select bank1
 21489  0A2D  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21490  0A2E  0020               	movlb	0	; select bank0
 21491  0A2F  00B7               	movwf	otoa@d+5
 21492  0A30  0021               	movlb	1	; select bank1
 21493  0A31  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21494  0A32  0020               	movlb	0	; select bank0
 21495  0A33  00B8               	movwf	otoa@d+6
 21496  0A34  0021               	movlb	1	; select bank1
 21497  0A35  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21498  0A36  0020               	movlb	0	; select bank0
 21499  0A37  00B9               	movwf	otoa@d+7
 21500  0A38  31A2  22F5         	fcall	_otoa
 21501  0A3A  0020               	movlb	0	; select bank0
 21502  0A3B  0831               	movf	?_otoa+1,w
 21503  0A3C  00D8               	movwf	?_vfpfcnvrt+1
 21504  0A3D  0830               	movf	?_otoa,w
 21505  0A3E  00D7               	movwf	?_vfpfcnvrt
 21506  0A3F  0008               	return
 21507  0A40                     l6988:	
 21508                           
 21509                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
 21510  0A40  0859               	movf	vfpfcnvrt@fmt,w
 21511  0A41  0086               	movwf	6
 21512  0A42  0187               	clrf	7
 21513  0A43  3F40               	moviw [0]fsr1
 21514  0A44  00F1               	movwf	strncmp@_l
 21515  0A45  3F41               	moviw [1]fsr1
 21516  0A46  00F2               	movwf	strncmp@_l+1
 21517  0A47  3058               	movlw	low (STR_62| (0+32768))
 21518  0A48  00F3               	movwf	strncmp@_r
 21519  0A49  30BA               	movlw	high (STR_62| (0+32768))
 21520  0A4A  00F4               	movwf	strncmp@_r+1
 21521  0A4B  3002               	movlw	2
 21522  0A4C  00F5               	movwf	strncmp@n
 21523  0A4D  3000               	movlw	0
 21524  0A4E  00F6               	movwf	strncmp@n+1
 21525  0A4F  31B7  27AE  3188   	fcall	_strncmp
 21526  0A52  0871               	movf	?_strncmp,w
 21527  0A53  0472               	iorwf	?_strncmp+1,w
 21528  0A54  1D03               	btfss	3,2
 21529  0A55  2A9F               	goto	l6998
 21530                           
 21531                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
 21532  0A56  0020               	movlb	0	; select bank0
 21533  0A57  0859               	movf	vfpfcnvrt@fmt,w
 21534  0A58  0086               	movwf	6
 21535  0A59  0187               	clrf	7
 21536  0A5A  3002               	movlw	2
 21537  0A5B  0781               	addwf	1,f
 21538  0A5C  3141               	addfsr 1,1
 21539  0A5D  1803               	skipnc
 21540  0A5E  0A81               	incf	1,f
 21541                           
 21542                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 21543  0A5F  085A               	movf	vfpfcnvrt@ap,w
 21544  0A60  0086               	movwf	6
 21545  0A61  0187               	clrf	7
 21546  0A62  0801               	movf	1,w
 21547  0A63  0084               	movwf	4
 21548  0A64  0185               	clrf	5
 21549  0A65  3002               	movlw	2
 21550  0A66  0781               	addwf	1,f
 21551  0A67  3F00               	moviw [0]fsr0
 21552  0A68  0021               	movlb	1	; select bank1
 21553  0A69  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21554  0A6A  3F01               	moviw [1]fsr0
 21555  0A6B  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 21556  0A6C  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21557  0A6D  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21558  0A6E  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21559  0A6F  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21560  0A70  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21561  0A71  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21562                           
 21563                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1049:      
      +                                 return otoa(fp, llu);
 21564  0A72  0020               	movlb	0	; select bank0
 21565  0A73  0858               	movf	vfpfcnvrt@fp+1,w
 21566  0A74  00B1               	movwf	otoa@fp+1
 21567  0A75  0857               	movf	vfpfcnvrt@fp,w
 21568  0A76  00B0               	movwf	otoa@fp
 21569  0A77  0021               	movlb	1	; select bank1
 21570  0A78  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21571  0A79  0020               	movlb	0	; select bank0
 21572  0A7A  00B2               	movwf	otoa@d
 21573  0A7B  0021               	movlb	1	; select bank1
 21574  0A7C  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21575  0A7D  0020               	movlb	0	; select bank0
 21576  0A7E  00B3               	movwf	otoa@d+1
 21577  0A7F  0021               	movlb	1	; select bank1
 21578  0A80  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21579  0A81  0020               	movlb	0	; select bank0
 21580  0A82  00B4               	movwf	otoa@d+2
 21581  0A83  0021               	movlb	1	; select bank1
 21582  0A84  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21583  0A85  0020               	movlb	0	; select bank0
 21584  0A86  00B5               	movwf	otoa@d+3
 21585  0A87  0021               	movlb	1	; select bank1
 21586  0A88  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21587  0A89  0020               	movlb	0	; select bank0
 21588  0A8A  00B6               	movwf	otoa@d+4
 21589  0A8B  0021               	movlb	1	; select bank1
 21590  0A8C  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21591  0A8D  0020               	movlb	0	; select bank0
 21592  0A8E  00B7               	movwf	otoa@d+5
 21593  0A8F  0021               	movlb	1	; select bank1
 21594  0A90  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21595  0A91  0020               	movlb	0	; select bank0
 21596  0A92  00B8               	movwf	otoa@d+6
 21597  0A93  0021               	movlb	1	; select bank1
 21598  0A94  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21599  0A95  0020               	movlb	0	; select bank0
 21600  0A96  00B9               	movwf	otoa@d+7
 21601  0A97  31A2  22F5         	fcall	_otoa
 21602  0A99  0020               	movlb	0	; select bank0
 21603  0A9A  0831               	movf	?_otoa+1,w
 21604  0A9B  00D8               	movwf	?_vfpfcnvrt+1
 21605  0A9C  0830               	movf	?_otoa,w
 21606  0A9D  00D7               	movwf	?_vfpfcnvrt
 21607  0A9E  0008               	return
 21608  0A9F                     l6998:	
 21609                           
 21610                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
 21611  0A9F  0020               	movlb	0	; select bank0
 21612  0AA0  0859               	movf	vfpfcnvrt@fmt,w
 21613  0AA1  0086               	movwf	6
 21614  0AA2  0187               	clrf	7
 21615  0AA3  3F40               	moviw [0]fsr1
 21616  0AA4  00F1               	movwf	strncmp@_l
 21617  0AA5  3F41               	moviw [1]fsr1
 21618  0AA6  00F2               	movwf	strncmp@_l+1
 21619  0AA7  303C               	movlw	low (STR_67| (0+32768))
 21620  0AA8  00F3               	movwf	strncmp@_r
 21621  0AA9  30BA               	movlw	high (STR_67| (0+32768))
 21622  0AAA  00F4               	movwf	strncmp@_r+1
 21623  0AAB  3003               	movlw	3
 21624  0AAC  00F5               	movwf	strncmp@n
 21625  0AAD  3000               	movlw	0
 21626  0AAE  00F6               	movwf	strncmp@n+1
 21627  0AAF  31B7  27AE  3188   	fcall	_strncmp
 21628  0AB2  0871               	movf	?_strncmp,w
 21629  0AB3  0472               	iorwf	?_strncmp+1,w
 21630  0AB4  1D03               	btfss	3,2
 21631  0AB5  2B36               	goto	l7010
 21632                           
 21633                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
 21634  0AB6  0020               	movlb	0	; select bank0
 21635  0AB7  0859               	movf	vfpfcnvrt@fmt,w
 21636  0AB8  0086               	movwf	6
 21637  0AB9  0187               	clrf	7
 21638  0ABA  3003               	movlw	3
 21639  0ABB  0781               	addwf	1,f
 21640  0ABC  3141               	addfsr 1,1
 21641  0ABD  1803               	skipnc
 21642  0ABE  0A81               	incf	1,f
 21643                           
 21644                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
 21645  0ABF  085A               	movf	vfpfcnvrt@ap,w
 21646  0AC0  0086               	movwf	6
 21647  0AC1  0187               	clrf	7
 21648  0AC2  0801               	movf	1,w
 21649  0AC3  0084               	movwf	4
 21650  0AC4  0185               	clrf	5
 21651  0AC5  3002               	movlw	2
 21652  0AC6  0781               	addwf	1,f
 21653  0AC7  3F00               	moviw [0]fsr0
 21654  0AC8  0021               	movlb	1	; select bank1
 21655  0AC9  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 21656  0ACA  3F01               	moviw [1]fsr0
 21657  0ACB  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 21658                           
 21659                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
 21660  0ACC  0830               	movf	vfpfcnvrt@vp^(0+128),w
 21661  0ACD  0086               	movwf	6
 21662  0ACE  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 21663  0ACF  0087               	movwf	7
 21664  0AD0  0023               	movlb	3	; select bank3
 21665  0AD1  0844               	movf	_nout^(0+384),w
 21666  0AD2  0081               	movwf	1
 21667  0AD3  2B32               	goto	l7006
 21668  0AD4                     l7012:	
 21669                           
 21670                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
 21671  0AD4  0020               	movlb	0	; select bank0
 21672  0AD5  0859               	movf	vfpfcnvrt@fmt,w
 21673  0AD6  0086               	movwf	6
 21674  0AD7  0187               	clrf	7
 21675  0AD8  3002               	movlw	2
 21676  0AD9  0781               	addwf	1,f
 21677  0ADA  3141               	addfsr 1,1
 21678  0ADB  1803               	skipnc
 21679  0ADC  0A81               	incf	1,f
 21680                           
 21681                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
 21682  0ADD  085A               	movf	vfpfcnvrt@ap,w
 21683  0ADE  0086               	movwf	6
 21684  0ADF  0187               	clrf	7
 21685  0AE0  0801               	movf	1,w
 21686  0AE1  0084               	movwf	4
 21687  0AE2  0185               	clrf	5
 21688  0AE3  3002               	movlw	2
 21689  0AE4  0781               	addwf	1,f
 21690  0AE5  3F00               	moviw [0]fsr0
 21691  0AE6  0021               	movlb	1	; select bank1
 21692  0AE7  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 21693  0AE8  3F01               	moviw [1]fsr0
 21694  0AE9  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 21695                           
 21696                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
 21697  0AEA  0830               	movf	vfpfcnvrt@vp^(0+128),w
 21698  0AEB  0086               	movwf	6
 21699  0AEC  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 21700  0AED  0087               	movwf	7
 21701  0AEE  0023               	movlb	3	; select bank3
 21702  0AEF  0844               	movf	_nout^(0+384),w
 21703  0AF0  3FC0               	movwi [0]fsr1
 21704  0AF1  0845               	movf	(_nout+1)^(0+384),w
 21705  0AF2  3FC1               	movwi [1]fsr1
 21706  0AF3  2B32               	goto	l7006
 21707  0AF4                     l7024:	
 21708                           
 21709                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
 21710  0AF4  0859               	movf	vfpfcnvrt@fmt,w
 21711  0AF5  0086               	movwf	6
 21712  0AF6  0187               	clrf	7
 21713  0AF7  3001               	movlw	1
 21714  0AF8  0781               	addwf	1,f
 21715  0AF9  3141               	addfsr 1,1
 21716  0AFA  1803               	skipnc
 21717  0AFB  0A81               	incf	1,f
 21718                           
 21719                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
 21720  0AFC  085A               	movf	vfpfcnvrt@ap,w
 21721  0AFD  0086               	movwf	6
 21722  0AFE  0187               	clrf	7
 21723  0AFF  0801               	movf	1,w
 21724  0B00  0084               	movwf	4
 21725  0B01  0185               	clrf	5
 21726  0B02  3002               	movlw	2
 21727  0B03  0781               	addwf	1,f
 21728  0B04  3F00               	moviw [0]fsr0
 21729  0B05  0021               	movlb	1	; select bank1
 21730  0B06  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 21731  0B07  3F01               	moviw [1]fsr0
 21732  0B08  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 21733                           
 21734                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
 21735  0B09  0830               	movf	vfpfcnvrt@vp^(0+128),w
 21736  0B0A  0086               	movwf	6
 21737  0B0B  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 21738  0B0C  0087               	movwf	7
 21739  0B0D  0023               	movlb	3	; select bank3
 21740  0B0E  0844               	movf	_nout^(0+384),w
 21741  0B0F  3FC0               	movwi [0]fsr1
 21742  0B10  0845               	movf	(_nout+1)^(0+384),w
 21743  0B11  3FC1               	movwi [1]fsr1
 21744  0B12  2B32               	goto	l7006
 21745  0B13                     l7036:	
 21746                           
 21747                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
 21748  0B13  0020               	movlb	0	; select bank0
 21749  0B14  0859               	movf	vfpfcnvrt@fmt,w
 21750  0B15  0086               	movwf	6
 21751  0B16  0187               	clrf	7
 21752  0B17  3002               	movlw	2
 21753  0B18  0781               	addwf	1,f
 21754  0B19  3141               	addfsr 1,1
 21755  0B1A  1803               	skipnc
 21756  0B1B  0A81               	incf	1,f
 21757                           
 21758                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
 21759  0B1C  085A               	movf	vfpfcnvrt@ap,w
 21760  0B1D  0086               	movwf	6
 21761  0B1E  0187               	clrf	7
 21762  0B1F  0801               	movf	1,w
 21763  0B20  0084               	movwf	4
 21764  0B21  0185               	clrf	5
 21765  0B22  3002               	movlw	2
 21766  0B23  0781               	addwf	1,f
 21767  0B24  3F00               	moviw [0]fsr0
 21768  0B25  0021               	movlb	1	; select bank1
 21769  0B26  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 21770  0B27  3F01               	moviw [1]fsr0
 21771  0B28  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 21772                           
 21773                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
 21774  0B29  0830               	movf	vfpfcnvrt@vp^(0+128),w
 21775  0B2A  0086               	movwf	6
 21776  0B2B  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 21777  0B2C  0087               	movwf	7
 21778  0B2D  0023               	movlb	3	; select bank3
 21779  0B2E  0844               	movf	_nout^(0+384),w
 21780  0B2F  3FC0               	movwi [0]fsr1
 21781  0B30  0845               	movf	(_nout+1)^(0+384),w
 21782  0B31  3FC1               	movwi [1]fsr1
 21783  0B32                     l7006:	
 21784                           
 21785                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
 21786  0B32  0020               	movlb	0	; select bank0
 21787  0B33  01D7               	clrf	?_vfpfcnvrt
 21788  0B34  01D8               	clrf	?_vfpfcnvrt+1
 21789  0B35  0008               	return
 21790  0B36                     l7010:	
 21791                           
 21792                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
 21793  0B36  0020               	movlb	0	; select bank0
 21794  0B37  0859               	movf	vfpfcnvrt@fmt,w
 21795  0B38  0086               	movwf	6
 21796  0B39  0187               	clrf	7
 21797  0B3A  3F40               	moviw [0]fsr1
 21798  0B3B  00F1               	movwf	strncmp@_l
 21799  0B3C  3F41               	moviw [1]fsr1
 21800  0B3D  00F2               	movwf	strncmp@_l+1
 21801  0B3E  303D               	movlw	low ((STR_67+1)| (0+32768))
 21802  0B3F  00F3               	movwf	strncmp@_r
 21803  0B40  30BA               	movlw	high ((STR_67+1)| (0+32768))
 21804  0B41  00F4               	movwf	strncmp@_r+1
 21805  0B42  3002               	movlw	2
 21806  0B43  00F5               	movwf	strncmp@n
 21807  0B44  3000               	movlw	0
 21808  0B45  00F6               	movwf	strncmp@n+1
 21809  0B46  31B7  27AE  3188   	fcall	_strncmp
 21810  0B49  0871               	movf	?_strncmp,w
 21811  0B4A  0472               	iorwf	?_strncmp+1,w
 21812  0B4B  1903               	btfsc	3,2
 21813  0B4C  2AD4               	goto	l7012
 21814                           
 21815                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
 21816  0B4D  0020               	movlb	0	; select bank0
 21817  0B4E  0859               	movf	vfpfcnvrt@fmt,w
 21818  0B4F  0086               	movwf	6
 21819  0B50  0187               	clrf	7
 21820  0B51  3F40               	moviw [0]fsr1
 21821  0B52  00DB               	movwf	??_vfpfcnvrt
 21822  0B53  3F41               	moviw [1]fsr1
 21823  0B54  00DC               	movwf	??_vfpfcnvrt+1
 21824  0B55  085B               	movf	??_vfpfcnvrt,w
 21825  0B56  0084               	movwf	4
 21826  0B57  085C               	movf	??_vfpfcnvrt+1,w
 21827  0B58  0085               	movwf	5
 21828  0B59  0012               	moviw fsr0++
 21829  0B5A  3A6E               	xorlw	110
 21830  0B5B  1903               	btfsc	3,2
 21831  0B5C  2AF4               	goto	l7024
 21832                           
 21833                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
 21834  0B5D  0859               	movf	vfpfcnvrt@fmt,w
 21835  0B5E  0086               	movwf	6
 21836  0B5F  0187               	clrf	7
 21837  0B60  3F40               	moviw [0]fsr1
 21838  0B61  00F1               	movwf	strncmp@_l
 21839  0B62  3F41               	moviw [1]fsr1
 21840  0B63  00F2               	movwf	strncmp@_l+1
 21841  0B64  3055               	movlw	low (STR_77| (0+32768))
 21842  0B65  00F3               	movwf	strncmp@_r
 21843  0B66  30BA               	movlw	high (STR_77| (0+32768))
 21844  0B67  00F4               	movwf	strncmp@_r+1
 21845  0B68  3002               	movlw	2
 21846  0B69  00F5               	movwf	strncmp@n
 21847  0B6A  3000               	movlw	0
 21848  0B6B  00F6               	movwf	strncmp@n+1
 21849  0B6C  31B7  27AE  3188   	fcall	_strncmp
 21850  0B6F  0871               	movf	?_strncmp,w
 21851  0B70  0472               	iorwf	?_strncmp+1,w
 21852  0B71  1903               	btfsc	3,2
 21853  0B72  2B13               	goto	l7036
 21854                           
 21855                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
 21856  0B73  0020               	movlb	0	; select bank0
 21857  0B74  0859               	movf	vfpfcnvrt@fmt,w
 21858  0B75  0086               	movwf	6
 21859  0B76  0187               	clrf	7
 21860  0B77  3F40               	moviw [0]fsr1
 21861  0B78  00DB               	movwf	??_vfpfcnvrt
 21862  0B79  3F41               	moviw [1]fsr1
 21863  0B7A  00DC               	movwf	??_vfpfcnvrt+1
 21864  0B7B  085B               	movf	??_vfpfcnvrt,w
 21865  0B7C  0084               	movwf	4
 21866  0B7D  085C               	movf	??_vfpfcnvrt+1,w
 21867  0B7E  0085               	movwf	5
 21868  0B7F  0012               	moviw fsr0++
 21869  0B80  3A70               	xorlw	112
 21870  0B81  1D03               	btfss	3,2
 21871  0B82  2BCF               	goto	l7056
 21872                           
 21873                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
 21874  0B83  0859               	movf	vfpfcnvrt@fmt,w
 21875  0B84  0086               	movwf	6
 21876  0B85  0187               	clrf	7
 21877  0B86  3001               	movlw	1
 21878  0B87  0781               	addwf	1,f
 21879  0B88  3141               	addfsr 1,1
 21880  0B89  1803               	skipnc
 21881  0B8A  0A81               	incf	1,f
 21882                           
 21883                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
 21884  0B8B  085A               	movf	vfpfcnvrt@ap,w
 21885  0B8C  0086               	movwf	6
 21886  0B8D  0187               	clrf	7
 21887  0B8E  0801               	movf	1,w
 21888  0B8F  0084               	movwf	4
 21889  0B90  0185               	clrf	5
 21890  0B91  3002               	movlw	2
 21891  0B92  0781               	addwf	1,f
 21892  0B93  3F00               	moviw [0]fsr0
 21893  0B94  0021               	movlb	1	; select bank1
 21894  0B95  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21895  0B96  3F01               	moviw [1]fsr0
 21896  0B97  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 21897  0B98  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21898  0B99  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21899  0B9A  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21900  0B9B  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21901  0B9C  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21902  0B9D  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21903                           
 21904                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
 21905  0B9E  0020               	movlb	0	; select bank0
 21906  0B9F  0858               	movf	vfpfcnvrt@fp+1,w
 21907  0BA0  00B1               	movwf	xtoa@fp+1
 21908  0BA1  0857               	movf	vfpfcnvrt@fp,w
 21909  0BA2  00B0               	movwf	xtoa@fp
 21910  0BA3  0021               	movlb	1	; select bank1
 21911  0BA4  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21912  0BA5  0020               	movlb	0	; select bank0
 21913  0BA6  00B2               	movwf	xtoa@d
 21914  0BA7  0021               	movlb	1	; select bank1
 21915  0BA8  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21916  0BA9  0020               	movlb	0	; select bank0
 21917  0BAA  00B3               	movwf	xtoa@d+1
 21918  0BAB  0021               	movlb	1	; select bank1
 21919  0BAC  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21920  0BAD  0020               	movlb	0	; select bank0
 21921  0BAE  00B4               	movwf	xtoa@d+2
 21922  0BAF  0021               	movlb	1	; select bank1
 21923  0BB0  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21924  0BB1  0020               	movlb	0	; select bank0
 21925  0BB2  00B5               	movwf	xtoa@d+3
 21926  0BB3  0021               	movlb	1	; select bank1
 21927  0BB4  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21928  0BB5  0020               	movlb	0	; select bank0
 21929  0BB6  00B6               	movwf	xtoa@d+4
 21930  0BB7  0021               	movlb	1	; select bank1
 21931  0BB8  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21932  0BB9  0020               	movlb	0	; select bank0
 21933  0BBA  00B7               	movwf	xtoa@d+5
 21934  0BBB  0021               	movlb	1	; select bank1
 21935  0BBC  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21936  0BBD  0020               	movlb	0	; select bank0
 21937  0BBE  00B8               	movwf	xtoa@d+6
 21938  0BBF  0021               	movlb	1	; select bank1
 21939  0BC0  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21940  0BC1  0020               	movlb	0	; select bank0
 21941  0BC2  00B9               	movwf	xtoa@d+7
 21942  0BC3  3078               	movlw	120
 21943  0BC4  00DB               	movwf	??_vfpfcnvrt
 21944  0BC5  085B               	movf	??_vfpfcnvrt,w
 21945  0BC6  00BA               	movwf	xtoa@x
 21946  0BC7  3199  21FA         	fcall	_xtoa
 21947  0BC9  0020               	movlb	0	; select bank0
 21948  0BCA  0831               	movf	?_xtoa+1,w
 21949  0BCB  00D8               	movwf	?_vfpfcnvrt+1
 21950  0BCC  0830               	movf	?_xtoa,w
 21951  0BCD  00D7               	movwf	?_vfpfcnvrt
 21952  0BCE  0008               	return
 21953  0BCF                     l7056:	
 21954                           
 21955                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 21956  0BCF  0859               	movf	vfpfcnvrt@fmt,w
 21957  0BD0  0086               	movwf	6
 21958  0BD1  0187               	clrf	7
 21959  0BD2  3F40               	moviw [0]fsr1
 21960  0BD3  00DB               	movwf	??_vfpfcnvrt
 21961  0BD4  3F41               	moviw [1]fsr1
 21962  0BD5  00DC               	movwf	??_vfpfcnvrt+1
 21963  0BD6  085B               	movf	??_vfpfcnvrt,w
 21964  0BD7  0084               	movwf	4
 21965  0BD8  085C               	movf	??_vfpfcnvrt+1,w
 21966  0BD9  0085               	movwf	5
 21967  0BDA  0012               	moviw fsr0++
 21968  0BDB  3A73               	xorlw	115
 21969  0BDC  1D03               	btfss	3,2
 21970  0BDD  2C08               	goto	l7066
 21971                           
 21972                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 21973  0BDE  0859               	movf	vfpfcnvrt@fmt,w
 21974  0BDF  0086               	movwf	6
 21975  0BE0  0187               	clrf	7
 21976  0BE1  3001               	movlw	1
 21977  0BE2  0781               	addwf	1,f
 21978  0BE3  3141               	addfsr 1,1
 21979  0BE4  1803               	skipnc
 21980  0BE5  0A81               	incf	1,f
 21981                           
 21982                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 21983  0BE6  085A               	movf	vfpfcnvrt@ap,w
 21984  0BE7  0086               	movwf	6
 21985  0BE8  0187               	clrf	7
 21986  0BE9  0801               	movf	1,w
 21987  0BEA  0084               	movwf	4
 21988  0BEB  0185               	clrf	5
 21989  0BEC  3002               	movlw	2
 21990  0BED  0781               	addwf	1,f
 21991  0BEE  3F00               	moviw [0]fsr0
 21992  0BEF  0021               	movlb	1	; select bank1
 21993  0BF0  00A0               	movwf	vfpfcnvrt@cp^(0+128)
 21994  0BF1  3F01               	moviw [1]fsr0
 21995  0BF2  00A1               	movwf	(vfpfcnvrt@cp+1)^(0+128)
 21996                           
 21997                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 21998  0BF3  0020               	movlb	0	; select bank0
 21999  0BF4  0858               	movf	vfpfcnvrt@fp+1,w
 22000  0BF5  00A1               	movwf	stoa@fp+1
 22001  0BF6  0857               	movf	vfpfcnvrt@fp,w
 22002  0BF7  00A0               	movwf	stoa@fp
 22003  0BF8  0021               	movlb	1	; select bank1
 22004  0BF9  0821               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 22005  0BFA  0020               	movlb	0	; select bank0
 22006  0BFB  00A3               	movwf	stoa@s+1
 22007  0BFC  0021               	movlb	1	; select bank1
 22008  0BFD  0820               	movf	vfpfcnvrt@cp^(0+128),w
 22009  0BFE  0020               	movlb	0	; select bank0
 22010  0BFF  00A2               	movwf	stoa@s
 22011  0C00  31AE  2666         	fcall	_stoa
 22012  0C02  0020               	movlb	0	; select bank0
 22013  0C03  0821               	movf	?_stoa+1,w
 22014  0C04  00D8               	movwf	?_vfpfcnvrt+1
 22015  0C05  0820               	movf	?_stoa,w
 22016  0C06  00D7               	movwf	?_vfpfcnvrt
 22017  0C07  0008               	return
 22018  0C08                     l7066:	
 22019                           
 22020                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
 22021  0C08  0859               	movf	vfpfcnvrt@fmt,w
 22022  0C09  0086               	movwf	6
 22023  0C0A  0187               	clrf	7
 22024  0C0B  3F40               	moviw [0]fsr1
 22025  0C0C  00F1               	movwf	strncmp@_l
 22026  0C0D  3F41               	moviw [1]fsr1
 22027  0C0E  00F2               	movwf	strncmp@_l+1
 22028  0C0F  3044               	movlw	low (STR_82| (0+32768))
 22029  0C10  00F3               	movwf	strncmp@_r
 22030  0C11  30BA               	movlw	high (STR_82| (0+32768))
 22031  0C12  00F4               	movwf	strncmp@_r+1
 22032  0C13  3003               	movlw	3
 22033  0C14  00F5               	movwf	strncmp@n
 22034  0C15  3000               	movlw	0
 22035  0C16  00F6               	movwf	strncmp@n+1
 22036  0C17  31B7  27AE  3188   	fcall	_strncmp
 22037  0C1A  0871               	movf	?_strncmp,w
 22038  0C1B  0472               	iorwf	?_strncmp+1,w
 22039  0C1C  1D03               	btfss	3,2
 22040  0C1D  2C66               	goto	l7076
 22041                           
 22042                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
 22043  0C1E  0020               	movlb	0	; select bank0
 22044  0C1F  0859               	movf	vfpfcnvrt@fmt,w
 22045  0C20  0086               	movwf	6
 22046  0C21  0187               	clrf	7
 22047  0C22  3003               	movlw	3
 22048  0C23  0781               	addwf	1,f
 22049  0C24  3141               	addfsr 1,1
 22050  0C25  1803               	skipnc
 22051  0C26  0A81               	incf	1,f
 22052                           
 22053                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 22054  0C27  085A               	movf	vfpfcnvrt@ap,w
 22055  0C28  0086               	movwf	6
 22056  0C29  0187               	clrf	7
 22057  0C2A  0801               	movf	1,w
 22058  0C2B  0084               	movwf	4
 22059  0C2C  0185               	clrf	5
 22060  0C2D  3002               	movlw	2
 22061  0C2E  0781               	addwf	1,f
 22062  0C2F  0800               	movf	0,w
 22063  0C30  0021               	movlb	1	; select bank1
 22064  0C31  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22065  0C32  01B4               	clrf	(vfpfcnvrt@llu+1)^(0+128)
 22066  0C33  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22067  0C34  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22068  0C35  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22069  0C36  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22070  0C37  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22071  0C38  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22072                           
 22073                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
 22074  0C39  0020               	movlb	0	; select bank0
 22075  0C3A  0858               	movf	vfpfcnvrt@fp+1,w
 22076  0C3B  00B1               	movwf	utoa@fp+1
 22077  0C3C  0857               	movf	vfpfcnvrt@fp,w
 22078  0C3D  00B0               	movwf	utoa@fp
 22079  0C3E  0021               	movlb	1	; select bank1
 22080  0C3F  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22081  0C40  0020               	movlb	0	; select bank0
 22082  0C41  00B2               	movwf	utoa@d
 22083  0C42  0021               	movlb	1	; select bank1
 22084  0C43  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22085  0C44  0020               	movlb	0	; select bank0
 22086  0C45  00B3               	movwf	utoa@d+1
 22087  0C46  0021               	movlb	1	; select bank1
 22088  0C47  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22089  0C48  0020               	movlb	0	; select bank0
 22090  0C49  00B4               	movwf	utoa@d+2
 22091  0C4A  0021               	movlb	1	; select bank1
 22092  0C4B  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22093  0C4C  0020               	movlb	0	; select bank0
 22094  0C4D  00B5               	movwf	utoa@d+3
 22095  0C4E  0021               	movlb	1	; select bank1
 22096  0C4F  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22097  0C50  0020               	movlb	0	; select bank0
 22098  0C51  00B6               	movwf	utoa@d+4
 22099  0C52  0021               	movlb	1	; select bank1
 22100  0C53  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22101  0C54  0020               	movlb	0	; select bank0
 22102  0C55  00B7               	movwf	utoa@d+5
 22103  0C56  0021               	movlb	1	; select bank1
 22104  0C57  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22105  0C58  0020               	movlb	0	; select bank0
 22106  0C59  00B8               	movwf	utoa@d+6
 22107  0C5A  0021               	movlb	1	; select bank1
 22108  0C5B  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22109  0C5C  0020               	movlb	0	; select bank0
 22110  0C5D  00B9               	movwf	utoa@d+7
 22111  0C5E  31A2  2214         	fcall	_utoa
 22112  0C60  0020               	movlb	0	; select bank0
 22113  0C61  0831               	movf	?_utoa+1,w
 22114  0C62  00D8               	movwf	?_vfpfcnvrt+1
 22115  0C63  0830               	movf	?_utoa,w
 22116  0C64  00D7               	movwf	?_vfpfcnvrt
 22117  0C65  0008               	return
 22118  0C66                     l7076:	
 22119                           
 22120                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
 22121  0C66  0020               	movlb	0	; select bank0
 22122  0C67  0859               	movf	vfpfcnvrt@fmt,w
 22123  0C68  0086               	movwf	6
 22124  0C69  0187               	clrf	7
 22125  0C6A  3F40               	moviw [0]fsr1
 22126  0C6B  00F1               	movwf	strncmp@_l
 22127  0C6C  3F41               	moviw [1]fsr1
 22128  0C6D  00F2               	movwf	strncmp@_l+1
 22129  0C6E  3045               	movlw	low ((STR_82+1)| (0+32768))
 22130  0C6F  00F3               	movwf	strncmp@_r
 22131  0C70  30BA               	movlw	high ((STR_82+1)| (0+32768))
 22132  0C71  00F4               	movwf	strncmp@_r+1
 22133  0C72  3002               	movlw	2
 22134  0C73  00F5               	movwf	strncmp@n
 22135  0C74  3000               	movlw	0
 22136  0C75  00F6               	movwf	strncmp@n+1
 22137  0C76  31B7  27AE  3188   	fcall	_strncmp
 22138  0C79  0871               	movf	?_strncmp,w
 22139  0C7A  0472               	iorwf	?_strncmp+1,w
 22140  0C7B  1D03               	btfss	3,2
 22141  0C7C  2CC6               	goto	l7086
 22142                           
 22143                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
 22144  0C7D  0020               	movlb	0	; select bank0
 22145  0C7E  0859               	movf	vfpfcnvrt@fmt,w
 22146  0C7F  0086               	movwf	6
 22147  0C80  0187               	clrf	7
 22148  0C81  3002               	movlw	2
 22149  0C82  0781               	addwf	1,f
 22150  0C83  3141               	addfsr 1,1
 22151  0C84  1803               	skipnc
 22152  0C85  0A81               	incf	1,f
 22153                           
 22154                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 22155  0C86  085A               	movf	vfpfcnvrt@ap,w
 22156  0C87  0086               	movwf	6
 22157  0C88  0187               	clrf	7
 22158  0C89  0801               	movf	1,w
 22159  0C8A  0084               	movwf	4
 22160  0C8B  0185               	clrf	5
 22161  0C8C  3002               	movlw	2
 22162  0C8D  0781               	addwf	1,f
 22163  0C8E  3F00               	moviw [0]fsr0
 22164  0C8F  0021               	movlb	1	; select bank1
 22165  0C90  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22166  0C91  3F01               	moviw [1]fsr0
 22167  0C92  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22168  0C93  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22169  0C94  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22170  0C95  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22171  0C96  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22172  0C97  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22173  0C98  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22174                           
 22175                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1177:      
      +                                 return utoa(fp, llu);
 22176  0C99  0020               	movlb	0	; select bank0
 22177  0C9A  0858               	movf	vfpfcnvrt@fp+1,w
 22178  0C9B  00B1               	movwf	utoa@fp+1
 22179  0C9C  0857               	movf	vfpfcnvrt@fp,w
 22180  0C9D  00B0               	movwf	utoa@fp
 22181  0C9E  0021               	movlb	1	; select bank1
 22182  0C9F  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22183  0CA0  0020               	movlb	0	; select bank0
 22184  0CA1  00B2               	movwf	utoa@d
 22185  0CA2  0021               	movlb	1	; select bank1
 22186  0CA3  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22187  0CA4  0020               	movlb	0	; select bank0
 22188  0CA5  00B3               	movwf	utoa@d+1
 22189  0CA6  0021               	movlb	1	; select bank1
 22190  0CA7  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22191  0CA8  0020               	movlb	0	; select bank0
 22192  0CA9  00B4               	movwf	utoa@d+2
 22193  0CAA  0021               	movlb	1	; select bank1
 22194  0CAB  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22195  0CAC  0020               	movlb	0	; select bank0
 22196  0CAD  00B5               	movwf	utoa@d+3
 22197  0CAE  0021               	movlb	1	; select bank1
 22198  0CAF  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22199  0CB0  0020               	movlb	0	; select bank0
 22200  0CB1  00B6               	movwf	utoa@d+4
 22201  0CB2  0021               	movlb	1	; select bank1
 22202  0CB3  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22203  0CB4  0020               	movlb	0	; select bank0
 22204  0CB5  00B7               	movwf	utoa@d+5
 22205  0CB6  0021               	movlb	1	; select bank1
 22206  0CB7  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22207  0CB8  0020               	movlb	0	; select bank0
 22208  0CB9  00B8               	movwf	utoa@d+6
 22209  0CBA  0021               	movlb	1	; select bank1
 22210  0CBB  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22211  0CBC  0020               	movlb	0	; select bank0
 22212  0CBD  00B9               	movwf	utoa@d+7
 22213  0CBE  31A2  2214         	fcall	_utoa
 22214  0CC0  0020               	movlb	0	; select bank0
 22215  0CC1  0831               	movf	?_utoa+1,w
 22216  0CC2  00D8               	movwf	?_vfpfcnvrt+1
 22217  0CC3  0830               	movf	?_utoa,w
 22218  0CC4  00D7               	movwf	?_vfpfcnvrt
 22219  0CC5  0008               	return
 22220  0CC6                     l7086:	
 22221                           
 22222                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 22223  0CC6  0020               	movlb	0	; select bank0
 22224  0CC7  0859               	movf	vfpfcnvrt@fmt,w
 22225  0CC8  0086               	movwf	6
 22226  0CC9  0187               	clrf	7
 22227  0CCA  3F40               	moviw [0]fsr1
 22228  0CCB  00DB               	movwf	??_vfpfcnvrt
 22229  0CCC  3F41               	moviw [1]fsr1
 22230  0CCD  00DC               	movwf	??_vfpfcnvrt+1
 22231  0CCE  085B               	movf	??_vfpfcnvrt,w
 22232  0CCF  0084               	movwf	4
 22233  0CD0  085C               	movf	??_vfpfcnvrt+1,w
 22234  0CD1  0085               	movwf	5
 22235  0CD2  0012               	moviw fsr0++
 22236  0CD3  3A75               	xorlw	117
 22237  0CD4  1D03               	btfss	3,2
 22238  0CD5  2D1E               	goto	l7096
 22239                           
 22240                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 22241  0CD6  0859               	movf	vfpfcnvrt@fmt,w
 22242  0CD7  0086               	movwf	6
 22243  0CD8  0187               	clrf	7
 22244  0CD9  3001               	movlw	1
 22245  0CDA  0781               	addwf	1,f
 22246  0CDB  3141               	addfsr 1,1
 22247  0CDC  1803               	skipnc
 22248  0CDD  0A81               	incf	1,f
 22249                           
 22250                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 22251  0CDE  085A               	movf	vfpfcnvrt@ap,w
 22252  0CDF  0086               	movwf	6
 22253  0CE0  0187               	clrf	7
 22254  0CE1  0801               	movf	1,w
 22255  0CE2  0084               	movwf	4
 22256  0CE3  0185               	clrf	5
 22257  0CE4  3002               	movlw	2
 22258  0CE5  0781               	addwf	1,f
 22259  0CE6  3F00               	moviw [0]fsr0
 22260  0CE7  0021               	movlb	1	; select bank1
 22261  0CE8  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22262  0CE9  3F01               	moviw [1]fsr0
 22263  0CEA  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22264  0CEB  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22265  0CEC  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22266  0CED  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22267  0CEE  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22268  0CEF  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22269  0CF0  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22270                           
 22271                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
 22272  0CF1  0020               	movlb	0	; select bank0
 22273  0CF2  0858               	movf	vfpfcnvrt@fp+1,w
 22274  0CF3  00B1               	movwf	utoa@fp+1
 22275  0CF4  0857               	movf	vfpfcnvrt@fp,w
 22276  0CF5  00B0               	movwf	utoa@fp
 22277  0CF6  0021               	movlb	1	; select bank1
 22278  0CF7  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22279  0CF8  0020               	movlb	0	; select bank0
 22280  0CF9  00B2               	movwf	utoa@d
 22281  0CFA  0021               	movlb	1	; select bank1
 22282  0CFB  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22283  0CFC  0020               	movlb	0	; select bank0
 22284  0CFD  00B3               	movwf	utoa@d+1
 22285  0CFE  0021               	movlb	1	; select bank1
 22286  0CFF  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22287  0D00  0020               	movlb	0	; select bank0
 22288  0D01  00B4               	movwf	utoa@d+2
 22289  0D02  0021               	movlb	1	; select bank1
 22290  0D03  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22291  0D04  0020               	movlb	0	; select bank0
 22292  0D05  00B5               	movwf	utoa@d+3
 22293  0D06  0021               	movlb	1	; select bank1
 22294  0D07  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22295  0D08  0020               	movlb	0	; select bank0
 22296  0D09  00B6               	movwf	utoa@d+4
 22297  0D0A  0021               	movlb	1	; select bank1
 22298  0D0B  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22299  0D0C  0020               	movlb	0	; select bank0
 22300  0D0D  00B7               	movwf	utoa@d+5
 22301  0D0E  0021               	movlb	1	; select bank1
 22302  0D0F  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22303  0D10  0020               	movlb	0	; select bank0
 22304  0D11  00B8               	movwf	utoa@d+6
 22305  0D12  0021               	movlb	1	; select bank1
 22306  0D13  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22307  0D14  0020               	movlb	0	; select bank0
 22308  0D15  00B9               	movwf	utoa@d+7
 22309  0D16  31A2  2214         	fcall	_utoa
 22310  0D18  0020               	movlb	0	; select bank0
 22311  0D19  0831               	movf	?_utoa+1,w
 22312  0D1A  00D8               	movwf	?_vfpfcnvrt+1
 22313  0D1B  0830               	movf	?_utoa,w
 22314  0D1C  00D7               	movwf	?_vfpfcnvrt
 22315  0D1D  0008               	return
 22316  0D1E                     l7096:	
 22317                           
 22318                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
 22319  0D1E  0859               	movf	vfpfcnvrt@fmt,w
 22320  0D1F  0086               	movwf	6
 22321  0D20  0187               	clrf	7
 22322  0D21  3F40               	moviw [0]fsr1
 22323  0D22  00F1               	movwf	strncmp@_l
 22324  0D23  3F41               	moviw [1]fsr1
 22325  0D24  00F2               	movwf	strncmp@_l+1
 22326  0D25  305B               	movlw	low (STR_92| (0+32768))
 22327  0D26  00F3               	movwf	strncmp@_r
 22328  0D27  30BA               	movlw	high (STR_92| (0+32768))
 22329  0D28  00F4               	movwf	strncmp@_r+1
 22330  0D29  3002               	movlw	2
 22331  0D2A  00F5               	movwf	strncmp@n
 22332  0D2B  3000               	movlw	0
 22333  0D2C  00F6               	movwf	strncmp@n+1
 22334  0D2D  31B7  27AE  3188   	fcall	_strncmp
 22335  0D30  0871               	movf	?_strncmp,w
 22336  0D31  0472               	iorwf	?_strncmp+1,w
 22337  0D32  1D03               	btfss	3,2
 22338  0D33  2D7D               	goto	l7106
 22339                           
 22340                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
 22341  0D34  0020               	movlb	0	; select bank0
 22342  0D35  0859               	movf	vfpfcnvrt@fmt,w
 22343  0D36  0086               	movwf	6
 22344  0D37  0187               	clrf	7
 22345  0D38  3002               	movlw	2
 22346  0D39  0781               	addwf	1,f
 22347  0D3A  3141               	addfsr 1,1
 22348  0D3B  1803               	skipnc
 22349  0D3C  0A81               	incf	1,f
 22350                           
 22351                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 22352  0D3D  085A               	movf	vfpfcnvrt@ap,w
 22353  0D3E  0086               	movwf	6
 22354  0D3F  0187               	clrf	7
 22355  0D40  0801               	movf	1,w
 22356  0D41  0084               	movwf	4
 22357  0D42  0185               	clrf	5
 22358  0D43  3002               	movlw	2
 22359  0D44  0781               	addwf	1,f
 22360  0D45  3F00               	moviw [0]fsr0
 22361  0D46  0021               	movlb	1	; select bank1
 22362  0D47  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22363  0D48  3F01               	moviw [1]fsr0
 22364  0D49  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22365  0D4A  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22366  0D4B  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22367  0D4C  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22368  0D4D  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22369  0D4E  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22370  0D4F  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22371                           
 22372                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1241:      
      +                                 return utoa(fp, llu);
 22373  0D50  0020               	movlb	0	; select bank0
 22374  0D51  0858               	movf	vfpfcnvrt@fp+1,w
 22375  0D52  00B1               	movwf	utoa@fp+1
 22376  0D53  0857               	movf	vfpfcnvrt@fp,w
 22377  0D54  00B0               	movwf	utoa@fp
 22378  0D55  0021               	movlb	1	; select bank1
 22379  0D56  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22380  0D57  0020               	movlb	0	; select bank0
 22381  0D58  00B2               	movwf	utoa@d
 22382  0D59  0021               	movlb	1	; select bank1
 22383  0D5A  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22384  0D5B  0020               	movlb	0	; select bank0
 22385  0D5C  00B3               	movwf	utoa@d+1
 22386  0D5D  0021               	movlb	1	; select bank1
 22387  0D5E  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22388  0D5F  0020               	movlb	0	; select bank0
 22389  0D60  00B4               	movwf	utoa@d+2
 22390  0D61  0021               	movlb	1	; select bank1
 22391  0D62  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22392  0D63  0020               	movlb	0	; select bank0
 22393  0D64  00B5               	movwf	utoa@d+3
 22394  0D65  0021               	movlb	1	; select bank1
 22395  0D66  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22396  0D67  0020               	movlb	0	; select bank0
 22397  0D68  00B6               	movwf	utoa@d+4
 22398  0D69  0021               	movlb	1	; select bank1
 22399  0D6A  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22400  0D6B  0020               	movlb	0	; select bank0
 22401  0D6C  00B7               	movwf	utoa@d+5
 22402  0D6D  0021               	movlb	1	; select bank1
 22403  0D6E  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22404  0D6F  0020               	movlb	0	; select bank0
 22405  0D70  00B8               	movwf	utoa@d+6
 22406  0D71  0021               	movlb	1	; select bank1
 22407  0D72  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22408  0D73  0020               	movlb	0	; select bank0
 22409  0D74  00B9               	movwf	utoa@d+7
 22410  0D75  31A2  2214         	fcall	_utoa
 22411  0D77  0020               	movlb	0	; select bank0
 22412  0D78  0831               	movf	?_utoa+1,w
 22413  0D79  00D8               	movwf	?_vfpfcnvrt+1
 22414  0D7A  0830               	movf	?_utoa,w
 22415  0D7B  00D7               	movwf	?_vfpfcnvrt
 22416  0D7C  0008               	return
 22417  0D7D                     l7106:	
 22418                           
 22419                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
 22420  0D7D  0020               	movlb	0	; select bank0
 22421  0D7E  0859               	movf	vfpfcnvrt@fmt,w
 22422  0D7F  0086               	movwf	6
 22423  0D80  0187               	clrf	7
 22424  0D81  3F40               	moviw [0]fsr1
 22425  0D82  00F1               	movwf	strncmp@_l
 22426  0D83  3F41               	moviw [1]fsr1
 22427  0D84  00F2               	movwf	strncmp@_l+1
 22428  0D85  3048               	movlw	low (STR_97| (0+32768))
 22429  0D86  00F3               	movwf	strncmp@_r
 22430  0D87  30BA               	movlw	high (STR_97| (0+32768))
 22431  0D88  00F4               	movwf	strncmp@_r+1
 22432  0D89  3003               	movlw	3
 22433  0D8A  00F5               	movwf	strncmp@n
 22434  0D8B  3000               	movlw	0
 22435  0D8C  00F6               	movwf	strncmp@n+1
 22436  0D8D  31B7  27AE  3188   	fcall	_strncmp
 22437  0D90  0871               	movf	?_strncmp,w
 22438  0D91  0472               	iorwf	?_strncmp+1,w
 22439  0D92  1903               	btfsc	3,2
 22440  0D93  2DAB               	goto	l7110
 22441  0D94  0020               	movlb	0	; select bank0
 22442  0D95  0859               	movf	vfpfcnvrt@fmt,w
 22443  0D96  0086               	movwf	6
 22444  0D97  0187               	clrf	7
 22445  0D98  3F40               	moviw [0]fsr1
 22446  0D99  00F1               	movwf	strncmp@_l
 22447  0D9A  3F41               	moviw [1]fsr1
 22448  0D9B  00F2               	movwf	strncmp@_l+1
 22449  0D9C  3030               	movlw	low (STR_101| (0+32768))
 22450  0D9D  00F3               	movwf	strncmp@_r
 22451  0D9E  30BA               	movlw	high (STR_101| (0+32768))
 22452  0D9F  00F4               	movwf	strncmp@_r+1
 22453  0DA0  3003               	movlw	3
 22454  0DA1  00F5               	movwf	strncmp@n
 22455  0DA2  3000               	movlw	0
 22456  0DA3  00F6               	movwf	strncmp@n+1
 22457  0DA4  31B7  27AE  3188   	fcall	_strncmp
 22458  0DA7  0871               	movf	?_strncmp,w
 22459  0DA8  0472               	iorwf	?_strncmp+1,w
 22460  0DA9  1D03               	btfss	3,2
 22461  0DAA  2E0D               	goto	l7120
 22462  0DAB                     l7110:	
 22463                           
 22464                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
 22465  0DAB  0020               	movlb	0	; select bank0
 22466  0DAC  0859               	movf	vfpfcnvrt@fmt,w
 22467  0DAD  0086               	movwf	6
 22468  0DAE  0187               	clrf	7
 22469  0DAF  3F40               	moviw [0]fsr1
 22470  0DB0  00DB               	movwf	??_vfpfcnvrt
 22471  0DB1  3F41               	moviw [1]fsr1
 22472  0DB2  00DC               	movwf	??_vfpfcnvrt+1
 22473  0DB3  3002               	movlw	2
 22474  0DB4  075B               	addwf	??_vfpfcnvrt,w
 22475  0DB5  0084               	movwf	4
 22476  0DB6  085C               	movf	??_vfpfcnvrt+1,w
 22477  0DB7  1803               	skipnc
 22478  0DB8  0A5C               	incf	??_vfpfcnvrt+1,w
 22479  0DB9  0085               	movwf	5
 22480  0DBA  0800               	movf	0,w	;code access
 22481  0DBB  00DD               	movwf	??_vfpfcnvrt+2
 22482  0DBC  085D               	movf	??_vfpfcnvrt+2,w
 22483  0DBD  0021               	movlb	1	; select bank1
 22484  0DBE  00B2               	movwf	vfpfcnvrt@c^(0+128)
 22485                           
 22486                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
 22487  0DBF  0020               	movlb	0	; select bank0
 22488  0DC0  0859               	movf	vfpfcnvrt@fmt,w
 22489  0DC1  0086               	movwf	6
 22490  0DC2  0187               	clrf	7
 22491  0DC3  3003               	movlw	3
 22492  0DC4  0781               	addwf	1,f
 22493  0DC5  3141               	addfsr 1,1
 22494  0DC6  1803               	skipnc
 22495  0DC7  0A81               	incf	1,f
 22496                           
 22497                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 22498  0DC8  085A               	movf	vfpfcnvrt@ap,w
 22499  0DC9  0086               	movwf	6
 22500  0DCA  0187               	clrf	7
 22501  0DCB  0801               	movf	1,w
 22502  0DCC  0084               	movwf	4
 22503  0DCD  0185               	clrf	5
 22504  0DCE  3002               	movlw	2
 22505  0DCF  0781               	addwf	1,f
 22506  0DD0  0800               	movf	0,w
 22507  0DD1  0021               	movlb	1	; select bank1
 22508  0DD2  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22509  0DD3  01B4               	clrf	(vfpfcnvrt@llu+1)^(0+128)
 22510  0DD4  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22511  0DD5  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22512  0DD6  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22513  0DD7  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22514  0DD8  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22515  0DD9  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22516                           
 22517                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
 22518  0DDA  0020               	movlb	0	; select bank0
 22519  0DDB  0858               	movf	vfpfcnvrt@fp+1,w
 22520  0DDC  00B1               	movwf	xtoa@fp+1
 22521  0DDD  0857               	movf	vfpfcnvrt@fp,w
 22522  0DDE  00B0               	movwf	xtoa@fp
 22523  0DDF  0021               	movlb	1	; select bank1
 22524  0DE0  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22525  0DE1  0020               	movlb	0	; select bank0
 22526  0DE2  00B2               	movwf	xtoa@d
 22527  0DE3  0021               	movlb	1	; select bank1
 22528  0DE4  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22529  0DE5  0020               	movlb	0	; select bank0
 22530  0DE6  00B3               	movwf	xtoa@d+1
 22531  0DE7  0021               	movlb	1	; select bank1
 22532  0DE8  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22533  0DE9  0020               	movlb	0	; select bank0
 22534  0DEA  00B4               	movwf	xtoa@d+2
 22535  0DEB  0021               	movlb	1	; select bank1
 22536  0DEC  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22537  0DED  0020               	movlb	0	; select bank0
 22538  0DEE  00B5               	movwf	xtoa@d+3
 22539  0DEF  0021               	movlb	1	; select bank1
 22540  0DF0  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22541  0DF1  0020               	movlb	0	; select bank0
 22542  0DF2  00B6               	movwf	xtoa@d+4
 22543  0DF3  0021               	movlb	1	; select bank1
 22544  0DF4  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22545  0DF5  0020               	movlb	0	; select bank0
 22546  0DF6  00B7               	movwf	xtoa@d+5
 22547  0DF7  0021               	movlb	1	; select bank1
 22548  0DF8  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22549  0DF9  0020               	movlb	0	; select bank0
 22550  0DFA  00B8               	movwf	xtoa@d+6
 22551  0DFB  0021               	movlb	1	; select bank1
 22552  0DFC  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22553  0DFD  0020               	movlb	0	; select bank0
 22554  0DFE  00B9               	movwf	xtoa@d+7
 22555  0DFF  0021               	movlb	1	; select bank1
 22556  0E00  0832               	movf	vfpfcnvrt@c^(0+128),w
 22557  0E01  0020               	movlb	0	; select bank0
 22558  0E02  00DB               	movwf	??_vfpfcnvrt
 22559  0E03  085B               	movf	??_vfpfcnvrt,w
 22560  0E04  00BA               	movwf	xtoa@x
 22561  0E05  3199  21FA         	fcall	_xtoa
 22562  0E07  0020               	movlb	0	; select bank0
 22563  0E08  0831               	movf	?_xtoa+1,w
 22564  0E09  00D8               	movwf	?_vfpfcnvrt+1
 22565  0E0A  0830               	movf	?_xtoa,w
 22566  0E0B  00D7               	movwf	?_vfpfcnvrt
 22567  0E0C  0008               	return
 22568  0E0D                     l7120:	
 22569                           
 22570                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
 22571  0E0D  0020               	movlb	0	; select bank0
 22572  0E0E  0859               	movf	vfpfcnvrt@fmt,w
 22573  0E0F  0086               	movwf	6
 22574  0E10  0187               	clrf	7
 22575  0E11  3F40               	moviw [0]fsr1
 22576  0E12  00F1               	movwf	strncmp@_l
 22577  0E13  3F41               	moviw [1]fsr1
 22578  0E14  00F2               	movwf	strncmp@_l+1
 22579  0E15  3049               	movlw	low ((STR_97+1)| (0+32768))
 22580  0E16  00F3               	movwf	strncmp@_r
 22581  0E17  30BA               	movlw	high ((STR_97+1)| (0+32768))
 22582  0E18  00F4               	movwf	strncmp@_r+1
 22583  0E19  3002               	movlw	2
 22584  0E1A  00F5               	movwf	strncmp@n
 22585  0E1B  3000               	movlw	0
 22586  0E1C  00F6               	movwf	strncmp@n+1
 22587  0E1D  31B7  27AE  3188   	fcall	_strncmp
 22588  0E20  0871               	movf	?_strncmp,w
 22589  0E21  0472               	iorwf	?_strncmp+1,w
 22590  0E22  1903               	btfsc	3,2
 22591  0E23  2E3B               	goto	l7124
 22592  0E24  0020               	movlb	0	; select bank0
 22593  0E25  0859               	movf	vfpfcnvrt@fmt,w
 22594  0E26  0086               	movwf	6
 22595  0E27  0187               	clrf	7
 22596  0E28  3F40               	moviw [0]fsr1
 22597  0E29  00F1               	movwf	strncmp@_l
 22598  0E2A  3F41               	moviw [1]fsr1
 22599  0E2B  00F2               	movwf	strncmp@_l+1
 22600  0E2C  3031               	movlw	low ((STR_101+1)| (0+32768))
 22601  0E2D  00F3               	movwf	strncmp@_r
 22602  0E2E  30BA               	movlw	high ((STR_101+1)| (0+32768))
 22603  0E2F  00F4               	movwf	strncmp@_r+1
 22604  0E30  3002               	movlw	2
 22605  0E31  00F5               	movwf	strncmp@n
 22606  0E32  3000               	movlw	0
 22607  0E33  00F6               	movwf	strncmp@n+1
 22608  0E34  31B7  27AE  3188   	fcall	_strncmp
 22609  0E37  0871               	movf	?_strncmp,w
 22610  0E38  0472               	iorwf	?_strncmp+1,w
 22611  0E39  1D03               	btfss	3,2
 22612  0E3A  2E9E               	goto	l7134
 22613  0E3B                     l7124:	
 22614                           
 22615                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
 22616  0E3B  0020               	movlb	0	; select bank0
 22617  0E3C  0859               	movf	vfpfcnvrt@fmt,w
 22618  0E3D  0086               	movwf	6
 22619  0E3E  0187               	clrf	7
 22620  0E3F  3F40               	moviw [0]fsr1
 22621  0E40  00DB               	movwf	??_vfpfcnvrt
 22622  0E41  3F41               	moviw [1]fsr1
 22623  0E42  00DC               	movwf	??_vfpfcnvrt+1
 22624  0E43  3001               	movlw	1
 22625  0E44  075B               	addwf	??_vfpfcnvrt,w
 22626  0E45  0084               	movwf	4
 22627  0E46  085C               	movf	??_vfpfcnvrt+1,w
 22628  0E47  1803               	skipnc
 22629  0E48  0A5C               	incf	??_vfpfcnvrt+1,w
 22630  0E49  0085               	movwf	5
 22631  0E4A  0800               	movf	0,w	;code access
 22632  0E4B  00DD               	movwf	??_vfpfcnvrt+2
 22633  0E4C  085D               	movf	??_vfpfcnvrt+2,w
 22634  0E4D  0021               	movlb	1	; select bank1
 22635  0E4E  00B2               	movwf	vfpfcnvrt@c^(0+128)
 22636                           
 22637                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
 22638  0E4F  0020               	movlb	0	; select bank0
 22639  0E50  0859               	movf	vfpfcnvrt@fmt,w
 22640  0E51  0086               	movwf	6
 22641  0E52  0187               	clrf	7
 22642  0E53  3002               	movlw	2
 22643  0E54  0781               	addwf	1,f
 22644  0E55  3141               	addfsr 1,1
 22645  0E56  1803               	skipnc
 22646  0E57  0A81               	incf	1,f
 22647                           
 22648                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 22649  0E58  085A               	movf	vfpfcnvrt@ap,w
 22650  0E59  0086               	movwf	6
 22651  0E5A  0187               	clrf	7
 22652  0E5B  0801               	movf	1,w
 22653  0E5C  0084               	movwf	4
 22654  0E5D  0185               	clrf	5
 22655  0E5E  3002               	movlw	2
 22656  0E5F  0781               	addwf	1,f
 22657  0E60  3F00               	moviw [0]fsr0
 22658  0E61  0021               	movlb	1	; select bank1
 22659  0E62  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22660  0E63  3F01               	moviw [1]fsr0
 22661  0E64  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22662  0E65  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22663  0E66  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22664  0E67  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22665  0E68  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22666  0E69  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22667  0E6A  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22668                           
 22669                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1269:      
      +                                 return xtoa(fp, llu, c);
 22670  0E6B  0020               	movlb	0	; select bank0
 22671  0E6C  0858               	movf	vfpfcnvrt@fp+1,w
 22672  0E6D  00B1               	movwf	xtoa@fp+1
 22673  0E6E  0857               	movf	vfpfcnvrt@fp,w
 22674  0E6F  00B0               	movwf	xtoa@fp
 22675  0E70  0021               	movlb	1	; select bank1
 22676  0E71  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22677  0E72  0020               	movlb	0	; select bank0
 22678  0E73  00B2               	movwf	xtoa@d
 22679  0E74  0021               	movlb	1	; select bank1
 22680  0E75  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22681  0E76  0020               	movlb	0	; select bank0
 22682  0E77  00B3               	movwf	xtoa@d+1
 22683  0E78  0021               	movlb	1	; select bank1
 22684  0E79  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22685  0E7A  0020               	movlb	0	; select bank0
 22686  0E7B  00B4               	movwf	xtoa@d+2
 22687  0E7C  0021               	movlb	1	; select bank1
 22688  0E7D  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22689  0E7E  0020               	movlb	0	; select bank0
 22690  0E7F  00B5               	movwf	xtoa@d+3
 22691  0E80  0021               	movlb	1	; select bank1
 22692  0E81  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22693  0E82  0020               	movlb	0	; select bank0
 22694  0E83  00B6               	movwf	xtoa@d+4
 22695  0E84  0021               	movlb	1	; select bank1
 22696  0E85  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22697  0E86  0020               	movlb	0	; select bank0
 22698  0E87  00B7               	movwf	xtoa@d+5
 22699  0E88  0021               	movlb	1	; select bank1
 22700  0E89  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22701  0E8A  0020               	movlb	0	; select bank0
 22702  0E8B  00B8               	movwf	xtoa@d+6
 22703  0E8C  0021               	movlb	1	; select bank1
 22704  0E8D  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22705  0E8E  0020               	movlb	0	; select bank0
 22706  0E8F  00B9               	movwf	xtoa@d+7
 22707  0E90  0021               	movlb	1	; select bank1
 22708  0E91  0832               	movf	vfpfcnvrt@c^(0+128),w
 22709  0E92  0020               	movlb	0	; select bank0
 22710  0E93  00DB               	movwf	??_vfpfcnvrt
 22711  0E94  085B               	movf	??_vfpfcnvrt,w
 22712  0E95  00BA               	movwf	xtoa@x
 22713  0E96  3199  21FA         	fcall	_xtoa
 22714  0E98  0020               	movlb	0	; select bank0
 22715  0E99  0831               	movf	?_xtoa+1,w
 22716  0E9A  00D8               	movwf	?_vfpfcnvrt+1
 22717  0E9B  0830               	movf	?_xtoa,w
 22718  0E9C  00D7               	movwf	?_vfpfcnvrt
 22719  0E9D  0008               	return
 22720  0E9E                     l7134:	
 22721                           
 22722                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 22723  0E9E  0020               	movlb	0	; select bank0
 22724  0E9F  0859               	movf	vfpfcnvrt@fmt,w
 22725  0EA0  0086               	movwf	6
 22726  0EA1  0187               	clrf	7
 22727  0EA2  3F40               	moviw [0]fsr1
 22728  0EA3  00DB               	movwf	??_vfpfcnvrt
 22729  0EA4  3F41               	moviw [1]fsr1
 22730  0EA5  00DC               	movwf	??_vfpfcnvrt+1
 22731  0EA6  085B               	movf	??_vfpfcnvrt,w
 22732  0EA7  0084               	movwf	4
 22733  0EA8  085C               	movf	??_vfpfcnvrt+1,w
 22734  0EA9  0085               	movwf	5
 22735  0EAA  0012               	moviw fsr0++
 22736  0EAB  3A78               	xorlw	120
 22737  0EAC  1903               	btfsc	3,2
 22738  0EAD  2EBD               	goto	l7138
 22739  0EAE  0859               	movf	vfpfcnvrt@fmt,w
 22740  0EAF  0086               	movwf	6
 22741  0EB0  0187               	clrf	7
 22742  0EB1  3F40               	moviw [0]fsr1
 22743  0EB2  00DB               	movwf	??_vfpfcnvrt
 22744  0EB3  3F41               	moviw [1]fsr1
 22745  0EB4  00DC               	movwf	??_vfpfcnvrt+1
 22746  0EB5  085B               	movf	??_vfpfcnvrt,w
 22747  0EB6  0084               	movwf	4
 22748  0EB7  085C               	movf	??_vfpfcnvrt+1,w
 22749  0EB8  0085               	movwf	5
 22750  0EB9  0012               	moviw fsr0++
 22751  0EBA  3A58               	xorlw	88
 22752  0EBB  1D03               	btfss	3,2
 22753  0EBC  2F1C               	goto	l7148
 22754  0EBD                     l7138:	
 22755                           
 22756                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 22757  0EBD  0859               	movf	vfpfcnvrt@fmt,w
 22758  0EBE  0086               	movwf	6
 22759  0EBF  0187               	clrf	7
 22760  0EC0  3F40               	moviw [0]fsr1
 22761  0EC1  00DB               	movwf	??_vfpfcnvrt
 22762  0EC2  3F41               	moviw [1]fsr1
 22763  0EC3  00DC               	movwf	??_vfpfcnvrt+1
 22764  0EC4  085B               	movf	??_vfpfcnvrt,w
 22765  0EC5  0084               	movwf	4
 22766  0EC6  085C               	movf	??_vfpfcnvrt+1,w
 22767  0EC7  0085               	movwf	5
 22768  0EC8  0800               	movf	0,w	;code access
 22769  0EC9  00DD               	movwf	??_vfpfcnvrt+2
 22770  0ECA  085D               	movf	??_vfpfcnvrt+2,w
 22771  0ECB  0021               	movlb	1	; select bank1
 22772  0ECC  00B2               	movwf	vfpfcnvrt@c^(0+128)
 22773                           
 22774                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 22775  0ECD  0020               	movlb	0	; select bank0
 22776  0ECE  0859               	movf	vfpfcnvrt@fmt,w
 22777  0ECF  0086               	movwf	6
 22778  0ED0  0187               	clrf	7
 22779  0ED1  3001               	movlw	1
 22780  0ED2  0781               	addwf	1,f
 22781  0ED3  3141               	addfsr 1,1
 22782  0ED4  1803               	skipnc
 22783  0ED5  0A81               	incf	1,f
 22784                           
 22785                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 22786  0ED6  085A               	movf	vfpfcnvrt@ap,w
 22787  0ED7  0086               	movwf	6
 22788  0ED8  0187               	clrf	7
 22789  0ED9  0801               	movf	1,w
 22790  0EDA  0084               	movwf	4
 22791  0EDB  0185               	clrf	5
 22792  0EDC  3002               	movlw	2
 22793  0EDD  0781               	addwf	1,f
 22794  0EDE  3F00               	moviw [0]fsr0
 22795  0EDF  0021               	movlb	1	; select bank1
 22796  0EE0  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22797  0EE1  3F01               	moviw [1]fsr0
 22798  0EE2  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22799  0EE3  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22800  0EE4  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22801  0EE5  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22802  0EE6  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22803  0EE7  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22804  0EE8  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22805                           
 22806                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 22807  0EE9  0020               	movlb	0	; select bank0
 22808  0EEA  0858               	movf	vfpfcnvrt@fp+1,w
 22809  0EEB  00B1               	movwf	xtoa@fp+1
 22810  0EEC  0857               	movf	vfpfcnvrt@fp,w
 22811  0EED  00B0               	movwf	xtoa@fp
 22812  0EEE  0021               	movlb	1	; select bank1
 22813  0EEF  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22814  0EF0  0020               	movlb	0	; select bank0
 22815  0EF1  00B2               	movwf	xtoa@d
 22816  0EF2  0021               	movlb	1	; select bank1
 22817  0EF3  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22818  0EF4  0020               	movlb	0	; select bank0
 22819  0EF5  00B3               	movwf	xtoa@d+1
 22820  0EF6  0021               	movlb	1	; select bank1
 22821  0EF7  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22822  0EF8  0020               	movlb	0	; select bank0
 22823  0EF9  00B4               	movwf	xtoa@d+2
 22824  0EFA  0021               	movlb	1	; select bank1
 22825  0EFB  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22826  0EFC  0020               	movlb	0	; select bank0
 22827  0EFD  00B5               	movwf	xtoa@d+3
 22828  0EFE  0021               	movlb	1	; select bank1
 22829  0EFF  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22830  0F00  0020               	movlb	0	; select bank0
 22831  0F01  00B6               	movwf	xtoa@d+4
 22832  0F02  0021               	movlb	1	; select bank1
 22833  0F03  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22834  0F04  0020               	movlb	0	; select bank0
 22835  0F05  00B7               	movwf	xtoa@d+5
 22836  0F06  0021               	movlb	1	; select bank1
 22837  0F07  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22838  0F08  0020               	movlb	0	; select bank0
 22839  0F09  00B8               	movwf	xtoa@d+6
 22840  0F0A  0021               	movlb	1	; select bank1
 22841  0F0B  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22842  0F0C  0020               	movlb	0	; select bank0
 22843  0F0D  00B9               	movwf	xtoa@d+7
 22844  0F0E  0021               	movlb	1	; select bank1
 22845  0F0F  0832               	movf	vfpfcnvrt@c^(0+128),w
 22846  0F10  0020               	movlb	0	; select bank0
 22847  0F11  00DB               	movwf	??_vfpfcnvrt
 22848  0F12  085B               	movf	??_vfpfcnvrt,w
 22849  0F13  00BA               	movwf	xtoa@x
 22850  0F14  3199  21FA         	fcall	_xtoa
 22851  0F16  0020               	movlb	0	; select bank0
 22852  0F17  0831               	movf	?_xtoa+1,w
 22853  0F18  00D8               	movwf	?_vfpfcnvrt+1
 22854  0F19  0830               	movf	?_xtoa,w
 22855  0F1A  00D7               	movwf	?_vfpfcnvrt
 22856  0F1B  0008               	return
 22857  0F1C                     l7148:	
 22858                           
 22859                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
 22860  0F1C  0859               	movf	vfpfcnvrt@fmt,w
 22861  0F1D  0086               	movwf	6
 22862  0F1E  0187               	clrf	7
 22863  0F1F  3F40               	moviw [0]fsr1
 22864  0F20  00F1               	movwf	strncmp@_l
 22865  0F21  3F41               	moviw [1]fsr1
 22866  0F22  00F2               	movwf	strncmp@_l+1
 22867  0F23  305E               	movlw	low (STR_115| (0+32768))
 22868  0F24  00F3               	movwf	strncmp@_r
 22869  0F25  30BA               	movlw	high (STR_115| (0+32768))
 22870  0F26  00F4               	movwf	strncmp@_r+1
 22871  0F27  3002               	movlw	2
 22872  0F28  00F5               	movwf	strncmp@n
 22873  0F29  3000               	movlw	0
 22874  0F2A  00F6               	movwf	strncmp@n+1
 22875  0F2B  31B7  27AE  3188   	fcall	_strncmp
 22876  0F2E  0871               	movf	?_strncmp,w
 22877  0F2F  0472               	iorwf	?_strncmp+1,w
 22878  0F30  1903               	btfsc	3,2
 22879  0F31  2F49               	goto	l7152
 22880  0F32  0020               	movlb	0	; select bank0
 22881  0F33  0859               	movf	vfpfcnvrt@fmt,w
 22882  0F34  0086               	movwf	6
 22883  0F35  0187               	clrf	7
 22884  0F36  3F40               	moviw [0]fsr1
 22885  0F37  00F1               	movwf	strncmp@_l
 22886  0F38  3F41               	moviw [1]fsr1
 22887  0F39  00F2               	movwf	strncmp@_l+1
 22888  0F3A  304C               	movlw	low (STR_119| (0+32768))
 22889  0F3B  00F3               	movwf	strncmp@_r
 22890  0F3C  30BA               	movlw	high (STR_119| (0+32768))
 22891  0F3D  00F4               	movwf	strncmp@_r+1
 22892  0F3E  3002               	movlw	2
 22893  0F3F  00F5               	movwf	strncmp@n
 22894  0F40  3000               	movlw	0
 22895  0F41  00F6               	movwf	strncmp@n+1
 22896  0F42  31B7  27AE  3188   	fcall	_strncmp
 22897  0F45  0871               	movf	?_strncmp,w
 22898  0F46  0472               	iorwf	?_strncmp+1,w
 22899  0F47  1D03               	btfss	3,2
 22900  0F48  2FAC               	goto	l7162
 22901  0F49                     l7152:	
 22902                           
 22903                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
 22904  0F49  0020               	movlb	0	; select bank0
 22905  0F4A  0859               	movf	vfpfcnvrt@fmt,w
 22906  0F4B  0086               	movwf	6
 22907  0F4C  0187               	clrf	7
 22908  0F4D  3F40               	moviw [0]fsr1
 22909  0F4E  00DB               	movwf	??_vfpfcnvrt
 22910  0F4F  3F41               	moviw [1]fsr1
 22911  0F50  00DC               	movwf	??_vfpfcnvrt+1
 22912  0F51  3001               	movlw	1
 22913  0F52  075B               	addwf	??_vfpfcnvrt,w
 22914  0F53  0084               	movwf	4
 22915  0F54  085C               	movf	??_vfpfcnvrt+1,w
 22916  0F55  1803               	skipnc
 22917  0F56  0A5C               	incf	??_vfpfcnvrt+1,w
 22918  0F57  0085               	movwf	5
 22919  0F58  0800               	movf	0,w	;code access
 22920  0F59  00DD               	movwf	??_vfpfcnvrt+2
 22921  0F5A  085D               	movf	??_vfpfcnvrt+2,w
 22922  0F5B  0021               	movlb	1	; select bank1
 22923  0F5C  00B2               	movwf	vfpfcnvrt@c^(0+128)
 22924                           
 22925                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
 22926  0F5D  0020               	movlb	0	; select bank0
 22927  0F5E  0859               	movf	vfpfcnvrt@fmt,w
 22928  0F5F  0086               	movwf	6
 22929  0F60  0187               	clrf	7
 22930  0F61  3002               	movlw	2
 22931  0F62  0781               	addwf	1,f
 22932  0F63  3141               	addfsr 1,1
 22933  0F64  1803               	skipnc
 22934  0F65  0A81               	incf	1,f
 22935                           
 22936                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 22937  0F66  085A               	movf	vfpfcnvrt@ap,w
 22938  0F67  0086               	movwf	6
 22939  0F68  0187               	clrf	7
 22940  0F69  0801               	movf	1,w
 22941  0F6A  0084               	movwf	4
 22942  0F6B  0185               	clrf	5
 22943  0F6C  3002               	movlw	2
 22944  0F6D  0781               	addwf	1,f
 22945  0F6E  3F00               	moviw [0]fsr0
 22946  0F6F  0021               	movlb	1	; select bank1
 22947  0F70  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22948  0F71  3F01               	moviw [1]fsr0
 22949  0F72  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22950  0F73  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22951  0F74  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22952  0F75  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22953  0F76  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22954  0F77  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22955  0F78  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22956                           
 22957                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1344:      
      +                                 return xtoa(fp, llu, c);
 22958  0F79  0020               	movlb	0	; select bank0
 22959  0F7A  0858               	movf	vfpfcnvrt@fp+1,w
 22960  0F7B  00B1               	movwf	xtoa@fp+1
 22961  0F7C  0857               	movf	vfpfcnvrt@fp,w
 22962  0F7D  00B0               	movwf	xtoa@fp
 22963  0F7E  0021               	movlb	1	; select bank1
 22964  0F7F  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22965  0F80  0020               	movlb	0	; select bank0
 22966  0F81  00B2               	movwf	xtoa@d
 22967  0F82  0021               	movlb	1	; select bank1
 22968  0F83  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22969  0F84  0020               	movlb	0	; select bank0
 22970  0F85  00B3               	movwf	xtoa@d+1
 22971  0F86  0021               	movlb	1	; select bank1
 22972  0F87  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22973  0F88  0020               	movlb	0	; select bank0
 22974  0F89  00B4               	movwf	xtoa@d+2
 22975  0F8A  0021               	movlb	1	; select bank1
 22976  0F8B  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22977  0F8C  0020               	movlb	0	; select bank0
 22978  0F8D  00B5               	movwf	xtoa@d+3
 22979  0F8E  0021               	movlb	1	; select bank1
 22980  0F8F  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22981  0F90  0020               	movlb	0	; select bank0
 22982  0F91  00B6               	movwf	xtoa@d+4
 22983  0F92  0021               	movlb	1	; select bank1
 22984  0F93  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22985  0F94  0020               	movlb	0	; select bank0
 22986  0F95  00B7               	movwf	xtoa@d+5
 22987  0F96  0021               	movlb	1	; select bank1
 22988  0F97  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22989  0F98  0020               	movlb	0	; select bank0
 22990  0F99  00B8               	movwf	xtoa@d+6
 22991  0F9A  0021               	movlb	1	; select bank1
 22992  0F9B  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22993  0F9C  0020               	movlb	0	; select bank0
 22994  0F9D  00B9               	movwf	xtoa@d+7
 22995  0F9E  0021               	movlb	1	; select bank1
 22996  0F9F  0832               	movf	vfpfcnvrt@c^(0+128),w
 22997  0FA0  0020               	movlb	0	; select bank0
 22998  0FA1  00DB               	movwf	??_vfpfcnvrt
 22999  0FA2  085B               	movf	??_vfpfcnvrt,w
 23000  0FA3  00BA               	movwf	xtoa@x
 23001  0FA4  3199  21FA         	fcall	_xtoa
 23002  0FA6  0020               	movlb	0	; select bank0
 23003  0FA7  0831               	movf	?_xtoa+1,w
 23004  0FA8  00D8               	movwf	?_vfpfcnvrt+1
 23005  0FA9  0830               	movf	?_xtoa,w
 23006  0FAA  00D7               	movwf	?_vfpfcnvrt
 23007  0FAB  0008               	return
 23008  0FAC                     l7162:	
 23009                           
 23010                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 23011  0FAC  0020               	movlb	0	; select bank0
 23012  0FAD  0859               	movf	vfpfcnvrt@fmt,w
 23013  0FAE  0086               	movwf	6
 23014  0FAF  0187               	clrf	7
 23015  0FB0  3F40               	moviw [0]fsr1
 23016  0FB1  00DB               	movwf	??_vfpfcnvrt
 23017  0FB2  3F41               	moviw [1]fsr1
 23018  0FB3  00DC               	movwf	??_vfpfcnvrt+1
 23019  0FB4  085B               	movf	??_vfpfcnvrt,w
 23020  0FB5  0084               	movwf	4
 23021  0FB6  085C               	movf	??_vfpfcnvrt+1,w
 23022  0FB7  0085               	movwf	5
 23023  0FB8  0012               	moviw fsr0++
 23024  0FB9  3A25               	xorlw	37
 23025  0FBA  1D03               	btfss	3,2
 23026  0FBB  2FD4               	goto	l7172
 23027                           
 23028                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 23029  0FBC  0859               	movf	vfpfcnvrt@fmt,w
 23030  0FBD  0086               	movwf	6
 23031  0FBE  0187               	clrf	7
 23032  0FBF  3001               	movlw	1
 23033  0FC0  0781               	addwf	1,f
 23034  0FC1  3141               	addfsr 1,1
 23035  0FC2  1803               	skipnc
 23036  0FC3  0A81               	incf	1,f
 23037                           
 23038                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 23039  0FC4  3025               	movlw	37
 23040  0FC5  00F1               	movwf	fputc@c
 23041  0FC6  3000               	movlw	0
 23042  0FC7  00F2               	movwf	fputc@c+1
 23043  0FC8  0858               	movf	vfpfcnvrt@fp+1,w
 23044  0FC9  00F4               	movwf	fputc@fp+1
 23045  0FCA  0857               	movf	vfpfcnvrt@fp,w
 23046  0FCB  00F3               	movwf	fputc@fp
 23047  0FCC  31A8  201D         	fcall	_fputc
 23048  0FCE                     l7168:	
 23049                           
 23050                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 23051  0FCE  3001               	movlw	1
 23052  0FCF  0020               	movlb	0	; select bank0
 23053  0FD0  00D7               	movwf	?_vfpfcnvrt
 23054  0FD1  3000               	movlw	0
 23055  0FD2  00D8               	movwf	?_vfpfcnvrt+1
 23056  0FD3  0008               	return
 23057  0FD4                     l7172:	
 23058                           
 23059                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 23060  0FD4  0859               	movf	vfpfcnvrt@fmt,w
 23061  0FD5  0086               	movwf	6
 23062  0FD6  0187               	clrf	7
 23063  0FD7  3001               	movlw	1
 23064  0FD8  0781               	addwf	1,f
 23065  0FD9  3141               	addfsr 1,1
 23066  0FDA  1803               	skipnc
 23067  0FDB  0A81               	incf	1,f
 23068  0FDC  2B32               	goto	l7006
 23069  0FDD                     l7178:	
 23070                           
 23071                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 23072  0FDD  0859               	movf	vfpfcnvrt@fmt,w
 23073  0FDE  0086               	movwf	6
 23074  0FDF  0187               	clrf	7
 23075  0FE0  3F40               	moviw [0]fsr1
 23076  0FE1  00DB               	movwf	??_vfpfcnvrt
 23077  0FE2  3F41               	moviw [1]fsr1
 23078  0FE3  00DC               	movwf	??_vfpfcnvrt+1
 23079  0FE4  085B               	movf	??_vfpfcnvrt,w
 23080  0FE5  0084               	movwf	4
 23081  0FE6  085C               	movf	??_vfpfcnvrt+1,w
 23082  0FE7  0085               	movwf	5
 23083  0FE8  0800               	movf	0,w	;code access
 23084  0FE9  00DD               	movwf	??_vfpfcnvrt+2
 23085  0FEA  01DE               	clrf	??_vfpfcnvrt+3
 23086  0FEB  085D               	movf	??_vfpfcnvrt+2,w
 23087  0FEC  00F1               	movwf	fputc@c
 23088  0FED  085E               	movf	??_vfpfcnvrt+3,w
 23089  0FEE  00F2               	movwf	fputc@c+1
 23090  0FEF  0858               	movf	vfpfcnvrt@fp+1,w
 23091  0FF0  00F4               	movwf	fputc@fp+1
 23092  0FF1  0857               	movf	vfpfcnvrt@fp,w
 23093  0FF2  00F3               	movwf	fputc@fp
 23094  0FF3  31A8  201D  3188   	fcall	_fputc
 23095                           
 23096                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 23097  0FF6  0020               	movlb	0	; select bank0
 23098  0FF7  0859               	movf	vfpfcnvrt@fmt,w
 23099  0FF8  0086               	movwf	6
 23100  0FF9  0187               	clrf	7
 23101  0FFA  3001               	movlw	1
 23102  0FFB  0781               	addwf	1,f
 23103  0FFC  3141               	addfsr 1,1
 23104  0FFD  1803               	skipnc
 23105  0FFE  0A81               	incf	1,f
 23106  0FFF  2FCE               	goto	l7168
 23107  1000                     __end_of_vfpfcnvrt:	


Data Sizes:
    Strings     495
    Constant    298
    Data        9
    BSS         102
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     80      80
    BANK1            80     79      80
    BANK2            80     69      79
    BANK3            80      2      69
    BANK4            80      0      32
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           65      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    vsnprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_23(CODE[18]), STR_22(CODE[18]), STR_21(CODE[19]), STR_20(CODE[20]), 
		 -> STR_19(CODE[20]), STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[22]), STR_14(CODE[22]), STR_13(CODE[21]), STR_12(CODE[21]), 
		 -> STR_9(CODE[15]), STR_8(CODE[23]), STR_7(CODE[15]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_3(CODE[22]), STR_2(CODE[71]), 
		 -> STR_1(CODE[40]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_121(CODE[3]), STR_117(CODE[3]), STR_112(CODE[3]), STR_108(CODE[3]), 
		 -> STR_103(CODE[4]), STR_99(CODE[4]), STR_94(CODE[3]), STR_89(CODE[3]), 
		 -> STR_84(CODE[4]), STR_79(CODE[3]), STR_74(CODE[3]), STR_69(CODE[4]), 
		 -> STR_64(CODE[3]), STR_59(CODE[3]), STR_54(CODE[4]), STR_49(CODE[3]), 
		 -> STR_45(CODE[3]), STR_40(CODE[3]), STR_36(CODE[3]), STR_31(CODE[4]), 
		 -> STR_27(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_121(CODE[3]), STR_117(CODE[3]), STR_112(CODE[3]), STR_108(CODE[3]), 
		 -> STR_103(CODE[4]), STR_99(CODE[4]), STR_94(CODE[3]), STR_89(CODE[3]), 
		 -> STR_84(CODE[4]), STR_79(CODE[3]), STR_74(CODE[3]), STR_69(CODE[4]), 
		 -> STR_64(CODE[3]), STR_59(CODE[3]), STR_54(CODE[4]), STR_49(CODE[3]), 
		 -> STR_45(CODE[3]), STR_40(CODE[3]), STR_36(CODE[3]), STR_31(CODE[4]), 
		 -> STR_27(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_23(CODE[18]), STR_22(CODE[18]), STR_21(CODE[19]), STR_20(CODE[20]), 
		 -> STR_19(CODE[20]), STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[22]), STR_14(CODE[22]), STR_13(CODE[21]), STR_12(CODE[21]), 
		 -> STR_9(CODE[15]), STR_8(CODE[23]), STR_7(CODE[15]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_3(CODE[22]), STR_2(CODE[71]), 
		 -> STR_1(CODE[40]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_23(CODE[18]), STR_22(CODE[18]), STR_21(CODE[19]), STR_20(CODE[20]), 
		 -> STR_19(CODE[20]), STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[22]), STR_14(CODE[22]), STR_13(CODE[21]), STR_12(CODE[21]), 
		 -> STR_9(CODE[15]), STR_8(CODE[23]), STR_7(CODE[15]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_3(CODE[22]), STR_2(CODE[71]), 
		 -> STR_1(CODE[40]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK4[32]), sp__logf(UNKNOWN), 
		 -> adcGain(BANK2[2]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK4[32]), sp__logf(UNKNOWN), 
		 -> adcGain(BANK2[2]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_23(CODE[18]), STR_22(CODE[18]), STR_21(CODE[19]), STR_20(CODE[20]), 
		 -> STR_19(CODE[20]), STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[22]), STR_14(CODE[22]), STR_13(CODE[21]), STR_12(CODE[21]), 
		 -> STR_9(CODE[15]), STR_8(CODE[23]), STR_7(CODE[15]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_3(CODE[22]), STR_2(CODE[71]), 
		 -> STR_1(CODE[40]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    snprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_snprintf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    S1725_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_23(CODE[18]), STR_22(CODE[18]), STR_21(CODE[19]), STR_20(CODE[20]), 
		 -> STR_19(CODE[20]), STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[22]), STR_14(CODE[22]), STR_13(CODE[21]), STR_12(CODE[21]), 
		 -> STR_9(CODE[15]), STR_8(CODE[23]), STR_7(CODE[15]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_3(CODE[22]), STR_2(CODE[71]), 
		 -> STR_1(CODE[40]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_23(CODE[18]), STR_22(CODE[18]), STR_21(CODE[19]), STR_20(CODE[20]), 
		 -> STR_19(CODE[20]), STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[22]), STR_14(CODE[22]), STR_13(CODE[21]), STR_12(CODE[21]), 
		 -> STR_9(CODE[15]), STR_8(CODE[23]), STR_7(CODE[15]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_3(CODE[22]), STR_2(CODE[71]), 
		 -> STR_1(CODE[40]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 71
		 -> STR_23(CODE[18]), STR_22(CODE[18]), STR_21(CODE[19]), STR_20(CODE[20]), 
		 -> STR_19(CODE[20]), STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[22]), STR_14(CODE[22]), STR_13(CODE[21]), STR_12(CODE[21]), 
		 -> STR_9(CODE[15]), STR_8(CODE[23]), STR_7(CODE[15]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_3(CODE[22]), STR_2(CODE[71]), 
		 -> STR_1(CODE[40]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 4
		 -> ?_snprintf(BANK1[2]), sp__logf(UNKNOWN), adcGain(BANK2[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 4
		 -> ?_snprintf(BANK1[2]), sp__logf(UNKNOWN), adcGain(BANK2[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 4
		 -> ?_snprintf(BANK1[2]), sp__logf(UNKNOWN), adcGain(BANK2[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), sp__logf(UNKNOWN), adcGain(BANK2[2]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    EUSART_Write_Text@text	PTR unsigned char  size(2) Largest target is 127
		 -> STR_24(CODE[3]), STR_11(CODE[3]), STR_10(CODE[38]), messageBuffer(BIGRAM[127]), 


Critical Paths under _main in COMMON

    _main->_EUSART_Initialize
    _watchdog_timeout_shutdown->_RGB_color
    _vfpfcnvrt->_stoa
    _vfpfcnvrt->_strncmp
    _toupper->_islower
    _stoa->_fputc
    _dtoa->___aodiv
    _abs->___aomod
    _pad->_fputs
    _fputs->_fputc
    _atoi->___wmul
    _atoi->_isdigit
    _EUSART_Write_Text->_EUSART_Write
    _setTemperatureLimitsint->___wmul
    _setShortCircuitProtection->_I2C_writeRegister
    _setOverCurrentDischargeProtection->_I2C_writeRegister
    _setCellUndervoltageProtection->_I2C_writeRegister
    _setCellUndervoltageProtection->_readRegister
    _setCellOvervoltageProtection->_I2C_writeRegister
    _setCellOvervoltageProtection->_readRegister
    _beginAFEcommunication->_I2C_writeRegister
    _beginAFEcommunication->_readRegister
    _RGB_AWAIT_AFE_CONN->_RGB_color
    _AFE_UPDATE->_enableCharging
    _AFE_UPDATE->_enableDischarging
    _updateVoltages->___fltol
    _updateTemperatures->___fltol
    _updateCurrent->___fltol
    ___flmul->__Umul8_16
    _enableDischarging->_I2C_writeRegister
    _enableDischarging->_readRegister
    _enableCharging->_I2C_writeRegister
    _enableCharging->_readRegister
    _readRegister->_read_I2C_data
    _readRegister->_send_I2C_controlByte
    _I2C_writeRegister->_send_I2C_controlByte
    _EUSART_Initialize->___aldiv
    ___aldiv->___lmul

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    _statemachine->_snprintf
    _printcellParameters->_snprintf
    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _utoa->___lodiv
    _utoa->___lomod
    _utoa->_pad
    _otoa->_pad
    _dtoa->___aodiv
    _dtoa->___aomod
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _init_AFE->_setOverCurrentDischargeProtection
    _init_AFE->_setShortCircuitProtection
    _setShortCircuitProtection->___flge
    _setOverCurrentDischargeProtection->___flge
    ___flge->___fldiv
    _setCellUndervoltageProtection->___aldiv
    _setCellOvervoltageProtection->___aldiv
    _updateVoltages->___fladd
    _updateTemperatures->___fladd
    _logf->___fladd
    ___flsub->___fladd
    ___fladd->___fldiv
    ___fltol->___fladd
    ___flneg->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _EUSART_Initialize->___aldiv
    ___aldiv->___lmul

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _printcellParameters->_snprintf
    _snprintf->_vsnprintf
    _vfprintf->_vfpfcnvrt
    _init_AFE->_setOverCurrentDischargeProtection
    _init_AFE->_setShortCircuitProtection
    _AFE_UPDATE->_updateTemperatures
    _updateVoltages->___fltol
    _updateTemperatures->_logf
    _logf->___flsub
    _updateCurrent->___fltol
    ___fltol->___flsub

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_statemachine
    _updateTemperatures->_logf

Critical Paths under _myIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _myIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _myIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _myIsr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _myIsr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _myIsr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _myIsr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _myIsr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _myIsr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _myIsr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _myIsr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _myIsr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _myIsr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _myIsr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  381140
                                              0 BANK3      2     2      0
                  _EUSART_Initialize
                          _initClock
                            _initWDT
                          _init_GPIO
                           _init_I2C
                           _init_RGB
                          _init_TMR1
                       _statemachine
          _watchdog_timeout_shutdown
 ---------------------------------------------------------------------------------
 (1) _watchdog_timeout_shutdown                            2     2      0     481
                                              3 COMMON     2     2      0
                          _RGB_color
 ---------------------------------------------------------------------------------
 (1) _statemachine                                         3     3      0  378281
                                             66 BANK2      3     3      0
                         _AFE_UPDATE
                  _EUSART_Write_Text
                 _RGB_AWAIT_AFE_CONN
                          _RGB_color
              _beginAFEcommunication
                           _init_AFE
                _printcellParameters
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _printcellParameters                                  0     0      0   72944
                  _EUSART_Write_Text
                       _readRegister
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _snprintf                                            34     4     30   62033
                                             76 BANK0      4     4      0
                                             44 BANK1     30     0     30
                       _readRegister (ARG)
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (3) _vsnprintf                                           19    12      7   56076
                                             74 BANK0      2     2      0
                                             27 BANK1     17    10      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             9     4      5   55039
                                             65 BANK0      9     4      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           46    42      4   54264
                                             55 BANK0     10     6      4
                                              0 BANK1     27    27      0
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                39    28     11    8411
                                             16 BANK0     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              8     6      2     512
                                              7 COMMON     4     2      2
                                              0 BANK0      4     4      0
                            _islower
 ---------------------------------------------------------------------------------
 (8) _islower                                              6     4      2     191
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     191
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              8     6      2     191
                                              1 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (6) _utoa                                                25    15     10    7272
                                             16 BANK0     25    15     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lomod                                             18     2     16     412
                                              1 COMMON     2     2      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___lodiv                                             26    10     16     421
                                              1 COMMON    10    10      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6    5995
                                              1 COMMON    11     5      6
 ---------------------------------------------------------------------------------
 (6) _stoa                                                23    19      4    2652
                                             10 COMMON     2     2      0
                                              0 BANK0     21    17      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _otoa                                                34    24     10    6544
                                             16 BANK0     34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                31    21     10    8126
                                             16 BANK0     31    21     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                              4 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             19     3     16     613
                                              1 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             27    11     16     625
                                              1 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 8     5      3    5656
                                             16 BANK0      6     3      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 10     5      5    5396
                                              6 BANK0     10     5      5
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     242
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                8     6      2    1969
                                             10 COMMON     2     0      2
                                              0 BANK0      6     6      0
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1577
                                              1 COMMON     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    2319
                                              7 COMMON     2     0      2
                                              0 BANK0     13    13      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              5     3      2     259
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     371
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write_Text                                    5     3      2    2321
                                              2 COMMON     5     3      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _init_AFE                                             0     0      0   75706
       _setCellOvervoltageProtection
      _setCellUndervoltageProtection
  _setOverCurrentDischargeProtection
          _setShortCircuitProtection
              _setShuntResistorValue
            _setTemperatureLimitsint
 ---------------------------------------------------------------------------------
 (3) _setTemperatureLimitsint                              8     0      8    1520
                                              0 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    1036
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _setShuntResistorValue                                4     0      4     121
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) _setShortCircuitProtection                           21    15      6   19764
                                             70 BANK0      9     3      6
                                              0 BANK1     12    12      0
                  _I2C_writeRegister
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _setOverCurrentDischargeProtection                   21    15      6   19764
                                             70 BANK0      9     3      6
                                              0 BANK1     12    12      0
                  _I2C_writeRegister
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8     626
                                             58 BANK0     12     4      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _setCellUndervoltageProtection                       21    17      4   17270
                                             18 BANK0     21    17      4
                  _I2C_writeRegister
                            ___aldiv
                             ___lmul
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _setCellOvervoltageProtection                        21    17      4   17267
                                             18 BANK0     21    17      4
                  _I2C_writeRegister
                            ___aldiv
                             ___lmul
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _beginAFEcommunication                               15    13      2   13502
                                              0 BANK0     15    13      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _RGB_AWAIT_AFE_CONN                                   1     1      0     481
                                              3 COMMON     1     1      0
                          _RGB_color
 ---------------------------------------------------------------------------------
 (2) _RGB_color                                            2     0      2     481
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _AFE_UPDATE                                           0     0      0  150779
                     _enableCharging
                  _enableDischarging
                      _updateCurrent
                 _updateTemperatures
                     _updateVoltages
 ---------------------------------------------------------------------------------
 (3) _updateVoltages                                      11    11      0   32513
                                             17 BANK1     11    11      0
                            ___aldiv
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                             ___lmul
                           ___xxtofl
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8    1396
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _updateTemperatures                                  59    59      0   62842
                                             20 BANK1     59    59      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                               _logf
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) _logf                                                78    74      4   27318
                                              8 BANK1     12     8      4
                                              0 BANK2     66    66      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    6067
                                              0 BANK1      8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    5462
                                             58 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _updateCurrent                                        6     6      0   28320
                                             17 BANK1      6     6      0
                  _I2C_writeRegister
                            ___fldiv
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    2096
                                              1 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             11     7      4     967
                                             10 COMMON     2     2      0
                                              8 BANK1      9     5      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     155
                                             58 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    8033
                                              6 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     980
                                              1 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             26    18      8    3663
                                             32 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _enableDischarging                                    5     3      2   13552
                                             11 COMMON     1     1      0
                                              0 BANK0      4     2      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _enableCharging                                       5     3      2   13552
                                             11 COMMON     1     1      0
                                              0 BANK0      4     2      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _readRegister                                         6     2      4    8590
                                              5 COMMON     6     2      4
                      _read_I2C_data
                      _send_I2C_NACK
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (4) _send_I2C_NACK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _read_I2C_data                                        4     2      2       0
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (4) _I2C_writeRegister                                    6     0      6    4776
                                              5 COMMON     6     0      6
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (4) _send_I2C_stopBit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _send_I2C_startBit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _send_I2C_data                                        2     0      2     301
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _send_I2C_controlByte                                 4     0      4     602
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _init_TMR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_RGB                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_I2C                                             1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_GPIO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initWDT                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initClock                                            0     0      0       0
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Initialize                                   18    14      4    2378
                                             10 COMMON     2     2      0
                                             18 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8    2065
                                              9 COMMON     1     1      0
                                              4 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _myIsr                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Initialize
     ___aldiv
       ___lmul (ARG)
   _initClock
     _internal_16
   _initWDT
   _init_GPIO
   _init_I2C
   _init_RGB
   _init_TMR1
   _statemachine
     _AFE_UPDATE
       _enableCharging
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _enableDischarging
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _updateCurrent
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___flneg
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _updateTemperatures
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _logf
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___xxtofl (ARG)
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _updateVoltages
         ___aldiv
           ___lmul (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___lmul
         ___xxtofl
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
     _EUSART_Write_Text
       _EUSART_Write
     _RGB_AWAIT_AFE_CONN
       _RGB_color
     _RGB_color
     _beginAFEcommunication
       _I2C_writeRegister
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _readRegister
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
     _init_AFE
       _setCellOvervoltageProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _setCellUndervoltageProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _setOverCurrentDischargeProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
       _setShortCircuitProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
       _setShuntResistorValue
       _setTemperatureLimitsint
         ___wmul
     _printcellParameters
       _EUSART_Write_Text
         _EUSART_Write
       _readRegister
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _snprintf
         _readRegister (ARG)
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         _vsnprintf (ARG)
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _fputc
                 _putch
               _isdigit
               _otoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _stoa
                 _fputc
                   _putch
                 _strlen
               _strncmp
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _toupper
                   _islower
     _snprintf
       _readRegister (ARG)
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _vsnprintf (ARG)
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
   _watchdog_timeout_shutdown
     _RGB_color

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4F      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     45      4F       9       98.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      2      45      11       86.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      20      13       40.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     161      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     161      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              41      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Mar 12 15:19:05 2020

          __end_of_setShortCircuitProtection 2800                               _maxCellVoltage 01C8  
                      __end_of_send_I2C_data 3380                                 ___fldiv@aexp 0059  
                               ___fldiv@bexp 0058                               _updateVoltages 124F  
                               ___fldiv@sign 0051                                  __CFG_CP$OFF 0000  
                        ___wmul@multiplicand 0073                        _setShuntResistorValue 33A6  
                        __Umul8_16@word_mpld 0077                                          l300 3362  
                                        l312 336A                                          l324 3385  
                                        l350 3557                                          l247 0801  
                    enableDischarging@enable 0020                                          l168 29B7  
                                        l282 337C                                          l346 3538  
                                        l348 353D                                          l349 3542  
                                        l294 3398                                          l710 2EA8  
                                        l455 2D9C                                          l288 33DB  
                                        l650 3793                                          l731 2236  
                                        l662 18EC                                          l742 1A01  
                                        l647 3773                                          l671 19B8  
                                        l663 18F3                                          l719 2F03  
                                        l727 221B                                          l920 2B3E  
                                        l746 1A1C                                          l667 190E  
                                        l668 1922                                          l692 2317  
                                        l780 1E93                                          l693 23AC  
                                        l781 1E96                                          l855 3495  
                                        l767 1B1F                                          l783 1EC9  
                                        l688 22FC                                          l776 1E81  
                                        l778 1E8D                                          l955 24C7  
                                        l699 23B7                                          l779 1E90  
                                        l968 2202                                          _Lg1 3A24  
                                        _Lg2 3A20                                          _Lg3 3A1C  
                                        _Lg4 3A18                          __size_of_AFE_UPDATE 0019  
                                        _abs 3415                               RGB_color@color 0071  
                                        _pad 375D                                 __CFG_BORV$LO 0000  
                                        wreg 0009                                 __CFG_IESO$ON 0000  
                               ___flmul@aexp 0034                                 ___flmul@bexp 0039  
     setCellOvervoltageProtection@voltage_mV 0032      setCellUndervoltageProtection@voltage_mV 0032  
                               ___flmul@sign 0033                                 ___flmul@temp 003E  
                               ___flmul@prod 003A                                 _statemachine 2940  
                               __CFG_LVP$OFF 0000                                 ___fltol@exp1 007B  
                                       l1033 29D3                                         ?_abs 0074  
                                       l1212 1B9C                                         l1036 2A21  
                                       l1303 2C17                                         l1056 28BB  
                                       l1304 2C21                                         l1160 06D5  
                                       l1233 1CA3                                         l1234 1CBB  
                                       l1162 06B8                                         l1330 186F  
                                       l1236 1CC8                                         l1156 0642  
                                       l1190 07B7                                         l1264 1242  
                                       l1088 2A9F                                         l1177 0758  
                                       l1290 2BCD                                         l1098 292F  
                                       l1198 07CF                                         l1296 2C03  
                                       l1457 3528                                         l7010 0B36  
                                       l7012 0AD4                                         l6302 3402  
                                       l7110 0DAB                                         l7006 0B32  
                                       ?_pad 0026                                         l6304 340E  
                                       l6320 3771                                         l7120 0E0D  
                                       l7024 0AF4                                         l7210 061A  
                                       l6330 379F                                         l7106 0D7D  
                                       l8010 2ADF                                         l8002 2AC3  
                                       l7204 060F                                         l6316 3769  
                                       l7124 0E3B                                         l7036 0B13  
                                       l8020 2B1D                                         l7302 06F5  
                                       l8110 268E                                         l6326 3775  
                                       l6406 249A                                         l6430 2196  
                                       l6422 2189                                         l7134 0E9E  
                                       l8022 2B21                                         l8200 2E50  
                                       l7304 06F7                                         l7312 0706  
                                       l7232 063A                                         l7208 0612  
                                       l8032 3547                                         l8104 25E2  
                                       l6280 2829                                         l6408 24A6  
                                       l6432 21A5                                         l7152 0F49  
                                       l7056 0BCF                                         l8024 2B28  
                                       l8008 2AD7                                         l8202 2E58  
                                       l7330 076A                                         l7322 0750  
                                       l8122 26A0                                         l6362 348F  
                                       l8050 3475                                         l6418 2162  
                                       l7162 0FAC                                         l7138 0EBD  
                                       l7066 0C08                                         l7228 0637  
                                       l6284 2850                                         l6380 2410  
                                       l6436 21D5                                         l6524 191D  
                                       l6604 23D0                                         l6452 2A4B  
                                       l6700 1A14                                         l7172 0FD4  
                                       l7148 0F1C                                         l7076 0C66  
                                       l7510 1C0E                                         l7238 064C  
                                       l8302 2CF3                                         l8126 26C8  
                                       l6278 2825                                         l6438 21E1  
                                       l6550 19CC                                         l6518 1906  
                                       l6630 2EB9                                         l6462 2A93  
                                       l6454 2A5A                                         l6710 1A44  
                                       l7086 0CC6                                         l7520 1C2C  
                                       l7352 0789                                         l7344 077E  
                                       l8152 20F0                                         l8072 27A3  
                                       l6296 07DB                                         l6384 2437  
                                       l6560 19E4                                         l6528 194F  
                                       l6616 2E81                                         l6472 28E4  
                                       l7168 0FCE                                         l7096 0D1E  
                                       l7424 35B3                                         l7450 1B6D  
                                       l7610 1062                                         l7338 0777  
                                       l7346 0780                                         l8066 26F7  
                                       l6386 243B                                         l6538 192A  
                                       l6546 19C4                                         l6570 230F  
                                       l6634 2ECA                                         l6474 28F3  
                                       l6730 1AAC                                         l6714 1A5E  
                                       l6706 1A2C                                         l7178 0FDD  
                                       l7426 35D3                                         l8410 2964  
                                       l7516 1C27                                         l7620 1078  
                                       l7612 106A                                         l7356 078B  
                                       l7276 06C0                                         l7268 0688  
                                       l8156 2118                                         l8084 27B5  
                                       l6396 2452                                         l6556 19D7  
                                       l6652 2F18                                         l6644 2EDA  
                                       l6636 2ED7                                         l6900 1FC5  
                                       l8420 2988                                         l7542 1C60  
                                       l7534 1C32                                         l7518 1BF0  
                                       l7470 1B91                                         l7454 1B70  
                                       l7374 07C7                                         l7294 06E3  
                                       l7278 06C2                                         l7286 06D0  
                                       l8182 2FE0                                         l6398 2461  
                                       l6654 2F25                                         l6822 37EF  
                                       l6814 37E8                                         l6478 2923  
                                       l6670 2279                                         l6910 24D9  
                                       l8414 2974                                         l7536 1C49  
                                       l7456 1B78                                         l7704 122F  
                                       l7608 1060                                         l7800 00B8  
                                       l8088 27DF                                         l6488 34F2  
                                       l6496 3587                                         l6648 2F07  
                                       l6816 37C3                                         l6680 22DA  
                                       l6664 222E                                         l7570 1CC4  
                                       l7546 1C62                                         l7490 1BC7  
                                       l7474 1B94                                         l7722 2BC5  
                                       l7378 07CB                                         l8178 2FB8  
                                       l6770 1827                                         l6762 180B  
                                       l6498 3590                                         l6578 235E  
                                       l6682 2255                                         l6690 22DF  
                                       l6754 1B3D                                         l6738 1AEE  
                                       l6922 2551                                         l6914 2506  
                                       l8426 299F                                         l8450 362F  
                                       l8364 2CDB                                         l8284 36CF  
                                       l8276 3706                                         l7556 1C8B  
                                       l7484 1BBB                                         l7388 3522  
                                       l7732 2BE0                                         l7812 0178  
                                       l7820 01C1                                         l8292 356A  
                                       l6780 1850                                         l6588 2339  
                                       l8620 1EB7                                         l6836 1E83  
                                       l6852 1E9E                                         l7910 2B5F  
                                       l7902 2B4F                                         l7590 103D  
                                       l7742 2C15                                         l7734 2BF0  
                                       l8198 2E41                                         l7806 011B  
                                       l8622 1848                                         l6950 08E0  
                                       l6934 0843                                         l6926 257F  
                                       l6870 1F0E                                         l6846 1E99  
                                       l7920 2B8D                                         l7912 2B6D  
                                       l7680 11D8                                         l7672 11AA  
                                       l7592 103F                                         l7744 2C08  
                                       l7728 2BDC                                         l7832 01DB  
                                       l8624 354C                                         l6784 1873  
                                       l6776 1837                                         l6872 1F17  
                                       l6856 1ED0                                         l8392 2941  
                                       l7674 11C1                                         l7594 1047  
                                       l6794 18A2                                         l6778 183C  
                                       l6946 08B3                                         l6938 0862  
                                       l6890 1F82                                         l8618 29A9  
                                       l7924 2B98                                         l7684 11DA  
                                       l7756 2C3C                                         l6892 1F92  
                                       l6868 1EFE                                         l7694 1203  
                                       l7942 2A07                                         l6958 0929  
                                       l6894 1F9B                                         l6878 1F41  
                                       l7928 2BA6                                         l7880 35E5  
                                       l6968 0988                                         l7698 1218  
                                       l7962 287B                                         l7938 29ED  
                                       l6978 09E8                                         l7884 35F0  
                                       l6988 0A40                                         l7982 28A9  
                                       l7966 2884                                         l7798 009C  
                                       l6998 0A9F                                         l7992 28C8  
                                       l7984 28B7                                         STR_1 3849  
                               __CFG_WDTE$ON 0000                                         STR_2 3802  
                                       STR_3 38E4                                         STR_4 394E  
                                       STR_5 390F                                         STR_6 3924  
                                       STR_7 39E2                                         STR_8 38B7  
                                       STR_9 39F1                                         _BRGH 0CF2  
                                       _CREN 0CEC                                         u8000 2442  
                 enableDischarging@sys_ctrl2 007B                                         _SCS0 04C8  
                                       u8035 2487                                         _SCS1 04C9  
                                       u8300 18C3                                         u9100 1FB7  
                                       u8205 2A80                                         u9110 1FB8  
                                       u8135 21C3                                         u8170 2A3B  
                                       u9050 1F33                                         u9060 1F34  
                                       u8405 194A                                         u8245 2911  
                                       u8345 18FE                                         u8505 234D  
                                       u8290 18C2                                         u8515 2359  
                                       u7900 33F6                                         u7805 377F  
                                       u8605 2ED5                                         u7910 33F7  
                                       u8550 2E70                                         u7830 343B  
                                       u7735 284E                                         u8375 19C2  
                                       u8615 2EE4                                         u7840 343C  
                                       u7760 3452                                         u7825 341E  
                                       u8465 2307                                         u7850 2815  
                                       u7770 3453                                         u8395 193E  
                                       u8475 2390                                         u8635 2F23  
                                       u7860 2816                                         u8485 23B5  
                                       u8725 1A0C                                         u9550 06A7  
                                       u8910 1887                                         u7870 1011  
                                       u8750 1A75                                         u7935 3496  
                                       u8655 2226                                         u8815 1AD2  
                                       u9560 06A8                                         u8920 1888  
                                       u7880 1012                                         u8760 1A76  
                                       u9545 069C                                         u7945 349B  
                                       u8585 2EA1                                         u8825 1AF8  
                                       u8745 1A58                                         u9715 076B  
                                       u8780 1A95                                         u8685 2268  
                                       u8845 1B0E                                         u8790 1A96  
                                       u9815 07A2                                         u8695 2274  
                                       u8855 1B1A                                         u9673 0718  
                                       u9665 06FB                                         u9595 06C6  
                                       _TMR1 0016                                         u9895 3529  
                                       _SPEN 0CEF                                         _TXEN 0CF5  
                                       _SYNC 0CF4                  ??_watchdog_timeout_shutdown 0073  
                               __CFG_WRT$OFF 0000                                         abs@a 0074  
                                       _dbuf 0220                               ?_updateCurrent 0070  
                                       _atoi 1806                                         _ctoa 357A  
                                       _main 360E                                         _dtoa 18A7  
                                       _logf 006B                                         _prec 0167  
                                       _otoa 22F5                                         _nout 01C4  
                                       pad@i 002C                                         pad@p 0029  
                                       fsr0h 0005                                         fsr1h 0007  
                                       indf0 0000                                         fsr0l 0004  
                                       indf1 0001                                         fsr1l 0006  
                                       pad@w 002E                                         _stoa 2E66  
                                       btemp 007E                                         _utoa 2214  
                                       _xtoa 19FA                                         start 0020  
                            ___fldiv@new_exp 0052                       __end_of_updateVoltages 1527  
                   __end_of_send_I2C_stopBit 336E                            _enableDischarging 36E2  
                                      ??_abs 0076                                        ??_pad 002B  
                       _send_I2C_controlByte 3392                                ?_EUSART_Write 0070  
                         ?_enableDischarging 0020                                ___fltol@sign1 007A  
                            __end_of___aldiv 2BAF                              __end_of___aodiv 24D9  
                                      ?_atoi 0077                                        ?_ctoa 0030  
                            __end_of___fladd 07D7                                        ?_main 0070  
                                      ?_dtoa 0030                              __end_of___aomod 2214  
              I2C_writeRegister@slaveAddress 0075                                        ?_logf 00A8  
                            __end_of___fldiv 1CCD                              __end_of___flneg 33A6  
                                      STR_10 3871                                        STR_20 3977  
                                      STR_21 398B                                        STR_13 38FA  
                                      STR_22 399E                                        STR_14 38CE  
                                      STR_31 3A38                                        STR_23 39B0  
                                      STR_40 3A39                                        STR_25 3A34  
                                      STR_18 3939                                        STR_27 3A34  
                                      STR_43 3A4F                                        STR_19 3963  
                                      STR_36 3A35                                        STR_52 3A40  
                                      STR_45 3A4F                                        STR_29 3A38  
                                      STR_54 3A40                                        STR_62 3A58  
                                      STR_47 3A52                                        STR_64 3A58  
                                      STR_49 3A52                                        STR_74 3A3D  
                                      STR_82 3A44                                        STR_59 3A41  
                                      STR_67 3A3C                                        STR_84 3A44  
                                      STR_92 3A5B                                        STR_69 3A3C  
                                      STR_77 3A55                                        STR_94 3A5B  
                                      STR_79 3A55                              __end_of___flmul 124F  
                                      STR_89 3A45                                        STR_97 3A48  
                                      ?_otoa 0030                                        STR_99 3A48  
                            __end_of___flsub 3675                              __end_of___fltol 28D7  
                                      ?_stoa 0020                                        ?_utoa 0030  
                                      u10105 1C08                                        u10115 1C1C  
                                      u10145 1C35                                        u11025 28AA  
                                      u10235 1C79                                        u10075 1BF8  
                                      u10245 1C94                                        u10165 1C3E  
                                      u10085 1BFF                                        u10405 11AD  
                                      u11205 26B9                                        u11125 2B14  
                                      u10255 1CAD                                        u11055 28BF  
                                      u10505 120C                                        u10425 11B6  
                                      u11225 20CA                                        u11330 3560  
                                      u10515 1222                                        u10355 10EE  
                                      u11235 2108                              __end_of___lodiv 2AB0  
                                      u11340 3561                                        u11405 2C4F  
                                      u10365 111D                                        u10605 2C0F  
                                      u11165 27CE                                        u11350 356F  
                                      u11415 2C66                                        u10375 1173  
                                      u11255 2F99                                        ?_xtoa 0030  
                                      u11360 3570                                        u10385 118A  
                                      u11265 2FD0                                        u11435 2C9C  
                                      u10395 1199                                        u10715 00C9  
                                      u11507 34D1                                        u11445 2CB3  
                                      u10645 2C29                                        u10565 2BE9  
                                      u10805 35F8                                        u11517 2981  
                                      u11527 33D2                                        u10495 11F1  
                                      u10735 012C                                        u11375 2D09  
                                      u10585 2BFD                                        u11395 2D6F  
                                      u10855 2B62                                        u10775 01F3  
                                      u10695 00AC                                        u11497 3638  
                                      u10875 2B6E                                        u10795 35F1  
                                      u10885 2B82                                        u10895 2B8E  
                            __end_of___lomod 2940                                        u10995 288D  
                                      _IRCF0 04CB                                        _IRCF1 04CC  
                                      _IRCF2 04CD                                        _IRCF3 04CE  
                     __size_of_read_I2C_data 0010                                        i1l149 001E  
                               vfpfcnvrt@fmt 0059                                 vfpfcnvrt@llu 00B3  
                                      _SPBRG 019B                           __size_of_RGB_color 0021  
                        ___lmul@multiplicand 0075                          ??_enableDischarging 0022  
                             __CFG_FCMEN$OFF 0000                              __end_of_initWDT 1806  
                                      _flags 0169                                        _errno 01C2  
                                      _fputc 281D                              __end_of_isalpha 281D  
                                      _fputs 07D7                                        _myIsr 0004  
                            __end_of_isdigit 33FE                                        atoi@n 002B  
                                      pad@fp 0026                                        atoi@s 0077  
                                      _width 0165                                        ctoa@c 0032  
                                      _putch 0003                                        ctoa@w 0034  
                                      dtoa@d 0032                                        dtoa@i 004D  
                                      dtoa@n 0045                                        dtoa@p 003F  
                                      dtoa@s 0043                                        dtoa@w 0041  
                            __end_of_islower 345A                              __end_of_isspace 34FA  
                                      logf@R 0120                                        logf@f 015A  
                                      logf@k 013C                                        logf@s 0146  
                                      logf@u 0156                                        logf@w 014E  
                                      logf@x 00A8                                        logf@z 014A  
         __end_of_lookupTableSamsung_voltage 30B8                   _lookupTableSamsung_voltage 305C  
                             __CFG_BOREN$OFF 0000                              __end_of_isupper 3443  
                                      otoa@d 0032                                        otoa@i 0050  
                                      otoa@n 0048                                        otoa@p 0042  
                                      otoa@t 0044                                        otoa@w 0046  
                    enableCharging@sys_ctrl2 007B                                        stoa@i 002B  
                                      stoa@l 0033                                        stoa@p 0031  
                                      stoa@s 0022                                        stoa@w 002D  
                                      utoa@d 0032                                        utoa@i 0047  
                                      utoa@n 003F                                        utoa@p 003B  
                                      utoa@w 003D                                        status 0003  
                                      wtemp0 007E                                        xtoa@c 0055  
                                      xtoa@d 0032                                        xtoa@i 0053  
                                      xtoa@n 004B                                        xtoa@p 0047  
                                      xtoa@w 0049                                        xtoa@x 003A  
                          _SCD_delay_setting 3A10                              __end_of_strncmp 3800  
                            __end_of_toupper 1023                             ___lodiv@dividend 0028  
                               ?_internal_16 0070                                 _toupper$1792 0079  
                             __CFG_MCLRE$OFF 0000                    __end_of_enableDischarging 3719  
                            __initialization 0022                              ?_updateVoltages 0070  
                   updateTemperatures@adcVal 00E7        setTemperatureLimitsint@maxCharge_degC 0026  
                               __end_of_atoi 18A7                                 __end_of_ctoa 35AB  
                               __end_of_main 3640                                 __end_of_dtoa 19FA  
                               __end_of_logf 05F5                                 __end_of_otoa 23E6  
                               __end_of_stoa 2F2B                                 __end_of_utoa 22F5  
                               __end_of_xtoa 1B53                     __end_of_UV_delay_setting 3A10  
                     ?_setShuntResistorValue 0071                       beginAFEcommunication@i 002D  
                      ?_send_I2C_controlByte 0071                               ??_EUSART_Write 0071  
                  _watchdog_timeout_shutdown 34C3                               __CFG_LPBOR$OFF 0000  
                          _ATmega328_address 3800                                       ??_atoi 0020  
                                     ??_ctoa 0033                                       ??_main 01E3  
                                     ??_dtoa 003A                                       ??_logf 00AC  
                                     ??_otoa 003A                                       ??_stoa 007A  
                                     ??_utoa 003A                                       ??_xtoa 003B  
                __end_of_printcellParameters 1E5C                               __CFG_PLLEN$OFF 0000  
                           ___lodiv@quotient 0072                                ?_readRegister 0075  
                                     ?_fputc 0071                                       STR_101 3A30  
                                     ?_fputs 007A                                       STR_103 3A30  
                                     STR_112 3A31                                       STR_121 3A4C  
                                     STR_115 3A5E                                       ?_myIsr 0070  
                                     STR_108 3A49                                       STR_117 3A5E  
                                     STR_119 3A4C                               __CFG_ZCDDIS$ON 0000  
                                     ?_putch 0070                __end_of_OCD_threshold_setting 38B7  
                            ??_updateCurrent 00B1                                       _RC1REG 0199  
                  __end_of_SCD_delay_setting 3A18                                vfpfcnvrt@done 00A2  
                               ??_AFE_UPDATE 007C                                       _TX1REG 019A  
                                     _SPLLEN 04CF       setOverCurrentDischargeProtection@i_985 00AA  
                                     _SSPADD 0212                                       _TRISC6 0476  
                                     _TRISC7 0477                                       _SSPBUF 0211  
                                     u808lld 2160                                _read_I2C_data 33D7  
                           __end_of___xxtofl 2C45                                       u797lld 240E  
                             __CFG_PWRTE$OFF 0000                            __end_of_RGB_color 3558  
                               vfprintf@cfmt 0068                                       ___flge 29B8  
                                     ___lmul 35DC                                    ??___aldiv 0079  
                                  ??___aodiv 0071                               _minCellVoltage 01C6  
                                  ??___fladd 0062                                    ??___aomod 0071  
                                     ___wmul 348D                                       _ln2_hi 3A2C  
                                  ??___fldiv 0048                                       _ln2_lo 3A28  
                                  ??___flneg 007A                               __CFG_STVREN$ON 0000  
                                  ??___flmul 002E                                    ??___flsub 007A  
                                  ??___fltol 00AC                                    ??___lodiv 0071  
                           __end_of_init_I2C 33D7                                    ??___lomod 0071  
                           __end_of_init_AFE 205C                             __end_of_init_RGB 2006  
                  __end_of_ATmega328_address 3802                        _beginAFEcommunication 2CEE  
                                     pad@buf 0028                                       ctoa@fp 0030  
                                     dtoa@fp 0030                                       _strlen 33FE  
                                     logf@t1 0124                                       logf@t2 0128  
                                  ??_initWDT 0071                                       logf@dk 0142  
                                     logf@ix 015E                                       fputc@c 0071  
                                     fputs@c 0022                                       fputs@i 0023  
                                     fputs@s 0025                                    ??_isalpha 0073  
                                  ??_isdigit 0073                           __end_of_AFE_UPDATE 3473  
                         __size_of__Umul8_16 001F                                    ??_islower 0073  
                                  ??_isspace 0073                          _updateVoltages$2035 00B4  
                                     otoa@fp 0030                               ??_readRegister 0079  
                                  ??_isupper 0073                                       stoa@cp 002F  
                                     stoa@fp 0020                                       putch@c 0070  
                           __end_of_vfprintf 35DC                                       utoa@fp 0030  
            ??_setCellUndervoltageProtection 0036                             __end_of_snprintf 34C3  
                                     xtoa@fp 0030                                    ??_strncmp 0077  
                                  ??_toupper 0020                                   ___flge@ff1 005A  
                                 ___flge@ff2 005E                                 ___xxtofl@arg 0022  
                               ___xxtofl@exp 0021                                 ___xxtofl@val 0071  
                    __end_of__initialization 0067                               ?_read_I2C_data 0071  
                                 ___flneg@f1 005A                                   ___fltol@f1 00A8  
                   ?_setTemperatureLimitsint 0020                   __size_of_enableDischarging 0037  
   setTemperatureLimitsint@minDischarge_degC 0020                               __pcstackCOMMON 0070  
                     ??_send_I2C_controlByte 0075                                 __pidataBANK3 3389  
                              __end_of_fputc 2871                                __end_of_fputs 07FD  
                              __end_of_myIsr 0020                                 _cellVoltages 01A0  
                              __end_of_putch 0004                                   _batCurrent 01BA  
                         _RGB_AWAIT_AFE_CONN 3558                       updateTemperatures@vtsx 00E9  
                __size_of_updateTemperatures 02D9                                   _batVoltage 01BE  
                        ?_RGB_AWAIT_AFE_CONN 0070                      __size_of_enableCharging 0037  
                                    ??_fputc 0075                                      ??_fputs 0020  
                                    ??_myIsr 0070                                      ??_putch 0071  
          setShortCircuitProtection@delay_us 006A                                   __pbssBANK1 00EF  
                                 __pbssBANK2 0165                                   __pbssBANK3 01A0  
                                 __pbssBANK4 0220                         __end_of_EUSART_Write 0808  
                         __size_of_init_GPIO 003B                           __size_of_initClock 0003  
                         __size_of_init_TMR1 000B                          statemachine@success 0164  
                          __end_of__Umul8_16 3537                                   __pmaintext 360E  
                       ??_RGB_AWAIT_AFE_CONN 0073                         __size_of_internal_16 0009  
            setShortCircuitProtection@scaler 00A0                                      ?___flge 005A  
                          ?_send_I2C_stopBit 0070                                      ?___lmul 0071  
                                    ?___wmul 0071        setTemperatureLimitsint@minCharge_degC 0024  
                            __CFG_PPS1WAY$ON 0000                   ?_setShortCircuitProtection 0066  
                                 __pintentry 0004                       ?_beginAFEcommunication 0020  
                         ??_send_I2C_stopBit 0071                               ___lmul@product 0020  
                                    ?_strlen 0071                      _shuntResistorValue_mOhm 01B2  
                                  ?___xxtofl 0071               setShortCircuitProtection@i_976 00AA  
                         __size_of_vfpfcnvrt F1A4           __size_of_watchdog_timeout_shutdown 001B  
                                    _PPSLOCK 0E0F                       __size_of_send_I2C_NACK 0009  
                           ___lomod@dividend 0028                              ??_read_I2C_data 0073  
                     __size_of_send_I2C_data 0009                                    ?_init_I2C 0070  
                                  ?_init_AFE 0070                                    ?_init_RGB 0070  
       __end_of_setCellOvervoltageProtection 3000        __size_of_setCellOvervoltageProtection 00D5  
               _setCellOvervoltageProtection 2F2B                             ??_updateVoltages 00B1  
      __end_of_setCellUndervoltageProtection 2138       __size_of_setCellUndervoltageProtection 00DC  
              _setCellUndervoltageProtection 205C                     readRegister@recievedData 0079  
                    ??_setShuntResistorValue 0075                           __size_of_vsnprintf 007D  
                       __end_of_readRegister 36AB                                      ___aldiv 2B2D  
                                    _adcGain 016D                              __size_of___flge 007C  
                                    ___aodiv 23E6                                      ___fladd 05F5  
                                    ___aomod 2138                                      ___fldiv 1B53  
                                    ___flneg 339C                              __size_of___lmul 0032  
                                    ___flmul 1023                                      ___flsub 3640  
                                    ___fltol 2871                              __size_of___wmul 001B  
                                    ___lodiv 2A34                                      ___lomod 28D7  
                                  ?_vfprintf 0061                                    ?_snprintf 00CC  
                              _messageBuffer 2771                                      __ptext1 34C3  
                                    __ptext2 2940                                      __ptext3 1CCD  
                                    __ptext4 34A8                                      __ptext5 2AB0  
                                    __ptext6 35AB                                      __ptext7 1E5C  
                                    __ptext8 19FA                                      __ptext9 1001  
                          __end_of_init_GPIO 0843                            __end_of_initClock 0800  
                          __end_of_init_TMR1 33BB                              __size_of_strlen 0017  
                                  _T1CONbits 0018                                      _initWDT 1800  
                               __size_of_abs 0017                                 __size_of_pad 0051  
                                    _isalpha 2800                                      _isdigit 33E7  
                                 ??___xxtofl 0075                             ___aldiv@dividend 0028  
                                    _islower 3443                                      _isspace 34DE  
  __end_of_setOverCurrentDischargeProtection 26E8   __size_of_setOverCurrentDischargeProtection 0115  
        ??_setOverCurrentDischargeProtection 006C           ?_setOverCurrentDischargeProtection 0066  
          _setOverCurrentDischargeProtection 25D3                                      _isupper 342C  
                                    atoi@neg 0024                                      clrloop0 33BC  
          __end_of_watchdog_timeout_shutdown 34DE                                      _strncmp 37AE  
                                    _toupper 1001                         end_of_initialization 0067  
                                 ??_init_I2C 0071                                   ??_init_AFE 007B  
                                 ??_init_RGB 0071                                      fputc@fp 0073  
                                    fputs@fp 007A                ?_setCellOvervoltageProtection 0032  
                          _EUSART_Initialize 2C45                           ?_EUSART_Initialize 0032  
                          __end_of_vfpfcnvrt 1000                                _send_I2C_NACK 3380  
                           ___aldiv@quotient 002E                   send_I2C_controlByte@RW_bit 0073  
                                    psplit$0 46008F                                      psplit$1 8F0090  
                              _send_I2C_data 3377                                    _RGB_color 3537  
                                 ??_vfprintf 0066                           EUSART_Initialize@x 007A  
                                 ??_snprintf 006C                                      strlen@a 0073  
                                    strlen@s 0071                          ??_EUSART_Initialize 0036  
                                ___fladd@grs 006D                             __CFG_FOSC$INTOSC 0000  
                              ___xxtofl@sign 0020                                    _TRISAbits 008C  
                                  _TRISBbits 008D                                    _TRISCbits 008E  
                                  _TRISEbits 0090                        __size_of_EUSART_Write 0008  
                             _enableCharging 36AB                            __end_of_vsnprintf 2B2D  
                                ___fldiv@grs 0054                                  ___fldiv@rem 004D  
               __size_of_printcellParameters 018F                __end_of_SCD_threshold_setting 39E2  
                                  _RXPPSbits 0E24                            _I2C_writeRegister 34FA  
                                ___flmul@grs 0035                       _lookupTableSamsung_SOC 3000  
                  __end_of_EUSART_Initialize 2CEE                        __end_of_updateCurrent 2E66  
                      _OCD_threshold_setting 3897                           ?_I2C_writeRegister 0075  
           beginAFEcommunication@commSuccess 002B                               ?_send_I2C_NACK 0070  
                   readRegister@slaveAddress 0075               ?_setCellUndervoltageProtection 0032  
                             ?_send_I2C_data 0071                          ??_I2C_writeRegister 007B  
                                 ?_RGB_color 0071                               __end_of___flge 2A34  
                             __end_of___lmul 360E                                  vfpfcnvrt@ap 005A  
                                vfpfcnvrt@cp 00A0                                  vfpfcnvrt@fp 0057  
                                vfpfcnvrt@ll 00A8                               __end_of___wmul 34A8  
                                vfpfcnvrt@vp 00B0                               __end_of_ln2_hi 3A30  
                             __end_of_ln2_lo 3A2C                                 _EUSART_Write 0800  
                I2C_writeRegister@regAddress 0077                setShuntResistorValue@res_mOhm 0071  
                     __end_of_enableCharging 36E2             __size_of_setTemperatureLimitsint 0044  
                             __end_of_strlen 3415                          start_initialization 0022  
                            ___lodiv@divisor 0020                              ___lodiv@counter 007A  
                        _thermistorBetaValue 01E1                                  __end_of_Lg1 3A28  
                                __end_of_Lg2 3A24                                  __end_of_Lg3 3A20  
                                __end_of_Lg4 3A1C                                ?_statemachine 0070  
                                __end_of_abs 342C                                  __end_of_pad 37AE  
                          _minCellTempCharge 01D0                setCellOvervoltageProtection@i 0045  
                       _maxCellTempDischarge 01CA                         updateVoltages@adcVal 00B8  
                       _minCellTempDischarge 01CE                            pnum$text7_split_1 008F  
                          pnum$text7_split_2 0090                    __end_of_I2C_writeRegister 3518  
     _setOverCurrentDischargeProtection$2034 00A4          setCellOvervoltageProtection@delay_s 0034  
       setCellUndervoltageProtection@delay_s 0034                            _EUSART_Write_Text 3473  
                      __size_of_readRegister 0036                           ?_EUSART_Write_Text 0072  
                    ??_beginAFEcommunication 0022                                  vfprintf@fmt 0063  
                                   ??___flge 0062                                     ??___lmul 0079  
                                   ??___wmul 0075               ??_setCellOvervoltageProtection 0036  
        setCellOvervoltageProtection@ov_trip 0044                                    __Umul8_16 3518  
                ??_setShortCircuitProtection 006C                                  __pdataBANK3 01DA  
                        ??_EUSART_Write_Text 0074                __size_of_send_I2C_controlByte 000A  
       setCellUndervoltageProtection@uv_trip 0044                   __end_of_updateTemperatures 1800  
                                   ??_strlen 0073                                    ___fladd@a 005E  
                                  ___fladd@b 005A                                 vsnprintf@cnt 00C4  
                               vsnprintf@fmt 00BF                                    ___fldiv@a 0040  
                                  ___fldiv@b 0044                                  __pbssBIGRAM 2771  
                            ?_enableCharging 0020                         enableCharging@enable 0020  
                                  _adcOffset 016B                                    ___flmul@a 002A  
                                  ___flmul@b 0026                                  __pbssCOMMON 007C  
                                  ___flsub@a 00A0                                    ___flsub@b 00A4  
                             ??_statemachine 0162                                    ___latbits 0003  
           send_I2C_controlByte@BlockAddress 0071                                   myIsr@count 01D5  
                              __pcstackBANK0 0020                                __pcstackBANK1 00A0  
                              __pcstackBANK2 0120                                __pcstackBANK3 01E3  
                           ___aodiv@dividend 0028                    __size_of_send_I2C_stopBit 0008  
                                snprintf@fmt 00D0                            __size_of___xxtofl 0096  
                               _readRegister 3675     setTemperatureLimitsint@maxDischarge_degC 0022  
                      updateTemperatures@tmp 00E3                        updateTemperatures@rts 00EB  
                  __end_of_EUSART_Write_Text 348D                   __size_of_EUSART_Initialize 00A9  
                              ??_internal_16 0071                                    _atoi$1657 0026  
                                  _atoi$1658 002A                                    _atoi$1659 0028  
                           _OV_delay_setting 3A00                            __size_of_init_I2C 0010  
                      I2C_writeRegister@data 0079                              ??_send_I2C_NACK 0071  
                          __size_of_init_AFE 0056                            __size_of_init_RGB 0005  
                          _send_I2C_startBit 335E                                    _dtoa$1206 003D  
                            ??_send_I2C_data 0073                  __size_of_RGB_AWAIT_AFE_CONN 0022  
             __size_of_setShuntResistorValue 000A                                     ?___aldiv 0024  
                                   ?___aodiv 0020                           ?_send_I2C_startBit 0070  
                                   ?___fladd 005A                __end_of_setShuntResistorValue 33B0  
                                   ?___aomod 0020                                     ?___fldiv 0040  
                                   ?___flneg 005A                             ___aodiv@quotient 0074  
                                   ?___flmul 0026                                     ?___flsub 00A0  
                                   ?___fltol 00A8                                     ?___lodiv 0020  
                                   ?___lomod 0020                                  ??_RGB_color 0073  
                                 ?__Umul8_16 0071                    EUSART_Initialize@baudrate 0032  
                                  _logf$2050 0134                                    _logf$2051 0138  
                                  _logf$2047 0152                                    _logf$2048 012C  
                                  _logf$2049 0130                            __size_of_vfprintf 0031  
                        ??_send_I2C_startBit 0071                            __size_of_snprintf 001B  
             BQ76920@shuntResistorValue_mOhm 01AE                              ___lomod@divisor 0020  
                                   ?_initWDT 0070                              ___lomod@counter 0072  
                                   ?_isalpha 0071                                     ?_isdigit 0071  
                                   ?_islower 0071                                     ?_isspace 0071  
                                  _init_GPIO 0808                                     ?_isupper 0071  
                                  _initClock 07FD                                    _init_TMR1 33B0  
                                  _currState 01D9                    _setShortCircuitProtection 26E8  
                 __size_of_I2C_writeRegister 001E                               __size_of_fputc 0054  
                             __size_of_fputs 0026                               __size_of_myIsr 001C  
                                   ?_strncmp 0071                                     ?_toupper 0077  
                             __size_of_putch 0001                              ___aldiv@divisor 0024  
                      __end_of_read_I2C_data 33E7                              ___aldiv@counter 002C  
                             ___wmul@product 0075                              BQ76920@protect1 01D4  
                            BQ76920@protect2 01D3                              BQ76920@protect3 01D2  
                                   _LATAbits 010C                                     _LATEbits 0110  
                  __end_of_send_I2C_startBit 3366                                    clear_ram0 33BB  
                                  _tmr1_flag 00EF                                     _PIE1bits 0091  
         setOverCurrentDischargeProtection@i 00A8                                     _PIR1bits 0011  
                 setShortCircuitProtection@i 00A8                          __end_of_internal_16 3377  
                        _printcellParameters 1CCD                                    _vfpfcnvrt 1E5C  
                                  _xtoa$1242 0043                                    _xtoa$1243 0045  
                          ___wmul@multiplier 0071                      _setTemperatureLimitsint 3719  
                                 ?_init_GPIO 0070                                   ?_initClock 0070  
                                 ?_init_TMR1 0070                        send_I2C_data@databyte 0071  
                               _isspace$1684 0075                                   vfpfcnvrt@c 00B2  
                          ___lmul@multiplier 0071                         ?_printcellParameters 0070  
                      _temperatureThermistor 01B6                   __size_of_EUSART_Write_Text 001A  
                 ?_watchdog_timeout_shutdown 0070                                    _vsnprintf 2AB0  
                                 _AFE_UPDATE 345A                            _OCD_delay_setting 39C2  
                       __end_of_statemachine 29B8                                   vfprintf@ap 0065  
                                 vfprintf@fp 0061                                  ??__Umul8_16 0073  
                           __size_of___aldiv 0082                             __size_of___aodiv 00F3  
                           __size_of___fladd 01E2                      __size_of_updateVoltages 02D8  
                           __size_of___aomod 00DC                             __size_of___fldiv 017A  
             _setShortCircuitProtection$2033 00A4                             __size_of___flneg 000A  
                                vsnprintf@ap 00C1                             __size_of___flmul 022C  
                           __size_of___flsub 0035                             __size_of___fltol 0066  
                     readRegister@regAddress 0077                             __size_of___lodiv 007C  
                           __size_of___lomod 0069                                   ?_vfpfcnvrt 0057  
                                 snprintf@ap 006F                              ___aodiv@divisor 0020  
                            ___aodiv@counter 0072                                   _ANSELBbits 018D  
                                 _ANSELCbits 018E                                     ___xxtofl 2BAF  
setOverCurrentDischargeProtection@current_mA 0066                             __size_of_initWDT 0006  
                           __size_of_isalpha 001D                             __size_of_isdigit 0017  
             __end_of_lookupTableSamsung_SOC 305C                             _send_I2C_stopBit 3366  
                           __size_of_islower 0017                             __size_of_isspace 001C  
                                   __ptext10 3443                                     __ptext11 342C  
                                   __ptext20 3415                                     __ptext12 2800  
                                   __ptext21 2138                                     __ptext13 2214  
                                   __ptext30 34DE                                     __ptext22 23E6  
                                   __ptext14 28D7                                     __ptext31 33E7  
                                   __ptext23 357A                                     __ptext15 2A34  
                                   __ptext40 29B8                                     __ptext32 3473  
                                   __ptext24 375D                                     __ptext16 37AE  
                                   __ptext41 205C                                     __ptext33 0800  
                                   __ptext25 33FE                                     __ptext17 2E66  
                                   __ptext50 006B                                     __ptext42 2F2B  
                                   __ptext34 2006                                     __ptext26 07D7  
                                   __ptext18 22F5                                     __ptext51 3640  
                                   __ptext43 2CEE                                     __ptext35 3719  
                                   __ptext27 281D                                     __ptext19 18A7  
                                   __ptext60 36E2                                     __ptext52 05F5  
                                   __ptext44 3558                                     __ptext36 348D  
                                   __ptext28 0003                                     __ptext61 36AB  
                                   __ptext53 2DA2                                     __ptext45 3537  
                                   __ptext37 33A6                                     __ptext29 1806  
                                   __ptext70 33B0                                     __ptext62 3675  
                                   __ptext54 2BAF                                     __ptext46 345A  
                                   __ptext38 26E8                                     __ptext71 2001  
                                   __ptext63 3380                                     __ptext55 2871  
                                   __ptext47 124F                                     __ptext39 25D3  
                                   __ptext72 33C7                                     __ptext64 33D7  
                                   __ptext56 339C                                     __ptext48 35DC  
                                   __ptext73 0808                                     __ptext65 34FA  
                                   __ptext57 1023                                     __ptext49 1527  
                                   __ptext74 1800                                     __ptext66 3366  
                                   __ptext58 3518                                     __ptext75 07FD  
                                   __ptext67 335E                                     __ptext59 1B53  
                                   __ptext76 336E                                     __ptext68 3377  
                                   __ptext77 2C45                                     __ptext69 3392  
                                   __ptext78 2B2D                             __size_of_isupper 0017  
                      ??_printcellParameters 007C               setCellUndervoltageProtection@i 0045  
                  __end_of_OCD_delay_setting 39D2                             __size_of_strncmp 0052  
                           __size_of_toupper 0022                                   ?_vsnprintf 00BB  
                        updateCurrent@adcVal 00B5                                     _init_I2C 33C7  
                                   _init_AFE 2006                                     _init_RGB 2001  
                              __size_of_atoi 00A1                                __size_of_ctoa 0031  
                              __size_of_main 0032                                __size_of_dtoa 0153  
                              _SSPDATPPSbits 0E21                                    pnum$text7 0046  
                              __size_of_logf 058A                                __size_of_otoa 00F1  
                      _SCD_threshold_setting 39D2                                __size_of_stoa 00C5  
                              __size_of_utoa 00E1                   __size_of_send_I2C_startBit 0008  
                              __size_of_xtoa 0159                                  _internal_16 336E  
                                 _RB2PPSbits 0E9A                                   _RC1STAbits 019D  
                                  stoa@F1152 01DA                                   _RC4PPSbits 0EA4  
             __size_of_beginAFEcommunication 00B4                                _SSPCLKPPSbits 0E20  
              __end_of_beginAFEcommunication 2DA2                                     int$flags 007E  
                                 _RC5PPSbits 0EA5                                     _protect1 01D8  
                                   _protect2 01D7                                     _protect3 01D6  
                  ??_setTemperatureLimitsint 0077                                     _vfprintf 35AB  
                           ??_enableCharging 0022                                     _snprintf 34A8  
                           ___aomod@dividend 0028                                     logf@F469 01AA  
                     __size_of_updateCurrent 00C4    setOverCurrentDischargeProtection@delay_ms 006A  
                   __end_of_OV_delay_setting 3A08                               _vfpfcnvrt$1257 00A4  
                             _vfpfcnvrt$1258 00A6                                   _INTCONbits 000B  
                                ??_init_GPIO 0071                                  ??_initClock 0071  
                                ??_init_TMR1 0071                                     logf@hfsq 013E  
                             __pstringtext10 3A1C                               __pstringtext11 3A20  
                             __pstringtext20 38E4                               __pstringtext12 3A24  
                             __pstringtext21 38FA                               __pstringtext13 3A28  
                             __pstringtext30 39B0                               __pstringtext22 390F  
                             __pstringtext14 3A2C                               __pstringtext31 39E2  
                             __pstringtext23 3924                               __pstringtext15 3800  
                             __pstringtext40 3A4C                               __pstringtext32 39F1  
                             __pstringtext24 3939                               __pstringtext16 3849  
                             __pstringtext41 3A4F                               __pstringtext33 3A30  
                             __pstringtext25 394E                               __pstringtext17 3871  
                             __pstringtext42 3A52                               __pstringtext34 3A34  
                             __pstringtext26 3963                               __pstringtext18 38B7  
                             __pstringtext43 3A55                               __pstringtext35 3A38  
                             __pstringtext27 3977                               __pstringtext19 38CE  
                             __pstringtext44 3A58                               __pstringtext36 3A3C  
                             __pstringtext28 398B                               __pstringtext45 3A5B  
                             __pstringtext37 3A40                               __pstringtext29 399E  
                             __pstringtext46 3A5E                               __pstringtext38 3A44  
                             __pstringtext47 0000                               __pstringtext39 3A48  
                                   isalpha@c 0071                                     isdigit@c 0071  
                                 vsnprintf@f 00C6                                   vsnprintf@n 00BD  
                                 vsnprintf@s 00BB                           _updateTemperatures 1527  
                           _UV_delay_setting 3A08                                    snprintf@n 00CE  
                                  snprintf@s 00CC                 __end_of_send_I2C_controlByte 339C  
                                   intlevel1 0000          setShortCircuitProtection@current_mA 0066  
                                   islower@c 0071                                  ?_AFE_UPDATE 0070  
                                   isspace@c 0071                          ?_updateTemperatures 0070  
                          __CFG_CLKOUTEN$OFF 0000                                  _PPSLOCKbits 0E0F  
                                   isupper@c 0071           __size_of_setShortCircuitProtection 0118  
                                  strncmp@_l 0071                                    strncmp@_r 0073  
                          _maxCellTempCharge 01CC                              ___aomod@divisor 0020  
                                ??_vfpfcnvrt 005B                                     stoa@nuls 0024  
                            ___aomod@counter 0072                                __pstringtext1 3000  
                              __pstringtext2 305C                                __pstringtext3 3897  
                              __pstringtext4 39C2                                __pstringtext5 39D2  
                              __pstringtext6 3A00                                __pstringtext7 3A08  
                              __pstringtext8 3A10                                __pstringtext9 3A18  
                       ??_updateTemperatures 00B4                       __Umul8_16@multiplicand 0071  
                             _vsnprintf$1829 00C2                                     strncmp@l 0078  
                                   strncmp@n 0075                                     strncmp@r 007A  
                                   toupper@c 0077                        EUSART_Write_Text@text 0072  
                               ___aldiv@sign 002D                                  _SSPCON2bits 0216  
                                 _WDTCONbits 0097                                ___fladd@signs 006A  
            __end_of_setTemperatureLimitsint 375D                           EUSART_Write@txData 0071  
                               ___aodiv@sign 0073      setOverCurrentDischargeProtection@scaler 00A0  
                                ??_vsnprintf 006A                      _updateTemperatures$2040 00C7  
                    _updateTemperatures$2041 00CB                      _updateTemperatures$2042 00CF  
                    _updateTemperatures$2043 00D3                      _updateTemperatures$2044 00D7  
                    _updateTemperatures$2036 00B7                      _updateTemperatures$2045 00DB  
                    _updateTemperatures$2037 00BB                      _updateTemperatures$2046 00DF  
                    _updateTemperatures$2038 00BF                      _updateTemperatures$2039 00C3  
                               ___fladd@aexp 006B                                 ___fladd@bexp 006C  
                      __size_of_statemachine 0078                                   _STATUSbits 0003  
                                _toggleColor 007C                         __Umul8_16@multiplier 0079  
                              _updateCurrent 2DA2                                   _SSPCONbits 0215  
                 __end_of_RGB_AWAIT_AFE_CONN 357A                                 ___aomod@sign 0073  
                         EUSART_Write_Text@i 0075                        __end_of_send_I2C_NACK 3389  
                          __Umul8_16@product 0075  
