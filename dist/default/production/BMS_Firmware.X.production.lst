

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Dec 28 03:11:43 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1719
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	stringtext12,global,class=STRCODE,delta=2
    17                           	psect	stringtext13,global,class=STRCODE,delta=2
    18                           	psect	stringtext14,global,class=STRCODE,delta=2
    19                           	psect	stringtext15,global,class=STRCODE,delta=2
    20                           	psect	stringtext16,global,class=STRCODE,delta=2
    21                           	psect	stringtext17,global,class=STRCODE,delta=2
    22                           	psect	stringtext18,global,class=STRCODE,delta=2
    23                           	psect	stringtext19,global,class=STRCODE,delta=2
    24                           	psect	stringtext20,global,class=STRCODE,delta=2
    25                           	psect	stringtext21,global,class=STRCODE,delta=2
    26                           	psect	stringtext22,global,class=STRCODE,delta=2
    27                           	psect	stringtext23,global,class=STRCODE,delta=2
    28                           	psect	stringtext24,global,class=STRCODE,delta=2
    29                           	psect	stringtext25,global,class=STRCODE,delta=2
    30                           	psect	stringtext26,global,class=STRCODE,delta=2
    31                           	psect	stringtext27,global,class=STRCODE,delta=2
    32                           	psect	stringtext28,global,class=STRCODE,delta=2
    33                           	psect	stringtext29,global,class=STRCODE,delta=2
    34                           	psect	stringtext30,global,class=STRCODE,delta=2
    35                           	psect	stringtext31,global,class=STRCODE,delta=2
    36                           	psect	stringtext32,global,class=STRCODE,delta=2
    37                           	psect	stringtext33,global,class=STRCODE,delta=2
    38                           	psect	stringtext34,global,class=STRCODE,delta=2
    39                           	psect	stringtext35,global,class=STRCODE,delta=2
    40                           	psect	stringtext36,global,class=STRCODE,delta=2
    41                           	psect	stringtext37,global,class=STRCODE,delta=2
    42                           	psect	stringtext38,global,class=STRCODE,delta=2
    43                           	psect	stringtext39,global,class=STRCODE,delta=2
    44                           	psect	stringtext40,global,class=STRCODE,delta=2
    45                           	psect	stringtext41,global,class=STRCODE,delta=2
    46                           	psect	stringtext42,global,class=STRCODE,delta=2
    47                           	psect	stringtext43,global,class=STRCODE,delta=2
    48                           	psect	stringtext44,global,class=STRCODE,delta=2
    49                           	psect	stringtext45,global,class=STRCODE,delta=2
    50                           	psect	stringtext46,global,class=STRCODE,delta=2
    51                           	psect	stringtext47,global,class=STRCODE,delta=2
    52                           	psect	stringtext48,global,class=STRCODE,delta=2
    53                           	psect	stringtext49,global,class=STRCODE,delta=2
    54                           	psect	stringtext50,global,class=STRCODE,delta=2
    55                           	psect	stringtext51,global,class=STRCODE,delta=2
    56                           	psect	stringtext52,global,class=STRCODE,delta=2
    57                           	psect	stringtext53,global,class=STRCODE,delta=2
    58                           	psect	stringtext54,global,class=STRCODE,delta=2
    59                           	psect	stringtext55,global,class=STRCODE,delta=2
    60                           	psect	cinit,global,class=CODE,merge=1,delta=2
    61                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    62                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    63                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    64                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    65                           	psect	clrtext,global,class=CODE,delta=2
    66                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    67                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    68                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    69                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    70                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    71                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    72                           	psect	text1,local,class=CODE,merge=1,delta=2
    73                           	psect	text2,local,class=CODE,merge=1,delta=2
    74                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    75                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    76                           	psect	text5,local,class=CODE,merge=1,delta=2
    77                           	psect	text6,local,class=CODE,merge=1,delta=2
    78                           	psect	text7,local,class=CODE,merge=1,delta=2
    79                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    80                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    81                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    82                           	psect	text11,local,class=CODE,merge=1,delta=2
    83                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    84                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    85                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    86                           	psect	text15,local,class=CODE,merge=1,delta=2
    87                           	psect	text16,local,class=CODE,merge=1,delta=2
    88                           	psect	text17,local,class=CODE,merge=1,delta=2
    89                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    90                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    91                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    92                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    93                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    94                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    95                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    96                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    97                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    98                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    99                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
   100                           	psect	text29,local,class=CODE,merge=1,delta=2
   101                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
   102                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
   103                           	psect	text32,local,class=CODE,merge=1,delta=2,group=1
   104                           	psect	text33,local,class=CODE,merge=1,delta=2
   105                           	psect	text34,local,class=CODE,merge=1,delta=2
   106                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
   107                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
   108                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
   109                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
   110                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
   111                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
   112                           	psect	text41,local,class=CODE,merge=1,delta=2,group=2
   113                           	psect	text42,local,class=CODE,merge=1,delta=2
   114                           	psect	text43,local,class=CODE,merge=1,delta=2
   115                           	psect	text44,local,class=CODE,merge=1,delta=2
   116                           	psect	text45,local,class=CODE,merge=1,delta=2
   117                           	psect	text46,local,class=CODE,merge=1,delta=2,group=1
   118                           	psect	text47,local,class=CODE,merge=1,delta=2
   119                           	psect	text48,local,class=CODE,merge=1,delta=2
   120                           	psect	text49,local,class=CODE,merge=1,delta=2
   121                           	psect	text50,local,class=CODE,merge=1,delta=2,group=1
   122                           	psect	text51,local,class=CODE,merge=1,delta=2,group=1
   123                           	psect	text52,local,class=CODE,merge=1,delta=2,group=1
   124                           	psect	text53,local,class=CODE,merge=1,delta=2
   125                           	psect	text54,local,class=CODE,merge=1,delta=2
   126                           	psect	text55,local,class=CODE,merge=1,delta=2
   127                           	psect	text56,local,class=CODE,merge=1,delta=2
   128                           	psect	text57,local,class=CODE,merge=1,delta=2
   129                           	psect	text58,local,class=CODE,merge=1,delta=2
   130                           	psect	text59,local,class=CODE,merge=1,delta=2
   131                           	psect	text60,local,class=CODE,merge=1,delta=2
   132                           	psect	text61,local,class=CODE,merge=1,delta=2
   133                           	psect	text62,local,class=CODE,merge=1,delta=2
   134                           	psect	text63,local,class=CODE,merge=1,delta=2
   135                           	psect	text64,local,class=CODE,merge=1,delta=2
   136                           	psect	text65,local,class=CODE,merge=1,delta=2
   137                           	psect	text66,local,class=CODE,merge=1,delta=2
   138                           	psect	text67,local,class=CODE,merge=1,delta=2,group=1
   139                           	psect	text68,local,class=CODE,merge=1,delta=2,group=1
   140                           	psect	text69,local,class=CODE,merge=1,delta=2,group=1
   141                           	psect	text70,local,class=CODE,merge=1,delta=2
   142                           	psect	text71,local,class=CODE,merge=1,delta=2
   143                           	psect	text72,local,class=CODE,merge=1,delta=2
   144                           	psect	text73,local,class=CODE,merge=1,delta=2
   145                           	psect	text74,local,class=CODE,merge=1,delta=2
   146                           	psect	text75,local,class=CODE,merge=1,delta=2
   147                           	psect	text76,local,class=CODE,merge=1,delta=2
   148                           	psect	text77,local,class=CODE,merge=1,delta=2,group=1
   149                           	psect	intentry,global,class=CODE,delta=2
   150                           	psect	text6_split_1,local,class=CODE,merge=1,delta=2
   151                           	psect	text6_split_2,local,class=CODE,merge=1,delta=2
   152                           	psect	text6_split_3,local,class=CODE,merge=1,delta=2
   153                           	psect	text6_split_4,local,class=CODE,merge=1,delta=2
   154                           	psect	text6_split_5,local,class=CODE,merge=1,delta=2
   155                           	psect	text6_split_6,local,class=CODE,merge=1,delta=2
   156                           	psect	text6_split_7,local,class=CODE,merge=1,delta=2
   157                           	psect	text6_split_8,local,class=CODE,merge=1,delta=2
   158                           	dabs	1,0xCA0,32
   159                           	dabs	1,0xC20,80
   160                           	dabs	1,0xBE1,15
   161                           	dabs	1,0x2771,0,_messageBuffer
   162                           	dabs	1,0x7E,2
   163  0000                     
   164                           ; Version 2.05
   165                           ; Generated 20/12/2018 GMT
   166                           ; 
   167                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   168                           ; All rights reserved.
   169                           ; 
   170                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   171                           ; 
   172                           ; Redistribution and use in source and binary forms, with or without modification, are
   173                           ; permitted provided that the following conditions are met:
   174                           ; 
   175                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   176                           ;        conditions and the following disclaimer.
   177                           ; 
   178                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   179                           ;        of conditions and the following disclaimer in the documentation and/or other
   180                           ;        materials provided with the distribution.
   181                           ; 
   182                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   183                           ;        software without specific prior written permission.
   184                           ; 
   185                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   186                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   187                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   188                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   189                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   190                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   191                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   192                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   193                           ; 
   194                           ; 
   195                           ; Code-generator required, PIC16F1719 Definitions
   196                           ; 
   197                           ; SFR Addresses
   198  0000                     	;# 
   199  0001                     	;# 
   200  0002                     	;# 
   201  0003                     	;# 
   202  0004                     	;# 
   203  0005                     	;# 
   204  0006                     	;# 
   205  0007                     	;# 
   206  0008                     	;# 
   207  0009                     	;# 
   208  000A                     	;# 
   209  000B                     	;# 
   210  000C                     	;# 
   211  000D                     	;# 
   212  000E                     	;# 
   213  000F                     	;# 
   214  0010                     	;# 
   215  0011                     	;# 
   216  0012                     	;# 
   217  0013                     	;# 
   218  0015                     	;# 
   219  0016                     	;# 
   220  0016                     	;# 
   221  0017                     	;# 
   222  0018                     	;# 
   223  0019                     	;# 
   224  001A                     	;# 
   225  001B                     	;# 
   226  001C                     	;# 
   227  008C                     	;# 
   228  008D                     	;# 
   229  008E                     	;# 
   230  008F                     	;# 
   231  0090                     	;# 
   232  0091                     	;# 
   233  0092                     	;# 
   234  0093                     	;# 
   235  0095                     	;# 
   236  0096                     	;# 
   237  0097                     	;# 
   238  0098                     	;# 
   239  0099                     	;# 
   240  009A                     	;# 
   241  009B                     	;# 
   242  009B                     	;# 
   243  009C                     	;# 
   244  009D                     	;# 
   245  009E                     	;# 
   246  009F                     	;# 
   247  010C                     	;# 
   248  010D                     	;# 
   249  010E                     	;# 
   250  010F                     	;# 
   251  0110                     	;# 
   252  0111                     	;# 
   253  0112                     	;# 
   254  0113                     	;# 
   255  0114                     	;# 
   256  0115                     	;# 
   257  0116                     	;# 
   258  0117                     	;# 
   259  0118                     	;# 
   260  0119                     	;# 
   261  011A                     	;# 
   262  011B                     	;# 
   263  011B                     	;# 
   264  011C                     	;# 
   265  018C                     	;# 
   266  018D                     	;# 
   267  018E                     	;# 
   268  018F                     	;# 
   269  0190                     	;# 
   270  0191                     	;# 
   271  0191                     	;# 
   272  0192                     	;# 
   273  0193                     	;# 
   274  0193                     	;# 
   275  0194                     	;# 
   276  0195                     	;# 
   277  0196                     	;# 
   278  0197                     	;# 
   279  0199                     	;# 
   280  0199                     	;# 
   281  0199                     	;# 
   282  019A                     	;# 
   283  019A                     	;# 
   284  019A                     	;# 
   285  019B                     	;# 
   286  019B                     	;# 
   287  019B                     	;# 
   288  019B                     	;# 
   289  019B                     	;# 
   290  019C                     	;# 
   291  019C                     	;# 
   292  019C                     	;# 
   293  019D                     	;# 
   294  019D                     	;# 
   295  019D                     	;# 
   296  019E                     	;# 
   297  019E                     	;# 
   298  019E                     	;# 
   299  019F                     	;# 
   300  019F                     	;# 
   301  019F                     	;# 
   302  019F                     	;# 
   303  019F                     	;# 
   304  020C                     	;# 
   305  020D                     	;# 
   306  020E                     	;# 
   307  020F                     	;# 
   308  0210                     	;# 
   309  0211                     	;# 
   310  0211                     	;# 
   311  0212                     	;# 
   312  0212                     	;# 
   313  0213                     	;# 
   314  0213                     	;# 
   315  0214                     	;# 
   316  0214                     	;# 
   317  0215                     	;# 
   318  0215                     	;# 
   319  0215                     	;# 
   320  0215                     	;# 
   321  0216                     	;# 
   322  0216                     	;# 
   323  0217                     	;# 
   324  0217                     	;# 
   325  028C                     	;# 
   326  028D                     	;# 
   327  028E                     	;# 
   328  028F                     	;# 
   329  0290                     	;# 
   330  0291                     	;# 
   331  0291                     	;# 
   332  0292                     	;# 
   333  0293                     	;# 
   334  0293                     	;# 
   335  0298                     	;# 
   336  0298                     	;# 
   337  0299                     	;# 
   338  029A                     	;# 
   339  029A                     	;# 
   340  029E                     	;# 
   341  030C                     	;# 
   342  030D                     	;# 
   343  030E                     	;# 
   344  030F                     	;# 
   345  0310                     	;# 
   346  038C                     	;# 
   347  038D                     	;# 
   348  038E                     	;# 
   349  038F                     	;# 
   350  0390                     	;# 
   351  0391                     	;# 
   352  0392                     	;# 
   353  0393                     	;# 
   354  0394                     	;# 
   355  0395                     	;# 
   356  0396                     	;# 
   357  0397                     	;# 
   358  0398                     	;# 
   359  0399                     	;# 
   360  039D                     	;# 
   361  039E                     	;# 
   362  039F                     	;# 
   363  0415                     	;# 
   364  0416                     	;# 
   365  0417                     	;# 
   366  041C                     	;# 
   367  041D                     	;# 
   368  041E                     	;# 
   369  0498                     	;# 
   370  0498                     	;# 
   371  0499                     	;# 
   372  049A                     	;# 
   373  049B                     	;# 
   374  049B                     	;# 
   375  049C                     	;# 
   376  049D                     	;# 
   377  049E                     	;# 
   378  049F                     	;# 
   379  0511                     	;# 
   380  0515                     	;# 
   381  0617                     	;# 
   382  0618                     	;# 
   383  0619                     	;# 
   384  0619                     	;# 
   385  061A                     	;# 
   386  061B                     	;# 
   387  061C                     	;# 
   388  061C                     	;# 
   389  0691                     	;# 
   390  0692                     	;# 
   391  0693                     	;# 
   392  0694                     	;# 
   393  0695                     	;# 
   394  0696                     	;# 
   395  0697                     	;# 
   396  0698                     	;# 
   397  0699                     	;# 
   398  069A                     	;# 
   399  069B                     	;# 
   400  069C                     	;# 
   401  069D                     	;# 
   402  069E                     	;# 
   403  069F                     	;# 
   404  0E0F                     	;# 
   405  0E10                     	;# 
   406  0E11                     	;# 
   407  0E12                     	;# 
   408  0E13                     	;# 
   409  0E14                     	;# 
   410  0E15                     	;# 
   411  0E17                     	;# 
   412  0E20                     	;# 
   413  0E21                     	;# 
   414  0E22                     	;# 
   415  0E24                     	;# 
   416  0E25                     	;# 
   417  0E28                     	;# 
   418  0E29                     	;# 
   419  0E2A                     	;# 
   420  0E2B                     	;# 
   421  0E90                     	;# 
   422  0E91                     	;# 
   423  0E92                     	;# 
   424  0E93                     	;# 
   425  0E94                     	;# 
   426  0E95                     	;# 
   427  0E96                     	;# 
   428  0E97                     	;# 
   429  0E98                     	;# 
   430  0E99                     	;# 
   431  0E9A                     	;# 
   432  0E9B                     	;# 
   433  0E9C                     	;# 
   434  0E9D                     	;# 
   435  0E9E                     	;# 
   436  0E9F                     	;# 
   437  0EA0                     	;# 
   438  0EA1                     	;# 
   439  0EA2                     	;# 
   440  0EA3                     	;# 
   441  0EA4                     	;# 
   442  0EA5                     	;# 
   443  0EA6                     	;# 
   444  0EA7                     	;# 
   445  0EA8                     	;# 
   446  0EA9                     	;# 
   447  0EAA                     	;# 
   448  0EAB                     	;# 
   449  0EAC                     	;# 
   450  0EAD                     	;# 
   451  0EAE                     	;# 
   452  0EAF                     	;# 
   453  0EB0                     	;# 
   454  0EB1                     	;# 
   455  0EB2                     	;# 
   456  0F0F                     	;# 
   457  0F10                     	;# 
   458  0F11                     	;# 
   459  0F12                     	;# 
   460  0F13                     	;# 
   461  0F14                     	;# 
   462  0F15                     	;# 
   463  0F16                     	;# 
   464  0F17                     	;# 
   465  0F18                     	;# 
   466  0F19                     	;# 
   467  0F1A                     	;# 
   468  0F1B                     	;# 
   469  0F1C                     	;# 
   470  0F1D                     	;# 
   471  0F1E                     	;# 
   472  0F1F                     	;# 
   473  0F20                     	;# 
   474  0F21                     	;# 
   475  0F22                     	;# 
   476  0F23                     	;# 
   477  0F24                     	;# 
   478  0F25                     	;# 
   479  0F26                     	;# 
   480  0F27                     	;# 
   481  0F28                     	;# 
   482  0F29                     	;# 
   483  0F2A                     	;# 
   484  0F2B                     	;# 
   485  0F2C                     	;# 
   486  0F2D                     	;# 
   487  0F2E                     	;# 
   488  0F2F                     	;# 
   489  0F30                     	;# 
   490  0F31                     	;# 
   491  0F32                     	;# 
   492  0F33                     	;# 
   493  0F34                     	;# 
   494  0F35                     	;# 
   495  0F36                     	;# 
   496  0F37                     	;# 
   497  0FE4                     	;# 
   498  0FE5                     	;# 
   499  0FE6                     	;# 
   500  0FE7                     	;# 
   501  0FE8                     	;# 
   502  0FE9                     	;# 
   503  0FEA                     	;# 
   504  0FEB                     	;# 
   505  0FED                     	;# 
   506  0FEE                     	;# 
   507  0FEF                     	;# 
   508  0000                     	;# 
   509  0001                     	;# 
   510  0002                     	;# 
   511  0003                     	;# 
   512  0004                     	;# 
   513  0005                     	;# 
   514  0006                     	;# 
   515  0007                     	;# 
   516  0008                     	;# 
   517  0009                     	;# 
   518  000A                     	;# 
   519  000B                     	;# 
   520  000C                     	;# 
   521  000D                     	;# 
   522  000E                     	;# 
   523  000F                     	;# 
   524  0010                     	;# 
   525  0011                     	;# 
   526  0012                     	;# 
   527  0013                     	;# 
   528  0015                     	;# 
   529  0016                     	;# 
   530  0016                     	;# 
   531  0017                     	;# 
   532  0018                     	;# 
   533  0019                     	;# 
   534  001A                     	;# 
   535  001B                     	;# 
   536  001C                     	;# 
   537  008C                     	;# 
   538  008D                     	;# 
   539  008E                     	;# 
   540  008F                     	;# 
   541  0090                     	;# 
   542  0091                     	;# 
   543  0092                     	;# 
   544  0093                     	;# 
   545  0095                     	;# 
   546  0096                     	;# 
   547  0097                     	;# 
   548  0098                     	;# 
   549  0099                     	;# 
   550  009A                     	;# 
   551  009B                     	;# 
   552  009B                     	;# 
   553  009C                     	;# 
   554  009D                     	;# 
   555  009E                     	;# 
   556  009F                     	;# 
   557  010C                     	;# 
   558  010D                     	;# 
   559  010E                     	;# 
   560  010F                     	;# 
   561  0110                     	;# 
   562  0111                     	;# 
   563  0112                     	;# 
   564  0113                     	;# 
   565  0114                     	;# 
   566  0115                     	;# 
   567  0116                     	;# 
   568  0117                     	;# 
   569  0118                     	;# 
   570  0119                     	;# 
   571  011A                     	;# 
   572  011B                     	;# 
   573  011B                     	;# 
   574  011C                     	;# 
   575  018C                     	;# 
   576  018D                     	;# 
   577  018E                     	;# 
   578  018F                     	;# 
   579  0190                     	;# 
   580  0191                     	;# 
   581  0191                     	;# 
   582  0192                     	;# 
   583  0193                     	;# 
   584  0193                     	;# 
   585  0194                     	;# 
   586  0195                     	;# 
   587  0196                     	;# 
   588  0197                     	;# 
   589  0199                     	;# 
   590  0199                     	;# 
   591  0199                     	;# 
   592  019A                     	;# 
   593  019A                     	;# 
   594  019A                     	;# 
   595  019B                     	;# 
   596  019B                     	;# 
   597  019B                     	;# 
   598  019B                     	;# 
   599  019B                     	;# 
   600  019C                     	;# 
   601  019C                     	;# 
   602  019C                     	;# 
   603  019D                     	;# 
   604  019D                     	;# 
   605  019D                     	;# 
   606  019E                     	;# 
   607  019E                     	;# 
   608  019E                     	;# 
   609  019F                     	;# 
   610  019F                     	;# 
   611  019F                     	;# 
   612  019F                     	;# 
   613  019F                     	;# 
   614  020C                     	;# 
   615  020D                     	;# 
   616  020E                     	;# 
   617  020F                     	;# 
   618  0210                     	;# 
   619  0211                     	;# 
   620  0211                     	;# 
   621  0212                     	;# 
   622  0212                     	;# 
   623  0213                     	;# 
   624  0213                     	;# 
   625  0214                     	;# 
   626  0214                     	;# 
   627  0215                     	;# 
   628  0215                     	;# 
   629  0215                     	;# 
   630  0215                     	;# 
   631  0216                     	;# 
   632  0216                     	;# 
   633  0217                     	;# 
   634  0217                     	;# 
   635  028C                     	;# 
   636  028D                     	;# 
   637  028E                     	;# 
   638  028F                     	;# 
   639  0290                     	;# 
   640  0291                     	;# 
   641  0291                     	;# 
   642  0292                     	;# 
   643  0293                     	;# 
   644  0293                     	;# 
   645  0298                     	;# 
   646  0298                     	;# 
   647  0299                     	;# 
   648  029A                     	;# 
   649  029A                     	;# 
   650  029E                     	;# 
   651  030C                     	;# 
   652  030D                     	;# 
   653  030E                     	;# 
   654  030F                     	;# 
   655  0310                     	;# 
   656  038C                     	;# 
   657  038D                     	;# 
   658  038E                     	;# 
   659  038F                     	;# 
   660  0390                     	;# 
   661  0391                     	;# 
   662  0392                     	;# 
   663  0393                     	;# 
   664  0394                     	;# 
   665  0395                     	;# 
   666  0396                     	;# 
   667  0397                     	;# 
   668  0398                     	;# 
   669  0399                     	;# 
   670  039D                     	;# 
   671  039E                     	;# 
   672  039F                     	;# 
   673  0415                     	;# 
   674  0416                     	;# 
   675  0417                     	;# 
   676  041C                     	;# 
   677  041D                     	;# 
   678  041E                     	;# 
   679  0498                     	;# 
   680  0498                     	;# 
   681  0499                     	;# 
   682  049A                     	;# 
   683  049B                     	;# 
   684  049B                     	;# 
   685  049C                     	;# 
   686  049D                     	;# 
   687  049E                     	;# 
   688  049F                     	;# 
   689  0511                     	;# 
   690  0515                     	;# 
   691  0617                     	;# 
   692  0618                     	;# 
   693  0619                     	;# 
   694  0619                     	;# 
   695  061A                     	;# 
   696  061B                     	;# 
   697  061C                     	;# 
   698  061C                     	;# 
   699  0691                     	;# 
   700  0692                     	;# 
   701  0693                     	;# 
   702  0694                     	;# 
   703  0695                     	;# 
   704  0696                     	;# 
   705  0697                     	;# 
   706  0698                     	;# 
   707  0699                     	;# 
   708  069A                     	;# 
   709  069B                     	;# 
   710  069C                     	;# 
   711  069D                     	;# 
   712  069E                     	;# 
   713  069F                     	;# 
   714  0E0F                     	;# 
   715  0E10                     	;# 
   716  0E11                     	;# 
   717  0E12                     	;# 
   718  0E13                     	;# 
   719  0E14                     	;# 
   720  0E15                     	;# 
   721  0E17                     	;# 
   722  0E20                     	;# 
   723  0E21                     	;# 
   724  0E22                     	;# 
   725  0E24                     	;# 
   726  0E25                     	;# 
   727  0E28                     	;# 
   728  0E29                     	;# 
   729  0E2A                     	;# 
   730  0E2B                     	;# 
   731  0E90                     	;# 
   732  0E91                     	;# 
   733  0E92                     	;# 
   734  0E93                     	;# 
   735  0E94                     	;# 
   736  0E95                     	;# 
   737  0E96                     	;# 
   738  0E97                     	;# 
   739  0E98                     	;# 
   740  0E99                     	;# 
   741  0E9A                     	;# 
   742  0E9B                     	;# 
   743  0E9C                     	;# 
   744  0E9D                     	;# 
   745  0E9E                     	;# 
   746  0E9F                     	;# 
   747  0EA0                     	;# 
   748  0EA1                     	;# 
   749  0EA2                     	;# 
   750  0EA3                     	;# 
   751  0EA4                     	;# 
   752  0EA5                     	;# 
   753  0EA6                     	;# 
   754  0EA7                     	;# 
   755  0EA8                     	;# 
   756  0EA9                     	;# 
   757  0EAA                     	;# 
   758  0EAB                     	;# 
   759  0EAC                     	;# 
   760  0EAD                     	;# 
   761  0EAE                     	;# 
   762  0EAF                     	;# 
   763  0EB0                     	;# 
   764  0EB1                     	;# 
   765  0EB2                     	;# 
   766  0F0F                     	;# 
   767  0F10                     	;# 
   768  0F11                     	;# 
   769  0F12                     	;# 
   770  0F13                     	;# 
   771  0F14                     	;# 
   772  0F15                     	;# 
   773  0F16                     	;# 
   774  0F17                     	;# 
   775  0F18                     	;# 
   776  0F19                     	;# 
   777  0F1A                     	;# 
   778  0F1B                     	;# 
   779  0F1C                     	;# 
   780  0F1D                     	;# 
   781  0F1E                     	;# 
   782  0F1F                     	;# 
   783  0F20                     	;# 
   784  0F21                     	;# 
   785  0F22                     	;# 
   786  0F23                     	;# 
   787  0F24                     	;# 
   788  0F25                     	;# 
   789  0F26                     	;# 
   790  0F27                     	;# 
   791  0F28                     	;# 
   792  0F29                     	;# 
   793  0F2A                     	;# 
   794  0F2B                     	;# 
   795  0F2C                     	;# 
   796  0F2D                     	;# 
   797  0F2E                     	;# 
   798  0F2F                     	;# 
   799  0F30                     	;# 
   800  0F31                     	;# 
   801  0F32                     	;# 
   802  0F33                     	;# 
   803  0F34                     	;# 
   804  0F35                     	;# 
   805  0F36                     	;# 
   806  0F37                     	;# 
   807  0FE4                     	;# 
   808  0FE5                     	;# 
   809  0FE6                     	;# 
   810  0FE7                     	;# 
   811  0FE8                     	;# 
   812  0FE9                     	;# 
   813  0FEA                     	;# 
   814  0FEB                     	;# 
   815  0FED                     	;# 
   816  0FEE                     	;# 
   817  0FEF                     	;# 
   818  0000                     	;# 
   819  0001                     	;# 
   820  0002                     	;# 
   821  0003                     	;# 
   822  0004                     	;# 
   823  0005                     	;# 
   824  0006                     	;# 
   825  0007                     	;# 
   826  0008                     	;# 
   827  0009                     	;# 
   828  000A                     	;# 
   829  000B                     	;# 
   830  000C                     	;# 
   831  000D                     	;# 
   832  000E                     	;# 
   833  000F                     	;# 
   834  0010                     	;# 
   835  0011                     	;# 
   836  0012                     	;# 
   837  0013                     	;# 
   838  0015                     	;# 
   839  0016                     	;# 
   840  0016                     	;# 
   841  0017                     	;# 
   842  0018                     	;# 
   843  0019                     	;# 
   844  001A                     	;# 
   845  001B                     	;# 
   846  001C                     	;# 
   847  008C                     	;# 
   848  008D                     	;# 
   849  008E                     	;# 
   850  008F                     	;# 
   851  0090                     	;# 
   852  0091                     	;# 
   853  0092                     	;# 
   854  0093                     	;# 
   855  0095                     	;# 
   856  0096                     	;# 
   857  0097                     	;# 
   858  0098                     	;# 
   859  0099                     	;# 
   860  009A                     	;# 
   861  009B                     	;# 
   862  009B                     	;# 
   863  009C                     	;# 
   864  009D                     	;# 
   865  009E                     	;# 
   866  009F                     	;# 
   867  010C                     	;# 
   868  010D                     	;# 
   869  010E                     	;# 
   870  010F                     	;# 
   871  0110                     	;# 
   872  0111                     	;# 
   873  0112                     	;# 
   874  0113                     	;# 
   875  0114                     	;# 
   876  0115                     	;# 
   877  0116                     	;# 
   878  0117                     	;# 
   879  0118                     	;# 
   880  0119                     	;# 
   881  011A                     	;# 
   882  011B                     	;# 
   883  011B                     	;# 
   884  011C                     	;# 
   885  018C                     	;# 
   886  018D                     	;# 
   887  018E                     	;# 
   888  018F                     	;# 
   889  0190                     	;# 
   890  0191                     	;# 
   891  0191                     	;# 
   892  0192                     	;# 
   893  0193                     	;# 
   894  0193                     	;# 
   895  0194                     	;# 
   896  0195                     	;# 
   897  0196                     	;# 
   898  0197                     	;# 
   899  0199                     	;# 
   900  0199                     	;# 
   901  0199                     	;# 
   902  019A                     	;# 
   903  019A                     	;# 
   904  019A                     	;# 
   905  019B                     	;# 
   906  019B                     	;# 
   907  019B                     	;# 
   908  019B                     	;# 
   909  019B                     	;# 
   910  019C                     	;# 
   911  019C                     	;# 
   912  019C                     	;# 
   913  019D                     	;# 
   914  019D                     	;# 
   915  019D                     	;# 
   916  019E                     	;# 
   917  019E                     	;# 
   918  019E                     	;# 
   919  019F                     	;# 
   920  019F                     	;# 
   921  019F                     	;# 
   922  019F                     	;# 
   923  019F                     	;# 
   924  020C                     	;# 
   925  020D                     	;# 
   926  020E                     	;# 
   927  020F                     	;# 
   928  0210                     	;# 
   929  0211                     	;# 
   930  0211                     	;# 
   931  0212                     	;# 
   932  0212                     	;# 
   933  0213                     	;# 
   934  0213                     	;# 
   935  0214                     	;# 
   936  0214                     	;# 
   937  0215                     	;# 
   938  0215                     	;# 
   939  0215                     	;# 
   940  0215                     	;# 
   941  0216                     	;# 
   942  0216                     	;# 
   943  0217                     	;# 
   944  0217                     	;# 
   945  028C                     	;# 
   946  028D                     	;# 
   947  028E                     	;# 
   948  028F                     	;# 
   949  0290                     	;# 
   950  0291                     	;# 
   951  0291                     	;# 
   952  0292                     	;# 
   953  0293                     	;# 
   954  0293                     	;# 
   955  0298                     	;# 
   956  0298                     	;# 
   957  0299                     	;# 
   958  029A                     	;# 
   959  029A                     	;# 
   960  029E                     	;# 
   961  030C                     	;# 
   962  030D                     	;# 
   963  030E                     	;# 
   964  030F                     	;# 
   965  0310                     	;# 
   966  038C                     	;# 
   967  038D                     	;# 
   968  038E                     	;# 
   969  038F                     	;# 
   970  0390                     	;# 
   971  0391                     	;# 
   972  0392                     	;# 
   973  0393                     	;# 
   974  0394                     	;# 
   975  0395                     	;# 
   976  0396                     	;# 
   977  0397                     	;# 
   978  0398                     	;# 
   979  0399                     	;# 
   980  039D                     	;# 
   981  039E                     	;# 
   982  039F                     	;# 
   983  0415                     	;# 
   984  0416                     	;# 
   985  0417                     	;# 
   986  041C                     	;# 
   987  041D                     	;# 
   988  041E                     	;# 
   989  0498                     	;# 
   990  0498                     	;# 
   991  0499                     	;# 
   992  049A                     	;# 
   993  049B                     	;# 
   994  049B                     	;# 
   995  049C                     	;# 
   996  049D                     	;# 
   997  049E                     	;# 
   998  049F                     	;# 
   999  0511                     	;# 
  1000  0515                     	;# 
  1001  0617                     	;# 
  1002  0618                     	;# 
  1003  0619                     	;# 
  1004  0619                     	;# 
  1005  061A                     	;# 
  1006  061B                     	;# 
  1007  061C                     	;# 
  1008  061C                     	;# 
  1009  0691                     	;# 
  1010  0692                     	;# 
  1011  0693                     	;# 
  1012  0694                     	;# 
  1013  0695                     	;# 
  1014  0696                     	;# 
  1015  0697                     	;# 
  1016  0698                     	;# 
  1017  0699                     	;# 
  1018  069A                     	;# 
  1019  069B                     	;# 
  1020  069C                     	;# 
  1021  069D                     	;# 
  1022  069E                     	;# 
  1023  069F                     	;# 
  1024  0E0F                     	;# 
  1025  0E10                     	;# 
  1026  0E11                     	;# 
  1027  0E12                     	;# 
  1028  0E13                     	;# 
  1029  0E14                     	;# 
  1030  0E15                     	;# 
  1031  0E17                     	;# 
  1032  0E20                     	;# 
  1033  0E21                     	;# 
  1034  0E22                     	;# 
  1035  0E24                     	;# 
  1036  0E25                     	;# 
  1037  0E28                     	;# 
  1038  0E29                     	;# 
  1039  0E2A                     	;# 
  1040  0E2B                     	;# 
  1041  0E90                     	;# 
  1042  0E91                     	;# 
  1043  0E92                     	;# 
  1044  0E93                     	;# 
  1045  0E94                     	;# 
  1046  0E95                     	;# 
  1047  0E96                     	;# 
  1048  0E97                     	;# 
  1049  0E98                     	;# 
  1050  0E99                     	;# 
  1051  0E9A                     	;# 
  1052  0E9B                     	;# 
  1053  0E9C                     	;# 
  1054  0E9D                     	;# 
  1055  0E9E                     	;# 
  1056  0E9F                     	;# 
  1057  0EA0                     	;# 
  1058  0EA1                     	;# 
  1059  0EA2                     	;# 
  1060  0EA3                     	;# 
  1061  0EA4                     	;# 
  1062  0EA5                     	;# 
  1063  0EA6                     	;# 
  1064  0EA7                     	;# 
  1065  0EA8                     	;# 
  1066  0EA9                     	;# 
  1067  0EAA                     	;# 
  1068  0EAB                     	;# 
  1069  0EAC                     	;# 
  1070  0EAD                     	;# 
  1071  0EAE                     	;# 
  1072  0EAF                     	;# 
  1073  0EB0                     	;# 
  1074  0EB1                     	;# 
  1075  0EB2                     	;# 
  1076  0F0F                     	;# 
  1077  0F10                     	;# 
  1078  0F11                     	;# 
  1079  0F12                     	;# 
  1080  0F13                     	;# 
  1081  0F14                     	;# 
  1082  0F15                     	;# 
  1083  0F16                     	;# 
  1084  0F17                     	;# 
  1085  0F18                     	;# 
  1086  0F19                     	;# 
  1087  0F1A                     	;# 
  1088  0F1B                     	;# 
  1089  0F1C                     	;# 
  1090  0F1D                     	;# 
  1091  0F1E                     	;# 
  1092  0F1F                     	;# 
  1093  0F20                     	;# 
  1094  0F21                     	;# 
  1095  0F22                     	;# 
  1096  0F23                     	;# 
  1097  0F24                     	;# 
  1098  0F25                     	;# 
  1099  0F26                     	;# 
  1100  0F27                     	;# 
  1101  0F28                     	;# 
  1102  0F29                     	;# 
  1103  0F2A                     	;# 
  1104  0F2B                     	;# 
  1105  0F2C                     	;# 
  1106  0F2D                     	;# 
  1107  0F2E                     	;# 
  1108  0F2F                     	;# 
  1109  0F30                     	;# 
  1110  0F31                     	;# 
  1111  0F32                     	;# 
  1112  0F33                     	;# 
  1113  0F34                     	;# 
  1114  0F35                     	;# 
  1115  0F36                     	;# 
  1116  0F37                     	;# 
  1117  0FE4                     	;# 
  1118  0FE5                     	;# 
  1119  0FE6                     	;# 
  1120  0FE7                     	;# 
  1121  0FE8                     	;# 
  1122  0FE9                     	;# 
  1123  0FEA                     	;# 
  1124  0FEB                     	;# 
  1125  0FED                     	;# 
  1126  0FEE                     	;# 
  1127  0FEF                     	;# 
  1128  0000                     	;# 
  1129  0001                     	;# 
  1130  0002                     	;# 
  1131  0003                     	;# 
  1132  0004                     	;# 
  1133  0005                     	;# 
  1134  0006                     	;# 
  1135  0007                     	;# 
  1136  0008                     	;# 
  1137  0009                     	;# 
  1138  000A                     	;# 
  1139  000B                     	;# 
  1140  000C                     	;# 
  1141  000D                     	;# 
  1142  000E                     	;# 
  1143  000F                     	;# 
  1144  0010                     	;# 
  1145  0011                     	;# 
  1146  0012                     	;# 
  1147  0013                     	;# 
  1148  0015                     	;# 
  1149  0016                     	;# 
  1150  0016                     	;# 
  1151  0017                     	;# 
  1152  0018                     	;# 
  1153  0019                     	;# 
  1154  001A                     	;# 
  1155  001B                     	;# 
  1156  001C                     	;# 
  1157  008C                     	;# 
  1158  008D                     	;# 
  1159  008E                     	;# 
  1160  008F                     	;# 
  1161  0090                     	;# 
  1162  0091                     	;# 
  1163  0092                     	;# 
  1164  0093                     	;# 
  1165  0095                     	;# 
  1166  0096                     	;# 
  1167  0097                     	;# 
  1168  0098                     	;# 
  1169  0099                     	;# 
  1170  009A                     	;# 
  1171  009B                     	;# 
  1172  009B                     	;# 
  1173  009C                     	;# 
  1174  009D                     	;# 
  1175  009E                     	;# 
  1176  009F                     	;# 
  1177  010C                     	;# 
  1178  010D                     	;# 
  1179  010E                     	;# 
  1180  010F                     	;# 
  1181  0110                     	;# 
  1182  0111                     	;# 
  1183  0112                     	;# 
  1184  0113                     	;# 
  1185  0114                     	;# 
  1186  0115                     	;# 
  1187  0116                     	;# 
  1188  0117                     	;# 
  1189  0118                     	;# 
  1190  0119                     	;# 
  1191  011A                     	;# 
  1192  011B                     	;# 
  1193  011B                     	;# 
  1194  011C                     	;# 
  1195  018C                     	;# 
  1196  018D                     	;# 
  1197  018E                     	;# 
  1198  018F                     	;# 
  1199  0190                     	;# 
  1200  0191                     	;# 
  1201  0191                     	;# 
  1202  0192                     	;# 
  1203  0193                     	;# 
  1204  0193                     	;# 
  1205  0194                     	;# 
  1206  0195                     	;# 
  1207  0196                     	;# 
  1208  0197                     	;# 
  1209  0199                     	;# 
  1210  0199                     	;# 
  1211  0199                     	;# 
  1212  019A                     	;# 
  1213  019A                     	;# 
  1214  019A                     	;# 
  1215  019B                     	;# 
  1216  019B                     	;# 
  1217  019B                     	;# 
  1218  019B                     	;# 
  1219  019B                     	;# 
  1220  019C                     	;# 
  1221  019C                     	;# 
  1222  019C                     	;# 
  1223  019D                     	;# 
  1224  019D                     	;# 
  1225  019D                     	;# 
  1226  019E                     	;# 
  1227  019E                     	;# 
  1228  019E                     	;# 
  1229  019F                     	;# 
  1230  019F                     	;# 
  1231  019F                     	;# 
  1232  019F                     	;# 
  1233  019F                     	;# 
  1234  020C                     	;# 
  1235  020D                     	;# 
  1236  020E                     	;# 
  1237  020F                     	;# 
  1238  0210                     	;# 
  1239  0211                     	;# 
  1240  0211                     	;# 
  1241  0212                     	;# 
  1242  0212                     	;# 
  1243  0213                     	;# 
  1244  0213                     	;# 
  1245  0214                     	;# 
  1246  0214                     	;# 
  1247  0215                     	;# 
  1248  0215                     	;# 
  1249  0215                     	;# 
  1250  0215                     	;# 
  1251  0216                     	;# 
  1252  0216                     	;# 
  1253  0217                     	;# 
  1254  0217                     	;# 
  1255  028C                     	;# 
  1256  028D                     	;# 
  1257  028E                     	;# 
  1258  028F                     	;# 
  1259  0290                     	;# 
  1260  0291                     	;# 
  1261  0291                     	;# 
  1262  0292                     	;# 
  1263  0293                     	;# 
  1264  0293                     	;# 
  1265  0298                     	;# 
  1266  0298                     	;# 
  1267  0299                     	;# 
  1268  029A                     	;# 
  1269  029A                     	;# 
  1270  029E                     	;# 
  1271  030C                     	;# 
  1272  030D                     	;# 
  1273  030E                     	;# 
  1274  030F                     	;# 
  1275  0310                     	;# 
  1276  038C                     	;# 
  1277  038D                     	;# 
  1278  038E                     	;# 
  1279  038F                     	;# 
  1280  0390                     	;# 
  1281  0391                     	;# 
  1282  0392                     	;# 
  1283  0393                     	;# 
  1284  0394                     	;# 
  1285  0395                     	;# 
  1286  0396                     	;# 
  1287  0397                     	;# 
  1288  0398                     	;# 
  1289  0399                     	;# 
  1290  039D                     	;# 
  1291  039E                     	;# 
  1292  039F                     	;# 
  1293  0415                     	;# 
  1294  0416                     	;# 
  1295  0417                     	;# 
  1296  041C                     	;# 
  1297  041D                     	;# 
  1298  041E                     	;# 
  1299  0498                     	;# 
  1300  0498                     	;# 
  1301  0499                     	;# 
  1302  049A                     	;# 
  1303  049B                     	;# 
  1304  049B                     	;# 
  1305  049C                     	;# 
  1306  049D                     	;# 
  1307  049E                     	;# 
  1308  049F                     	;# 
  1309  0511                     	;# 
  1310  0515                     	;# 
  1311  0617                     	;# 
  1312  0618                     	;# 
  1313  0619                     	;# 
  1314  0619                     	;# 
  1315  061A                     	;# 
  1316  061B                     	;# 
  1317  061C                     	;# 
  1318  061C                     	;# 
  1319  0691                     	;# 
  1320  0692                     	;# 
  1321  0693                     	;# 
  1322  0694                     	;# 
  1323  0695                     	;# 
  1324  0696                     	;# 
  1325  0697                     	;# 
  1326  0698                     	;# 
  1327  0699                     	;# 
  1328  069A                     	;# 
  1329  069B                     	;# 
  1330  069C                     	;# 
  1331  069D                     	;# 
  1332  069E                     	;# 
  1333  069F                     	;# 
  1334  0E0F                     	;# 
  1335  0E10                     	;# 
  1336  0E11                     	;# 
  1337  0E12                     	;# 
  1338  0E13                     	;# 
  1339  0E14                     	;# 
  1340  0E15                     	;# 
  1341  0E17                     	;# 
  1342  0E20                     	;# 
  1343  0E21                     	;# 
  1344  0E22                     	;# 
  1345  0E24                     	;# 
  1346  0E25                     	;# 
  1347  0E28                     	;# 
  1348  0E29                     	;# 
  1349  0E2A                     	;# 
  1350  0E2B                     	;# 
  1351  0E90                     	;# 
  1352  0E91                     	;# 
  1353  0E92                     	;# 
  1354  0E93                     	;# 
  1355  0E94                     	;# 
  1356  0E95                     	;# 
  1357  0E96                     	;# 
  1358  0E97                     	;# 
  1359  0E98                     	;# 
  1360  0E99                     	;# 
  1361  0E9A                     	;# 
  1362  0E9B                     	;# 
  1363  0E9C                     	;# 
  1364  0E9D                     	;# 
  1365  0E9E                     	;# 
  1366  0E9F                     	;# 
  1367  0EA0                     	;# 
  1368  0EA1                     	;# 
  1369  0EA2                     	;# 
  1370  0EA3                     	;# 
  1371  0EA4                     	;# 
  1372  0EA5                     	;# 
  1373  0EA6                     	;# 
  1374  0EA7                     	;# 
  1375  0EA8                     	;# 
  1376  0EA9                     	;# 
  1377  0EAA                     	;# 
  1378  0EAB                     	;# 
  1379  0EAC                     	;# 
  1380  0EAD                     	;# 
  1381  0EAE                     	;# 
  1382  0EAF                     	;# 
  1383  0EB0                     	;# 
  1384  0EB1                     	;# 
  1385  0EB2                     	;# 
  1386  0F0F                     	;# 
  1387  0F10                     	;# 
  1388  0F11                     	;# 
  1389  0F12                     	;# 
  1390  0F13                     	;# 
  1391  0F14                     	;# 
  1392  0F15                     	;# 
  1393  0F16                     	;# 
  1394  0F17                     	;# 
  1395  0F18                     	;# 
  1396  0F19                     	;# 
  1397  0F1A                     	;# 
  1398  0F1B                     	;# 
  1399  0F1C                     	;# 
  1400  0F1D                     	;# 
  1401  0F1E                     	;# 
  1402  0F1F                     	;# 
  1403  0F20                     	;# 
  1404  0F21                     	;# 
  1405  0F22                     	;# 
  1406  0F23                     	;# 
  1407  0F24                     	;# 
  1408  0F25                     	;# 
  1409  0F26                     	;# 
  1410  0F27                     	;# 
  1411  0F28                     	;# 
  1412  0F29                     	;# 
  1413  0F2A                     	;# 
  1414  0F2B                     	;# 
  1415  0F2C                     	;# 
  1416  0F2D                     	;# 
  1417  0F2E                     	;# 
  1418  0F2F                     	;# 
  1419  0F30                     	;# 
  1420  0F31                     	;# 
  1421  0F32                     	;# 
  1422  0F33                     	;# 
  1423  0F34                     	;# 
  1424  0F35                     	;# 
  1425  0F36                     	;# 
  1426  0F37                     	;# 
  1427  0FE4                     	;# 
  1428  0FE5                     	;# 
  1429  0FE6                     	;# 
  1430  0FE7                     	;# 
  1431  0FE8                     	;# 
  1432  0FE9                     	;# 
  1433  0FEA                     	;# 
  1434  0FEB                     	;# 
  1435  0FED                     	;# 
  1436  0FEE                     	;# 
  1437  0FEF                     	;# 
  1438  0000                     	;# 
  1439  0001                     	;# 
  1440  0002                     	;# 
  1441  0003                     	;# 
  1442  0004                     	;# 
  1443  0005                     	;# 
  1444  0006                     	;# 
  1445  0007                     	;# 
  1446  0008                     	;# 
  1447  0009                     	;# 
  1448  000A                     	;# 
  1449  000B                     	;# 
  1450  000C                     	;# 
  1451  000D                     	;# 
  1452  000E                     	;# 
  1453  000F                     	;# 
  1454  0010                     	;# 
  1455  0011                     	;# 
  1456  0012                     	;# 
  1457  0013                     	;# 
  1458  0015                     	;# 
  1459  0016                     	;# 
  1460  0016                     	;# 
  1461  0017                     	;# 
  1462  0018                     	;# 
  1463  0019                     	;# 
  1464  001A                     	;# 
  1465  001B                     	;# 
  1466  001C                     	;# 
  1467  008C                     	;# 
  1468  008D                     	;# 
  1469  008E                     	;# 
  1470  008F                     	;# 
  1471  0090                     	;# 
  1472  0091                     	;# 
  1473  0092                     	;# 
  1474  0093                     	;# 
  1475  0095                     	;# 
  1476  0096                     	;# 
  1477  0097                     	;# 
  1478  0098                     	;# 
  1479  0099                     	;# 
  1480  009A                     	;# 
  1481  009B                     	;# 
  1482  009B                     	;# 
  1483  009C                     	;# 
  1484  009D                     	;# 
  1485  009E                     	;# 
  1486  009F                     	;# 
  1487  010C                     	;# 
  1488  010D                     	;# 
  1489  010E                     	;# 
  1490  010F                     	;# 
  1491  0110                     	;# 
  1492  0111                     	;# 
  1493  0112                     	;# 
  1494  0113                     	;# 
  1495  0114                     	;# 
  1496  0115                     	;# 
  1497  0116                     	;# 
  1498  0117                     	;# 
  1499  0118                     	;# 
  1500  0119                     	;# 
  1501  011A                     	;# 
  1502  011B                     	;# 
  1503  011B                     	;# 
  1504  011C                     	;# 
  1505  018C                     	;# 
  1506  018D                     	;# 
  1507  018E                     	;# 
  1508  018F                     	;# 
  1509  0190                     	;# 
  1510  0191                     	;# 
  1511  0191                     	;# 
  1512  0192                     	;# 
  1513  0193                     	;# 
  1514  0193                     	;# 
  1515  0194                     	;# 
  1516  0195                     	;# 
  1517  0196                     	;# 
  1518  0197                     	;# 
  1519  0199                     	;# 
  1520  0199                     	;# 
  1521  0199                     	;# 
  1522  019A                     	;# 
  1523  019A                     	;# 
  1524  019A                     	;# 
  1525  019B                     	;# 
  1526  019B                     	;# 
  1527  019B                     	;# 
  1528  019B                     	;# 
  1529  019B                     	;# 
  1530  019C                     	;# 
  1531  019C                     	;# 
  1532  019C                     	;# 
  1533  019D                     	;# 
  1534  019D                     	;# 
  1535  019D                     	;# 
  1536  019E                     	;# 
  1537  019E                     	;# 
  1538  019E                     	;# 
  1539  019F                     	;# 
  1540  019F                     	;# 
  1541  019F                     	;# 
  1542  019F                     	;# 
  1543  019F                     	;# 
  1544  020C                     	;# 
  1545  020D                     	;# 
  1546  020E                     	;# 
  1547  020F                     	;# 
  1548  0210                     	;# 
  1549  0211                     	;# 
  1550  0211                     	;# 
  1551  0212                     	;# 
  1552  0212                     	;# 
  1553  0213                     	;# 
  1554  0213                     	;# 
  1555  0214                     	;# 
  1556  0214                     	;# 
  1557  0215                     	;# 
  1558  0215                     	;# 
  1559  0215                     	;# 
  1560  0215                     	;# 
  1561  0216                     	;# 
  1562  0216                     	;# 
  1563  0217                     	;# 
  1564  0217                     	;# 
  1565  028C                     	;# 
  1566  028D                     	;# 
  1567  028E                     	;# 
  1568  028F                     	;# 
  1569  0290                     	;# 
  1570  0291                     	;# 
  1571  0291                     	;# 
  1572  0292                     	;# 
  1573  0293                     	;# 
  1574  0293                     	;# 
  1575  0298                     	;# 
  1576  0298                     	;# 
  1577  0299                     	;# 
  1578  029A                     	;# 
  1579  029A                     	;# 
  1580  029E                     	;# 
  1581  030C                     	;# 
  1582  030D                     	;# 
  1583  030E                     	;# 
  1584  030F                     	;# 
  1585  0310                     	;# 
  1586  038C                     	;# 
  1587  038D                     	;# 
  1588  038E                     	;# 
  1589  038F                     	;# 
  1590  0390                     	;# 
  1591  0391                     	;# 
  1592  0392                     	;# 
  1593  0393                     	;# 
  1594  0394                     	;# 
  1595  0395                     	;# 
  1596  0396                     	;# 
  1597  0397                     	;# 
  1598  0398                     	;# 
  1599  0399                     	;# 
  1600  039D                     	;# 
  1601  039E                     	;# 
  1602  039F                     	;# 
  1603  0415                     	;# 
  1604  0416                     	;# 
  1605  0417                     	;# 
  1606  041C                     	;# 
  1607  041D                     	;# 
  1608  041E                     	;# 
  1609  0498                     	;# 
  1610  0498                     	;# 
  1611  0499                     	;# 
  1612  049A                     	;# 
  1613  049B                     	;# 
  1614  049B                     	;# 
  1615  049C                     	;# 
  1616  049D                     	;# 
  1617  049E                     	;# 
  1618  049F                     	;# 
  1619  0511                     	;# 
  1620  0515                     	;# 
  1621  0617                     	;# 
  1622  0618                     	;# 
  1623  0619                     	;# 
  1624  0619                     	;# 
  1625  061A                     	;# 
  1626  061B                     	;# 
  1627  061C                     	;# 
  1628  061C                     	;# 
  1629  0691                     	;# 
  1630  0692                     	;# 
  1631  0693                     	;# 
  1632  0694                     	;# 
  1633  0695                     	;# 
  1634  0696                     	;# 
  1635  0697                     	;# 
  1636  0698                     	;# 
  1637  0699                     	;# 
  1638  069A                     	;# 
  1639  069B                     	;# 
  1640  069C                     	;# 
  1641  069D                     	;# 
  1642  069E                     	;# 
  1643  069F                     	;# 
  1644  0E0F                     	;# 
  1645  0E10                     	;# 
  1646  0E11                     	;# 
  1647  0E12                     	;# 
  1648  0E13                     	;# 
  1649  0E14                     	;# 
  1650  0E15                     	;# 
  1651  0E17                     	;# 
  1652  0E20                     	;# 
  1653  0E21                     	;# 
  1654  0E22                     	;# 
  1655  0E24                     	;# 
  1656  0E25                     	;# 
  1657  0E28                     	;# 
  1658  0E29                     	;# 
  1659  0E2A                     	;# 
  1660  0E2B                     	;# 
  1661  0E90                     	;# 
  1662  0E91                     	;# 
  1663  0E92                     	;# 
  1664  0E93                     	;# 
  1665  0E94                     	;# 
  1666  0E95                     	;# 
  1667  0E96                     	;# 
  1668  0E97                     	;# 
  1669  0E98                     	;# 
  1670  0E99                     	;# 
  1671  0E9A                     	;# 
  1672  0E9B                     	;# 
  1673  0E9C                     	;# 
  1674  0E9D                     	;# 
  1675  0E9E                     	;# 
  1676  0E9F                     	;# 
  1677  0EA0                     	;# 
  1678  0EA1                     	;# 
  1679  0EA2                     	;# 
  1680  0EA3                     	;# 
  1681  0EA4                     	;# 
  1682  0EA5                     	;# 
  1683  0EA6                     	;# 
  1684  0EA7                     	;# 
  1685  0EA8                     	;# 
  1686  0EA9                     	;# 
  1687  0EAA                     	;# 
  1688  0EAB                     	;# 
  1689  0EAC                     	;# 
  1690  0EAD                     	;# 
  1691  0EAE                     	;# 
  1692  0EAF                     	;# 
  1693  0EB0                     	;# 
  1694  0EB1                     	;# 
  1695  0EB2                     	;# 
  1696  0F0F                     	;# 
  1697  0F10                     	;# 
  1698  0F11                     	;# 
  1699  0F12                     	;# 
  1700  0F13                     	;# 
  1701  0F14                     	;# 
  1702  0F15                     	;# 
  1703  0F16                     	;# 
  1704  0F17                     	;# 
  1705  0F18                     	;# 
  1706  0F19                     	;# 
  1707  0F1A                     	;# 
  1708  0F1B                     	;# 
  1709  0F1C                     	;# 
  1710  0F1D                     	;# 
  1711  0F1E                     	;# 
  1712  0F1F                     	;# 
  1713  0F20                     	;# 
  1714  0F21                     	;# 
  1715  0F22                     	;# 
  1716  0F23                     	;# 
  1717  0F24                     	;# 
  1718  0F25                     	;# 
  1719  0F26                     	;# 
  1720  0F27                     	;# 
  1721  0F28                     	;# 
  1722  0F29                     	;# 
  1723  0F2A                     	;# 
  1724  0F2B                     	;# 
  1725  0F2C                     	;# 
  1726  0F2D                     	;# 
  1727  0F2E                     	;# 
  1728  0F2F                     	;# 
  1729  0F30                     	;# 
  1730  0F31                     	;# 
  1731  0F32                     	;# 
  1732  0F33                     	;# 
  1733  0F34                     	;# 
  1734  0F35                     	;# 
  1735  0F36                     	;# 
  1736  0F37                     	;# 
  1737  0FE4                     	;# 
  1738  0FE5                     	;# 
  1739  0FE6                     	;# 
  1740  0FE7                     	;# 
  1741  0FE8                     	;# 
  1742  0FE9                     	;# 
  1743  0FEA                     	;# 
  1744  0FEB                     	;# 
  1745  0FED                     	;# 
  1746  0FEE                     	;# 
  1747  0FEF                     	;# 
  1748  0000                     	;# 
  1749  0001                     	;# 
  1750  0002                     	;# 
  1751  0003                     	;# 
  1752  0004                     	;# 
  1753  0005                     	;# 
  1754  0006                     	;# 
  1755  0007                     	;# 
  1756  0008                     	;# 
  1757  0009                     	;# 
  1758  000A                     	;# 
  1759  000B                     	;# 
  1760  000C                     	;# 
  1761  000D                     	;# 
  1762  000E                     	;# 
  1763  000F                     	;# 
  1764  0010                     	;# 
  1765  0011                     	;# 
  1766  0012                     	;# 
  1767  0013                     	;# 
  1768  0015                     	;# 
  1769  0016                     	;# 
  1770  0016                     	;# 
  1771  0017                     	;# 
  1772  0018                     	;# 
  1773  0019                     	;# 
  1774  001A                     	;# 
  1775  001B                     	;# 
  1776  001C                     	;# 
  1777  008C                     	;# 
  1778  008D                     	;# 
  1779  008E                     	;# 
  1780  008F                     	;# 
  1781  0090                     	;# 
  1782  0091                     	;# 
  1783  0092                     	;# 
  1784  0093                     	;# 
  1785  0095                     	;# 
  1786  0096                     	;# 
  1787  0097                     	;# 
  1788  0098                     	;# 
  1789  0099                     	;# 
  1790  009A                     	;# 
  1791  009B                     	;# 
  1792  009B                     	;# 
  1793  009C                     	;# 
  1794  009D                     	;# 
  1795  009E                     	;# 
  1796  009F                     	;# 
  1797  010C                     	;# 
  1798  010D                     	;# 
  1799  010E                     	;# 
  1800  010F                     	;# 
  1801  0110                     	;# 
  1802  0111                     	;# 
  1803  0112                     	;# 
  1804  0113                     	;# 
  1805  0114                     	;# 
  1806  0115                     	;# 
  1807  0116                     	;# 
  1808  0117                     	;# 
  1809  0118                     	;# 
  1810  0119                     	;# 
  1811  011A                     	;# 
  1812  011B                     	;# 
  1813  011B                     	;# 
  1814  011C                     	;# 
  1815  018C                     	;# 
  1816  018D                     	;# 
  1817  018E                     	;# 
  1818  018F                     	;# 
  1819  0190                     	;# 
  1820  0191                     	;# 
  1821  0191                     	;# 
  1822  0192                     	;# 
  1823  0193                     	;# 
  1824  0193                     	;# 
  1825  0194                     	;# 
  1826  0195                     	;# 
  1827  0196                     	;# 
  1828  0197                     	;# 
  1829  0199                     	;# 
  1830  0199                     	;# 
  1831  0199                     	;# 
  1832  019A                     	;# 
  1833  019A                     	;# 
  1834  019A                     	;# 
  1835  019B                     	;# 
  1836  019B                     	;# 
  1837  019B                     	;# 
  1838  019B                     	;# 
  1839  019B                     	;# 
  1840  019C                     	;# 
  1841  019C                     	;# 
  1842  019C                     	;# 
  1843  019D                     	;# 
  1844  019D                     	;# 
  1845  019D                     	;# 
  1846  019E                     	;# 
  1847  019E                     	;# 
  1848  019E                     	;# 
  1849  019F                     	;# 
  1850  019F                     	;# 
  1851  019F                     	;# 
  1852  019F                     	;# 
  1853  019F                     	;# 
  1854  020C                     	;# 
  1855  020D                     	;# 
  1856  020E                     	;# 
  1857  020F                     	;# 
  1858  0210                     	;# 
  1859  0211                     	;# 
  1860  0211                     	;# 
  1861  0212                     	;# 
  1862  0212                     	;# 
  1863  0213                     	;# 
  1864  0213                     	;# 
  1865  0214                     	;# 
  1866  0214                     	;# 
  1867  0215                     	;# 
  1868  0215                     	;# 
  1869  0215                     	;# 
  1870  0215                     	;# 
  1871  0216                     	;# 
  1872  0216                     	;# 
  1873  0217                     	;# 
  1874  0217                     	;# 
  1875  028C                     	;# 
  1876  028D                     	;# 
  1877  028E                     	;# 
  1878  028F                     	;# 
  1879  0290                     	;# 
  1880  0291                     	;# 
  1881  0291                     	;# 
  1882  0292                     	;# 
  1883  0293                     	;# 
  1884  0293                     	;# 
  1885  0298                     	;# 
  1886  0298                     	;# 
  1887  0299                     	;# 
  1888  029A                     	;# 
  1889  029A                     	;# 
  1890  029E                     	;# 
  1891  030C                     	;# 
  1892  030D                     	;# 
  1893  030E                     	;# 
  1894  030F                     	;# 
  1895  0310                     	;# 
  1896  038C                     	;# 
  1897  038D                     	;# 
  1898  038E                     	;# 
  1899  038F                     	;# 
  1900  0390                     	;# 
  1901  0391                     	;# 
  1902  0392                     	;# 
  1903  0393                     	;# 
  1904  0394                     	;# 
  1905  0395                     	;# 
  1906  0396                     	;# 
  1907  0397                     	;# 
  1908  0398                     	;# 
  1909  0399                     	;# 
  1910  039D                     	;# 
  1911  039E                     	;# 
  1912  039F                     	;# 
  1913  0415                     	;# 
  1914  0416                     	;# 
  1915  0417                     	;# 
  1916  041C                     	;# 
  1917  041D                     	;# 
  1918  041E                     	;# 
  1919  0498                     	;# 
  1920  0498                     	;# 
  1921  0499                     	;# 
  1922  049A                     	;# 
  1923  049B                     	;# 
  1924  049B                     	;# 
  1925  049C                     	;# 
  1926  049D                     	;# 
  1927  049E                     	;# 
  1928  049F                     	;# 
  1929  0511                     	;# 
  1930  0515                     	;# 
  1931  0617                     	;# 
  1932  0618                     	;# 
  1933  0619                     	;# 
  1934  0619                     	;# 
  1935  061A                     	;# 
  1936  061B                     	;# 
  1937  061C                     	;# 
  1938  061C                     	;# 
  1939  0691                     	;# 
  1940  0692                     	;# 
  1941  0693                     	;# 
  1942  0694                     	;# 
  1943  0695                     	;# 
  1944  0696                     	;# 
  1945  0697                     	;# 
  1946  0698                     	;# 
  1947  0699                     	;# 
  1948  069A                     	;# 
  1949  069B                     	;# 
  1950  069C                     	;# 
  1951  069D                     	;# 
  1952  069E                     	;# 
  1953  069F                     	;# 
  1954  0E0F                     	;# 
  1955  0E10                     	;# 
  1956  0E11                     	;# 
  1957  0E12                     	;# 
  1958  0E13                     	;# 
  1959  0E14                     	;# 
  1960  0E15                     	;# 
  1961  0E17                     	;# 
  1962  0E20                     	;# 
  1963  0E21                     	;# 
  1964  0E22                     	;# 
  1965  0E24                     	;# 
  1966  0E25                     	;# 
  1967  0E28                     	;# 
  1968  0E29                     	;# 
  1969  0E2A                     	;# 
  1970  0E2B                     	;# 
  1971  0E90                     	;# 
  1972  0E91                     	;# 
  1973  0E92                     	;# 
  1974  0E93                     	;# 
  1975  0E94                     	;# 
  1976  0E95                     	;# 
  1977  0E96                     	;# 
  1978  0E97                     	;# 
  1979  0E98                     	;# 
  1980  0E99                     	;# 
  1981  0E9A                     	;# 
  1982  0E9B                     	;# 
  1983  0E9C                     	;# 
  1984  0E9D                     	;# 
  1985  0E9E                     	;# 
  1986  0E9F                     	;# 
  1987  0EA0                     	;# 
  1988  0EA1                     	;# 
  1989  0EA2                     	;# 
  1990  0EA3                     	;# 
  1991  0EA4                     	;# 
  1992  0EA5                     	;# 
  1993  0EA6                     	;# 
  1994  0EA7                     	;# 
  1995  0EA8                     	;# 
  1996  0EA9                     	;# 
  1997  0EAA                     	;# 
  1998  0EAB                     	;# 
  1999  0EAC                     	;# 
  2000  0EAD                     	;# 
  2001  0EAE                     	;# 
  2002  0EAF                     	;# 
  2003  0EB0                     	;# 
  2004  0EB1                     	;# 
  2005  0EB2                     	;# 
  2006  0F0F                     	;# 
  2007  0F10                     	;# 
  2008  0F11                     	;# 
  2009  0F12                     	;# 
  2010  0F13                     	;# 
  2011  0F14                     	;# 
  2012  0F15                     	;# 
  2013  0F16                     	;# 
  2014  0F17                     	;# 
  2015  0F18                     	;# 
  2016  0F19                     	;# 
  2017  0F1A                     	;# 
  2018  0F1B                     	;# 
  2019  0F1C                     	;# 
  2020  0F1D                     	;# 
  2021  0F1E                     	;# 
  2022  0F1F                     	;# 
  2023  0F20                     	;# 
  2024  0F21                     	;# 
  2025  0F22                     	;# 
  2026  0F23                     	;# 
  2027  0F24                     	;# 
  2028  0F25                     	;# 
  2029  0F26                     	;# 
  2030  0F27                     	;# 
  2031  0F28                     	;# 
  2032  0F29                     	;# 
  2033  0F2A                     	;# 
  2034  0F2B                     	;# 
  2035  0F2C                     	;# 
  2036  0F2D                     	;# 
  2037  0F2E                     	;# 
  2038  0F2F                     	;# 
  2039  0F30                     	;# 
  2040  0F31                     	;# 
  2041  0F32                     	;# 
  2042  0F33                     	;# 
  2043  0F34                     	;# 
  2044  0F35                     	;# 
  2045  0F36                     	;# 
  2046  0F37                     	;# 
  2047  0FE4                     	;# 
  2048  0FE5                     	;# 
  2049  0FE6                     	;# 
  2050  0FE7                     	;# 
  2051  0FE8                     	;# 
  2052  0FE9                     	;# 
  2053  0FEA                     	;# 
  2054  0FEB                     	;# 
  2055  0FED                     	;# 
  2056  0FEE                     	;# 
  2057  0FEF                     	;_messageBuffer
  2058                           
  2059                           	psect	idataBANK3
  2060  32CC                     __pidataBANK3:	
  2061                           
  2062                           ;initializer for stoa@F1174
  2063  32CC  3428               	retlw	40
  2064  32CD  346E               	retlw	110
  2065  32CE  3475               	retlw	117
  2066  32CF  346C               	retlw	108
  2067  32D0  346C               	retlw	108
  2068  32D1  3429               	retlw	41
  2069  32D2  3400               	retlw	0
  2070                           
  2071                           	psect	stringtext1
  2072  39C4                     __pstringtext1:	
  2073  39C4                     _OCD_threshold_setting:	
  2074  39C4  3411               	retlw	17
  2075  39C5  3400               	retlw	0
  2076  39C6  3416               	retlw	22
  2077  39C7  3400               	retlw	0
  2078  39C8  341C               	retlw	28
  2079  39C9  3400               	retlw	0
  2080  39CA  3421               	retlw	33
  2081  39CB  3400               	retlw	0
  2082  39CC  3427               	retlw	39
  2083  39CD  3400               	retlw	0
  2084  39CE  342C               	retlw	44
  2085  39CF  3400               	retlw	0
  2086  39D0  3432               	retlw	50
  2087  39D1  3400               	retlw	0
  2088  39D2  3438               	retlw	56
  2089  39D3  3400               	retlw	0
  2090  39D4  343D               	retlw	61
  2091  39D5  3400               	retlw	0
  2092  39D6  3443               	retlw	67
  2093  39D7  3400               	retlw	0
  2094  39D8  3448               	retlw	72
  2095  39D9  3400               	retlw	0
  2096  39DA  344E               	retlw	78
  2097  39DB  3400               	retlw	0
  2098  39DC  3453               	retlw	83
  2099  39DD  3400               	retlw	0
  2100  39DE  3459               	retlw	89
  2101  39DF  3400               	retlw	0
  2102  39E0  345E               	retlw	94
  2103  39E1  3400               	retlw	0
  2104  39E2  3464               	retlw	100
  2105  39E3  3400               	retlw	0
  2106  39E4                     __end_of_OCD_threshold_setting:	
  2107                           
  2108                           	psect	stringtext2
  2109  3AD8                     __pstringtext2:	
  2110  3AD8                     _OCD_delay_setting:	
  2111  3AD8  3408               	retlw	8
  2112  3AD9  3400               	retlw	0
  2113  3ADA  3414               	retlw	20
  2114  3ADB  3400               	retlw	0
  2115  3ADC  3428               	retlw	40
  2116  3ADD  3400               	retlw	0
  2117  3ADE  3450               	retlw	80
  2118  3ADF  3400               	retlw	0
  2119  3AE0  34A0               	retlw	160
  2120  3AE1  3400               	retlw	0
  2121  3AE2  3440               	retlw	64
  2122  3AE3  3401               	retlw	1
  2123  3AE4  3480               	retlw	128
  2124  3AE5  3402               	retlw	2
  2125  3AE6  3400               	retlw	0
  2126  3AE7  3405               	retlw	5
  2127  3AE8                     __end_of_OCD_delay_setting:	
  2128                           
  2129                           	psect	stringtext3
  2130  3AE8                     __pstringtext3:	
  2131  3AE8                     _SCD_threshold_setting:	
  2132  3AE8  342C               	retlw	44
  2133  3AE9  3400               	retlw	0
  2134  3AEA  3443               	retlw	67
  2135  3AEB  3400               	retlw	0
  2136  3AEC  3459               	retlw	89
  2137  3AED  3400               	retlw	0
  2138  3AEE  346F               	retlw	111
  2139  3AEF  3400               	retlw	0
  2140  3AF0  3485               	retlw	133
  2141  3AF1  3400               	retlw	0
  2142  3AF2  349B               	retlw	155
  2143  3AF3  3400               	retlw	0
  2144  3AF4  34B2               	retlw	178
  2145  3AF5  3400               	retlw	0
  2146  3AF6  34C8               	retlw	200
  2147  3AF7  3400               	retlw	0
  2148  3AF8                     __end_of_SCD_threshold_setting:	
  2149                           
  2150                           	psect	stringtext4
  2151  3AF8                     __pstringtext4:	
  2152  3AF8                     _OV_delay_setting:	
  2153  3AF8  3401               	retlw	1
  2154  3AF9  3400               	retlw	0
  2155  3AFA  3402               	retlw	2
  2156  3AFB  3400               	retlw	0
  2157  3AFC  3404               	retlw	4
  2158  3AFD  3400               	retlw	0
  2159  3AFE  3408               	retlw	8
  2160  3AFF  3400               	retlw	0
  2161  3B00                     __end_of_OV_delay_setting:	
  2162                           
  2163                           	psect	stringtext5
  2164  3B00                     __pstringtext5:	
  2165  3B00                     _UV_delay_setting:	
  2166  3B00  3401               	retlw	1
  2167  3B01  3400               	retlw	0
  2168  3B02  3404               	retlw	4
  2169  3B03  3400               	retlw	0
  2170  3B04  3408               	retlw	8
  2171  3B05  3400               	retlw	0
  2172  3B06  3410               	retlw	16
  2173  3B07  3400               	retlw	0
  2174  3B08                     __end_of_UV_delay_setting:	
  2175                           
  2176                           	psect	stringtext6
  2177  3B08                     __pstringtext6:	
  2178  3B08                     _SCD_delay_setting:	
  2179  3B08  3446               	retlw	70
  2180  3B09  3400               	retlw	0
  2181  3B0A  3464               	retlw	100
  2182  3B0B  3400               	retlw	0
  2183  3B0C  34C8               	retlw	200
  2184  3B0D  3400               	retlw	0
  2185  3B0E  3490               	retlw	144
  2186  3B0F  3401               	retlw	1
  2187  3B10                     __end_of_SCD_delay_setting:	
  2188                           
  2189                           	psect	stringtext7
  2190  3800                     __pstringtext7:	
  2191  3800                     _ATmega328_address:	
  2192  3800  3402               	retlw	2
  2193  3801  3400               	retlw	0
  2194  3802                     __end_of_ATmega328_address:	
  2195  0016                     _TMR1	set	22
  2196  000B                     _INTCONbits	set	11
  2197  0018                     _T1CONbits	set	24
  2198  0011                     _PIR1bits	set	17
  2199  0090                     _TRISEbits	set	144
  2200  008C                     _TRISAbits	set	140
  2201  008E                     _TRISCbits	set	142
  2202  008D                     _TRISBbits	set	141
  2203  0091                     _PIE1bits	set	145
  2204  0476                     _TRISC6	set	1142
  2205  0477                     _TRISC7	set	1143
  2206  04CF                     _SPLLEN	set	1231
  2207  04CE                     _IRCF3	set	1230
  2208  04CD                     _IRCF2	set	1229
  2209  04CC                     _IRCF1	set	1228
  2210  04CB                     _IRCF0	set	1227
  2211  04C9                     _SCS1	set	1225
  2212  04C8                     _SCS0	set	1224
  2213  0110                     _LATEbits	set	272
  2214  010C                     _LATAbits	set	268
  2215  019A                     _TX1REG	set	410
  2216  0199                     _RC1REG	set	409
  2217  019D                     _RC1STAbits	set	413
  2218  019B                     _SPBRG	set	411
  2219  018E                     _ANSELCbits	set	398
  2220  018D                     _ANSELBbits	set	397
  2221  0CF5                     _TXEN	set	3317
  2222  0CEC                     _CREN	set	3308
  2223  0CEF                     _SPEN	set	3311
  2224  0CF4                     _SYNC	set	3316
  2225  0CF2                     _BRGH	set	3314
  2226  0216                     _SSPCON2bits	set	534
  2227  0211                     _SSPBUF	set	529
  2228  0212                     _SSPADD	set	530
  2229  0215                     _SSPCONbits	set	533
  2230  0E24                     _RXPPSbits	set	3620
  2231  0E20                     _SSPCLKPPSbits	set	3616
  2232  0E21                     _SSPDATPPSbits	set	3617
  2233  0E0F                     _PPSLOCKbits	set	3599
  2234  0E0F                     _PPSLOCK	set	3599
  2235  0E9A                     _RB2PPSbits	set	3738
  2236  0EA5                     _RC5PPSbits	set	3749
  2237  0EA4                     _RC4PPSbits	set	3748
  2238  3802                     STR_8:	
  2239  3802  3453               	retlw	83	;'S'
  2240  3803  3465               	retlw	101	;'e'
  2241  3804  3474               	retlw	116	;'t'
  2242  3805  3420               	retlw	32	;' '
  2243  3806  344F               	retlw	79	;'O'
  2244  3807  3476               	retlw	118	;'v'
  2245  3808  3465               	retlw	101	;'e'
  2246  3809  3472               	retlw	114	;'r'
  2247  380A  342D               	retlw	45	;'-'
  2248  380B  3463               	retlw	99	;'c'
  2249  380C  3475               	retlw	117	;'u'
  2250  380D  3472               	retlw	114	;'r'
  2251  380E  3472               	retlw	114	;'r'
  2252  380F  3465               	retlw	101	;'e'
  2253  3810  346E               	retlw	110	;'n'
  2254  3811  3474               	retlw	116	;'t'
  2255  3812  3420               	retlw	32	;' '
  2256  3813  3464               	retlw	100	;'d'
  2257  3814  3469               	retlw	105	;'i'
  2258  3815  3473               	retlw	115	;'s'
  2259  3816  3463               	retlw	99	;'c'
  2260  3817  3468               	retlw	104	;'h'
  2261  3818  3461               	retlw	97	;'a'
  2262  3819  3472               	retlw	114	;'r'
  2263  381A  3467               	retlw	103	;'g'
  2264  381B  3465               	retlw	101	;'e'
  2265  381C  3420               	retlw	32	;' '
  2266  381D  3470               	retlw	112	;'p'
  2267  381E  3472               	retlw	114	;'r'
  2268  381F  346F               	retlw	111	;'o'
  2269  3820  3474               	retlw	116	;'t'
  2270  3821  3465               	retlw	101	;'e'
  2271  3822  3463               	retlw	99	;'c'
  2272  3823  3474               	retlw	116	;'t'
  2273  3824  3469               	retlw	105	;'i'
  2274  3825  346F               	retlw	111	;'o'
  2275  3826  346E               	retlw	110	;'n'
  2276  3827  3420               	retlw	32	;' '
  2277  3828  3420               	retlw	32	;' '
  2278  3829  3466               	retlw	102	;'f'
  2279  382A  346F               	retlw	111	;'o'
  2280  382B  3472               	retlw	114	;'r'
  2281  382C  3420               	retlw	32	;' '
  2282  382D  3441               	retlw	65	;'A'
  2283  382E  3446               	retlw	70	;'F'
  2284  382F  3445               	retlw	69	;'E'
  2285  3830  343A               	retlw	58	;':'
  2286  3831  3420               	retlw	32	;' '
  2287  3832  3425               	retlw	37	;'%'
  2288  3833  346C               	retlw	108	;'l'
  2289  3834  3475               	retlw	117	;'u'
  2290  3835  3420               	retlw	32	;' '
  2291  3836  346D               	retlw	109	;'m'
  2292  3837  3441               	retlw	65	;'A'
  2293  3838  340A               	retlw	10
  2294  3839  340D               	retlw	13
  2295  383A  3400               	retlw	0
  2296                           
  2297                           	psect	stringtext8
  2298  383B                     __pstringtext8:	
  2299  383B                     STR_4:	
  2300  383B  3441               	retlw	65	;'A'
  2301  383C  3474               	retlw	116	;'t'
  2302  383D  3474               	retlw	116	;'t'
  2303  383E  3465               	retlw	101	;'e'
  2304  383F  346D               	retlw	109	;'m'
  2305  3840  3470               	retlw	112	;'p'
  2306  3841  3474               	retlw	116	;'t'
  2307  3842  3420               	retlw	32	;' '
  2308  3843  3474               	retlw	116	;'t'
  2309  3844  346F               	retlw	111	;'o'
  2310  3845  3420               	retlw	32	;' '
  2311  3846  3473               	retlw	115	;'s'
  2312  3847  3465               	retlw	101	;'e'
  2313  3848  3474               	retlw	116	;'t'
  2314  3849  3420               	retlw	32	;' '
  2315  384A  3469               	retlw	105	;'i'
  2316  384B  346E               	retlw	110	;'n'
  2317  384C  3469               	retlw	105	;'i'
  2318  384D  3474               	retlw	116	;'t'
  2319  384E  3469               	retlw	105	;'i'
  2320  384F  3461               	retlw	97	;'a'
  2321  3850  346C               	retlw	108	;'l'
  2322  3851  3420               	retlw	32	;' '
  2323  3852  3473               	retlw	115	;'s'
  2324  3853  3479               	retlw	121	;'y'
  2325  3854  3473               	retlw	115	;'s'
  2326  3855  3474               	retlw	116	;'t'
  2327  3856  3465               	retlw	101	;'e'
  2328  3857  346D               	retlw	109	;'m'
  2329  3858  3420               	retlw	32	;' '
  2330  3859  3470               	retlw	112	;'p'
  2331  385A  3461               	retlw	97	;'a'
  2332  385B  3472               	retlw	114	;'r'
  2333  385C  3461               	retlw	97	;'a'
  2334  385D  346D               	retlw	109	;'m'
  2335  385E  3465               	retlw	101	;'e'
  2336  385F  3474               	retlw	116	;'t'
  2337  3860  3465               	retlw	101	;'e'
  2338  3861  3472               	retlw	114	;'r'
  2339  3862  3473               	retlw	115	;'s'
  2340  3863  3420               	retlw	32	;' '
  2341  3864  3474               	retlw	116	;'t'
  2342  3865  346F               	retlw	111	;'o'
  2343  3866  3420               	retlw	32	;' '
  2344  3867  3441               	retlw	65	;'A'
  2345  3868  3446               	retlw	70	;'F'
  2346  3869  3445               	retlw	69	;'E'
  2347  386A  342E               	retlw	46	;'.'
  2348  386B  342E               	retlw	46	;'.'
  2349  386C  342E               	retlw	46	;'.'
  2350  386D  340A               	retlw	10
  2351  386E  340D               	retlw	13
  2352  386F  3400               	retlw	0
  2353                           
  2354                           	psect	stringtext9
  2355  3870                     __pstringtext9:	
  2356  3870                     STR_2:	
  2357  3870  3443               	retlw	67	;'C'
  2358  3871  346F               	retlw	111	;'o'
  2359  3872  346D               	retlw	109	;'m'
  2360  3873  346D               	retlw	109	;'m'
  2361  3874  3475               	retlw	117	;'u'
  2362  3875  346E               	retlw	110	;'n'
  2363  3876  3469               	retlw	105	;'i'
  2364  3877  3463               	retlw	99	;'c'
  2365  3878  3461               	retlw	97	;'a'
  2366  3879  3474               	retlw	116	;'t'
  2367  387A  3469               	retlw	105	;'i'
  2368  387B  346F               	retlw	111	;'o'
  2369  387C  346E               	retlw	110	;'n'
  2370  387D  3420               	retlw	32	;' '
  2371  387E  3477               	retlw	119	;'w'
  2372  387F  3469               	retlw	105	;'i'
  2373  3880  3474               	retlw	116	;'t'
  2374  3881  3468               	retlw	104	;'h'
  2375  3882  3420               	retlw	32	;' '
  2376  3883  3442               	retlw	66	;'B'
  2377  3884  3451               	retlw	81	;'Q'
  2378  3885  3437               	retlw	55	;'7'
  2379  3886  3436               	retlw	54	;'6'
  2380  3887  3439               	retlw	57	;'9'
  2381  3888  3432               	retlw	50	;'2'
  2382  3889  3430               	retlw	48	;'0'
  2383  388A  3420               	retlw	32	;' '
  2384  388B  3441               	retlw	65	;'A'
  2385  388C  3446               	retlw	70	;'F'
  2386  388D  3445               	retlw	69	;'E'
  2387  388E  3420               	retlw	32	;' '
  2388  388F  3465               	retlw	101	;'e'
  2389  3890  3473               	retlw	115	;'s'
  2390  3891  3474               	retlw	116	;'t'
  2391  3892  3461               	retlw	97	;'a'
  2392  3893  3462               	retlw	98	;'b'
  2393  3894  346C               	retlw	108	;'l'
  2394  3895  3469               	retlw	105	;'i'
  2395  3896  3473               	retlw	115	;'s'
  2396  3897  3468               	retlw	104	;'h'
  2397  3898  3465               	retlw	101	;'e'
  2398  3899  3464               	retlw	100	;'d'
  2399  389A  3421               	retlw	33	;'!'
  2400  389B  340A               	retlw	10
  2401  389C  340D               	retlw	13
  2402  389D  3400               	retlw	0
  2403                           
  2404                           	psect	stringtext10
  2405  389E                     __pstringtext10:	
  2406  389E                     STR_10:	
  2407  389E  344E               	retlw	78	;'N'
  2408  389F  346F               	retlw	111	;'o'
  2409  38A0  3477               	retlw	119	;'w'
  2410  38A1  3420               	retlw	32	;' '
  2411  38A2  3472               	retlw	114	;'r'
  2412  38A3  3465               	retlw	101	;'e'
  2413  38A4  3461               	retlw	97	;'a'
  2414  38A5  3464               	retlw	100	;'d'
  2415  38A6  3469               	retlw	105	;'i'
  2416  38A7  346E               	retlw	110	;'n'
  2417  38A8  3467               	retlw	103	;'g'
  2418  38A9  3420               	retlw	32	;' '
  2419  38AA  3441               	retlw	65	;'A'
  2420  38AB  3446               	retlw	70	;'F'
  2421  38AC  3445               	retlw	69	;'E'
  2422  38AD  3420               	retlw	32	;' '
  2423  38AE  3464               	retlw	100	;'d'
  2424  38AF  3461               	retlw	97	;'a'
  2425  38B0  3474               	retlw	116	;'t'
  2426  38B1  3461               	retlw	97	;'a'
  2427  38B2  3420               	retlw	32	;' '
  2428  38B3  3461               	retlw	97	;'a'
  2429  38B4  3474               	retlw	116	;'t'
  2430  38B5  3420               	retlw	32	;' '
  2431  38B6  3472               	retlw	114	;'r'
  2432  38B7  3465               	retlw	101	;'e'
  2433  38B8  3467               	retlw	103	;'g'
  2434  38B9  3475               	retlw	117	;'u'
  2435  38BA  346C               	retlw	108	;'l'
  2436  38BB  3461               	retlw	97	;'a'
  2437  38BC  3472               	retlw	114	;'r'
  2438  38BD  3420               	retlw	32	;' '
  2439  38BE  3469               	retlw	105	;'i'
  2440  38BF  346E               	retlw	110	;'n'
  2441  38C0  3474               	retlw	116	;'t'
  2442  38C1  3465               	retlw	101	;'e'
  2443  38C2  3472               	retlw	114	;'r'
  2444  38C3  3476               	retlw	118	;'v'
  2445  38C4  3461               	retlw	97	;'a'
  2446  38C5  346C               	retlw	108	;'l'
  2447  38C6  3473               	retlw	115	;'s'
  2448  38C7  342E               	retlw	46	;'.'
  2449  38C8  340A               	retlw	10
  2450  38C9  340D               	retlw	13
  2451  38CA  3400               	retlw	0
  2452                           
  2453                           	psect	stringtext11
  2454  38CB                     __pstringtext11:	
  2455  38CB                     STR_7:	
  2456  38CB  3453               	retlw	83	;'S'
  2457  38CC  3465               	retlw	101	;'e'
  2458  38CD  3474               	retlw	116	;'t'
  2459  38CE  3420               	retlw	32	;' '
  2460  38CF  3473               	retlw	115	;'s'
  2461  38D0  3468               	retlw	104	;'h'
  2462  38D1  346F               	retlw	111	;'o'
  2463  38D2  3472               	retlw	114	;'r'
  2464  38D3  3474               	retlw	116	;'t'
  2465  38D4  3420               	retlw	32	;' '
  2466  38D5  3463               	retlw	99	;'c'
  2467  38D6  3469               	retlw	105	;'i'
  2468  38D7  3472               	retlw	114	;'r'
  2469  38D8  3463               	retlw	99	;'c'
  2470  38D9  3475               	retlw	117	;'u'
  2471  38DA  3469               	retlw	105	;'i'
  2472  38DB  3474               	retlw	116	;'t'
  2473  38DC  3420               	retlw	32	;' '
  2474  38DD  3463               	retlw	99	;'c'
  2475  38DE  3475               	retlw	117	;'u'
  2476  38DF  3472               	retlw	114	;'r'
  2477  38E0  3472               	retlw	114	;'r'
  2478  38E1  3465               	retlw	101	;'e'
  2479  38E2  346E               	retlw	110	;'n'
  2480  38E3  3474               	retlw	116	;'t'
  2481  38E4  3420               	retlw	32	;' '
  2482  38E5  3466               	retlw	102	;'f'
  2483  38E6  346F               	retlw	111	;'o'
  2484  38E7  3472               	retlw	114	;'r'
  2485  38E8  3420               	retlw	32	;' '
  2486  38E9  3441               	retlw	65	;'A'
  2487  38EA  3446               	retlw	70	;'F'
  2488  38EB  3445               	retlw	69	;'E'
  2489  38EC  343A               	retlw	58	;':'
  2490  38ED  3420               	retlw	32	;' '
  2491  38EE  3425               	retlw	37	;'%'
  2492  38EF  346C               	retlw	108	;'l'
  2493  38F0  3475               	retlw	117	;'u'
  2494  38F1  3420               	retlw	32	;' '
  2495  38F2  346D               	retlw	109	;'m'
  2496  38F3  3441               	retlw	65	;'A'
  2497  38F4  340A               	retlw	10
  2498  38F5  340D               	retlw	13
  2499  38F6  3400               	retlw	0
  2500                           
  2501                           	psect	stringtext12
  2502  38F7                     __pstringtext12:	
  2503  38F7                     STR_3:	
  2504  38F7  344F               	retlw	79	;'O'
  2505  38F8  3462               	retlw	98	;'b'
  2506  38F9  3474               	retlw	116	;'t'
  2507  38FA  3461               	retlw	97	;'a'
  2508  38FB  3469               	retlw	105	;'i'
  2509  38FC  346E               	retlw	110	;'n'
  2510  38FD  3465               	retlw	101	;'e'
  2511  38FE  3464               	retlw	100	;'d'
  2512  38FF  3420               	retlw	32	;' '
  2513  3900  3461               	retlw	97	;'a'
  2514  3901  3464               	retlw	100	;'d'
  2515  3902  3463               	retlw	99	;'c'
  2516  3903  344F               	retlw	79	;'O'
  2517  3904  3466               	retlw	102	;'f'
  2518  3905  3466               	retlw	102	;'f'
  2519  3906  3473               	retlw	115	;'s'
  2520  3907  3465               	retlw	101	;'e'
  2521  3908  3474               	retlw	116	;'t'
  2522  3909  3420               	retlw	32	;' '
  2523  390A  343D               	retlw	61	;'='
  2524  390B  3420               	retlw	32	;' '
  2525  390C  3425               	retlw	37	;'%'
  2526  390D  3469               	retlw	105	;'i'
  2527  390E  3420               	retlw	32	;' '
  2528  390F  3461               	retlw	97	;'a'
  2529  3910  346E               	retlw	110	;'n'
  2530  3911  3464               	retlw	100	;'d'
  2531  3912  3420               	retlw	32	;' '
  2532  3913  3461               	retlw	97	;'a'
  2533  3914  3464               	retlw	100	;'d'
  2534  3915  3463               	retlw	99	;'c'
  2535  3916  3447               	retlw	71	;'G'
  2536  3917  3461               	retlw	97	;'a'
  2537  3918  3469               	retlw	105	;'i'
  2538  3919  346E               	retlw	110	;'n'
  2539  391A  3420               	retlw	32	;' '
  2540  391B  343D               	retlw	61	;'='
  2541  391C  3420               	retlw	32	;' '
  2542  391D  3425               	retlw	37	;'%'
  2543  391E  3469               	retlw	105	;'i'
  2544  391F  340A               	retlw	10
  2545  3920  340D               	retlw	13
  2546  3921  3400               	retlw	0
  2547                           
  2548                           	psect	stringtext13
  2549  3922                     __pstringtext13:	
  2550  3922                     STR_9:	
  2551  3922  3449               	retlw	73	;'I'
  2552  3923  346E               	retlw	110	;'n'
  2553  3924  3469               	retlw	105	;'i'
  2554  3925  3474               	retlw	116	;'t'
  2555  3926  3469               	retlw	105	;'i'
  2556  3927  3461               	retlw	97	;'a'
  2557  3928  346C               	retlw	108	;'l'
  2558  3929  3420               	retlw	32	;' '
  2559  392A  3470               	retlw	112	;'p'
  2560  392B  3461               	retlw	97	;'a'
  2561  392C  3472               	retlw	114	;'r'
  2562  392D  3461               	retlw	97	;'a'
  2563  392E  346D               	retlw	109	;'m'
  2564  392F  3465               	retlw	101	;'e'
  2565  3930  3474               	retlw	116	;'t'
  2566  3931  3465               	retlw	101	;'e'
  2567  3932  3472               	retlw	114	;'r'
  2568  3933  3473               	retlw	115	;'s'
  2569  3934  3420               	retlw	32	;' '
  2570  3935  3466               	retlw	102	;'f'
  2571  3936  346F               	retlw	111	;'o'
  2572  3937  3472               	retlw	114	;'r'
  2573  3938  3420               	retlw	32	;' '
  2574  3939  3442               	retlw	66	;'B'
  2575  393A  3451               	retlw	81	;'Q'
  2576  393B  3437               	retlw	55	;'7'
  2577  393C  3436               	retlw	54	;'6'
  2578  393D  3439               	retlw	57	;'9'
  2579  393E  3432               	retlw	50	;'2'
  2580  393F  3430               	retlw	48	;'0'
  2581  3940  3420               	retlw	32	;' '
  2582  3941  3441               	retlw	65	;'A'
  2583  3942  3446               	retlw	70	;'F'
  2584  3943  3445               	retlw	69	;'E'
  2585  3944  3420               	retlw	32	;' '
  2586  3945  3473               	retlw	115	;'s'
  2587  3946  3465               	retlw	101	;'e'
  2588  3947  3474               	retlw	116	;'t'
  2589  3948  3421               	retlw	33	;'!'
  2590  3949  340A               	retlw	10
  2591  394A  340D               	retlw	13
  2592  394B  3400               	retlw	0
  2593                           
  2594                           	psect	stringtext14
  2595  394C                     __pstringtext14:	
  2596  394C                     STR_6:	
  2597  394C  3443               	retlw	67	;'C'
  2598  394D  3475               	retlw	117	;'u'
  2599  394E  3472               	retlw	114	;'r'
  2600  394F  3472               	retlw	114	;'r'
  2601  3950  3465               	retlw	101	;'e'
  2602  3951  346E               	retlw	110	;'n'
  2603  3952  3474               	retlw	116	;'t'
  2604  3953  3420               	retlw	32	;' '
  2605  3954  3473               	retlw	115	;'s'
  2606  3955  3465               	retlw	101	;'e'
  2607  3956  346E               	retlw	110	;'n'
  2608  3957  3473               	retlw	115	;'s'
  2609  3958  3465               	retlw	101	;'e'
  2610  3959  3420               	retlw	32	;' '
  2611  395A  3472               	retlw	114	;'r'
  2612  395B  3465               	retlw	101	;'e'
  2613  395C  3473               	retlw	115	;'s'
  2614  395D  3469               	retlw	105	;'i'
  2615  395E  3473               	retlw	115	;'s'
  2616  395F  3474               	retlw	116	;'t'
  2617  3960  346F               	retlw	111	;'o'
  2618  3961  3472               	retlw	114	;'r'
  2619  3962  3420               	retlw	32	;' '
  2620  3963  3476               	retlw	118	;'v'
  2621  3964  3461               	retlw	97	;'a'
  2622  3965  346C               	retlw	108	;'l'
  2623  3966  3475               	retlw	117	;'u'
  2624  3967  3465               	retlw	101	;'e'
  2625  3968  343A               	retlw	58	;':'
  2626  3969  3420               	retlw	32	;' '
  2627  396A  3425               	retlw	37	;'%'
  2628  396B  342E               	retlw	46	;'.'
  2629  396C  3434               	retlw	52	;'4'
  2630  396D  3466               	retlw	102	;'f'
  2631  396E  3420               	retlw	32	;' '
  2632  396F  346F               	retlw	111	;'o'
  2633  3970  3468               	retlw	104	;'h'
  2634  3971  346D               	retlw	109	;'m'
  2635  3972  3473               	retlw	115	;'s'
  2636  3973  340A               	retlw	10
  2637  3974  340D               	retlw	13
  2638  3975  3400               	retlw	0
  2639                           
  2640                           	psect	stringtext15
  2641  3976                     __pstringtext15:	
  2642  3976                     STR_1:	
  2643  3976  3441               	retlw	65	;'A'
  2644  3977  3474               	retlw	116	;'t'
  2645  3978  3474               	retlw	116	;'t'
  2646  3979  3465               	retlw	101	;'e'
  2647  397A  346D               	retlw	109	;'m'
  2648  397B  3470               	retlw	112	;'p'
  2649  397C  3474               	retlw	116	;'t'
  2650  397D  3469               	retlw	105	;'i'
  2651  397E  346E               	retlw	110	;'n'
  2652  397F  3467               	retlw	103	;'g'
  2653  3980  3420               	retlw	32	;' '
  2654  3981  3474               	retlw	116	;'t'
  2655  3982  346F               	retlw	111	;'o'
  2656  3983  3420               	retlw	32	;' '
  2657  3984  3463               	retlw	99	;'c'
  2658  3985  346F               	retlw	111	;'o'
  2659  3986  346D               	retlw	109	;'m'
  2660  3987  346D               	retlw	109	;'m'
  2661  3988  3475               	retlw	117	;'u'
  2662  3989  346E               	retlw	110	;'n'
  2663  398A  3469               	retlw	105	;'i'
  2664  398B  3463               	retlw	99	;'c'
  2665  398C  3461               	retlw	97	;'a'
  2666  398D  3474               	retlw	116	;'t'
  2667  398E  3465               	retlw	101	;'e'
  2668  398F  3420               	retlw	32	;' '
  2669  3990  3477               	retlw	119	;'w'
  2670  3991  3469               	retlw	105	;'i'
  2671  3992  3474               	retlw	116	;'t'
  2672  3993  3468               	retlw	104	;'h'
  2673  3994  3420               	retlw	32	;' '
  2674  3995  3441               	retlw	65	;'A'
  2675  3996  3446               	retlw	70	;'F'
  2676  3997  3445               	retlw	69	;'E'
  2677  3998  342E               	retlw	46	;'.'
  2678  3999  342E               	retlw	46	;'.'
  2679  399A  342E               	retlw	46	;'.'
  2680  399B  340A               	retlw	10
  2681  399C  340D               	retlw	13
  2682  399D  3400               	retlw	0
  2683                           
  2684                           	psect	stringtext16
  2685  399E                     __pstringtext16:	
  2686  399E                     STR_11:	
  2687  399E  3450               	retlw	80	;'P'
  2688  399F  3472               	retlw	114	;'r'
  2689  39A0  3469               	retlw	105	;'i'
  2690  39A1  346E               	retlw	110	;'n'
  2691  39A2  3474               	retlw	116	;'t'
  2692  39A3  3469               	retlw	105	;'i'
  2693  39A4  346E               	retlw	110	;'n'
  2694  39A5  3467               	retlw	103	;'g'
  2695  39A6  3420               	retlw	32	;' '
  2696  39A7  346F               	retlw	111	;'o'
  2697  39A8  3475               	retlw	117	;'u'
  2698  39A9  3474               	retlw	116	;'t'
  2699  39AA  3420               	retlw	32	;' '
  2700  39AB  3441               	retlw	65	;'A'
  2701  39AC  3446               	retlw	70	;'F'
  2702  39AD  3445               	retlw	69	;'E'
  2703  39AE  3420               	retlw	32	;' '
  2704  39AF  3472               	retlw	114	;'r'
  2705  39B0  3465               	retlw	101	;'e'
  2706  39B1  3467               	retlw	103	;'g'
  2707  39B2  3469               	retlw	105	;'i'
  2708  39B3  3473               	retlw	115	;'s'
  2709  39B4  3474               	retlw	116	;'t'
  2710  39B5  3465               	retlw	101	;'e'
  2711  39B6  3472               	retlw	114	;'r'
  2712  39B7  3420               	retlw	32	;' '
  2713  39B8  3476               	retlw	118	;'v'
  2714  39B9  3461               	retlw	97	;'a'
  2715  39BA  346C               	retlw	108	;'l'
  2716  39BB  3475               	retlw	117	;'u'
  2717  39BC  3465               	retlw	101	;'e'
  2718  39BD  3473               	retlw	115	;'s'
  2719  39BE  342E               	retlw	46	;'.'
  2720  39BF  342E               	retlw	46	;'.'
  2721  39C0  342E               	retlw	46	;'.'
  2722  39C1  340A               	retlw	10
  2723  39C2  340D               	retlw	13
  2724  39C3  3400               	retlw	0
  2725                           
  2726                           	psect	stringtext17
  2727  39E4                     __pstringtext17:	
  2728  39E4                     STR_15:	
  2729  39E4  3430               	retlw	48	;'0'
  2730  39E5  3478               	retlw	120	;'x'
  2731  39E6  3430               	retlw	48	;'0'
  2732  39E7  3434               	retlw	52	;'4'
  2733  39E8  3420               	retlw	32	;' '
  2734  39E9  3453               	retlw	83	;'S'
  2735  39EA  3459               	retlw	89	;'Y'
  2736  39EB  3453               	retlw	83	;'S'
  2737  39EC  345F               	retlw	95	;'_'
  2738  39ED  3443               	retlw	67	;'C'
  2739  39EE  3454               	retlw	84	;'T'
  2740  39EF  3452               	retlw	82	;'R'
  2741  39F0  344C               	retlw	76	;'L'
  2742  39F1  3431               	retlw	49	;'1'
  2743  39F2  343A               	retlw	58	;':'
  2744  39F3  3420               	retlw	32	;' '
  2745  39F4  3425               	retlw	37	;'%'
  2746  39F5  3469               	retlw	105	;'i'
  2747  39F6  3420               	retlw	32	;' '
  2748  39F7  340A               	retlw	10
  2749  39F8  340D               	retlw	13
  2750  39F9  3400               	retlw	0
  2751                           
  2752                           	psect	stringtext18
  2753  39FA                     __pstringtext18:	
  2754  39FA                     STR_16:	
  2755  39FA  3430               	retlw	48	;'0'
  2756  39FB  3478               	retlw	120	;'x'
  2757  39FC  3430               	retlw	48	;'0'
  2758  39FD  3435               	retlw	53	;'5'
  2759  39FE  3420               	retlw	32	;' '
  2760  39FF  3453               	retlw	83	;'S'
  2761  3A00  3459               	retlw	89	;'Y'
  2762  3A01  3453               	retlw	83	;'S'
  2763  3A02  345F               	retlw	95	;'_'
  2764  3A03  3443               	retlw	67	;'C'
  2765  3A04  3454               	retlw	84	;'T'
  2766  3A05  3452               	retlw	82	;'R'
  2767  3A06  344C               	retlw	76	;'L'
  2768  3A07  3432               	retlw	50	;'2'
  2769  3A08  343A               	retlw	58	;':'
  2770  3A09  3420               	retlw	32	;' '
  2771  3A0A  3425               	retlw	37	;'%'
  2772  3A0B  3469               	retlw	105	;'i'
  2773  3A0C  3420               	retlw	32	;' '
  2774  3A0D  340A               	retlw	10
  2775  3A0E  340D               	retlw	13
  2776  3A0F  3400               	retlw	0
  2777                           
  2778                           	psect	stringtext19
  2779  3A10                     __pstringtext19:	
  2780  3A10                     STR_14:	
  2781  3A10  3430               	retlw	48	;'0'
  2782  3A11  3478               	retlw	120	;'x'
  2783  3A12  3430               	retlw	48	;'0'
  2784  3A13  3431               	retlw	49	;'1'
  2785  3A14  3420               	retlw	32	;' '
  2786  3A15  3443               	retlw	67	;'C'
  2787  3A16  3445               	retlw	69	;'E'
  2788  3A17  344C               	retlw	76	;'L'
  2789  3A18  344C               	retlw	76	;'L'
  2790  3A19  3442               	retlw	66	;'B'
  2791  3A1A  3441               	retlw	65	;'A'
  2792  3A1B  344C               	retlw	76	;'L'
  2793  3A1C  3431               	retlw	49	;'1'
  2794  3A1D  343A               	retlw	58	;':'
  2795  3A1E  3420               	retlw	32	;' '
  2796  3A1F  3425               	retlw	37	;'%'
  2797  3A20  3469               	retlw	105	;'i'
  2798  3A21  3420               	retlw	32	;' '
  2799  3A22  340A               	retlw	10
  2800  3A23  340D               	retlw	13
  2801  3A24  3400               	retlw	0
  2802                           
  2803                           	psect	stringtext20
  2804  3A25                     __pstringtext20:	
  2805  3A25                     STR_17:	
  2806  3A25  3430               	retlw	48	;'0'
  2807  3A26  3478               	retlw	120	;'x'
  2808  3A27  3430               	retlw	48	;'0'
  2809  3A28  3436               	retlw	54	;'6'
  2810  3A29  3420               	retlw	32	;' '
  2811  3A2A  3450               	retlw	80	;'P'
  2812  3A2B  3452               	retlw	82	;'R'
  2813  3A2C  344F               	retlw	79	;'O'
  2814  3A2D  3454               	retlw	84	;'T'
  2815  3A2E  3445               	retlw	69	;'E'
  2816  3A2F  3443               	retlw	67	;'C'
  2817  3A30  3454               	retlw	84	;'T'
  2818  3A31  3431               	retlw	49	;'1'
  2819  3A32  343A               	retlw	58	;':'
  2820  3A33  3420               	retlw	32	;' '
  2821  3A34  3425               	retlw	37	;'%'
  2822  3A35  3469               	retlw	105	;'i'
  2823  3A36  3420               	retlw	32	;' '
  2824  3A37  340A               	retlw	10
  2825  3A38  340D               	retlw	13
  2826  3A39  3400               	retlw	0
  2827                           
  2828                           	psect	stringtext21
  2829  3A3A                     __pstringtext21:	
  2830  3A3A                     STR_18:	
  2831  3A3A  3430               	retlw	48	;'0'
  2832  3A3B  3478               	retlw	120	;'x'
  2833  3A3C  3430               	retlw	48	;'0'
  2834  3A3D  3437               	retlw	55	;'7'
  2835  3A3E  3420               	retlw	32	;' '
  2836  3A3F  3450               	retlw	80	;'P'
  2837  3A40  3452               	retlw	82	;'R'
  2838  3A41  344F               	retlw	79	;'O'
  2839  3A42  3454               	retlw	84	;'T'
  2840  3A43  3445               	retlw	69	;'E'
  2841  3A44  3443               	retlw	67	;'C'
  2842  3A45  3454               	retlw	84	;'T'
  2843  3A46  3432               	retlw	50	;'2'
  2844  3A47  343A               	retlw	58	;':'
  2845  3A48  3420               	retlw	32	;' '
  2846  3A49  3425               	retlw	37	;'%'
  2847  3A4A  3469               	retlw	105	;'i'
  2848  3A4B  3420               	retlw	32	;' '
  2849  3A4C  340A               	retlw	10
  2850  3A4D  340D               	retlw	13
  2851  3A4E  3400               	retlw	0
  2852                           
  2853                           	psect	stringtext22
  2854  3A4F                     __pstringtext22:	
  2855  3A4F                     STR_19:	
  2856  3A4F  3430               	retlw	48	;'0'
  2857  3A50  3478               	retlw	120	;'x'
  2858  3A51  3430               	retlw	48	;'0'
  2859  3A52  3438               	retlw	56	;'8'
  2860  3A53  3420               	retlw	32	;' '
  2861  3A54  3450               	retlw	80	;'P'
  2862  3A55  3452               	retlw	82	;'R'
  2863  3A56  344F               	retlw	79	;'O'
  2864  3A57  3454               	retlw	84	;'T'
  2865  3A58  3445               	retlw	69	;'E'
  2866  3A59  3443               	retlw	67	;'C'
  2867  3A5A  3454               	retlw	84	;'T'
  2868  3A5B  3433               	retlw	51	;'3'
  2869  3A5C  343A               	retlw	58	;':'
  2870  3A5D  3420               	retlw	32	;' '
  2871  3A5E  3425               	retlw	37	;'%'
  2872  3A5F  3469               	retlw	105	;'i'
  2873  3A60  3420               	retlw	32	;' '
  2874  3A61  340A               	retlw	10
  2875  3A62  340D               	retlw	13
  2876  3A63  3400               	retlw	0
  2877                           
  2878                           	psect	stringtext23
  2879  3A64                     __pstringtext23:	
  2880  3A64                     STR_13:	
  2881  3A64  3430               	retlw	48	;'0'
  2882  3A65  3478               	retlw	120	;'x'
  2883  3A66  3430               	retlw	48	;'0'
  2884  3A67  3430               	retlw	48	;'0'
  2885  3A68  3420               	retlw	32	;' '
  2886  3A69  3453               	retlw	83	;'S'
  2887  3A6A  3459               	retlw	89	;'Y'
  2888  3A6B  3453               	retlw	83	;'S'
  2889  3A6C  345F               	retlw	95	;'_'
  2890  3A6D  3453               	retlw	83	;'S'
  2891  3A6E  3454               	retlw	84	;'T'
  2892  3A6F  3441               	retlw	65	;'A'
  2893  3A70  3454               	retlw	84	;'T'
  2894  3A71  343A               	retlw	58	;':'
  2895  3A72  3420               	retlw	32	;' '
  2896  3A73  3425               	retlw	37	;'%'
  2897  3A74  3469               	retlw	105	;'i'
  2898  3A75  3420               	retlw	32	;' '
  2899  3A76  340A               	retlw	10
  2900  3A77  340D               	retlw	13
  2901  3A78  3400               	retlw	0
  2902                           
  2903                           	psect	stringtext24
  2904  3A79                     __pstringtext24:	
  2905  3A79                     STR_20:	
  2906  3A79  3430               	retlw	48	;'0'
  2907  3A7A  3478               	retlw	120	;'x'
  2908  3A7B  3430               	retlw	48	;'0'
  2909  3A7C  3439               	retlw	57	;'9'
  2910  3A7D  3420               	retlw	32	;' '
  2911  3A7E  344F               	retlw	79	;'O'
  2912  3A7F  3456               	retlw	86	;'V'
  2913  3A80  345F               	retlw	95	;'_'
  2914  3A81  3454               	retlw	84	;'T'
  2915  3A82  3452               	retlw	82	;'R'
  2916  3A83  3449               	retlw	73	;'I'
  2917  3A84  3450               	retlw	80	;'P'
  2918  3A85  343A               	retlw	58	;':'
  2919  3A86  3420               	retlw	32	;' '
  2920  3A87  3425               	retlw	37	;'%'
  2921  3A88  3469               	retlw	105	;'i'
  2922  3A89  3420               	retlw	32	;' '
  2923  3A8A  340A               	retlw	10
  2924  3A8B  340D               	retlw	13
  2925  3A8C  3400               	retlw	0
  2926                           
  2927                           	psect	stringtext25
  2928  3A8D                     __pstringtext25:	
  2929  3A8D                     STR_21:	
  2930  3A8D  3430               	retlw	48	;'0'
  2931  3A8E  3478               	retlw	120	;'x'
  2932  3A8F  3430               	retlw	48	;'0'
  2933  3A90  3441               	retlw	65	;'A'
  2934  3A91  3420               	retlw	32	;' '
  2935  3A92  3455               	retlw	85	;'U'
  2936  3A93  3456               	retlw	86	;'V'
  2937  3A94  345F               	retlw	95	;'_'
  2938  3A95  3454               	retlw	84	;'T'
  2939  3A96  3452               	retlw	82	;'R'
  2940  3A97  3449               	retlw	73	;'I'
  2941  3A98  3450               	retlw	80	;'P'
  2942  3A99  343A               	retlw	58	;':'
  2943  3A9A  3420               	retlw	32	;' '
  2944  3A9B  3425               	retlw	37	;'%'
  2945  3A9C  3469               	retlw	105	;'i'
  2946  3A9D  3420               	retlw	32	;' '
  2947  3A9E  340A               	retlw	10
  2948  3A9F  340D               	retlw	13
  2949  3AA0  3400               	retlw	0
  2950                           
  2951                           	psect	stringtext26
  2952  3AA1                     __pstringtext26:	
  2953  3AA1                     STR_22:	
  2954  3AA1  3430               	retlw	48	;'0'
  2955  3AA2  3478               	retlw	120	;'x'
  2956  3AA3  3430               	retlw	48	;'0'
  2957  3AA4  3442               	retlw	66	;'B'
  2958  3AA5  3420               	retlw	32	;' '
  2959  3AA6  3443               	retlw	67	;'C'
  2960  3AA7  3443               	retlw	67	;'C'
  2961  3AA8  345F               	retlw	95	;'_'
  2962  3AA9  3443               	retlw	67	;'C'
  2963  3AAA  3446               	retlw	70	;'F'
  2964  3AAB  3447               	retlw	71	;'G'
  2965  3AAC  343A               	retlw	58	;':'
  2966  3AAD  3420               	retlw	32	;' '
  2967  3AAE  3425               	retlw	37	;'%'
  2968  3AAF  3469               	retlw	105	;'i'
  2969  3AB0  3420               	retlw	32	;' '
  2970  3AB1  340A               	retlw	10
  2971  3AB2  340D               	retlw	13
  2972  3AB3  3400               	retlw	0
  2973                           
  2974                           	psect	stringtext27
  2975  3AB4                     __pstringtext27:	
  2976  3AB4                     STR_23:	
  2977  3AB4  3430               	retlw	48	;'0'
  2978  3AB5  3478               	retlw	120	;'x'
  2979  3AB6  3433               	retlw	51	;'3'
  2980  3AB7  3432               	retlw	50	;'2'
  2981  3AB8  3420               	retlw	32	;' '
  2982  3AB9  3443               	retlw	67	;'C'
  2983  3ABA  3443               	retlw	67	;'C'
  2984  3ABB  345F               	retlw	95	;'_'
  2985  3ABC  3448               	retlw	72	;'H'
  2986  3ABD  3449               	retlw	73	;'I'
  2987  3ABE  343A               	retlw	58	;':'
  2988  3ABF  3420               	retlw	32	;' '
  2989  3AC0  3425               	retlw	37	;'%'
  2990  3AC1  3469               	retlw	105	;'i'
  2991  3AC2  3420               	retlw	32	;' '
  2992  3AC3  340A               	retlw	10
  2993  3AC4  340D               	retlw	13
  2994  3AC5  3400               	retlw	0
  2995                           
  2996                           	psect	stringtext28
  2997  3AC6                     __pstringtext28:	
  2998  3AC6                     STR_24:	
  2999  3AC6  3430               	retlw	48	;'0'
  3000  3AC7  3478               	retlw	120	;'x'
  3001  3AC8  3433               	retlw	51	;'3'
  3002  3AC9  3433               	retlw	51	;'3'
  3003  3ACA  3420               	retlw	32	;' '
  3004  3ACB  3443               	retlw	67	;'C'
  3005  3ACC  3443               	retlw	67	;'C'
  3006  3ACD  345F               	retlw	95	;'_'
  3007  3ACE  344C               	retlw	76	;'L'
  3008  3ACF  344F               	retlw	79	;'O'
  3009  3AD0  343A               	retlw	58	;':'
  3010  3AD1  3420               	retlw	32	;' '
  3011  3AD2  3425               	retlw	37	;'%'
  3012  3AD3  3469               	retlw	105	;'i'
  3013  3AD4  3420               	retlw	32	;' '
  3014  3AD5  340A               	retlw	10
  3015  3AD6  340D               	retlw	13
  3016  3AD7  3400               	retlw	0
  3017                           
  3018                           	psect	stringtext29
  3019  3B10                     __pstringtext29:	
  3020  3B10                     STR_26:	
  3021  3B10  3449               	retlw	73	;'I'
  3022  3B11  344E               	retlw	78	;'N'
  3023  3B12  3446               	retlw	70	;'F'
  3024  3B13  3400               	retlw	0
  3025                           
  3026                           	psect	stringtext30
  3027  3B14                     __pstringtext30:	
  3028  3B14                     STR_30:	
  3029  3B14  344E               	retlw	78	;'N'
  3030  3B15  3441               	retlw	65	;'A'
  3031  3B16  344E               	retlw	78	;'N'
  3032  3B17  3400               	retlw	0
  3033                           
  3034                           	psect	stringtext31
  3035  3B18                     __pstringtext31:	
  3036  3B18                     STR_139:	
  3037  3B18  3468               	retlw	104	;'h'
  3038  3B19  3468               	retlw	104	;'h'
  3039  3B1A  3458               	retlw	88	;'X'
  3040  3B1B  3400               	retlw	0
  3041                           
  3042                           	psect	stringtext32
  3043  3B1C                     __pstringtext32:	
  3044  3B1C                     STR_34:	
  3045  3B1C  3468               	retlw	104	;'h'
  3046  3B1D  3468               	retlw	104	;'h'
  3047  3B1E  3464               	retlw	100	;'d'
  3048  3B1F  3400               	retlw	0
  3049                           
  3050                           	psect	stringtext33
  3051  3B20                     __pstringtext33:	
  3052  3B20                     STR_27:	
  3053  3B20  3469               	retlw	105	;'i'
  3054  3B21  346E               	retlw	110	;'n'
  3055  3B22  3466               	retlw	102	;'f'
  3056  3B23  3400               	retlw	0
  3057                           
  3058                           	psect	stringtext34
  3059  3B24                     __pstringtext34:	
  3060  3B24                     STR_38:	
  3061  3B24  3468               	retlw	104	;'h'
  3062  3B25  3468               	retlw	104	;'h'
  3063  3B26  3469               	retlw	105	;'i'
  3064  3B27  3400               	retlw	0
  3065                           
  3066                           	psect	stringtext35
  3067  3B28                     __pstringtext35:	
  3068  3B28                     STR_31:	
  3069  3B28  346E               	retlw	110	;'n'
  3070  3B29  3461               	retlw	97	;'a'
  3071  3B2A  346E               	retlw	110	;'n'
  3072  3B2B  3400               	retlw	0
  3073                           
  3074                           	psect	stringtext36
  3075  3B2C                     __pstringtext36:	
  3076  3B2C                     STR_95:	
  3077  3B2C  3468               	retlw	104	;'h'
  3078  3B2D  3468               	retlw	104	;'h'
  3079  3B2E  346E               	retlw	110	;'n'
  3080  3B2F  3400               	retlw	0
  3081                           
  3082                           	psect	stringtext37
  3083  3B30                     __pstringtext37:	
  3084  3B30                     STR_75:	
  3085  3B30  3468               	retlw	104	;'h'
  3086  3B31  3468               	retlw	104	;'h'
  3087  3B32  346F               	retlw	111	;'o'
  3088  3B33  3400               	retlw	0
  3089                           
  3090                           	psect	stringtext38
  3091  3B34                     __pstringtext38:	
  3092  3B34                     STR_115:	
  3093  3B34  3468               	retlw	104	;'h'
  3094  3B35  3468               	retlw	104	;'h'
  3095  3B36  3475               	retlw	117	;'u'
  3096  3B37  3400               	retlw	0
  3097                           
  3098                           	psect	stringtext39
  3099  3B38                     __pstringtext39:	
  3100  3B38                     STR_135:	
  3101  3B38  3468               	retlw	104	;'h'
  3102  3B39  3468               	retlw	104	;'h'
  3103  3B3A  3478               	retlw	120	;'x'
  3104  3B3B  3400               	retlw	0
  3105                           
  3106                           	psect	stringtext40
  3107  3B3C                     __pstringtext40:	
  3108  3B3C                     STR_157:	
  3109  3B3C  346C               	retlw	108	;'l'
  3110  3B3D  3458               	retlw	88	;'X'
  3111  3B3E  3400               	retlw	0
  3112                           
  3113                           	psect	stringtext41
  3114  3B3F                     __pstringtext41:	
  3115  3B3F                     STR_166:	
  3116  3B3F  347A               	retlw	122	;'z'
  3117  3B40  3458               	retlw	88	;'X'
  3118  3B41  3400               	retlw	0
  3119                           
  3120                           	psect	stringtext42
  3121  3B42                     __pstringtext42:	
  3122  3B42                     STR_52:	
  3123  3B42  346C               	retlw	108	;'l'
  3124  3B43  3464               	retlw	100	;'d'
  3125  3B44  3400               	retlw	0
  3126                           
  3127                           	psect	stringtext43
  3128  3B45                     __pstringtext43:	
  3129  3B45                     STR_61:	
  3130  3B45  347A               	retlw	122	;'z'
  3131  3B46  3464               	retlw	100	;'d'
  3132  3B47  3400               	retlw	0
  3133                           
  3134                           	psect	stringtext44
  3135  3B48                     __pstringtext44:	
  3136  3B48                     STR_70:	
  3137  3B48  346C               	retlw	108	;'l'
  3138  3B49  3466               	retlw	102	;'f'
  3139  3B4A  3400               	retlw	0
  3140                           
  3141                           	psect	stringtext45
  3142  3B4B                     __pstringtext45:	
  3143  3B4B                     STR_56:	
  3144  3B4B  346C               	retlw	108	;'l'
  3145  3B4C  3469               	retlw	105	;'i'
  3146  3B4D  3400               	retlw	0
  3147                           
  3148                           	psect	stringtext46
  3149  3B4E                     __pstringtext46:	
  3150  3B4E                     STR_65:	
  3151  3B4E  347A               	retlw	122	;'z'
  3152  3B4F  3469               	retlw	105	;'i'
  3153  3B50  3400               	retlw	0
  3154                           
  3155                           	psect	stringtext47
  3156  3B51                     __pstringtext47:	
  3157  3B51                     STR_105:	
  3158  3B51  346C               	retlw	108	;'l'
  3159  3B52  346E               	retlw	110	;'n'
  3160  3B53  3400               	retlw	0
  3161                           
  3162                           	psect	stringtext48
  3163  3B54                     __pstringtext48:	
  3164  3B54                     STR_110:	
  3165  3B54  347A               	retlw	122	;'z'
  3166  3B55  346E               	retlw	110	;'n'
  3167  3B56  3400               	retlw	0
  3168                           
  3169                           	psect	stringtext49
  3170  3B57                     __pstringtext49:	
  3171  3B57                     STR_85:	
  3172  3B57  346C               	retlw	108	;'l'
  3173  3B58  346F               	retlw	111	;'o'
  3174  3B59  3400               	retlw	0
  3175                           
  3176                           	psect	stringtext50
  3177  3B5A                     __pstringtext50:	
  3178  3B5A                     STR_90:	
  3179  3B5A  347A               	retlw	122	;'z'
  3180  3B5B  346F               	retlw	111	;'o'
  3181  3B5C  3400               	retlw	0
  3182                           
  3183                           	psect	stringtext51
  3184  3B5D                     __pstringtext51:	
  3185  3B5D                     STR_125:	
  3186  3B5D  346C               	retlw	108	;'l'
  3187  3B5E  3475               	retlw	117	;'u'
  3188  3B5F  3400               	retlw	0
  3189                           
  3190                           	psect	stringtext52
  3191  3B60                     __pstringtext52:	
  3192  3B60                     STR_130:	
  3193  3B60  347A               	retlw	122	;'z'
  3194  3B61  3475               	retlw	117	;'u'
  3195  3B62  3400               	retlw	0
  3196                           
  3197                           	psect	stringtext53
  3198  3B63                     __pstringtext53:	
  3199  3B63                     STR_153:	
  3200  3B63  346C               	retlw	108	;'l'
  3201  3B64  3478               	retlw	120	;'x'
  3202  3B65  3400               	retlw	0
  3203                           
  3204                           	psect	stringtext54
  3205  3B66                     __pstringtext54:	
  3206  3B66                     STR_162:	
  3207  3B66  347A               	retlw	122	;'z'
  3208  3B67  3478               	retlw	120	;'x'
  3209  3B68  3400               	retlw	0
  3210                           
  3211                           	psect	stringtext55
  3212  0000                     __pstringtext55:	
  3213  3A22                     
  3214                           ; #config settings
  3215  0000                     
  3216                           	psect	cinit
  3217  0020                     start_initialization:	
  3218  0020                     __initialization:		;BIGRAM
  3219                           
  3220                           ; Initialize objects allocated to BANK3
  3221  0020  30CC               	movlw	low __pidataBANK3
  3222  0021  0084               	movwf	4
  3223  0022  30B2               	movlw	(high __pidataBANK3)| (0+128)
  3224  0023  0085               	movwf	5
  3225  0024  0023               	movlb	3	; select bank3
  3226  0025  0012               	moviw fsr0++
  3227  0026  00DD               	movwf	__pdataBANK3& (0+127)
  3228  0027  0012               	moviw fsr0++
  3229  0028  00DE               	movwf	(__pdataBANK3+1)& (0+127)
  3230  0029  0012               	moviw fsr0++
  3231  002A  00DF               	movwf	(__pdataBANK3+2)& (0+127)
  3232  002B  0012               	moviw fsr0++
  3233  002C  00E0               	movwf	(__pdataBANK3+3)& (0+127)
  3234  002D  0012               	moviw fsr0++
  3235  002E  00E1               	movwf	(__pdataBANK3+4)& (0+127)
  3236  002F  0012               	moviw fsr0++
  3237  0030  00E2               	movwf	(__pdataBANK3+5)& (0+127)
  3238  0031  0012               	moviw fsr0++
  3239  0032  00E3               	movwf	(__pdataBANK3+6)& (0+127)
  3240                           
  3241                           ; Clear objects allocated to BIGRAM
  3242  0033  3071               	movlw	low (0+10097)
  3243  0034  0084               	movwf	4
  3244  0035  3027               	movlw	high (0+10097)
  3245  0036  0085               	movwf	5
  3246  0037  307F               	movlw	127
  3247  0038  00FE               	movwf	btemp
  3248  0039  3000               	movlw	0
  3249  003A  00FF               	movwf	btemp+1
  3250  003B  31B3  2338  3180   	fcall	clear_ram0
  3251                           
  3252                           ; Clear objects allocated to COMMON
  3253  003E  01FC               	clrf	__pbssCOMMON& (0+127)
  3254                           
  3255                           ; Clear objects allocated to BANK3
  3256  003F  30A0               	movlw	low __pbssBANK3
  3257  0040  0084               	movwf	4
  3258  0041  3001               	movlw	high __pbssBANK3
  3259  0042  0085               	movwf	5
  3260  0043  303D               	movlw	61
  3261  0044  00FE               	movwf	btemp
  3262  0045  3000               	movlw	0
  3263  0046  00FF               	movwf	btemp+1
  3264  0047  31B3  2338  3180   	fcall	clear_ram0
  3265                           
  3266                           ; Clear objects allocated to BANK4
  3267  004A  3020               	movlw	low __pbssBANK4
  3268  004B  0084               	movwf	4
  3269  004C  3002               	movlw	high __pbssBANK4
  3270  004D  0085               	movwf	5
  3271  004E  3050               	movlw	80
  3272  004F  00FE               	movwf	btemp
  3273  0050  3000               	movlw	0
  3274  0051  00FF               	movwf	btemp+1
  3275  0052  31B3  2338         	fcall	clear_ram0
  3276  0054                     end_of_initialization:	
  3277                           ;End of C runtime variable initialization code
  3278                           
  3279  0054                     __end_of__initialization:	
  3280  0054  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3281  0055  0020               	movlb	0
  3282  0056  31A8  2804         	ljmp	_main	;jump to C main() function
  3283                           
  3284                           	psect	bssCOMMON
  3285  007C                     __pbssCOMMON:	
  3286  007C                     _toggleColor:	
  3287  007C                     	ds	1
  3288                           
  3289                           	psect	bssBANK3
  3290  01A0                     __pbssBANK3:	
  3291  01A0                     _cellVoltages:	
  3292  01A0                     	ds	10
  3293  01AA                     floorf@F524:	
  3294  01AA                     	ds	4
  3295  01AE                     ___fpclassifyf@F463:	
  3296  01AE                     	ds	4
  3297  01B2                     BQ76920@shuntResistorValue_mOhm:	
  3298  01B2                     	ds	4
  3299  01B6                     _shuntResistorValue_mOhm:	
  3300  01B6                     	ds	4
  3301  01BA                     _errno:	
  3302  01BA                     	ds	2
  3303  01BC                     _nout:	
  3304  01BC                     	ds	2
  3305  01BE                     _width:	
  3306  01BE                     	ds	2
  3307  01C0                     _prec:	
  3308  01C0                     	ds	2
  3309  01C2                     _flags:	
  3310  01C2                     	ds	2
  3311  01C4                     _minCellVoltage:	
  3312  01C4                     	ds	2
  3313  01C6                     _maxCellVoltage:	
  3314  01C6                     	ds	2
  3315  01C8                     _maxCellTempDischarge:	
  3316  01C8                     	ds	2
  3317  01CA                     _maxCellTempCharge:	
  3318  01CA                     	ds	2
  3319  01CC                     _minCellTempDischarge:	
  3320  01CC                     	ds	2
  3321  01CE                     _minCellTempCharge:	
  3322  01CE                     	ds	2
  3323  01D0                     _adcOffset:	
  3324  01D0                     	ds	2
  3325  01D2                     _adcGain:	
  3326  01D2                     	ds	2
  3327  01D4                     BQ76920@protect3:	
  3328  01D4                     	ds	1
  3329  01D5                     BQ76920@protect2:	
  3330  01D5                     	ds	1
  3331  01D6                     BQ76920@protect1:	
  3332  01D6                     	ds	1
  3333  01D7                     myIsr@count:	
  3334  01D7                     	ds	1
  3335  01D8                     _tmr1_flag:	
  3336  01D8                     	ds	1
  3337  01D9                     _currState:	
  3338  01D9                     	ds	1
  3339  01DA                     _protect3:	
  3340  01DA                     	ds	1
  3341  01DB                     _protect2:	
  3342  01DB                     	ds	1
  3343  01DC                     _protect1:	
  3344  01DC                     	ds	1
  3345                           
  3346                           	psect	dataBANK3
  3347  01DD                     __pdataBANK3:	
  3348  01DD                     stoa@F1174:	
  3349  01DD                     	ds	7
  3350                           
  3351                           	psect	bssBANK4
  3352  0220                     __pbssBANK4:	
  3353  0220                     _dbuf:	
  3354  0220                     	ds	80
  3355                           
  3356                           	psect	clrtext
  3357  3338                     clear_ram0:	
  3358                           ;	Called with FSR0 containing the base address, and
  3359                           ;	btemp/btemp+1 has the size to clear
  3360                           
  3361  3338  0064               	clrwdt	;clear the watchdog before getting into this loop
  3362  3339                     clrloop0:	
  3363  3339  0180               	clrf	0	;clear RAM location pointed to by FSR
  3364  333A  3101               	addfsr 0,1
  3365  333B  3001               	movlw	1
  3366  333C  02FE               	subwf	126,f
  3367  333D  3000               	movlw	0
  3368  333E  3BFF               	subwfb	127,f
  3369  333F  087F               	movf	127,w
  3370  3340  047E               	iorwf	126,w
  3371  3341  1903               	btfsc	3,2
  3372  3342  3400               	retlw	0	;all done for this memory range, return
  3373  3343  2B39               	goto	clrloop0	;have we reached the end yet?
  3374                           
  3375                           	psect	cstackBANK3
  3376  01E4                     __pcstackBANK3:	
  3377  01E4                     statemachine@success:	
  3378                           
  3379                           ; 1 bytes @ 0x0
  3380  01E4                     	ds	1
  3381  01E5                     ??_main:	
  3382                           
  3383                           ; 1 bytes @ 0x1
  3384  01E5                     	ds	1
  3385                           
  3386                           	psect	cstackBANK2
  3387  0120                     __pcstackBANK2:	
  3388  0120                     ??_vfpfcnvrt:	
  3389                           
  3390                           ; 1 bytes @ 0x0
  3391  0120                     	ds	12
  3392  012C                     vfpfcnvrt@cp:	
  3393                           
  3394                           ; 1 bytes @ 0xC
  3395  012C                     	ds	1
  3396  012D                     vfpfcnvrt@done:	
  3397                           
  3398                           ; 2 bytes @ 0xD
  3399  012D                     	ds	2
  3400  012F                     _vfpfcnvrt$1145:	
  3401                           
  3402                           ; 2 bytes @ 0xF
  3403  012F                     	ds	2
  3404  0131                     _vfpfcnvrt$1146:	
  3405                           
  3406                           ; 2 bytes @ 0x11
  3407  0131                     	ds	2
  3408  0133                     _vfpfcnvrt$1172:	
  3409                           
  3410                           ; 2 bytes @ 0x13
  3411  0133                     	ds	2
  3412  0135                     vfpfcnvrt@ct:	
  3413                           
  3414                           ; 3 bytes @ 0x15
  3415  0135                     	ds	3
  3416  0138                     vfpfcnvrt@f:	
  3417                           
  3418                           ; 4 bytes @ 0x18
  3419  0138                     	ds	4
  3420  013C                     vfpfcnvrt@ll:	
  3421                           
  3422                           ; 8 bytes @ 0x1C
  3423  013C                     	ds	8
  3424  0144                     vfpfcnvrt@vp:	
  3425                           
  3426                           ; 1 bytes @ 0x24
  3427  0144                     	ds	1
  3428  0145                     vfpfcnvrt@c:	
  3429                           
  3430                           ; 1 bytes @ 0x25
  3431  0145                     	ds	1
  3432  0146                     vfpfcnvrt@llu:	
  3433                           
  3434                           ; 8 bytes @ 0x26
  3435  0146                     	ds	8
  3436  014E                     ?_vsnprintf:	
  3437  014E                     vsnprintf@s:	
  3438                           ; 2 bytes @ 0x2E
  3439                           
  3440                           
  3441                           ; 2 bytes @ 0x2E
  3442  014E                     	ds	2
  3443  0150                     vsnprintf@n:	
  3444                           
  3445                           ; 2 bytes @ 0x30
  3446  0150                     	ds	2
  3447  0152                     vsnprintf@fmt:	
  3448                           
  3449                           ; 2 bytes @ 0x32
  3450  0152                     	ds	2
  3451  0154                     vsnprintf@ap:	
  3452                           
  3453                           ; 1 bytes @ 0x34
  3454  0154                     	ds	1
  3455  0155                     _vsnprintf$1774:	
  3456                           
  3457                           ; 2 bytes @ 0x35
  3458  0155                     	ds	2
  3459  0157                     vsnprintf@cnt:	
  3460                           
  3461                           ; 2 bytes @ 0x37
  3462  0157                     	ds	2
  3463  0159                     vsnprintf@f:	
  3464                           
  3465                           ; 6 bytes @ 0x39
  3466  0159                     	ds	6
  3467  015F                     ?_snprintf:	
  3468  015F                     snprintf@s:	
  3469                           ; 2 bytes @ 0x3F
  3470                           
  3471                           
  3472                           ; 2 bytes @ 0x3F
  3473  015F                     	ds	2
  3474  0161                     snprintf@n:	
  3475                           
  3476                           ; 2 bytes @ 0x41
  3477  0161                     	ds	2
  3478  0163                     snprintf@fmt:	
  3479                           
  3480                           ; 2 bytes @ 0x43
  3481  0163                     	ds	6
  3482  0169                     ??_snprintf:	
  3483                           
  3484                           ; 1 bytes @ 0x49
  3485  0169                     	ds	3
  3486  016C                     snprintf@ap:	
  3487                           
  3488                           ; 1 bytes @ 0x4C
  3489  016C                     	ds	1
  3490  016D                     ??_printotAFERegisters:	
  3491                           
  3492                           ; 1 bytes @ 0x4D
  3493  016D                     	ds	1
  3494  016E                     ??_statemachine:	
  3495                           
  3496                           ; 1 bytes @ 0x4E
  3497  016E                     	ds	2
  3498                           
  3499                           	psect	cstackBANK1
  3500  00A0                     __pcstackBANK1:	
  3501  00A0                     ?_efgtoa:	
  3502  00A0                     efgtoa@fp:	
  3503                           ; 2 bytes @ 0x0
  3504                           
  3505  00A0                     setShortCircuitProtection@scaler:	
  3506                           ; 2 bytes @ 0x0
  3507                           
  3508  00A0                     setOverCurrentDischargeProtection@scaler:	
  3509                           ; 4 bytes @ 0x0
  3510                           
  3511                           
  3512                           ; 4 bytes @ 0x0
  3513  00A0                     	ds	2
  3514  00A2                     efgtoa@f:	
  3515                           
  3516                           ; 4 bytes @ 0x2
  3517  00A2                     	ds	2
  3518  00A4                     _setShortCircuitProtection$1974:	
  3519  00A4                     _setOverCurrentDischargeProtection$1975:	
  3520                           ; 4 bytes @ 0x4
  3521                           
  3522                           
  3523                           ; 4 bytes @ 0x4
  3524  00A4                     	ds	2
  3525  00A6                     efgtoa@c:	
  3526                           
  3527                           ; 1 bytes @ 0x6
  3528  00A6                     	ds	1
  3529  00A7                     ??_efgtoa:	
  3530                           
  3531                           ; 1 bytes @ 0x7
  3532  00A7                     	ds	1
  3533  00A8                     setShortCircuitProtection@i:	
  3534  00A8                     setOverCurrentDischargeProtection@i:	
  3535                           ; 2 bytes @ 0x8
  3536                           
  3537                           
  3538                           ; 2 bytes @ 0x8
  3539  00A8                     	ds	2
  3540  00AA                     setShortCircuitProtection@i_885:	
  3541  00AA                     setOverCurrentDischargeProtection@i_894:	
  3542                           ; 2 bytes @ 0xA
  3543                           
  3544                           
  3545                           ; 2 bytes @ 0xA
  3546  00AA                     	ds	1
  3547  00AB                     efgtoa@ou:	
  3548                           
  3549                           ; 4 bytes @ 0xB
  3550  00AB                     	ds	4
  3551  00AF                     _efgtoa$1083:	
  3552                           
  3553                           ; 2 bytes @ 0xF
  3554  00AF                     	ds	2
  3555  00B1                     _efgtoa$1084:	
  3556                           
  3557                           ; 2 bytes @ 0x11
  3558  00B1                     	ds	2
  3559  00B3                     _efgtoa$1088:	
  3560                           
  3561                           ; 2 bytes @ 0x13
  3562  00B3                     	ds	2
  3563  00B5                     _efgtoa$1092:	
  3564                           
  3565                           ; 2 bytes @ 0x15
  3566  00B5                     	ds	2
  3567  00B7                     _efgtoa$1093:	
  3568                           
  3569                           ; 2 bytes @ 0x17
  3570  00B7                     	ds	2
  3571  00B9                     _efgtoa$1094:	
  3572                           
  3573                           ; 2 bytes @ 0x19
  3574  00B9                     	ds	2
  3575  00BB                     efgtoa@t:	
  3576                           
  3577                           ; 2 bytes @ 0x1B
  3578  00BB                     	ds	2
  3579  00BD                     efgtoa@pp:	
  3580                           
  3581                           ; 2 bytes @ 0x1D
  3582  00BD                     	ds	2
  3583  00BF                     efgtoa@m:	
  3584                           
  3585                           ; 2 bytes @ 0x1F
  3586  00BF                     	ds	2
  3587  00C1                     efgtoa@ne:	
  3588                           
  3589                           ; 2 bytes @ 0x21
  3590  00C1                     	ds	2
  3591  00C3                     efgtoa@d:	
  3592                           
  3593                           ; 2 bytes @ 0x23
  3594  00C3                     	ds	2
  3595  00C5                     efgtoa@sign:	
  3596                           
  3597                           ; 2 bytes @ 0x25
  3598  00C5                     	ds	2
  3599  00C7                     efgtoa@p:	
  3600                           
  3601                           ; 2 bytes @ 0x27
  3602  00C7                     	ds	2
  3603  00C9                     efgtoa@nmode:	
  3604                           
  3605                           ; 1 bytes @ 0x29
  3606  00C9                     	ds	1
  3607  00CA                     efgtoa@w:	
  3608                           
  3609                           ; 2 bytes @ 0x2A
  3610  00CA                     	ds	2
  3611  00CC                     efgtoa@mode:	
  3612                           
  3613                           ; 1 bytes @ 0x2C
  3614  00CC                     	ds	1
  3615  00CD                     efgtoa@h:	
  3616                           
  3617                           ; 4 bytes @ 0x2D
  3618  00CD                     	ds	4
  3619  00D1                     efgtoa@l:	
  3620                           
  3621                           ; 4 bytes @ 0x31
  3622  00D1                     	ds	4
  3623  00D5                     efgtoa@i:	
  3624                           
  3625                           ; 2 bytes @ 0x35
  3626  00D5                     	ds	2
  3627  00D7                     efgtoa@g:	
  3628                           
  3629                           ; 4 bytes @ 0x37
  3630  00D7                     	ds	4
  3631  00DB                     efgtoa@e:	
  3632                           
  3633                           ; 2 bytes @ 0x3B
  3634  00DB                     	ds	2
  3635  00DD                     efgtoa@n:	
  3636                           
  3637                           ; 2 bytes @ 0x3D
  3638  00DD                     	ds	2
  3639  00DF                     efgtoa@u:	
  3640                           
  3641                           ; 4 bytes @ 0x3F
  3642  00DF                     	ds	4
  3643  00E3                     ?_vfpfcnvrt:	
  3644  00E3                     vfpfcnvrt@fp:	
  3645                           ; 2 bytes @ 0x43
  3646                           
  3647                           
  3648                           ; 2 bytes @ 0x43
  3649  00E3                     	ds	2
  3650  00E5                     vfpfcnvrt@fmt:	
  3651                           
  3652                           ; 1 bytes @ 0x45
  3653  00E5                     	ds	1
  3654  00E6                     vfpfcnvrt@ap:	
  3655                           
  3656                           ; 1 bytes @ 0x46
  3657  00E6                     	ds	1
  3658  00E7                     ?_vfprintf:	
  3659  00E7                     vfprintf@fp:	
  3660                           ; 2 bytes @ 0x47
  3661                           
  3662                           
  3663                           ; 2 bytes @ 0x47
  3664  00E7                     	ds	2
  3665  00E9                     vfprintf@fmt:	
  3666                           
  3667                           ; 2 bytes @ 0x49
  3668  00E9                     	ds	2
  3669  00EB                     vfprintf@ap:	
  3670                           
  3671                           ; 1 bytes @ 0x4B
  3672  00EB                     	ds	1
  3673  00EC                     vfprintf@cfmt:	
  3674                           
  3675                           ; 2 bytes @ 0x4C
  3676  00EC                     	ds	2
  3677  00EE                     ??_vsnprintf:	
  3678                           
  3679                           ; 1 bytes @ 0x4E
  3680  00EE                     	ds	2
  3681                           
  3682                           	psect	cstackCOMMON
  3683  0070                     __pcstackCOMMON:	
  3684  0070                     ?_initClock:	
  3685  0070                     ?_init_GPIO:	
  3686                           ; 1 bytes @ 0x0
  3687                           
  3688  0070                     ?_init_I2C:	
  3689                           ; 1 bytes @ 0x0
  3690                           
  3691  0070                     ?_init_TMR1:	
  3692                           ; 1 bytes @ 0x0
  3693                           
  3694  0070                     ?_init_RGB:	
  3695                           ; 1 bytes @ 0x0
  3696                           
  3697  0070                     ?_statemachine:	
  3698                           ; 1 bytes @ 0x0
  3699                           
  3700  0070                     ?_RGB_AWAIT_AFE_CONN:	
  3701                           ; 1 bytes @ 0x0
  3702                           
  3703  0070                     ?_init_AFE:	
  3704                           ; 1 bytes @ 0x0
  3705                           
  3706  0070                     ?_printotAFERegisters:	
  3707                           ; 1 bytes @ 0x0
  3708                           
  3709  0070                     ?_internal_16:	
  3710                           ; 1 bytes @ 0x0
  3711                           
  3712  0070                     ?_putch:	
  3713                           ; 1 bytes @ 0x0
  3714                           
  3715  0070                     ?_myIsr:	
  3716                           ; 1 bytes @ 0x0
  3717                           
  3718  0070                     ??_myIsr:	
  3719                           ; 1 bytes @ 0x0
  3720                           
  3721  0070                     ?_main:	
  3722                           ; 1 bytes @ 0x0
  3723                           
  3724  0070                     ?_EUSART_Write:	
  3725                           ; 1 bytes @ 0x0
  3726                           
  3727  0070                     ?_send_I2C_startBit:	
  3728                           ; 1 bytes @ 0x0
  3729                           
  3730  0070                     ?_send_I2C_stopBit:	
  3731                           ; 1 bytes @ 0x0
  3732                           
  3733  0070                     ?_send_I2C_NACK:	
  3734                           ; 1 bytes @ 0x0
  3735                           
  3736  0070                     putch@c:	
  3737                           ; 1 bytes @ 0x0
  3738                           
  3739                           
  3740                           ; 1 bytes @ 0x0
  3741  0070                     	ds	1
  3742  0071                     ?___fleq:	
  3743  0071                     ??_initClock:	
  3744                           ; 1 bit 
  3745                           
  3746  0071                     ??_init_GPIO:	
  3747                           ; 1 bytes @ 0x1
  3748                           
  3749  0071                     ??_init_I2C:	
  3750                           ; 1 bytes @ 0x1
  3751                           
  3752  0071                     ??_init_TMR1:	
  3753                           ; 1 bytes @ 0x1
  3754                           
  3755  0071                     ??_init_RGB:	
  3756                           ; 1 bytes @ 0x1
  3757                           
  3758  0071                     ?_RGB_color:	
  3759                           ; 1 bytes @ 0x1
  3760                           
  3761  0071                     ??_internal_16:	
  3762                           ; 1 bytes @ 0x1
  3763                           
  3764  0071                     ?_setShuntResistorValue:	
  3765                           ; 1 bytes @ 0x1
  3766                           
  3767  0071                     ?_strcpy:	
  3768                           ; 1 bytes @ 0x1
  3769                           
  3770  0071                     ??_putch:	
  3771                           ; 1 bytes @ 0x1
  3772                           
  3773  0071                     ??_EUSART_Write:	
  3774                           ; 1 bytes @ 0x1
  3775                           
  3776  0071                     ?_send_I2C_data:	
  3777                           ; 1 bytes @ 0x1
  3778                           
  3779  0071                     ?_send_I2C_controlByte:	
  3780                           ; 1 bytes @ 0x1
  3781                           
  3782  0071                     ??_send_I2C_startBit:	
  3783                           ; 1 bytes @ 0x1
  3784                           
  3785  0071                     ??_send_I2C_stopBit:	
  3786                           ; 1 bytes @ 0x1
  3787                           
  3788  0071                     ??_send_I2C_NACK:	
  3789                           ; 1 bytes @ 0x1
  3790                           
  3791  0071                     ??___aodiv:	
  3792                           ; 1 bytes @ 0x1
  3793                           
  3794  0071                     ??___aomod:	
  3795                           ; 1 bytes @ 0x1
  3796                           
  3797  0071                     ??___lodiv:	
  3798                           ; 1 bytes @ 0x1
  3799                           
  3800  0071                     ??___lomod:	
  3801                           ; 1 bytes @ 0x1
  3802                           
  3803  0071                     ?_fputc:	
  3804                           ; 1 bytes @ 0x1
  3805                           
  3806  0071                     ?_strlen:	
  3807                           ; 2 bytes @ 0x1
  3808                           
  3809  0071                     ?___fpclassifyf:	
  3810                           ; 2 bytes @ 0x1
  3811                           
  3812  0071                     ?_isupper:	
  3813                           ; 2 bytes @ 0x1
  3814                           
  3815  0071                     ?_isalpha:	
  3816                           ; 2 bytes @ 0x1
  3817                           
  3818  0071                     ?_isdigit:	
  3819                           ; 2 bytes @ 0x1
  3820                           
  3821  0071                     ?_strncmp:	
  3822                           ; 2 bytes @ 0x1
  3823                           
  3824  0071                     ?__Umul8_16:	
  3825                           ; 2 bytes @ 0x1
  3826                           
  3827  0071                     ?_isspace:	
  3828                           ; 2 bytes @ 0x1
  3829                           
  3830  0071                     ?_islower:	
  3831                           ; 2 bytes @ 0x1
  3832                           
  3833  0071                     ?_read_I2C_data:	
  3834                           ; 2 bytes @ 0x1
  3835                           
  3836  0071                     ?___wmul:	
  3837                           ; 2 bytes @ 0x1
  3838                           
  3839  0071                     ?___awdiv:	
  3840                           ; 2 bytes @ 0x1
  3841                           
  3842  0071                     ?___awmod:	
  3843                           ; 2 bytes @ 0x1
  3844                           
  3845  0071                     ?_AFE_getSetCurrentSenseRes:	
  3846                           ; 2 bytes @ 0x1
  3847                           
  3848  0071                     ?___aldiv:	
  3849                           ; 4 bytes @ 0x1
  3850                           
  3851  0071                     ?___flneg:	
  3852                           ; 4 bytes @ 0x1
  3853                           
  3854  0071                     ?___fladd:	
  3855                           ; 4 bytes @ 0x1
  3856                           
  3857  0071                     ?___xxtofl:	
  3858                           ; 4 bytes @ 0x1
  3859                           
  3860  0071                     EUSART_Write@txData:	
  3861                           ; 4 bytes @ 0x1
  3862                           
  3863  0071                     __Umul8_16@multiplicand:	
  3864                           ; 1 bytes @ 0x1
  3865                           
  3866  0071                     send_I2C_data@databyte:	
  3867                           ; 1 bytes @ 0x1
  3868                           
  3869  0071                     send_I2C_controlByte@BlockAddress:	
  3870                           ; 2 bytes @ 0x1
  3871                           
  3872  0071                     RGB_color@color:	
  3873                           ; 2 bytes @ 0x1
  3874                           
  3875  0071                     ___wmul@multiplier:	
  3876                           ; 2 bytes @ 0x1
  3877                           
  3878  0071                     ___awdiv@divisor:	
  3879                           ; 2 bytes @ 0x1
  3880                           
  3881  0071                     ___awmod@divisor:	
  3882                           ; 2 bytes @ 0x1
  3883                           
  3884  0071                     isalpha@c:	
  3885                           ; 2 bytes @ 0x1
  3886                           
  3887  0071                     isdigit@c:	
  3888                           ; 2 bytes @ 0x1
  3889                           
  3890  0071                     isspace@c:	
  3891                           ; 2 bytes @ 0x1
  3892                           
  3893  0071                     isupper@c:	
  3894                           ; 2 bytes @ 0x1
  3895                           
  3896  0071                     fputc@c:	
  3897                           ; 2 bytes @ 0x1
  3898                           
  3899  0071                     strcpy@src:	
  3900                           ; 2 bytes @ 0x1
  3901                           
  3902  0071                     strlen@s:	
  3903                           ; 2 bytes @ 0x1
  3904                           
  3905  0071                     strncmp@_l:	
  3906                           ; 2 bytes @ 0x1
  3907                           
  3908  0071                     islower@c:	
  3909                           ; 2 bytes @ 0x1
  3910                           
  3911  0071                     setShuntResistorValue@res_mOhm:	
  3912                           ; 2 bytes @ 0x1
  3913                           
  3914  0071                     ___aldiv@divisor:	
  3915                           ; 4 bytes @ 0x1
  3916                           
  3917  0071                     ___fleq@ff1:	
  3918                           ; 4 bytes @ 0x1
  3919                           
  3920  0071                     ___flneg@f1:	
  3921                           ; 4 bytes @ 0x1
  3922                           
  3923  0071                     ___fladd@b:	
  3924                           ; 4 bytes @ 0x1
  3925                           
  3926  0071                     ___xxtofl@val:	
  3927                           ; 4 bytes @ 0x1
  3928                           
  3929  0071                     ___fpclassifyf@x:	
  3930                           ; 4 bytes @ 0x1
  3931                           
  3932                           
  3933                           ; 4 bytes @ 0x1
  3934  0071                     	ds	1
  3935  0072                     ?_EUSART_Write_Text:	
  3936  0072                     ___aodiv@counter:	
  3937                           ; 1 bytes @ 0x2
  3938                           
  3939  0072                     ___aomod@counter:	
  3940                           ; 1 bytes @ 0x2
  3941                           
  3942  0072                     ___lomod@counter:	
  3943                           ; 1 bytes @ 0x2
  3944                           
  3945  0072                     EUSART_Write_Text@text:	
  3946                           ; 1 bytes @ 0x2
  3947                           
  3948  0072                     ___lodiv@quotient:	
  3949                           ; 2 bytes @ 0x2
  3950                           
  3951                           
  3952                           ; 8 bytes @ 0x2
  3953  0072                     	ds	1
  3954  0073                     ??_RGB_AWAIT_AFE_CONN:	
  3955  0073                     ??_RGB_color:	
  3956                           ; 1 bytes @ 0x3
  3957                           
  3958  0073                     ??_strlen:	
  3959                           ; 1 bytes @ 0x3
  3960                           
  3961  0073                     ??_isupper:	
  3962                           ; 1 bytes @ 0x3
  3963                           
  3964  0073                     ??_strcpy:	
  3965                           ; 1 bytes @ 0x3
  3966                           
  3967  0073                     ??_isalpha:	
  3968                           ; 1 bytes @ 0x3
  3969                           
  3970  0073                     ??_isdigit:	
  3971                           ; 1 bytes @ 0x3
  3972                           
  3973  0073                     ??__Umul8_16:	
  3974                           ; 1 bytes @ 0x3
  3975                           
  3976  0073                     ??_isspace:	
  3977                           ; 1 bytes @ 0x3
  3978                           
  3979  0073                     ??_islower:	
  3980                           ; 1 bytes @ 0x3
  3981                           
  3982  0073                     ??_send_I2C_data:	
  3983                           ; 1 bytes @ 0x3
  3984                           
  3985  0073                     ??_read_I2C_data:	
  3986                           ; 1 bytes @ 0x3
  3987                           
  3988  0073                     ___aodiv@sign:	
  3989                           ; 1 bytes @ 0x3
  3990                           
  3991  0073                     ___aomod@sign:	
  3992                           ; 1 bytes @ 0x3
  3993                           
  3994  0073                     send_I2C_controlByte@RW_bit:	
  3995                           ; 1 bytes @ 0x3
  3996                           
  3997  0073                     ___wmul@multiplicand:	
  3998                           ; 2 bytes @ 0x3
  3999                           
  4000  0073                     ___awdiv@dividend:	
  4001                           ; 2 bytes @ 0x3
  4002                           
  4003  0073                     ___awmod@dividend:	
  4004                           ; 2 bytes @ 0x3
  4005                           
  4006  0073                     fputc@fp:	
  4007                           ; 2 bytes @ 0x3
  4008                           
  4009  0073                     strlen@a:	
  4010                           ; 2 bytes @ 0x3
  4011                           
  4012  0073                     strncmp@_r:	
  4013                           ; 2 bytes @ 0x3
  4014                           
  4015                           
  4016                           ; 2 bytes @ 0x3
  4017  0073                     	ds	1
  4018  0074                     ??_EUSART_Write_Text:	
  4019  0074                     ?_abs:	
  4020                           ; 1 bytes @ 0x4
  4021                           
  4022  0074                     abs@a:	
  4023                           ; 2 bytes @ 0x4
  4024                           
  4025  0074                     ___aodiv@quotient:	
  4026                           ; 2 bytes @ 0x4
  4027                           
  4028                           
  4029                           ; 8 bytes @ 0x4
  4030  0074                     	ds	1
  4031  0075                     ??_AFE_getSetCurrentSenseRes:	
  4032  0075                     ??_setShuntResistorValue:	
  4033                           ; 1 bytes @ 0x5
  4034                           
  4035  0075                     ??_fputc:	
  4036                           ; 1 bytes @ 0x5
  4037                           
  4038  0075                     ??___fpclassifyf:	
  4039                           ; 1 bytes @ 0x5
  4040                           
  4041  0075                     ??_send_I2C_controlByte:	
  4042                           ; 1 bytes @ 0x5
  4043                           
  4044  0075                     ?_I2C_writeRegister:	
  4045                           ; 1 bytes @ 0x5
  4046                           
  4047  0075                     ??___wmul:	
  4048                           ; 1 bytes @ 0x5
  4049                           
  4050  0075                     ??___awdiv:	
  4051                           ; 1 bytes @ 0x5
  4052                           
  4053  0075                     ??___awmod:	
  4054                           ; 1 bytes @ 0x5
  4055                           
  4056  0075                     ??___flneg:	
  4057                           ; 1 bytes @ 0x5
  4058                           
  4059  0075                     ??___xxtofl:	
  4060                           ; 1 bytes @ 0x5
  4061                           
  4062  0075                     ?_readRegister:	
  4063                           ; 1 bytes @ 0x5
  4064                           
  4065  0075                     _isspace$1639:	
  4066                           ; 2 bytes @ 0x5
  4067                           
  4068  0075                     EUSART_Write_Text@i:	
  4069                           ; 1 bytes @ 0x5
  4070                           
  4071  0075                     I2C_writeRegister@slaveAddress:	
  4072                           ; 2 bytes @ 0x5
  4073                           
  4074  0075                     readRegister@slaveAddress:	
  4075                           ; 2 bytes @ 0x5
  4076                           
  4077  0075                     ___wmul@product:	
  4078                           ; 2 bytes @ 0x5
  4079                           
  4080  0075                     strcpy@s:	
  4081                           ; 2 bytes @ 0x5
  4082                           
  4083  0075                     strncmp@n:	
  4084                           ; 2 bytes @ 0x5
  4085                           
  4086  0075                     __Umul8_16@product:	
  4087                           ; 2 bytes @ 0x5
  4088                           
  4089  0075                     ___aldiv@dividend:	
  4090                           ; 2 bytes @ 0x5
  4091                           
  4092  0075                     ___fleq@ff2:	
  4093                           ; 4 bytes @ 0x5
  4094                           
  4095  0075                     ___fladd@a:	
  4096                           ; 4 bytes @ 0x5
  4097                           
  4098                           
  4099                           ; 4 bytes @ 0x5
  4100  0075                     	ds	1
  4101  0076                     ??_abs:	
  4102  0076                     ___awdiv@counter:	
  4103                           ; 1 bytes @ 0x6
  4104                           
  4105  0076                     ___awmod@counter:	
  4106                           ; 1 bytes @ 0x6
  4107                           
  4108                           
  4109                           ; 1 bytes @ 0x6
  4110  0076                     	ds	1
  4111  0077                     ??_setTemperatureLimitsint:	
  4112  0077                     ??_strncmp:	
  4113                           ; 1 bytes @ 0x7
  4114                           
  4115  0077                     ?_tolower:	
  4116                           ; 1 bytes @ 0x7
  4117                           
  4118  0077                     ?_toupper:	
  4119                           ; 2 bytes @ 0x7
  4120                           
  4121  0077                     ?_atoi:	
  4122                           ; 2 bytes @ 0x7
  4123                           
  4124  0077                     ___awdiv@sign:	
  4125                           ; 2 bytes @ 0x7
  4126                           
  4127  0077                     ___awmod@sign:	
  4128                           ; 1 bytes @ 0x7
  4129                           
  4130  0077                     strcpy@d:	
  4131                           ; 1 bytes @ 0x7
  4132                           
  4133  0077                     I2C_writeRegister@regAddress:	
  4134                           ; 1 bytes @ 0x7
  4135                           
  4136  0077                     readRegister@regAddress:	
  4137                           ; 2 bytes @ 0x7
  4138                           
  4139  0077                     atoi@s:	
  4140                           ; 2 bytes @ 0x7
  4141                           
  4142  0077                     tolower@c:	
  4143                           ; 2 bytes @ 0x7
  4144                           
  4145  0077                     toupper@c:	
  4146                           ; 2 bytes @ 0x7
  4147                           
  4148  0077                     __Umul8_16@word_mpld:	
  4149                           ; 2 bytes @ 0x7
  4150                           
  4151                           
  4152                           ; 2 bytes @ 0x7
  4153  0077                     	ds	1
  4154  0078                     strcpy@dest:	
  4155  0078                     ___awdiv@quotient:	
  4156                           ; 1 bytes @ 0x8
  4157                           
  4158  0078                     strncmp@l:	
  4159                           ; 2 bytes @ 0x8
  4160                           
  4161                           
  4162                           ; 2 bytes @ 0x8
  4163  0078                     	ds	1
  4164  0079                     ??_readRegister:	
  4165  0079                     ??___aldiv:	
  4166                           ; 1 bytes @ 0x9
  4167                           
  4168  0079                     __Umul8_16@multiplier:	
  4169                           ; 1 bytes @ 0x9
  4170                           
  4171  0079                     I2C_writeRegister@data:	
  4172                           ; 1 bytes @ 0x9
  4173                           
  4174  0079                     readRegister@recievedData:	
  4175                           ; 2 bytes @ 0x9
  4176                           
  4177  0079                     _tolower$1722:	
  4178                           ; 2 bytes @ 0x9
  4179                           
  4180  0079                     _toupper$1737:	
  4181                           ; 2 bytes @ 0x9
  4182                           
  4183                           
  4184                           ; 2 bytes @ 0x9
  4185  0079                     	ds	1
  4186  007A                     ??_stoa:	
  4187  007A                     ??___flsub:	
  4188                           ; 1 bytes @ 0xA
  4189                           
  4190  007A                     ?_fputs:	
  4191                           ; 1 bytes @ 0xA
  4192                           
  4193  007A                     ___fltol@sign1:	
  4194                           ; 2 bytes @ 0xA
  4195                           
  4196  007A                     ___lodiv@counter:	
  4197                           ; 1 bytes @ 0xA
  4198                           
  4199  007A                     EUSART_Initialize@x:	
  4200                           ; 1 bytes @ 0xA
  4201                           
  4202  007A                     fputs@fp:	
  4203                           ; 2 bytes @ 0xA
  4204                           
  4205  007A                     strncmp@r:	
  4206                           ; 2 bytes @ 0xA
  4207                           
  4208                           
  4209                           ; 2 bytes @ 0xA
  4210  007A                     	ds	1
  4211  007B                     ??_init_AFE:	
  4212  007B                     ??_I2C_writeRegister:	
  4213                           ; 1 bytes @ 0xB
  4214                           
  4215  007B                     ___fltol@exp1:	
  4216                           ; 1 bytes @ 0xB
  4217                           
  4218                           
  4219                           ; 1 bytes @ 0xB
  4220  007B                     	ds	1
  4221                           
  4222                           	psect	cstackBANK0
  4223  0020                     __pcstackBANK0:	
  4224  0020                     ?_setTemperatureLimitsint:	
  4225  0020                     ??_fputs:	
  4226                           ; 1 bytes @ 0x0
  4227                           
  4228  0020                     ??_tolower:	
  4229                           ; 1 bytes @ 0x0
  4230                           
  4231  0020                     ??_toupper:	
  4232                           ; 1 bytes @ 0x0
  4233                           
  4234  0020                     ??_atoi:	
  4235                           ; 1 bytes @ 0x0
  4236                           
  4237  0020                     ??___fleq:	
  4238                           ; 1 bytes @ 0x0
  4239                           
  4240  0020                     ??___fladd:	
  4241                           ; 1 bytes @ 0x0
  4242                           
  4243  0020                     ?_beginAFEcommunication:	
  4244                           ; 1 bytes @ 0x0
  4245                           
  4246  0020                     ?_stoa:	
  4247                           ; 2 bytes @ 0x0
  4248                           
  4249  0020                     ?___aodiv:	
  4250                           ; 2 bytes @ 0x0
  4251                           
  4252  0020                     ?___aomod:	
  4253                           ; 8 bytes @ 0x0
  4254                           
  4255  0020                     ?___lodiv:	
  4256                           ; 8 bytes @ 0x0
  4257                           
  4258  0020                     ?___lomod:	
  4259                           ; 8 bytes @ 0x0
  4260                           
  4261  0020                     ___aldiv@counter:	
  4262                           ; 8 bytes @ 0x0
  4263                           
  4264  0020                     ___xxtofl@sign:	
  4265                           ; 1 bytes @ 0x0
  4266                           
  4267  0020                     setTemperatureLimitsint@minDischarge_degC:	
  4268                           ; 1 bytes @ 0x0
  4269                           
  4270  0020                     stoa@fp:	
  4271                           ; 2 bytes @ 0x0
  4272                           
  4273  0020                     ___fpclassifyf@e:	
  4274                           ; 2 bytes @ 0x0
  4275                           
  4276  0020                     ___aodiv@divisor:	
  4277                           ; 2 bytes @ 0x0
  4278                           
  4279  0020                     ___aomod@divisor:	
  4280                           ; 8 bytes @ 0x0
  4281                           
  4282  0020                     ___lodiv@divisor:	
  4283                           ; 8 bytes @ 0x0
  4284                           
  4285  0020                     ___lomod@divisor:	
  4286                           ; 8 bytes @ 0x0
  4287                           
  4288                           
  4289                           ; 8 bytes @ 0x0
  4290  0020                     	ds	1
  4291  0021                     ___aldiv@sign:	
  4292  0021                     ___xxtofl@exp:	
  4293                           ; 1 bytes @ 0x1
  4294                           
  4295                           
  4296                           ; 1 bytes @ 0x1
  4297  0021                     	ds	1
  4298  0022                     ??_beginAFEcommunication:	
  4299  0022                     stoa@s:	
  4300                           ; 1 bytes @ 0x2
  4301                           
  4302  0022                     fputs@c:	
  4303                           ; 1 bytes @ 0x2
  4304                           
  4305  0022                     setTemperatureLimitsint@maxDischarge_degC:	
  4306                           ; 1 bytes @ 0x2
  4307                           
  4308  0022                     ___aldiv@quotient:	
  4309                           ; 2 bytes @ 0x2
  4310                           
  4311  0022                     ___xxtofl@arg:	
  4312                           ; 4 bytes @ 0x2
  4313                           
  4314  0022                     ___fpclassifyf@u:	
  4315                           ; 4 bytes @ 0x2
  4316                           
  4317                           
  4318                           ; 4 bytes @ 0x2
  4319  0022                     	ds	1
  4320  0023                     fputs@i:	
  4321  0023                     stoa@nuls:	
  4322                           ; 2 bytes @ 0x3
  4323                           
  4324                           
  4325                           ; 7 bytes @ 0x3
  4326  0023                     	ds	1
  4327  0024                     setTemperatureLimitsint@minCharge_degC:	
  4328  0024                     atoi@neg:	
  4329                           ; 2 bytes @ 0x4
  4330                           
  4331                           
  4332                           ; 2 bytes @ 0x4
  4333  0024                     	ds	1
  4334  0025                     fputs@s:	
  4335                           
  4336                           ; 1 bytes @ 0x5
  4337  0025                     	ds	1
  4338  0026                     ?_EUSART_Initialize:	
  4339  0026                     ?_pad:	
  4340                           ; 1 bytes @ 0x6
  4341                           
  4342  0026                     ?___flmul:	
  4343                           ; 2 bytes @ 0x6
  4344                           
  4345  0026                     setTemperatureLimitsint@maxCharge_degC:	
  4346                           ; 4 bytes @ 0x6
  4347                           
  4348  0026                     pad@fp:	
  4349                           ; 2 bytes @ 0x6
  4350                           
  4351  0026                     _atoi$1599:	
  4352                           ; 2 bytes @ 0x6
  4353                           
  4354  0026                     EUSART_Initialize@baudrate:	
  4355                           ; 2 bytes @ 0x6
  4356                           
  4357  0026                     ___flmul@b:	
  4358                           ; 4 bytes @ 0x6
  4359                           
  4360                           
  4361                           ; 4 bytes @ 0x6
  4362  0026                     	ds	2
  4363  0028                     pad@buf:	
  4364  0028                     ___fladd@signs:	
  4365                           ; 1 bytes @ 0x8
  4366                           
  4367  0028                     _atoi$1601:	
  4368                           ; 1 bytes @ 0x8
  4369                           
  4370  0028                     ___aodiv@dividend:	
  4371                           ; 2 bytes @ 0x8
  4372                           
  4373  0028                     ___aomod@dividend:	
  4374                           ; 8 bytes @ 0x8
  4375                           
  4376  0028                     ___lodiv@dividend:	
  4377                           ; 8 bytes @ 0x8
  4378                           
  4379  0028                     ___lomod@dividend:	
  4380                           ; 8 bytes @ 0x8
  4381                           
  4382                           
  4383                           ; 8 bytes @ 0x8
  4384  0028                     	ds	1
  4385  0029                     ___fladd@aexp:	
  4386  0029                     pad@p:	
  4387                           ; 1 bytes @ 0x9
  4388                           
  4389                           
  4390                           ; 2 bytes @ 0x9
  4391  0029                     	ds	1
  4392  002A                     ??_EUSART_Initialize:	
  4393  002A                     ___fladd@bexp:	
  4394                           ; 1 bytes @ 0xA
  4395                           
  4396  002A                     _atoi$1600:	
  4397                           ; 1 bytes @ 0xA
  4398                           
  4399  002A                     stoa@i:	
  4400                           ; 1 bytes @ 0xA
  4401                           
  4402  002A                     ___flmul@a:	
  4403                           ; 2 bytes @ 0xA
  4404                           
  4405                           
  4406                           ; 4 bytes @ 0xA
  4407  002A                     	ds	1
  4408  002B                     ??_pad:	
  4409  002B                     ___fladd@grs:	
  4410                           ; 1 bytes @ 0xB
  4411                           
  4412  002B                     beginAFEcommunication@commSuccess:	
  4413                           ; 1 bytes @ 0xB
  4414                           
  4415  002B                     atoi@n:	
  4416                           ; 2 bytes @ 0xB
  4417                           
  4418                           
  4419                           ; 2 bytes @ 0xB
  4420  002B                     	ds	1
  4421  002C                     pad@i:	
  4422  002C                     stoa@w:	
  4423                           ; 2 bytes @ 0xC
  4424                           
  4425                           
  4426                           ; 2 bytes @ 0xC
  4427  002C                     	ds	1
  4428  002D                     beginAFEcommunication@i:	
  4429                           
  4430                           ; 2 bytes @ 0xD
  4431  002D                     	ds	1
  4432  002E                     ??___flmul:	
  4433  002E                     pad@w:	
  4434                           ; 1 bytes @ 0xE
  4435                           
  4436  002E                     stoa@cp:	
  4437                           ; 2 bytes @ 0xE
  4438                           
  4439                           
  4440                           ; 2 bytes @ 0xE
  4441  002E                     	ds	2
  4442  0030                     ?_ctoa:	
  4443  0030                     ?_dtoa:	
  4444                           ; 2 bytes @ 0x10
  4445                           
  4446  0030                     ?_otoa:	
  4447                           ; 2 bytes @ 0x10
  4448                           
  4449  0030                     ?_utoa:	
  4450                           ; 2 bytes @ 0x10
  4451                           
  4452  0030                     ?_xtoa:	
  4453                           ; 2 bytes @ 0x10
  4454                           
  4455  0030                     ctoa@fp:	
  4456                           ; 2 bytes @ 0x10
  4457                           
  4458  0030                     dtoa@fp:	
  4459                           ; 2 bytes @ 0x10
  4460                           
  4461  0030                     otoa@fp:	
  4462                           ; 2 bytes @ 0x10
  4463                           
  4464  0030                     stoa@p:	
  4465                           ; 2 bytes @ 0x10
  4466                           
  4467  0030                     utoa@fp:	
  4468                           ; 2 bytes @ 0x10
  4469                           
  4470  0030                     xtoa@fp:	
  4471                           ; 2 bytes @ 0x10
  4472                           
  4473                           
  4474                           ; 2 bytes @ 0x10
  4475  0030                     	ds	2
  4476  0032                     ctoa@c:	
  4477  0032                     stoa@l:	
  4478                           ; 1 bytes @ 0x12
  4479                           
  4480  0032                     dtoa@d:	
  4481                           ; 2 bytes @ 0x12
  4482                           
  4483  0032                     otoa@d:	
  4484                           ; 8 bytes @ 0x12
  4485                           
  4486  0032                     utoa@d:	
  4487                           ; 8 bytes @ 0x12
  4488                           
  4489  0032                     xtoa@d:	
  4490                           ; 8 bytes @ 0x12
  4491                           
  4492                           
  4493                           ; 8 bytes @ 0x12
  4494  0032                     	ds	1
  4495  0033                     ??_ctoa:	
  4496  0033                     ___flmul@sign:	
  4497                           ; 1 bytes @ 0x13
  4498                           
  4499                           
  4500                           ; 1 bytes @ 0x13
  4501  0033                     	ds	1
  4502  0034                     ctoa@w:	
  4503  0034                     ___flmul@grs:	
  4504                           ; 2 bytes @ 0x14
  4505                           
  4506                           
  4507                           ; 4 bytes @ 0x14
  4508  0034                     	ds	4
  4509  0038                     ___flmul@aexp:	
  4510                           
  4511                           ; 1 bytes @ 0x18
  4512  0038                     	ds	1
  4513  0039                     ___flmul@bexp:	
  4514                           
  4515                           ; 1 bytes @ 0x19
  4516  0039                     	ds	1
  4517  003A                     ??_dtoa:	
  4518  003A                     ??_otoa:	
  4519                           ; 1 bytes @ 0x1A
  4520                           
  4521  003A                     ??_utoa:	
  4522                           ; 1 bytes @ 0x1A
  4523                           
  4524  003A                     xtoa@x:	
  4525                           ; 1 bytes @ 0x1A
  4526                           
  4527  003A                     ___flmul@prod:	
  4528                           ; 1 bytes @ 0x1A
  4529                           
  4530                           
  4531                           ; 4 bytes @ 0x1A
  4532  003A                     	ds	1
  4533  003B                     ??_xtoa:	
  4534  003B                     utoa@p:	
  4535                           ; 1 bytes @ 0x1B
  4536                           
  4537                           
  4538                           ; 2 bytes @ 0x1B
  4539  003B                     	ds	2
  4540  003D                     _dtoa$1060:	
  4541  003D                     utoa@w:	
  4542                           ; 2 bytes @ 0x1D
  4543                           
  4544                           
  4545                           ; 2 bytes @ 0x1D
  4546  003D                     	ds	1
  4547  003E                     ___flmul@temp:	
  4548                           
  4549                           ; 2 bytes @ 0x1E
  4550  003E                     	ds	1
  4551  003F                     dtoa@p:	
  4552  003F                     utoa@n:	
  4553                           ; 2 bytes @ 0x1F
  4554                           
  4555                           
  4556                           ; 8 bytes @ 0x1F
  4557  003F                     	ds	1
  4558  0040                     ?___flsub:	
  4559  0040                     ?___fldiv:	
  4560                           ; 4 bytes @ 0x20
  4561                           
  4562  0040                     ___flsub@a:	
  4563                           ; 4 bytes @ 0x20
  4564                           
  4565  0040                     ___fldiv@a:	
  4566                           ; 4 bytes @ 0x20
  4567                           
  4568                           
  4569                           ; 4 bytes @ 0x20
  4570  0040                     	ds	1
  4571  0041                     dtoa@w:	
  4572                           
  4573                           ; 2 bytes @ 0x21
  4574  0041                     	ds	1
  4575  0042                     otoa@p:	
  4576                           
  4577                           ; 2 bytes @ 0x22
  4578  0042                     	ds	1
  4579  0043                     dtoa@s:	
  4580  0043                     _xtoa$1130:	
  4581                           ; 2 bytes @ 0x23
  4582                           
  4583                           
  4584                           ; 2 bytes @ 0x23
  4585  0043                     	ds	1
  4586  0044                     otoa@t:	
  4587  0044                     ___flsub@b:	
  4588                           ; 2 bytes @ 0x24
  4589                           
  4590  0044                     ___fldiv@b:	
  4591                           ; 4 bytes @ 0x24
  4592                           
  4593                           
  4594                           ; 4 bytes @ 0x24
  4595  0044                     	ds	1
  4596  0045                     _xtoa$1131:	
  4597  0045                     dtoa@n:	
  4598                           ; 2 bytes @ 0x25
  4599                           
  4600                           
  4601                           ; 8 bytes @ 0x25
  4602  0045                     	ds	1
  4603  0046                     otoa@w:	
  4604                           
  4605                           ; 2 bytes @ 0x26
  4606  0046                     	ds	1
  4607  0047                     utoa@i:	
  4608  0047                     xtoa@p:	
  4609                           ; 2 bytes @ 0x27
  4610                           
  4611                           
  4612                           ; 2 bytes @ 0x27
  4613  0047                     	ds	1
  4614  0048                     ??___fldiv:	
  4615  0048                     otoa@n:	
  4616                           ; 1 bytes @ 0x28
  4617                           
  4618                           
  4619                           ; 8 bytes @ 0x28
  4620  0048                     	ds	1
  4621  0049                     xtoa@w:	
  4622                           
  4623                           ; 2 bytes @ 0x29
  4624  0049                     	ds	2
  4625  004B                     xtoa@n:	
  4626                           
  4627                           ; 8 bytes @ 0x2B
  4628  004B                     	ds	2
  4629  004D                     dtoa@i:	
  4630  004D                     ___fldiv@rem:	
  4631                           ; 2 bytes @ 0x2D
  4632                           
  4633                           
  4634                           ; 4 bytes @ 0x2D
  4635  004D                     	ds	3
  4636  0050                     otoa@i:	
  4637                           
  4638                           ; 2 bytes @ 0x30
  4639  0050                     	ds	1
  4640  0051                     ___fldiv@sign:	
  4641                           
  4642                           ; 1 bytes @ 0x31
  4643  0051                     	ds	1
  4644  0052                     ___fldiv@new_exp:	
  4645                           
  4646                           ; 2 bytes @ 0x32
  4647  0052                     	ds	1
  4648  0053                     xtoa@i:	
  4649                           
  4650                           ; 2 bytes @ 0x33
  4651  0053                     	ds	1
  4652  0054                     ___fldiv@grs:	
  4653                           
  4654                           ; 4 bytes @ 0x34
  4655  0054                     	ds	1
  4656  0055                     xtoa@c:	
  4657                           
  4658                           ; 2 bytes @ 0x35
  4659  0055                     	ds	3
  4660  0058                     ___fldiv@bexp:	
  4661                           
  4662                           ; 1 bytes @ 0x38
  4663  0058                     	ds	1
  4664  0059                     ___fldiv@aexp:	
  4665                           
  4666                           ; 1 bytes @ 0x39
  4667  0059                     	ds	1
  4668  005A                     ?___flge:	
  4669  005A                     ?_floorf:	
  4670                           ; 1 bit 
  4671                           
  4672  005A                     ?___fltol:	
  4673                           ; 4 bytes @ 0x3A
  4674                           
  4675  005A                     ___flge@ff1:	
  4676                           ; 4 bytes @ 0x3A
  4677                           
  4678  005A                     ___fltol@f1:	
  4679                           ; 4 bytes @ 0x3A
  4680                           
  4681  005A                     floorf@x:	
  4682                           ; 4 bytes @ 0x3A
  4683                           
  4684                           
  4685                           ; 4 bytes @ 0x3A
  4686  005A                     	ds	4
  4687  005E                     ??_floorf:	
  4688  005E                     ??___fltol:	
  4689                           ; 1 bytes @ 0x3E
  4690                           
  4691  005E                     ___flge@ff2:	
  4692                           ; 1 bytes @ 0x3E
  4693                           
  4694                           
  4695                           ; 4 bytes @ 0x3E
  4696  005E                     	ds	4
  4697  0062                     ??___flge:	
  4698                           
  4699                           ; 1 bytes @ 0x42
  4700  0062                     	ds	1
  4701  0063                     ?_AFE_getSetShortCircuitCurrent:	
  4702  0063                     ?_AFE_getOverCurrentDischargeCurrent:	
  4703                           ; 4 bytes @ 0x43
  4704                           
  4705                           
  4706                           ; 4 bytes @ 0x43
  4707  0063                     	ds	1
  4708  0064                     floorf@m:	
  4709                           
  4710                           ; 4 bytes @ 0x44
  4711  0064                     	ds	2
  4712  0066                     ?_setShortCircuitProtection:	
  4713  0066                     ?_setOverCurrentDischargeProtection:	
  4714                           ; 1 bytes @ 0x46
  4715                           
  4716  0066                     setShortCircuitProtection@current_mA:	
  4717                           ; 1 bytes @ 0x46
  4718                           
  4719  0066                     setOverCurrentDischargeProtection@current_mA:	
  4720                           ; 4 bytes @ 0x46
  4721                           
  4722                           
  4723                           ; 4 bytes @ 0x46
  4724  0066                     	ds	1
  4725  0067                     ??_AFE_getSetShortCircuitCurrent:	
  4726  0067                     ??_AFE_getOverCurrentDischargeCurrent:	
  4727                           ; 1 bytes @ 0x47
  4728                           
  4729                           
  4730                           ; 1 bytes @ 0x47
  4731  0067                     	ds	1
  4732  0068                     floorf@e:	
  4733                           
  4734                           ; 2 bytes @ 0x48
  4735  0068                     	ds	2
  4736  006A                     setShortCircuitProtection@delay_us:	
  4737  006A                     setOverCurrentDischargeProtection@delay_ms:	
  4738                           ; 2 bytes @ 0x4A
  4739                           
  4740  006A                     floorf@u:	
  4741                           ; 2 bytes @ 0x4A
  4742                           
  4743                           
  4744                           ; 4 bytes @ 0x4A
  4745  006A                     	ds	2
  4746  006C                     ??_setShortCircuitProtection:	
  4747  006C                     ??_setOverCurrentDischargeProtection:	
  4748                           ; 1 bytes @ 0x4C
  4749                           
  4750                           
  4751                           ; 1 bytes @ 0x4C
  4752  006C                     	ds	2
  4753  006E                     ??_vfprintf:	
  4754                           
  4755                           ; 1 bytes @ 0x4E
  4756  006E                     	ds	2
  4757                           
  4758                           	psect	maintext
  4759  2804                     __pmaintext:	
  4760 ;;
  4761 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  4762 ;;
  4763 ;; *************** function _main *****************
  4764 ;; Defined at:
  4765 ;;		line 75 in file "main.c"
  4766 ;; Parameters:    Size  Location     Type
  4767 ;;		None
  4768 ;; Auto vars:     Size  Location     Type
  4769 ;;		None
  4770 ;; Return value:  Size  Location     Type
  4771 ;;                  1    wreg      void 
  4772 ;; Registers used:
  4773 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4774 ;; Tracked objects:
  4775 ;;		On entry : B1F/0
  4776 ;;		On exit  : 0/0
  4777 ;;		Unchanged: 0/0
  4778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4781 ;;      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4782 ;;      Totals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4783 ;;Total ram usage:        1 bytes
  4784 ;; Hardware stack levels required when called:   12
  4785 ;; This function calls:
  4786 ;;		_EUSART_Initialize
  4787 ;;		_initClock
  4788 ;;		_init_GPIO
  4789 ;;		_init_I2C
  4790 ;;		_init_RGB
  4791 ;;		_init_TMR1
  4792 ;;		_statemachine
  4793 ;; This function is called by:
  4794 ;;		Startup code after reset
  4795 ;; This function uses a non-reentrant model
  4796 ;;
  4797                           
  4798                           
  4799                           ;psect for function _main
  4800  2804                     _main:	
  4801                           
  4802                           ;main.c: 78:     initClock();
  4803                           
  4804                           ;incstack = 0
  4805                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4806  2804  31A8  2001  31A8   	fcall	_initClock
  4807                           
  4808                           ;main.c: 79:     init_GPIO();
  4809  2807  3198  2006  31A8   	fcall	_init_GPIO
  4810                           
  4811                           ;main.c: 80:     init_I2C();
  4812  280A  31B3  2344  31A8   	fcall	_init_I2C
  4813                           
  4814                           ;main.c: 81:     EUSART_Initialize(9600);
  4815  280D  3000               	movlw	0
  4816  280E  0020               	movlb	0	; select bank0
  4817  280F  00A9               	movwf	EUSART_Initialize@baudrate+3
  4818  2810  3000               	movlw	0
  4819  2811  00A8               	movwf	EUSART_Initialize@baudrate+2
  4820  2812  3025               	movlw	37
  4821  2813  00A7               	movwf	EUSART_Initialize@baudrate+1
  4822  2814  3080               	movlw	128
  4823  2815  00A6               	movwf	EUSART_Initialize@baudrate
  4824  2816  31AE  26A4  31A8   	fcall	_EUSART_Initialize
  4825                           
  4826                           ;main.c: 82:     init_TMR1();
  4827  2819  31B3  232D  31A8   	fcall	_init_TMR1
  4828                           
  4829                           ;main.c: 83:     init_RGB();
  4830  281C  3198  2001  31A8   	fcall	_init_RGB
  4831  281F                     l8496:	
  4832                           
  4833                           ;main.c: 87:         statemachine();
  4834  281F  3186  26D5  31A8   	fcall	_statemachine
  4835                           
  4836                           ;main.c: 89:         _delay((unsigned long)((10)*(16000000/4000.0)));
  4837  2822  3034               	movlw	52
  4838  2823  0023               	movlb	3	; select bank3
  4839  2824  00E5               	movwf	??_main^(0+384)
  4840  2825  30F1               	movlw	241
  4841  2826                     u12007:	
  4842  2826  0B89               	decfsz	9,f
  4843  2827  2826               	goto	u12007
  4844  2828  0BE5               	decfsz	??_main^(0+384),f
  4845  2829  2826               	goto	u12007
  4846  282A  3200               	nop2
  4847  282B  281F               	goto	l8496
  4848  282C                     __end_of_main:	
  4849                           
  4850                           	psect	text1
  4851  06D5                     __ptext1:	
  4852 ;; *************** function _statemachine *****************
  4853 ;; Defined at:
  4854 ;;		line 95 in file "main.c"
  4855 ;; Parameters:    Size  Location     Type
  4856 ;;		None
  4857 ;; Auto vars:     Size  Location     Type
  4858 ;;  success         1    0[BANK3 ] unsigned char 
  4859 ;; Return value:  Size  Location     Type
  4860 ;;                  1    wreg      void 
  4861 ;; Registers used:
  4862 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4863 ;; Tracked objects:
  4864 ;;		On entry : 0/0
  4865 ;;		On exit  : 0/0
  4866 ;;		Unchanged: 0/0
  4867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4869 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4870 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4871 ;;      Totals:         0       0       0       2       1       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4872 ;;Total ram usage:        3 bytes
  4873 ;; Hardware stack levels used:    1
  4874 ;; Hardware stack levels required when called:   11
  4875 ;; This function calls:
  4876 ;;		_AFE_getOverCurrentDischargeCurrent
  4877 ;;		_AFE_getSetCurrentSenseRes
  4878 ;;		_AFE_getSetShortCircuitCurrent
  4879 ;;		_EUSART_Write_Text
  4880 ;;		_RGB_AWAIT_AFE_CONN
  4881 ;;		_RGB_color
  4882 ;;		_beginAFEcommunication
  4883 ;;		_init_AFE
  4884 ;;		_printotAFERegisters
  4885 ;;		_snprintf
  4886 ;; This function is called by:
  4887 ;;		_main
  4888 ;; This function uses a non-reentrant model
  4889 ;;
  4890                           
  4891                           
  4892                           ;psect for function _statemachine
  4893  06D5                     _statemachine:	
  4894                           
  4895                           ;main.c: 97:     switch (currState) {
  4896                           
  4897                           ;incstack = 0
  4898                           ; Regs used in _statemachine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4899  06D5  2FE8               	goto	l8478
  4900  06D6                     l8420:	
  4901                           
  4902                           ;main.c: 100:             if (tmr1_flag) {
  4903  06D6  0023               	movlb	3	; select bank3
  4904  06D7  0858               	movf	_tmr1_flag^(0+384),w	;volatile
  4905  06D8  1903               	btfsc	3,2
  4906  06D9  0008               	return
  4907                           
  4908                           ;main.c: 101:                 tmr1_flag = 0;
  4909  06DA  01D8               	clrf	_tmr1_flag^(0+384)	;volatile
  4910                           
  4911                           ;main.c: 102:                 RGB_AWAIT_AFE_CONN();
  4912  06DB  31B4  24F9  3186   	fcall	_RGB_AWAIT_AFE_CONN
  4913                           
  4914                           ;main.c: 103:                 uint8_t success = beginAFEcommunication();
  4915  06DE  31AF  274C  3186   	fcall	_beginAFEcommunication
  4916  06E1  0020               	movlb	0	; select bank0
  4917  06E2  0820               	movf	?_beginAFEcommunication,w
  4918  06E3  0022               	movlb	2	; select bank2
  4919  06E4  00EE               	movwf	??_statemachine^(0+256)
  4920  06E5  086E               	movf	??_statemachine^(0+256),w
  4921  06E6  0023               	movlb	3	; select bank3
  4922  06E7  00E4               	movwf	statemachine@success^(0+384)
  4923                           
  4924                           ;main.c: 106:                 EUSART_Write_Text("Attempting to communicate with AFE...\n
      +                          \r");
  4925  06E8  3076               	movlw	low (STR_1| (0+32768))
  4926  06E9  00F2               	movwf	EUSART_Write_Text@text
  4927  06EA  30B9               	movlw	high (STR_1| (0+32768))
  4928  06EB  00F3               	movwf	EUSART_Write_Text@text+1
  4929  06EC  31B3  23EF  3186   	fcall	_EUSART_Write_Text
  4930                           
  4931                           ;main.c: 108:                 if (success) {
  4932  06EF  0023               	movlb	3	; select bank3
  4933  06F0  0864               	movf	statemachine@success^(0+384),w
  4934  06F1  1903               	btfsc	3,2
  4935  06F2  0008               	return
  4936                           
  4937                           ;main.c: 109:                     T1CONbits.TMR1ON = 0;
  4938  06F3  0020               	movlb	0	; select bank0
  4939  06F4  1018               	bcf	24,0	;volatile
  4940                           
  4941                           ;main.c: 110:                     PIE1bits.TMR1IE = 0;
  4942  06F5  0021               	movlb	1	; select bank1
  4943  06F6  1011               	bcf	17,0	;volatile
  4944                           
  4945                           ;main.c: 111:                     RGB_color(0);
  4946  06F7  3000               	movlw	0
  4947  06F8  00F1               	movwf	RGB_color@color
  4948  06F9  00F2               	movwf	RGB_color@color+1
  4949  06FA  31B4  24D8  3186   	fcall	_RGB_color
  4950                           
  4951                           ;main.c: 112:                     tmr1_flag = 0;
  4952  06FD  0023               	movlb	3	; select bank3
  4953  06FE  01D8               	clrf	_tmr1_flag^(0+384)	;volatile
  4954                           
  4955                           ;main.c: 115:                     _delay((unsigned long)((5)*(16000000/4000.0)));
  4956  06FF  301A               	movlw	26
  4957  0700  0022               	movlb	2	; select bank2
  4958  0701  00EE               	movwf	??_statemachine^(0+256)
  4959  0702  30F8               	movlw	248
  4960  0703                     u12017:	
  4961  0703  0B89               	decfsz	9,f
  4962  0704  2F03               	goto	u12017
  4963  0705  0BEE               	decfsz	??_statemachine^(0+256),f
  4964  0706  2F03               	goto	u12017
  4965  0707  0000               	nop
  4966                           
  4967                           ;main.c: 116:                     EUSART_Write_Text("Communication with BQ76920 AFE esta
      +                          blished!\n\r");
  4968  0708  3070               	movlw	low (STR_2| (0+32768))
  4969  0709  00F2               	movwf	EUSART_Write_Text@text
  4970  070A  30B8               	movlw	high (STR_2| (0+32768))
  4971  070B  00F3               	movwf	EUSART_Write_Text@text+1
  4972  070C  31B3  23EF  3186   	fcall	_EUSART_Write_Text
  4973                           
  4974                           ;main.c: 117:                     snprintf(messageBuffer, 127, "Obtained adcOffset = %i 
      +                          and adcGain = %i\n\r", adcOffset, adcGain);
  4975  070F  3071               	movlw	113
  4976  0710  0022               	movlb	2	; select bank2
  4977  0711  00DF               	movwf	snprintf@s^(0+256)
  4978  0712  3027               	movlw	39
  4979  0713  00E0               	movwf	(snprintf@s^(0+256)+1)
  4980  0714  307F               	movlw	127
  4981  0715  00E1               	movwf	snprintf@n^(0+256)
  4982  0716  3000               	movlw	0
  4983  0717  00E2               	movwf	(snprintf@n^(0+256)+1)
  4984  0718  30F7               	movlw	low (STR_3| (0+32768))
  4985  0719  00E3               	movwf	snprintf@fmt^(0+256)
  4986  071A  30B8               	movlw	high (STR_3| (0+32768))
  4987  071B  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  4988  071C  0023               	movlb	3	; select bank3
  4989  071D  0851               	movf	(_adcOffset+1)^(0+384),w
  4990  071E  0022               	movlb	2	; select bank2
  4991  071F  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  4992  0720  0023               	movlb	3	; select bank3
  4993  0721  0850               	movf	_adcOffset^(0+384),w
  4994  0722  0022               	movlb	2	; select bank2
  4995  0723  00E5               	movwf	(?_snprintf^(0+256)+6)
  4996  0724  0023               	movlb	3	; select bank3
  4997  0725  0853               	movf	(_adcGain+1)^(0+384),w
  4998  0726  0022               	movlb	2	; select bank2
  4999  0727  00E8               	movwf	((?_snprintf+1)^(0+256)+8)
  5000  0728  0023               	movlb	3	; select bank3
  5001  0729  0852               	movf	_adcGain^(0+384),w
  5002  072A  0022               	movlb	2	; select bank2
  5003  072B  00E7               	movwf	(?_snprintf^(0+256)+8)
  5004  072C  31B3  23D7  3186   	fcall	_snprintf
  5005                           
  5006                           ;main.c: 118:                     EUSART_Write_Text(messageBuffer);
  5007  072F  3071               	movlw	113
  5008  0730  00F2               	movwf	EUSART_Write_Text@text
  5009  0731  3027               	movlw	39
  5010  0732  00F3               	movwf	EUSART_Write_Text@text+1
  5011  0733  31B3  23EF  3186   	fcall	_EUSART_Write_Text
  5012                           
  5013                           ;main.c: 119:                     EUSART_Write_Text("Attempt to set initial system param
      +                          eters to AFE...\n\r");
  5014  0736  303B               	movlw	low (STR_4| (0+32768))
  5015  0737  00F2               	movwf	EUSART_Write_Text@text
  5016  0738  30B8               	movlw	high (STR_4| (0+32768))
  5017  0739  00F3               	movwf	EUSART_Write_Text@text+1
  5018  073A  31B3  23EF         	fcall	_EUSART_Write_Text
  5019                           
  5020                           ;main.c: 121:                     currState = 1;
  5021  073C  0023               	movlb	3	; select bank3
  5022  073D  01D9               	clrf	_currState^(0+384)
  5023  073E  0AD9               	incf	_currState^(0+384),f
  5024  073F  0008               	return
  5025  0740                     l8450:	
  5026                           
  5027                           ;main.c: 130:             init_AFE();
  5028  0740  3188  2001  3186   	fcall	_init_AFE
  5029                           
  5030                           ;main.c: 133:             _delay((unsigned long)((5)*(16000000/4000.0)));
  5031  0743  301A               	movlw	26
  5032  0744  0022               	movlb	2	; select bank2
  5033  0745  00EE               	movwf	??_statemachine^(0+256)
  5034  0746  30F8               	movlw	248
  5035  0747                     u12027:	
  5036  0747  0B89               	decfsz	9,f
  5037  0748  2F47               	goto	u12027
  5038  0749  0BEE               	decfsz	??_statemachine^(0+256),f
  5039  074A  2F47               	goto	u12027
  5040  074B  0000               	nop
  5041                           
  5042                           ;main.c: 134:             EUSART_Write_Text("\n\r");
  5043  074C  3022               	movlw	low ((STR_14+18)| (0+32768))
  5044  074D  00F2               	movwf	EUSART_Write_Text@text
  5045  074E  30BA               	movlw	high ((STR_14+18)| (0+32768))
  5046  074F  00F3               	movwf	EUSART_Write_Text@text+1
  5047  0750  31B3  23EF  3186   	fcall	_EUSART_Write_Text
  5048                           
  5049                           ;main.c: 135:             snprintf(messageBuffer, 127, "Current sense resistor value: %.
      +                          4f ohms\n\r", AFE_getSetCurrentSenseRes());
  5050  0753  3071               	movlw	113
  5051  0754  0022               	movlb	2	; select bank2
  5052  0755  00DF               	movwf	snprintf@s^(0+256)
  5053  0756  3027               	movlw	39
  5054  0757  00E0               	movwf	(snprintf@s^(0+256)+1)
  5055  0758  307F               	movlw	127
  5056  0759  00E1               	movwf	snprintf@n^(0+256)
  5057  075A  3000               	movlw	0
  5058  075B  00E2               	movwf	(snprintf@n^(0+256)+1)
  5059  075C  304C               	movlw	low (STR_6| (0+32768))
  5060  075D  00E3               	movwf	snprintf@fmt^(0+256)
  5061  075E  30B9               	movlw	high (STR_6| (0+32768))
  5062  075F  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5063  0760  31B3  230F  3186   	fcall	_AFE_getSetCurrentSenseRes
  5064  0763  0874               	movf	?_AFE_getSetCurrentSenseRes+3,w
  5065  0764  0022               	movlb	2	; select bank2
  5066  0765  00E8               	movwf	((?_snprintf+3)^(0+256)+6)
  5067  0766  0873               	movf	?_AFE_getSetCurrentSenseRes+2,w
  5068  0767  00E7               	movwf	((?_snprintf+2)^(0+256)+6)
  5069  0768  0872               	movf	?_AFE_getSetCurrentSenseRes+1,w
  5070  0769  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5071  076A  0871               	movf	?_AFE_getSetCurrentSenseRes,w
  5072  076B  00E5               	movwf	(?_snprintf^(0+256)+6)
  5073  076C  31B3  23D7  3186   	fcall	_snprintf
  5074                           
  5075                           ;main.c: 136:             EUSART_Write_Text(messageBuffer);
  5076  076F  3071               	movlw	113
  5077  0770  00F2               	movwf	EUSART_Write_Text@text
  5078  0771  3027               	movlw	39
  5079  0772  00F3               	movwf	EUSART_Write_Text@text+1
  5080  0773  31B3  23EF  3186   	fcall	_EUSART_Write_Text
  5081                           
  5082                           ;main.c: 137:             snprintf(messageBuffer, 127, "Set short circuit current for AF
      +                          E: %lu mA\n\r", AFE_getSetShortCircuitCurrent());
  5083  0776  3071               	movlw	113
  5084  0777  0022               	movlb	2	; select bank2
  5085  0778  00DF               	movwf	snprintf@s^(0+256)
  5086  0779  3027               	movlw	39
  5087  077A  00E0               	movwf	(snprintf@s^(0+256)+1)
  5088  077B  307F               	movlw	127
  5089  077C  00E1               	movwf	snprintf@n^(0+256)
  5090  077D  3000               	movlw	0
  5091  077E  00E2               	movwf	(snprintf@n^(0+256)+1)
  5092  077F  30CB               	movlw	low (STR_7| (0+32768))
  5093  0780  00E3               	movwf	snprintf@fmt^(0+256)
  5094  0781  30B8               	movlw	high (STR_7| (0+32768))
  5095  0782  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5096  0783  31B7  270E  3186   	fcall	_AFE_getSetShortCircuitCurrent
  5097  0786  0020               	movlb	0	; select bank0
  5098  0787  0866               	movf	?_AFE_getSetShortCircuitCurrent+3,w
  5099  0788  0022               	movlb	2	; select bank2
  5100  0789  00E8               	movwf	((?_snprintf+3)^(0+256)+6)
  5101  078A  0020               	movlb	0	; select bank0
  5102  078B  0865               	movf	?_AFE_getSetShortCircuitCurrent+2,w
  5103  078C  0022               	movlb	2	; select bank2
  5104  078D  00E7               	movwf	((?_snprintf+2)^(0+256)+6)
  5105  078E  0020               	movlb	0	; select bank0
  5106  078F  0864               	movf	?_AFE_getSetShortCircuitCurrent+1,w
  5107  0790  0022               	movlb	2	; select bank2
  5108  0791  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5109  0792  0020               	movlb	0	; select bank0
  5110  0793  0863               	movf	?_AFE_getSetShortCircuitCurrent,w
  5111  0794  0022               	movlb	2	; select bank2
  5112  0795  00E5               	movwf	(?_snprintf^(0+256)+6)
  5113  0796  31B3  23D7  3186   	fcall	_snprintf
  5114                           
  5115                           ;main.c: 138:             EUSART_Write_Text(messageBuffer);
  5116  0799  3071               	movlw	113
  5117  079A  00F2               	movwf	EUSART_Write_Text@text
  5118  079B  3027               	movlw	39
  5119  079C  00F3               	movwf	EUSART_Write_Text@text+1
  5120  079D  31B3  23EF  3186   	fcall	_EUSART_Write_Text
  5121                           
  5122                           ;main.c: 139:             snprintf(messageBuffer, 127, "Set Over-current discharge prote
      +                          ction  for AFE: %lu mA\n\r", AFE_getOverCurrentDischargeCurrent());
  5123  07A0  3071               	movlw	113
  5124  07A1  0022               	movlb	2	; select bank2
  5125  07A2  00DF               	movwf	snprintf@s^(0+256)
  5126  07A3  3027               	movlw	39
  5127  07A4  00E0               	movwf	(snprintf@s^(0+256)+1)
  5128  07A5  307F               	movlw	127
  5129  07A6  00E1               	movwf	snprintf@n^(0+256)
  5130  07A7  3000               	movlw	0
  5131  07A8  00E2               	movwf	(snprintf@n^(0+256)+1)
  5132  07A9  3002               	movlw	low (STR_8| (0+32768))
  5133  07AA  00E3               	movwf	snprintf@fmt^(0+256)
  5134  07AB  30B8               	movlw	high (STR_8| (0+32768))
  5135  07AC  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5136  07AD  31B6  26BE  3186   	fcall	_AFE_getOverCurrentDischargeCurrent
  5137  07B0  0020               	movlb	0	; select bank0
  5138  07B1  0866               	movf	?_AFE_getOverCurrentDischargeCurrent+3,w
  5139  07B2  0022               	movlb	2	; select bank2
  5140  07B3  00E8               	movwf	((?_snprintf+3)^(0+256)+6)
  5141  07B4  0020               	movlb	0	; select bank0
  5142  07B5  0865               	movf	?_AFE_getOverCurrentDischargeCurrent+2,w
  5143  07B6  0022               	movlb	2	; select bank2
  5144  07B7  00E7               	movwf	((?_snprintf+2)^(0+256)+6)
  5145  07B8  0020               	movlb	0	; select bank0
  5146  07B9  0864               	movf	?_AFE_getOverCurrentDischargeCurrent+1,w
  5147  07BA  0022               	movlb	2	; select bank2
  5148  07BB  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5149  07BC  0020               	movlb	0	; select bank0
  5150  07BD  0863               	movf	?_AFE_getOverCurrentDischargeCurrent,w
  5151  07BE  0022               	movlb	2	; select bank2
  5152  07BF  00E5               	movwf	(?_snprintf^(0+256)+6)
  5153  07C0  31B3  23D7  3186   	fcall	_snprintf
  5154                           
  5155                           ;main.c: 140:             EUSART_Write_Text(messageBuffer);
  5156  07C3  3071               	movlw	113
  5157  07C4  00F2               	movwf	EUSART_Write_Text@text
  5158  07C5  3027               	movlw	39
  5159  07C6  00F3               	movwf	EUSART_Write_Text@text+1
  5160  07C7  31B3  23EF  3186   	fcall	_EUSART_Write_Text
  5161                           
  5162                           ;main.c: 141:             printotAFERegisters();
  5163  07CA  3191  21CC  3186   	fcall	_printotAFERegisters
  5164                           
  5165                           ;main.c: 142:             EUSART_Write_Text("Initial parameters for BQ76920 AFE set!\n\r
      +                          ");
  5166  07CD  3022               	movlw	low (STR_9| (0+32768))
  5167  07CE  00F2               	movwf	EUSART_Write_Text@text
  5168  07CF  30B9               	movlw	high (STR_9| (0+32768))
  5169  07D0  00F3               	movwf	EUSART_Write_Text@text+1
  5170  07D1  31B3  23EF  3186   	fcall	_EUSART_Write_Text
  5171                           
  5172                           ;main.c: 143:             EUSART_Write_Text("Now reading AFE data at regular intervals.\
      +                          n\r");
  5173  07D4  309E               	movlw	low (STR_10| (0+32768))
  5174  07D5  00F2               	movwf	EUSART_Write_Text@text
  5175  07D6  30B8               	movlw	high (STR_10| (0+32768))
  5176  07D7  00F3               	movwf	EUSART_Write_Text@text+1
  5177  07D8  31B3  23EF  3186   	fcall	_EUSART_Write_Text
  5178                           
  5179                           ;main.c: 149:             RGB_color(1);
  5180  07DB  3001               	movlw	1
  5181  07DC  00F1               	movwf	RGB_color@color
  5182  07DD  3000               	movlw	0
  5183  07DE  00F2               	movwf	RGB_color@color+1
  5184  07DF  31B4  24D8         	fcall	_RGB_color
  5185                           
  5186                           ;main.c: 150:             currState = 2;
  5187  07E1  3002               	movlw	2
  5188  07E2  0022               	movlb	2	; select bank2
  5189  07E3  00EE               	movwf	??_statemachine^(0+256)
  5190  07E4  086E               	movf	??_statemachine^(0+256),w
  5191  07E5  0023               	movlb	3	; select bank3
  5192  07E6  00D9               	movwf	_currState^(0+384)
  5193                           
  5194                           ;main.c: 151:             break;
  5195  07E7  0008               	return
  5196  07E8                     l8478:	
  5197  07E8  0023               	movlb	3	; select bank3
  5198  07E9  0859               	movf	_currState^(0+384),w
  5199  07EA  0022               	movlb	2	; select bank2
  5200  07EB  00EE               	movwf	??_statemachine^(0+256)
  5201  07EC  01EF               	clrf	(??_statemachine^(0+256)+1)
  5202                           
  5203                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5204                           ; Switch size 1, requested type "simple"
  5205                           ; Number of cases is 1, Range of values is 0 to 0
  5206                           ; switch strategies available:
  5207                           ; Name         Instructions Cycles
  5208                           ; simple_byte            4     3 (average)
  5209                           ; direct_byte            8     6 (fixed)
  5210                           ; jumptable            260     6 (fixed)
  5211                           ;	Chosen strategy is simple_byte
  5212  07ED  086F               	movf	(??_statemachine+1)^(0+256),w
  5213  07EE  3A00               	xorlw	0	; case 0
  5214  07EF  1903               	skipnz
  5215  07F0  2FF2               	goto	l8600
  5216  07F1  2FFD               	goto	l151
  5217  07F2                     l8600:	
  5218                           
  5219                           ; Switch size 1, requested type "simple"
  5220                           ; Number of cases is 3, Range of values is 0 to 2
  5221                           ; switch strategies available:
  5222                           ; Name         Instructions Cycles
  5223                           ; simple_byte           10     6 (average)
  5224                           ; direct_byte           12     6 (fixed)
  5225                           ; jumptable            260     6 (fixed)
  5226                           ;	Chosen strategy is simple_byte
  5227  07F2  086E               	movf	??_statemachine^(0+256),w
  5228  07F3  3A00               	xorlw	0	; case 0
  5229  07F4  1903               	skipnz
  5230  07F5  2ED6               	goto	l8420
  5231  07F6  3A01               	xorlw	1	; case 1
  5232  07F7  1903               	skipnz
  5233  07F8  2F40               	goto	l8450
  5234  07F9  3A03               	xorlw	3	; case 2
  5235  07FA  1903               	skipnz
  5236  07FB  2FFD               	goto	l151
  5237  07FC  2FFD               	goto	l151
  5238  07FD                     l151:	
  5239  07FD  0008               	return
  5240  07FE                     __end_of_statemachine:	
  5241                           
  5242                           	psect	text2
  5243  11CC                     __ptext2:	
  5244 ;; *************** function _printotAFERegisters *****************
  5245 ;; Defined at:
  5246 ;;		line 163 in file "BQ76920.c"
  5247 ;; Parameters:    Size  Location     Type
  5248 ;;		None
  5249 ;; Auto vars:     Size  Location     Type
  5250 ;;		None
  5251 ;; Return value:  Size  Location     Type
  5252 ;;                  1    wreg      void 
  5253 ;; Registers used:
  5254 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5255 ;; Tracked objects:
  5256 ;;		On entry : 0/0
  5257 ;;		On exit  : 0/0
  5258 ;;		Unchanged: 0/0
  5259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5262 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5263 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5264 ;;Total ram usage:        1 bytes
  5265 ;; Hardware stack levels used:    1
  5266 ;; Hardware stack levels required when called:   10
  5267 ;; This function calls:
  5268 ;;		_EUSART_Write_Text
  5269 ;;		_readRegister
  5270 ;;		_snprintf
  5271 ;; This function is called by:
  5272 ;;		_statemachine
  5273 ;; This function uses a non-reentrant model
  5274 ;;
  5275                           
  5276                           
  5277                           ;psect for function _printotAFERegisters
  5278  11CC                     _printotAFERegisters:	
  5279                           
  5280                           ;BQ76920.c: 165:     _delay((unsigned long)((5)*(16000000/4000.0)));
  5281                           
  5282                           ;incstack = 0
  5283                           ; Regs used in _printotAFERegisters: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5284  11CC  301A               	movlw	26
  5285  11CD  0022               	movlb	2	; select bank2
  5286  11CE  00ED               	movwf	??_printotAFERegisters^(0+256)
  5287  11CF  30F8               	movlw	248
  5288  11D0                     u12037:	
  5289  11D0  0B89               	decfsz	9,f
  5290  11D1  29D0               	goto	u12037
  5291  11D2  0BED               	decfsz	??_printotAFERegisters^(0+256),f
  5292  11D3  29D0               	goto	u12037
  5293  11D4  0000               	nop
  5294                           
  5295                           ;BQ76920.c: 167:     EUSART_Write_Text("Printing out AFE register values...\n\r");
  5296  11D5  309E               	movlw	low (STR_11| (0+32768))
  5297  11D6  00F2               	movwf	EUSART_Write_Text@text
  5298  11D7  30B9               	movlw	high (STR_11| (0+32768))
  5299  11D8  00F3               	movwf	EUSART_Write_Text@text+1
  5300  11D9  31B3  23EF  3191   	fcall	_EUSART_Write_Text
  5301                           
  5302                           ;BQ76920.c: 168:     EUSART_Write_Text("\n\r");
  5303  11DC  3022               	movlw	low ((STR_14+18)| (0+32768))
  5304  11DD  00F2               	movwf	EUSART_Write_Text@text
  5305  11DE  30BA               	movlw	high ((STR_14+18)| (0+32768))
  5306  11DF  00F3               	movwf	EUSART_Write_Text@text+1
  5307  11E0  31B3  23EF  3191   	fcall	_EUSART_Write_Text
  5308                           
  5309                           ;BQ76920.c: 169:     snprintf(messageBuffer, 127, "0x00 SYS_STAT: %i \n\r", readRegister
      +                          (0x18, 0x00));
  5310  11E3  3071               	movlw	113
  5311  11E4  0022               	movlb	2	; select bank2
  5312  11E5  00DF               	movwf	snprintf@s^(0+256)
  5313  11E6  3027               	movlw	39
  5314  11E7  00E0               	movwf	(snprintf@s^(0+256)+1)
  5315  11E8  307F               	movlw	127
  5316  11E9  00E1               	movwf	snprintf@n^(0+256)
  5317  11EA  3000               	movlw	0
  5318  11EB  00E2               	movwf	(snprintf@n^(0+256)+1)
  5319  11EC  3064               	movlw	low (STR_13| (0+32768))
  5320  11ED  00E3               	movwf	snprintf@fmt^(0+256)
  5321  11EE  30BA               	movlw	high (STR_13| (0+32768))
  5322  11EF  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5323  11F0  3018               	movlw	24
  5324  11F1  00F5               	movwf	readRegister@slaveAddress
  5325  11F2  3000               	movlw	0
  5326  11F3  00F6               	movwf	readRegister@slaveAddress+1
  5327  11F4  3000               	movlw	0
  5328  11F5  00F7               	movwf	readRegister@regAddress
  5329  11F6  00F8               	movwf	readRegister@regAddress+1
  5330  11F7  31B5  25B6  3191   	fcall	_readRegister
  5331  11FA  0876               	movf	?_readRegister+1,w
  5332  11FB  0022               	movlb	2	; select bank2
  5333  11FC  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5334  11FD  0875               	movf	?_readRegister,w
  5335  11FE  00E5               	movwf	(?_snprintf^(0+256)+6)
  5336  11FF  31B3  23D7  3191   	fcall	_snprintf
  5337                           
  5338                           ;BQ76920.c: 170:     EUSART_Write_Text(messageBuffer);
  5339  1202  3071               	movlw	113
  5340  1203  00F2               	movwf	EUSART_Write_Text@text
  5341  1204  3027               	movlw	39
  5342  1205  00F3               	movwf	EUSART_Write_Text@text+1
  5343  1206  31B3  23EF  3191   	fcall	_EUSART_Write_Text
  5344                           
  5345                           ;BQ76920.c: 171:     snprintf(messageBuffer, 127, "0x01 CELLBAL1: %i \n\r", readRegister
      +                          (0x18, 0x01));
  5346  1209  3071               	movlw	113
  5347  120A  0022               	movlb	2	; select bank2
  5348  120B  00DF               	movwf	snprintf@s^(0+256)
  5349  120C  3027               	movlw	39
  5350  120D  00E0               	movwf	(snprintf@s^(0+256)+1)
  5351  120E  307F               	movlw	127
  5352  120F  00E1               	movwf	snprintf@n^(0+256)
  5353  1210  3000               	movlw	0
  5354  1211  00E2               	movwf	(snprintf@n^(0+256)+1)
  5355  1212  3010               	movlw	low (STR_14| (0+32768))
  5356  1213  00E3               	movwf	snprintf@fmt^(0+256)
  5357  1214  30BA               	movlw	high (STR_14| (0+32768))
  5358  1215  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5359  1216  3018               	movlw	24
  5360  1217  00F5               	movwf	readRegister@slaveAddress
  5361  1218  3000               	movlw	0
  5362  1219  00F6               	movwf	readRegister@slaveAddress+1
  5363  121A  3001               	movlw	1
  5364  121B  00F7               	movwf	readRegister@regAddress
  5365  121C  3000               	movlw	0
  5366  121D  00F8               	movwf	readRegister@regAddress+1
  5367  121E  31B5  25B6  3191   	fcall	_readRegister
  5368  1221  0876               	movf	?_readRegister+1,w
  5369  1222  0022               	movlb	2	; select bank2
  5370  1223  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5371  1224  0875               	movf	?_readRegister,w
  5372  1225  00E5               	movwf	(?_snprintf^(0+256)+6)
  5373  1226  31B3  23D7  3191   	fcall	_snprintf
  5374                           
  5375                           ;BQ76920.c: 172:     EUSART_Write_Text(messageBuffer);
  5376  1229  3071               	movlw	113
  5377  122A  00F2               	movwf	EUSART_Write_Text@text
  5378  122B  3027               	movlw	39
  5379  122C  00F3               	movwf	EUSART_Write_Text@text+1
  5380  122D  31B3  23EF  3191   	fcall	_EUSART_Write_Text
  5381                           
  5382                           ;BQ76920.c: 173:     snprintf(messageBuffer, 127, "0x04 SYS_CTRL1: %i \n\r", readRegiste
      +                          r(0x18, 0x04));
  5383  1230  3071               	movlw	113
  5384  1231  0022               	movlb	2	; select bank2
  5385  1232  00DF               	movwf	snprintf@s^(0+256)
  5386  1233  3027               	movlw	39
  5387  1234  00E0               	movwf	(snprintf@s^(0+256)+1)
  5388  1235  307F               	movlw	127
  5389  1236  00E1               	movwf	snprintf@n^(0+256)
  5390  1237  3000               	movlw	0
  5391  1238  00E2               	movwf	(snprintf@n^(0+256)+1)
  5392  1239  30E4               	movlw	low (STR_15| (0+32768))
  5393  123A  00E3               	movwf	snprintf@fmt^(0+256)
  5394  123B  30B9               	movlw	high (STR_15| (0+32768))
  5395  123C  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5396  123D  3018               	movlw	24
  5397  123E  00F5               	movwf	readRegister@slaveAddress
  5398  123F  3000               	movlw	0
  5399  1240  00F6               	movwf	readRegister@slaveAddress+1
  5400  1241  3004               	movlw	4
  5401  1242  00F7               	movwf	readRegister@regAddress
  5402  1243  3000               	movlw	0
  5403  1244  00F8               	movwf	readRegister@regAddress+1
  5404  1245  31B5  25B6  3191   	fcall	_readRegister
  5405  1248  0876               	movf	?_readRegister+1,w
  5406  1249  0022               	movlb	2	; select bank2
  5407  124A  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5408  124B  0875               	movf	?_readRegister,w
  5409  124C  00E5               	movwf	(?_snprintf^(0+256)+6)
  5410  124D  31B3  23D7  3191   	fcall	_snprintf
  5411                           
  5412                           ;BQ76920.c: 174:     EUSART_Write_Text(messageBuffer);
  5413  1250  3071               	movlw	113
  5414  1251  00F2               	movwf	EUSART_Write_Text@text
  5415  1252  3027               	movlw	39
  5416  1253  00F3               	movwf	EUSART_Write_Text@text+1
  5417  1254  31B3  23EF  3191   	fcall	_EUSART_Write_Text
  5418                           
  5419                           ;BQ76920.c: 175:     snprintf(messageBuffer, 127, "0x05 SYS_CTRL2: %i \n\r", readRegiste
      +                          r(0x18, 0x05));
  5420  1257  3071               	movlw	113
  5421  1258  0022               	movlb	2	; select bank2
  5422  1259  00DF               	movwf	snprintf@s^(0+256)
  5423  125A  3027               	movlw	39
  5424  125B  00E0               	movwf	(snprintf@s^(0+256)+1)
  5425  125C  307F               	movlw	127
  5426  125D  00E1               	movwf	snprintf@n^(0+256)
  5427  125E  3000               	movlw	0
  5428  125F  00E2               	movwf	(snprintf@n^(0+256)+1)
  5429  1260  30FA               	movlw	low (STR_16| (0+32768))
  5430  1261  00E3               	movwf	snprintf@fmt^(0+256)
  5431  1262  30B9               	movlw	high (STR_16| (0+32768))
  5432  1263  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5433  1264  3018               	movlw	24
  5434  1265  00F5               	movwf	readRegister@slaveAddress
  5435  1266  3000               	movlw	0
  5436  1267  00F6               	movwf	readRegister@slaveAddress+1
  5437  1268  3005               	movlw	5
  5438  1269  00F7               	movwf	readRegister@regAddress
  5439  126A  3000               	movlw	0
  5440  126B  00F8               	movwf	readRegister@regAddress+1
  5441  126C  31B5  25B6  3191   	fcall	_readRegister
  5442  126F  0876               	movf	?_readRegister+1,w
  5443  1270  0022               	movlb	2	; select bank2
  5444  1271  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5445  1272  0875               	movf	?_readRegister,w
  5446  1273  00E5               	movwf	(?_snprintf^(0+256)+6)
  5447  1274  31B3  23D7  3191   	fcall	_snprintf
  5448                           
  5449                           ;BQ76920.c: 176:     EUSART_Write_Text(messageBuffer);
  5450  1277  3071               	movlw	113
  5451  1278  00F2               	movwf	EUSART_Write_Text@text
  5452  1279  3027               	movlw	39
  5453  127A  00F3               	movwf	EUSART_Write_Text@text+1
  5454  127B  31B3  23EF  3191   	fcall	_EUSART_Write_Text
  5455                           
  5456                           ;BQ76920.c: 177:     snprintf(messageBuffer, 127, "0x06 PROTECT1: %i \n\r", readRegister
      +                          (0x18, 0x06));
  5457  127E  3071               	movlw	113
  5458  127F  0022               	movlb	2	; select bank2
  5459  1280  00DF               	movwf	snprintf@s^(0+256)
  5460  1281  3027               	movlw	39
  5461  1282  00E0               	movwf	(snprintf@s^(0+256)+1)
  5462  1283  307F               	movlw	127
  5463  1284  00E1               	movwf	snprintf@n^(0+256)
  5464  1285  3000               	movlw	0
  5465  1286  00E2               	movwf	(snprintf@n^(0+256)+1)
  5466  1287  3025               	movlw	low (STR_17| (0+32768))
  5467  1288  00E3               	movwf	snprintf@fmt^(0+256)
  5468  1289  30BA               	movlw	high (STR_17| (0+32768))
  5469  128A  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5470  128B  3018               	movlw	24
  5471  128C  00F5               	movwf	readRegister@slaveAddress
  5472  128D  3000               	movlw	0
  5473  128E  00F6               	movwf	readRegister@slaveAddress+1
  5474  128F  3006               	movlw	6
  5475  1290  00F7               	movwf	readRegister@regAddress
  5476  1291  3000               	movlw	0
  5477  1292  00F8               	movwf	readRegister@regAddress+1
  5478  1293  31B5  25B6  3191   	fcall	_readRegister
  5479  1296  0876               	movf	?_readRegister+1,w
  5480  1297  0022               	movlb	2	; select bank2
  5481  1298  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5482  1299  0875               	movf	?_readRegister,w
  5483  129A  00E5               	movwf	(?_snprintf^(0+256)+6)
  5484  129B  31B3  23D7  3191   	fcall	_snprintf
  5485                           
  5486                           ;BQ76920.c: 178:     EUSART_Write_Text(messageBuffer);
  5487  129E  3071               	movlw	113
  5488  129F  00F2               	movwf	EUSART_Write_Text@text
  5489  12A0  3027               	movlw	39
  5490  12A1  00F3               	movwf	EUSART_Write_Text@text+1
  5491  12A2  31B3  23EF  3191   	fcall	_EUSART_Write_Text
  5492                           
  5493                           ;BQ76920.c: 179:     snprintf(messageBuffer, 127, "0x07 PROTECT2: %i \n\r", readRegister
      +                          (0x18, 0x07));
  5494  12A5  3071               	movlw	113
  5495  12A6  0022               	movlb	2	; select bank2
  5496  12A7  00DF               	movwf	snprintf@s^(0+256)
  5497  12A8  3027               	movlw	39
  5498  12A9  00E0               	movwf	(snprintf@s^(0+256)+1)
  5499  12AA  307F               	movlw	127
  5500  12AB  00E1               	movwf	snprintf@n^(0+256)
  5501  12AC  3000               	movlw	0
  5502  12AD  00E2               	movwf	(snprintf@n^(0+256)+1)
  5503  12AE  303A               	movlw	low (STR_18| (0+32768))
  5504  12AF  00E3               	movwf	snprintf@fmt^(0+256)
  5505  12B0  30BA               	movlw	high (STR_18| (0+32768))
  5506  12B1  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5507  12B2  3018               	movlw	24
  5508  12B3  00F5               	movwf	readRegister@slaveAddress
  5509  12B4  3000               	movlw	0
  5510  12B5  00F6               	movwf	readRegister@slaveAddress+1
  5511  12B6  3007               	movlw	7
  5512  12B7  00F7               	movwf	readRegister@regAddress
  5513  12B8  3000               	movlw	0
  5514  12B9  00F8               	movwf	readRegister@regAddress+1
  5515  12BA  31B5  25B6  3191   	fcall	_readRegister
  5516  12BD  0876               	movf	?_readRegister+1,w
  5517  12BE  0022               	movlb	2	; select bank2
  5518  12BF  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5519  12C0  0875               	movf	?_readRegister,w
  5520  12C1  00E5               	movwf	(?_snprintf^(0+256)+6)
  5521  12C2  31B3  23D7  3191   	fcall	_snprintf
  5522                           
  5523                           ;BQ76920.c: 180:     EUSART_Write_Text(messageBuffer);
  5524  12C5  3071               	movlw	113
  5525  12C6  00F2               	movwf	EUSART_Write_Text@text
  5526  12C7  3027               	movlw	39
  5527  12C8  00F3               	movwf	EUSART_Write_Text@text+1
  5528  12C9  31B3  23EF  3191   	fcall	_EUSART_Write_Text
  5529                           
  5530                           ;BQ76920.c: 181:     snprintf(messageBuffer, 127, "0x08 PROTECT3: %i \n\r", readRegister
      +                          (0x18, 0x08));
  5531  12CC  3071               	movlw	113
  5532  12CD  0022               	movlb	2	; select bank2
  5533  12CE  00DF               	movwf	snprintf@s^(0+256)
  5534  12CF  3027               	movlw	39
  5535  12D0  00E0               	movwf	(snprintf@s^(0+256)+1)
  5536  12D1  307F               	movlw	127
  5537  12D2  00E1               	movwf	snprintf@n^(0+256)
  5538  12D3  3000               	movlw	0
  5539  12D4  00E2               	movwf	(snprintf@n^(0+256)+1)
  5540  12D5  304F               	movlw	low (STR_19| (0+32768))
  5541  12D6  00E3               	movwf	snprintf@fmt^(0+256)
  5542  12D7  30BA               	movlw	high (STR_19| (0+32768))
  5543  12D8  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5544  12D9  3018               	movlw	24
  5545  12DA  00F5               	movwf	readRegister@slaveAddress
  5546  12DB  3000               	movlw	0
  5547  12DC  00F6               	movwf	readRegister@slaveAddress+1
  5548  12DD  3008               	movlw	8
  5549  12DE  00F7               	movwf	readRegister@regAddress
  5550  12DF  3000               	movlw	0
  5551  12E0  00F8               	movwf	readRegister@regAddress+1
  5552  12E1  31B5  25B6  3191   	fcall	_readRegister
  5553  12E4  0876               	movf	?_readRegister+1,w
  5554  12E5  0022               	movlb	2	; select bank2
  5555  12E6  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5556  12E7  0875               	movf	?_readRegister,w
  5557  12E8  00E5               	movwf	(?_snprintf^(0+256)+6)
  5558  12E9  31B3  23D7  3191   	fcall	_snprintf
  5559                           
  5560                           ;BQ76920.c: 182:     EUSART_Write_Text(messageBuffer);
  5561  12EC  3071               	movlw	113
  5562  12ED  00F2               	movwf	EUSART_Write_Text@text
  5563  12EE  3027               	movlw	39
  5564  12EF  00F3               	movwf	EUSART_Write_Text@text+1
  5565  12F0  31B3  23EF  3191   	fcall	_EUSART_Write_Text
  5566                           
  5567                           ;BQ76920.c: 183:     snprintf(messageBuffer, 127, "0x09 OV_TRIP: %i \n\r", readRegister(
      +                          0x18, 0x09));
  5568  12F3  3071               	movlw	113
  5569  12F4  0022               	movlb	2	; select bank2
  5570  12F5  00DF               	movwf	snprintf@s^(0+256)
  5571  12F6  3027               	movlw	39
  5572  12F7  00E0               	movwf	(snprintf@s^(0+256)+1)
  5573  12F8  307F               	movlw	127
  5574  12F9  00E1               	movwf	snprintf@n^(0+256)
  5575  12FA  3000               	movlw	0
  5576  12FB  00E2               	movwf	(snprintf@n^(0+256)+1)
  5577  12FC  3079               	movlw	low (STR_20| (0+32768))
  5578  12FD  00E3               	movwf	snprintf@fmt^(0+256)
  5579  12FE  30BA               	movlw	high (STR_20| (0+32768))
  5580  12FF  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5581  1300  3018               	movlw	24
  5582  1301  00F5               	movwf	readRegister@slaveAddress
  5583  1302  3000               	movlw	0
  5584  1303  00F6               	movwf	readRegister@slaveAddress+1
  5585  1304  3009               	movlw	9
  5586  1305  00F7               	movwf	readRegister@regAddress
  5587  1306  3000               	movlw	0
  5588  1307  00F8               	movwf	readRegister@regAddress+1
  5589  1308  31B5  25B6  3191   	fcall	_readRegister
  5590  130B  0876               	movf	?_readRegister+1,w
  5591  130C  0022               	movlb	2	; select bank2
  5592  130D  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5593  130E  0875               	movf	?_readRegister,w
  5594  130F  00E5               	movwf	(?_snprintf^(0+256)+6)
  5595  1310  31B3  23D7  3191   	fcall	_snprintf
  5596                           
  5597                           ;BQ76920.c: 184:     EUSART_Write_Text(messageBuffer);
  5598  1313  3071               	movlw	113
  5599  1314  00F2               	movwf	EUSART_Write_Text@text
  5600  1315  3027               	movlw	39
  5601  1316  00F3               	movwf	EUSART_Write_Text@text+1
  5602  1317  31B3  23EF  3191   	fcall	_EUSART_Write_Text
  5603                           
  5604                           ;BQ76920.c: 185:     snprintf(messageBuffer, 127, "0x0A UV_TRIP: %i \n\r", readRegister(
      +                          0x18, 0x0A));
  5605  131A  3071               	movlw	113
  5606  131B  0022               	movlb	2	; select bank2
  5607  131C  00DF               	movwf	snprintf@s^(0+256)
  5608  131D  3027               	movlw	39
  5609  131E  00E0               	movwf	(snprintf@s^(0+256)+1)
  5610  131F  307F               	movlw	127
  5611  1320  00E1               	movwf	snprintf@n^(0+256)
  5612  1321  3000               	movlw	0
  5613  1322  00E2               	movwf	(snprintf@n^(0+256)+1)
  5614  1323  308D               	movlw	low (STR_21| (0+32768))
  5615  1324  00E3               	movwf	snprintf@fmt^(0+256)
  5616  1325  30BA               	movlw	high (STR_21| (0+32768))
  5617  1326  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5618  1327  3018               	movlw	24
  5619  1328  00F5               	movwf	readRegister@slaveAddress
  5620  1329  3000               	movlw	0
  5621  132A  00F6               	movwf	readRegister@slaveAddress+1
  5622  132B  300A               	movlw	10
  5623  132C  00F7               	movwf	readRegister@regAddress
  5624  132D  3000               	movlw	0
  5625  132E  00F8               	movwf	readRegister@regAddress+1
  5626  132F  31B5  25B6  3191   	fcall	_readRegister
  5627  1332  0876               	movf	?_readRegister+1,w
  5628  1333  0022               	movlb	2	; select bank2
  5629  1334  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5630  1335  0875               	movf	?_readRegister,w
  5631  1336  00E5               	movwf	(?_snprintf^(0+256)+6)
  5632  1337  31B3  23D7  3191   	fcall	_snprintf
  5633                           
  5634                           ;BQ76920.c: 186:     EUSART_Write_Text(messageBuffer);
  5635  133A  3071               	movlw	113
  5636  133B  00F2               	movwf	EUSART_Write_Text@text
  5637  133C  3027               	movlw	39
  5638  133D  00F3               	movwf	EUSART_Write_Text@text+1
  5639  133E  31B3  23EF  3191   	fcall	_EUSART_Write_Text
  5640                           
  5641                           ;BQ76920.c: 187:     snprintf(messageBuffer, 127, "0x0B CC_CFG: %i \n\r", readRegister(0
      +                          x18, 0x0B));
  5642  1341  3071               	movlw	113
  5643  1342  0022               	movlb	2	; select bank2
  5644  1343  00DF               	movwf	snprintf@s^(0+256)
  5645  1344  3027               	movlw	39
  5646  1345  00E0               	movwf	(snprintf@s^(0+256)+1)
  5647  1346  307F               	movlw	127
  5648  1347  00E1               	movwf	snprintf@n^(0+256)
  5649  1348  3000               	movlw	0
  5650  1349  00E2               	movwf	(snprintf@n^(0+256)+1)
  5651  134A  30A1               	movlw	low (STR_22| (0+32768))
  5652  134B  00E3               	movwf	snprintf@fmt^(0+256)
  5653  134C  30BA               	movlw	high (STR_22| (0+32768))
  5654  134D  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5655  134E  3018               	movlw	24
  5656  134F  00F5               	movwf	readRegister@slaveAddress
  5657  1350  3000               	movlw	0
  5658  1351  00F6               	movwf	readRegister@slaveAddress+1
  5659  1352  300B               	movlw	11
  5660  1353  00F7               	movwf	readRegister@regAddress
  5661  1354  3000               	movlw	0
  5662  1355  00F8               	movwf	readRegister@regAddress+1
  5663  1356  31B5  25B6  3191   	fcall	_readRegister
  5664  1359  0876               	movf	?_readRegister+1,w
  5665  135A  0022               	movlb	2	; select bank2
  5666  135B  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5667  135C  0875               	movf	?_readRegister,w
  5668  135D  00E5               	movwf	(?_snprintf^(0+256)+6)
  5669  135E  31B3  23D7  3191   	fcall	_snprintf
  5670                           
  5671                           ;BQ76920.c: 188:     EUSART_Write_Text(messageBuffer);
  5672  1361  3071               	movlw	113
  5673  1362  00F2               	movwf	EUSART_Write_Text@text
  5674  1363  3027               	movlw	39
  5675  1364  00F3               	movwf	EUSART_Write_Text@text+1
  5676  1365  31B3  23EF  3191   	fcall	_EUSART_Write_Text
  5677                           
  5678                           ;BQ76920.c: 189:     snprintf(messageBuffer, 127, "0x32 CC_HI: %i \n\r", readRegister(0x
      +                          18, 0x32));
  5679  1368  3071               	movlw	113
  5680  1369  0022               	movlb	2	; select bank2
  5681  136A  00DF               	movwf	snprintf@s^(0+256)
  5682  136B  3027               	movlw	39
  5683  136C  00E0               	movwf	(snprintf@s^(0+256)+1)
  5684  136D  307F               	movlw	127
  5685  136E  00E1               	movwf	snprintf@n^(0+256)
  5686  136F  3000               	movlw	0
  5687  1370  00E2               	movwf	(snprintf@n^(0+256)+1)
  5688  1371  30B4               	movlw	low (STR_23| (0+32768))
  5689  1372  00E3               	movwf	snprintf@fmt^(0+256)
  5690  1373  30BA               	movlw	high (STR_23| (0+32768))
  5691  1374  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5692  1375  3018               	movlw	24
  5693  1376  00F5               	movwf	readRegister@slaveAddress
  5694  1377  3000               	movlw	0
  5695  1378  00F6               	movwf	readRegister@slaveAddress+1
  5696  1379  3032               	movlw	50
  5697  137A  00F7               	movwf	readRegister@regAddress
  5698  137B  3000               	movlw	0
  5699  137C  00F8               	movwf	readRegister@regAddress+1
  5700  137D  31B5  25B6  3191   	fcall	_readRegister
  5701  1380  0876               	movf	?_readRegister+1,w
  5702  1381  0022               	movlb	2	; select bank2
  5703  1382  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5704  1383  0875               	movf	?_readRegister,w
  5705  1384  00E5               	movwf	(?_snprintf^(0+256)+6)
  5706  1385  31B3  23D7  3191   	fcall	_snprintf
  5707                           
  5708                           ;BQ76920.c: 190:     EUSART_Write_Text(messageBuffer);
  5709  1388  3071               	movlw	113
  5710  1389  00F2               	movwf	EUSART_Write_Text@text
  5711  138A  3027               	movlw	39
  5712  138B  00F3               	movwf	EUSART_Write_Text@text+1
  5713  138C  31B3  23EF  3191   	fcall	_EUSART_Write_Text
  5714                           
  5715                           ;BQ76920.c: 191:     snprintf(messageBuffer, 127, "0x33 CC_LO: %i \n\r", readRegister(0x
      +                          18, 0x33));
  5716  138F  3071               	movlw	113
  5717  1390  0022               	movlb	2	; select bank2
  5718  1391  00DF               	movwf	snprintf@s^(0+256)
  5719  1392  3027               	movlw	39
  5720  1393  00E0               	movwf	(snprintf@s^(0+256)+1)
  5721  1394  307F               	movlw	127
  5722  1395  00E1               	movwf	snprintf@n^(0+256)
  5723  1396  3000               	movlw	0
  5724  1397  00E2               	movwf	(snprintf@n^(0+256)+1)
  5725  1398  30C6               	movlw	low (STR_24| (0+32768))
  5726  1399  00E3               	movwf	snprintf@fmt^(0+256)
  5727  139A  30BA               	movlw	high (STR_24| (0+32768))
  5728  139B  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5729  139C  3018               	movlw	24
  5730  139D  00F5               	movwf	readRegister@slaveAddress
  5731  139E  3000               	movlw	0
  5732  139F  00F6               	movwf	readRegister@slaveAddress+1
  5733  13A0  3033               	movlw	51
  5734  13A1  00F7               	movwf	readRegister@regAddress
  5735  13A2  3000               	movlw	0
  5736  13A3  00F8               	movwf	readRegister@regAddress+1
  5737  13A4  31B5  25B6  3191   	fcall	_readRegister
  5738  13A7  0876               	movf	?_readRegister+1,w
  5739  13A8  0022               	movlb	2	; select bank2
  5740  13A9  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5741  13AA  0875               	movf	?_readRegister,w
  5742  13AB  00E5               	movwf	(?_snprintf^(0+256)+6)
  5743  13AC  31B3  23D7  3191   	fcall	_snprintf
  5744                           
  5745                           ;BQ76920.c: 192:     EUSART_Write_Text(messageBuffer);
  5746  13AF  3071               	movlw	113
  5747  13B0  00F2               	movwf	EUSART_Write_Text@text
  5748  13B1  3027               	movlw	39
  5749  13B2  00F3               	movwf	EUSART_Write_Text@text+1
  5750  13B3  31B3  23EF  3191   	fcall	_EUSART_Write_Text
  5751                           
  5752                           ;BQ76920.c: 193:     EUSART_Write_Text("\n\r");
  5753  13B6  3022               	movlw	low ((STR_14+18)| (0+32768))
  5754  13B7  00F2               	movwf	EUSART_Write_Text@text
  5755  13B8  30BA               	movlw	high ((STR_14+18)| (0+32768))
  5756  13B9  00F3               	movwf	EUSART_Write_Text@text+1
  5757  13BA  31B3  23EF         	fcall	_EUSART_Write_Text
  5758  13BC  0008               	return
  5759  13BD                     __end_of_printotAFERegisters:	
  5760                           
  5761                           	psect	text3
  5762  33D7                     __ptext3:	
  5763 ;; *************** function _snprintf *****************
  5764 ;; Defined at:
  5765 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\snprintf.c"
  5766 ;; Parameters:    Size  Location     Type
  5767 ;;  s               2   63[BANK2 ] PTR unsigned char 
  5768 ;;		 -> messageBuffer(127), 
  5769 ;;  n               2   65[BANK2 ] unsigned int 
  5770 ;;  fmt             2   67[BANK2 ] PTR const unsigned char 
  5771 ;;		 -> STR_24(18), STR_23(18), STR_22(19), STR_21(20), 
  5772 ;;		 -> STR_20(20), STR_19(21), STR_18(21), STR_17(21), 
  5773 ;;		 -> STR_16(22), STR_15(22), STR_14(21), STR_13(21), 
  5774 ;;		 -> STR_8(57), STR_7(44), STR_6(42), STR_3(43), 
  5775 ;; Auto vars:     Size  Location     Type
  5776 ;;  ret             2    0        int 
  5777 ;;  ap              1   76[BANK2 ] PTR void [1]
  5778 ;;		 -> ?_snprintf(2), 
  5779 ;; Return value:  Size  Location     Type
  5780 ;;                  2   63[BANK2 ] int 
  5781 ;; Registers used:
  5782 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5783 ;; Tracked objects:
  5784 ;;		On entry : 0/0
  5785 ;;		On exit  : 0/0
  5786 ;;		Unchanged: 0/0
  5787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5788 ;;      Params:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5789 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5790 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5791 ;;      Totals:         0       0       0      14       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5792 ;;Total ram usage:       14 bytes
  5793 ;; Hardware stack levels used:    1
  5794 ;; Hardware stack levels required when called:    9
  5795 ;; This function calls:
  5796 ;;		_vsnprintf
  5797 ;; This function is called by:
  5798 ;;		_statemachine
  5799 ;;		_printotAFERegisters
  5800 ;; This function uses a non-reentrant model
  5801 ;;
  5802                           
  5803                           
  5804                           ;psect for function _snprintf
  5805  33D7                     _snprintf:	
  5806                           
  5807                           ;incstack = 0
  5808                           ; Regs used in _snprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5809  33D7  3065               	movlw	(low ((?_snprintf| (0+256)+6)))& (0+255)
  5810  33D8  0022               	movlb	2	; select bank2
  5811  33D9  00E9               	movwf	??_snprintf^(0+256)
  5812  33DA  0869               	movf	??_snprintf^(0+256),w
  5813  33DB  00EC               	movwf	snprintf@ap^(0+256)
  5814  33DC  0860               	movf	(snprintf@s+1)^(0+256),w
  5815  33DD  00CF               	movwf	(vsnprintf@s+1)^(0+256)
  5816  33DE  085F               	movf	snprintf@s^(0+256),w
  5817  33DF  00CE               	movwf	vsnprintf@s^(0+256)
  5818  33E0  0862               	movf	(snprintf@n+1)^(0+256),w
  5819  33E1  00D1               	movwf	(vsnprintf@n+1)^(0+256)
  5820  33E2  0861               	movf	snprintf@n^(0+256),w
  5821  33E3  00D0               	movwf	vsnprintf@n^(0+256)
  5822  33E4  0864               	movf	(snprintf@fmt+1)^(0+256),w
  5823  33E5  00D3               	movwf	(vsnprintf@fmt+1)^(0+256)
  5824  33E6  0863               	movf	snprintf@fmt^(0+256),w
  5825  33E7  00D2               	movwf	vsnprintf@fmt^(0+256)
  5826  33E8  306C               	movlw	(low (snprintf@ap| (0+256)))& (0+255)
  5827  33E9  00E9               	movwf	??_snprintf^(0+256)
  5828  33EA  0869               	movf	??_snprintf^(0+256),w
  5829  33EB  00D4               	movwf	vsnprintf@ap^(0+256)
  5830  33EC  31AA  22BF         	fcall	_vsnprintf
  5831  33EE  0008               	return
  5832  33EF                     __end_of_snprintf:	
  5833                           
  5834                           	psect	text4
  5835  2ABF                     __ptext4:	
  5836 ;; *************** function _vsnprintf *****************
  5837 ;; Defined at:
  5838 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_vsnprintf.c"
  5839 ;; Parameters:    Size  Location     Type
  5840 ;;  s               2   46[BANK2 ] PTR unsigned char 
  5841 ;;		 -> messageBuffer(127), 
  5842 ;;  n               2   48[BANK2 ] unsigned int 
  5843 ;;  fmt             2   50[BANK2 ] PTR const unsigned char 
  5844 ;;		 -> STR_24(18), STR_23(18), STR_22(19), STR_21(20), 
  5845 ;;		 -> STR_20(20), STR_19(21), STR_18(21), STR_17(21), 
  5846 ;;		 -> STR_16(22), STR_15(22), STR_14(21), STR_13(21), 
  5847 ;;		 -> STR_8(57), STR_7(44), STR_6(42), STR_3(43), 
  5848 ;;  ap              1   52[BANK2 ] PTR PTR void 
  5849 ;;		 -> snprintf@ap(1), 
  5850 ;; Auto vars:     Size  Location     Type
  5851 ;;  f               6   57[BANK2 ] struct _IO_FILE
  5852 ;;  cnt             2   55[BANK2 ] int 
  5853 ;; Return value:  Size  Location     Type
  5854 ;;                  2   46[BANK2 ] int 
  5855 ;; Registers used:
  5856 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5857 ;; Tracked objects:
  5858 ;;		On entry : 0/0
  5859 ;;		On exit  : 0/0
  5860 ;;		Unchanged: 0/0
  5861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5862 ;;      Params:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5863 ;;      Locals:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5864 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5865 ;;      Totals:         0       0       2      17       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5866 ;;Total ram usage:       19 bytes
  5867 ;; Hardware stack levels used:    1
  5868 ;; Hardware stack levels required when called:    8
  5869 ;; This function calls:
  5870 ;;		_vfprintf
  5871 ;; This function is called by:
  5872 ;;		_snprintf
  5873 ;; This function uses a non-reentrant model
  5874 ;;
  5875                           
  5876                           
  5877                           ;psect for function _vsnprintf
  5878  2ABF                     _vsnprintf:	
  5879                           
  5880                           ;incstack = 0
  5881                           ; Regs used in _vsnprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5882  2ABF  3080               	movlw	128
  5883  2AC0  0022               	movlb	2	; select bank2
  5884  2AC1  0251               	subwf	(vsnprintf@n+1)^(0+256),w
  5885  2AC2  3000               	movlw	0
  5886  2AC3  1903               	skipnz
  5887  2AC4  0250               	subwf	vsnprintf@n^(0+256),w
  5888  2AC5  1C03               	skipc
  5889  2AC6  2AD2               	goto	l8304
  5890  2AC7  304B               	movlw	75
  5891  2AC8  0023               	movlb	3	; select bank3
  5892  2AC9  00BA               	movwf	_errno^(0+384)
  5893  2ACA  3000               	movlw	0
  5894  2ACB  00BB               	movwf	(_errno^(0+384)+1)
  5895  2ACC  30FF               	movlw	255
  5896  2ACD  0022               	movlb	2	; select bank2
  5897  2ACE  00CE               	movwf	?_vsnprintf^(0+256)
  5898  2ACF  30FF               	movlw	255
  5899  2AD0  00CF               	movwf	(?_vsnprintf^(0+256)+1)
  5900  2AD1  0008               	return
  5901  2AD2                     l8304:	
  5902  2AD2  084F               	movf	(vsnprintf@s+1)^(0+256),w
  5903  2AD3  00DA               	movwf	(vsnprintf@f+1)^(0+256)
  5904  2AD4  084E               	movf	vsnprintf@s^(0+256),w
  5905  2AD5  00D9               	movwf	vsnprintf@f^(0+256)
  5906  2AD6  3000               	movlw	0
  5907  2AD7  0251               	subwf	(vsnprintf@n+1)^(0+256),w
  5908  2AD8  3002               	movlw	2
  5909  2AD9  1903               	skipnz
  5910  2ADA  0250               	subwf	vsnprintf@n^(0+256),w
  5911  2ADB  1C03               	skipc
  5912  2ADC  2AE6               	goto	l8310
  5913  2ADD  0850               	movf	vsnprintf@n^(0+256),w
  5914  2ADE  3EFF               	addlw	255
  5915  2ADF  00DD               	movwf	(vsnprintf@f^(0+256)+4)
  5916  2AE0  30FF               	movlw	255
  5917  2AE1  3D51               	addwfc	(vsnprintf@n+1)^(0+256),w
  5918  2AE2  00DE               	movwf	((vsnprintf@f+1)^(0+256)+4)
  5919  2AE3  01DB               	clrf	(vsnprintf@f^(0+256)+2)
  5920  2AE4  01DC               	clrf	((vsnprintf@f+1)^(0+256)+2)
  5921  2AE5  2AEE               	goto	l8312
  5922  2AE6                     l8310:	
  5923  2AE6  3001               	movlw	1
  5924  2AE7  00DD               	movwf	(vsnprintf@f^(0+256)+4)
  5925  2AE8  3000               	movlw	0
  5926  2AE9  00DE               	movwf	(vsnprintf@f^(0+256)+5)
  5927  2AEA  3001               	movlw	1
  5928  2AEB  00DB               	movwf	(vsnprintf@f^(0+256)+2)
  5929  2AEC  3000               	movlw	0
  5930  2AED  00DC               	movwf	(vsnprintf@f^(0+256)+3)
  5931  2AEE                     l8312:	
  5932  2AEE  3059               	movlw	low vsnprintf@f
  5933  2AEF  0021               	movlb	1	; select bank1
  5934  2AF0  00E7               	movwf	vfprintf@fp^(0+128)
  5935  2AF1  3001               	movlw	high vsnprintf@f
  5936  2AF2  00E8               	movwf	(vfprintf@fp^(0+128)+1)
  5937  2AF3  0022               	movlb	2	; select bank2
  5938  2AF4  0853               	movf	(vsnprintf@fmt+1)^(0+256),w
  5939  2AF5  0021               	movlb	1	; select bank1
  5940  2AF6  00EA               	movwf	(vfprintf@fmt+1)^(0+128)
  5941  2AF7  0022               	movlb	2	; select bank2
  5942  2AF8  0852               	movf	vsnprintf@fmt^(0+256),w
  5943  2AF9  0021               	movlb	1	; select bank1
  5944  2AFA  00E9               	movwf	vfprintf@fmt^(0+128)
  5945  2AFB  0022               	movlb	2	; select bank2
  5946  2AFC  0854               	movf	vsnprintf@ap^(0+256),w
  5947  2AFD  0021               	movlb	1	; select bank1
  5948  2AFE  00EE               	movwf	??_vsnprintf^(0+128)
  5949  2AFF  086E               	movf	??_vsnprintf^(0+128),w
  5950  2B00  00EB               	movwf	vfprintf@ap^(0+128)
  5951  2B01  31A0  2000  31AA   	fcall	_vfprintf
  5952  2B04  0021               	movlb	1	; select bank1
  5953  2B05  0868               	movf	(?_vfprintf+1)^(0+128),w
  5954  2B06  0022               	movlb	2	; select bank2
  5955  2B07  00D8               	movwf	(vsnprintf@cnt+1)^(0+256)
  5956  2B08  0021               	movlb	1	; select bank1
  5957  2B09  0867               	movf	?_vfprintf^(0+128),w
  5958  2B0A  0022               	movlb	2	; select bank2
  5959  2B0B  00D7               	movwf	vsnprintf@cnt^(0+256)
  5960  2B0C  0850               	movf	vsnprintf@n^(0+256),w
  5961  2B0D  0451               	iorwf	(vsnprintf@n+1)^(0+256),w
  5962  2B0E  1D03               	btfss	3,2
  5963  2B0F  1BD8               	btfsc	(vsnprintf@cnt+1)^(0+256),7
  5964  2B10  2B37               	goto	l8326
  5965  2B11  0850               	movf	vsnprintf@n^(0+256),w
  5966  2B12  3EFF               	addlw	255
  5967  2B13  0021               	movlb	1	; select bank1
  5968  2B14  00EE               	movwf	??_vsnprintf^(0+128)
  5969  2B15  30FF               	movlw	255
  5970  2B16  0022               	movlb	2	; select bank2
  5971  2B17  3D51               	addwfc	(vsnprintf@n+1)^(0+256),w
  5972  2B18  0021               	movlb	1	; select bank1
  5973  2B19  00EF               	movwf	(??_vsnprintf+1)^(0+128)
  5974  2B1A  086F               	movf	(??_vsnprintf+1)^(0+128),w
  5975  2B1B  0022               	movlb	2	; select bank2
  5976  2B1C  0258               	subwf	(vsnprintf@cnt+1)^(0+256),w
  5977  2B1D  1D03               	skipz
  5978  2B1E  2B23               	goto	u11945
  5979  2B1F  0021               	movlb	1	; select bank1
  5980  2B20  086E               	movf	??_vsnprintf^(0+128),w
  5981  2B21  0022               	movlb	2	; select bank2
  5982  2B22  0257               	subwf	vsnprintf@cnt^(0+256),w
  5983  2B23                     u11945:	
  5984  2B23  1C03               	skipc
  5985  2B24  2B2C               	goto	l8322
  5986  2B25  0850               	movf	vsnprintf@n^(0+256),w
  5987  2B26  3EFF               	addlw	255
  5988  2B27  00D5               	movwf	_vsnprintf$1774^(0+256)
  5989  2B28  30FF               	movlw	255
  5990  2B29  3D51               	addwfc	(vsnprintf@n+1)^(0+256),w
  5991  2B2A  00D6               	movwf	(_vsnprintf$1774+1)^(0+256)
  5992  2B2B  2B30               	goto	l8324
  5993  2B2C                     l8322:	
  5994  2B2C  0858               	movf	(vsnprintf@cnt+1)^(0+256),w
  5995  2B2D  00D6               	movwf	(_vsnprintf$1774+1)^(0+256)
  5996  2B2E  0857               	movf	vsnprintf@cnt^(0+256),w
  5997  2B2F  00D5               	movwf	_vsnprintf$1774^(0+256)
  5998  2B30                     l8324:	
  5999  2B30  0855               	movf	_vsnprintf$1774^(0+256),w
  6000  2B31  074E               	addwf	vsnprintf@s^(0+256),w
  6001  2B32  0086               	movwf	6
  6002  2B33  0856               	movf	(_vsnprintf$1774+1)^(0+256),w
  6003  2B34  3D4F               	addwfc	(vsnprintf@s+1)^(0+256),w
  6004  2B35  0087               	movwf	7
  6005  2B36  0181               	clrf	1
  6006  2B37                     l8326:	
  6007  2B37  0858               	movf	(vsnprintf@cnt+1)^(0+256),w
  6008  2B38  00CF               	movwf	(?_vsnprintf+1)^(0+256)
  6009  2B39  0857               	movf	vsnprintf@cnt^(0+256),w
  6010  2B3A  00CE               	movwf	?_vsnprintf^(0+256)
  6011  2B3B  0008               	return
  6012  2B3C                     __end_of_vsnprintf:	
  6013                           
  6014                           	psect	text5
  6015  2000                     __ptext5:	
  6016 ;; *************** function _vfprintf *****************
  6017 ;; Defined at:
  6018 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6019 ;; Parameters:    Size  Location     Type
  6020 ;;  fp              2   71[BANK1 ] PTR struct _IO_FILE
  6021 ;;		 -> vsnprintf@f(6), 
  6022 ;;  fmt             2   73[BANK1 ] PTR const unsigned char 
  6023 ;;		 -> STR_24(18), STR_23(18), STR_22(19), STR_21(20), 
  6024 ;;		 -> STR_20(20), STR_19(21), STR_18(21), STR_17(21), 
  6025 ;;		 -> STR_16(22), STR_15(22), STR_14(21), STR_13(21), 
  6026 ;;		 -> STR_8(57), STR_7(44), STR_6(42), STR_3(43), 
  6027 ;;  ap              1   75[BANK1 ] PTR PTR void 
  6028 ;;		 -> snprintf@ap(1), 
  6029 ;; Auto vars:     Size  Location     Type
  6030 ;;  cfmt            2   76[BANK1 ] PTR unsigned char 
  6031 ;;		 -> STR_24(18), STR_23(18), STR_22(19), STR_21(20), 
  6032 ;;		 -> STR_20(20), STR_19(21), STR_18(21), STR_17(21), 
  6033 ;;		 -> STR_16(22), STR_15(22), STR_14(21), STR_13(21), 
  6034 ;;		 -> STR_8(57), STR_7(44), STR_6(42), STR_3(43), 
  6035 ;; Return value:  Size  Location     Type
  6036 ;;                  2   71[BANK1 ] int 
  6037 ;; Registers used:
  6038 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6039 ;; Tracked objects:
  6040 ;;		On entry : 0/0
  6041 ;;		On exit  : 0/0
  6042 ;;		Unchanged: 0/0
  6043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6044 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6045 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6046 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6047 ;;      Totals:         0       2       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6048 ;;Total ram usage:        9 bytes
  6049 ;; Hardware stack levels used:    1
  6050 ;; Hardware stack levels required when called:    7
  6051 ;; This function calls:
  6052 ;;		_vfpfcnvrt
  6053 ;; This function is called by:
  6054 ;;		_vsnprintf
  6055 ;; This function uses a non-reentrant model
  6056 ;;
  6057                           
  6058                           
  6059                           ;psect for function _vfprintf
  6060  2000                     _vfprintf:	
  6061                           
  6062                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  6063                           
  6064                           ;incstack = 0
  6065                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6066  2000  0021               	movlb	1	; select bank1
  6067  2001  086A               	movf	(vfprintf@fmt+1)^(0+128),w
  6068  2002  00ED               	movwf	(vfprintf@cfmt+1)^(0+128)
  6069  2003  0869               	movf	vfprintf@fmt^(0+128),w
  6070  2004  00EC               	movwf	vfprintf@cfmt^(0+128)
  6071                           
  6072                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  6073  2005  0023               	movlb	3	; select bank3
  6074  2006  01BC               	clrf	_nout^(0+384)
  6075  2007  01BD               	clrf	(_nout+1)^(0+384)
  6076  2008                     l8292:	
  6077                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  6078                           
  6079                           
  6080                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  6081  2008  0021               	movlb	1	; select bank1
  6082  2009  086C               	movf	vfprintf@cfmt^(0+128),w
  6083  200A  0084               	movwf	4
  6084  200B  086D               	movf	(vfprintf@cfmt+1)^(0+128),w
  6085  200C  0085               	movwf	5
  6086  200D  0012               	moviw fsr0++
  6087  200E  1903               	btfsc	3,2
  6088  200F  282C               	goto	l8294
  6089                           
  6090                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  6091  2010  0868               	movf	(vfprintf@fp+1)^(0+128),w
  6092  2011  00E4               	movwf	(vfpfcnvrt@fp+1)^(0+128)
  6093  2012  0867               	movf	vfprintf@fp^(0+128),w
  6094  2013  00E3               	movwf	vfpfcnvrt@fp^(0+128)
  6095  2014  30EC               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  6096  2015  0020               	movlb	0	; select bank0
  6097  2016  00EE               	movwf	??_vfprintf
  6098  2017  086E               	movf	??_vfprintf,w
  6099  2018  0021               	movlb	1	; select bank1
  6100  2019  00E5               	movwf	vfpfcnvrt@fmt^(0+128)
  6101  201A  086B               	movf	vfprintf@ap^(0+128),w
  6102  201B  0020               	movlb	0	; select bank0
  6103  201C  00EF               	movwf	??_vfprintf+1
  6104  201D  086F               	movf	??_vfprintf+1,w
  6105  201E  0021               	movlb	1	; select bank1
  6106  201F  00E6               	movwf	vfpfcnvrt@ap^(0+128)
  6107  2020  3193  23BD  31A0   	fcall	_vfpfcnvrt
  6108  2023  0021               	movlb	1	; select bank1
  6109  2024  0863               	movf	?_vfpfcnvrt^(0+128),w
  6110  2025  0023               	movlb	3	; select bank3
  6111  2026  07BC               	addwf	_nout^(0+384),f
  6112  2027  0021               	movlb	1	; select bank1
  6113  2028  0864               	movf	(?_vfpfcnvrt+1)^(0+128),w
  6114  2029  0023               	movlb	3	; select bank3
  6115  202A  3DBD               	addwfc	(_nout+1)^(0+384),f
  6116  202B  2808               	goto	l8292
  6117  202C                     l8294:	
  6118                           
  6119                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  6120  202C  0023               	movlb	3	; select bank3
  6121  202D  083D               	movf	(_nout+1)^(0+384),w
  6122  202E  0021               	movlb	1	; select bank1
  6123  202F  00E8               	movwf	(?_vfprintf+1)^(0+128)
  6124  2030  0023               	movlb	3	; select bank3
  6125  2031  083C               	movf	_nout^(0+384),w
  6126  2032  0021               	movlb	1	; select bank1
  6127  2033  00E7               	movwf	?_vfprintf^(0+128)
  6128  2034  0008               	return
  6129  2035                     __end_of_vfprintf:	
  6130                           
  6131                           	psect	text6
  6132  13BD                     __ptext6:	
  6133 ;; *************** function _vfpfcnvrt *****************
  6134 ;; Defined at:
  6135 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6136 ;; Parameters:    Size  Location     Type
  6137 ;;  fp              2   67[BANK1 ] PTR struct _IO_FILE
  6138 ;;		 -> vsnprintf@f(6), 
  6139 ;;  fmt             1   69[BANK1 ] PTR PTR unsigned char 
  6140 ;;		 -> vfprintf@cfmt(2), 
  6141 ;;  ap              1   70[BANK1 ] PTR PTR void 
  6142 ;;		 -> snprintf@ap(1), 
  6143 ;; Auto vars:     Size  Location     Type
  6144 ;;  llu             8   38[BANK2 ] unsigned long long 
  6145 ;;  ll              8   28[BANK2 ] long long 
  6146 ;;  f               4   24[BANK2 ] long long 
  6147 ;;  ct              3   21[BANK2 ] unsigned char [3]
  6148 ;;  done            2   13[BANK2 ] int 
  6149 ;;  i               2    0        int 
  6150 ;;  c               1   37[BANK2 ] unsigned char 
  6151 ;;  vp              1   36[BANK2 ] PTR void 
  6152 ;;		 -> ?_snprintf(2), 
  6153 ;;  cp              1   12[BANK2 ] PTR unsigned char 
  6154 ;;		 -> ?_snprintf(2), 
  6155 ;; Return value:  Size  Location     Type
  6156 ;;                  2   67[BANK1 ] int 
  6157 ;; Registers used:
  6158 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6159 ;; Tracked objects:
  6160 ;;		On entry : 0/0
  6161 ;;		On exit  : 0/0
  6162 ;;		Unchanged: 0/0
  6163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6164 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6165 ;;      Locals:         0       0       0      34       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6166 ;;      Temps:          0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6167 ;;      Totals:         0       0       4      46       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6168 ;;Total ram usage:       50 bytes
  6169 ;; Hardware stack levels used:    1
  6170 ;; Hardware stack levels required when called:    6
  6171 ;; This function calls:
  6172 ;;		_atoi
  6173 ;;		_ctoa
  6174 ;;		_dtoa
  6175 ;;		_efgtoa
  6176 ;;		_fputc
  6177 ;;		_isdigit
  6178 ;;		_isupper
  6179 ;;		_otoa
  6180 ;;		_stoa
  6181 ;;		_strncmp
  6182 ;;		_tolower
  6183 ;;		_utoa
  6184 ;;		_xtoa
  6185 ;; This function is called by:
  6186 ;;		_vfprintf
  6187 ;; This function uses a non-reentrant model
  6188 ;;
  6189                           
  6190                           
  6191                           ;psect for function _vfpfcnvrt
  6192  13BD                     _vfpfcnvrt:	
  6193                           
  6194                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  6195                           
  6196                           ;incstack = 0
  6197                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6198  13BD  0021               	movlb	1	; select bank1
  6199  13BE  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6200  13BF  0086               	movwf	6
  6201  13C0  0187               	clrf	7
  6202  13C1  3F40               	moviw [0]fsr1
  6203  13C2  0022               	movlb	2	; select bank2
  6204  13C3  00A0               	movwf	??_vfpfcnvrt^(0+256)
  6205  13C4  3F41               	moviw [1]fsr1
  6206  13C5  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  6207  13C6  0820               	movf	??_vfpfcnvrt^(0+256),w
  6208  13C7  0084               	movwf	4
  6209  13C8  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  6210  13C9  0085               	movwf	5
  6211  13CA  0012               	moviw fsr0++
  6212  13CB  3A25               	xorlw	37
  6213  13CC  1D03               	btfss	3,2
  6214  13CD  2DD2               	goto	L16
  6215                           
  6216                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  6217  13CE  0021               	movlb	1	; select bank1
  6218  13CF  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6219  13D0  0086               	movwf	6
  6220  13D1  0187               	clrf	7
  6221  13D2  3001               	movlw	1
  6222  13D3  0781               	addwf	1,f
  6223  13D4  3141               	addfsr 1,1
  6224  13D5  1803               	skipnc
  6225  13D6  0A81               	incf	1,f
  6226                           
  6227                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  6228  13D7  0023               	movlb	3	; select bank3
  6229  13D8  01BE               	clrf	_width^(0+384)
  6230  13D9  01BF               	clrf	(_width+1)^(0+384)
  6231  13DA  01C2               	clrf	_flags^(0+384)
  6232  13DB  01C3               	clrf	(_flags+1)^(0+384)
  6233                           
  6234                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  6235  13DC  30FF               	movlw	255
  6236  13DD  00C0               	movwf	_prec^(0+384)
  6237  13DE  30FF               	movlw	255
  6238  13DF  00C1               	movwf	(_prec^(0+384)+1)
  6239                           
  6240                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  6241  13E0  0022               	movlb	2	; select bank2
  6242  13E1  01AD               	clrf	vfpfcnvrt@done^(0+256)
  6243  13E2  01AE               	clrf	(vfpfcnvrt@done+1)^(0+256)
  6244                           
  6245                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  6246  13E3  2C00               	goto	l7850
  6247  13E4                     l776:	
  6248                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 691:       
      +                                    case '-' :
  6249                           
  6250                           
  6251                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  6252  13E4  0023               	movlb	3	; select bank3
  6253  13E5  1442               	bsf	_flags^(0+384),0
  6254  13E6                     l7834:	
  6255                           
  6256                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  6257  13E6  0021               	movlb	1	; select bank1
  6258  13E7  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6259  13E8  0086               	movwf	6
  6260  13E9  0187               	clrf	7
  6261  13EA  3001               	movlw	1
  6262  13EB  0781               	addwf	1,f
  6263  13EC  3141               	addfsr 1,1
  6264  13ED  1803               	skipnc
  6265  13EE  0A81               	incf	1,f
  6266                           
  6267                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  6268  13EF  2C00               	goto	l7850
  6269  13F0                     l778:	
  6270                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 695:       
      +                                    case '0' :
  6271                           
  6272                           
  6273                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  6274  13F0  0023               	movlb	3	; select bank3
  6275  13F1  14C2               	bsf	_flags^(0+384),1
  6276  13F2  2BE6               	goto	l7834
  6277  13F3                     l779:	
  6278                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 699:       
      +                                    case '+' :
  6279                           
  6280                           
  6281                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  6282  13F3  0023               	movlb	3	; select bank3
  6283  13F4  1542               	bsf	_flags^(0+384),2
  6284  13F5  2BE6               	goto	l7834
  6285  13F6                     l780:	
  6286                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 703:       
      +                                    case ' ' :
  6287                           
  6288                           
  6289                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  6290  13F6  0023               	movlb	3	; select bank3
  6291  13F7  15C2               	bsf	_flags^(0+384),3
  6292  13F8  2BE6               	goto	l7834
  6293  13F9                     l781:	
  6294                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 707:       
      +                                    case '#' :
  6295                           
  6296                           
  6297                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  6298  13F9  0023               	movlb	3	; select bank3
  6299  13FA  1642               	bsf	_flags^(0+384),4
  6300  13FB  2BE6               	goto	l7834
  6301  13FC                     l7844:	
  6302                           
  6303                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  6304  13FC  3001               	movlw	1
  6305  13FD  00AD               	movwf	vfpfcnvrt@done^(0+256)
  6306  13FE  3000               	movlw	0
  6307  13FF  00AE               	movwf	(vfpfcnvrt@done^(0+256)+1)
  6308  1400                     l7850:	
  6309                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  6310                           
  6311                           
  6312                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  6313  1400  0022               	movlb	2	; select bank2
  6314  1401  082D               	movf	vfpfcnvrt@done^(0+256),w
  6315  1402  042E               	iorwf	(vfpfcnvrt@done+1)^(0+256),w
  6316  1403  1D03               	btfss	3,2
  6317  1404  2C2C               	goto	l783
  6318  1405  0021               	movlb	1	; select bank1
  6319  1406  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6320  1407  0086               	movwf	6
  6321  1408  0187               	clrf	7
  6322  1409  3F40               	moviw [0]fsr1
  6323  140A  0022               	movlb	2	; select bank2
  6324  140B  00A0               	movwf	??_vfpfcnvrt^(0+256)
  6325  140C  3F41               	moviw [1]fsr1
  6326  140D  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  6327  140E  0820               	movf	??_vfpfcnvrt^(0+256),w
  6328  140F  0084               	movwf	4
  6329  1410  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  6330  1411  0085               	movwf	5
  6331  1412  0800               	movf	0,w	;code access
  6332  1413  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  6333  1414  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
  6334                           
  6335                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6336                           ; Switch size 1, requested type "simple"
  6337                           ; Number of cases is 1, Range of values is 0 to 0
  6338                           ; switch strategies available:
  6339                           ; Name         Instructions Cycles
  6340                           ; simple_byte            4     3 (average)
  6341                           ; direct_byte            8     6 (fixed)
  6342                           ; jumptable            260     6 (fixed)
  6343                           ;	Chosen strategy is simple_byte
  6344  1415  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
  6345  1416  3A00               	xorlw	0	; case 0
  6346  1417  1903               	skipnz
  6347  1418  2C1A               	goto	l8602
  6348  1419  2BFC               	goto	l7844
  6349  141A                     l8602:	
  6350                           
  6351                           ; Switch size 1, requested type "simple"
  6352                           ; Number of cases is 5, Range of values is 32 to 48
  6353                           ; switch strategies available:
  6354                           ; Name         Instructions Cycles
  6355                           ; simple_byte           16     9 (average)
  6356                           ; direct_byte           43     9 (fixed)
  6357                           ; jumptable            263     9 (fixed)
  6358                           ;	Chosen strategy is simple_byte
  6359  141A  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
  6360  141B  3A20               	xorlw	32	; case 32
  6361  141C  1903               	skipnz
  6362  141D  2BF6               	goto	l780
  6363  141E  3A03               	xorlw	3	; case 35
  6364  141F  1903               	skipnz
  6365  1420  2BF9               	goto	l781
  6366  1421  3A08               	xorlw	8	; case 43
  6367  1422  1903               	skipnz
  6368  1423  2BF3               	goto	l779
  6369  1424  3A06               	xorlw	6	; case 45
  6370  1425  1903               	skipnz
  6371  1426  2BE4               	goto	l776
  6372  1427  3A1D               	xorlw	29	; case 48
  6373  1428  1903               	skipnz
  6374  1429  2BF0               	goto	l778
  6375  142A  2BFC               	goto	l7844
  6376  142B  2C00               	goto	l7850
  6377  142C                     l783:	
  6378                           
  6379                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  6380  142C  0023               	movlb	3	; select bank3
  6381  142D  1C42               	btfss	_flags^(0+384),0
  6382  142E  2C33               	goto	l7854
  6383                           
  6384                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  6385  142F  30FD               	movlw	253
  6386  1430  05C2               	andwf	_flags^(0+384),f
  6387  1431  30FF               	movlw	255
  6388  1432  05C3               	andwf	(_flags+1)^(0+384),f
  6389  1433                     l7854:	
  6390                           
  6391                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  6392  1433  0021               	movlb	1	; select bank1
  6393  1434  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6394  1435  0086               	movwf	6
  6395  1436  0187               	clrf	7
  6396  1437  3F40               	moviw [0]fsr1
  6397  1438  0022               	movlb	2	; select bank2
  6398  1439  00A0               	movwf	??_vfpfcnvrt^(0+256)
  6399  143A  3F41               	moviw [1]fsr1
  6400  143B  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  6401  143C  0820               	movf	??_vfpfcnvrt^(0+256),w
  6402  143D  0084               	movwf	4
  6403  143E  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  6404  143F  0085               	movwf	5
  6405  1440  0012               	moviw fsr0++
  6406  1441  3A2A               	xorlw	42
  6407  1442  1D03               	btfss	3,2
  6408  1443  2C65               	goto	l7866
  6409                           
  6410                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  6411  1444  0021               	movlb	1	; select bank1
  6412  1445  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6413  1446  0086               	movwf	6
  6414  1447  0187               	clrf	7
  6415  1448  3001               	movlw	1
  6416  1449  0781               	addwf	1,f
  6417  144A  3141               	addfsr 1,1
  6418  144B  1803               	skipnc
  6419  144C  0A81               	incf	1,f
  6420                           
  6421                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  6422  144D  0866               	movf	vfpfcnvrt@ap^(0+128),w
  6423  144E  0086               	movwf	6
  6424  144F  3001               	movlw	1	; select bank2/3
  6425  1450  0087               	movwf	7
  6426  1451  0801               	movf	1,w
  6427  1452  0084               	movwf	4
  6428  1453  3001               	movlw	1	; select bank2/3
  6429  1454  0085               	movwf	5
  6430  1455  3002               	movlw	2
  6431  1456  0781               	addwf	1,f
  6432  1457  3F00               	moviw [0]fsr0
  6433  1458  0023               	movlb	3	; select bank3
  6434  1459  00BE               	movwf	_width^(0+384)
  6435  145A  3F01               	moviw [1]fsr0
  6436  145B  00BF               	movwf	(_width+1)^(0+384)
  6437                           
  6438                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  6439  145C  1FBF               	btfss	(_width+1)^(0+384),7
  6440  145D  2CA7               	goto	l7876
  6441                           
  6442                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  6443  145E  1442               	bsf	_flags^(0+384),0
  6444                           
  6445                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  6446  145F  09BE               	comf	_width^(0+384),f
  6447  1460  09BF               	comf	(_width+1)^(0+384),f
  6448  1461  0ABE               	incf	_width^(0+384),f
  6449  1462  1903               	skipnz
  6450  1463  0ABF               	incf	(_width+1)^(0+384),f
  6451  1464  2CA7               	goto	l7876
  6452  1465                     l7866:	
  6453                           
  6454                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  6455  1465  0021               	movlb	1	; select bank1
  6456  1466  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6457  1467  0086               	movwf	6
  6458  1468  0187               	clrf	7
  6459  1469  3F40               	moviw [0]fsr1
  6460  146A  00F7               	movwf	atoi@s
  6461  146B  3F41               	moviw [1]fsr1
  6462  146C  00F8               	movwf	atoi@s+1
  6463  146D  31AD  255F  3193   	fcall	_atoi
  6464  1470  0878               	movf	?_atoi+1,w
  6465  1471  0023               	movlb	3	; select bank3
  6466  1472  00BF               	movwf	(_width+1)^(0+384)
  6467  1473  0877               	movf	?_atoi,w
  6468  1474  00BE               	movwf	_width^(0+384)
  6469                           
  6470                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6471  1475  2C7F               	goto	l7870
  6472  1476                     l7868:	
  6473                           
  6474                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  6475  1476  0021               	movlb	1	; select bank1
  6476  1477  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6477  1478  0086               	movwf	6
  6478  1479  0187               	clrf	7
  6479  147A  3001               	movlw	1
  6480  147B  0781               	addwf	1,f
  6481  147C  3141               	addfsr 1,1
  6482  147D  1803               	skipnc
  6483  147E  0A81               	incf	1,f
  6484  147F                     l7870:	
  6485  147F  0021               	movlb	1	; select bank1
  6486  1480  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6487  1481  0086               	movwf	6
  6488  1482  0187               	clrf	7
  6489  1483  3F40               	moviw [0]fsr1
  6490  1484  0022               	movlb	2	; select bank2
  6491  1485  00A0               	movwf	??_vfpfcnvrt^(0+256)
  6492  1486  3F41               	moviw [1]fsr1
  6493  1487  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  6494  1488  0820               	movf	??_vfpfcnvrt^(0+256),w
  6495  1489  0084               	movwf	4
  6496  148A  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  6497  148B  0085               	movwf	5
  6498  148C  0800               	movf	0,w	;code access
  6499  148D  3ED0               	addlw	208
  6500  148E  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  6501  148F  30FF               	movlw	255
  6502  1490  1803               	skipnc
  6503  1491  3000               	movlw	0
  6504  1492  00A3               	movwf	((??_vfpfcnvrt+2)^(0+256)+1)
  6505  1493  3000               	movlw	0
  6506  1494  0223               	subwf	(??_vfpfcnvrt+3)^(0+256),w
  6507  1495  300A               	movlw	10
  6508  1496  1903               	skipnz
  6509  1497  0222               	subwf	(??_vfpfcnvrt+2)^(0+256),w
  6510  1498  1803               	btfsc	3,0
  6511  1499  2C9C               	goto	u11350
  6512  149A  3001               	movlw	1
  6513  149B  2C9D               	goto	u11360
  6514  149C                     u11350:	
  6515  149C  3000               	movlw	0
  6516  149D                     u11360:	
  6517  149D  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  6518  149E  01A5               	clrf	((??_vfpfcnvrt+4)^(0+256)+1)
  6519  149F  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  6520  14A0  00AF               	movwf	_vfpfcnvrt$1145^(0+256)
  6521  14A1  0825               	movf	(??_vfpfcnvrt+5)^(0+256),w
  6522  14A2  00B0               	movwf	(_vfpfcnvrt$1145+1)^(0+256)
  6523  14A3  082F               	movf	_vfpfcnvrt$1145^(0+256),w
  6524  14A4  0430               	iorwf	(_vfpfcnvrt$1145+1)^(0+256),w
  6525  14A5  1D03               	btfss	3,2
  6526  14A6  2C76               	goto	l7868
  6527  14A7                     l7876:	
  6528                           
  6529                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  6530  14A7  0021               	movlb	1	; select bank1
  6531  14A8  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6532  14A9  0086               	movwf	6
  6533  14AA  0187               	clrf	7
  6534  14AB  3F40               	moviw [0]fsr1
  6535  14AC  0022               	movlb	2	; select bank2
  6536  14AD  00A0               	movwf	??_vfpfcnvrt^(0+256)
  6537  14AE  3F41               	moviw [1]fsr1
  6538  14AF  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  6539  14B0  0820               	movf	??_vfpfcnvrt^(0+256),w
  6540  14B1  0084               	movwf	4
  6541  14B2  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  6542  14B3  0085               	movwf	5
  6543  14B4  0012               	moviw fsr0++
  6544  14B5  3A2E               	xorlw	46
  6545  14B6  1D03               	btfss	3,2
  6546  14B7  2D2F               	goto	l7898
  6547                           
  6548                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  6549  14B8  0023               	movlb	3	; select bank3
  6550  14B9  01C0               	clrf	_prec^(0+384)
  6551  14BA  01C1               	clrf	(_prec+1)^(0+384)
  6552                           
  6553                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  6554  14BB  0021               	movlb	1	; select bank1
  6555  14BC  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6556  14BD  0086               	movwf	6
  6557  14BE  0187               	clrf	7
  6558  14BF  3001               	movlw	1
  6559  14C0  0781               	addwf	1,f
  6560  14C1  3141               	addfsr 1,1
  6561  14C2  1803               	skipnc
  6562  14C3  0A81               	incf	1,f
  6563                           
  6564                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  6565  14C4  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6566  14C5  0086               	movwf	6
  6567  14C6  0187               	clrf	7
  6568  14C7  3F40               	moviw [0]fsr1
  6569  14C8  0022               	movlb	2	; select bank2
  6570  14C9  00A0               	movwf	??_vfpfcnvrt^(0+256)
  6571  14CA  3F41               	moviw [1]fsr1
  6572  14CB  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  6573  14CC  0820               	movf	??_vfpfcnvrt^(0+256),w
  6574  14CD  0084               	movwf	4
  6575  14CE  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  6576  14CF  0085               	movwf	5
  6577  14D0  0012               	moviw fsr0++
  6578  14D1  3A2A               	xorlw	42
  6579  14D2  1D03               	btfss	3,2
  6580  14D3  2CED               	goto	l7888
  6581                           
  6582                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  6583  14D4  0021               	movlb	1	; select bank1
  6584  14D5  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6585  14D6  0086               	movwf	6
  6586  14D7  0187               	clrf	7
  6587  14D8  3001               	movlw	1
  6588  14D9  0781               	addwf	1,f
  6589  14DA  3141               	addfsr 1,1
  6590  14DB  1803               	skipnc
  6591  14DC  0A81               	incf	1,f
  6592                           
  6593                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  6594  14DD  0866               	movf	vfpfcnvrt@ap^(0+128),w
  6595  14DE  0086               	movwf	6
  6596  14DF  3001               	movlw	1	; select bank2/3
  6597  14E0  0087               	movwf	7
  6598  14E1  0801               	movf	1,w
  6599  14E2  0084               	movwf	4
  6600  14E3  3001               	movlw	1	; select bank2/3
  6601  14E4  0085               	movwf	5
  6602  14E5  3002               	movlw	2
  6603  14E6  0781               	addwf	1,f
  6604  14E7  3F00               	moviw [0]fsr0
  6605  14E8  0023               	movlb	3	; select bank3
  6606  14E9  00C0               	movwf	_prec^(0+384)
  6607  14EA  3F01               	moviw [1]fsr0
  6608  14EB  00C1               	movwf	(_prec+1)^(0+384)
  6609                           
  6610                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  6611  14EC  2D2F               	goto	l7898
  6612  14ED                     l7888:	
  6613                           
  6614                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  6615  14ED  0021               	movlb	1	; select bank1
  6616  14EE  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6617  14EF  0086               	movwf	6
  6618  14F0  0187               	clrf	7
  6619  14F1  3F40               	moviw [0]fsr1
  6620  14F2  00F7               	movwf	atoi@s
  6621  14F3  3F41               	moviw [1]fsr1
  6622  14F4  00F8               	movwf	atoi@s+1
  6623  14F5  31AD  255F  3193   	fcall	_atoi
  6624  14F8  0878               	movf	?_atoi+1,w
  6625  14F9  0023               	movlb	3	; select bank3
  6626  14FA  00C1               	movwf	(_prec+1)^(0+384)
  6627  14FB  0877               	movf	?_atoi,w
  6628  14FC  00C0               	movwf	_prec^(0+384)
  6629                           
  6630                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6631  14FD  2D07               	goto	l7892
  6632  14FE                     l7890:	
  6633                           
  6634                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  6635  14FE  0021               	movlb	1	; select bank1
  6636  14FF  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6637  1500  0086               	movwf	6
  6638  1501  0187               	clrf	7
  6639  1502  3001               	movlw	1
  6640  1503  0781               	addwf	1,f
  6641  1504  3141               	addfsr 1,1
  6642  1505  1803               	skipnc
  6643  1506  0A81               	incf	1,f
  6644  1507                     l7892:	
  6645  1507  0021               	movlb	1	; select bank1
  6646  1508  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6647  1509  0086               	movwf	6
  6648  150A  0187               	clrf	7
  6649  150B  3F40               	moviw [0]fsr1
  6650  150C  0022               	movlb	2	; select bank2
  6651  150D  00A0               	movwf	??_vfpfcnvrt^(0+256)
  6652  150E  3F41               	moviw [1]fsr1
  6653  150F  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  6654  1510  0820               	movf	??_vfpfcnvrt^(0+256),w
  6655  1511  0084               	movwf	4
  6656  1512  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  6657  1513  0085               	movwf	5
  6658  1514  0800               	movf	0,w	;code access
  6659  1515  3ED0               	addlw	208
  6660  1516  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  6661  1517  30FF               	movlw	255
  6662  1518  1803               	skipnc
  6663  1519  3000               	movlw	0
  6664  151A  00A3               	movwf	((??_vfpfcnvrt+2)^(0+256)+1)
  6665  151B  3000               	movlw	0
  6666  151C  0223               	subwf	(??_vfpfcnvrt+3)^(0+256),w
  6667  151D  300A               	movlw	10
  6668  151E  1903               	skipnz
  6669  151F  0222               	subwf	(??_vfpfcnvrt+2)^(0+256),w
  6670  1520  1803               	btfsc	3,0
  6671  1521  2D24               	goto	u11400
  6672  1522  3001               	movlw	1
  6673  1523  2D25               	goto	u11410
  6674  1524                     u11400:	
  6675  1524  3000               	movlw	0
  6676  1525                     u11410:	
  6677  1525  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  6678  1526  01A5               	clrf	((??_vfpfcnvrt+4)^(0+256)+1)
  6679  1527  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  6680  1528  00B1               	movwf	_vfpfcnvrt$1146^(0+256)
  6681  1529  0825               	movf	(??_vfpfcnvrt+5)^(0+256),w
  6682  152A  00B2               	movwf	(_vfpfcnvrt$1146+1)^(0+256)
  6683  152B  0831               	movf	_vfpfcnvrt$1146^(0+256),w
  6684  152C  0432               	iorwf	(_vfpfcnvrt$1146+1)^(0+256),w
  6685  152D  1D03               	btfss	3,2
  6686  152E  2CFE               	goto	l7890
  6687  152F                     l7898:	
  6688                           
  6689                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  6690  152F  0021               	movlb	1	; select bank1
  6691  1530  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6692  1531  0086               	movwf	6
  6693  1532  0187               	clrf	7
  6694  1533  3F40               	moviw [0]fsr1
  6695  1534  0022               	movlb	2	; select bank2
  6696  1535  00A0               	movwf	??_vfpfcnvrt^(0+256)
  6697  1536  3F41               	moviw [1]fsr1
  6698  1537  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  6699  1538  0820               	movf	??_vfpfcnvrt^(0+256),w
  6700  1539  0084               	movwf	4
  6701  153A  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  6702  153B  0085               	movwf	5
  6703  153C  0800               	movf	0,w	;code access
  6704  153D  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  6705  153E  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
  6706  153F  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
  6707  1540  00F7               	movwf	tolower@c
  6708  1541  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
  6709  1542  00F8               	movwf	tolower@c+1
  6710  1543  31B5  251B  3193   	fcall	_tolower
  6711  1546  0877               	movf	?_tolower,w
  6712  1547  0022               	movlb	2	; select bank2
  6713  1548  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  6714  1549  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  6715  154A  00B5               	movwf	vfpfcnvrt@ct^(0+256)
  6716                           
  6717                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  6718  154B  0835               	movf	vfpfcnvrt@ct^(0+256),w
  6719  154C  1903               	btfsc	3,2
  6720  154D  2D8F               	goto	l7908
  6721                           
  6722                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  6723  154E  0021               	movlb	1	; select bank1
  6724  154F  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6725  1550  0086               	movwf	6
  6726  1551  0187               	clrf	7
  6727  1552  3F40               	moviw [0]fsr1
  6728  1553  0022               	movlb	2	; select bank2
  6729  1554  00A0               	movwf	??_vfpfcnvrt^(0+256)
  6730  1555  3F41               	moviw [1]fsr1
  6731  1556  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  6732  1557  3001               	movlw	1
  6733  1558  0720               	addwf	??_vfpfcnvrt^(0+256),w
  6734  1559  0084               	movwf	4
  6735  155A  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
  6736  155B  1803               	skipnc
  6737  155C  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
  6738  155D  0085               	movwf	5
  6739  155E  0800               	movf	0,w	;code access
  6740  155F  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  6741  1560  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
  6742  1561  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
  6743  1562  00F7               	movwf	tolower@c
  6744  1563  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
  6745  1564  00F8               	movwf	tolower@c+1
  6746  1565  31B5  251B  3193   	fcall	_tolower
  6747  1568  0877               	movf	?_tolower,w
  6748  1569  0022               	movlb	2	; select bank2
  6749  156A  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  6750  156B  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  6751  156C  00B6               	movwf	(vfpfcnvrt@ct^(0+256)+1)
  6752                           
  6753                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  6754  156D  0836               	movf	(vfpfcnvrt@ct^(0+256)+1),w
  6755  156E  1903               	btfsc	3,2
  6756  156F  2D8F               	goto	l7908
  6757                           
  6758                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  6759  1570  0021               	movlb	1	; select bank1
  6760  1571  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6761  1572  0086               	movwf	6
  6762  1573  0187               	clrf	7
  6763  1574  3F40               	moviw [0]fsr1
  6764  1575  0022               	movlb	2	; select bank2
  6765  1576  00A0               	movwf	??_vfpfcnvrt^(0+256)
  6766  1577  3F41               	moviw [1]fsr1
  6767  1578  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  6768  1579  3002               	movlw	2
  6769  157A  0720               	addwf	??_vfpfcnvrt^(0+256),w
  6770  157B  0084               	movwf	4
  6771  157C  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
  6772  157D  1803               	skipnc
  6773  157E  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
  6774  157F  0085               	movwf	5
  6775  1580  0800               	movf	0,w	;code access
  6776  1581  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  6777  1582  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
  6778  1583  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
  6779  1584  00F7               	movwf	tolower@c
  6780  1585  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
  6781  1586  00F8               	movwf	tolower@c+1
  6782  1587  31B5  251B  3193   	fcall	_tolower
  6783  158A  0877               	movf	?_tolower,w
  6784  158B  0022               	movlb	2	; select bank2
  6785  158C  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  6786  158D  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  6787  158E  00B7               	movwf	(vfpfcnvrt@ct^(0+256)+2)
  6788  158F                     l7908:	
  6789                           
  6790                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  6791  158F  0021               	movlb	1	; select bank1
  6792  1590  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6793  1591  0086               	movwf	6
  6794  1592  0187               	clrf	7
  6795  1593  3F40               	moviw [0]fsr1
  6796  1594  0022               	movlb	2	; select bank2
  6797  1595  00A0               	movwf	??_vfpfcnvrt^(0+256)
  6798  1596  3F41               	moviw [1]fsr1
  6799  1597  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  6800  1598  0820               	movf	??_vfpfcnvrt^(0+256),w
  6801  1599  0084               	movwf	4
  6802  159A  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  6803  159B  0085               	movwf	5
  6804  159C  0012               	moviw fsr0++
  6805  159D  3A63               	xorlw	99
  6806  159E  31AB  1D03         	btfss	3,2
  6807  15A0  2BBE               	goto	l7918
  6808                           
  6809                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  6810  15A1  0021               	movlb	1	; select bank1
  6811  15A2  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6812  15A3  0086               	movwf	6
  6813  15A4  0187               	clrf	7
  6814  15A5  3001               	movlw	1
  6815  15A6  0781               	addwf	1,f
  6816  15A7  3141               	addfsr 1,1
  6817  15A8  1803               	skipnc
  6818  15A9  0A81               	incf	1,f
  6819                           
  6820                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6821  15AA  0866               	movf	vfpfcnvrt@ap^(0+128),w
  6822  15AB  0086               	movwf	6
  6823  15AC  3001               	movlw	1	; select bank2/3
  6824  15AD  0087               	movwf	7
  6825  15AE  0801               	movf	1,w
  6826  15AF  0084               	movwf	4
  6827  15B0  3001               	movlw	1	; select bank2/3
  6828  15B1  0085               	movwf	5
  6829  15B2  3002               	movlw	2
  6830  15B3  0781               	addwf	1,f
  6831  15B4  0800               	movf	0,w
  6832  15B5  0022               	movlb	2	; select bank2
  6833  15B6  00A0               	movwf	??_vfpfcnvrt^(0+256)
  6834  15B7  0820               	movf	??_vfpfcnvrt^(0+256),w
  6835  15B8  00C5               	movwf	vfpfcnvrt@c^(0+256)
  6836                           
  6837                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  6838  15B9  0021               	movlb	1	; select bank1
  6839  15BA  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
  6840  15BB  0020               	movlb	0	; select bank0
  6841  15BC  00B1               	movwf	ctoa@fp+1
  6842  15BD  0021               	movlb	1	; select bank1
  6843  15BE  0863               	movf	vfpfcnvrt@fp^(0+128),w
  6844  15BF  0020               	movlb	0	; select bank0
  6845  15C0  00B0               	movwf	ctoa@fp
  6846  15C1  0022               	movlb	2	; select bank2
  6847  15C2  0845               	movf	vfpfcnvrt@c^(0+256),w
  6848  15C3  00A0               	movwf	??_vfpfcnvrt^(0+256)
  6849  15C4  0820               	movf	??_vfpfcnvrt^(0+256),w
  6850  15C5  0020               	movlb	0	; select bank0
  6851  15C6  00B2               	movwf	ctoa@c
  6852  15C7  31B5  2585         	fcall	_ctoa
  6853  15C9  0020               	movlb	0	; select bank0
  6854  15CA  0831               	movf	?_ctoa+1,w
  6855  15CB  0021               	movlb	1	; select bank1
  6856  15CC  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
  6857  15CD  0020               	movlb	0	; select bank0
  6858  15CE  0830               	movf	?_ctoa,w
  6859  15CF  0021               	movlb	1	; select bank1
  6860  15D0  00E3               	movwf	?_vfpfcnvrt^(0+128)
  6861  15D1  0008               	return
  6862  15D2                     L16:	
  6863  15D2                     L15:	
  6864  15D2  318F  2FDA         	ljmp	l8274
  6865                           
  6866                           	psect	text7
  6867  1CC5                     __ptext7:	
  6868 ;; *************** function _xtoa *****************
  6869 ;; Defined at:
  6870 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6871 ;; Parameters:    Size  Location     Type
  6872 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  6873 ;;		 -> vsnprintf@f(6), 
  6874 ;;  d               8   18[BANK0 ] unsigned long long 
  6875 ;;  x               1   26[BANK0 ] unsigned char 
  6876 ;; Auto vars:     Size  Location     Type
  6877 ;;  n               8   43[BANK0 ] unsigned long long 
  6878 ;;  c               2   53[BANK0 ] int 
  6879 ;;  i               2   51[BANK0 ] int 
  6880 ;;  w               2   41[BANK0 ] int 
  6881 ;;  p               2   39[BANK0 ] int 
  6882 ;; Return value:  Size  Location     Type
  6883 ;;                  2   16[BANK0 ] int 
  6884 ;; Registers used:
  6885 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6886 ;; Tracked objects:
  6887 ;;		On entry : 0/0
  6888 ;;		On exit  : 0/0
  6889 ;;		Unchanged: 0/0
  6890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6891 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6892 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6893 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6894 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6895 ;;Total ram usage:       39 bytes
  6896 ;; Hardware stack levels used:    1
  6897 ;; Hardware stack levels required when called:    5
  6898 ;; This function calls:
  6899 ;;		_isalpha
  6900 ;;		_isupper
  6901 ;;		_pad
  6902 ;;		_toupper
  6903 ;; This function is called by:
  6904 ;;		_vfpfcnvrt
  6905 ;; This function uses a non-reentrant model
  6906 ;;
  6907                           
  6908                           
  6909                           ;psect for function _xtoa
  6910  1CC5                     _xtoa:	
  6911                           
  6912                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  6913                           
  6914                           ;incstack = 0
  6915                           ; Regs used in _xtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6916  1CC5  0023               	movlb	3	; select bank3
  6917  1CC6  1BC1               	btfsc	(_prec+1)^(0+384),7
  6918  1CC7  2CCC               	goto	l742
  6919                           
  6920                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  6921  1CC8  30FD               	movlw	253
  6922  1CC9  05C2               	andwf	_flags^(0+384),f
  6923  1CCA  30FF               	movlw	255
  6924  1CCB  05C3               	andwf	(_flags+1)^(0+384),f
  6925  1CCC                     l742:	
  6926                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 631:     }
  6927                           
  6928                           
  6929                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  6930  1CCC  0841               	movf	(_prec+1)^(0+384),w
  6931  1CCD  3A80               	xorlw	128
  6932  1CCE  0020               	movlb	0	; select bank0
  6933  1CCF  00BB               	movwf	??_xtoa
  6934  1CD0  3080               	movlw	128
  6935  1CD1  023B               	subwf	??_xtoa,w
  6936  1CD2  1D03               	skipz
  6937  1CD3  2CD7               	goto	u11075
  6938  1CD4  3001               	movlw	1
  6939  1CD5  0023               	movlb	3	; select bank3
  6940  1CD6  0240               	subwf	_prec^(0+384),w
  6941  1CD7                     u11075:	
  6942  1CD7  1803               	skipnc
  6943  1CD8  2CDF               	goto	l7720
  6944  1CD9  3001               	movlw	1
  6945  1CDA  0020               	movlb	0	; select bank0
  6946  1CDB  00C7               	movwf	xtoa@p
  6947  1CDC  3000               	movlw	0
  6948  1CDD  00C8               	movwf	xtoa@p+1
  6949  1CDE  2CE7               	goto	l746
  6950  1CDF                     l7720:	
  6951  1CDF  0023               	movlb	3	; select bank3
  6952  1CE0  0841               	movf	(_prec+1)^(0+384),w
  6953  1CE1  0020               	movlb	0	; select bank0
  6954  1CE2  00C8               	movwf	xtoa@p+1
  6955  1CE3  0023               	movlb	3	; select bank3
  6956  1CE4  0840               	movf	_prec^(0+384),w
  6957  1CE5  0020               	movlb	0	; select bank0
  6958  1CE6  00C7               	movwf	xtoa@p
  6959  1CE7                     l746:	
  6960                           
  6961                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  6962  1CE7  0023               	movlb	3	; select bank3
  6963  1CE8  083F               	movf	(_width+1)^(0+384),w
  6964  1CE9  0020               	movlb	0	; select bank0
  6965  1CEA  00CA               	movwf	xtoa@w+1
  6966  1CEB  0023               	movlb	3	; select bank3
  6967  1CEC  083E               	movf	_width^(0+384),w
  6968  1CED  0020               	movlb	0	; select bank0
  6969  1CEE  00C9               	movwf	xtoa@w
  6970                           
  6971                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  6972  1CEF  0023               	movlb	3	; select bank3
  6973  1CF0  1E42               	btfss	_flags^(0+384),4
  6974  1CF1  2CF7               	goto	l7726
  6975                           
  6976                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  6977  1CF2  30FE               	movlw	254
  6978  1CF3  0020               	movlb	0	; select bank0
  6979  1CF4  07C9               	addwf	xtoa@w,f
  6980  1CF5  30FF               	movlw	255
  6981  1CF6  3DCA               	addwfc	xtoa@w+1,f
  6982  1CF7                     l7726:	
  6983                           
  6984                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  6985  1CF7  0020               	movlb	0	; select bank0
  6986  1CF8  0832               	movf	xtoa@d,w
  6987  1CF9  00CB               	movwf	xtoa@n
  6988  1CFA  0833               	movf	xtoa@d+1,w
  6989  1CFB  00CC               	movwf	xtoa@n+1
  6990  1CFC  0834               	movf	xtoa@d+2,w
  6991  1CFD  00CD               	movwf	xtoa@n+2
  6992  1CFE  0835               	movf	xtoa@d+3,w
  6993  1CFF  00CE               	movwf	xtoa@n+3
  6994  1D00  0836               	movf	xtoa@d+4,w
  6995  1D01  00CF               	movwf	xtoa@n+4
  6996  1D02  0837               	movf	xtoa@d+5,w
  6997  1D03  00D0               	movwf	xtoa@n+5
  6998  1D04  0838               	movf	xtoa@d+6,w
  6999  1D05  00D1               	movwf	xtoa@n+6
  7000  1D06  0839               	movf	xtoa@d+7,w
  7001  1D07  00D2               	movwf	xtoa@n+7
  7002                           
  7003                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  7004  1D08  304F               	movlw	79
  7005  1D09  00D3               	movwf	xtoa@i
  7006  1D0A  3000               	movlw	0
  7007  1D0B  00D4               	movwf	xtoa@i+1
  7008                           
  7009                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  7010  1D0C  0024               	movlb	4	; select bank4
  7011  1D0D  01EF               	clrf	(_dbuf^(0+512)+79)
  7012                           
  7013                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7014  1D0E  2DB9               	goto	l7758
  7015  1D0F                     l7730:	
  7016                           
  7017                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  7018  1D0F  30FF               	movlw	255
  7019  1D10  0020               	movlb	0	; select bank0
  7020  1D11  07D3               	addwf	xtoa@i,f
  7021  1D12  30FF               	movlw	255
  7022  1D13  3DD4               	addwfc	xtoa@i+1,f
  7023                           
  7024                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  7025  1D14  300F               	movlw	15
  7026  1D15  054B               	andwf	xtoa@n,w
  7027  1D16  00D5               	movwf	xtoa@c
  7028  1D17  3000               	movlw	0
  7029  1D18  054C               	andwf	xtoa@n+1,w
  7030  1D19  00D6               	movwf	xtoa@c+1
  7031                           
  7032                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  7033  1D1A  0856               	movf	xtoa@c+1,w
  7034  1D1B  3A80               	xorlw	128
  7035  1D1C  00BB               	movwf	??_xtoa
  7036  1D1D  3080               	movlw	128
  7037  1D1E  023B               	subwf	??_xtoa,w
  7038  1D1F  1D03               	skipz
  7039  1D20  2D23               	goto	u11095
  7040  1D21  300A               	movlw	10
  7041  1D22  0255               	subwf	xtoa@c,w
  7042  1D23                     u11095:	
  7043  1D23  1C03               	skipc
  7044  1D24  2D29               	goto	l7734
  7045  1D25  0020               	movlb	0	; select bank0
  7046  1D26  0855               	movf	xtoa@c,w
  7047  1D27  3E57               	addlw	87
  7048  1D28  2D2C               	goto	L2
  7049  1D29                     l7734:	
  7050  1D29  0020               	movlb	0	; select bank0
  7051  1D2A  0855               	movf	xtoa@c,w
  7052  1D2B  3E30               	addlw	48
  7053  1D2C                     L2:	
  7054  1D2C  00D5               	movwf	xtoa@c
  7055  1D2D  3000               	movlw	0
  7056  1D2E  3D56               	addwfc	xtoa@c+1,w
  7057  1D2F  00D6               	movwf	xtoa@c+1
  7058  1D30  083A               	movf	xtoa@x,w
  7059  1D31  3EBF               	addlw	191
  7060  1D32  00BB               	movwf	??_xtoa
  7061  1D33  30FF               	movlw	255
  7062  1D34  1803               	skipnc
  7063  1D35  3000               	movlw	0
  7064  1D36  00BC               	movwf	??_xtoa+1
  7065  1D37  3000               	movlw	0
  7066  1D38  023C               	subwf	??_xtoa+1,w
  7067  1D39  301A               	movlw	26
  7068  1D3A  1903               	skipnz
  7069  1D3B  023B               	subwf	??_xtoa,w
  7070  1D3C  1803               	btfsc	3,0
  7071  1D3D  2D40               	goto	u11100
  7072  1D3E  3001               	movlw	1
  7073  1D3F  2D41               	goto	u11110
  7074  1D40                     u11100:	
  7075  1D40  3000               	movlw	0
  7076  1D41                     u11110:	
  7077  1D41  00BD               	movwf	??_xtoa+2
  7078  1D42  01BE               	clrf	??_xtoa+3
  7079  1D43  083D               	movf	??_xtoa+2,w
  7080  1D44  00C3               	movwf	_xtoa$1130
  7081  1D45  083E               	movf	??_xtoa+3,w
  7082  1D46  00C4               	movwf	_xtoa$1130+1
  7083  1D47  0843               	movf	_xtoa$1130,w
  7084  1D48  0444               	iorwf	_xtoa$1130+1,w
  7085  1D49  1903               	btfsc	3,2
  7086  1D4A  2D77               	goto	l7750
  7087  1D4B  3020               	movlw	32
  7088  1D4C  0455               	iorwf	xtoa@c,w
  7089  1D4D  00BB               	movwf	??_xtoa
  7090  1D4E  3000               	movlw	0
  7091  1D4F  0456               	iorwf	xtoa@c+1,w
  7092  1D50  00BC               	movwf	??_xtoa+1
  7093  1D51  083B               	movf	??_xtoa,w
  7094  1D52  3E9F               	addlw	159
  7095  1D53  00BD               	movwf	??_xtoa+2
  7096  1D54  30FF               	movlw	255
  7097  1D55  3D3C               	addwfc	??_xtoa+1,w
  7098  1D56  00BE               	movwf	??_xtoa+3
  7099  1D57  3000               	movlw	0
  7100  1D58  023E               	subwf	??_xtoa+3,w
  7101  1D59  301A               	movlw	26
  7102  1D5A  1903               	skipnz
  7103  1D5B  023D               	subwf	??_xtoa+2,w
  7104  1D5C  1803               	btfsc	3,0
  7105  1D5D  2D60               	goto	u11130
  7106  1D5E  3001               	movlw	1
  7107  1D5F  2D61               	goto	u11140
  7108  1D60                     u11130:	
  7109  1D60  3000               	movlw	0
  7110  1D61                     u11140:	
  7111  1D61  00BF               	movwf	??_xtoa+4
  7112  1D62  01C0               	clrf	??_xtoa+5
  7113  1D63  083F               	movf	??_xtoa+4,w
  7114  1D64  00C5               	movwf	_xtoa$1131
  7115  1D65  0840               	movf	??_xtoa+5,w
  7116  1D66  00C6               	movwf	_xtoa$1131+1
  7117  1D67  0845               	movf	_xtoa$1131,w
  7118  1D68  0446               	iorwf	_xtoa$1131+1,w
  7119  1D69  1903               	btfsc	3,2
  7120  1D6A  2D77               	goto	l7750
  7121                           
  7122                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  7123  1D6B  0856               	movf	xtoa@c+1,w
  7124  1D6C  00F8               	movwf	toupper@c+1
  7125  1D6D  0855               	movf	xtoa@c,w
  7126  1D6E  00F7               	movwf	toupper@c
  7127  1D6F  31B5  253D  319C   	fcall	_toupper
  7128  1D72  0878               	movf	?_toupper+1,w
  7129  1D73  0020               	movlb	0	; select bank0
  7130  1D74  00D6               	movwf	xtoa@c+1
  7131  1D75  0877               	movf	?_toupper,w
  7132  1D76  00D5               	movwf	xtoa@c
  7133  1D77                     l7750:	
  7134                           
  7135                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  7136  1D77  0855               	movf	xtoa@c,w
  7137  1D78  00BB               	movwf	??_xtoa
  7138  1D79  0853               	movf	xtoa@i,w
  7139  1D7A  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7140  1D7B  0086               	movwf	6
  7141  1D7C  3002               	movlw	2	; select bank4/5
  7142  1D7D  0087               	movwf	7
  7143  1D7E  083B               	movf	??_xtoa,w
  7144  1D7F  0081               	movwf	1
  7145                           
  7146                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  7147  1D80  30FF               	movlw	255
  7148  1D81  07C7               	addwf	xtoa@p,f
  7149  1D82  30FF               	movlw	255
  7150  1D83  3DC8               	addwfc	xtoa@p+1,f
  7151                           
  7152                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  7153  1D84  30FF               	movlw	255
  7154  1D85  07C9               	addwf	xtoa@w,f
  7155  1D86  30FF               	movlw	255
  7156  1D87  3DCA               	addwfc	xtoa@w+1,f
  7157                           
  7158                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  7159  1D88  304B               	movlw	low xtoa@n
  7160  1D89  0086               	movwf	6
  7161  1D8A  3000               	movlw	high xtoa@n
  7162  1D8B  0087               	movwf	7
  7163  1D8C  3F40               	moviw [0]fsr1
  7164  1D8D  00BB               	movwf	??_xtoa
  7165  1D8E  3F41               	moviw [1]fsr1
  7166  1D8F  00BC               	movwf	??_xtoa+1
  7167  1D90  3F42               	moviw [2]fsr1
  7168  1D91  00BD               	movwf	??_xtoa+2
  7169  1D92  3F43               	moviw [3]fsr1
  7170  1D93  00BE               	movwf	??_xtoa+3
  7171  1D94  3F44               	moviw [4]fsr1
  7172  1D95  00BF               	movwf	??_xtoa+4
  7173  1D96  3F45               	moviw [5]fsr1
  7174  1D97  00C0               	movwf	??_xtoa+5
  7175  1D98  3F46               	moviw [6]fsr1
  7176  1D99  00C1               	movwf	??_xtoa+6
  7177  1D9A  3F47               	moviw [7]fsr1
  7178  1D9B  00C2               	movwf	??_xtoa+7
  7179  1D9C  3004               	movlw	4
  7180  1D9D                     u11165:	
  7181  1D9D  0020               	movlb	0	; select bank0
  7182  1D9E  36C2               	lsrf	??_xtoa+7,f
  7183  1D9F  0CC1               	rrf	??_xtoa+6,f
  7184  1DA0  0CC0               	rrf	??_xtoa+5,f
  7185  1DA1  0CBF               	rrf	??_xtoa+4,f
  7186  1DA2  0CBE               	rrf	??_xtoa+3,f
  7187  1DA3  0CBD               	rrf	??_xtoa+2,f
  7188  1DA4  0CBC               	rrf	??_xtoa+1,f
  7189  1DA5  0CBB               	rrf	??_xtoa,f
  7190  1DA6  0B89               	decfsz	9,f
  7191  1DA7  2D9D               	goto	u11165
  7192  1DA8  0020               	movlb	0	; select bank0
  7193  1DA9  0842               	movf	??_xtoa+7,w
  7194  1DAA  00D2               	movwf	xtoa@n+7
  7195  1DAB  0841               	movf	??_xtoa+6,w
  7196  1DAC  00D1               	movwf	xtoa@n+6
  7197  1DAD  0840               	movf	??_xtoa+5,w
  7198  1DAE  00D0               	movwf	xtoa@n+5
  7199  1DAF  083F               	movf	??_xtoa+4,w
  7200  1DB0  00CF               	movwf	xtoa@n+4
  7201  1DB1  083E               	movf	??_xtoa+3,w
  7202  1DB2  00CE               	movwf	xtoa@n+3
  7203  1DB3  083D               	movf	??_xtoa+2,w
  7204  1DB4  00CD               	movwf	xtoa@n+2
  7205  1DB5  083C               	movf	??_xtoa+1,w
  7206  1DB6  00CC               	movwf	xtoa@n+1
  7207  1DB7  083B               	movf	??_xtoa,w
  7208  1DB8  00CB               	movwf	xtoa@n
  7209  1DB9                     l7758:	
  7210                           
  7211                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7212  1DB9  0020               	movlb	0	; select bank0
  7213  1DBA  0854               	movf	xtoa@i+1,w
  7214  1DBB  3A80               	xorlw	128
  7215  1DBC  00BB               	movwf	??_xtoa
  7216  1DBD  3080               	movlw	128
  7217  1DBE  023B               	subwf	??_xtoa,w
  7218  1DBF  1D03               	skipz
  7219  1DC0  2DC3               	goto	u11175
  7220  1DC1  3002               	movlw	2
  7221  1DC2  0253               	subwf	xtoa@i,w
  7222  1DC3                     u11175:	
  7223  1DC3  1C03               	skipc
  7224  1DC4  2DEA               	goto	l767
  7225  1DC5  0020               	movlb	0	; select bank0
  7226  1DC6  084B               	movf	xtoa@n,w
  7227  1DC7  044C               	iorwf	xtoa@n+1,w
  7228  1DC8  044D               	iorwf	xtoa@n+2,w
  7229  1DC9  044E               	iorwf	xtoa@n+3,w
  7230  1DCA  044F               	iorwf	xtoa@n+4,w
  7231  1DCB  0450               	iorwf	xtoa@n+5,w
  7232  1DCC  0451               	iorwf	xtoa@n+6,w
  7233  1DCD  0452               	iorwf	xtoa@n+7,w
  7234  1DCE  1D03               	skipz
  7235  1DCF  2D0F               	goto	l7730
  7236  1DD0  0848               	movf	xtoa@p+1,w
  7237  1DD1  3A80               	xorlw	128
  7238  1DD2  00BB               	movwf	??_xtoa
  7239  1DD3  3080               	movlw	128
  7240  1DD4  023B               	subwf	??_xtoa,w
  7241  1DD5  1D03               	skipz
  7242  1DD6  2DD9               	goto	u11195
  7243  1DD7  3001               	movlw	1
  7244  1DD8  0247               	subwf	xtoa@p,w
  7245  1DD9                     u11195:	
  7246  1DD9  1803               	skipnc
  7247  1DDA  2D0F               	goto	l7730
  7248  1DDB  0020               	movlb	0	; select bank0
  7249  1DDC  084A               	movf	xtoa@w+1,w
  7250  1DDD  3A80               	xorlw	128
  7251  1DDE  00BB               	movwf	??_xtoa
  7252  1DDF  3080               	movlw	128
  7253  1DE0  023B               	subwf	??_xtoa,w
  7254  1DE1  1D03               	skipz
  7255  1DE2  2DE5               	goto	u11205
  7256  1DE3  3001               	movlw	1
  7257  1DE4  0249               	subwf	xtoa@w,w
  7258  1DE5                     u11205:	
  7259  1DE5  1C03               	skipc
  7260  1DE6  2DEA               	goto	l767
  7261  1DE7  0023               	movlb	3	; select bank3
  7262  1DE8  18C2               	btfsc	_flags^(0+384),1
  7263  1DE9  2D0F               	goto	l7730
  7264  1DEA                     l767:	
  7265                           
  7266                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  7267  1DEA  0023               	movlb	3	; select bank3
  7268  1DEB  1E42               	btfss	_flags^(0+384),4
  7269  1DEC  2E08               	goto	l7774
  7270                           
  7271                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  7272  1DED  30FF               	movlw	255
  7273  1DEE  0020               	movlb	0	; select bank0
  7274  1DEF  07D3               	addwf	xtoa@i,f
  7275  1DF0  30FF               	movlw	255
  7276  1DF1  3DD4               	addwfc	xtoa@i+1,f
  7277                           
  7278                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  7279  1DF2  083A               	movf	xtoa@x,w
  7280  1DF3  00BB               	movwf	??_xtoa
  7281  1DF4  0853               	movf	xtoa@i,w
  7282  1DF5  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7283  1DF6  0086               	movwf	6
  7284  1DF7  3002               	movlw	2	; select bank4/5
  7285  1DF8  0087               	movwf	7
  7286  1DF9  083B               	movf	??_xtoa,w
  7287  1DFA  0081               	movwf	1
  7288                           
  7289                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  7290  1DFB  30FF               	movlw	255
  7291  1DFC  07D3               	addwf	xtoa@i,f
  7292  1DFD  30FF               	movlw	255
  7293  1DFE  3DD4               	addwfc	xtoa@i+1,f
  7294                           
  7295                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  7296  1DFF  3030               	movlw	48
  7297  1E00  00BB               	movwf	??_xtoa
  7298  1E01  0853               	movf	xtoa@i,w
  7299  1E02  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7300  1E03  0086               	movwf	6
  7301  1E04  3002               	movlw	2	; select bank4/5
  7302  1E05  0087               	movwf	7
  7303  1E06  083B               	movf	??_xtoa,w
  7304  1E07  0081               	movwf	1
  7305  1E08                     l7774:	
  7306                           
  7307                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  7308  1E08  0020               	movlb	0	; select bank0
  7309  1E09  0831               	movf	xtoa@fp+1,w
  7310  1E0A  00A7               	movwf	pad@fp+1
  7311  1E0B  0830               	movf	xtoa@fp,w
  7312  1E0C  00A6               	movwf	pad@fp
  7313  1E0D  0853               	movf	xtoa@i,w
  7314  1E0E  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7315  1E0F  00BB               	movwf	??_xtoa
  7316  1E10  083B               	movf	??_xtoa,w
  7317  1E11  00A8               	movwf	pad@buf
  7318  1E12  084A               	movf	xtoa@w+1,w
  7319  1E13  00AA               	movwf	pad@p+1
  7320  1E14  0849               	movf	xtoa@w,w
  7321  1E15  00A9               	movwf	pad@p
  7322  1E16  31B7  275E         	fcall	_pad
  7323  1E18  0020               	movlb	0	; select bank0
  7324  1E19  0827               	movf	?_pad+1,w
  7325  1E1A  00B1               	movwf	?_xtoa+1
  7326  1E1B  0826               	movf	?_pad,w
  7327  1E1C  00B0               	movwf	?_xtoa
  7328  1E1D  0008               	return
  7329  1E1E                     __end_of_xtoa:	
  7330                           
  7331                           	psect	text8
  7332  353D                     __ptext8:	
  7333 ;; *************** function _toupper *****************
  7334 ;; Defined at:
  7335 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  7336 ;; Parameters:    Size  Location     Type
  7337 ;;  c               2    7[COMMON] int 
  7338 ;; Auto vars:     Size  Location     Type
  7339 ;;		None
  7340 ;; Return value:  Size  Location     Type
  7341 ;;                  2    7[COMMON] int 
  7342 ;; Registers used:
  7343 ;;		wreg, status,2, status,0
  7344 ;; Tracked objects:
  7345 ;;		On entry : 0/0
  7346 ;;		On exit  : 0/0
  7347 ;;		Unchanged: 0/0
  7348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7349 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7350 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7351 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7352 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7353 ;;Total ram usage:        8 bytes
  7354 ;; Hardware stack levels used:    1
  7355 ;; Hardware stack levels required when called:    2
  7356 ;; This function calls:
  7357 ;;		_islower
  7358 ;; This function is called by:
  7359 ;;		_xtoa
  7360 ;; This function uses a non-reentrant model
  7361 ;;
  7362                           
  7363                           
  7364                           ;psect for function _toupper
  7365  353D                     _toupper:	
  7366                           
  7367                           ;incstack = 0
  7368                           ; Regs used in _toupper: [wreg+status,2+status,0]
  7369  353D  0877               	movf	toupper@c,w
  7370  353E  3E9F               	addlw	159
  7371  353F  0020               	movlb	0	; select bank0
  7372  3540  00A0               	movwf	??_toupper
  7373  3541  30FF               	movlw	255
  7374  3542  3D78               	addwfc	toupper@c+1,w
  7375  3543  00A1               	movwf	??_toupper+1
  7376  3544  3000               	movlw	0
  7377  3545  0221               	subwf	??_toupper+1,w
  7378  3546  301A               	movlw	26
  7379  3547  1903               	skipnz
  7380  3548  0220               	subwf	??_toupper,w
  7381  3549  1803               	btfsc	3,0
  7382  354A  2D4D               	goto	u10050
  7383  354B  3001               	movlw	1
  7384  354C  2D4E               	goto	u10060
  7385  354D                     u10050:	
  7386  354D  3000               	movlw	0
  7387  354E                     u10060:	
  7388  354E  00A2               	movwf	??_toupper+2
  7389  354F  01A3               	clrf	??_toupper+3
  7390  3550  0822               	movf	??_toupper+2,w
  7391  3551  00F9               	movwf	_toupper$1737
  7392  3552  0823               	movf	??_toupper+3,w
  7393  3553  00FA               	movwf	_toupper$1737+1
  7394  3554  0879               	movf	_toupper$1737,w
  7395  3555  047A               	iorwf	_toupper$1737+1,w
  7396  3556  1903               	btfsc	3,2
  7397  3557  0008               	return
  7398  3558  305F               	movlw	95
  7399  3559  0577               	andwf	toupper@c,w
  7400  355A  00F7               	movwf	?_toupper
  7401  355B  3000               	movlw	0
  7402  355C  0578               	andwf	toupper@c+1,w
  7403  355D  00F8               	movwf	?_toupper+1
  7404  355E  0008               	return
  7405  355F                     __end_of_toupper:	
  7406                           
  7407                           	psect	text9
  7408  33C0                     __ptext9:	
  7409 ;; *************** function _islower *****************
  7410 ;; Defined at:
  7411 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  7412 ;; Parameters:    Size  Location     Type
  7413 ;;  c               2    1[COMMON] int 
  7414 ;; Auto vars:     Size  Location     Type
  7415 ;;		None
  7416 ;; Return value:  Size  Location     Type
  7417 ;;                  2    1[COMMON] int 
  7418 ;; Registers used:
  7419 ;;		wreg, status,2, status,0
  7420 ;; Tracked objects:
  7421 ;;		On entry : 0/0
  7422 ;;		On exit  : 0/0
  7423 ;;		Unchanged: 0/0
  7424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7425 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7427 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7428 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7429 ;;Total ram usage:        6 bytes
  7430 ;; Hardware stack levels used:    1
  7431 ;; Hardware stack levels required when called:    1
  7432 ;; This function calls:
  7433 ;;		Nothing
  7434 ;; This function is called by:
  7435 ;;		_toupper
  7436 ;; This function uses a non-reentrant model
  7437 ;;
  7438                           
  7439                           
  7440                           ;psect for function _islower
  7441  33C0                     _islower:	
  7442                           
  7443                           ;incstack = 0
  7444                           ; Regs used in _islower: [wreg+status,2+status,0]
  7445  33C0  0871               	movf	islower@c,w
  7446  33C1  3E9F               	addlw	159
  7447  33C2  00F3               	movwf	??_islower
  7448  33C3  30FF               	movlw	255
  7449  33C4  3D72               	addwfc	islower@c+1,w
  7450  33C5  00F4               	movwf	??_islower+1
  7451  33C6  3000               	movlw	0
  7452  33C7  0274               	subwf	??_islower+1,w
  7453  33C8  301A               	movlw	26
  7454  33C9  1903               	skipnz
  7455  33CA  0273               	subwf	??_islower,w
  7456  33CB  1803               	btfsc	3,0
  7457  33CC  2BCF               	goto	u9960
  7458  33CD  3001               	movlw	1
  7459  33CE  2BD0               	goto	u9970
  7460  33CF                     u9960:	
  7461  33CF  3000               	movlw	0
  7462  33D0                     u9970:	
  7463  33D0  00F5               	movwf	??_islower+2
  7464  33D1  01F6               	clrf	??_islower+3
  7465  33D2  0875               	movf	??_islower+2,w
  7466  33D3  00F1               	movwf	?_islower
  7467  33D4  0876               	movf	??_islower+3,w
  7468  33D5  00F2               	movwf	?_islower+1
  7469  33D6  0008               	return
  7470  33D7                     __end_of_islower:	
  7471                           
  7472                           	psect	text10
  7473  3440                     __ptext10:	
  7474 ;; *************** function _isalpha *****************
  7475 ;; Defined at:
  7476 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  7477 ;; Parameters:    Size  Location     Type
  7478 ;;  c               2    1[COMMON] int 
  7479 ;; Auto vars:     Size  Location     Type
  7480 ;;		None
  7481 ;; Return value:  Size  Location     Type
  7482 ;;                  2    1[COMMON] int 
  7483 ;; Registers used:
  7484 ;;		wreg, status,2, status,0
  7485 ;; Tracked objects:
  7486 ;;		On entry : 0/0
  7487 ;;		On exit  : 0/0
  7488 ;;		Unchanged: 0/0
  7489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7490 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7492 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7493 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7494 ;;Total ram usage:        8 bytes
  7495 ;; Hardware stack levels used:    1
  7496 ;; Hardware stack levels required when called:    1
  7497 ;; This function calls:
  7498 ;;		Nothing
  7499 ;; This function is called by:
  7500 ;;		_xtoa
  7501 ;; This function uses a non-reentrant model
  7502 ;;
  7503                           
  7504                           
  7505                           ;psect for function _isalpha
  7506  3440                     _isalpha:	
  7507                           
  7508                           ;incstack = 0
  7509                           ; Regs used in _isalpha: [wreg+status,2+status,0]
  7510  3440  3020               	movlw	32
  7511  3441  0471               	iorwf	isalpha@c,w
  7512  3442  00F3               	movwf	??_isalpha
  7513  3443  3000               	movlw	0
  7514  3444  0472               	iorwf	isalpha@c+1,w
  7515  3445  00F4               	movwf	??_isalpha+1
  7516  3446  0873               	movf	??_isalpha,w
  7517  3447  3E9F               	addlw	159
  7518  3448  00F5               	movwf	??_isalpha+2
  7519  3449  30FF               	movlw	255
  7520  344A  3D74               	addwfc	??_isalpha+1,w
  7521  344B  00F6               	movwf	??_isalpha+3
  7522  344C  3000               	movlw	0
  7523  344D  0276               	subwf	??_isalpha+3,w
  7524  344E  301A               	movlw	26
  7525  344F  1903               	skipnz
  7526  3450  0275               	subwf	??_isalpha+2,w
  7527  3451  1803               	btfsc	3,0
  7528  3452  2C55               	goto	u5600
  7529  3453  3001               	movlw	1
  7530  3454  2C56               	goto	u5610
  7531  3455                     u5600:	
  7532  3455  3000               	movlw	0
  7533  3456                     u5610:	
  7534  3456  00F7               	movwf	??_isalpha+4
  7535  3457  01F8               	clrf	??_isalpha+5
  7536  3458  0877               	movf	??_isalpha+4,w
  7537  3459  00F1               	movwf	?_isalpha
  7538  345A  0878               	movf	??_isalpha+5,w
  7539  345B  00F2               	movwf	?_isalpha+1
  7540  345C  0008               	return
  7541  345D                     __end_of_isalpha:	
  7542                           
  7543                           	psect	text11
  7544  2455                     __ptext11:	
  7545 ;; *************** function _utoa *****************
  7546 ;; Defined at:
  7547 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7548 ;; Parameters:    Size  Location     Type
  7549 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  7550 ;;		 -> vsnprintf@f(6), 
  7551 ;;  d               8   18[BANK0 ] unsigned long long 
  7552 ;; Auto vars:     Size  Location     Type
  7553 ;;  n               8   31[BANK0 ] unsigned long long 
  7554 ;;  i               2   39[BANK0 ] int 
  7555 ;;  w               2   29[BANK0 ] int 
  7556 ;;  p               2   27[BANK0 ] int 
  7557 ;; Return value:  Size  Location     Type
  7558 ;;                  2   16[BANK0 ] int 
  7559 ;; Registers used:
  7560 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7561 ;; Tracked objects:
  7562 ;;		On entry : 0/0
  7563 ;;		On exit  : 0/0
  7564 ;;		Unchanged: 0/0
  7565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7566 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7567 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7568 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7569 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7570 ;;Total ram usage:       25 bytes
  7571 ;; Hardware stack levels used:    1
  7572 ;; Hardware stack levels required when called:    5
  7573 ;; This function calls:
  7574 ;;		___lodiv
  7575 ;;		___lomod
  7576 ;;		_pad
  7577 ;; This function is called by:
  7578 ;;		_vfpfcnvrt
  7579 ;; This function uses a non-reentrant model
  7580 ;;
  7581                           
  7582                           
  7583                           ;psect for function _utoa
  7584  2455                     _utoa:	
  7585                           
  7586                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  7587                           
  7588                           ;incstack = 0
  7589                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7590  2455  0023               	movlb	3	; select bank3
  7591  2456  1BC1               	btfsc	(_prec+1)^(0+384),7
  7592  2457  2C5C               	goto	l727
  7593                           
  7594                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  7595  2458  30FD               	movlw	253
  7596  2459  05C2               	andwf	_flags^(0+384),f
  7597  245A  30FF               	movlw	255
  7598  245B  05C3               	andwf	(_flags+1)^(0+384),f
  7599  245C                     l727:	
  7600                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 601:     }
  7601                           
  7602                           
  7603                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  7604  245C  0841               	movf	(_prec+1)^(0+384),w
  7605  245D  3A80               	xorlw	128
  7606  245E  0020               	movlb	0	; select bank0
  7607  245F  00BA               	movwf	??_utoa
  7608  2460  3080               	movlw	128
  7609  2461  023A               	subwf	??_utoa,w
  7610  2462  1D03               	skipz
  7611  2463  2C67               	goto	u11005
  7612  2464  3001               	movlw	1
  7613  2465  0023               	movlb	3	; select bank3
  7614  2466  0240               	subwf	_prec^(0+384),w
  7615  2467                     u11005:	
  7616  2467  1803               	skipnc
  7617  2468  2C6F               	goto	l7684
  7618  2469  3001               	movlw	1
  7619  246A  0020               	movlb	0	; select bank0
  7620  246B  00BB               	movwf	utoa@p
  7621  246C  3000               	movlw	0
  7622  246D  00BC               	movwf	utoa@p+1
  7623  246E  2C77               	goto	l731
  7624  246F                     l7684:	
  7625  246F  0023               	movlb	3	; select bank3
  7626  2470  0841               	movf	(_prec+1)^(0+384),w
  7627  2471  0020               	movlb	0	; select bank0
  7628  2472  00BC               	movwf	utoa@p+1
  7629  2473  0023               	movlb	3	; select bank3
  7630  2474  0840               	movf	_prec^(0+384),w
  7631  2475  0020               	movlb	0	; select bank0
  7632  2476  00BB               	movwf	utoa@p
  7633  2477                     l731:	
  7634                           
  7635                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  7636  2477  0023               	movlb	3	; select bank3
  7637  2478  083F               	movf	(_width+1)^(0+384),w
  7638  2479  0020               	movlb	0	; select bank0
  7639  247A  00BE               	movwf	utoa@w+1
  7640  247B  0023               	movlb	3	; select bank3
  7641  247C  083E               	movf	_width^(0+384),w
  7642  247D  0020               	movlb	0	; select bank0
  7643  247E  00BD               	movwf	utoa@w
  7644                           
  7645                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  7646  247F  0832               	movf	utoa@d,w
  7647  2480  00BF               	movwf	utoa@n
  7648  2481  0833               	movf	utoa@d+1,w
  7649  2482  00C0               	movwf	utoa@n+1
  7650  2483  0834               	movf	utoa@d+2,w
  7651  2484  00C1               	movwf	utoa@n+2
  7652  2485  0835               	movf	utoa@d+3,w
  7653  2486  00C2               	movwf	utoa@n+3
  7654  2487  0836               	movf	utoa@d+4,w
  7655  2488  00C3               	movwf	utoa@n+4
  7656  2489  0837               	movf	utoa@d+5,w
  7657  248A  00C4               	movwf	utoa@n+5
  7658  248B  0838               	movf	utoa@d+6,w
  7659  248C  00C5               	movwf	utoa@n+6
  7660  248D  0839               	movf	utoa@d+7,w
  7661  248E  00C6               	movwf	utoa@n+7
  7662                           
  7663                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  7664  248F  304F               	movlw	79
  7665  2490  00C7               	movwf	utoa@i
  7666  2491  3000               	movlw	0
  7667  2492  00C8               	movwf	utoa@i+1
  7668                           
  7669                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  7670  2493  0024               	movlb	4	; select bank4
  7671  2494  01EF               	clrf	(_dbuf^(0+512)+79)
  7672                           
  7673                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7674  2495  2D1B               	goto	l7700
  7675  2496                     l7702:	
  7676  2496  083F               	movf	utoa@n,w
  7677  2497  0440               	iorwf	utoa@n+1,w
  7678  2498  0441               	iorwf	utoa@n+2,w
  7679  2499  0442               	iorwf	utoa@n+3,w
  7680  249A  0443               	iorwf	utoa@n+4,w
  7681  249B  0444               	iorwf	utoa@n+5,w
  7682  249C  0445               	iorwf	utoa@n+6,w
  7683  249D  0446               	iorwf	utoa@n+7,w
  7684  249E  1D03               	skipz
  7685  249F  2CBA               	goto	l7690
  7686  24A0  083C               	movf	utoa@p+1,w
  7687  24A1  3A80               	xorlw	128
  7688  24A2  00BA               	movwf	??_utoa
  7689  24A3  3080               	movlw	128
  7690  24A4  023A               	subwf	??_utoa,w
  7691  24A5  1D03               	skipz
  7692  24A6  2CA9               	goto	u11035
  7693  24A7  3001               	movlw	1
  7694  24A8  023B               	subwf	utoa@p,w
  7695  24A9                     u11035:	
  7696  24A9  1803               	skipnc
  7697  24AA  2CBA               	goto	l7690
  7698  24AB  0020               	movlb	0	; select bank0
  7699  24AC  083E               	movf	utoa@w+1,w
  7700  24AD  3A80               	xorlw	128
  7701  24AE  00BA               	movwf	??_utoa
  7702  24AF  3080               	movlw	128
  7703  24B0  023A               	subwf	??_utoa,w
  7704  24B1  1D03               	skipz
  7705  24B2  2CB5               	goto	u11045
  7706  24B3  3001               	movlw	1
  7707  24B4  023D               	subwf	utoa@w,w
  7708  24B5                     u11045:	
  7709  24B5  1C03               	skipc
  7710  24B6  2D20               	goto	l7710
  7711  24B7  0023               	movlb	3	; select bank3
  7712  24B8  1CC2               	btfss	_flags^(0+384),1
  7713  24B9  2D20               	goto	l7710
  7714  24BA                     l7690:	
  7715                           
  7716                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  7717  24BA  30FF               	movlw	255
  7718  24BB  0020               	movlb	0	; select bank0
  7719  24BC  07C7               	addwf	utoa@i,f
  7720  24BD  30FF               	movlw	255
  7721  24BE  3DC8               	addwfc	utoa@i+1,f
  7722                           
  7723                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  7724  24BF  300A               	movlw	10
  7725  24C0  00A0               	movwf	___lomod@divisor
  7726  24C1  01A1               	clrf	___lomod@divisor+1
  7727  24C2  01A2               	clrf	___lomod@divisor+2
  7728  24C3  01A3               	clrf	___lomod@divisor+3
  7729  24C4  01A4               	clrf	___lomod@divisor+4
  7730  24C5  01A5               	clrf	___lomod@divisor+5
  7731  24C6  01A6               	clrf	___lomod@divisor+6
  7732  24C7  01A7               	clrf	___lomod@divisor+7
  7733  24C8  083F               	movf	utoa@n,w
  7734  24C9  00A8               	movwf	___lomod@dividend
  7735  24CA  0840               	movf	utoa@n+1,w
  7736  24CB  00A9               	movwf	___lomod@dividend+1
  7737  24CC  0841               	movf	utoa@n+2,w
  7738  24CD  00AA               	movwf	___lomod@dividend+2
  7739  24CE  0842               	movf	utoa@n+3,w
  7740  24CF  00AB               	movwf	___lomod@dividend+3
  7741  24D0  0843               	movf	utoa@n+4,w
  7742  24D1  00AC               	movwf	___lomod@dividend+4
  7743  24D2  0844               	movf	utoa@n+5,w
  7744  24D3  00AD               	movwf	___lomod@dividend+5
  7745  24D4  0845               	movf	utoa@n+6,w
  7746  24D5  00AE               	movwf	___lomod@dividend+6
  7747  24D6  0846               	movf	utoa@n+7,w
  7748  24D7  00AF               	movwf	___lomod@dividend+7
  7749  24D8  31A8  20E6  31A4   	fcall	___lomod
  7750  24DB  0020               	movlb	0	; select bank0
  7751  24DC  0820               	movf	?___lomod,w
  7752  24DD  3E30               	addlw	48
  7753  24DE  00BA               	movwf	??_utoa
  7754  24DF  0847               	movf	utoa@i,w
  7755  24E0  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7756  24E1  0086               	movwf	6
  7757  24E2  3002               	movlw	2	; select bank4/5
  7758  24E3  0087               	movwf	7
  7759  24E4  083A               	movf	??_utoa,w
  7760  24E5  0081               	movwf	1
  7761                           
  7762                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  7763  24E6  30FF               	movlw	255
  7764  24E7  07BB               	addwf	utoa@p,f
  7765  24E8  30FF               	movlw	255
  7766  24E9  3DBC               	addwfc	utoa@p+1,f
  7767                           
  7768                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  7769  24EA  30FF               	movlw	255
  7770  24EB  07BD               	addwf	utoa@w,f
  7771  24EC  30FF               	movlw	255
  7772  24ED  3DBE               	addwfc	utoa@w+1,f
  7773                           
  7774                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  7775  24EE  300A               	movlw	10
  7776  24EF  00A0               	movwf	___lodiv@divisor
  7777  24F0  01A1               	clrf	___lodiv@divisor+1
  7778  24F1  01A2               	clrf	___lodiv@divisor+2
  7779  24F2  01A3               	clrf	___lodiv@divisor+3
  7780  24F3  01A4               	clrf	___lodiv@divisor+4
  7781  24F4  01A5               	clrf	___lodiv@divisor+5
  7782  24F5  01A6               	clrf	___lodiv@divisor+6
  7783  24F6  01A7               	clrf	___lodiv@divisor+7
  7784  24F7  083F               	movf	utoa@n,w
  7785  24F8  00A8               	movwf	___lodiv@dividend
  7786  24F9  0840               	movf	utoa@n+1,w
  7787  24FA  00A9               	movwf	___lodiv@dividend+1
  7788  24FB  0841               	movf	utoa@n+2,w
  7789  24FC  00AA               	movwf	___lodiv@dividend+2
  7790  24FD  0842               	movf	utoa@n+3,w
  7791  24FE  00AB               	movwf	___lodiv@dividend+3
  7792  24FF  0843               	movf	utoa@n+4,w
  7793  2500  00AC               	movwf	___lodiv@dividend+4
  7794  2501  0844               	movf	utoa@n+5,w
  7795  2502  00AD               	movwf	___lodiv@dividend+5
  7796  2503  0845               	movf	utoa@n+6,w
  7797  2504  00AE               	movwf	___lodiv@dividend+6
  7798  2505  0846               	movf	utoa@n+7,w
  7799  2506  00AF               	movwf	___lodiv@dividend+7
  7800  2507  31AA  2243  31A4   	fcall	___lodiv
  7801  250A  0020               	movlb	0	; select bank0
  7802  250B  0820               	movf	?___lodiv,w
  7803  250C  00BF               	movwf	utoa@n
  7804  250D  0821               	movf	?___lodiv+1,w
  7805  250E  00C0               	movwf	utoa@n+1
  7806  250F  0822               	movf	?___lodiv+2,w
  7807  2510  00C1               	movwf	utoa@n+2
  7808  2511  0823               	movf	?___lodiv+3,w
  7809  2512  00C2               	movwf	utoa@n+3
  7810  2513  0824               	movf	?___lodiv+4,w
  7811  2514  00C3               	movwf	utoa@n+4
  7812  2515  0825               	movf	?___lodiv+5,w
  7813  2516  00C4               	movwf	utoa@n+5
  7814  2517  0826               	movf	?___lodiv+6,w
  7815  2518  00C5               	movwf	utoa@n+6
  7816  2519  0827               	movf	?___lodiv+7,w
  7817  251A  00C6               	movwf	utoa@n+7
  7818  251B                     l7700:	
  7819                           
  7820                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7821  251B  0020               	movlb	0	; select bank0
  7822  251C  0847               	movf	utoa@i,w
  7823  251D  0448               	iorwf	utoa@i+1,w
  7824  251E  1D03               	btfss	3,2
  7825  251F  2C96               	goto	l7702
  7826  2520                     l7710:	
  7827                           
  7828                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  7829  2520  0020               	movlb	0	; select bank0
  7830  2521  0831               	movf	utoa@fp+1,w
  7831  2522  00A7               	movwf	pad@fp+1
  7832  2523  0830               	movf	utoa@fp,w
  7833  2524  00A6               	movwf	pad@fp
  7834  2525  0847               	movf	utoa@i,w
  7835  2526  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7836  2527  00BA               	movwf	??_utoa
  7837  2528  083A               	movf	??_utoa,w
  7838  2529  00A8               	movwf	pad@buf
  7839  252A  083E               	movf	utoa@w+1,w
  7840  252B  00AA               	movwf	pad@p+1
  7841  252C  083D               	movf	utoa@w,w
  7842  252D  00A9               	movwf	pad@p
  7843  252E  31B7  275E         	fcall	_pad
  7844  2530  0020               	movlb	0	; select bank0
  7845  2531  0827               	movf	?_pad+1,w
  7846  2532  00B1               	movwf	?_utoa+1
  7847  2533  0826               	movf	?_pad,w
  7848  2534  00B0               	movwf	?_utoa
  7849  2535  0008               	return
  7850  2536                     __end_of_utoa:	
  7851                           
  7852                           	psect	text12
  7853  28E6                     __ptext12:	
  7854 ;; *************** function ___lomod *****************
  7855 ;; Defined at:
  7856 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lomod.c"
  7857 ;; Parameters:    Size  Location     Type
  7858 ;;  divisor         8    0[BANK0 ] unsigned long long 
  7859 ;;  dividend        8    8[BANK0 ] unsigned long long 
  7860 ;; Auto vars:     Size  Location     Type
  7861 ;;  counter         1    2[COMMON] unsigned char 
  7862 ;; Return value:  Size  Location     Type
  7863 ;;                  8    0[BANK0 ] unsigned long long 
  7864 ;; Registers used:
  7865 ;;		wreg, status,2, status,0
  7866 ;; Tracked objects:
  7867 ;;		On entry : 0/0
  7868 ;;		On exit  : 0/0
  7869 ;;		Unchanged: 0/0
  7870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7871 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7872 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7873 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7874 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7875 ;;Total ram usage:       18 bytes
  7876 ;; Hardware stack levels used:    1
  7877 ;; Hardware stack levels required when called:    1
  7878 ;; This function calls:
  7879 ;;		Nothing
  7880 ;; This function is called by:
  7881 ;;		_utoa
  7882 ;; This function uses a non-reentrant model
  7883 ;;
  7884                           
  7885                           
  7886                           ;psect for function ___lomod
  7887  28E6                     ___lomod:	
  7888                           
  7889                           ;incstack = 0
  7890                           ; Regs used in ___lomod: [wreg+status,2+status,0]
  7891  28E6  0020               	movlb	0	; select bank0
  7892  28E7  0820               	movf	___lomod@divisor,w
  7893  28E8  0421               	iorwf	___lomod@divisor+1,w
  7894  28E9  0422               	iorwf	___lomod@divisor+2,w
  7895  28EA  0423               	iorwf	___lomod@divisor+3,w
  7896  28EB  0424               	iorwf	___lomod@divisor+4,w
  7897  28EC  0425               	iorwf	___lomod@divisor+5,w
  7898  28ED  0426               	iorwf	___lomod@divisor+6,w
  7899  28EE  0427               	iorwf	___lomod@divisor+7,w
  7900  28EF  1903               	skipnz
  7901  28F0  293E               	goto	l1117
  7902  28F1  01F2               	clrf	___lomod@counter
  7903  28F2  0AF2               	incf	___lomod@counter,f
  7904  28F3                     l4900:	
  7905  28F3  1BA7               	btfsc	___lomod@divisor+7,7
  7906  28F4  2902               	goto	l4902
  7907  28F5  35A0               	lslf	___lomod@divisor,f
  7908  28F6  0DA1               	rlf	___lomod@divisor+1,f
  7909  28F7  0DA2               	rlf	___lomod@divisor+2,f
  7910  28F8  0DA3               	rlf	___lomod@divisor+3,f
  7911  28F9  0DA4               	rlf	___lomod@divisor+4,f
  7912  28FA  0DA5               	rlf	___lomod@divisor+5,f
  7913  28FB  0DA6               	rlf	___lomod@divisor+6,f
  7914  28FC  0DA7               	rlf	___lomod@divisor+7,f
  7915  28FD  3001               	movlw	1
  7916  28FE  00F1               	movwf	??___lomod
  7917  28FF  0871               	movf	??___lomod,w
  7918  2900  07F2               	addwf	___lomod@counter,f
  7919  2901  28F3               	goto	l4900
  7920  2902                     l4902:	
  7921  2902  0827               	movf	___lomod@divisor+7,w
  7922  2903  022F               	subwf	___lomod@dividend+7,w
  7923  2904  1D03               	skipz
  7924  2905  2920               	goto	u6375
  7925  2906  0826               	movf	___lomod@divisor+6,w
  7926  2907  022E               	subwf	___lomod@dividend+6,w
  7927  2908  1D03               	skipz
  7928  2909  2920               	goto	u6375
  7929  290A  0825               	movf	___lomod@divisor+5,w
  7930  290B  022D               	subwf	___lomod@dividend+5,w
  7931  290C  1D03               	skipz
  7932  290D  2920               	goto	u6375
  7933  290E  0824               	movf	___lomod@divisor+4,w
  7934  290F  022C               	subwf	___lomod@dividend+4,w
  7935  2910  1D03               	skipz
  7936  2911  2920               	goto	u6375
  7937  2912  0823               	movf	___lomod@divisor+3,w
  7938  2913  022B               	subwf	___lomod@dividend+3,w
  7939  2914  1D03               	skipz
  7940  2915  2920               	goto	u6375
  7941  2916  0822               	movf	___lomod@divisor+2,w
  7942  2917  022A               	subwf	___lomod@dividend+2,w
  7943  2918  1D03               	skipz
  7944  2919  2920               	goto	u6375
  7945  291A  0821               	movf	___lomod@divisor+1,w
  7946  291B  0229               	subwf	___lomod@dividend+1,w
  7947  291C  1D03               	skipz
  7948  291D  2920               	goto	u6375
  7949  291E  0820               	movf	___lomod@divisor,w
  7950  291F  0228               	subwf	___lomod@dividend,w
  7951  2920                     u6375:	
  7952  2920  1C03               	skipc
  7953  2921  2932               	goto	l4906
  7954  2922  0820               	movf	___lomod@divisor,w
  7955  2923  02A8               	subwf	___lomod@dividend,f
  7956  2924  0821               	movf	___lomod@divisor+1,w
  7957  2925  3BA9               	subwfb	___lomod@dividend+1,f
  7958  2926  0822               	movf	___lomod@divisor+2,w
  7959  2927  3BAA               	subwfb	___lomod@dividend+2,f
  7960  2928  0823               	movf	___lomod@divisor+3,w
  7961  2929  3BAB               	subwfb	___lomod@dividend+3,f
  7962  292A  0824               	movf	___lomod@divisor+4,w
  7963  292B  3BAC               	subwfb	___lomod@dividend+4,f
  7964  292C  0825               	movf	___lomod@divisor+5,w
  7965  292D  3BAD               	subwfb	___lomod@dividend+5,f
  7966  292E  0826               	movf	___lomod@divisor+6,w
  7967  292F  3BAE               	subwfb	___lomod@dividend+6,f
  7968  2930  0827               	movf	___lomod@divisor+7,w
  7969  2931  3BAF               	subwfb	___lomod@dividend+7,f
  7970  2932                     l4906:	
  7971  2932  36A7               	lsrf	___lomod@divisor+7,f
  7972  2933  0CA6               	rrf	___lomod@divisor+6,f
  7973  2934  0CA5               	rrf	___lomod@divisor+5,f
  7974  2935  0CA4               	rrf	___lomod@divisor+4,f
  7975  2936  0CA3               	rrf	___lomod@divisor+3,f
  7976  2937  0CA2               	rrf	___lomod@divisor+2,f
  7977  2938  0CA1               	rrf	___lomod@divisor+1,f
  7978  2939  0CA0               	rrf	___lomod@divisor,f
  7979  293A  3001               	movlw	1
  7980  293B  02F2               	subwf	___lomod@counter,f
  7981  293C  1D03               	btfss	3,2
  7982  293D  2902               	goto	l4902
  7983  293E                     l1117:	
  7984  293E  0828               	movf	___lomod@dividend,w
  7985  293F  00A0               	movwf	?___lomod
  7986  2940  0829               	movf	___lomod@dividend+1,w
  7987  2941  00A1               	movwf	?___lomod+1
  7988  2942  082A               	movf	___lomod@dividend+2,w
  7989  2943  00A2               	movwf	?___lomod+2
  7990  2944  082B               	movf	___lomod@dividend+3,w
  7991  2945  00A3               	movwf	?___lomod+3
  7992  2946  082C               	movf	___lomod@dividend+4,w
  7993  2947  00A4               	movwf	?___lomod+4
  7994  2948  082D               	movf	___lomod@dividend+5,w
  7995  2949  00A5               	movwf	?___lomod+5
  7996  294A  082E               	movf	___lomod@dividend+6,w
  7997  294B  00A6               	movwf	?___lomod+6
  7998  294C  082F               	movf	___lomod@dividend+7,w
  7999  294D  00A7               	movwf	?___lomod+7
  8000  294E  0008               	return
  8001  294F                     __end_of___lomod:	
  8002                           
  8003                           	psect	text13
  8004  2A43                     __ptext13:	
  8005 ;; *************** function ___lodiv *****************
  8006 ;; Defined at:
  8007 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lodiv.c"
  8008 ;; Parameters:    Size  Location     Type
  8009 ;;  divisor         8    0[BANK0 ] unsigned long long 
  8010 ;;  dividend        8    8[BANK0 ] unsigned long long 
  8011 ;; Auto vars:     Size  Location     Type
  8012 ;;  quotient        8    2[COMMON] unsigned long long 
  8013 ;;  counter         1   10[COMMON] unsigned char 
  8014 ;; Return value:  Size  Location     Type
  8015 ;;                  8    0[BANK0 ] unsigned long long 
  8016 ;; Registers used:
  8017 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8018 ;; Tracked objects:
  8019 ;;		On entry : 0/0
  8020 ;;		On exit  : 0/0
  8021 ;;		Unchanged: 0/0
  8022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8023 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8024 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8025 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8026 ;;      Totals:        10      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8027 ;;Total ram usage:       26 bytes
  8028 ;; Hardware stack levels used:    1
  8029 ;; Hardware stack levels required when called:    1
  8030 ;; This function calls:
  8031 ;;		Nothing
  8032 ;; This function is called by:
  8033 ;;		_utoa
  8034 ;; This function uses a non-reentrant model
  8035 ;;
  8036                           
  8037                           
  8038                           ;psect for function ___lodiv
  8039  2A43                     ___lodiv:	
  8040                           
  8041                           ;incstack = 0
  8042                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  8043  2A43  3072               	movlw	low ___lodiv@quotient
  8044  2A44  0086               	movwf	6
  8045  2A45  3000               	movlw	high ___lodiv@quotient
  8046  2A46  0087               	movwf	7
  8047  2A47  3008               	movlw	8
  8048  2A48  00F1               	movwf	??___lodiv
  8049  2A49  3000               	movlw	0
  8050  2A4A                     u6300:	
  8051  2A4A  001E               	movwi fsr1++
  8052  2A4B  0BF1               	decfsz	??___lodiv,f
  8053  2A4C  2A4A               	goto	u6300
  8054  2A4D  0020               	movlb	0	; select bank0
  8055  2A4E  0820               	movf	___lodiv@divisor,w
  8056  2A4F  0421               	iorwf	___lodiv@divisor+1,w
  8057  2A50  0422               	iorwf	___lodiv@divisor+2,w
  8058  2A51  0423               	iorwf	___lodiv@divisor+3,w
  8059  2A52  0424               	iorwf	___lodiv@divisor+4,w
  8060  2A53  0425               	iorwf	___lodiv@divisor+5,w
  8061  2A54  0426               	iorwf	___lodiv@divisor+6,w
  8062  2A55  0427               	iorwf	___lodiv@divisor+7,w
  8063  2A56  1903               	skipnz
  8064  2A57  2AAE               	goto	l1107
  8065  2A58  01FA               	clrf	___lodiv@counter
  8066  2A59  0AFA               	incf	___lodiv@counter,f
  8067  2A5A                     l4880:	
  8068  2A5A  1BA7               	btfsc	___lodiv@divisor+7,7
  8069  2A5B  2A69               	goto	l4882
  8070  2A5C  35A0               	lslf	___lodiv@divisor,f
  8071  2A5D  0DA1               	rlf	___lodiv@divisor+1,f
  8072  2A5E  0DA2               	rlf	___lodiv@divisor+2,f
  8073  2A5F  0DA3               	rlf	___lodiv@divisor+3,f
  8074  2A60  0DA4               	rlf	___lodiv@divisor+4,f
  8075  2A61  0DA5               	rlf	___lodiv@divisor+5,f
  8076  2A62  0DA6               	rlf	___lodiv@divisor+6,f
  8077  2A63  0DA7               	rlf	___lodiv@divisor+7,f
  8078  2A64  3001               	movlw	1
  8079  2A65  00F1               	movwf	??___lodiv
  8080  2A66  0871               	movf	??___lodiv,w
  8081  2A67  07FA               	addwf	___lodiv@counter,f
  8082  2A68  2A5A               	goto	l4880
  8083  2A69                     l4882:	
  8084  2A69  35F2               	lslf	___lodiv@quotient,f
  8085  2A6A  0DF3               	rlf	___lodiv@quotient+1,f
  8086  2A6B  0DF4               	rlf	___lodiv@quotient+2,f
  8087  2A6C  0DF5               	rlf	___lodiv@quotient+3,f
  8088  2A6D  0DF6               	rlf	___lodiv@quotient+4,f
  8089  2A6E  0DF7               	rlf	___lodiv@quotient+5,f
  8090  2A6F  0DF8               	rlf	___lodiv@quotient+6,f
  8091  2A70  0DF9               	rlf	___lodiv@quotient+7,f
  8092  2A71  0827               	movf	___lodiv@divisor+7,w
  8093  2A72  022F               	subwf	___lodiv@dividend+7,w
  8094  2A73  1D03               	skipz
  8095  2A74  2A8F               	goto	u6335
  8096  2A75  0826               	movf	___lodiv@divisor+6,w
  8097  2A76  022E               	subwf	___lodiv@dividend+6,w
  8098  2A77  1D03               	skipz
  8099  2A78  2A8F               	goto	u6335
  8100  2A79  0825               	movf	___lodiv@divisor+5,w
  8101  2A7A  022D               	subwf	___lodiv@dividend+5,w
  8102  2A7B  1D03               	skipz
  8103  2A7C  2A8F               	goto	u6335
  8104  2A7D  0824               	movf	___lodiv@divisor+4,w
  8105  2A7E  022C               	subwf	___lodiv@dividend+4,w
  8106  2A7F  1D03               	skipz
  8107  2A80  2A8F               	goto	u6335
  8108  2A81  0823               	movf	___lodiv@divisor+3,w
  8109  2A82  022B               	subwf	___lodiv@dividend+3,w
  8110  2A83  1D03               	skipz
  8111  2A84  2A8F               	goto	u6335
  8112  2A85  0822               	movf	___lodiv@divisor+2,w
  8113  2A86  022A               	subwf	___lodiv@dividend+2,w
  8114  2A87  1D03               	skipz
  8115  2A88  2A8F               	goto	u6335
  8116  2A89  0821               	movf	___lodiv@divisor+1,w
  8117  2A8A  0229               	subwf	___lodiv@dividend+1,w
  8118  2A8B  1D03               	skipz
  8119  2A8C  2A8F               	goto	u6335
  8120  2A8D  0820               	movf	___lodiv@divisor,w
  8121  2A8E  0228               	subwf	___lodiv@dividend,w
  8122  2A8F                     u6335:	
  8123  2A8F  1C03               	skipc
  8124  2A90  2AA2               	goto	l4890
  8125  2A91  0820               	movf	___lodiv@divisor,w
  8126  2A92  02A8               	subwf	___lodiv@dividend,f
  8127  2A93  0821               	movf	___lodiv@divisor+1,w
  8128  2A94  3BA9               	subwfb	___lodiv@dividend+1,f
  8129  2A95  0822               	movf	___lodiv@divisor+2,w
  8130  2A96  3BAA               	subwfb	___lodiv@dividend+2,f
  8131  2A97  0823               	movf	___lodiv@divisor+3,w
  8132  2A98  3BAB               	subwfb	___lodiv@dividend+3,f
  8133  2A99  0824               	movf	___lodiv@divisor+4,w
  8134  2A9A  3BAC               	subwfb	___lodiv@dividend+4,f
  8135  2A9B  0825               	movf	___lodiv@divisor+5,w
  8136  2A9C  3BAD               	subwfb	___lodiv@dividend+5,f
  8137  2A9D  0826               	movf	___lodiv@divisor+6,w
  8138  2A9E  3BAE               	subwfb	___lodiv@dividend+6,f
  8139  2A9F  0827               	movf	___lodiv@divisor+7,w
  8140  2AA0  3BAF               	subwfb	___lodiv@dividend+7,f
  8141  2AA1  1472               	bsf	___lodiv@quotient,0
  8142  2AA2                     l4890:	
  8143  2AA2  36A7               	lsrf	___lodiv@divisor+7,f
  8144  2AA3  0CA6               	rrf	___lodiv@divisor+6,f
  8145  2AA4  0CA5               	rrf	___lodiv@divisor+5,f
  8146  2AA5  0CA4               	rrf	___lodiv@divisor+4,f
  8147  2AA6  0CA3               	rrf	___lodiv@divisor+3,f
  8148  2AA7  0CA2               	rrf	___lodiv@divisor+2,f
  8149  2AA8  0CA1               	rrf	___lodiv@divisor+1,f
  8150  2AA9  0CA0               	rrf	___lodiv@divisor,f
  8151  2AAA  3001               	movlw	1
  8152  2AAB  02FA               	subwf	___lodiv@counter,f
  8153  2AAC  1D03               	btfss	3,2
  8154  2AAD  2A69               	goto	l4882
  8155  2AAE                     l1107:	
  8156  2AAE  0872               	movf	___lodiv@quotient,w
  8157  2AAF  00A0               	movwf	?___lodiv
  8158  2AB0  0873               	movf	___lodiv@quotient+1,w
  8159  2AB1  00A1               	movwf	?___lodiv+1
  8160  2AB2  0874               	movf	___lodiv@quotient+2,w
  8161  2AB3  00A2               	movwf	?___lodiv+2
  8162  2AB4  0875               	movf	___lodiv@quotient+3,w
  8163  2AB5  00A3               	movwf	?___lodiv+3
  8164  2AB6  0876               	movf	___lodiv@quotient+4,w
  8165  2AB7  00A4               	movwf	?___lodiv+4
  8166  2AB8  0877               	movf	___lodiv@quotient+5,w
  8167  2AB9  00A5               	movwf	?___lodiv+5
  8168  2ABA  0878               	movf	___lodiv@quotient+6,w
  8169  2ABB  00A6               	movwf	?___lodiv+6
  8170  2ABC  0879               	movf	___lodiv@quotient+7,w
  8171  2ABD  00A7               	movwf	?___lodiv+7
  8172  2ABE  0008               	return
  8173  2ABF                     __end_of___lodiv:	
  8174                           
  8175                           	psect	text14
  8176  1000                     __ptext14:	
  8177 ;; *************** function _strncmp *****************
  8178 ;; Defined at:
  8179 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  8180 ;; Parameters:    Size  Location     Type
  8181 ;;  _l              2    1[COMMON] PTR const unsigned char 
  8182 ;;		 -> vfpfcnvrt@ct(3), STR_24(18), STR_23(18), STR_22(19), 
  8183 ;;		 -> STR_21(20), STR_20(20), STR_19(21), STR_18(21), 
  8184 ;;		 -> STR_17(21), STR_16(22), STR_15(22), STR_14(21), 
  8185 ;;		 -> STR_13(21), STR_8(57), STR_7(44), STR_6(42), 
  8186 ;;		 -> STR_3(43), 
  8187 ;;  _r              2    3[COMMON] PTR const unsigned char 
  8188 ;;		 -> STR_168(3), STR_164(3), STR_159(3), STR_155(3), 
  8189 ;;		 -> STR_150(3), STR_146(3), STR_141(4), STR_137(4), 
  8190 ;;		 -> STR_132(3), STR_127(3), STR_122(3), STR_117(4), 
  8191 ;;		 -> STR_112(3), STR_107(3), STR_102(3), STR_97(4), 
  8192 ;;		 -> STR_92(3), STR_87(3), STR_82(3), STR_77(4), 
  8193 ;;		 -> STR_72(3), STR_67(3), STR_63(3), STR_58(3), 
  8194 ;;		 -> STR_54(3), STR_49(3), STR_45(3), STR_40(4), 
  8195 ;;		 -> STR_36(4), 
  8196 ;;  n               2    5[COMMON] unsigned int 
  8197 ;; Auto vars:     Size  Location     Type
  8198 ;;  r               2   10[COMMON] PTR const unsigned char 
  8199 ;;		 -> STR_168(3), STR_164(3), STR_159(3), STR_155(3), 
  8200 ;;		 -> STR_150(3), STR_146(3), STR_141(4), STR_137(4), 
  8201 ;;		 -> STR_132(3), STR_127(3), STR_122(3), STR_117(4), 
  8202 ;;		 -> STR_112(3), STR_107(3), STR_102(3), STR_97(4), 
  8203 ;;		 -> STR_92(3), STR_87(3), STR_82(3), STR_77(4), 
  8204 ;;		 -> STR_72(3), STR_67(3), STR_63(3), STR_58(3), 
  8205 ;;		 -> STR_54(3), STR_49(3), STR_45(3), STR_40(4), 
  8206 ;;		 -> STR_36(4), 
  8207 ;;  l               2    8[COMMON] PTR const unsigned char 
  8208 ;;		 -> vfpfcnvrt@ct(3), STR_24(18), STR_23(18), STR_22(19), 
  8209 ;;		 -> STR_21(20), STR_20(20), STR_19(21), STR_18(21), 
  8210 ;;		 -> STR_17(21), STR_16(22), STR_15(22), STR_14(21), 
  8211 ;;		 -> STR_13(21), STR_8(57), STR_7(44), STR_6(42), 
  8212 ;;		 -> STR_3(43), 
  8213 ;; Return value:  Size  Location     Type
  8214 ;;                  2    1[COMMON] int 
  8215 ;; Registers used:
  8216 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  8217 ;; Tracked objects:
  8218 ;;		On entry : 0/0
  8219 ;;		On exit  : 0/0
  8220 ;;		Unchanged: 0/0
  8221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8222 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8223 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8224 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8225 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8226 ;;Total ram usage:       11 bytes
  8227 ;; Hardware stack levels used:    1
  8228 ;; Hardware stack levels required when called:    1
  8229 ;; This function calls:
  8230 ;;		Nothing
  8231 ;; This function is called by:
  8232 ;;		_vfpfcnvrt
  8233 ;; This function uses a non-reentrant model
  8234 ;;
  8235                           
  8236                           
  8237                           ;psect for function _strncmp
  8238  1000                     _strncmp:	
  8239                           
  8240                           ;incstack = 0
  8241                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  8242  1000  0872               	movf	strncmp@_l+1,w
  8243  1001  00F9               	movwf	strncmp@l+1
  8244  1002  0871               	movf	strncmp@_l,w
  8245  1003  00F8               	movwf	strncmp@l
  8246  1004  0874               	movf	strncmp@_r+1,w
  8247  1005  00FB               	movwf	strncmp@r+1
  8248  1006  0873               	movf	strncmp@_r,w
  8249  1007  00FA               	movwf	strncmp@r
  8250  1008  3001               	movlw	1
  8251  1009  02F5               	subwf	strncmp@n,f
  8252  100A  3000               	movlw	0
  8253  100B  3BF6               	subwfb	strncmp@n+1,f
  8254  100C  0A75               	incf	strncmp@n,w
  8255  100D  1D03               	skipz
  8256  100E  283A               	goto	l5820
  8257  100F  0A76               	incf	strncmp@n+1,w
  8258  1010  1D03               	btfss	3,2
  8259  1011  283A               	goto	l5820
  8260  1012  01F1               	clrf	?_strncmp
  8261  1013  01F2               	clrf	?_strncmp+1
  8262  1014  0008               	return
  8263  1015                     l5822:	
  8264  1015  087A               	movf	strncmp@r,w
  8265  1016  0084               	movwf	4
  8266  1017  087B               	movf	strncmp@r+1,w
  8267  1018  0085               	movwf	5
  8268  1019  0012               	moviw fsr0++
  8269  101A  1903               	btfsc	3,2
  8270  101B  2841               	goto	l5828
  8271  101C  0875               	movf	strncmp@n,w
  8272  101D  0476               	iorwf	strncmp@n+1,w
  8273  101E  1903               	btfsc	3,2
  8274  101F  2841               	goto	l5828
  8275  1020  087A               	movf	strncmp@r,w
  8276  1021  0084               	movwf	4
  8277  1022  087B               	movf	strncmp@r+1,w
  8278  1023  0085               	movwf	5
  8279  1024  0800               	movf	0,w	;code access
  8280  1025  00F7               	movwf	??_strncmp
  8281  1026  0878               	movf	strncmp@l,w
  8282  1027  0084               	movwf	4
  8283  1028  0879               	movf	strncmp@l+1,w
  8284  1029  0085               	movwf	5
  8285  102A  0800               	movf	0,w	;code access
  8286  102B  0677               	xorwf	??_strncmp,w
  8287  102C  1D03               	btfss	3,2
  8288  102D  2841               	goto	l5828
  8289  102E  3001               	movlw	1
  8290  102F  07F8               	addwf	strncmp@l,f
  8291  1030  3000               	movlw	0
  8292  1031  3DF9               	addwfc	strncmp@l+1,f
  8293  1032  3001               	movlw	1
  8294  1033  07FA               	addwf	strncmp@r,f
  8295  1034  3000               	movlw	0
  8296  1035  3DFB               	addwfc	strncmp@r+1,f
  8297  1036  3001               	movlw	1
  8298  1037  02F5               	subwf	strncmp@n,f
  8299  1038  3000               	movlw	0
  8300  1039  3BF6               	subwfb	strncmp@n+1,f
  8301  103A                     l5820:	
  8302  103A  0878               	movf	strncmp@l,w
  8303  103B  0084               	movwf	4
  8304  103C  0879               	movf	strncmp@l+1,w
  8305  103D  0085               	movwf	5
  8306  103E  0012               	moviw fsr0++
  8307  103F  1D03               	btfss	3,2
  8308  1040  2815               	goto	l5822
  8309  1041                     l5828:	
  8310  1041  0878               	movf	strncmp@l,w
  8311  1042  0084               	movwf	4
  8312  1043  0879               	movf	strncmp@l+1,w
  8313  1044  0085               	movwf	5
  8314  1045  0800               	movf	0,w	;code access
  8315  1046  00F7               	movwf	??_strncmp
  8316  1047  087A               	movf	strncmp@r,w
  8317  1048  0084               	movwf	4
  8318  1049  087B               	movf	strncmp@r+1,w
  8319  104A  0085               	movwf	5
  8320  104B  0800               	movf	0,w	;code access
  8321  104C  0277               	subwf	??_strncmp,w
  8322  104D  00F1               	movwf	?_strncmp
  8323  104E  01F2               	clrf	?_strncmp+1
  8324  104F  1C03               	skipc
  8325  1050  03F2               	decf	?_strncmp+1,f
  8326  1051  0008               	return
  8327  1052                     __end_of_strncmp:	
  8328                           
  8329                           	psect	text15
  8330  2035                     __ptext15:	
  8331 ;; *************** function _stoa *****************
  8332 ;; Defined at:
  8333 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8334 ;; Parameters:    Size  Location     Type
  8335 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  8336 ;;		 -> vsnprintf@f(6), 
  8337 ;;  s               1    2[BANK0 ] PTR unsigned char 
  8338 ;;		 -> ?_snprintf(2), 
  8339 ;; Auto vars:     Size  Location     Type
  8340 ;;  nuls            7    3[BANK0 ] unsigned char [7]
  8341 ;;  l               2   18[BANK0 ] int 
  8342 ;;  p               2   16[BANK0 ] int 
  8343 ;;  cp              2   14[BANK0 ] PTR unsigned char 
  8344 ;;		 -> ?_snprintf(2), stoa@nuls(7), 
  8345 ;;  w               2   12[BANK0 ] int 
  8346 ;;  i               2   10[BANK0 ] int 
  8347 ;; Return value:  Size  Location     Type
  8348 ;;                  2    0[BANK0 ] int 
  8349 ;; Registers used:
  8350 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8351 ;; Tracked objects:
  8352 ;;		On entry : 0/0
  8353 ;;		On exit  : 0/0
  8354 ;;		Unchanged: 0/0
  8355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8356 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8357 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8358 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8359 ;;      Totals:         2      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8360 ;;Total ram usage:       22 bytes
  8361 ;; Hardware stack levels used:    1
  8362 ;; Hardware stack levels required when called:    3
  8363 ;; This function calls:
  8364 ;;		_fputc
  8365 ;;		_strlen
  8366 ;; This function is called by:
  8367 ;;		_vfpfcnvrt
  8368 ;; This function uses a non-reentrant model
  8369 ;;
  8370                           
  8371                           
  8372                           ;psect for function _stoa
  8373  2035                     _stoa:	
  8374                           
  8375                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  8376                           
  8377                           ;incstack = 0
  8378                           ; Regs used in _stoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8379  2035  30DD               	movlw	low stoa@F1174
  8380  2036  0086               	movwf	6
  8381  2037  3001               	movlw	high stoa@F1174
  8382  2038  0087               	movwf	7
  8383  2039  3023               	movlw	low stoa@nuls
  8384  203A  0084               	movwf	4
  8385  203B  3000               	movlw	high stoa@nuls
  8386  203C  0085               	movwf	5
  8387  203D  3007               	movlw	7
  8388  203E  00FA               	movwf	??_stoa
  8389  203F                     u10900:	
  8390  203F  0016               	moviw fsr1++
  8391  2040  001A               	movwi fsr0++
  8392  2041  0BFA               	decfsz	??_stoa,f
  8393  2042  283F               	goto	u10900
  8394                           
  8395                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  8396  2043  0020               	movlb	0	; select bank0
  8397  2044  0822               	movf	stoa@s,w
  8398  2045  00AE               	movwf	stoa@cp
  8399  2046  3001               	movlw	1
  8400  2047  00AF               	movwf	stoa@cp+1
  8401                           
  8402                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  8403  2048  082E               	movf	stoa@cp,w
  8404  2049  042F               	iorwf	stoa@cp+1,w
  8405  204A  1D03               	btfss	3,2
  8406  204B  2850               	goto	l7636
  8407                           
  8408                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  8409  204C  3023               	movlw	low stoa@nuls
  8410  204D  00AE               	movwf	stoa@cp
  8411  204E  3000               	movlw	high stoa@nuls
  8412  204F  00AF               	movwf	stoa@cp+1
  8413  2050                     l7636:	
  8414                           
  8415                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  8416  2050  082F               	movf	stoa@cp+1,w
  8417  2051  00F2               	movwf	strlen@s+1
  8418  2052  082E               	movf	stoa@cp,w
  8419  2053  00F1               	movwf	strlen@s
  8420  2054  31B3  237B  31A0   	fcall	_strlen
  8421  2057  0872               	movf	?_strlen+1,w
  8422  2058  0020               	movlb	0	; select bank0
  8423  2059  00B3               	movwf	stoa@l+1
  8424  205A  0871               	movf	?_strlen,w
  8425  205B  00B2               	movwf	stoa@l
  8426                           
  8427                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  8428  205C  0023               	movlb	3	; select bank3
  8429  205D  0841               	movf	(_prec+1)^(0+384),w
  8430  205E  0020               	movlb	0	; select bank0
  8431  205F  00B1               	movwf	stoa@p+1
  8432  2060  0023               	movlb	3	; select bank3
  8433  2061  0840               	movf	_prec^(0+384),w
  8434  2062  0020               	movlb	0	; select bank0
  8435  2063  00B0               	movwf	stoa@p
  8436                           
  8437                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  8438  2064  1BB1               	btfsc	stoa@p+1,7
  8439  2065  2877               	goto	l710
  8440  2066  0831               	movf	stoa@p+1,w
  8441  2067  3A80               	xorlw	128
  8442  2068  00FA               	movwf	??_stoa
  8443  2069  0833               	movf	stoa@l+1,w
  8444  206A  3A80               	xorlw	128
  8445  206B  027A               	subwf	??_stoa,w
  8446  206C  1D03               	skipz
  8447  206D  2870               	goto	u10935
  8448  206E  0832               	movf	stoa@l,w
  8449  206F  0230               	subwf	stoa@p,w
  8450  2070                     u10935:	
  8451  2070  1803               	btfsc	3,0
  8452  2071  2877               	goto	l710
  8453  2072  0020               	movlb	0	; select bank0
  8454  2073  0831               	movf	stoa@p+1,w
  8455  2074  00B3               	movwf	stoa@l+1
  8456  2075  0830               	movf	stoa@p,w
  8457  2076  00B2               	movwf	stoa@l
  8458  2077                     l710:	
  8459                           
  8460                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  8461  2077  0020               	movlb	0	; select bank0
  8462  2078  0833               	movf	stoa@l+1,w
  8463  2079  00B1               	movwf	stoa@p+1
  8464  207A  0832               	movf	stoa@l,w
  8465  207B  00B0               	movwf	stoa@p
  8466                           
  8467                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  8468  207C  0023               	movlb	3	; select bank3
  8469  207D  083F               	movf	(_width+1)^(0+384),w
  8470  207E  0020               	movlb	0	; select bank0
  8471  207F  00AD               	movwf	stoa@w+1
  8472  2080  0023               	movlb	3	; select bank3
  8473  2081  083E               	movf	_width^(0+384),w
  8474  2082  0020               	movlb	0	; select bank0
  8475  2083  00AC               	movwf	stoa@w
  8476                           
  8477                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  8478  2084  0023               	movlb	3	; select bank3
  8479  2085  1C42               	btfss	_flags^(0+384),0
  8480  2086  2899               	goto	l7654
  8481  2087  28A6               	goto	l7656
  8482  2088                     l7650:	
  8483                           
  8484                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  8485  2088  3020               	movlw	32
  8486  2089  00F1               	movwf	fputc@c
  8487  208A  3000               	movlw	0
  8488  208B  00F2               	movwf	fputc@c+1
  8489  208C  0020               	movlb	0	; select bank0
  8490  208D  0821               	movf	stoa@fp+1,w
  8491  208E  00F4               	movwf	fputc@fp+1
  8492  208F  0820               	movf	stoa@fp,w
  8493  2090  00F3               	movwf	fputc@fp
  8494  2091  31A8  202C  31A0   	fcall	_fputc
  8495                           
  8496                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  8497  2094  3001               	movlw	1
  8498  2095  0020               	movlb	0	; select bank0
  8499  2096  07B2               	addwf	stoa@l,f
  8500  2097  3000               	movlw	0
  8501  2098  3DB3               	addwfc	stoa@l+1,f
  8502  2099                     l7654:	
  8503                           
  8504                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  8505  2099  0020               	movlb	0	; select bank0
  8506  209A  0833               	movf	stoa@l+1,w
  8507  209B  3A80               	xorlw	128
  8508  209C  00FA               	movwf	??_stoa
  8509  209D  082D               	movf	stoa@w+1,w
  8510  209E  3A80               	xorlw	128
  8511  209F  027A               	subwf	??_stoa,w
  8512  20A0  1D03               	skipz
  8513  20A1  28A4               	goto	u10955
  8514  20A2  082C               	movf	stoa@w,w
  8515  20A3  0232               	subwf	stoa@l,w
  8516  20A4                     u10955:	
  8517  20A4  1C03               	skipc
  8518  20A5  2888               	goto	l7650
  8519  20A6                     l7656:	
  8520                           
  8521                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  8522  20A6  0020               	movlb	0	; select bank0
  8523  20A7  01AA               	clrf	stoa@i
  8524  20A8  01AB               	clrf	stoa@i+1
  8525  20A9                     l7664:	
  8526                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8527                           
  8528                           
  8529                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8530  20A9  082B               	movf	stoa@i+1,w
  8531  20AA  3A80               	xorlw	128
  8532  20AB  00FA               	movwf	??_stoa
  8533  20AC  0831               	movf	stoa@p+1,w
  8534  20AD  3A80               	xorlw	128
  8535  20AE  027A               	subwf	??_stoa,w
  8536  20AF  1D03               	skipz
  8537  20B0  28B3               	goto	u10965
  8538  20B1  0830               	movf	stoa@p,w
  8539  20B2  022A               	subwf	stoa@i,w
  8540  20B3                     u10965:	
  8541  20B3  1803               	btfsc	3,0
  8542  20B4  28D2               	goto	l719
  8543                           
  8544                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  8545  20B5  0020               	movlb	0	; select bank0
  8546  20B6  082E               	movf	stoa@cp,w
  8547  20B7  0086               	movwf	6
  8548  20B8  082F               	movf	stoa@cp+1,w
  8549  20B9  0087               	movwf	7
  8550  20BA  0801               	movf	1,w
  8551  20BB  00FA               	movwf	??_stoa
  8552  20BC  01FB               	clrf	??_stoa+1
  8553  20BD  087A               	movf	??_stoa,w
  8554  20BE  00F1               	movwf	fputc@c
  8555  20BF  087B               	movf	??_stoa+1,w
  8556  20C0  00F2               	movwf	fputc@c+1
  8557  20C1  0821               	movf	stoa@fp+1,w
  8558  20C2  00F4               	movwf	fputc@fp+1
  8559  20C3  0820               	movf	stoa@fp,w
  8560  20C4  00F3               	movwf	fputc@fp
  8561  20C5  31A8  202C  31A0   	fcall	_fputc
  8562                           
  8563                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  8564  20C8  3001               	movlw	1
  8565  20C9  0020               	movlb	0	; select bank0
  8566  20CA  07AE               	addwf	stoa@cp,f
  8567  20CB  3000               	movlw	0
  8568  20CC  3DAF               	addwfc	stoa@cp+1,f
  8569                           
  8570                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  8571  20CD  3001               	movlw	1
  8572  20CE  07AA               	addwf	stoa@i,f
  8573  20CF  3000               	movlw	0
  8574  20D0  3DAB               	addwfc	stoa@i+1,f
  8575  20D1  28A9               	goto	l7664
  8576  20D2                     l719:	
  8577                           
  8578                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  8579  20D2  0023               	movlb	3	; select bank3
  8580  20D3  1842               	btfsc	_flags^(0+384),0
  8581  20D4  28E7               	goto	l7672
  8582  20D5  28F4               	goto	l7674
  8583  20D6                     l7668:	
  8584                           
  8585                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  8586  20D6  3020               	movlw	32
  8587  20D7  00F1               	movwf	fputc@c
  8588  20D8  3000               	movlw	0
  8589  20D9  00F2               	movwf	fputc@c+1
  8590  20DA  0020               	movlb	0	; select bank0
  8591  20DB  0821               	movf	stoa@fp+1,w
  8592  20DC  00F4               	movwf	fputc@fp+1
  8593  20DD  0820               	movf	stoa@fp,w
  8594  20DE  00F3               	movwf	fputc@fp
  8595  20DF  31A8  202C  31A0   	fcall	_fputc
  8596                           
  8597                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  8598  20E2  3001               	movlw	1
  8599  20E3  0020               	movlb	0	; select bank0
  8600  20E4  07B2               	addwf	stoa@l,f
  8601  20E5  3000               	movlw	0
  8602  20E6  3DB3               	addwfc	stoa@l+1,f
  8603  20E7                     l7672:	
  8604                           
  8605                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  8606  20E7  0020               	movlb	0	; select bank0
  8607  20E8  0833               	movf	stoa@l+1,w
  8608  20E9  3A80               	xorlw	128
  8609  20EA  00FA               	movwf	??_stoa
  8610  20EB  082D               	movf	stoa@w+1,w
  8611  20EC  3A80               	xorlw	128
  8612  20ED  027A               	subwf	??_stoa,w
  8613  20EE  1D03               	skipz
  8614  20EF  28F2               	goto	u10985
  8615  20F0  082C               	movf	stoa@w,w
  8616  20F1  0232               	subwf	stoa@l,w
  8617  20F2                     u10985:	
  8618  20F2  1C03               	skipc
  8619  20F3  28D6               	goto	l7668
  8620  20F4                     l7674:	
  8621                           
  8622                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  8623  20F4  0020               	movlb	0	; select bank0
  8624  20F5  0833               	movf	stoa@l+1,w
  8625  20F6  00A1               	movwf	?_stoa+1
  8626  20F7  0832               	movf	stoa@l,w
  8627  20F8  00A0               	movwf	?_stoa
  8628  20F9  0008               	return
  8629  20FA                     __end_of_stoa:	
  8630                           
  8631                           	psect	text16
  8632  261C                     __ptext16:	
  8633 ;; *************** function _otoa *****************
  8634 ;; Defined at:
  8635 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8636 ;; Parameters:    Size  Location     Type
  8637 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  8638 ;;		 -> vsnprintf@f(6), 
  8639 ;;  d               8   18[BANK0 ] unsigned long long 
  8640 ;; Auto vars:     Size  Location     Type
  8641 ;;  n               8   40[BANK0 ] unsigned long long 
  8642 ;;  i               2   48[BANK0 ] int 
  8643 ;;  w               2   38[BANK0 ] int 
  8644 ;;  t               2   36[BANK0 ] int 
  8645 ;;  p               2   34[BANK0 ] int 
  8646 ;; Return value:  Size  Location     Type
  8647 ;;                  2   16[BANK0 ] int 
  8648 ;; Registers used:
  8649 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8650 ;; Tracked objects:
  8651 ;;		On entry : 0/0
  8652 ;;		On exit  : 0/0
  8653 ;;		Unchanged: 0/0
  8654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8655 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8656 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8657 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8658 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8659 ;;Total ram usage:       34 bytes
  8660 ;; Hardware stack levels used:    1
  8661 ;; Hardware stack levels required when called:    5
  8662 ;; This function calls:
  8663 ;;		_pad
  8664 ;; This function is called by:
  8665 ;;		_vfpfcnvrt
  8666 ;; This function uses a non-reentrant model
  8667 ;;
  8668                           
  8669                           
  8670                           ;psect for function _otoa
  8671  261C                     _otoa:	
  8672                           
  8673                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  8674                           
  8675                           ;incstack = 0
  8676                           ; Regs used in _otoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8677  261C  0023               	movlb	3	; select bank3
  8678  261D  1BC1               	btfsc	(_prec+1)^(0+384),7
  8679  261E  2E23               	goto	l688
  8680                           
  8681                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
  8682  261F  30FD               	movlw	253
  8683  2620  05C2               	andwf	_flags^(0+384),f
  8684  2621  30FF               	movlw	255
  8685  2622  05C3               	andwf	(_flags+1)^(0+384),f
  8686  2623                     l688:	
  8687                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 515:     }
  8688                           
  8689                           
  8690                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
  8691  2623  0841               	movf	(_prec+1)^(0+384),w
  8692  2624  3A80               	xorlw	128
  8693  2625  0020               	movlb	0	; select bank0
  8694  2626  00BA               	movwf	??_otoa
  8695  2627  3080               	movlw	128
  8696  2628  023A               	subwf	??_otoa,w
  8697  2629  1D03               	skipz
  8698  262A  2E2E               	goto	u10815
  8699  262B  3001               	movlw	1
  8700  262C  0023               	movlb	3	; select bank3
  8701  262D  0240               	subwf	_prec^(0+384),w
  8702  262E                     u10815:	
  8703  262E  1803               	skipnc
  8704  262F  2E36               	goto	l7590
  8705  2630  3001               	movlw	1
  8706  2631  0020               	movlb	0	; select bank0
  8707  2632  00C2               	movwf	otoa@p
  8708  2633  3000               	movlw	0
  8709  2634  00C3               	movwf	otoa@p+1
  8710  2635  2E3E               	goto	l692
  8711  2636                     l7590:	
  8712  2636  0023               	movlb	3	; select bank3
  8713  2637  0841               	movf	(_prec+1)^(0+384),w
  8714  2638  0020               	movlb	0	; select bank0
  8715  2639  00C3               	movwf	otoa@p+1
  8716  263A  0023               	movlb	3	; select bank3
  8717  263B  0840               	movf	_prec^(0+384),w
  8718  263C  0020               	movlb	0	; select bank0
  8719  263D  00C2               	movwf	otoa@p
  8720  263E                     l692:	
  8721                           
  8722                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
  8723  263E  0023               	movlb	3	; select bank3
  8724  263F  083F               	movf	(_width+1)^(0+384),w
  8725  2640  0020               	movlb	0	; select bank0
  8726  2641  00C7               	movwf	otoa@w+1
  8727  2642  0023               	movlb	3	; select bank3
  8728  2643  083E               	movf	_width^(0+384),w
  8729  2644  0020               	movlb	0	; select bank0
  8730  2645  00C6               	movwf	otoa@w
  8731                           
  8732                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
  8733  2646  0832               	movf	otoa@d,w
  8734  2647  00C8               	movwf	otoa@n
  8735  2648  0833               	movf	otoa@d+1,w
  8736  2649  00C9               	movwf	otoa@n+1
  8737  264A  0834               	movf	otoa@d+2,w
  8738  264B  00CA               	movwf	otoa@n+2
  8739  264C  0835               	movf	otoa@d+3,w
  8740  264D  00CB               	movwf	otoa@n+3
  8741  264E  0836               	movf	otoa@d+4,w
  8742  264F  00CC               	movwf	otoa@n+4
  8743  2650  0837               	movf	otoa@d+5,w
  8744  2651  00CD               	movwf	otoa@n+5
  8745  2652  0838               	movf	otoa@d+6,w
  8746  2653  00CE               	movwf	otoa@n+6
  8747  2654  0839               	movf	otoa@d+7,w
  8748  2655  00CF               	movwf	otoa@n+7
  8749                           
  8750                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
  8751  2656  304F               	movlw	79
  8752  2657  00D0               	movwf	otoa@i
  8753  2658  3000               	movlw	0
  8754  2659  00D1               	movwf	otoa@i+1
  8755                           
  8756                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
  8757  265A  0024               	movlb	4	; select bank4
  8758  265B  01EF               	clrf	(_dbuf^(0+512)+79)
  8759                           
  8760                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
  8761  265C  0020               	movlb	0	; select bank0
  8762  265D  01C4               	clrf	otoa@t
  8763  265E  01C5               	clrf	otoa@t+1
  8764                           
  8765                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8766  265F  2ED3               	goto	l693
  8767  2660                     l7608:	
  8768  2660  0020               	movlb	0	; select bank0
  8769  2661  0848               	movf	otoa@n,w
  8770  2662  0449               	iorwf	otoa@n+1,w
  8771  2663  044A               	iorwf	otoa@n+2,w
  8772  2664  044B               	iorwf	otoa@n+3,w
  8773  2665  044C               	iorwf	otoa@n+4,w
  8774  2666  044D               	iorwf	otoa@n+5,w
  8775  2667  044E               	iorwf	otoa@n+6,w
  8776  2668  044F               	iorwf	otoa@n+7,w
  8777  2669  1D03               	skipz
  8778  266A  2E85               	goto	l7598
  8779  266B  0843               	movf	otoa@p+1,w
  8780  266C  3A80               	xorlw	128
  8781  266D  00BA               	movwf	??_otoa
  8782  266E  3080               	movlw	128
  8783  266F  023A               	subwf	??_otoa,w
  8784  2670  1D03               	skipz
  8785  2671  2E74               	goto	u10855
  8786  2672  3001               	movlw	1
  8787  2673  0242               	subwf	otoa@p,w
  8788  2674                     u10855:	
  8789  2674  1803               	skipnc
  8790  2675  2E85               	goto	l7598
  8791  2676  0020               	movlb	0	; select bank0
  8792  2677  0847               	movf	otoa@w+1,w
  8793  2678  3A80               	xorlw	128
  8794  2679  00BA               	movwf	??_otoa
  8795  267A  3080               	movlw	128
  8796  267B  023A               	subwf	??_otoa,w
  8797  267C  1D03               	skipz
  8798  267D  2E80               	goto	u10865
  8799  267E  3001               	movlw	1
  8800  267F  0246               	subwf	otoa@w,w
  8801  2680                     u10865:	
  8802  2680  1C03               	skipc
  8803  2681  2EDE               	goto	l699
  8804  2682  0023               	movlb	3	; select bank3
  8805  2683  1CC2               	btfss	_flags^(0+384),1
  8806  2684  2EDE               	goto	l699
  8807  2685                     l7598:	
  8808                           
  8809                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
  8810  2685  30FF               	movlw	255
  8811  2686  0020               	movlb	0	; select bank0
  8812  2687  07D0               	addwf	otoa@i,f
  8813  2688  30FF               	movlw	255
  8814  2689  3DD1               	addwfc	otoa@i+1,f
  8815                           
  8816                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
  8817  268A  3007               	movlw	7
  8818  268B  0548               	andwf	otoa@n,w
  8819  268C  00C4               	movwf	otoa@t
  8820  268D  3000               	movlw	0
  8821  268E  0549               	andwf	otoa@n+1,w
  8822  268F  00C5               	movwf	otoa@t+1
  8823                           
  8824                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
  8825  2690  0844               	movf	otoa@t,w
  8826  2691  3E30               	addlw	48
  8827  2692  00BA               	movwf	??_otoa
  8828  2693  0850               	movf	otoa@i,w
  8829  2694  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8830  2695  0086               	movwf	6
  8831  2696  3002               	movlw	2	; select bank4/5
  8832  2697  0087               	movwf	7
  8833  2698  083A               	movf	??_otoa,w
  8834  2699  0081               	movwf	1
  8835                           
  8836                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
  8837  269A  30FF               	movlw	255
  8838  269B  07C2               	addwf	otoa@p,f
  8839  269C  30FF               	movlw	255
  8840  269D  3DC3               	addwfc	otoa@p+1,f
  8841                           
  8842                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
  8843  269E  30FF               	movlw	255
  8844  269F  07C6               	addwf	otoa@w,f
  8845  26A0  30FF               	movlw	255
  8846  26A1  3DC7               	addwfc	otoa@w+1,f
  8847                           
  8848                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
  8849  26A2  3048               	movlw	low otoa@n
  8850  26A3  0086               	movwf	6
  8851  26A4  3000               	movlw	high otoa@n
  8852  26A5  0087               	movwf	7
  8853  26A6  3F40               	moviw [0]fsr1
  8854  26A7  00BA               	movwf	??_otoa
  8855  26A8  3F41               	moviw [1]fsr1
  8856  26A9  00BB               	movwf	??_otoa+1
  8857  26AA  3F42               	moviw [2]fsr1
  8858  26AB  00BC               	movwf	??_otoa+2
  8859  26AC  3F43               	moviw [3]fsr1
  8860  26AD  00BD               	movwf	??_otoa+3
  8861  26AE  3F44               	moviw [4]fsr1
  8862  26AF  00BE               	movwf	??_otoa+4
  8863  26B0  3F45               	moviw [5]fsr1
  8864  26B1  00BF               	movwf	??_otoa+5
  8865  26B2  3F46               	moviw [6]fsr1
  8866  26B3  00C0               	movwf	??_otoa+6
  8867  26B4  3F47               	moviw [7]fsr1
  8868  26B5  00C1               	movwf	??_otoa+7
  8869  26B6  3003               	movlw	3
  8870  26B7                     u10825:	
  8871  26B7  0020               	movlb	0	; select bank0
  8872  26B8  36C1               	lsrf	??_otoa+7,f
  8873  26B9  0CC0               	rrf	??_otoa+6,f
  8874  26BA  0CBF               	rrf	??_otoa+5,f
  8875  26BB  0CBE               	rrf	??_otoa+4,f
  8876  26BC  0CBD               	rrf	??_otoa+3,f
  8877  26BD  0CBC               	rrf	??_otoa+2,f
  8878  26BE  0CBB               	rrf	??_otoa+1,f
  8879  26BF  0CBA               	rrf	??_otoa,f
  8880  26C0  0B89               	decfsz	9,f
  8881  26C1  2EB7               	goto	u10825
  8882  26C2  0020               	movlb	0	; select bank0
  8883  26C3  0841               	movf	??_otoa+7,w
  8884  26C4  00CF               	movwf	otoa@n+7
  8885  26C5  0840               	movf	??_otoa+6,w
  8886  26C6  00CE               	movwf	otoa@n+6
  8887  26C7  083F               	movf	??_otoa+5,w
  8888  26C8  00CD               	movwf	otoa@n+5
  8889  26C9  083E               	movf	??_otoa+4,w
  8890  26CA  00CC               	movwf	otoa@n+4
  8891  26CB  083D               	movf	??_otoa+3,w
  8892  26CC  00CB               	movwf	otoa@n+3
  8893  26CD  083C               	movf	??_otoa+2,w
  8894  26CE  00CA               	movwf	otoa@n+2
  8895  26CF  083B               	movf	??_otoa+1,w
  8896  26D0  00C9               	movwf	otoa@n+1
  8897  26D1  083A               	movf	??_otoa,w
  8898  26D2  00C8               	movwf	otoa@n
  8899  26D3                     l693:	
  8900                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 531:     }
  8901                           
  8902                           
  8903                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8904  26D3  0851               	movf	otoa@i+1,w
  8905  26D4  3A80               	xorlw	128
  8906  26D5  00BA               	movwf	??_otoa
  8907  26D6  3080               	movlw	128
  8908  26D7  023A               	subwf	??_otoa,w
  8909  26D8  1D03               	skipz
  8910  26D9  2EDC               	goto	u10835
  8911  26DA  3001               	movlw	1
  8912  26DB  0250               	subwf	otoa@i,w
  8913  26DC                     u10835:	
  8914  26DC  1803               	btfsc	3,0
  8915  26DD  2E60               	goto	l7608
  8916  26DE                     l699:	
  8917                           
  8918                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
  8919  26DE  0023               	movlb	3	; select bank3
  8920  26DF  1E42               	btfss	_flags^(0+384),4
  8921  26E0  2EF7               	goto	l7624
  8922  26E1  0020               	movlb	0	; select bank0
  8923  26E2  0844               	movf	otoa@t,w
  8924  26E3  0445               	iorwf	otoa@t+1,w
  8925  26E4  1903               	btfsc	3,2
  8926  26E5  2EF7               	goto	l7624
  8927                           
  8928                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
  8929  26E6  30FF               	movlw	255
  8930  26E7  07D0               	addwf	otoa@i,f
  8931  26E8  30FF               	movlw	255
  8932  26E9  3DD1               	addwfc	otoa@i+1,f
  8933                           
  8934                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
  8935  26EA  3030               	movlw	48
  8936  26EB  00BA               	movwf	??_otoa
  8937  26EC  0850               	movf	otoa@i,w
  8938  26ED  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8939  26EE  0086               	movwf	6
  8940  26EF  3002               	movlw	2	; select bank4/5
  8941  26F0  0087               	movwf	7
  8942  26F1  083A               	movf	??_otoa,w
  8943  26F2  0081               	movwf	1
  8944                           
  8945                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
  8946  26F3  30FF               	movlw	255
  8947  26F4  07C6               	addwf	otoa@w,f
  8948  26F5  30FF               	movlw	255
  8949  26F6  3DC7               	addwfc	otoa@w+1,f
  8950  26F7                     l7624:	
  8951                           
  8952                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
  8953  26F7  0020               	movlb	0	; select bank0
  8954  26F8  0831               	movf	otoa@fp+1,w
  8955  26F9  00A7               	movwf	pad@fp+1
  8956  26FA  0830               	movf	otoa@fp,w
  8957  26FB  00A6               	movwf	pad@fp
  8958  26FC  0850               	movf	otoa@i,w
  8959  26FD  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8960  26FE  00BA               	movwf	??_otoa
  8961  26FF  083A               	movf	??_otoa,w
  8962  2700  00A8               	movwf	pad@buf
  8963  2701  0847               	movf	otoa@w+1,w
  8964  2702  00AA               	movwf	pad@p+1
  8965  2703  0846               	movf	otoa@w,w
  8966  2704  00A9               	movwf	pad@p
  8967  2705  31B7  275E         	fcall	_pad
  8968  2707  0020               	movlb	0	; select bank0
  8969  2708  0827               	movf	?_pad+1,w
  8970  2709  00B1               	movwf	?_otoa+1
  8971  270A  0826               	movf	?_pad,w
  8972  270B  00B0               	movwf	?_otoa
  8973  270C  0008               	return
  8974  270D                     __end_of_otoa:	
  8975                           
  8976                           	psect	text17
  8977  0058                     __ptext17:	
  8978 ;; *************** function _efgtoa *****************
  8979 ;; Defined at:
  8980 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8981 ;; Parameters:    Size  Location     Type
  8982 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
  8983 ;;		 -> vsnprintf@f(6), 
  8984 ;;  f               4    2[BANK1 ] PTR struct _IO_FILE
  8985 ;;  c               1    6[BANK1 ] unsigned char 
  8986 ;; Auto vars:     Size  Location     Type
  8987 ;;  u               4   63[BANK1 ] unsigned char 
  8988 ;;  g               4   55[BANK1 ] unsigned char 
  8989 ;;  l               4   49[BANK1 ] unsigned char 
  8990 ;;  h               4   45[BANK1 ] unsigned char 
  8991 ;;  ou              4   11[BANK1 ] unsigned char 
  8992 ;;  n               2   61[BANK1 ] int 
  8993 ;;  e               2   59[BANK1 ] int 
  8994 ;;  i               2   53[BANK1 ] int 
  8995 ;;  w               2   42[BANK1 ] int 
  8996 ;;  p               2   39[BANK1 ] int 
  8997 ;;  sign            2   37[BANK1 ] int 
  8998 ;;  d               2   35[BANK1 ] int 
  8999 ;;  ne              2   33[BANK1 ] int 
  9000 ;;  m               2   31[BANK1 ] int 
  9001 ;;  pp              2   29[BANK1 ] int 
  9002 ;;  t               2   27[BANK1 ] int 
  9003 ;;  mode            1   44[BANK1 ] unsigned char 
  9004 ;;  nmode           1   41[BANK1 ] unsigned char 
  9005 ;; Return value:  Size  Location     Type
  9006 ;;                  2    0[BANK1 ] int 
  9007 ;; Registers used:
  9008 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9009 ;; Tracked objects:
  9010 ;;		On entry : 0/0
  9011 ;;		On exit  : 0/0
  9012 ;;		Unchanged: 0/0
  9013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9014 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9015 ;;      Locals:         0       0      56       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9016 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9017 ;;      Totals:         0       0      67       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9018 ;;Total ram usage:       67 bytes
  9019 ;; Hardware stack levels used:    1
  9020 ;; Hardware stack levels required when called:    5
  9021 ;; This function calls:
  9022 ;;		___awdiv
  9023 ;;		___awmod
  9024 ;;		___fladd
  9025 ;;		___fldiv
  9026 ;;		___fleq
  9027 ;;		___flge
  9028 ;;		___flmul
  9029 ;;		___flneg
  9030 ;;		___flsub
  9031 ;;		___fltol
  9032 ;;		___fpclassifyf
  9033 ;;		_floorf
  9034 ;;		_isupper
  9035 ;;		_pad
  9036 ;;		_strcpy
  9037 ;;		_tolower
  9038 ;; This function is called by:
  9039 ;;		_vfpfcnvrt
  9040 ;; This function uses a non-reentrant model
  9041 ;;
  9042                           
  9043                           
  9044                           ;psect for function _efgtoa
  9045  0058                     _efgtoa:	
  9046                           
  9047                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.05\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  9048                           
  9049                           ;incstack = 0
  9050                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9051  0058  0021               	movlb	1	; select bank1
  9052  0059  01C5               	clrf	efgtoa@sign^(0+128)
  9053  005A  01C6               	clrf	(efgtoa@sign+1)^(0+128)
  9054                           
  9055                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  9056  005B  0825               	movf	(efgtoa@f+3)^(0+128),w
  9057  005C  00DA               	movwf	(efgtoa@g+3)^(0+128)
  9058  005D  0824               	movf	(efgtoa@f+2)^(0+128),w
  9059  005E  00D9               	movwf	(efgtoa@g+2)^(0+128)
  9060  005F  0823               	movf	(efgtoa@f+1)^(0+128),w
  9061  0060  00D8               	movwf	(efgtoa@g+1)^(0+128)
  9062  0061  0822               	movf	efgtoa@f^(0+128),w
  9063  0062  00D7               	movwf	efgtoa@g^(0+128)
  9064                           
  9065                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  9066  0063  085A               	movf	(efgtoa@g+3)^(0+128),w
  9067  0064  0020               	movlb	0	; select bank0
  9068  0065  00DD               	movwf	___flge@ff1+3
  9069  0066  0021               	movlb	1	; select bank1
  9070  0067  0859               	movf	(efgtoa@g+2)^(0+128),w
  9071  0068  0020               	movlb	0	; select bank0
  9072  0069  00DC               	movwf	___flge@ff1+2
  9073  006A  0021               	movlb	1	; select bank1
  9074  006B  0858               	movf	(efgtoa@g+1)^(0+128),w
  9075  006C  0020               	movlb	0	; select bank0
  9076  006D  00DB               	movwf	___flge@ff1+1
  9077  006E  0021               	movlb	1	; select bank1
  9078  006F  0857               	movf	efgtoa@g^(0+128),w
  9079  0070  0020               	movlb	0	; select bank0
  9080  0071  00DA               	movwf	___flge@ff1
  9081  0072  3000               	movlw	0
  9082  0073  00E1               	movwf	___flge@ff2+3
  9083  0074  3000               	movlw	0
  9084  0075  00E0               	movwf	___flge@ff2+2
  9085  0076  3000               	movlw	0
  9086  0077  00DF               	movwf	___flge@ff2+1
  9087  0078  3000               	movlw	0
  9088  0079  00DE               	movwf	___flge@ff2
  9089  007A  31A9  21C7  3180   	fcall	___flge
  9090  007D  1803               	btfsc	3,0
  9091  007E  2898               	goto	l7302
  9092                           
  9093                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  9094  007F  3001               	movlw	1
  9095  0080  0021               	movlb	1	; select bank1
  9096  0081  00C5               	movwf	efgtoa@sign^(0+128)
  9097  0082  3000               	movlw	0
  9098  0083  00C6               	movwf	(efgtoa@sign^(0+128)+1)
  9099                           
  9100                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  9101  0084  085A               	movf	(efgtoa@g+3)^(0+128),w
  9102  0085  00F4               	movwf	___flneg@f1+3
  9103  0086  0859               	movf	(efgtoa@g+2)^(0+128),w
  9104  0087  00F3               	movwf	___flneg@f1+2
  9105  0088  0858               	movf	(efgtoa@g+1)^(0+128),w
  9106  0089  00F2               	movwf	___flneg@f1+1
  9107  008A  0857               	movf	efgtoa@g^(0+128),w
  9108  008B  00F1               	movwf	___flneg@f1
  9109  008C  31B3  2306  3180   	fcall	___flneg
  9110  008F  0874               	movf	?___flneg+3,w
  9111  0090  0021               	movlb	1	; select bank1
  9112  0091  00DA               	movwf	(efgtoa@g+3)^(0+128)
  9113  0092  0873               	movf	?___flneg+2,w
  9114  0093  00D9               	movwf	(efgtoa@g+2)^(0+128)
  9115  0094  0872               	movf	?___flneg+1,w
  9116  0095  00D8               	movwf	(efgtoa@g+1)^(0+128)
  9117  0096  0871               	movf	?___flneg,w
  9118  0097  00D7               	movwf	efgtoa@g^(0+128)
  9119  0098                     l7302:	
  9120                           
  9121                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  9122  0098  0021               	movlb	1	; select bank1
  9123  0099  01DD               	clrf	efgtoa@n^(0+128)
  9124  009A  01DE               	clrf	(efgtoa@n+1)^(0+128)
  9125                           
  9126                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  9127  009B  0023               	movlb	3	; select bank3
  9128  009C  083F               	movf	(_width+1)^(0+384),w
  9129  009D  0021               	movlb	1	; select bank1
  9130  009E  00CB               	movwf	(efgtoa@w+1)^(0+128)
  9131  009F  0023               	movlb	3	; select bank3
  9132  00A0  083E               	movf	_width^(0+384),w
  9133  00A1  0021               	movlb	1	; select bank1
  9134  00A2  00CA               	movwf	efgtoa@w^(0+128)
  9135                           
  9136                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  9137  00A3  0845               	movf	efgtoa@sign^(0+128),w
  9138  00A4  0446               	iorwf	(efgtoa@sign+1)^(0+128),w
  9139  00A5  1D03               	btfss	3,2
  9140  00A6  28AA               	goto	l7310
  9141  00A7  0023               	movlb	3	; select bank3
  9142  00A8  1D42               	btfss	_flags^(0+384),2
  9143  00A9  28C3               	goto	l7322
  9144  00AA                     l7310:	
  9145                           
  9146                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  9147  00AA  0021               	movlb	1	; select bank1
  9148  00AB  0845               	movf	efgtoa@sign^(0+128),w
  9149  00AC  0446               	iorwf	(efgtoa@sign+1)^(0+128),w
  9150  00AD  1D03               	btfss	3,2
  9151  00AE  28B1               	goto	l7314
  9152  00AF  302B               	movlw	43
  9153  00B0  28B2               	goto	L3
  9154  00B1                     l7314:	
  9155  00B1  302D               	movlw	45
  9156  00B2                     L3:	
  9157  00B2  00AF               	movwf	_efgtoa$1083^(0+128)
  9158  00B3  3000               	movlw	0
  9159  00B4  00B0               	movwf	(_efgtoa$1083^(0+128)+1)
  9160  00B5  082F               	movf	_efgtoa$1083^(0+128),w
  9161  00B6  00A7               	movwf	??_efgtoa^(0+128)
  9162  00B7  0827               	movf	??_efgtoa^(0+128),w
  9163  00B8  0024               	movlb	4	; select bank4
  9164  00B9  00A0               	movwf	_dbuf^(0+512)
  9165                           
  9166                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  9167  00BA  3001               	movlw	1
  9168  00BB  0021               	movlb	1	; select bank1
  9169  00BC  07DD               	addwf	efgtoa@n^(0+128),f
  9170  00BD  3000               	movlw	0
  9171  00BE  3DDE               	addwfc	(efgtoa@n+1)^(0+128),f
  9172                           
  9173                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  9174  00BF  30FF               	movlw	255
  9175  00C0  07CA               	addwf	efgtoa@w^(0+128),f
  9176  00C1  30FF               	movlw	255
  9177  00C2  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
  9178  00C3                     l7322:	
  9179                           
  9180                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  9181  00C3  0021               	movlb	1	; select bank1
  9182  00C4  085A               	movf	(efgtoa@g+3)^(0+128),w
  9183  00C5  00F4               	movwf	___fpclassifyf@x+3
  9184  00C6  0859               	movf	(efgtoa@g+2)^(0+128),w
  9185  00C7  00F3               	movwf	___fpclassifyf@x+2
  9186  00C8  0858               	movf	(efgtoa@g+1)^(0+128),w
  9187  00C9  00F2               	movwf	___fpclassifyf@x+1
  9188  00CA  0857               	movf	efgtoa@g^(0+128),w
  9189  00CB  00F1               	movwf	___fpclassifyf@x
  9190  00CC  31A9  214F  3180   	fcall	___fpclassifyf
  9191  00CF  0371               	decf	?___fpclassifyf,w
  9192  00D0  0472               	iorwf	?___fpclassifyf+1,w
  9193  00D1  1D03               	btfss	3,2
  9194  00D2  2921               	goto	l7340
  9195  00D3  0021               	movlb	1	; select bank1
  9196  00D4  0826               	movf	efgtoa@c^(0+128),w
  9197  00D5  3EBF               	addlw	191
  9198  00D6  00A7               	movwf	??_efgtoa^(0+128)
  9199  00D7  30FF               	movlw	255
  9200  00D8  1803               	skipnc
  9201  00D9  3000               	movlw	0
  9202  00DA  00A8               	movwf	(??_efgtoa^(0+128)+1)
  9203  00DB  3000               	movlw	0
  9204  00DC  0228               	subwf	(??_efgtoa+1)^(0+128),w
  9205  00DD  301A               	movlw	26
  9206  00DE  1903               	skipnz
  9207  00DF  0227               	subwf	??_efgtoa^(0+128),w
  9208  00E0  1803               	btfsc	3,0
  9209  00E1  28E4               	goto	u10330
  9210  00E2  3001               	movlw	1
  9211  00E3  28E5               	goto	u10340
  9212  00E4                     u10330:	
  9213  00E4  3000               	movlw	0
  9214  00E5                     u10340:	
  9215  00E5  00A9               	movwf	(??_efgtoa+2)^(0+128)
  9216  00E6  01AA               	clrf	((??_efgtoa+2)^(0+128)+1)
  9217  00E7  0829               	movf	(??_efgtoa+2)^(0+128),w
  9218  00E8  00B1               	movwf	_efgtoa$1084^(0+128)
  9219  00E9  082A               	movf	(??_efgtoa+3)^(0+128),w
  9220  00EA  00B2               	movwf	(_efgtoa$1084+1)^(0+128)
  9221  00EB  0831               	movf	_efgtoa$1084^(0+128),w
  9222  00EC  0432               	iorwf	(_efgtoa$1084+1)^(0+128),w
  9223  00ED  1903               	btfsc	3,2
  9224  00EE  28F3               	goto	l7332
  9225                           
  9226                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  9227  00EF  3010               	movlw	low (STR_26| (0+32768))
  9228  00F0  00F1               	movwf	strcpy@src
  9229  00F1  30BB               	movlw	high (STR_26| (0+32768))
  9230  00F2  28F6               	goto	L4
  9231  00F3                     l7332:	
  9232                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  9233                           
  9234                           
  9235                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  9236  00F3  3020               	movlw	low (STR_27| (0+32768))
  9237  00F4  00F1               	movwf	strcpy@src
  9238  00F5  30BB               	movlw	high (STR_27| (0+32768))
  9239  00F6                     L4:	
  9240  00F6  00F2               	movwf	strcpy@src+1
  9241  00F7  085D               	movf	efgtoa@n^(0+128),w
  9242  00F8  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9243  00F9  31B4  24B9  3180   	fcall	_strcpy
  9244                           
  9245                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  9246  00FC  30FD               	movlw	253
  9247  00FD  0021               	movlb	1	; select bank1
  9248  00FE  07CA               	addwf	efgtoa@w^(0+128),f
  9249  00FF  30FF               	movlw	255
  9250  0100  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
  9251                           
  9252                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  9253  0101  0821               	movf	(efgtoa@fp+1)^(0+128),w
  9254  0102  0020               	movlb	0	; select bank0
  9255  0103  00A7               	movwf	pad@fp+1
  9256  0104  0021               	movlb	1	; select bank1
  9257  0105  0820               	movf	efgtoa@fp^(0+128),w
  9258  0106  0020               	movlb	0	; select bank0
  9259  0107  00A6               	movwf	pad@fp
  9260  0108  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  9261  0109  0021               	movlb	1	; select bank1
  9262  010A  00A7               	movwf	??_efgtoa^(0+128)
  9263  010B  0827               	movf	??_efgtoa^(0+128),w
  9264  010C  0020               	movlb	0	; select bank0
  9265  010D  00A8               	movwf	pad@buf
  9266  010E  0021               	movlb	1	; select bank1
  9267  010F  084B               	movf	(efgtoa@w+1)^(0+128),w
  9268  0110  0020               	movlb	0	; select bank0
  9269  0111  00AA               	movwf	pad@p+1
  9270  0112  0021               	movlb	1	; select bank1
  9271  0113  084A               	movf	efgtoa@w^(0+128),w
  9272  0114  0020               	movlb	0	; select bank0
  9273  0115  00A9               	movwf	pad@p
  9274  0116  31B7  275E         	fcall	_pad
  9275  0118  0020               	movlb	0	; select bank0
  9276  0119  0827               	movf	?_pad+1,w
  9277  011A  0021               	movlb	1	; select bank1
  9278  011B  00A1               	movwf	(?_efgtoa+1)^(0+128)
  9279  011C  0020               	movlb	0	; select bank0
  9280  011D  0826               	movf	?_pad,w
  9281  011E  0021               	movlb	1	; select bank1
  9282  011F  00A0               	movwf	?_efgtoa^(0+128)
  9283  0120  0008               	return
  9284  0121                     l7340:	
  9285                           
  9286                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  9287  0121  0021               	movlb	1	; select bank1
  9288  0122  085A               	movf	(efgtoa@g+3)^(0+128),w
  9289  0123  00F4               	movwf	___fpclassifyf@x+3
  9290  0124  0859               	movf	(efgtoa@g+2)^(0+128),w
  9291  0125  00F3               	movwf	___fpclassifyf@x+2
  9292  0126  0858               	movf	(efgtoa@g+1)^(0+128),w
  9293  0127  00F2               	movwf	___fpclassifyf@x+1
  9294  0128  0857               	movf	efgtoa@g^(0+128),w
  9295  0129  00F1               	movwf	___fpclassifyf@x
  9296  012A  31A9  214F  3180   	fcall	___fpclassifyf
  9297  012D  0871               	movf	?___fpclassifyf,w
  9298  012E  0472               	iorwf	?___fpclassifyf+1,w
  9299  012F  1D03               	btfss	3,2
  9300  0130  297F               	goto	l7358
  9301  0131  0021               	movlb	1	; select bank1
  9302  0132  0826               	movf	efgtoa@c^(0+128),w
  9303  0133  3EBF               	addlw	191
  9304  0134  00A7               	movwf	??_efgtoa^(0+128)
  9305  0135  30FF               	movlw	255
  9306  0136  1803               	skipnc
  9307  0137  3000               	movlw	0
  9308  0138  00A8               	movwf	(??_efgtoa^(0+128)+1)
  9309  0139  3000               	movlw	0
  9310  013A  0228               	subwf	(??_efgtoa+1)^(0+128),w
  9311  013B  301A               	movlw	26
  9312  013C  1903               	skipnz
  9313  013D  0227               	subwf	??_efgtoa^(0+128),w
  9314  013E  1803               	btfsc	3,0
  9315  013F  2942               	goto	u10370
  9316  0140  3001               	movlw	1
  9317  0141  2943               	goto	u10380
  9318  0142                     u10370:	
  9319  0142  3000               	movlw	0
  9320  0143                     u10380:	
  9321  0143  00A9               	movwf	(??_efgtoa+2)^(0+128)
  9322  0144  01AA               	clrf	((??_efgtoa+2)^(0+128)+1)
  9323  0145  0829               	movf	(??_efgtoa+2)^(0+128),w
  9324  0146  00B3               	movwf	_efgtoa$1088^(0+128)
  9325  0147  082A               	movf	(??_efgtoa+3)^(0+128),w
  9326  0148  00B4               	movwf	(_efgtoa$1088+1)^(0+128)
  9327  0149  0833               	movf	_efgtoa$1088^(0+128),w
  9328  014A  0434               	iorwf	(_efgtoa$1088+1)^(0+128),w
  9329  014B  1903               	btfsc	3,2
  9330  014C  2951               	goto	l7350
  9331                           
  9332                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  9333  014D  3014               	movlw	low (STR_30| (0+32768))
  9334  014E  00F1               	movwf	strcpy@src
  9335  014F  30BB               	movlw	high (STR_30| (0+32768))
  9336  0150  2954               	goto	L5
  9337  0151                     l7350:	
  9338                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  9339                           
  9340                           
  9341                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  9342  0151  3028               	movlw	low (STR_31| (0+32768))
  9343  0152  00F1               	movwf	strcpy@src
  9344  0153  30BB               	movlw	high (STR_31| (0+32768))
  9345  0154                     L5:	
  9346  0154  00F2               	movwf	strcpy@src+1
  9347  0155  085D               	movf	efgtoa@n^(0+128),w
  9348  0156  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9349  0157  31B4  24B9  3180   	fcall	_strcpy
  9350                           
  9351                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 358:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  9352  015A  30FD               	movlw	253
  9353  015B  0021               	movlb	1	; select bank1
  9354  015C  07CA               	addwf	efgtoa@w^(0+128),f
  9355  015D  30FF               	movlw	255
  9356  015E  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
  9357                           
  9358                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 359:       
      +                            return pad(fp, &dbuf[0], w);
  9359  015F  0821               	movf	(efgtoa@fp+1)^(0+128),w
  9360  0160  0020               	movlb	0	; select bank0
  9361  0161  00A7               	movwf	pad@fp+1
  9362  0162  0021               	movlb	1	; select bank1
  9363  0163  0820               	movf	efgtoa@fp^(0+128),w
  9364  0164  0020               	movlb	0	; select bank0
  9365  0165  00A6               	movwf	pad@fp
  9366  0166  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  9367  0167  0021               	movlb	1	; select bank1
  9368  0168  00A7               	movwf	??_efgtoa^(0+128)
  9369  0169  0827               	movf	??_efgtoa^(0+128),w
  9370  016A  0020               	movlb	0	; select bank0
  9371  016B  00A8               	movwf	pad@buf
  9372  016C  0021               	movlb	1	; select bank1
  9373  016D  084B               	movf	(efgtoa@w+1)^(0+128),w
  9374  016E  0020               	movlb	0	; select bank0
  9375  016F  00AA               	movwf	pad@p+1
  9376  0170  0021               	movlb	1	; select bank1
  9377  0171  084A               	movf	efgtoa@w^(0+128),w
  9378  0172  0020               	movlb	0	; select bank0
  9379  0173  00A9               	movwf	pad@p
  9380  0174  31B7  275E         	fcall	_pad
  9381  0176  0020               	movlb	0	; select bank0
  9382  0177  0827               	movf	?_pad+1,w
  9383  0178  0021               	movlb	1	; select bank1
  9384  0179  00A1               	movwf	(?_efgtoa+1)^(0+128)
  9385  017A  0020               	movlb	0	; select bank0
  9386  017B  0826               	movf	?_pad,w
  9387  017C  0021               	movlb	1	; select bank1
  9388  017D  00A0               	movwf	?_efgtoa^(0+128)
  9389  017E  0008               	return
  9390  017F                     l7358:	
  9391                           
  9392                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  9393  017F  303F               	movlw	63
  9394  0180  0021               	movlb	1	; select bank1
  9395  0181  00E2               	movwf	(efgtoa@u+3)^(0+128)
  9396  0182  3080               	movlw	128
  9397  0183  00E1               	movwf	(efgtoa@u+2)^(0+128)
  9398  0184  3000               	movlw	0
  9399  0185  00E0               	movwf	(efgtoa@u+1)^(0+128)
  9400  0186  3000               	movlw	0
  9401  0187  00DF               	movwf	efgtoa@u^(0+128)
  9402                           
  9403                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  9404  0188  01DB               	clrf	efgtoa@e^(0+128)
  9405  0189  01DC               	clrf	(efgtoa@e+1)^(0+128)
  9406                           
  9407                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  9408  018A  085A               	movf	(efgtoa@g+3)^(0+128),w
  9409  018B  00F4               	movwf	___fleq@ff1+3
  9410  018C  0859               	movf	(efgtoa@g+2)^(0+128),w
  9411  018D  00F3               	movwf	___fleq@ff1+2
  9412  018E  0858               	movf	(efgtoa@g+1)^(0+128),w
  9413  018F  00F2               	movwf	___fleq@ff1+1
  9414  0190  0857               	movf	efgtoa@g^(0+128),w
  9415  0191  00F1               	movwf	___fleq@ff1
  9416  0192  3000               	movlw	0
  9417  0193  00F8               	movwf	___fleq@ff2+3
  9418  0194  3000               	movlw	0
  9419  0195  00F7               	movwf	___fleq@ff2+2
  9420  0196  3000               	movlw	0
  9421  0197  00F6               	movwf	___fleq@ff2+1
  9422  0198  3000               	movlw	0
  9423  0199  00F5               	movwf	___fleq@ff2
  9424  019A  31B6  2675  3180   	fcall	___fleq
  9425  019D  1C03               	btfss	3,0
  9426  019E  29D0               	goto	l7370
  9427  019F  2A5F               	goto	l7378
  9428  01A0                     l7366:	
  9429                           
  9430                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  9431  01A0  3041               	movlw	65
  9432  01A1  0020               	movlb	0	; select bank0
  9433  01A2  00A9               	movwf	___flmul@b+3
  9434  01A3  3020               	movlw	32
  9435  01A4  00A8               	movwf	___flmul@b+2
  9436  01A5  3000               	movlw	0
  9437  01A6  00A7               	movwf	___flmul@b+1
  9438  01A7  3000               	movlw	0
  9439  01A8  00A6               	movwf	___flmul@b
  9440  01A9  0021               	movlb	1	; select bank1
  9441  01AA  0862               	movf	(efgtoa@u+3)^(0+128),w
  9442  01AB  0020               	movlb	0	; select bank0
  9443  01AC  00AD               	movwf	___flmul@a+3
  9444  01AD  0021               	movlb	1	; select bank1
  9445  01AE  0861               	movf	(efgtoa@u+2)^(0+128),w
  9446  01AF  0020               	movlb	0	; select bank0
  9447  01B0  00AC               	movwf	___flmul@a+2
  9448  01B1  0021               	movlb	1	; select bank1
  9449  01B2  0860               	movf	(efgtoa@u+1)^(0+128),w
  9450  01B3  0020               	movlb	0	; select bank0
  9451  01B4  00AB               	movwf	___flmul@a+1
  9452  01B5  0021               	movlb	1	; select bank1
  9453  01B6  085F               	movf	efgtoa@u^(0+128),w
  9454  01B7  0020               	movlb	0	; select bank0
  9455  01B8  00AA               	movwf	___flmul@a
  9456  01B9  3195  25D4  3180   	fcall	___flmul
  9457  01BC  0020               	movlb	0	; select bank0
  9458  01BD  0829               	movf	?___flmul+3,w
  9459  01BE  0021               	movlb	1	; select bank1
  9460  01BF  00E2               	movwf	(efgtoa@u+3)^(0+128)
  9461  01C0  0020               	movlb	0	; select bank0
  9462  01C1  0828               	movf	?___flmul+2,w
  9463  01C2  0021               	movlb	1	; select bank1
  9464  01C3  00E1               	movwf	(efgtoa@u+2)^(0+128)
  9465  01C4  0020               	movlb	0	; select bank0
  9466  01C5  0827               	movf	?___flmul+1,w
  9467  01C6  0021               	movlb	1	; select bank1
  9468  01C7  00E0               	movwf	(efgtoa@u+1)^(0+128)
  9469  01C8  0020               	movlb	0	; select bank0
  9470  01C9  0826               	movf	?___flmul,w
  9471  01CA  0021               	movlb	1	; select bank1
  9472  01CB  00DF               	movwf	efgtoa@u^(0+128)
  9473                           
  9474                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  9475  01CC  3001               	movlw	1
  9476  01CD  07DB               	addwf	efgtoa@e^(0+128),f
  9477  01CE  3000               	movlw	0
  9478  01CF  3DDC               	addwfc	(efgtoa@e+1)^(0+128),f
  9479  01D0                     l7370:	
  9480                           
  9481                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  9482  01D0  0021               	movlb	1	; select bank1
  9483  01D1  085A               	movf	(efgtoa@g+3)^(0+128),w
  9484  01D2  0020               	movlb	0	; select bank0
  9485  01D3  00DD               	movwf	___flge@ff1+3
  9486  01D4  0021               	movlb	1	; select bank1
  9487  01D5  0859               	movf	(efgtoa@g+2)^(0+128),w
  9488  01D6  0020               	movlb	0	; select bank0
  9489  01D7  00DC               	movwf	___flge@ff1+2
  9490  01D8  0021               	movlb	1	; select bank1
  9491  01D9  0858               	movf	(efgtoa@g+1)^(0+128),w
  9492  01DA  0020               	movlb	0	; select bank0
  9493  01DB  00DB               	movwf	___flge@ff1+1
  9494  01DC  0021               	movlb	1	; select bank1
  9495  01DD  0857               	movf	efgtoa@g^(0+128),w
  9496  01DE  0020               	movlb	0	; select bank0
  9497  01DF  00DA               	movwf	___flge@ff1
  9498  01E0  3041               	movlw	65
  9499  01E1  00A9               	movwf	___flmul@b+3
  9500  01E2  3020               	movlw	32
  9501  01E3  00A8               	movwf	___flmul@b+2
  9502  01E4  3000               	movlw	0
  9503  01E5  00A7               	movwf	___flmul@b+1
  9504  01E6  3000               	movlw	0
  9505  01E7  00A6               	movwf	___flmul@b
  9506  01E8  0021               	movlb	1	; select bank1
  9507  01E9  0862               	movf	(efgtoa@u+3)^(0+128),w
  9508  01EA  0020               	movlb	0	; select bank0
  9509  01EB  00AD               	movwf	___flmul@a+3
  9510  01EC  0021               	movlb	1	; select bank1
  9511  01ED  0861               	movf	(efgtoa@u+2)^(0+128),w
  9512  01EE  0020               	movlb	0	; select bank0
  9513  01EF  00AC               	movwf	___flmul@a+2
  9514  01F0  0021               	movlb	1	; select bank1
  9515  01F1  0860               	movf	(efgtoa@u+1)^(0+128),w
  9516  01F2  0020               	movlb	0	; select bank0
  9517  01F3  00AB               	movwf	___flmul@a+1
  9518  01F4  0021               	movlb	1	; select bank1
  9519  01F5  085F               	movf	efgtoa@u^(0+128),w
  9520  01F6  0020               	movlb	0	; select bank0
  9521  01F7  00AA               	movwf	___flmul@a
  9522  01F8  3195  25D4  3180   	fcall	___flmul
  9523  01FB  0020               	movlb	0	; select bank0
  9524  01FC  0829               	movf	?___flmul+3,w
  9525  01FD  00E1               	movwf	___flge@ff2+3
  9526  01FE  0828               	movf	?___flmul+2,w
  9527  01FF  00E0               	movwf	___flge@ff2+2
  9528  0200  0827               	movf	?___flmul+1,w
  9529  0201  00DF               	movwf	___flge@ff2+1
  9530  0202  0826               	movf	?___flmul,w
  9531  0203  00DE               	movwf	___flge@ff2
  9532  0204  31A9  21C7  3180   	fcall	___flge
  9533  0207  1C03               	btfss	3,0
  9534  0208  2A3A               	goto	l7376
  9535  0209  29A0               	goto	l7366
  9536  020A                     l7372:	
  9537                           
  9538                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  9539  020A  3041               	movlw	65
  9540  020B  0020               	movlb	0	; select bank0
  9541  020C  00C3               	movwf	___fldiv@a+3
  9542  020D  3020               	movlw	32
  9543  020E  00C2               	movwf	___fldiv@a+2
  9544  020F  3000               	movlw	0
  9545  0210  00C1               	movwf	___fldiv@a+1
  9546  0211  3000               	movlw	0
  9547  0212  00C0               	movwf	___fldiv@a
  9548  0213  0021               	movlb	1	; select bank1
  9549  0214  0862               	movf	(efgtoa@u+3)^(0+128),w
  9550  0215  0020               	movlb	0	; select bank0
  9551  0216  00C7               	movwf	___fldiv@b+3
  9552  0217  0021               	movlb	1	; select bank1
  9553  0218  0861               	movf	(efgtoa@u+2)^(0+128),w
  9554  0219  0020               	movlb	0	; select bank0
  9555  021A  00C6               	movwf	___fldiv@b+2
  9556  021B  0021               	movlb	1	; select bank1
  9557  021C  0860               	movf	(efgtoa@u+1)^(0+128),w
  9558  021D  0020               	movlb	0	; select bank0
  9559  021E  00C5               	movwf	___fldiv@b+1
  9560  021F  0021               	movlb	1	; select bank1
  9561  0220  085F               	movf	efgtoa@u^(0+128),w
  9562  0221  0020               	movlb	0	; select bank0
  9563  0222  00C4               	movwf	___fldiv@b
  9564  0223  3190  2052  3180   	fcall	___fldiv
  9565  0226  0020               	movlb	0	; select bank0
  9566  0227  0843               	movf	?___fldiv+3,w
  9567  0228  0021               	movlb	1	; select bank1
  9568  0229  00E2               	movwf	(efgtoa@u+3)^(0+128)
  9569  022A  0020               	movlb	0	; select bank0
  9570  022B  0842               	movf	?___fldiv+2,w
  9571  022C  0021               	movlb	1	; select bank1
  9572  022D  00E1               	movwf	(efgtoa@u+2)^(0+128)
  9573  022E  0020               	movlb	0	; select bank0
  9574  022F  0841               	movf	?___fldiv+1,w
  9575  0230  0021               	movlb	1	; select bank1
  9576  0231  00E0               	movwf	(efgtoa@u+1)^(0+128)
  9577  0232  0020               	movlb	0	; select bank0
  9578  0233  0840               	movf	?___fldiv,w
  9579  0234  0021               	movlb	1	; select bank1
  9580  0235  00DF               	movwf	efgtoa@u^(0+128)
  9581                           
  9582                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  9583  0236  30FF               	movlw	255
  9584  0237  07DB               	addwf	efgtoa@e^(0+128),f
  9585  0238  30FF               	movlw	255
  9586  0239  3DDC               	addwfc	(efgtoa@e+1)^(0+128),f
  9587  023A                     l7376:	
  9588                           
  9589                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  9590  023A  0021               	movlb	1	; select bank1
  9591  023B  085A               	movf	(efgtoa@g+3)^(0+128),w
  9592  023C  0020               	movlb	0	; select bank0
  9593  023D  00DD               	movwf	___flge@ff1+3
  9594  023E  0021               	movlb	1	; select bank1
  9595  023F  0859               	movf	(efgtoa@g+2)^(0+128),w
  9596  0240  0020               	movlb	0	; select bank0
  9597  0241  00DC               	movwf	___flge@ff1+2
  9598  0242  0021               	movlb	1	; select bank1
  9599  0243  0858               	movf	(efgtoa@g+1)^(0+128),w
  9600  0244  0020               	movlb	0	; select bank0
  9601  0245  00DB               	movwf	___flge@ff1+1
  9602  0246  0021               	movlb	1	; select bank1
  9603  0247  0857               	movf	efgtoa@g^(0+128),w
  9604  0248  0020               	movlb	0	; select bank0
  9605  0249  00DA               	movwf	___flge@ff1
  9606  024A  0021               	movlb	1	; select bank1
  9607  024B  0862               	movf	(efgtoa@u+3)^(0+128),w
  9608  024C  0020               	movlb	0	; select bank0
  9609  024D  00E1               	movwf	___flge@ff2+3
  9610  024E  0021               	movlb	1	; select bank1
  9611  024F  0861               	movf	(efgtoa@u+2)^(0+128),w
  9612  0250  0020               	movlb	0	; select bank0
  9613  0251  00E0               	movwf	___flge@ff2+2
  9614  0252  0021               	movlb	1	; select bank1
  9615  0253  0860               	movf	(efgtoa@u+1)^(0+128),w
  9616  0254  0020               	movlb	0	; select bank0
  9617  0255  00DF               	movwf	___flge@ff2+1
  9618  0256  0021               	movlb	1	; select bank1
  9619  0257  085F               	movf	efgtoa@u^(0+128),w
  9620  0258  0020               	movlb	0	; select bank0
  9621  0259  00DE               	movwf	___flge@ff2
  9622  025A  31A9  21C7  3180   	fcall	___flge
  9623  025D  1C03               	btfss	3,0
  9624  025E  2A0A               	goto	l7372
  9625  025F                     l7378:	
  9626                           
  9627                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  9628  025F  0021               	movlb	1	; select bank1
  9629  0260  0826               	movf	efgtoa@c^(0+128),w
  9630  0261  00A7               	movwf	??_efgtoa^(0+128)
  9631  0262  01A8               	clrf	(??_efgtoa^(0+128)+1)
  9632  0263  0827               	movf	??_efgtoa^(0+128),w
  9633  0264  00F7               	movwf	tolower@c
  9634  0265  0828               	movf	(??_efgtoa+1)^(0+128),w
  9635  0266  00F8               	movwf	tolower@c+1
  9636  0267  31B5  251B  3180   	fcall	_tolower
  9637  026A  0877               	movf	?_tolower,w
  9638  026B  0021               	movlb	1	; select bank1
  9639  026C  00A9               	movwf	(??_efgtoa+2)^(0+128)
  9640  026D  0829               	movf	(??_efgtoa+2)^(0+128),w
  9641  026E  00CC               	movwf	efgtoa@mode^(0+128)
  9642                           
  9643                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  9644  026F  084C               	movf	efgtoa@mode^(0+128),w
  9645  0270  00A7               	movwf	??_efgtoa^(0+128)
  9646  0271  0827               	movf	??_efgtoa^(0+128),w
  9647  0272  00C9               	movwf	efgtoa@nmode^(0+128)
  9648                           
  9649                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  9650  0273  3067               	movlw	103
  9651  0274  064C               	xorwf	efgtoa@mode^(0+128),w
  9652  0275  1D03               	btfss	3,2
  9653  0276  2A93               	goto	l627
  9654                           
  9655                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  9656  0277  0023               	movlb	3	; select bank3
  9657  0278  0840               	movf	_prec^(0+384),w
  9658  0279  0441               	iorwf	(_prec+1)^(0+384),w
  9659  027A  1D03               	btfss	3,2
  9660  027B  2A80               	goto	l628
  9661                           
  9662                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  9663  027C  3001               	movlw	1
  9664  027D  00C0               	movwf	_prec^(0+384)
  9665  027E  3000               	movlw	0
  9666  027F  00C1               	movwf	(_prec^(0+384)+1)
  9667  0280                     l628:	
  9668                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 382:   }
  9669                           
  9670                           
  9671                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  9672  0280  0841               	movf	(_prec+1)^(0+384),w
  9673  0281  3A80               	xorlw	128
  9674  0282  0021               	movlb	1	; select bank1
  9675  0283  00A7               	movwf	??_efgtoa^(0+128)
  9676  0284  3080               	movlw	128
  9677  0285  0227               	subwf	??_efgtoa^(0+128),w
  9678  0286  1D03               	skipz
  9679  0287  2A8B               	goto	u10455
  9680  0288  3001               	movlw	1
  9681  0289  0023               	movlb	3	; select bank3
  9682  028A  0240               	subwf	_prec^(0+384),w
  9683  028B                     u10455:	
  9684  028B  1803               	skipnc
  9685  028C  2A96               	goto	l7390
  9686  028D                     l7388:	
  9687  028D  3006               	movlw	6
  9688  028E  0021               	movlb	1	; select bank1
  9689  028F  00C7               	movwf	efgtoa@p^(0+128)
  9690  0290  3000               	movlw	0
  9691  0291  00C8               	movwf	(efgtoa@p^(0+128)+1)
  9692  0292  2A9E               	goto	l7396
  9693  0293                     l627:	
  9694                           
  9695                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  9696  0293  0023               	movlb	3	; select bank3
  9697  0294  1BC1               	btfsc	(_prec+1)^(0+384),7
  9698  0295  2A8D               	goto	l7388
  9699  0296                     l7390:	
  9700  0296  0023               	movlb	3	; select bank3
  9701  0297  0841               	movf	(_prec+1)^(0+384),w
  9702  0298  0021               	movlb	1	; select bank1
  9703  0299  00C8               	movwf	(efgtoa@p+1)^(0+128)
  9704  029A  0023               	movlb	3	; select bank3
  9705  029B  0840               	movf	_prec^(0+384),w
  9706  029C  0021               	movlb	1	; select bank1
  9707  029D  00C7               	movwf	efgtoa@p^(0+128)
  9708  029E                     l7396:	
  9709                           
  9710                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  9711  029E  3067               	movlw	103
  9712  029F  064C               	xorwf	efgtoa@mode^(0+128),w
  9713  02A0  1D03               	btfss	3,2
  9714  02A1  2AC7               	goto	l638
  9715                           
  9716                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  9717  02A2  085C               	movf	(efgtoa@e+1)^(0+128),w
  9718  02A3  3A80               	xorlw	128
  9719  02A4  00A7               	movwf	??_efgtoa^(0+128)
  9720  02A5  307F               	movlw	127
  9721  02A6  0227               	subwf	??_efgtoa^(0+128),w
  9722  02A7  1D03               	skipz
  9723  02A8  2AAB               	goto	u10485
  9724  02A9  30FC               	movlw	252
  9725  02AA  025B               	subwf	efgtoa@e^(0+128),w
  9726  02AB                     u10485:	
  9727  02AB  1C03               	skipc
  9728  02AC  2AC2               	goto	l7404
  9729  02AD  0021               	movlb	1	; select bank1
  9730  02AE  0847               	movf	efgtoa@p^(0+128),w
  9731  02AF  3EFF               	addlw	255
  9732  02B0  00A7               	movwf	??_efgtoa^(0+128)
  9733  02B1  30FF               	movlw	255
  9734  02B2  3D48               	addwfc	(efgtoa@p+1)^(0+128),w
  9735  02B3  00A8               	movwf	(??_efgtoa+1)^(0+128)
  9736  02B4  0828               	movf	(??_efgtoa+1)^(0+128),w
  9737  02B5  3A80               	xorlw	128
  9738  02B6  00A9               	movwf	(??_efgtoa+2)^(0+128)
  9739  02B7  085C               	movf	(efgtoa@e+1)^(0+128),w
  9740  02B8  3A80               	xorlw	128
  9741  02B9  0229               	subwf	(??_efgtoa+2)^(0+128),w
  9742  02BA  1D03               	skipz
  9743  02BB  2ABE               	goto	u10495
  9744  02BC  085B               	movf	efgtoa@e^(0+128),w
  9745  02BD  0227               	subwf	??_efgtoa^(0+128),w
  9746  02BE                     u10495:	
  9747  02BE  1C03               	skipc
  9748  02BF  2AC2               	goto	l7404
  9749                           
  9750                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  9751  02C0  3066               	movlw	102
  9752  02C1  2AC3               	goto	L6
  9753  02C2                     l7404:	
  9754                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  9755                           
  9756                           
  9757                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  9758  02C2  3065               	movlw	101
  9759  02C3                     L6:	
  9760  02C3  0021               	movlb	1	; select bank1
  9761  02C4  00A7               	movwf	??_efgtoa^(0+128)
  9762  02C5  0827               	movf	??_efgtoa^(0+128),w
  9763  02C6  00C9               	movwf	efgtoa@nmode^(0+128)
  9764  02C7                     l638:	
  9765                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 395:     }
  9766                           
  9767                           
  9768                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  9769  02C7  0848               	movf	(efgtoa@p+1)^(0+128),w
  9770  02C8  00C0               	movwf	(efgtoa@m+1)^(0+128)
  9771  02C9  0847               	movf	efgtoa@p^(0+128),w
  9772  02CA  00BF               	movwf	efgtoa@m^(0+128)
  9773                           
  9774                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  9775  02CB  3067               	movlw	103
  9776  02CC  064C               	xorwf	efgtoa@mode^(0+128),w
  9777  02CD  1D03               	btfss	3,2
  9778  02CE  2AD4               	goto	l7412
  9779  02CF  3066               	movlw	102
  9780  02D0  0649               	xorwf	efgtoa@nmode^(0+128),w
  9781  02D1  1903               	btfsc	3,2
  9782  02D2  1FDC               	btfss	(efgtoa@e+1)^(0+128),7
  9783  02D3  2AD8               	goto	l7414
  9784  02D4                     l7412:	
  9785                           
  9786                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  9787  02D4  3001               	movlw	1
  9788  02D5  07BF               	addwf	efgtoa@m^(0+128),f
  9789  02D6  3000               	movlw	0
  9790  02D7  3DC0               	addwfc	(efgtoa@m+1)^(0+128),f
  9791  02D8                     l7414:	
  9792                           
  9793                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  9794  02D8  3066               	movlw	102
  9795  02D9  0649               	xorwf	efgtoa@nmode^(0+128),w
  9796  02DA  1D03               	btfss	3,2
  9797  02DB  2AF0               	goto	l7426
  9798                           
  9799                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  9800  02DC  1FDC               	btfss	(efgtoa@e+1)^(0+128),7
  9801  02DD  2AE8               	goto	l7422
  9802                           
  9803                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  9804  02DE  303F               	movlw	63
  9805  02DF  00E2               	movwf	(efgtoa@u+3)^(0+128)
  9806  02E0  3080               	movlw	128
  9807  02E1  00E1               	movwf	(efgtoa@u+2)^(0+128)
  9808  02E2  3000               	movlw	0
  9809  02E3  00E0               	movwf	(efgtoa@u+1)^(0+128)
  9810  02E4  3000               	movlw	0
  9811  02E5  00DF               	movwf	efgtoa@u^(0+128)
  9812                           
  9813                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  9814  02E6  01DB               	clrf	efgtoa@e^(0+128)
  9815  02E7  01DC               	clrf	(efgtoa@e+1)^(0+128)
  9816  02E8                     l7422:	
  9817                           
  9818                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  9819  02E8  3067               	movlw	103
  9820  02E9  064C               	xorwf	efgtoa@mode^(0+128),w
  9821  02EA  1903               	btfsc	3,2
  9822  02EB  2AF0               	goto	l7426
  9823                           
  9824                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  9825  02EC  085B               	movf	efgtoa@e^(0+128),w
  9826  02ED  07BF               	addwf	efgtoa@m^(0+128),f
  9827  02EE  085C               	movf	(efgtoa@e+1)^(0+128),w
  9828  02EF  3DC0               	addwfc	(efgtoa@m+1)^(0+128),f
  9829  02F0                     l7426:	
  9830                           
  9831                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  9832  02F0  01D5               	clrf	efgtoa@i^(0+128)
  9833  02F1  01D6               	clrf	(efgtoa@i+1)^(0+128)
  9834                           
  9835                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  9836  02F2  085A               	movf	(efgtoa@g+3)^(0+128),w
  9837  02F3  00D0               	movwf	(efgtoa@h+3)^(0+128)
  9838  02F4  0859               	movf	(efgtoa@g+2)^(0+128),w
  9839  02F5  00CF               	movwf	(efgtoa@h+2)^(0+128)
  9840  02F6  0858               	movf	(efgtoa@g+1)^(0+128),w
  9841  02F7  00CE               	movwf	(efgtoa@h+1)^(0+128)
  9842  02F8  0857               	movf	efgtoa@g^(0+128),w
  9843  02F9  00CD               	movwf	efgtoa@h^(0+128)
  9844                           
  9845                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  9846  02FA  0862               	movf	(efgtoa@u+3)^(0+128),w
  9847  02FB  00AE               	movwf	(efgtoa@ou+3)^(0+128)
  9848  02FC  0861               	movf	(efgtoa@u+2)^(0+128),w
  9849  02FD  00AD               	movwf	(efgtoa@ou+2)^(0+128)
  9850  02FE  0860               	movf	(efgtoa@u+1)^(0+128),w
  9851  02FF  00AC               	movwf	(efgtoa@ou+1)^(0+128)
  9852  0300  085F               	movf	efgtoa@u^(0+128),w
  9853  0301  00AB               	movwf	efgtoa@ou^(0+128)
  9854  0302                     l7436:	
  9855                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  9856                           
  9857                           
  9858                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  9859  0302  0856               	movf	(efgtoa@i+1)^(0+128),w
  9860  0303  3A80               	xorlw	128
  9861  0304  00A7               	movwf	??_efgtoa^(0+128)
  9862  0305  0840               	movf	(efgtoa@m+1)^(0+128),w
  9863  0306  3A80               	xorlw	128
  9864  0307  0227               	subwf	??_efgtoa^(0+128),w
  9865  0308  1D03               	skipz
  9866  0309  2B0C               	goto	u10565
  9867  030A  083F               	movf	efgtoa@m^(0+128),w
  9868  030B  0255               	subwf	efgtoa@i^(0+128),w
  9869  030C                     u10565:	
  9870  030C  1803               	btfsc	3,0
  9871  030D  2BE6               	goto	l7438
  9872                           
  9873                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  9874  030E  0021               	movlb	1	; select bank1
  9875  030F  0862               	movf	(efgtoa@u+3)^(0+128),w
  9876  0310  0020               	movlb	0	; select bank0
  9877  0311  00C3               	movwf	___fldiv@a+3
  9878  0312  0021               	movlb	1	; select bank1
  9879  0313  0861               	movf	(efgtoa@u+2)^(0+128),w
  9880  0314  0020               	movlb	0	; select bank0
  9881  0315  00C2               	movwf	___fldiv@a+2
  9882  0316  0021               	movlb	1	; select bank1
  9883  0317  0860               	movf	(efgtoa@u+1)^(0+128),w
  9884  0318  0020               	movlb	0	; select bank0
  9885  0319  00C1               	movwf	___fldiv@a+1
  9886  031A  0021               	movlb	1	; select bank1
  9887  031B  085F               	movf	efgtoa@u^(0+128),w
  9888  031C  0020               	movlb	0	; select bank0
  9889  031D  00C0               	movwf	___fldiv@a
  9890  031E  0021               	movlb	1	; select bank1
  9891  031F  0850               	movf	(efgtoa@h+3)^(0+128),w
  9892  0320  0020               	movlb	0	; select bank0
  9893  0321  00C7               	movwf	___fldiv@b+3
  9894  0322  0021               	movlb	1	; select bank1
  9895  0323  084F               	movf	(efgtoa@h+2)^(0+128),w
  9896  0324  0020               	movlb	0	; select bank0
  9897  0325  00C6               	movwf	___fldiv@b+2
  9898  0326  0021               	movlb	1	; select bank1
  9899  0327  084E               	movf	(efgtoa@h+1)^(0+128),w
  9900  0328  0020               	movlb	0	; select bank0
  9901  0329  00C5               	movwf	___fldiv@b+1
  9902  032A  0021               	movlb	1	; select bank1
  9903  032B  084D               	movf	efgtoa@h^(0+128),w
  9904  032C  0020               	movlb	0	; select bank0
  9905  032D  00C4               	movwf	___fldiv@b
  9906  032E  3190  2052  3180   	fcall	___fldiv
  9907  0331  0020               	movlb	0	; select bank0
  9908  0332  0843               	movf	?___fldiv+3,w
  9909  0333  00DD               	movwf	floorf@x+3
  9910  0334  0842               	movf	?___fldiv+2,w
  9911  0335  00DC               	movwf	floorf@x+2
  9912  0336  0841               	movf	?___fldiv+1,w
  9913  0337  00DB               	movwf	floorf@x+1
  9914  0338  0840               	movf	?___fldiv,w
  9915  0339  00DA               	movwf	floorf@x
  9916  033A  31A2  22A1  3180   	fcall	_floorf
  9917  033D  0020               	movlb	0	; select bank0
  9918  033E  085D               	movf	?_floorf+3,w
  9919  033F  0021               	movlb	1	; select bank1
  9920  0340  00D4               	movwf	(efgtoa@l+3)^(0+128)
  9921  0341  0020               	movlb	0	; select bank0
  9922  0342  085C               	movf	?_floorf+2,w
  9923  0343  0021               	movlb	1	; select bank1
  9924  0344  00D3               	movwf	(efgtoa@l+2)^(0+128)
  9925  0345  0020               	movlb	0	; select bank0
  9926  0346  085B               	movf	?_floorf+1,w
  9927  0347  0021               	movlb	1	; select bank1
  9928  0348  00D2               	movwf	(efgtoa@l+1)^(0+128)
  9929  0349  0020               	movlb	0	; select bank0
  9930  034A  085A               	movf	?_floorf,w
  9931  034B  0021               	movlb	1	; select bank1
  9932  034C  00D1               	movwf	efgtoa@l^(0+128)
  9933                           
  9934                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  9935  034D  0854               	movf	(efgtoa@l+3)^(0+128),w
  9936  034E  0020               	movlb	0	; select bank0
  9937  034F  00DD               	movwf	___fltol@f1+3
  9938  0350  0021               	movlb	1	; select bank1
  9939  0351  0853               	movf	(efgtoa@l+2)^(0+128),w
  9940  0352  0020               	movlb	0	; select bank0
  9941  0353  00DC               	movwf	___fltol@f1+2
  9942  0354  0021               	movlb	1	; select bank1
  9943  0355  0852               	movf	(efgtoa@l+1)^(0+128),w
  9944  0356  0020               	movlb	0	; select bank0
  9945  0357  00DB               	movwf	___fltol@f1+1
  9946  0358  0021               	movlb	1	; select bank1
  9947  0359  0851               	movf	efgtoa@l^(0+128),w
  9948  035A  0020               	movlb	0	; select bank0
  9949  035B  00DA               	movwf	___fltol@f1
  9950  035C  31A8  2080  3180   	fcall	___fltol
  9951  035F  0020               	movlb	0	; select bank0
  9952  0360  085B               	movf	?___fltol+1,w
  9953  0361  0021               	movlb	1	; select bank1
  9954  0362  00C4               	movwf	(efgtoa@d+1)^(0+128)
  9955  0363  0020               	movlb	0	; select bank0
  9956  0364  085A               	movf	?___fltol,w
  9957  0365  0021               	movlb	1	; select bank1
  9958  0366  00C3               	movwf	efgtoa@d^(0+128)
  9959                           
  9960                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  9961  0367  0854               	movf	(efgtoa@l+3)^(0+128),w
  9962  0368  0020               	movlb	0	; select bank0
  9963  0369  00AD               	movwf	___flmul@a+3
  9964  036A  0021               	movlb	1	; select bank1
  9965  036B  0853               	movf	(efgtoa@l+2)^(0+128),w
  9966  036C  0020               	movlb	0	; select bank0
  9967  036D  00AC               	movwf	___flmul@a+2
  9968  036E  0021               	movlb	1	; select bank1
  9969  036F  0852               	movf	(efgtoa@l+1)^(0+128),w
  9970  0370  0020               	movlb	0	; select bank0
  9971  0371  00AB               	movwf	___flmul@a+1
  9972  0372  0021               	movlb	1	; select bank1
  9973  0373  0851               	movf	efgtoa@l^(0+128),w
  9974  0374  0020               	movlb	0	; select bank0
  9975  0375  00AA               	movwf	___flmul@a
  9976  0376  0021               	movlb	1	; select bank1
  9977  0377  0862               	movf	(efgtoa@u+3)^(0+128),w
  9978  0378  0020               	movlb	0	; select bank0
  9979  0379  00A9               	movwf	___flmul@b+3
  9980  037A  0021               	movlb	1	; select bank1
  9981  037B  0861               	movf	(efgtoa@u+2)^(0+128),w
  9982  037C  0020               	movlb	0	; select bank0
  9983  037D  00A8               	movwf	___flmul@b+2
  9984  037E  0021               	movlb	1	; select bank1
  9985  037F  0860               	movf	(efgtoa@u+1)^(0+128),w
  9986  0380  0020               	movlb	0	; select bank0
  9987  0381  00A7               	movwf	___flmul@b+1
  9988  0382  0021               	movlb	1	; select bank1
  9989  0383  085F               	movf	efgtoa@u^(0+128),w
  9990  0384  0020               	movlb	0	; select bank0
  9991  0385  00A6               	movwf	___flmul@b
  9992  0386  3195  25D4  3180   	fcall	___flmul
  9993  0389  0020               	movlb	0	; select bank0
  9994  038A  0829               	movf	?___flmul+3,w
  9995  038B  00C3               	movwf	___flsub@a+3
  9996  038C  0828               	movf	?___flmul+2,w
  9997  038D  00C2               	movwf	___flsub@a+2
  9998  038E  0827               	movf	?___flmul+1,w
  9999  038F  00C1               	movwf	___flsub@a+1
 10000  0390  0826               	movf	?___flmul,w
 10001  0391  00C0               	movwf	___flsub@a
 10002  0392  0021               	movlb	1	; select bank1
 10003  0393  0850               	movf	(efgtoa@h+3)^(0+128),w
 10004  0394  0020               	movlb	0	; select bank0
 10005  0395  00C7               	movwf	___flsub@b+3
 10006  0396  0021               	movlb	1	; select bank1
 10007  0397  084F               	movf	(efgtoa@h+2)^(0+128),w
 10008  0398  0020               	movlb	0	; select bank0
 10009  0399  00C6               	movwf	___flsub@b+2
 10010  039A  0021               	movlb	1	; select bank1
 10011  039B  084E               	movf	(efgtoa@h+1)^(0+128),w
 10012  039C  0020               	movlb	0	; select bank0
 10013  039D  00C5               	movwf	___flsub@b+1
 10014  039E  0021               	movlb	1	; select bank1
 10015  039F  084D               	movf	efgtoa@h^(0+128),w
 10016  03A0  0020               	movlb	0	; select bank0
 10017  03A1  00C4               	movwf	___flsub@b
 10018  03A2  31B4  249A  3180   	fcall	___flsub
 10019  03A5  0020               	movlb	0	; select bank0
 10020  03A6  0843               	movf	?___flsub+3,w
 10021  03A7  0021               	movlb	1	; select bank1
 10022  03A8  00D0               	movwf	(efgtoa@h+3)^(0+128)
 10023  03A9  0020               	movlb	0	; select bank0
 10024  03AA  0842               	movf	?___flsub+2,w
 10025  03AB  0021               	movlb	1	; select bank1
 10026  03AC  00CF               	movwf	(efgtoa@h+2)^(0+128)
 10027  03AD  0020               	movlb	0	; select bank0
 10028  03AE  0841               	movf	?___flsub+1,w
 10029  03AF  0021               	movlb	1	; select bank1
 10030  03B0  00CE               	movwf	(efgtoa@h+1)^(0+128)
 10031  03B1  0020               	movlb	0	; select bank0
 10032  03B2  0840               	movf	?___flsub,w
 10033  03B3  0021               	movlb	1	; select bank1
 10034  03B4  00CD               	movwf	efgtoa@h^(0+128)
 10035                           
 10036                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
 10037  03B5  3041               	movlw	65
 10038  03B6  0020               	movlb	0	; select bank0
 10039  03B7  00C3               	movwf	___fldiv@a+3
 10040  03B8  3020               	movlw	32
 10041  03B9  00C2               	movwf	___fldiv@a+2
 10042  03BA  3000               	movlw	0
 10043  03BB  00C1               	movwf	___fldiv@a+1
 10044  03BC  3000               	movlw	0
 10045  03BD  00C0               	movwf	___fldiv@a
 10046  03BE  0021               	movlb	1	; select bank1
 10047  03BF  0862               	movf	(efgtoa@u+3)^(0+128),w
 10048  03C0  0020               	movlb	0	; select bank0
 10049  03C1  00C7               	movwf	___fldiv@b+3
 10050  03C2  0021               	movlb	1	; select bank1
 10051  03C3  0861               	movf	(efgtoa@u+2)^(0+128),w
 10052  03C4  0020               	movlb	0	; select bank0
 10053  03C5  00C6               	movwf	___fldiv@b+2
 10054  03C6  0021               	movlb	1	; select bank1
 10055  03C7  0860               	movf	(efgtoa@u+1)^(0+128),w
 10056  03C8  0020               	movlb	0	; select bank0
 10057  03C9  00C5               	movwf	___fldiv@b+1
 10058  03CA  0021               	movlb	1	; select bank1
 10059  03CB  085F               	movf	efgtoa@u^(0+128),w
 10060  03CC  0020               	movlb	0	; select bank0
 10061  03CD  00C4               	movwf	___fldiv@b
 10062  03CE  3190  2052  3180   	fcall	___fldiv
 10063  03D1  0020               	movlb	0	; select bank0
 10064  03D2  0843               	movf	?___fldiv+3,w
 10065  03D3  0021               	movlb	1	; select bank1
 10066  03D4  00E2               	movwf	(efgtoa@u+3)^(0+128)
 10067  03D5  0020               	movlb	0	; select bank0
 10068  03D6  0842               	movf	?___fldiv+2,w
 10069  03D7  0021               	movlb	1	; select bank1
 10070  03D8  00E1               	movwf	(efgtoa@u+2)^(0+128)
 10071  03D9  0020               	movlb	0	; select bank0
 10072  03DA  0841               	movf	?___fldiv+1,w
 10073  03DB  0021               	movlb	1	; select bank1
 10074  03DC  00E0               	movwf	(efgtoa@u+1)^(0+128)
 10075  03DD  0020               	movlb	0	; select bank0
 10076  03DE  0840               	movf	?___fldiv,w
 10077  03DF  0021               	movlb	1	; select bank1
 10078  03E0  00DF               	movwf	efgtoa@u^(0+128)
 10079                           
 10080                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
 10081  03E1  3001               	movlw	1
 10082  03E2  07D5               	addwf	efgtoa@i^(0+128),f
 10083  03E3  3000               	movlw	0
 10084  03E4  3DD6               	addwfc	(efgtoa@i+1)^(0+128),f
 10085  03E5  2B02               	goto	l7436
 10086  03E6                     l7438:	
 10087                           
 10088                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
 10089  03E6  3040               	movlw	64
 10090  03E7  0020               	movlb	0	; select bank0
 10091  03E8  00A9               	movwf	___flmul@b+3
 10092  03E9  30A0               	movlw	160
 10093  03EA  00A8               	movwf	___flmul@b+2
 10094  03EB  3000               	movlw	0
 10095  03EC  00A7               	movwf	___flmul@b+1
 10096  03ED  3000               	movlw	0
 10097  03EE  00A6               	movwf	___flmul@b
 10098  03EF  0021               	movlb	1	; select bank1
 10099  03F0  0862               	movf	(efgtoa@u+3)^(0+128),w
 10100  03F1  0020               	movlb	0	; select bank0
 10101  03F2  00AD               	movwf	___flmul@a+3
 10102  03F3  0021               	movlb	1	; select bank1
 10103  03F4  0861               	movf	(efgtoa@u+2)^(0+128),w
 10104  03F5  0020               	movlb	0	; select bank0
 10105  03F6  00AC               	movwf	___flmul@a+2
 10106  03F7  0021               	movlb	1	; select bank1
 10107  03F8  0860               	movf	(efgtoa@u+1)^(0+128),w
 10108  03F9  0020               	movlb	0	; select bank0
 10109  03FA  00AB               	movwf	___flmul@a+1
 10110  03FB  0021               	movlb	1	; select bank1
 10111  03FC  085F               	movf	efgtoa@u^(0+128),w
 10112  03FD  0020               	movlb	0	; select bank0
 10113  03FE  00AA               	movwf	___flmul@a
 10114  03FF  3195  25D4  3180   	fcall	___flmul
 10115  0402  0020               	movlb	0	; select bank0
 10116  0403  0829               	movf	?___flmul+3,w
 10117  0404  0021               	movlb	1	; select bank1
 10118  0405  00D4               	movwf	(efgtoa@l+3)^(0+128)
 10119  0406  0020               	movlb	0	; select bank0
 10120  0407  0828               	movf	?___flmul+2,w
 10121  0408  0021               	movlb	1	; select bank1
 10122  0409  00D3               	movwf	(efgtoa@l+2)^(0+128)
 10123  040A  0020               	movlb	0	; select bank0
 10124  040B  0827               	movf	?___flmul+1,w
 10125  040C  0021               	movlb	1	; select bank1
 10126  040D  00D2               	movwf	(efgtoa@l+1)^(0+128)
 10127  040E  0020               	movlb	0	; select bank0
 10128  040F  0826               	movf	?___flmul,w
 10129  0410  0021               	movlb	1	; select bank1
 10130  0411  00D1               	movwf	efgtoa@l^(0+128)
 10131                           
 10132                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
 10133  0412  0850               	movf	(efgtoa@h+3)^(0+128),w
 10134  0413  0020               	movlb	0	; select bank0
 10135  0414  00DD               	movwf	___flge@ff1+3
 10136  0415  0021               	movlb	1	; select bank1
 10137  0416  084F               	movf	(efgtoa@h+2)^(0+128),w
 10138  0417  0020               	movlb	0	; select bank0
 10139  0418  00DC               	movwf	___flge@ff1+2
 10140  0419  0021               	movlb	1	; select bank1
 10141  041A  084E               	movf	(efgtoa@h+1)^(0+128),w
 10142  041B  0020               	movlb	0	; select bank0
 10143  041C  00DB               	movwf	___flge@ff1+1
 10144  041D  0021               	movlb	1	; select bank1
 10145  041E  084D               	movf	efgtoa@h^(0+128),w
 10146  041F  0020               	movlb	0	; select bank0
 10147  0420  00DA               	movwf	___flge@ff1
 10148  0421  0021               	movlb	1	; select bank1
 10149  0422  0854               	movf	(efgtoa@l+3)^(0+128),w
 10150  0423  0020               	movlb	0	; select bank0
 10151  0424  00E1               	movwf	___flge@ff2+3
 10152  0425  0021               	movlb	1	; select bank1
 10153  0426  0853               	movf	(efgtoa@l+2)^(0+128),w
 10154  0427  0020               	movlb	0	; select bank0
 10155  0428  00E0               	movwf	___flge@ff2+2
 10156  0429  0021               	movlb	1	; select bank1
 10157  042A  0852               	movf	(efgtoa@l+1)^(0+128),w
 10158  042B  0020               	movlb	0	; select bank0
 10159  042C  00DF               	movwf	___flge@ff2+1
 10160  042D  0021               	movlb	1	; select bank1
 10161  042E  0851               	movf	efgtoa@l^(0+128),w
 10162  042F  0020               	movlb	0	; select bank0
 10163  0430  00DE               	movwf	___flge@ff2
 10164  0431  31A9  21C7  3180   	fcall	___flge
 10165  0434  1803               	btfsc	3,0
 10166  0435  2C39               	goto	l7442
 10167                           
 10168                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
 10169  0436  3000               	movlw	0
 10170  0437  0021               	movlb	1	; select bank1
 10171  0438  2C53               	goto	L7
 10172  0439                     l7442:	
 10173                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
 10174                           
 10175                           
 10176                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
 10177  0439  0021               	movlb	1	; select bank1
 10178  043A  0850               	movf	(efgtoa@h+3)^(0+128),w
 10179  043B  00F4               	movwf	___fleq@ff1+3
 10180  043C  084F               	movf	(efgtoa@h+2)^(0+128),w
 10181  043D  00F3               	movwf	___fleq@ff1+2
 10182  043E  084E               	movf	(efgtoa@h+1)^(0+128),w
 10183  043F  00F2               	movwf	___fleq@ff1+1
 10184  0440  084D               	movf	efgtoa@h^(0+128),w
 10185  0441  00F1               	movwf	___fleq@ff1
 10186  0442  0854               	movf	(efgtoa@l+3)^(0+128),w
 10187  0443  00F8               	movwf	___fleq@ff2+3
 10188  0444  0853               	movf	(efgtoa@l+2)^(0+128),w
 10189  0445  00F7               	movwf	___fleq@ff2+2
 10190  0446  0852               	movf	(efgtoa@l+1)^(0+128),w
 10191  0447  00F6               	movwf	___fleq@ff2+1
 10192  0448  0851               	movf	efgtoa@l^(0+128),w
 10193  0449  00F5               	movwf	___fleq@ff2
 10194  044A  31B6  2675  3180   	fcall	___fleq
 10195  044D  1C03               	btfss	3,0
 10196  044E  2C5A               	goto	l7448
 10197  044F  0021               	movlb	1	; select bank1
 10198  0450  1843               	btfsc	efgtoa@d^(0+128),0
 10199  0451  2C5A               	goto	l7448
 10200                           
 10201                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
 10202  0452  3000               	movlw	0
 10203  0453                     L7:	
 10204  0453  00D4               	movwf	(efgtoa@l+3)^(0+128)
 10205  0454  3000               	movlw	0
 10206  0455  00D3               	movwf	(efgtoa@l+2)^(0+128)
 10207  0456  3000               	movlw	0
 10208  0457  00D2               	movwf	(efgtoa@l+1)^(0+128)
 10209  0458  3000               	movlw	0
 10210  0459  00D1               	movwf	efgtoa@l^(0+128)
 10211  045A                     l7448:	
 10212                           
 10213                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
 10214  045A  0021               	movlb	1	; select bank1
 10215  045B  0854               	movf	(efgtoa@l+3)^(0+128),w
 10216  045C  00F4               	movwf	___fladd@b+3
 10217  045D  0853               	movf	(efgtoa@l+2)^(0+128),w
 10218  045E  00F3               	movwf	___fladd@b+2
 10219  045F  0852               	movf	(efgtoa@l+1)^(0+128),w
 10220  0460  00F2               	movwf	___fladd@b+1
 10221  0461  0851               	movf	efgtoa@l^(0+128),w
 10222  0462  00F1               	movwf	___fladd@b
 10223  0463  085A               	movf	(efgtoa@g+3)^(0+128),w
 10224  0464  00F8               	movwf	___fladd@a+3
 10225  0465  0859               	movf	(efgtoa@g+2)^(0+128),w
 10226  0466  00F7               	movwf	___fladd@a+2
 10227  0467  0858               	movf	(efgtoa@g+1)^(0+128),w
 10228  0468  00F6               	movwf	___fladd@a+1
 10229  0469  0857               	movf	efgtoa@g^(0+128),w
 10230  046A  00F5               	movwf	___fladd@a
 10231  046B  319E  261E  3180   	fcall	___fladd
 10232  046E  0874               	movf	?___fladd+3,w
 10233  046F  0021               	movlb	1	; select bank1
 10234  0470  00D0               	movwf	(efgtoa@h+3)^(0+128)
 10235  0471  0873               	movf	?___fladd+2,w
 10236  0472  00CF               	movwf	(efgtoa@h+2)^(0+128)
 10237  0473  0872               	movf	?___fladd+1,w
 10238  0474  00CE               	movwf	(efgtoa@h+1)^(0+128)
 10239  0475  0871               	movf	?___fladd,w
 10240  0476  00CD               	movwf	efgtoa@h^(0+128)
 10241                           
 10242                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
 10243  0477  082E               	movf	(efgtoa@ou+3)^(0+128),w
 10244  0478  00E2               	movwf	(efgtoa@u+3)^(0+128)
 10245  0479  082D               	movf	(efgtoa@ou+2)^(0+128),w
 10246  047A  00E1               	movwf	(efgtoa@u+2)^(0+128)
 10247  047B  082C               	movf	(efgtoa@ou+1)^(0+128),w
 10248  047C  00E0               	movwf	(efgtoa@u+1)^(0+128)
 10249  047D  082B               	movf	efgtoa@ou^(0+128),w
 10250  047E  00DF               	movwf	efgtoa@u^(0+128)
 10251                           
 10252                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
 10253  047F  3065               	movlw	101
 10254  0480  0649               	xorwf	efgtoa@nmode^(0+128),w
 10255  0481  1903               	btfsc	3,2
 10256  0482  2C88               	goto	l7456
 10257  0483  085C               	movf	(efgtoa@e+1)^(0+128),w
 10258  0484  00C2               	movwf	(efgtoa@ne+1)^(0+128)
 10259  0485  085B               	movf	efgtoa@e^(0+128),w
 10260  0486  00C1               	movwf	efgtoa@ne^(0+128)
 10261  0487  2C8A               	goto	l656
 10262  0488                     l7456:	
 10263  0488  01C1               	clrf	efgtoa@ne^(0+128)
 10264  0489  01C2               	clrf	(efgtoa@ne+1)^(0+128)
 10265  048A                     l656:	
 10266                           
 10267                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
 10268  048A  01BD               	clrf	efgtoa@pp^(0+128)
 10269  048B  01BE               	clrf	(efgtoa@pp+1)^(0+128)
 10270                           
 10271                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
 10272  048C  01BB               	clrf	efgtoa@t^(0+128)
 10273  048D  01BC               	clrf	(efgtoa@t+1)^(0+128)
 10274                           
 10275                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
 10276  048E  01D5               	clrf	efgtoa@i^(0+128)
 10277  048F  01D6               	clrf	(efgtoa@i+1)^(0+128)
 10278                           
 10279                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
 10280  0490  2DC5               	goto	l7506
 10281  0491                     l7458:	
 10282                           
 10283                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
 10284  0491  0021               	movlb	1	; select bank1
 10285  0492  0862               	movf	(efgtoa@u+3)^(0+128),w
 10286  0493  0020               	movlb	0	; select bank0
 10287  0494  00C3               	movwf	___fldiv@a+3
 10288  0495  0021               	movlb	1	; select bank1
 10289  0496  0861               	movf	(efgtoa@u+2)^(0+128),w
 10290  0497  0020               	movlb	0	; select bank0
 10291  0498  00C2               	movwf	___fldiv@a+2
 10292  0499  0021               	movlb	1	; select bank1
 10293  049A  0860               	movf	(efgtoa@u+1)^(0+128),w
 10294  049B  0020               	movlb	0	; select bank0
 10295  049C  00C1               	movwf	___fldiv@a+1
 10296  049D  0021               	movlb	1	; select bank1
 10297  049E  085F               	movf	efgtoa@u^(0+128),w
 10298  049F  0020               	movlb	0	; select bank0
 10299  04A0  00C0               	movwf	___fldiv@a
 10300  04A1  0021               	movlb	1	; select bank1
 10301  04A2  0850               	movf	(efgtoa@h+3)^(0+128),w
 10302  04A3  0020               	movlb	0	; select bank0
 10303  04A4  00C7               	movwf	___fldiv@b+3
 10304  04A5  0021               	movlb	1	; select bank1
 10305  04A6  084F               	movf	(efgtoa@h+2)^(0+128),w
 10306  04A7  0020               	movlb	0	; select bank0
 10307  04A8  00C6               	movwf	___fldiv@b+2
 10308  04A9  0021               	movlb	1	; select bank1
 10309  04AA  084E               	movf	(efgtoa@h+1)^(0+128),w
 10310  04AB  0020               	movlb	0	; select bank0
 10311  04AC  00C5               	movwf	___fldiv@b+1
 10312  04AD  0021               	movlb	1	; select bank1
 10313  04AE  084D               	movf	efgtoa@h^(0+128),w
 10314  04AF  0020               	movlb	0	; select bank0
 10315  04B0  00C4               	movwf	___fldiv@b
 10316  04B1  3190  2052  3180   	fcall	___fldiv
 10317  04B4  0020               	movlb	0	; select bank0
 10318  04B5  0843               	movf	?___fldiv+3,w
 10319  04B6  00DD               	movwf	floorf@x+3
 10320  04B7  0842               	movf	?___fldiv+2,w
 10321  04B8  00DC               	movwf	floorf@x+2
 10322  04B9  0841               	movf	?___fldiv+1,w
 10323  04BA  00DB               	movwf	floorf@x+1
 10324  04BB  0840               	movf	?___fldiv,w
 10325  04BC  00DA               	movwf	floorf@x
 10326  04BD  31A2  22A1  3180   	fcall	_floorf
 10327  04C0  0020               	movlb	0	; select bank0
 10328  04C1  085D               	movf	?_floorf+3,w
 10329  04C2  0021               	movlb	1	; select bank1
 10330  04C3  00D4               	movwf	(efgtoa@l+3)^(0+128)
 10331  04C4  0020               	movlb	0	; select bank0
 10332  04C5  085C               	movf	?_floorf+2,w
 10333  04C6  0021               	movlb	1	; select bank1
 10334  04C7  00D3               	movwf	(efgtoa@l+2)^(0+128)
 10335  04C8  0020               	movlb	0	; select bank0
 10336  04C9  085B               	movf	?_floorf+1,w
 10337  04CA  0021               	movlb	1	; select bank1
 10338  04CB  00D2               	movwf	(efgtoa@l+1)^(0+128)
 10339  04CC  0020               	movlb	0	; select bank0
 10340  04CD  085A               	movf	?_floorf,w
 10341  04CE  0021               	movlb	1	; select bank1
 10342  04CF  00D1               	movwf	efgtoa@l^(0+128)
 10343                           
 10344                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
 10345  04D0  0854               	movf	(efgtoa@l+3)^(0+128),w
 10346  04D1  0020               	movlb	0	; select bank0
 10347  04D2  00DD               	movwf	___fltol@f1+3
 10348  04D3  0021               	movlb	1	; select bank1
 10349  04D4  0853               	movf	(efgtoa@l+2)^(0+128),w
 10350  04D5  0020               	movlb	0	; select bank0
 10351  04D6  00DC               	movwf	___fltol@f1+2
 10352  04D7  0021               	movlb	1	; select bank1
 10353  04D8  0852               	movf	(efgtoa@l+1)^(0+128),w
 10354  04D9  0020               	movlb	0	; select bank0
 10355  04DA  00DB               	movwf	___fltol@f1+1
 10356  04DB  0021               	movlb	1	; select bank1
 10357  04DC  0851               	movf	efgtoa@l^(0+128),w
 10358  04DD  0020               	movlb	0	; select bank0
 10359  04DE  00DA               	movwf	___fltol@f1
 10360  04DF  31A8  2080  3180   	fcall	___fltol
 10361  04E2  0020               	movlb	0	; select bank0
 10362  04E3  085B               	movf	?___fltol+1,w
 10363  04E4  0021               	movlb	1	; select bank1
 10364  04E5  00C4               	movwf	(efgtoa@d+1)^(0+128)
 10365  04E6  0020               	movlb	0	; select bank0
 10366  04E7  085A               	movf	?___fltol,w
 10367  04E8  0021               	movlb	1	; select bank1
 10368  04E9  00C3               	movwf	efgtoa@d^(0+128)
 10369                           
 10370                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
 10371  04EA  0023               	movlb	3	; select bank3
 10372  04EB  1A42               	btfsc	_flags^(0+384),4
 10373  04EC  2CFC               	goto	l7470
 10374  04ED  0021               	movlb	1	; select bank1
 10375  04EE  0843               	movf	efgtoa@d^(0+128),w
 10376  04EF  0444               	iorwf	(efgtoa@d+1)^(0+128),w
 10377  04F0  1D03               	btfss	3,2
 10378  04F1  2CFC               	goto	l7470
 10379  04F2  3067               	movlw	103
 10380  04F3  064C               	xorwf	efgtoa@mode^(0+128),w
 10381  04F4  1903               	btfsc	3,2
 10382  04F5  1FC2               	btfss	(efgtoa@ne+1)^(0+128),7
 10383  04F6  2CFC               	goto	l7470
 10384                           
 10385                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
 10386  04F7  3001               	movlw	1
 10387  04F8  07BB               	addwf	efgtoa@t^(0+128),f
 10388  04F9  3000               	movlw	0
 10389  04FA  3DBC               	addwfc	(efgtoa@t+1)^(0+128),f
 10390                           
 10391                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
 10392  04FB  2D43               	goto	l7498
 10393  04FC                     l7470:	
 10394                           
 10395                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
 10396  04FC  0021               	movlb	1	; select bank1
 10397  04FD  083D               	movf	efgtoa@pp^(0+128),w
 10398  04FE  043E               	iorwf	(efgtoa@pp+1)^(0+128),w
 10399  04FF  1903               	btfsc	3,2
 10400  0500  1FC2               	btfss	(efgtoa@ne+1)^(0+128),7
 10401  0501  2D17               	goto	l7490
 10402                           
 10403                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
 10404  0502  302E               	movlw	46
 10405  0503  00A7               	movwf	??_efgtoa^(0+128)
 10406  0504  085D               	movf	efgtoa@n^(0+128),w
 10407  0505  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10408  0506  0086               	movwf	6
 10409  0507  3002               	movlw	2	; select bank4/5
 10410  0508  0087               	movwf	7
 10411  0509  0827               	movf	??_efgtoa^(0+128),w
 10412  050A  0081               	movwf	1
 10413  050B  3001               	movlw	1
 10414  050C  07DD               	addwf	efgtoa@n^(0+128),f
 10415  050D  3000               	movlw	0
 10416  050E  3DDE               	addwfc	(efgtoa@n+1)^(0+128),f
 10417                           
 10418                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
 10419  050F  30FF               	movlw	255
 10420  0510  07CA               	addwf	efgtoa@w^(0+128),f
 10421  0511  30FF               	movlw	255
 10422  0512  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
 10423                           
 10424                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
 10425  0513  3001               	movlw	1
 10426  0514  00BD               	movwf	efgtoa@pp^(0+128)
 10427  0515  3000               	movlw	0
 10428  0516  00BE               	movwf	(efgtoa@pp^(0+128)+1)
 10429  0517                     l7490:	
 10430                           
 10431                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
 10432  0517  083B               	movf	efgtoa@t^(0+128),w
 10433  0518  043C               	iorwf	(efgtoa@t+1)^(0+128),w
 10434  0519  1903               	btfsc	3,2
 10435  051A  2D31               	goto	l7492
 10436                           
 10437                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
 10438  051B  3030               	movlw	48
 10439  051C  00A7               	movwf	??_efgtoa^(0+128)
 10440  051D  085D               	movf	efgtoa@n^(0+128),w
 10441  051E  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10442  051F  0086               	movwf	6
 10443  0520  3002               	movlw	2	; select bank4/5
 10444  0521  0087               	movwf	7
 10445  0522  0827               	movf	??_efgtoa^(0+128),w
 10446  0523  0081               	movwf	1
 10447  0524  3001               	movlw	1
 10448  0525  07DD               	addwf	efgtoa@n^(0+128),f
 10449  0526  3000               	movlw	0
 10450  0527  3DDE               	addwfc	(efgtoa@n+1)^(0+128),f
 10451                           
 10452                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
 10453  0528  30FF               	movlw	255
 10454  0529  07CA               	addwf	efgtoa@w^(0+128),f
 10455  052A  30FF               	movlw	255
 10456  052B  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
 10457                           
 10458                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
 10459  052C  30FF               	movlw	255
 10460  052D  07BB               	addwf	efgtoa@t^(0+128),f
 10461  052E  30FF               	movlw	255
 10462  052F  3DBC               	addwfc	(efgtoa@t+1)^(0+128),f
 10463  0530  2D17               	goto	l7490
 10464  0531                     l7492:	
 10465                           
 10466                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
 10467  0531  0843               	movf	efgtoa@d^(0+128),w
 10468  0532  3E30               	addlw	48
 10469  0533  00A7               	movwf	??_efgtoa^(0+128)
 10470  0534  085D               	movf	efgtoa@n^(0+128),w
 10471  0535  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10472  0536  0086               	movwf	6
 10473  0537  3002               	movlw	2	; select bank4/5
 10474  0538  0087               	movwf	7
 10475  0539  0827               	movf	??_efgtoa^(0+128),w
 10476  053A  0081               	movwf	1
 10477  053B  3001               	movlw	1
 10478  053C  07DD               	addwf	efgtoa@n^(0+128),f
 10479  053D  3000               	movlw	0
 10480  053E  3DDE               	addwfc	(efgtoa@n+1)^(0+128),f
 10481                           
 10482                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
 10483  053F  30FF               	movlw	255
 10484  0540  07CA               	addwf	efgtoa@w^(0+128),f
 10485  0541  30FF               	movlw	255
 10486  0542  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
 10487  0543                     l7498:	
 10488                           
 10489                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
 10490  0543  0854               	movf	(efgtoa@l+3)^(0+128),w
 10491  0544  0020               	movlb	0	; select bank0
 10492  0545  00AD               	movwf	___flmul@a+3
 10493  0546  0021               	movlb	1	; select bank1
 10494  0547  0853               	movf	(efgtoa@l+2)^(0+128),w
 10495  0548  0020               	movlb	0	; select bank0
 10496  0549  00AC               	movwf	___flmul@a+2
 10497  054A  0021               	movlb	1	; select bank1
 10498  054B  0852               	movf	(efgtoa@l+1)^(0+128),w
 10499  054C  0020               	movlb	0	; select bank0
 10500  054D  00AB               	movwf	___flmul@a+1
 10501  054E  0021               	movlb	1	; select bank1
 10502  054F  0851               	movf	efgtoa@l^(0+128),w
 10503  0550  0020               	movlb	0	; select bank0
 10504  0551  00AA               	movwf	___flmul@a
 10505  0552  0021               	movlb	1	; select bank1
 10506  0553  0862               	movf	(efgtoa@u+3)^(0+128),w
 10507  0554  0020               	movlb	0	; select bank0
 10508  0555  00A9               	movwf	___flmul@b+3
 10509  0556  0021               	movlb	1	; select bank1
 10510  0557  0861               	movf	(efgtoa@u+2)^(0+128),w
 10511  0558  0020               	movlb	0	; select bank0
 10512  0559  00A8               	movwf	___flmul@b+2
 10513  055A  0021               	movlb	1	; select bank1
 10514  055B  0860               	movf	(efgtoa@u+1)^(0+128),w
 10515  055C  0020               	movlb	0	; select bank0
 10516  055D  00A7               	movwf	___flmul@b+1
 10517  055E  0021               	movlb	1	; select bank1
 10518  055F  085F               	movf	efgtoa@u^(0+128),w
 10519  0560  0020               	movlb	0	; select bank0
 10520  0561  00A6               	movwf	___flmul@b
 10521  0562  3195  25D4  3180   	fcall	___flmul
 10522  0565  0020               	movlb	0	; select bank0
 10523  0566  0829               	movf	?___flmul+3,w
 10524  0567  00C3               	movwf	___flsub@a+3
 10525  0568  0828               	movf	?___flmul+2,w
 10526  0569  00C2               	movwf	___flsub@a+2
 10527  056A  0827               	movf	?___flmul+1,w
 10528  056B  00C1               	movwf	___flsub@a+1
 10529  056C  0826               	movf	?___flmul,w
 10530  056D  00C0               	movwf	___flsub@a
 10531  056E  0021               	movlb	1	; select bank1
 10532  056F  0850               	movf	(efgtoa@h+3)^(0+128),w
 10533  0570  0020               	movlb	0	; select bank0
 10534  0571  00C7               	movwf	___flsub@b+3
 10535  0572  0021               	movlb	1	; select bank1
 10536  0573  084F               	movf	(efgtoa@h+2)^(0+128),w
 10537  0574  0020               	movlb	0	; select bank0
 10538  0575  00C6               	movwf	___flsub@b+2
 10539  0576  0021               	movlb	1	; select bank1
 10540  0577  084E               	movf	(efgtoa@h+1)^(0+128),w
 10541  0578  0020               	movlb	0	; select bank0
 10542  0579  00C5               	movwf	___flsub@b+1
 10543  057A  0021               	movlb	1	; select bank1
 10544  057B  084D               	movf	efgtoa@h^(0+128),w
 10545  057C  0020               	movlb	0	; select bank0
 10546  057D  00C4               	movwf	___flsub@b
 10547  057E  31B4  249A  3180   	fcall	___flsub
 10548  0581  0020               	movlb	0	; select bank0
 10549  0582  0843               	movf	?___flsub+3,w
 10550  0583  0021               	movlb	1	; select bank1
 10551  0584  00D0               	movwf	(efgtoa@h+3)^(0+128)
 10552  0585  0020               	movlb	0	; select bank0
 10553  0586  0842               	movf	?___flsub+2,w
 10554  0587  0021               	movlb	1	; select bank1
 10555  0588  00CF               	movwf	(efgtoa@h+2)^(0+128)
 10556  0589  0020               	movlb	0	; select bank0
 10557  058A  0841               	movf	?___flsub+1,w
 10558  058B  0021               	movlb	1	; select bank1
 10559  058C  00CE               	movwf	(efgtoa@h+1)^(0+128)
 10560  058D  0020               	movlb	0	; select bank0
 10561  058E  0840               	movf	?___flsub,w
 10562  058F  0021               	movlb	1	; select bank1
 10563  0590  00CD               	movwf	efgtoa@h^(0+128)
 10564                           
 10565                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
 10566  0591  3041               	movlw	65
 10567  0592  0020               	movlb	0	; select bank0
 10568  0593  00C3               	movwf	___fldiv@a+3
 10569  0594  3020               	movlw	32
 10570  0595  00C2               	movwf	___fldiv@a+2
 10571  0596  3000               	movlw	0
 10572  0597  00C1               	movwf	___fldiv@a+1
 10573  0598  3000               	movlw	0
 10574  0599  00C0               	movwf	___fldiv@a
 10575  059A  0021               	movlb	1	; select bank1
 10576  059B  0862               	movf	(efgtoa@u+3)^(0+128),w
 10577  059C  0020               	movlb	0	; select bank0
 10578  059D  00C7               	movwf	___fldiv@b+3
 10579  059E  0021               	movlb	1	; select bank1
 10580  059F  0861               	movf	(efgtoa@u+2)^(0+128),w
 10581  05A0  0020               	movlb	0	; select bank0
 10582  05A1  00C6               	movwf	___fldiv@b+2
 10583  05A2  0021               	movlb	1	; select bank1
 10584  05A3  0860               	movf	(efgtoa@u+1)^(0+128),w
 10585  05A4  0020               	movlb	0	; select bank0
 10586  05A5  00C5               	movwf	___fldiv@b+1
 10587  05A6  0021               	movlb	1	; select bank1
 10588  05A7  085F               	movf	efgtoa@u^(0+128),w
 10589  05A8  0020               	movlb	0	; select bank0
 10590  05A9  00C4               	movwf	___fldiv@b
 10591  05AA  3190  2052  3180   	fcall	___fldiv
 10592  05AD  0020               	movlb	0	; select bank0
 10593  05AE  0843               	movf	?___fldiv+3,w
 10594  05AF  0021               	movlb	1	; select bank1
 10595  05B0  00E2               	movwf	(efgtoa@u+3)^(0+128)
 10596  05B1  0020               	movlb	0	; select bank0
 10597  05B2  0842               	movf	?___fldiv+2,w
 10598  05B3  0021               	movlb	1	; select bank1
 10599  05B4  00E1               	movwf	(efgtoa@u+2)^(0+128)
 10600  05B5  0020               	movlb	0	; select bank0
 10601  05B6  0841               	movf	?___fldiv+1,w
 10602  05B7  0021               	movlb	1	; select bank1
 10603  05B8  00E0               	movwf	(efgtoa@u+1)^(0+128)
 10604  05B9  0020               	movlb	0	; select bank0
 10605  05BA  0840               	movf	?___fldiv,w
 10606  05BB  0021               	movlb	1	; select bank1
 10607  05BC  00DF               	movwf	efgtoa@u^(0+128)
 10608                           
 10609                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
 10610  05BD  30FF               	movlw	255
 10611  05BE  07C1               	addwf	efgtoa@ne^(0+128),f
 10612  05BF  30FF               	movlw	255
 10613  05C0  3DC2               	addwfc	(efgtoa@ne+1)^(0+128),f
 10614                           
 10615                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
 10616  05C1  3001               	movlw	1
 10617  05C2  07D5               	addwf	efgtoa@i^(0+128),f
 10618  05C3  3000               	movlw	0
 10619  05C4  3DD6               	addwfc	(efgtoa@i+1)^(0+128),f
 10620  05C5                     l7506:	
 10621                           
 10622                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
 10623  05C5  0856               	movf	(efgtoa@i+1)^(0+128),w
 10624  05C6  3A80               	xorlw	128
 10625  05C7  00A7               	movwf	??_efgtoa^(0+128)
 10626  05C8  0840               	movf	(efgtoa@m+1)^(0+128),w
 10627  05C9  3A80               	xorlw	128
 10628  05CA  0227               	subwf	??_efgtoa^(0+128),w
 10629  05CB  1D03               	skipz
 10630  05CC  2DCF               	goto	u10685
 10631  05CD  083F               	movf	efgtoa@m^(0+128),w
 10632  05CE  0255               	subwf	efgtoa@i^(0+128),w
 10633  05CF                     u10685:	
 10634  05CF  1803               	skipnc
 10635  05D0  2DDD               	goto	l7510
 10636  05D1  0021               	movlb	1	; select bank1
 10637  05D2  085E               	movf	(efgtoa@n+1)^(0+128),w
 10638  05D3  3A80               	xorlw	128
 10639  05D4  00A7               	movwf	??_efgtoa^(0+128)
 10640  05D5  3080               	movlw	128
 10641  05D6  0227               	subwf	??_efgtoa^(0+128),w
 10642  05D7  1D03               	skipz
 10643  05D8  2DDB               	goto	u10695
 10644  05D9  304B               	movlw	75
 10645  05DA  025D               	subwf	efgtoa@n^(0+128),w
 10646  05DB                     u10695:	
 10647  05DB  1C03               	skipc
 10648  05DC  2C91               	goto	l7458
 10649  05DD                     l7510:	
 10650                           
 10651                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
 10652  05DD  0021               	movlb	1	; select bank1
 10653  05DE  083D               	movf	efgtoa@pp^(0+128),w
 10654  05DF  043E               	iorwf	(efgtoa@pp+1)^(0+128),w
 10655  05E0  1D03               	btfss	3,2
 10656  05E1  2DF3               	goto	l7518
 10657  05E2  0023               	movlb	3	; select bank3
 10658  05E3  1E42               	btfss	_flags^(0+384),4
 10659  05E4  2DF3               	goto	l7518
 10660                           
 10661                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
 10662  05E5  302E               	movlw	46
 10663  05E6  0021               	movlb	1	; select bank1
 10664  05E7  00A7               	movwf	??_efgtoa^(0+128)
 10665  05E8  085D               	movf	efgtoa@n^(0+128),w
 10666  05E9  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10667  05EA  0086               	movwf	6
 10668  05EB  3002               	movlw	2	; select bank4/5
 10669  05EC  0087               	movwf	7
 10670  05ED  0827               	movf	??_efgtoa^(0+128),w
 10671  05EE  0081               	movwf	1
 10672  05EF  3001               	movlw	1
 10673  05F0  07DD               	addwf	efgtoa@n^(0+128),f
 10674  05F1  3000               	movlw	0
 10675  05F2  3DDE               	addwfc	(efgtoa@n+1)^(0+128),f
 10676  05F3                     l7518:	
 10677                           
 10678                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
 10679  05F3  0021               	movlb	1	; select bank1
 10680  05F4  085D               	movf	efgtoa@n^(0+128),w
 10681  05F5  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10682  05F6  0086               	movwf	6
 10683  05F7  3002               	movlw	2	; select bank4/5
 10684  05F8  0087               	movwf	7
 10685  05F9  0181               	clrf	1
 10686                           
 10687                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
 10688  05FA  3065               	movlw	101
 10689  05FB  0649               	xorwf	efgtoa@nmode^(0+128),w
 10690  05FC  1D03               	btfss	3,2
 10691  05FD  2EB4               	goto	l7580
 10692                           
 10693                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
 10694  05FE  304F               	movlw	79
 10695  05FF  00D5               	movwf	efgtoa@i^(0+128)
 10696  0600  3000               	movlw	0
 10697  0601  00D6               	movwf	(efgtoa@i^(0+128)+1)
 10698                           
 10699                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
 10700  0602  0855               	movf	efgtoa@i^(0+128),w
 10701  0603  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10702  0604  0086               	movwf	6
 10703  0605  3002               	movlw	2	; select bank4/5
 10704  0606  0087               	movwf	7
 10705  0607  0181               	clrf	1
 10706                           
 10707                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
 10708  0608  01C5               	clrf	efgtoa@sign^(0+128)
 10709  0609  01C6               	clrf	(efgtoa@sign+1)^(0+128)
 10710                           
 10711                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
 10712  060A  1FDC               	btfss	(efgtoa@e+1)^(0+128),7
 10713  060B  2E15               	goto	l7534
 10714                           
 10715                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
 10716  060C  3001               	movlw	1
 10717  060D  00C5               	movwf	efgtoa@sign^(0+128)
 10718  060E  3000               	movlw	0
 10719  060F  00C6               	movwf	(efgtoa@sign^(0+128)+1)
 10720                           
 10721                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
 10722  0610  09DB               	comf	efgtoa@e^(0+128),f
 10723  0611  09DC               	comf	(efgtoa@e+1)^(0+128),f
 10724  0612  0ADB               	incf	efgtoa@e^(0+128),f
 10725  0613  1903               	skipnz
 10726  0614  0ADC               	incf	(efgtoa@e+1)^(0+128),f
 10727  0615                     l7534:	
 10728                           
 10729                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
 10730  0615  3002               	movlw	2
 10731  0616  00C7               	movwf	efgtoa@p^(0+128)
 10732  0617  3000               	movlw	0
 10733  0618  00C8               	movwf	(efgtoa@p^(0+128)+1)
 10734  0619                     l7546:	
 10735                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
 10736                           
 10737                           
 10738                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
 10739  0619  085B               	movf	efgtoa@e^(0+128),w
 10740  061A  045C               	iorwf	(efgtoa@e+1)^(0+128),w
 10741  061B  1903               	btfsc	3,2
 10742  061C  2E51               	goto	l7548
 10743  061D                     l7536:	
 10744                           
 10745                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
 10746  061D  30FF               	movlw	255
 10747  061E  0021               	movlb	1	; select bank1
 10748  061F  07D5               	addwf	efgtoa@i^(0+128),f
 10749  0620  30FF               	movlw	255
 10750  0621  3DD6               	addwfc	(efgtoa@i+1)^(0+128),f
 10751                           
 10752                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
 10753  0622  300A               	movlw	10
 10754  0623  00F1               	movwf	___awmod@divisor
 10755  0624  3000               	movlw	0
 10756  0625  00F2               	movwf	___awmod@divisor+1
 10757  0626  085C               	movf	(efgtoa@e+1)^(0+128),w
 10758  0627  00F4               	movwf	___awmod@dividend+1
 10759  0628  085B               	movf	efgtoa@e^(0+128),w
 10760  0629  00F3               	movwf	___awmod@dividend
 10761  062A  31B6  2630  3180   	fcall	___awmod
 10762  062D  0871               	movf	?___awmod,w
 10763  062E  3E30               	addlw	48
 10764  062F  0021               	movlb	1	; select bank1
 10765  0630  00A7               	movwf	??_efgtoa^(0+128)
 10766  0631  0855               	movf	efgtoa@i^(0+128),w
 10767  0632  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10768  0633  0086               	movwf	6
 10769  0634  3002               	movlw	2	; select bank4/5
 10770  0635  0087               	movwf	7
 10771  0636  0827               	movf	??_efgtoa^(0+128),w
 10772  0637  0081               	movwf	1
 10773                           
 10774                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
 10775  0638  300A               	movlw	10
 10776  0639  00F1               	movwf	___awdiv@divisor
 10777  063A  3000               	movlw	0
 10778  063B  00F2               	movwf	___awdiv@divisor+1
 10779  063C  085C               	movf	(efgtoa@e+1)^(0+128),w
 10780  063D  00F4               	movwf	___awdiv@dividend+1
 10781  063E  085B               	movf	efgtoa@e^(0+128),w
 10782  063F  00F3               	movwf	___awdiv@dividend
 10783  0640  31B7  27AF  3180   	fcall	___awdiv
 10784  0643  0872               	movf	?___awdiv+1,w
 10785  0644  0021               	movlb	1	; select bank1
 10786  0645  00DC               	movwf	(efgtoa@e+1)^(0+128)
 10787  0646  0871               	movf	?___awdiv,w
 10788  0647  00DB               	movwf	efgtoa@e^(0+128)
 10789                           
 10790                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
 10791  0648  30FF               	movlw	255
 10792  0649  07C7               	addwf	efgtoa@p^(0+128),f
 10793  064A  30FF               	movlw	255
 10794  064B  3DC8               	addwfc	(efgtoa@p+1)^(0+128),f
 10795                           
 10796                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
 10797  064C  30FF               	movlw	255
 10798  064D  07CA               	addwf	efgtoa@w^(0+128),f
 10799  064E  30FF               	movlw	255
 10800  064F  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
 10801  0650  2E19               	goto	l7546
 10802  0651                     l7548:	
 10803  0651  0848               	movf	(efgtoa@p+1)^(0+128),w
 10804  0652  3A80               	xorlw	128
 10805  0653  00A7               	movwf	??_efgtoa^(0+128)
 10806  0654  3080               	movlw	128
 10807  0655  0227               	subwf	??_efgtoa^(0+128),w
 10808  0656  1D03               	skipz
 10809  0657  2E5A               	goto	u10755
 10810  0658  3001               	movlw	1
 10811  0659  0247               	subwf	efgtoa@p^(0+128),w
 10812  065A                     u10755:	
 10813  065A  1803               	skipnc
 10814  065B  2E1D               	goto	l7536
 10815                           
 10816                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
 10817  065C  30FF               	movlw	255
 10818  065D  0021               	movlb	1	; select bank1
 10819  065E  07D5               	addwf	efgtoa@i^(0+128),f
 10820  065F  30FF               	movlw	255
 10821  0660  3DD6               	addwfc	(efgtoa@i+1)^(0+128),f
 10822                           
 10823                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
 10824  0661  0845               	movf	efgtoa@sign^(0+128),w
 10825  0662  0446               	iorwf	(efgtoa@sign+1)^(0+128),w
 10826  0663  1D03               	btfss	3,2
 10827  0664  2E67               	goto	l7556
 10828  0665  302B               	movlw	43
 10829  0666  2E68               	goto	L8
 10830  0667                     l7556:	
 10831  0667  302D               	movlw	45
 10832  0668                     L8:	
 10833  0668  00B5               	movwf	_efgtoa$1092^(0+128)
 10834  0669  3000               	movlw	0
 10835  066A  00B6               	movwf	(_efgtoa$1092^(0+128)+1)
 10836  066B  0835               	movf	_efgtoa$1092^(0+128),w
 10837  066C  00A7               	movwf	??_efgtoa^(0+128)
 10838  066D  0855               	movf	efgtoa@i^(0+128),w
 10839  066E  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10840  066F  0086               	movwf	6
 10841  0670  3002               	movlw	2	; select bank4/5
 10842  0671  0087               	movwf	7
 10843  0672  0827               	movf	??_efgtoa^(0+128),w
 10844  0673  0081               	movwf	1
 10845                           
 10846                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
 10847  0674  30FF               	movlw	255
 10848  0675  07CA               	addwf	efgtoa@w^(0+128),f
 10849  0676  30FF               	movlw	255
 10850  0677  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
 10851                           
 10852                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 10853  0678  30FF               	movlw	255
 10854  0679  07D5               	addwf	efgtoa@i^(0+128),f
 10855  067A  30FF               	movlw	255
 10856  067B  3DD6               	addwfc	(efgtoa@i+1)^(0+128),f
 10857  067C  0826               	movf	efgtoa@c^(0+128),w
 10858  067D  3EBF               	addlw	191
 10859  067E  00A7               	movwf	??_efgtoa^(0+128)
 10860  067F  30FF               	movlw	255
 10861  0680  1803               	skipnc
 10862  0681  3000               	movlw	0
 10863  0682  00A8               	movwf	(??_efgtoa^(0+128)+1)
 10864  0683  3000               	movlw	0
 10865  0684  0228               	subwf	(??_efgtoa+1)^(0+128),w
 10866  0685  301A               	movlw	26
 10867  0686  1903               	skipnz
 10868  0687  0227               	subwf	??_efgtoa^(0+128),w
 10869  0688  1803               	btfsc	3,0
 10870  0689  2E8C               	goto	u10770
 10871  068A  3001               	movlw	1
 10872  068B  2E8D               	goto	u10780
 10873  068C                     u10770:	
 10874  068C  3000               	movlw	0
 10875  068D                     u10780:	
 10876  068D  00A9               	movwf	(??_efgtoa+2)^(0+128)
 10877  068E  01AA               	clrf	((??_efgtoa+2)^(0+128)+1)
 10878  068F  0829               	movf	(??_efgtoa+2)^(0+128),w
 10879  0690  00B9               	movwf	_efgtoa$1094^(0+128)
 10880  0691  082A               	movf	(??_efgtoa+3)^(0+128),w
 10881  0692  00BA               	movwf	(_efgtoa$1094+1)^(0+128)
 10882  0693  0839               	movf	_efgtoa$1094^(0+128),w
 10883  0694  043A               	iorwf	(_efgtoa$1094+1)^(0+128),w
 10884  0695  1D03               	btfss	3,2
 10885  0696  2E99               	goto	l7572
 10886  0697  3065               	movlw	101
 10887  0698  2E9A               	goto	L9
 10888  0699                     l7572:	
 10889  0699  3045               	movlw	69
 10890  069A                     L9:	
 10891  069A  00B7               	movwf	_efgtoa$1093^(0+128)
 10892  069B  3000               	movlw	0
 10893  069C  00B8               	movwf	(_efgtoa$1093^(0+128)+1)
 10894  069D  0837               	movf	_efgtoa$1093^(0+128),w
 10895  069E  00A7               	movwf	??_efgtoa^(0+128)
 10896  069F  0855               	movf	efgtoa@i^(0+128),w
 10897  06A0  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10898  06A1  0086               	movwf	6
 10899  06A2  3002               	movlw	2	; select bank4/5
 10900  06A3  0087               	movwf	7
 10901  06A4  0827               	movf	??_efgtoa^(0+128),w
 10902  06A5  0081               	movwf	1
 10903                           
 10904                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
 10905  06A6  30FF               	movlw	255
 10906  06A7  07CA               	addwf	efgtoa@w^(0+128),f
 10907  06A8  30FF               	movlw	255
 10908  06A9  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
 10909                           
 10910                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
 10911  06AA  0855               	movf	efgtoa@i^(0+128),w
 10912  06AB  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10913  06AC  00F1               	movwf	strcpy@src
 10914  06AD  3002               	movlw	2
 10915  06AE  00F2               	movwf	strcpy@src+1
 10916  06AF  085D               	movf	efgtoa@n^(0+128),w
 10917  06B0  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10918  06B1  31B4  24B9  3180   	fcall	_strcpy
 10919  06B4                     l7580:	
 10920                           
 10921                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 502:     re
      +                          turn pad(fp, &dbuf[0], w);
 10922  06B4  0021               	movlb	1	; select bank1
 10923  06B5  0821               	movf	(efgtoa@fp+1)^(0+128),w
 10924  06B6  0020               	movlb	0	; select bank0
 10925  06B7  00A7               	movwf	pad@fp+1
 10926  06B8  0021               	movlb	1	; select bank1
 10927  06B9  0820               	movf	efgtoa@fp^(0+128),w
 10928  06BA  0020               	movlb	0	; select bank0
 10929  06BB  00A6               	movwf	pad@fp
 10930  06BC  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
 10931  06BD  0021               	movlb	1	; select bank1
 10932  06BE  00A7               	movwf	??_efgtoa^(0+128)
 10933  06BF  0827               	movf	??_efgtoa^(0+128),w
 10934  06C0  0020               	movlb	0	; select bank0
 10935  06C1  00A8               	movwf	pad@buf
 10936  06C2  0021               	movlb	1	; select bank1
 10937  06C3  084B               	movf	(efgtoa@w+1)^(0+128),w
 10938  06C4  0020               	movlb	0	; select bank0
 10939  06C5  00AA               	movwf	pad@p+1
 10940  06C6  0021               	movlb	1	; select bank1
 10941  06C7  084A               	movf	efgtoa@w^(0+128),w
 10942  06C8  0020               	movlb	0	; select bank0
 10943  06C9  00A9               	movwf	pad@p
 10944  06CA  31B7  275E         	fcall	_pad
 10945  06CC  0020               	movlb	0	; select bank0
 10946  06CD  0827               	movf	?_pad+1,w
 10947  06CE  0021               	movlb	1	; select bank1
 10948  06CF  00A1               	movwf	(?_efgtoa+1)^(0+128)
 10949  06D0  0020               	movlb	0	; select bank0
 10950  06D1  0826               	movf	?_pad,w
 10951  06D2  0021               	movlb	1	; select bank1
 10952  06D3  00A0               	movwf	?_efgtoa^(0+128)
 10953  06D4  0008               	return
 10954  06D5                     __end_of_efgtoa:	
 10955                           
 10956                           	psect	text18
 10957  351B                     __ptext18:	
 10958 ;; *************** function _tolower *****************
 10959 ;; Defined at:
 10960 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\tolower.c"
 10961 ;; Parameters:    Size  Location     Type
 10962 ;;  c               2    7[COMMON] int 
 10963 ;; Auto vars:     Size  Location     Type
 10964 ;;		None
 10965 ;; Return value:  Size  Location     Type
 10966 ;;                  2    7[COMMON] int 
 10967 ;; Registers used:
 10968 ;;		wreg, status,2, status,0
 10969 ;; Tracked objects:
 10970 ;;		On entry : 0/0
 10971 ;;		On exit  : 0/0
 10972 ;;		Unchanged: 0/0
 10973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10974 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10975 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10976 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10977 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10978 ;;Total ram usage:        8 bytes
 10979 ;; Hardware stack levels used:    1
 10980 ;; Hardware stack levels required when called:    2
 10981 ;; This function calls:
 10982 ;;		_isupper
 10983 ;; This function is called by:
 10984 ;;		_efgtoa
 10985 ;;		_vfpfcnvrt
 10986 ;; This function uses a non-reentrant model
 10987 ;;
 10988                           
 10989                           
 10990                           ;psect for function _tolower
 10991  351B                     _tolower:	
 10992                           
 10993                           ;incstack = 0
 10994                           ; Regs used in _tolower: [wreg+status,2+status,0]
 10995  351B  0877               	movf	tolower@c,w
 10996  351C  3EBF               	addlw	191
 10997  351D  0020               	movlb	0	; select bank0
 10998  351E  00A0               	movwf	??_tolower
 10999  351F  30FF               	movlw	255
 11000  3520  3D78               	addwfc	tolower@c+1,w
 11001  3521  00A1               	movwf	??_tolower+1
 11002  3522  3000               	movlw	0
 11003  3523  0221               	subwf	??_tolower+1,w
 11004  3524  301A               	movlw	26
 11005  3525  1903               	skipnz
 11006  3526  0220               	subwf	??_tolower,w
 11007  3527  1803               	btfsc	3,0
 11008  3528  2D2B               	goto	u10020
 11009  3529  3001               	movlw	1
 11010  352A  2D2C               	goto	u10030
 11011  352B                     u10020:	
 11012  352B  3000               	movlw	0
 11013  352C                     u10030:	
 11014  352C  00A2               	movwf	??_tolower+2
 11015  352D  01A3               	clrf	??_tolower+3
 11016  352E  0822               	movf	??_tolower+2,w
 11017  352F  00F9               	movwf	_tolower$1722
 11018  3530  0823               	movf	??_tolower+3,w
 11019  3531  00FA               	movwf	_tolower$1722+1
 11020  3532  0879               	movf	_tolower$1722,w
 11021  3533  047A               	iorwf	_tolower$1722+1,w
 11022  3534  1903               	btfsc	3,2
 11023  3535  0008               	return
 11024  3536  3020               	movlw	32
 11025  3537  0477               	iorwf	tolower@c,w
 11026  3538  00F7               	movwf	?_tolower
 11027  3539  3000               	movlw	0
 11028  353A  0478               	iorwf	tolower@c+1,w
 11029  353B  00F8               	movwf	?_tolower+1
 11030  353C  0008               	return
 11031  353D                     __end_of_tolower:	
 11032                           
 11033                           	psect	text19
 11034  33A9                     __ptext19:	
 11035 ;; *************** function _isupper *****************
 11036 ;; Defined at:
 11037 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
 11038 ;; Parameters:    Size  Location     Type
 11039 ;;  c               2    1[COMMON] int 
 11040 ;; Auto vars:     Size  Location     Type
 11041 ;;		None
 11042 ;; Return value:  Size  Location     Type
 11043 ;;                  2    1[COMMON] int 
 11044 ;; Registers used:
 11045 ;;		wreg, status,2, status,0
 11046 ;; Tracked objects:
 11047 ;;		On entry : 0/0
 11048 ;;		On exit  : 0/0
 11049 ;;		Unchanged: 0/0
 11050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11051 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11053 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11054 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11055 ;;Total ram usage:        6 bytes
 11056 ;; Hardware stack levels used:    1
 11057 ;; Hardware stack levels required when called:    1
 11058 ;; This function calls:
 11059 ;;		Nothing
 11060 ;; This function is called by:
 11061 ;;		_efgtoa
 11062 ;;		_xtoa
 11063 ;;		_vfpfcnvrt
 11064 ;;		_tolower
 11065 ;; This function uses a non-reentrant model
 11066 ;;
 11067                           
 11068                           
 11069                           ;psect for function _isupper
 11070  33A9                     _isupper:	
 11071                           
 11072                           ;incstack = 0
 11073                           ; Regs used in _isupper: [wreg+status,2+status,0]
 11074  33A9  0871               	movf	isupper@c,w
 11075  33AA  3EBF               	addlw	191
 11076  33AB  00F3               	movwf	??_isupper
 11077  33AC  30FF               	movlw	255
 11078  33AD  3D72               	addwfc	isupper@c+1,w
 11079  33AE  00F4               	movwf	??_isupper+1
 11080  33AF  3000               	movlw	0
 11081  33B0  0274               	subwf	??_isupper+1,w
 11082  33B1  301A               	movlw	26
 11083  33B2  1903               	skipnz
 11084  33B3  0273               	subwf	??_isupper,w
 11085  33B4  1803               	btfsc	3,0
 11086  33B5  2BB8               	goto	u9510
 11087  33B6  3001               	movlw	1
 11088  33B7  2BB9               	goto	u9520
 11089  33B8                     u9510:	
 11090  33B8  3000               	movlw	0
 11091  33B9                     u9520:	
 11092  33B9  00F5               	movwf	??_isupper+2
 11093  33BA  01F6               	clrf	??_isupper+3
 11094  33BB  0875               	movf	??_isupper+2,w
 11095  33BC  00F1               	movwf	?_isupper
 11096  33BD  0876               	movf	??_isupper+3,w
 11097  33BE  00F2               	movwf	?_isupper+1
 11098  33BF  0008               	return
 11099  33C0                     __end_of_isupper:	
 11100                           
 11101                           	psect	text20
 11102  34B9                     __ptext20:	
 11103 ;; *************** function _strcpy *****************
 11104 ;; Defined at:
 11105 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcpy.c"
 11106 ;; Parameters:    Size  Location     Type
 11107 ;;  dest            1    wreg     PTR unsigned char 
 11108 ;;		 -> dbuf(80), 
 11109 ;;  src             2    1[COMMON] PTR const unsigned char 
 11110 ;;		 -> STR_31(4), STR_30(4), STR_27(4), STR_26(4), 
 11111 ;;		 -> dbuf(80), 
 11112 ;; Auto vars:     Size  Location     Type
 11113 ;;  dest            1    8[COMMON] PTR unsigned char 
 11114 ;;		 -> dbuf(80), 
 11115 ;;  s               2    5[COMMON] PTR const unsigned char 
 11116 ;;		 -> STR_31(4), STR_30(4), STR_27(4), STR_26(4), 
 11117 ;;		 -> dbuf(80), 
 11118 ;;  d               1    7[COMMON] PTR unsigned char 
 11119 ;;		 -> dbuf(80), 
 11120 ;; Return value:  Size  Location     Type
 11121 ;;                  1    wreg      PTR unsigned char 
 11122 ;; Registers used:
 11123 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 11124 ;; Tracked objects:
 11125 ;;		On entry : 0/0
 11126 ;;		On exit  : 0/0
 11127 ;;		Unchanged: 0/0
 11128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11129 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11130 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11131 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11132 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11133 ;;Total ram usage:        8 bytes
 11134 ;; Hardware stack levels used:    1
 11135 ;; Hardware stack levels required when called:    1
 11136 ;; This function calls:
 11137 ;;		Nothing
 11138 ;; This function is called by:
 11139 ;;		_efgtoa
 11140 ;; This function uses a non-reentrant model
 11141 ;;
 11142                           
 11143                           
 11144                           ;psect for function _strcpy
 11145  34B9                     _strcpy:	
 11146                           
 11147                           ;incstack = 0
 11148                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
 11149                           ;strcpy@dest stored from wreg
 11150  34B9  00F8               	movwf	strcpy@dest
 11151  34BA  0872               	movf	strcpy@src+1,w
 11152  34BB  00F6               	movwf	strcpy@s+1
 11153  34BC  0871               	movf	strcpy@src,w
 11154  34BD  00F5               	movwf	strcpy@s
 11155  34BE  0878               	movf	strcpy@dest,w
 11156  34BF  00F3               	movwf	??_strcpy
 11157  34C0  0873               	movf	??_strcpy,w
 11158  34C1  00F7               	movwf	strcpy@d
 11159  34C2                     l4570:	
 11160  34C2  0877               	movf	strcpy@d,w
 11161  34C3  0086               	movwf	6
 11162  34C4  3002               	movlw	2	; select bank4/5
 11163  34C5  0087               	movwf	7
 11164  34C6  0AF7               	incf	strcpy@d,f
 11165  34C7  0876               	movf	strcpy@s+1,w
 11166  34C8  00F4               	movwf	??_strcpy+1
 11167  34C9  0875               	movf	strcpy@s,w
 11168  34CA  00F3               	movwf	??_strcpy
 11169  34CB  0AF5               	incf	strcpy@s,f
 11170  34CC  1903               	skipnz
 11171  34CD  0AF6               	incf	strcpy@s+1,f
 11172  34CE  0873               	movf	??_strcpy,w
 11173  34CF  0084               	movwf	4
 11174  34D0  0874               	movf	??_strcpy+1,w
 11175  34D1  0085               	movwf	5
 11176  34D2  0800               	movf	0,w	;code access
 11177  34D3  3FC0               	movwi [0]fsr1
 11178  34D4  0889               	movf	9,f
 11179  34D5  1903               	btfsc	3,2
 11180  34D6  0008               	return
 11181  34D7  2CC2               	goto	l4570
 11182  34D8                     __end_of_strcpy:	
 11183                           
 11184                           	psect	text21
 11185  22A1                     __ptext21:	
 11186 ;; *************** function _floorf *****************
 11187 ;; Defined at:
 11188 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\floorf.c"
 11189 ;; Parameters:    Size  Location     Type
 11190 ;;  x               4   58[BANK0 ] float 
 11191 ;; Auto vars:     Size  Location     Type
 11192 ;;  u               4   74[BANK0 ] struct .
 11193 ;;  m               4   68[BANK0 ] unsigned long 
 11194 ;;  e               2   72[BANK0 ] int 
 11195 ;; Return value:  Size  Location     Type
 11196 ;;                  4   58[BANK0 ] float 
 11197 ;; Registers used:
 11198 ;;		wreg, status,2, status,0
 11199 ;; Tracked objects:
 11200 ;;		On entry : 0/0
 11201 ;;		On exit  : 0/0
 11202 ;;		Unchanged: 0/0
 11203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11204 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11205 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11206 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11207 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11208 ;;Total ram usage:       20 bytes
 11209 ;; Hardware stack levels used:    1
 11210 ;; Hardware stack levels required when called:    1
 11211 ;; This function calls:
 11212 ;;		Nothing
 11213 ;; This function is called by:
 11214 ;;		_efgtoa
 11215 ;; This function uses a non-reentrant model
 11216 ;;
 11217                           
 11218                           
 11219                           ;psect for function _floorf
 11220  22A1                     _floorf:	
 11221                           
 11222                           ;incstack = 0
 11223                           ; Regs used in _floorf: [wreg+status,2+status,0]
 11224  22A1  0023               	movlb	3	; select bank3
 11225  22A2  082D               	movf	(floorf@F524+3)^(0+384),w
 11226  22A3  0020               	movlb	0	; select bank0
 11227  22A4  00ED               	movwf	floorf@u+3
 11228  22A5  0023               	movlb	3	; select bank3
 11229  22A6  082C               	movf	(floorf@F524+2)^(0+384),w
 11230  22A7  0020               	movlb	0	; select bank0
 11231  22A8  00EC               	movwf	floorf@u+2
 11232  22A9  0023               	movlb	3	; select bank3
 11233  22AA  082B               	movf	(floorf@F524+1)^(0+384),w
 11234  22AB  0020               	movlb	0	; select bank0
 11235  22AC  00EB               	movwf	floorf@u+1
 11236  22AD  0023               	movlb	3	; select bank3
 11237  22AE  082A               	movf	floorf@F524^(0+384),w
 11238  22AF  0020               	movlb	0	; select bank0
 11239  22B0  00EA               	movwf	floorf@u
 11240  22B1  085D               	movf	floorf@x+3,w
 11241  22B2  00ED               	movwf	floorf@u+3
 11242  22B3  085C               	movf	floorf@x+2,w
 11243  22B4  00EC               	movwf	floorf@u+2
 11244  22B5  085B               	movf	floorf@x+1,w
 11245  22B6  00EB               	movwf	floorf@u+1
 11246  22B7  085A               	movf	floorf@x,w
 11247  22B8  00EA               	movwf	floorf@u
 11248  22B9  086A               	movf	floorf@u,w
 11249  22BA  00DE               	movwf	??_floorf
 11250  22BB  086B               	movf	floorf@u+1,w
 11251  22BC  00DF               	movwf	??_floorf+1
 11252  22BD  086C               	movf	floorf@u+2,w
 11253  22BE  00E0               	movwf	??_floorf+2
 11254  22BF  086D               	movf	floorf@u+3,w
 11255  22C0  00E1               	movwf	??_floorf+3
 11256  22C1  3017               	movlw	23
 11257  22C2                     u5495:	
 11258  22C2  36E1               	lsrf	??_floorf+3,f
 11259  22C3  0CE0               	rrf	??_floorf+2,f
 11260  22C4  0CDF               	rrf	??_floorf+1,f
 11261  22C5  0CDE               	rrf	??_floorf,f
 11262  22C6  0B89               	decfsz	9,f
 11263  22C7  2AC2               	goto	u5495
 11264  22C8  30FF               	movlw	255
 11265  22C9  055E               	andwf	??_floorf,w
 11266  22CA  00E2               	movwf	??_floorf+4
 11267  22CB  3000               	movlw	0
 11268  22CC  055F               	andwf	??_floorf+1,w
 11269  22CD  00E3               	movwf	??_floorf+5
 11270  22CE  0862               	movf	??_floorf+4,w
 11271  22CF  3E81               	addlw	129
 11272  22D0  00E8               	movwf	floorf@e
 11273  22D1  30FF               	movlw	255
 11274  22D2  3D63               	addwfc	??_floorf+5,w
 11275  22D3  00E9               	movwf	floorf@e+1
 11276  22D4  0869               	movf	floorf@e+1,w
 11277  22D5  3A80               	xorlw	128
 11278  22D6  00DE               	movwf	??_floorf
 11279  22D7  3080               	movlw	128
 11280  22D8  025E               	subwf	??_floorf,w
 11281  22D9  1D03               	skipz
 11282  22DA  2ADD               	goto	u5505
 11283  22DB  3017               	movlw	23
 11284  22DC  0268               	subwf	floorf@e,w
 11285  22DD                     u5505:	
 11286  22DD  1803               	btfsc	3,0
 11287  22DE  0008               	return
 11288  22DF  0020               	movlb	0	; select bank0
 11289  22E0  1BE9               	btfsc	floorf@e+1,7
 11290  22E1  2B3A               	goto	l4602
 11291  22E2  30FF               	movlw	255
 11292  22E3  00DE               	movwf	??_floorf
 11293  22E4  30FF               	movlw	255
 11294  22E5  00DF               	movwf	??_floorf+1
 11295  22E6  307F               	movlw	127
 11296  22E7  00E0               	movwf	??_floorf+2
 11297  22E8  3000               	movlw	0
 11298  22E9  00E1               	movwf	??_floorf+3
 11299  22EA  0A68               	incf	floorf@e,w
 11300  22EB  2AF0               	goto	u5520
 11301  22EC                     u5525:	
 11302  22EC  37E1               	asrf	??_floorf+3,f
 11303  22ED  0CE0               	rrf	??_floorf+2,f
 11304  22EE  0CDF               	rrf	??_floorf+1,f
 11305  22EF  0CDE               	rrf	??_floorf,f
 11306  22F0                     u5520:	
 11307  22F0  0B89               	decfsz	9,f
 11308  22F1  2AEC               	goto	u5525
 11309  22F2  0861               	movf	??_floorf+3,w
 11310  22F3  00E7               	movwf	floorf@m+3
 11311  22F4  0860               	movf	??_floorf+2,w
 11312  22F5  00E6               	movwf	floorf@m+2
 11313  22F6  085F               	movf	??_floorf+1,w
 11314  22F7  00E5               	movwf	floorf@m+1
 11315  22F8  085E               	movf	??_floorf,w
 11316  22F9  00E4               	movwf	floorf@m
 11317  22FA  086A               	movf	floorf@u,w
 11318  22FB  0564               	andwf	floorf@m,w
 11319  22FC  00DE               	movwf	??_floorf
 11320  22FD  086B               	movf	floorf@u+1,w
 11321  22FE  0565               	andwf	floorf@m+1,w
 11322  22FF  00DF               	movwf	??_floorf+1
 11323  2300  086C               	movf	floorf@u+2,w
 11324  2301  0566               	andwf	floorf@m+2,w
 11325  2302  00E0               	movwf	??_floorf+2
 11326  2303  086D               	movf	floorf@u+3,w
 11327  2304  0567               	andwf	floorf@m+3,w
 11328  2305  00E1               	movwf	??_floorf+3
 11329  2306  0861               	movf	??_floorf+3,w
 11330  2307  0460               	iorwf	??_floorf+2,w
 11331  2308  045F               	iorwf	??_floorf+1,w
 11332  2309  045E               	iorwf	??_floorf,w
 11333  230A  1903               	btfsc	3,2
 11334  230B  0008               	return
 11335  230C  086A               	movf	floorf@u,w
 11336  230D  00DE               	movwf	??_floorf
 11337  230E  086B               	movf	floorf@u+1,w
 11338  230F  00DF               	movwf	??_floorf+1
 11339  2310  086C               	movf	floorf@u+2,w
 11340  2311  00E0               	movwf	??_floorf+2
 11341  2312  086D               	movf	floorf@u+3,w
 11342  2313  00E1               	movwf	??_floorf+3
 11343  2314  301F               	movlw	31
 11344  2315                     u5545:	
 11345  2315  36E1               	lsrf	??_floorf+3,f
 11346  2316  0CE0               	rrf	??_floorf+2,f
 11347  2317  0CDF               	rrf	??_floorf+1,f
 11348  2318  0CDE               	rrf	??_floorf,f
 11349  2319  0B89               	decfsz	9,f
 11350  231A  2B15               	goto	u5545
 11351  231B  0861               	movf	??_floorf+3,w
 11352  231C  0460               	iorwf	??_floorf+2,w
 11353  231D  045F               	iorwf	??_floorf+1,w
 11354  231E  045E               	iorwf	??_floorf,w
 11355  231F  1903               	skipnz
 11356  2320  2B29               	goto	l4600
 11357  2321  0864               	movf	floorf@m,w
 11358  2322  07EA               	addwf	floorf@u,f
 11359  2323  0865               	movf	floorf@m+1,w
 11360  2324  3DEB               	addwfc	floorf@u+1,f
 11361  2325  0866               	movf	floorf@m+2,w
 11362  2326  3DEC               	addwfc	floorf@u+2,f
 11363  2327  0867               	movf	floorf@m+3,w
 11364  2328  3DED               	addwfc	floorf@u+3,f
 11365  2329                     l4600:	
 11366  2329  0964               	comf	floorf@m,w
 11367  232A  00DE               	movwf	??_floorf
 11368  232B  0965               	comf	floorf@m+1,w
 11369  232C  00DF               	movwf	??_floorf+1
 11370  232D  0966               	comf	floorf@m+2,w
 11371  232E  00E0               	movwf	??_floorf+2
 11372  232F  0967               	comf	floorf@m+3,w
 11373  2330  00E1               	movwf	??_floorf+3
 11374  2331  085E               	movf	??_floorf,w
 11375  2332  05EA               	andwf	floorf@u,f
 11376  2333  085F               	movf	??_floorf+1,w
 11377  2334  05EB               	andwf	floorf@u+1,f
 11378  2335  0860               	movf	??_floorf+2,w
 11379  2336  05EC               	andwf	floorf@u+2,f
 11380  2337  0861               	movf	??_floorf+3,w
 11381  2338  05ED               	andwf	floorf@u+3,f
 11382  2339  2B70               	goto	l1383
 11383  233A                     l4602:	
 11384  233A  086A               	movf	floorf@u,w
 11385  233B  00DE               	movwf	??_floorf
 11386  233C  086B               	movf	floorf@u+1,w
 11387  233D  00DF               	movwf	??_floorf+1
 11388  233E  086C               	movf	floorf@u+2,w
 11389  233F  00E0               	movwf	??_floorf+2
 11390  2340  086D               	movf	floorf@u+3,w
 11391  2341  00E1               	movwf	??_floorf+3
 11392  2342  301F               	movlw	31
 11393  2343                     u5565:	
 11394  2343  36E1               	lsrf	??_floorf+3,f
 11395  2344  0CE0               	rrf	??_floorf+2,f
 11396  2345  0CDF               	rrf	??_floorf+1,f
 11397  2346  0CDE               	rrf	??_floorf,f
 11398  2347  0B89               	decfsz	9,f
 11399  2348  2B43               	goto	u5565
 11400  2349  0861               	movf	??_floorf+3,w
 11401  234A  0460               	iorwf	??_floorf+2,w
 11402  234B  045F               	iorwf	??_floorf+1,w
 11403  234C  045E               	iorwf	??_floorf,w
 11404  234D  1D03               	skipz
 11405  234E  2B53               	goto	l4606
 11406  234F  3000               	movlw	0
 11407  2350  00ED               	movwf	floorf@u+3
 11408  2351  3000               	movlw	0
 11409  2352  2B6B               	goto	L10
 11410  2353                     l4606:	
 11411  2353  086A               	movf	floorf@u,w
 11412  2354  00DE               	movwf	??_floorf
 11413  2355  086B               	movf	floorf@u+1,w
 11414  2356  00DF               	movwf	??_floorf+1
 11415  2357  086C               	movf	floorf@u+2,w
 11416  2358  00E0               	movwf	??_floorf+2
 11417  2359  086D               	movf	floorf@u+3,w
 11418  235A  00E1               	movwf	??_floorf+3
 11419  235B  3001               	movlw	1
 11420  235C                     u5585:	
 11421  235C  35DE               	lslf	??_floorf,f
 11422  235D  0DDF               	rlf	??_floorf+1,f
 11423  235E  0DE0               	rlf	??_floorf+2,f
 11424  235F  0DE1               	rlf	??_floorf+3,f
 11425  2360  0B89               	decfsz	9,f
 11426  2361  2B5C               	goto	u5585
 11427  2362  0861               	movf	??_floorf+3,w
 11428  2363  0460               	iorwf	??_floorf+2,w
 11429  2364  045F               	iorwf	??_floorf+1,w
 11430  2365  045E               	iorwf	??_floorf,w
 11431  2366  1903               	skipnz
 11432  2367  2B70               	goto	l1383
 11433  2368  30BF               	movlw	191
 11434  2369  00ED               	movwf	floorf@u+3
 11435  236A  3080               	movlw	128
 11436  236B                     L10:	
 11437  236B  00EC               	movwf	floorf@u+2
 11438  236C  3000               	movlw	0
 11439  236D  00EB               	movwf	floorf@u+1
 11440  236E  3000               	movlw	0
 11441  236F  00EA               	movwf	floorf@u
 11442  2370                     l1383:	
 11443  2370  086D               	movf	floorf@u+3,w
 11444  2371  00DD               	movwf	?_floorf+3
 11445  2372  086C               	movf	floorf@u+2,w
 11446  2373  00DC               	movwf	?_floorf+2
 11447  2374  086B               	movf	floorf@u+1,w
 11448  2375  00DB               	movwf	?_floorf+1
 11449  2376  086A               	movf	floorf@u,w
 11450  2377  00DA               	movwf	?_floorf
 11451  2378  0008               	return
 11452  2379                     __end_of_floorf:	
 11453                           
 11454                           	psect	text22
 11455  294F                     __ptext22:	
 11456 ;; *************** function ___fpclassifyf *****************
 11457 ;; Defined at:
 11458 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__fpclassifyf.c"
 11459 ;; Parameters:    Size  Location     Type
 11460 ;;  x               4    1[COMMON] float 
 11461 ;; Auto vars:     Size  Location     Type
 11462 ;;  u               4    2[BANK0 ] struct .
 11463 ;;  e               2    0[BANK0 ] int 
 11464 ;; Return value:  Size  Location     Type
 11465 ;;                  2    1[COMMON] int 
 11466 ;; Registers used:
 11467 ;;		wreg, status,2, status,0
 11468 ;; Tracked objects:
 11469 ;;		On entry : 0/0
 11470 ;;		On exit  : 0/0
 11471 ;;		Unchanged: 0/0
 11472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11473 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11474 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11475 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11476 ;;      Totals:        10       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11477 ;;Total ram usage:       16 bytes
 11478 ;; Hardware stack levels used:    1
 11479 ;; Hardware stack levels required when called:    1
 11480 ;; This function calls:
 11481 ;;		Nothing
 11482 ;; This function is called by:
 11483 ;;		_efgtoa
 11484 ;; This function uses a non-reentrant model
 11485 ;;
 11486                           
 11487                           
 11488                           ;psect for function ___fpclassifyf
 11489  294F                     ___fpclassifyf:	
 11490                           
 11491                           ;incstack = 0
 11492                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
 11493  294F  0023               	movlb	3	; select bank3
 11494  2950  0831               	movf	(___fpclassifyf@F463+3)^(0+384),w
 11495  2951  0020               	movlb	0	; select bank0
 11496  2952  00A5               	movwf	___fpclassifyf@u+3
 11497  2953  0023               	movlb	3	; select bank3
 11498  2954  0830               	movf	(___fpclassifyf@F463+2)^(0+384),w
 11499  2955  0020               	movlb	0	; select bank0
 11500  2956  00A4               	movwf	___fpclassifyf@u+2
 11501  2957  0023               	movlb	3	; select bank3
 11502  2958  082F               	movf	(___fpclassifyf@F463+1)^(0+384),w
 11503  2959  0020               	movlb	0	; select bank0
 11504  295A  00A3               	movwf	___fpclassifyf@u+1
 11505  295B  0023               	movlb	3	; select bank3
 11506  295C  082E               	movf	___fpclassifyf@F463^(0+384),w
 11507  295D  0020               	movlb	0	; select bank0
 11508  295E  00A2               	movwf	___fpclassifyf@u
 11509  295F  0874               	movf	___fpclassifyf@x+3,w
 11510  2960  00A5               	movwf	___fpclassifyf@u+3
 11511  2961  0873               	movf	___fpclassifyf@x+2,w
 11512  2962  00A4               	movwf	___fpclassifyf@u+2
 11513  2963  0872               	movf	___fpclassifyf@x+1,w
 11514  2964  00A3               	movwf	___fpclassifyf@u+1
 11515  2965  0871               	movf	___fpclassifyf@x,w
 11516  2966  00A2               	movwf	___fpclassifyf@u
 11517  2967  0822               	movf	___fpclassifyf@u,w
 11518  2968  00F5               	movwf	??___fpclassifyf
 11519  2969  0823               	movf	___fpclassifyf@u+1,w
 11520  296A  00F6               	movwf	??___fpclassifyf+1
 11521  296B  0824               	movf	___fpclassifyf@u+2,w
 11522  296C  00F7               	movwf	??___fpclassifyf+2
 11523  296D  0825               	movf	___fpclassifyf@u+3,w
 11524  296E  00F8               	movwf	??___fpclassifyf+3
 11525  296F  3017               	movlw	23
 11526  2970                     u5375:	
 11527  2970  36F8               	lsrf	??___fpclassifyf+3,f
 11528  2971  0CF7               	rrf	??___fpclassifyf+2,f
 11529  2972  0CF6               	rrf	??___fpclassifyf+1,f
 11530  2973  0CF5               	rrf	??___fpclassifyf,f
 11531  2974  0B89               	decfsz	9,f
 11532  2975  2970               	goto	u5375
 11533  2976  30FF               	movlw	255
 11534  2977  0575               	andwf	??___fpclassifyf,w
 11535  2978  00A0               	movwf	___fpclassifyf@e
 11536  2979  3000               	movlw	0
 11537  297A  0576               	andwf	??___fpclassifyf+1,w
 11538  297B  00A1               	movwf	___fpclassifyf@e+1
 11539  297C  0820               	movf	___fpclassifyf@e,w
 11540  297D  0421               	iorwf	___fpclassifyf@e+1,w
 11541  297E  1D03               	btfss	3,2
 11542  297F  299F               	goto	l4558
 11543  2980  0822               	movf	___fpclassifyf@u,w
 11544  2981  00F5               	movwf	??___fpclassifyf
 11545  2982  0823               	movf	___fpclassifyf@u+1,w
 11546  2983  00F6               	movwf	??___fpclassifyf+1
 11547  2984  0824               	movf	___fpclassifyf@u+2,w
 11548  2985  00F7               	movwf	??___fpclassifyf+2
 11549  2986  0825               	movf	___fpclassifyf@u+3,w
 11550  2987  00F8               	movwf	??___fpclassifyf+3
 11551  2988  3001               	movlw	1
 11552  2989                     u5395:	
 11553  2989  35F5               	lslf	??___fpclassifyf,f
 11554  298A  0DF6               	rlf	??___fpclassifyf+1,f
 11555  298B  0DF7               	rlf	??___fpclassifyf+2,f
 11556  298C  0DF8               	rlf	??___fpclassifyf+3,f
 11557  298D  0B89               	decfsz	9,f
 11558  298E  2989               	goto	u5395
 11559  298F  0878               	movf	??___fpclassifyf+3,w
 11560  2990  0477               	iorwf	??___fpclassifyf+2,w
 11561  2991  0476               	iorwf	??___fpclassifyf+1,w
 11562  2992  0475               	iorwf	??___fpclassifyf,w
 11563  2993  1D03               	skipz
 11564  2994  299A               	goto	l4554
 11565  2995  3002               	movlw	2
 11566  2996  00F1               	movwf	?___fpclassifyf
 11567  2997  3000               	movlw	0
 11568  2998  00F2               	movwf	?___fpclassifyf+1
 11569  2999  0008               	return
 11570  299A                     l4554:	
 11571  299A  3003               	movlw	3
 11572  299B  00F1               	movwf	?___fpclassifyf
 11573  299C  3000               	movlw	0
 11574  299D  00F2               	movwf	?___fpclassifyf+1
 11575  299E  0008               	return
 11576  299F                     l4558:	
 11577  299F  0A20               	incf	___fpclassifyf@e,w
 11578  29A0  0421               	iorwf	___fpclassifyf@e+1,w
 11579  29A1  1D03               	btfss	3,2
 11580  29A2  29C2               	goto	l4564
 11581  29A3  0822               	movf	___fpclassifyf@u,w
 11582  29A4  00F5               	movwf	??___fpclassifyf
 11583  29A5  0823               	movf	___fpclassifyf@u+1,w
 11584  29A6  00F6               	movwf	??___fpclassifyf+1
 11585  29A7  0824               	movf	___fpclassifyf@u+2,w
 11586  29A8  00F7               	movwf	??___fpclassifyf+2
 11587  29A9  0825               	movf	___fpclassifyf@u+3,w
 11588  29AA  00F8               	movwf	??___fpclassifyf+3
 11589  29AB  3009               	movlw	9
 11590  29AC                     u5425:	
 11591  29AC  35F5               	lslf	??___fpclassifyf,f
 11592  29AD  0DF6               	rlf	??___fpclassifyf+1,f
 11593  29AE  0DF7               	rlf	??___fpclassifyf+2,f
 11594  29AF  0DF8               	rlf	??___fpclassifyf+3,f
 11595  29B0  0B89               	decfsz	9,f
 11596  29B1  29AC               	goto	u5425
 11597  29B2  0878               	movf	??___fpclassifyf+3,w
 11598  29B3  0477               	iorwf	??___fpclassifyf+2,w
 11599  29B4  0476               	iorwf	??___fpclassifyf+1,w
 11600  29B5  0475               	iorwf	??___fpclassifyf,w
 11601  29B6  1D03               	btfss	3,2
 11602  29B7  29BA               	goto	u5430
 11603  29B8  3001               	movlw	1
 11604  29B9  29BB               	goto	u5440
 11605  29BA                     u5430:	
 11606  29BA  3000               	movlw	0
 11607  29BB                     u5440:	
 11608  29BB  00F9               	movwf	??___fpclassifyf+4
 11609  29BC  01FA               	clrf	??___fpclassifyf+5
 11610  29BD  0879               	movf	??___fpclassifyf+4,w
 11611  29BE  00F1               	movwf	?___fpclassifyf
 11612  29BF  087A               	movf	??___fpclassifyf+5,w
 11613  29C0  00F2               	movwf	?___fpclassifyf+1
 11614  29C1  0008               	return
 11615  29C2                     l4564:	
 11616  29C2  3004               	movlw	4
 11617  29C3  00F1               	movwf	?___fpclassifyf
 11618  29C4  3000               	movlw	0
 11619  29C5  00F2               	movwf	?___fpclassifyf+1
 11620  29C6  0008               	return
 11621  29C7                     __end_of___fpclassifyf:	
 11622                           
 11623                           	psect	text23
 11624  349A                     __ptext23:	
 11625 ;; *************** function ___flsub *****************
 11626 ;; Defined at:
 11627 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 11628 ;; Parameters:    Size  Location     Type
 11629 ;;  a               4   32[BANK0 ] int 
 11630 ;;  b               4   36[BANK0 ] int 
 11631 ;; Auto vars:     Size  Location     Type
 11632 ;;		None
 11633 ;; Return value:  Size  Location     Type
 11634 ;;                  4   32[BANK0 ] int 
 11635 ;; Registers used:
 11636 ;;		wreg, status,2, status,0, pclath, cstack
 11637 ;; Tracked objects:
 11638 ;;		On entry : 0/0
 11639 ;;		On exit  : 0/0
 11640 ;;		Unchanged: 0/0
 11641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11642 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11645 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11646 ;;Total ram usage:        8 bytes
 11647 ;; Hardware stack levels used:    1
 11648 ;; Hardware stack levels required when called:    2
 11649 ;; This function calls:
 11650 ;;		___fladd
 11651 ;; This function is called by:
 11652 ;;		_efgtoa
 11653 ;; This function uses a non-reentrant model
 11654 ;;
 11655                           
 11656                           
 11657                           ;psect for function ___flsub
 11658  349A                     ___flsub:	
 11659                           
 11660                           ;incstack = 0
 11661                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 11662  349A  3080               	movlw	128
 11663  349B  0020               	movlb	0	; select bank0
 11664  349C  06C3               	xorwf	___flsub@a+3,f
 11665  349D  0847               	movf	___flsub@b+3,w
 11666  349E  00F4               	movwf	___fladd@b+3
 11667  349F  0846               	movf	___flsub@b+2,w
 11668  34A0  00F3               	movwf	___fladd@b+2
 11669  34A1  0845               	movf	___flsub@b+1,w
 11670  34A2  00F2               	movwf	___fladd@b+1
 11671  34A3  0844               	movf	___flsub@b,w
 11672  34A4  00F1               	movwf	___fladd@b
 11673  34A5  0843               	movf	___flsub@a+3,w
 11674  34A6  00F8               	movwf	___fladd@a+3
 11675  34A7  0842               	movf	___flsub@a+2,w
 11676  34A8  00F7               	movwf	___fladd@a+2
 11677  34A9  0841               	movf	___flsub@a+1,w
 11678  34AA  00F6               	movwf	___fladd@a+1
 11679  34AB  0840               	movf	___flsub@a,w
 11680  34AC  00F5               	movwf	___fladd@a
 11681  34AD  319E  261E         	fcall	___fladd
 11682  34AF  0874               	movf	?___fladd+3,w
 11683  34B0  0020               	movlb	0	; select bank0
 11684  34B1  00C3               	movwf	?___flsub+3
 11685  34B2  0873               	movf	?___fladd+2,w
 11686  34B3  00C2               	movwf	?___flsub+2
 11687  34B4  0872               	movf	?___fladd+1,w
 11688  34B5  00C1               	movwf	?___flsub+1
 11689  34B6  0871               	movf	?___fladd,w
 11690  34B7  00C0               	movwf	?___flsub
 11691  34B8  0008               	return
 11692  34B9                     __end_of___flsub:	
 11693                           
 11694                           	psect	text24
 11695  1E1E                     __ptext24:	
 11696 ;; *************** function ___fladd *****************
 11697 ;; Defined at:
 11698 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 11699 ;; Parameters:    Size  Location     Type
 11700 ;;  b               4    1[COMMON] int 
 11701 ;;  a               4    5[COMMON] int 
 11702 ;; Auto vars:     Size  Location     Type
 11703 ;;  grs             1   11[BANK0 ] unsigned char 
 11704 ;;  bexp            1   10[BANK0 ] unsigned char 
 11705 ;;  aexp            1    9[BANK0 ] unsigned char 
 11706 ;;  signs           1    8[BANK0 ] unsigned char 
 11707 ;; Return value:  Size  Location     Type
 11708 ;;                  4    1[COMMON] unsigned char 
 11709 ;; Registers used:
 11710 ;;		wreg, status,2, status,0
 11711 ;; Tracked objects:
 11712 ;;		On entry : 0/0
 11713 ;;		On exit  : 0/0
 11714 ;;		Unchanged: 0/0
 11715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11716 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11717 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11718 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11719 ;;      Totals:         8      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11720 ;;Total ram usage:       20 bytes
 11721 ;; Hardware stack levels used:    1
 11722 ;; Hardware stack levels required when called:    1
 11723 ;; This function calls:
 11724 ;;		Nothing
 11725 ;; This function is called by:
 11726 ;;		_efgtoa
 11727 ;;		___flsub
 11728 ;; This function uses a non-reentrant model
 11729 ;;
 11730                           
 11731                           
 11732                           ;psect for function ___fladd
 11733  1E1E                     ___fladd:	
 11734                           
 11735                           ;incstack = 0
 11736                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 11737  1E1E  0874               	movf	___fladd@b+3,w
 11738  1E1F  3980               	andlw	128
 11739  1E20  0020               	movlb	0	; select bank0
 11740  1E21  00A0               	movwf	??___fladd
 11741  1E22  0820               	movf	??___fladd,w
 11742  1E23  00A8               	movwf	___fladd@signs
 11743  1E24  3574               	lslf	___fladd@b+3,w
 11744  1E25  00A0               	movwf	??___fladd
 11745  1E26  0820               	movf	??___fladd,w
 11746  1E27  00AA               	movwf	___fladd@bexp
 11747  1E28  1BF3               	btfsc	___fladd@b+2,7
 11748  1E29  142A               	bsf	___fladd@bexp,0
 11749  1E2A  082A               	movf	___fladd@bexp,w
 11750  1E2B  1903               	btfsc	3,2
 11751  1E2C  2E3B               	goto	l6980
 11752  1E2D  0A2A               	incf	___fladd@bexp,w
 11753  1E2E  1D03               	btfss	3,2
 11754  1E2F  2E38               	goto	l6976
 11755  1E30  3000               	movlw	0
 11756  1E31  00F4               	movwf	___fladd@b+3
 11757  1E32  3000               	movlw	0
 11758  1E33  00F3               	movwf	___fladd@b+2
 11759  1E34  3000               	movlw	0
 11760  1E35  00F2               	movwf	___fladd@b+1
 11761  1E36  3000               	movlw	0
 11762  1E37  00F1               	movwf	___fladd@b
 11763  1E38                     l6976:	
 11764  1E38  17F3               	bsf	___fladd@b+2,7
 11765  1E39  01F4               	clrf	___fladd@b+3
 11766  1E3A  2E43               	goto	l6982
 11767  1E3B                     l6980:	
 11768  1E3B  3000               	movlw	0
 11769  1E3C  00F4               	movwf	___fladd@b+3
 11770  1E3D  3000               	movlw	0
 11771  1E3E  00F3               	movwf	___fladd@b+2
 11772  1E3F  3000               	movlw	0
 11773  1E40  00F2               	movwf	___fladd@b+1
 11774  1E41  3000               	movlw	0
 11775  1E42  00F1               	movwf	___fladd@b
 11776  1E43                     l6982:	
 11777  1E43  0878               	movf	___fladd@a+3,w
 11778  1E44  3980               	andlw	128
 11779  1E45  00A0               	movwf	??___fladd
 11780  1E46  0820               	movf	??___fladd,w
 11781  1E47  00A9               	movwf	___fladd@aexp
 11782  1E48  0829               	movf	___fladd@aexp,w
 11783  1E49  0628               	xorwf	___fladd@signs,w
 11784  1E4A  1D03               	btfss	3,2
 11785  1E4B  1728               	bsf	___fladd@signs,6
 11786  1E4C  3578               	lslf	___fladd@a+3,w
 11787  1E4D  00A0               	movwf	??___fladd
 11788  1E4E  0820               	movf	??___fladd,w
 11789  1E4F  00A9               	movwf	___fladd@aexp
 11790  1E50  1BF7               	btfsc	___fladd@a+2,7
 11791  1E51  1429               	bsf	___fladd@aexp,0
 11792  1E52  0829               	movf	___fladd@aexp,w
 11793  1E53  1903               	btfsc	3,2
 11794  1E54  2E63               	goto	l7004
 11795  1E55  0A29               	incf	___fladd@aexp,w
 11796  1E56  1D03               	btfss	3,2
 11797  1E57  2E60               	goto	l7000
 11798  1E58  3000               	movlw	0
 11799  1E59  00F8               	movwf	___fladd@a+3
 11800  1E5A  3000               	movlw	0
 11801  1E5B  00F7               	movwf	___fladd@a+2
 11802  1E5C  3000               	movlw	0
 11803  1E5D  00F6               	movwf	___fladd@a+1
 11804  1E5E  3000               	movlw	0
 11805  1E5F  00F5               	movwf	___fladd@a
 11806  1E60                     l7000:	
 11807  1E60  17F7               	bsf	___fladd@a+2,7
 11808  1E61  01F8               	clrf	___fladd@a+3
 11809  1E62  2E6B               	goto	l1175
 11810  1E63                     l7004:	
 11811  1E63  3000               	movlw	0
 11812  1E64  00F8               	movwf	___fladd@a+3
 11813  1E65  3000               	movlw	0
 11814  1E66  00F7               	movwf	___fladd@a+2
 11815  1E67  3000               	movlw	0
 11816  1E68  00F6               	movwf	___fladd@a+1
 11817  1E69  3000               	movlw	0
 11818  1E6A  00F5               	movwf	___fladd@a
 11819  1E6B                     l1175:	
 11820  1E6B  082A               	movf	___fladd@bexp,w
 11821  1E6C  0229               	subwf	___fladd@aexp,w
 11822  1E6D  1803               	skipnc
 11823  1E6E  2EB1               	goto	l7040
 11824  1E6F  1F28               	btfss	___fladd@signs,6
 11825  1E70  2E75               	goto	l7010
 11826  1E71  3080               	movlw	128
 11827  1E72  00A0               	movwf	??___fladd
 11828  1E73  0820               	movf	??___fladd,w
 11829  1E74  06A8               	xorwf	___fladd@signs,f
 11830  1E75                     l7010:	
 11831  1E75  082A               	movf	___fladd@bexp,w
 11832  1E76  00A0               	movwf	??___fladd
 11833  1E77  0820               	movf	??___fladd,w
 11834  1E78  00AB               	movwf	___fladd@grs
 11835  1E79  0829               	movf	___fladd@aexp,w
 11836  1E7A  00A0               	movwf	??___fladd
 11837  1E7B  0820               	movf	??___fladd,w
 11838  1E7C  00AA               	movwf	___fladd@bexp
 11839  1E7D  082B               	movf	___fladd@grs,w
 11840  1E7E  00A0               	movwf	??___fladd
 11841  1E7F  0820               	movf	??___fladd,w
 11842  1E80  00A9               	movwf	___fladd@aexp
 11843  1E81  0871               	movf	___fladd@b,w
 11844  1E82  00A0               	movwf	??___fladd
 11845  1E83  0820               	movf	??___fladd,w
 11846  1E84  00AB               	movwf	___fladd@grs
 11847  1E85  0875               	movf	___fladd@a,w
 11848  1E86  00A0               	movwf	??___fladd
 11849  1E87  0820               	movf	??___fladd,w
 11850  1E88  00F1               	movwf	___fladd@b
 11851  1E89  082B               	movf	___fladd@grs,w
 11852  1E8A  00A0               	movwf	??___fladd
 11853  1E8B  0820               	movf	??___fladd,w
 11854  1E8C  00F5               	movwf	___fladd@a
 11855  1E8D  0872               	movf	___fladd@b+1,w
 11856  1E8E  00A0               	movwf	??___fladd
 11857  1E8F  0820               	movf	??___fladd,w
 11858  1E90  00AB               	movwf	___fladd@grs
 11859  1E91  0876               	movf	___fladd@a+1,w
 11860  1E92  00A0               	movwf	??___fladd
 11861  1E93  0820               	movf	??___fladd,w
 11862  1E94  00F2               	movwf	___fladd@b+1
 11863  1E95  082B               	movf	___fladd@grs,w
 11864  1E96  00A0               	movwf	??___fladd
 11865  1E97  0820               	movf	??___fladd,w
 11866  1E98  00F6               	movwf	___fladd@a+1
 11867  1E99  0873               	movf	___fladd@b+2,w
 11868  1E9A  00A0               	movwf	??___fladd
 11869  1E9B  0820               	movf	??___fladd,w
 11870  1E9C  00AB               	movwf	___fladd@grs
 11871  1E9D  0877               	movf	___fladd@a+2,w
 11872  1E9E  00A0               	movwf	??___fladd
 11873  1E9F  0820               	movf	??___fladd,w
 11874  1EA0  00F3               	movwf	___fladd@b+2
 11875  1EA1  082B               	movf	___fladd@grs,w
 11876  1EA2  00A0               	movwf	??___fladd
 11877  1EA3  0820               	movf	??___fladd,w
 11878  1EA4  00F7               	movwf	___fladd@a+2
 11879  1EA5  0874               	movf	___fladd@b+3,w
 11880  1EA6  00A0               	movwf	??___fladd
 11881  1EA7  0820               	movf	??___fladd,w
 11882  1EA8  00AB               	movwf	___fladd@grs
 11883  1EA9  0878               	movf	___fladd@a+3,w
 11884  1EAA  00A0               	movwf	??___fladd
 11885  1EAB  0820               	movf	??___fladd,w
 11886  1EAC  00F4               	movwf	___fladd@b+3
 11887  1EAD  082B               	movf	___fladd@grs,w
 11888  1EAE  00A0               	movwf	??___fladd
 11889  1EAF  0820               	movf	??___fladd,w
 11890  1EB0  00F8               	movwf	___fladd@a+3
 11891  1EB1                     l7040:	
 11892  1EB1  01AB               	clrf	___fladd@grs
 11893  1EB2  0829               	movf	___fladd@aexp,w
 11894  1EB3  00A0               	movwf	??___fladd
 11895  1EB4  01A1               	clrf	??___fladd+1
 11896  1EB5  0821               	movf	??___fladd+1,w
 11897  1EB6  00A3               	movwf	??___fladd+3
 11898  1EB7  082A               	movf	___fladd@bexp,w
 11899  1EB8  0220               	subwf	??___fladd,w
 11900  1EB9  00A2               	movwf	??___fladd+2
 11901  1EBA  1C03               	skipc
 11902  1EBB  03A3               	decf	??___fladd+3,f
 11903  1EBC  0823               	movf	??___fladd+3,w
 11904  1EBD  3A80               	xorlw	128
 11905  1EBE  00A4               	movwf	??___fladd+4
 11906  1EBF  3080               	movlw	128
 11907  1EC0  0224               	subwf	??___fladd+4,w
 11908  1EC1  1D03               	skipz
 11909  1EC2  2EC5               	goto	u9625
 11910  1EC3  301A               	movlw	26
 11911  1EC4  0222               	subwf	??___fladd+2,w
 11912  1EC5                     u9625:	
 11913  1EC5  1C03               	skipc
 11914  1EC6  2EF9               	goto	l7058
 11915  1EC7  0874               	movf	___fladd@b+3,w
 11916  1EC8  0473               	iorwf	___fladd@b+2,w
 11917  1EC9  0472               	iorwf	___fladd@b+1,w
 11918  1ECA  0471               	iorwf	___fladd@b,w
 11919  1ECB  1903               	btfsc	3,2
 11920  1ECC  2ECF               	goto	u9630
 11921  1ECD  3001               	movlw	1
 11922  1ECE  2ED0               	goto	u9640
 11923  1ECF                     u9630:	
 11924  1ECF  3000               	movlw	0
 11925  1ED0                     u9640:	
 11926  1ED0  0020               	movlb	0	; select bank0
 11927  1ED1  00A0               	movwf	??___fladd
 11928  1ED2  0820               	movf	??___fladd,w
 11929  1ED3  00AB               	movwf	___fladd@grs
 11930  1ED4  3000               	movlw	0
 11931  1ED5  00F4               	movwf	___fladd@b+3
 11932  1ED6  3000               	movlw	0
 11933  1ED7  00F3               	movwf	___fladd@b+2
 11934  1ED8  3000               	movlw	0
 11935  1ED9  00F2               	movwf	___fladd@b+1
 11936  1EDA  3000               	movlw	0
 11937  1EDB  00F1               	movwf	___fladd@b
 11938  1EDC  0829               	movf	___fladd@aexp,w
 11939  1EDD  00A0               	movwf	??___fladd
 11940  1EDE  0820               	movf	??___fladd,w
 11941  1EDF  00AA               	movwf	___fladd@bexp
 11942  1EE0  2EFE               	goto	l1179
 11943  1EE1                     l1181:	
 11944  1EE1  1C2B               	btfss	___fladd@grs,0
 11945  1EE2  2EE9               	goto	l7048
 11946  1EE3  362B               	lsrf	___fladd@grs,w
 11947  1EE4  3801               	iorlw	1
 11948  1EE5  00A0               	movwf	??___fladd
 11949  1EE6  0820               	movf	??___fladd,w
 11950  1EE7  00AB               	movwf	___fladd@grs
 11951  1EE8  2EEB               	goto	l7050
 11952  1EE9                     l7048:	
 11953  1EE9  1003               	clrc
 11954  1EEA  0CAB               	rrf	___fladd@grs,f
 11955  1EEB                     l7050:	
 11956  1EEB  1871               	btfsc	___fladd@b,0
 11957  1EEC  17AB               	bsf	___fladd@grs,7
 11958  1EED  3001               	movlw	1
 11959  1EEE  00A0               	movwf	??___fladd
 11960  1EEF                     u9675:	
 11961  1EEF  37F4               	asrf	___fladd@b+3,f
 11962  1EF0  0CF3               	rrf	___fladd@b+2,f
 11963  1EF1  0CF2               	rrf	___fladd@b+1,f
 11964  1EF2  0CF1               	rrf	___fladd@b,f
 11965  1EF3  0BA0               	decfsz	??___fladd& (0+127),f
 11966  1EF4  2EEF               	goto	u9675
 11967  1EF5  3001               	movlw	1
 11968  1EF6  00A0               	movwf	??___fladd
 11969  1EF7  0820               	movf	??___fladd,w
 11970  1EF8  07AA               	addwf	___fladd@bexp,f
 11971  1EF9                     l7058:	
 11972  1EF9  0020               	movlb	0	; select bank0
 11973  1EFA  0829               	movf	___fladd@aexp,w
 11974  1EFB  022A               	subwf	___fladd@bexp,w
 11975  1EFC  1C03               	skipc
 11976  1EFD  2EE1               	goto	l1181
 11977  1EFE                     l1179:	
 11978  1EFE  1B28               	btfsc	___fladd@signs,6
 11979  1EFF  2F2F               	goto	l7084
 11980  1F00  082A               	movf	___fladd@bexp,w
 11981  1F01  1D03               	btfss	3,2
 11982  1F02  2F0C               	goto	l7066
 11983  1F03  3000               	movlw	0
 11984  1F04  00F4               	movwf	?___fladd+3
 11985  1F05  3000               	movlw	0
 11986  1F06  00F3               	movwf	?___fladd+2
 11987  1F07  3000               	movlw	0
 11988  1F08  00F2               	movwf	?___fladd+1
 11989  1F09  3000               	movlw	0
 11990  1F0A  00F1               	movwf	?___fladd
 11991  1F0B  0008               	return
 11992  1F0C                     l7066:	
 11993  1F0C  0875               	movf	___fladd@a,w
 11994  1F0D  07F1               	addwf	___fladd@b,f
 11995  1F0E  0876               	movf	___fladd@a+1,w
 11996  1F0F  3DF2               	addwfc	___fladd@b+1,f
 11997  1F10  0877               	movf	___fladd@a+2,w
 11998  1F11  3DF3               	addwfc	___fladd@b+2,f
 11999  1F12  0878               	movf	___fladd@a+3,w
 12000  1F13  3DF4               	addwfc	___fladd@b+3,f
 12001  1F14  1C74               	btfss	___fladd@b+3,0
 12002  1F15  2FA9               	goto	l7118
 12003  1F16  1C2B               	btfss	___fladd@grs,0
 12004  1F17  2F1E               	goto	l7074
 12005  1F18  362B               	lsrf	___fladd@grs,w
 12006  1F19  3801               	iorlw	1
 12007  1F1A  00A0               	movwf	??___fladd
 12008  1F1B  0820               	movf	??___fladd,w
 12009  1F1C  00AB               	movwf	___fladd@grs
 12010  1F1D  2F20               	goto	l7076
 12011  1F1E                     l7074:	
 12012  1F1E  1003               	clrc
 12013  1F1F  0CAB               	rrf	___fladd@grs,f
 12014  1F20                     l7076:	
 12015  1F20  1871               	btfsc	___fladd@b,0
 12016  1F21  17AB               	bsf	___fladd@grs,7
 12017  1F22  3001               	movlw	1
 12018  1F23  00A0               	movwf	??___fladd
 12019  1F24                     u9745:	
 12020  1F24  37F4               	asrf	___fladd@b+3,f
 12021  1F25  0CF3               	rrf	___fladd@b+2,f
 12022  1F26  0CF2               	rrf	___fladd@b+1,f
 12023  1F27  0CF1               	rrf	___fladd@b,f
 12024  1F28  0BA0               	decfsz	??___fladd& (0+127),f
 12025  1F29  2F24               	goto	u9745
 12026  1F2A  3001               	movlw	1
 12027  1F2B  00A0               	movwf	??___fladd
 12028  1F2C  0820               	movf	??___fladd,w
 12029  1F2D  07AA               	addwf	___fladd@bexp,f
 12030  1F2E  2FA9               	goto	l7118
 12031  1F2F                     l7084:	
 12032  1F2F  0874               	movf	___fladd@b+3,w
 12033  1F30  3A80               	xorlw	128
 12034  1F31  00A0               	movwf	??___fladd
 12035  1F32  0878               	movf	___fladd@a+3,w
 12036  1F33  3A80               	xorlw	128
 12037  1F34  0220               	subwf	??___fladd,w
 12038  1F35  1D03               	skipz
 12039  1F36  2F41               	goto	u9753
 12040  1F37  0877               	movf	___fladd@a+2,w
 12041  1F38  0273               	subwf	___fladd@b+2,w
 12042  1F39  1D03               	skipz
 12043  1F3A  2F41               	goto	u9753
 12044  1F3B  0876               	movf	___fladd@a+1,w
 12045  1F3C  0272               	subwf	___fladd@b+1,w
 12046  1F3D  1D03               	skipz
 12047  1F3E  2F41               	goto	u9753
 12048  1F3F  0875               	movf	___fladd@a,w
 12049  1F40  0271               	subwf	___fladd@b,w
 12050  1F41                     u9753:	
 12051  1F41  1803               	skipnc
 12052  1F42  2F79               	goto	l7094
 12053  1F43  30FF               	movlw	255
 12054  1F44  00A0               	movwf	??___fladd
 12055  1F45  30FF               	movlw	255
 12056  1F46  00A1               	movwf	??___fladd+1
 12057  1F47  30FF               	movlw	255
 12058  1F48  00A2               	movwf	??___fladd+2
 12059  1F49  30FF               	movlw	255
 12060  1F4A  00A3               	movwf	??___fladd+3
 12061  1F4B  0871               	movf	___fladd@b,w
 12062  1F4C  0275               	subwf	___fladd@a,w
 12063  1F4D  00A4               	movwf	??___fladd+4
 12064  1F4E  0872               	movf	___fladd@b+1,w
 12065  1F4F  3B76               	subwfb	___fladd@a+1,w
 12066  1F50  00A5               	movwf	??___fladd+5
 12067  1F51  0873               	movf	___fladd@b+2,w
 12068  1F52  3B77               	subwfb	___fladd@a+2,w
 12069  1F53  00A6               	movwf	??___fladd+6
 12070  1F54  0874               	movf	___fladd@b+3,w
 12071  1F55  3B78               	subwfb	___fladd@a+3,w
 12072  1F56  00A7               	movwf	??___fladd+7
 12073  1F57  0824               	movf	??___fladd+4,w
 12074  1F58  07A0               	addwf	??___fladd,f
 12075  1F59  0825               	movf	??___fladd+5,w
 12076  1F5A  3DA1               	addwfc	??___fladd+1,f
 12077  1F5B  0826               	movf	??___fladd+6,w
 12078  1F5C  3DA2               	addwfc	??___fladd+2,f
 12079  1F5D  0827               	movf	??___fladd+7,w
 12080  1F5E  3DA3               	addwfc	??___fladd+3,f
 12081  1F5F  0823               	movf	??___fladd+3,w
 12082  1F60  00F4               	movwf	___fladd@b+3
 12083  1F61  0822               	movf	??___fladd+2,w
 12084  1F62  00F3               	movwf	___fladd@b+2
 12085  1F63  0821               	movf	??___fladd+1,w
 12086  1F64  00F2               	movwf	___fladd@b+1
 12087  1F65  0820               	movf	??___fladd,w
 12088  1F66  00F1               	movwf	___fladd@b
 12089  1F67  3080               	movlw	128
 12090  1F68  00A0               	movwf	??___fladd
 12091  1F69  0820               	movf	??___fladd,w
 12092  1F6A  06A8               	xorwf	___fladd@signs,f
 12093  1F6B  09AB               	comf	___fladd@grs,f
 12094  1F6C  0AAB               	incf	___fladd@grs,f
 12095  1F6D  082B               	movf	___fladd@grs,w
 12096  1F6E  1D03               	btfss	3,2
 12097  1F6F  2F81               	goto	l1196
 12098  1F70  3001               	movlw	1
 12099  1F71  07F1               	addwf	___fladd@b,f
 12100  1F72  3000               	movlw	0
 12101  1F73  3DF2               	addwfc	___fladd@b+1,f
 12102  1F74  3000               	movlw	0
 12103  1F75  3DF3               	addwfc	___fladd@b+2,f
 12104  1F76  3000               	movlw	0
 12105  1F77  3DF4               	addwfc	___fladd@b+3,f
 12106  1F78  2F81               	goto	l1196
 12107  1F79                     l7094:	
 12108  1F79  0875               	movf	___fladd@a,w
 12109  1F7A  02F1               	subwf	___fladd@b,f
 12110  1F7B  0876               	movf	___fladd@a+1,w
 12111  1F7C  3BF2               	subwfb	___fladd@b+1,f
 12112  1F7D  0877               	movf	___fladd@a+2,w
 12113  1F7E  3BF3               	subwfb	___fladd@b+2,f
 12114  1F7F  0878               	movf	___fladd@a+3,w
 12115  1F80  3BF4               	subwfb	___fladd@b+3,f
 12116  1F81                     l1196:	
 12117  1F81  0874               	movf	___fladd@b+3,w
 12118  1F82  0473               	iorwf	___fladd@b+2,w
 12119  1F83  0472               	iorwf	___fladd@b+1,w
 12120  1F84  0471               	iorwf	___fladd@b,w
 12121  1F85  1D03               	skipz
 12122  1F86  2FA7               	goto	l7116
 12123  1F87  082B               	movf	___fladd@grs,w
 12124  1F88  1D03               	btfss	3,2
 12125  1F89  2FA7               	goto	l7116
 12126  1F8A  3000               	movlw	0
 12127  1F8B  00F4               	movwf	?___fladd+3
 12128  1F8C  3000               	movlw	0
 12129  1F8D  00F3               	movwf	?___fladd+2
 12130  1F8E  3000               	movlw	0
 12131  1F8F  00F2               	movwf	?___fladd+1
 12132  1F90  3000               	movlw	0
 12133  1F91  00F1               	movwf	?___fladd
 12134  1F92  0008               	return
 12135  1F93                     l7102:	
 12136  1F93  3001               	movlw	1
 12137  1F94                     u9795:	
 12138  1F94  35F1               	lslf	___fladd@b,f
 12139  1F95  0DF2               	rlf	___fladd@b+1,f
 12140  1F96  0DF3               	rlf	___fladd@b+2,f
 12141  1F97  0DF4               	rlf	___fladd@b+3,f
 12142  1F98  0B89               	decfsz	9,f
 12143  1F99  2F94               	goto	u9795
 12144  1F9A  1BAB               	btfsc	___fladd@grs,7
 12145  1F9B  1471               	bsf	___fladd@b,0
 12146  1F9C  1C2B               	btfss	___fladd@grs,0
 12147  1F9D  2FA0               	goto	l7110
 12148  1F9E  1403               	setc
 12149  1F9F  2FA1               	goto	L11
 12150  1FA0                     l7110:	
 12151  1FA0  1003               	clrc
 12152  1FA1                     L11:	
 12153  1FA1  0DAB               	rlf	___fladd@grs,f
 12154  1FA2  082A               	movf	___fladd@bexp,w
 12155  1FA3  1903               	btfsc	3,2
 12156  1FA4  2FA7               	goto	l7116
 12157  1FA5  3001               	movlw	1
 12158  1FA6  02AA               	subwf	___fladd@bexp,f
 12159  1FA7                     l7116:	
 12160  1FA7  1FF3               	btfss	___fladd@b+2,7
 12161  1FA8  2F93               	goto	l7102
 12162  1FA9                     l7118:	
 12163  1FA9  01A9               	clrf	___fladd@aexp
 12164  1FAA  1FAB               	btfss	___fladd@grs,7
 12165  1FAB  2FB4               	goto	l7128
 12166  1FAC  082B               	movf	___fladd@grs,w
 12167  1FAD  397F               	andlw	127
 12168  1FAE  1903               	btfsc	3,2
 12169  1FAF  1871               	btfsc	___fladd@b,0
 12170  1FB0  2FB2               	goto	l7124
 12171  1FB1  2FB4               	goto	l7128
 12172  1FB2                     l7124:	
 12173  1FB2  01A9               	clrf	___fladd@aexp
 12174  1FB3  0AA9               	incf	___fladd@aexp,f
 12175  1FB4                     l7128:	
 12176  1FB4  0829               	movf	___fladd@aexp,w
 12177  1FB5  1903               	btfsc	3,2
 12178  1FB6  2FE0               	goto	l1209
 12179  1FB7  3001               	movlw	1
 12180  1FB8  07F1               	addwf	___fladd@b,f
 12181  1FB9  3000               	movlw	0
 12182  1FBA  3DF2               	addwfc	___fladd@b+1,f
 12183  1FBB  3000               	movlw	0
 12184  1FBC  3DF3               	addwfc	___fladd@b+2,f
 12185  1FBD  3000               	movlw	0
 12186  1FBE  3DF4               	addwfc	___fladd@b+3,f
 12187  1FBF  1C74               	btfss	___fladd@b+3,0
 12188  1FC0  2FE0               	goto	l1209
 12189  1FC1  0871               	movf	___fladd@b,w
 12190  1FC2  00A0               	movwf	??___fladd
 12191  1FC3  0872               	movf	___fladd@b+1,w
 12192  1FC4  00A1               	movwf	??___fladd+1
 12193  1FC5  0873               	movf	___fladd@b+2,w
 12194  1FC6  00A2               	movwf	??___fladd+2
 12195  1FC7  0874               	movf	___fladd@b+3,w
 12196  1FC8  00A3               	movwf	??___fladd+3
 12197  1FC9  3001               	movlw	1
 12198  1FCA  00A4               	movwf	??___fladd+4
 12199  1FCB                     u9895:	
 12200  1FCB  37A3               	asrf	??___fladd+3,f
 12201  1FCC  0CA2               	rrf	??___fladd+2,f
 12202  1FCD  0CA1               	rrf	??___fladd+1,f
 12203  1FCE  0CA0               	rrf	??___fladd,f
 12204  1FCF  0BA4               	decfsz	??___fladd+4,f
 12205  1FD0  2FCB               	goto	u9895
 12206  1FD1  0823               	movf	??___fladd+3,w
 12207  1FD2  00F4               	movwf	___fladd@b+3
 12208  1FD3  0822               	movf	??___fladd+2,w
 12209  1FD4  00F3               	movwf	___fladd@b+2
 12210  1FD5  0821               	movf	??___fladd+1,w
 12211  1FD6  00F2               	movwf	___fladd@b+1
 12212  1FD7  0820               	movf	??___fladd,w
 12213  1FD8  00F1               	movwf	___fladd@b
 12214  1FD9  0A2A               	incf	___fladd@bexp,w
 12215  1FDA  1903               	btfsc	3,2
 12216  1FDB  2FE0               	goto	l1209
 12217  1FDC  3001               	movlw	1
 12218  1FDD  00A0               	movwf	??___fladd
 12219  1FDE  0820               	movf	??___fladd,w
 12220  1FDF  07AA               	addwf	___fladd@bexp,f
 12221  1FE0                     l1209:	
 12222  1FE0  0A2A               	incf	___fladd@bexp,w
 12223  1FE1  1D03               	btfss	3,2
 12224  1FE2  082A               	movf	___fladd@bexp,w
 12225  1FE3  1D03               	btfss	3,2
 12226  1FE4  2FF0               	goto	l7146
 12227  1FE5  3000               	movlw	0
 12228  1FE6  00F4               	movwf	___fladd@b+3
 12229  1FE7  3000               	movlw	0
 12230  1FE8  00F3               	movwf	___fladd@b+2
 12231  1FE9  3000               	movlw	0
 12232  1FEA  00F2               	movwf	___fladd@b+1
 12233  1FEB  3000               	movlw	0
 12234  1FEC  00F1               	movwf	___fladd@b
 12235  1FED  082A               	movf	___fladd@bexp,w
 12236  1FEE  1903               	btfsc	3,2
 12237  1FEF  01A8               	clrf	___fladd@signs
 12238  1FF0                     l7146:	
 12239  1FF0  1C2A               	btfss	___fladd@bexp,0
 12240  1FF1  2FF4               	goto	l7150
 12241  1FF2  17F3               	bsf	___fladd@b+2,7
 12242  1FF3  2FF8               	goto	l1217
 12243  1FF4                     l7150:	
 12244  1FF4  307F               	movlw	127
 12245  1FF5  00A0               	movwf	??___fladd
 12246  1FF6  0820               	movf	??___fladd,w
 12247  1FF7  05F3               	andwf	___fladd@b+2,f
 12248  1FF8                     l1217:	
 12249  1FF8  362A               	lsrf	___fladd@bexp,w
 12250  1FF9  00A0               	movwf	??___fladd
 12251  1FFA  0820               	movf	??___fladd,w
 12252  1FFB  00F4               	movwf	___fladd@b+3
 12253  1FFC  1FA8               	btfss	___fladd@signs,7
 12254  1FFD  0008               	return
 12255  1FFE  17F4               	bsf	___fladd@b+3,7
 12256  1FFF  0008               	return
 12257  2000                     __end_of___fladd:	
 12258                           
 12259                           	psect	text25
 12260  3306                     __ptext25:	
 12261 ;; *************** function ___flneg *****************
 12262 ;; Defined at:
 12263 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
 12264 ;; Parameters:    Size  Location     Type
 12265 ;;  f1              4    1[COMMON] unsigned char 
 12266 ;; Auto vars:     Size  Location     Type
 12267 ;;		None
 12268 ;; Return value:  Size  Location     Type
 12269 ;;                  4    1[COMMON] unsigned char 
 12270 ;; Registers used:
 12271 ;;		wreg
 12272 ;; Tracked objects:
 12273 ;;		On entry : 0/0
 12274 ;;		On exit  : 0/0
 12275 ;;		Unchanged: 0/0
 12276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12277 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12280 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12281 ;;Total ram usage:        4 bytes
 12282 ;; Hardware stack levels used:    1
 12283 ;; Hardware stack levels required when called:    1
 12284 ;; This function calls:
 12285 ;;		Nothing
 12286 ;; This function is called by:
 12287 ;;		_efgtoa
 12288 ;; This function uses a non-reentrant model
 12289 ;;
 12290                           
 12291                           
 12292                           ;psect for function ___flneg
 12293  3306                     ___flneg:	
 12294                           
 12295                           ;incstack = 0
 12296                           ; Regs used in ___flneg: [wreg]
 12297  3306  0874               	movf	___flneg@f1+3,w
 12298  3307  0473               	iorwf	___flneg@f1+2,w
 12299  3308  0472               	iorwf	___flneg@f1+1,w
 12300  3309  0471               	iorwf	___flneg@f1,w
 12301  330A  1903               	skipnz
 12302  330B  0008               	return
 12303  330C  3080               	movlw	128
 12304  330D  06F4               	xorwf	___flneg@f1+3,f
 12305  330E  0008               	return
 12306  330F                     __end_of___flneg:	
 12307                           
 12308                           	psect	text26
 12309  3675                     __ptext26:	
 12310 ;; *************** function ___fleq *****************
 12311 ;; Defined at:
 12312 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fleq.c"
 12313 ;; Parameters:    Size  Location     Type
 12314 ;;  ff1             4    1[COMMON] unsigned char 
 12315 ;;  ff2             4    5[COMMON] unsigned char 
 12316 ;; Auto vars:     Size  Location     Type
 12317 ;;		None
 12318 ;; Return value:  Size  Location     Type
 12319 ;;		None               void
 12320 ;; Registers used:
 12321 ;;		wreg, status,2, status,0
 12322 ;; Tracked objects:
 12323 ;;		On entry : 0/0
 12324 ;;		On exit  : 0/0
 12325 ;;		Unchanged: 0/0
 12326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12327 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12329 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12330 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12331 ;;Total ram usage:       12 bytes
 12332 ;; Hardware stack levels used:    1
 12333 ;; Hardware stack levels required when called:    1
 12334 ;; This function calls:
 12335 ;;		Nothing
 12336 ;; This function is called by:
 12337 ;;		_efgtoa
 12338 ;; This function uses a non-reentrant model
 12339 ;;
 12340                           
 12341                           
 12342                           ;psect for function ___fleq
 12343  3675                     ___fleq:	
 12344                           
 12345                           ;incstack = 0
 12346                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 12347  3675  3000               	movlw	0
 12348  3676  0571               	andwf	___fleq@ff1,w
 12349  3677  0020               	movlb	0	; select bank0
 12350  3678  00A0               	movwf	??___fleq
 12351  3679  3000               	movlw	0
 12352  367A  0572               	andwf	___fleq@ff1+1,w
 12353  367B  00A1               	movwf	??___fleq+1
 12354  367C  3080               	movlw	128
 12355  367D  0573               	andwf	___fleq@ff1+2,w
 12356  367E  00A2               	movwf	??___fleq+2
 12357  367F  307F               	movlw	127
 12358  3680  0574               	andwf	___fleq@ff1+3,w
 12359  3681  00A3               	movwf	??___fleq+3
 12360  3682  0823               	movf	??___fleq+3,w
 12361  3683  0422               	iorwf	??___fleq+2,w
 12362  3684  0421               	iorwf	??___fleq+1,w
 12363  3685  0420               	iorwf	??___fleq,w
 12364  3686  1D03               	skipz
 12365  3687  2E90               	goto	l1043
 12366  3688  3000               	movlw	0
 12367  3689  00F4               	movwf	___fleq@ff1+3
 12368  368A  3000               	movlw	0
 12369  368B  00F3               	movwf	___fleq@ff1+2
 12370  368C  3000               	movlw	0
 12371  368D  00F2               	movwf	___fleq@ff1+1
 12372  368E  3000               	movlw	0
 12373  368F  00F1               	movwf	___fleq@ff1
 12374  3690                     l1043:	
 12375  3690  3000               	movlw	0
 12376  3691  0575               	andwf	___fleq@ff2,w
 12377  3692  00A0               	movwf	??___fleq
 12378  3693  3000               	movlw	0
 12379  3694  0576               	andwf	___fleq@ff2+1,w
 12380  3695  00A1               	movwf	??___fleq+1
 12381  3696  3080               	movlw	128
 12382  3697  0577               	andwf	___fleq@ff2+2,w
 12383  3698  00A2               	movwf	??___fleq+2
 12384  3699  307F               	movlw	127
 12385  369A  0578               	andwf	___fleq@ff2+3,w
 12386  369B  00A3               	movwf	??___fleq+3
 12387  369C  0823               	movf	??___fleq+3,w
 12388  369D  0422               	iorwf	??___fleq+2,w
 12389  369E  0421               	iorwf	??___fleq+1,w
 12390  369F  0420               	iorwf	??___fleq,w
 12391  36A0  1D03               	skipz
 12392  36A1  2EAA               	goto	l1044
 12393  36A2  3000               	movlw	0
 12394  36A3  00F8               	movwf	___fleq@ff2+3
 12395  36A4  3000               	movlw	0
 12396  36A5  00F7               	movwf	___fleq@ff2+2
 12397  36A6  3000               	movlw	0
 12398  36A7  00F6               	movwf	___fleq@ff2+1
 12399  36A8  3000               	movlw	0
 12400  36A9  00F5               	movwf	___fleq@ff2
 12401  36AA                     l1044:	
 12402  36AA  0878               	movf	___fleq@ff2+3,w
 12403  36AB  0674               	xorwf	___fleq@ff1+3,w
 12404  36AC  1D03               	skipz
 12405  36AD  2EB8               	goto	u10105
 12406  36AE  0877               	movf	___fleq@ff2+2,w
 12407  36AF  0673               	xorwf	___fleq@ff1+2,w
 12408  36B0  1D03               	skipz
 12409  36B1  2EB8               	goto	u10105
 12410  36B2  0876               	movf	___fleq@ff2+1,w
 12411  36B3  0672               	xorwf	___fleq@ff1+1,w
 12412  36B4  1D03               	skipz
 12413  36B5  2EB8               	goto	u10105
 12414  36B6  0875               	movf	___fleq@ff2,w
 12415  36B7  0671               	xorwf	___fleq@ff1,w
 12416  36B8                     u10105:	
 12417  36B8  1903               	skipnz
 12418  36B9  2EBC               	goto	l7210
 12419  36BA  1003               	clrc
 12420  36BB  0008               	return
 12421  36BC                     l7210:	
 12422  36BC  1403               	setc
 12423  36BD  0008               	return
 12424  36BE                     __end_of___fleq:	
 12425                           
 12426                           	psect	text27
 12427  3630                     __ptext27:	
 12428 ;; *************** function ___awmod *****************
 12429 ;; Defined at:
 12430 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
 12431 ;; Parameters:    Size  Location     Type
 12432 ;;  divisor         2    1[COMMON] int 
 12433 ;;  dividend        2    3[COMMON] int 
 12434 ;; Auto vars:     Size  Location     Type
 12435 ;;  sign            1    7[COMMON] unsigned char 
 12436 ;;  counter         1    6[COMMON] unsigned char 
 12437 ;; Return value:  Size  Location     Type
 12438 ;;                  2    1[COMMON] int 
 12439 ;; Registers used:
 12440 ;;		wreg, status,2, status,0
 12441 ;; Tracked objects:
 12442 ;;		On entry : 0/0
 12443 ;;		On exit  : 0/0
 12444 ;;		Unchanged: 0/0
 12445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12446 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12447 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12448 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12449 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12450 ;;Total ram usage:        7 bytes
 12451 ;; Hardware stack levels used:    1
 12452 ;; Hardware stack levels required when called:    1
 12453 ;; This function calls:
 12454 ;;		Nothing
 12455 ;; This function is called by:
 12456 ;;		_efgtoa
 12457 ;; This function uses a non-reentrant model
 12458 ;;
 12459                           
 12460                           
 12461                           ;psect for function ___awmod
 12462  3630                     ___awmod:	
 12463                           
 12464                           ;incstack = 0
 12465                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 12466  3630  01F7               	clrf	___awmod@sign
 12467  3631  1FF4               	btfss	___awmod@dividend+1,7
 12468  3632  2E3A               	goto	l4764
 12469  3633  09F3               	comf	___awmod@dividend,f
 12470  3634  09F4               	comf	___awmod@dividend+1,f
 12471  3635  0AF3               	incf	___awmod@dividend,f
 12472  3636  1903               	skipnz
 12473  3637  0AF4               	incf	___awmod@dividend+1,f
 12474  3638  01F7               	clrf	___awmod@sign
 12475  3639  0AF7               	incf	___awmod@sign,f
 12476  363A                     l4764:	
 12477  363A  1FF2               	btfss	___awmod@divisor+1,7
 12478  363B  2E41               	goto	l4768
 12479  363C  09F1               	comf	___awmod@divisor,f
 12480  363D  09F2               	comf	___awmod@divisor+1,f
 12481  363E  0AF1               	incf	___awmod@divisor,f
 12482  363F  1903               	skipnz
 12483  3640  0AF2               	incf	___awmod@divisor+1,f
 12484  3641                     l4768:	
 12485  3641  0871               	movf	___awmod@divisor,w
 12486  3642  0472               	iorwf	___awmod@divisor+1,w
 12487  3643  1903               	btfsc	3,2
 12488  3644  2E68               	goto	l4786
 12489  3645  01F6               	clrf	___awmod@counter
 12490  3646  0AF6               	incf	___awmod@counter,f
 12491  3647                     l4776:	
 12492  3647  1BF2               	btfsc	___awmod@divisor+1,7
 12493  3648  2E53               	goto	l4778
 12494  3649  3001               	movlw	1
 12495  364A                     u6055:	
 12496  364A  35F1               	lslf	___awmod@divisor,f
 12497  364B  0DF2               	rlf	___awmod@divisor+1,f
 12498  364C  0B89               	decfsz	9,f
 12499  364D  2E4A               	goto	u6055
 12500  364E  3001               	movlw	1
 12501  364F  00F5               	movwf	??___awmod
 12502  3650  0875               	movf	??___awmod,w
 12503  3651  07F6               	addwf	___awmod@counter,f
 12504  3652  2E47               	goto	l4776
 12505  3653                     l4778:	
 12506  3653  0872               	movf	___awmod@divisor+1,w
 12507  3654  0274               	subwf	___awmod@dividend+1,w
 12508  3655  1D03               	skipz
 12509  3656  2E59               	goto	u6075
 12510  3657  0871               	movf	___awmod@divisor,w
 12511  3658  0273               	subwf	___awmod@dividend,w
 12512  3659                     u6075:	
 12513  3659  1C03               	skipc
 12514  365A  2E5F               	goto	l4782
 12515  365B  0871               	movf	___awmod@divisor,w
 12516  365C  02F3               	subwf	___awmod@dividend,f
 12517  365D  0872               	movf	___awmod@divisor+1,w
 12518  365E  3BF4               	subwfb	___awmod@dividend+1,f
 12519  365F                     l4782:	
 12520  365F  3001               	movlw	1
 12521  3660                     u6085:	
 12522  3660  36F2               	lsrf	___awmod@divisor+1,f
 12523  3661  0CF1               	rrf	___awmod@divisor,f
 12524  3662  0B89               	decfsz	9,f
 12525  3663  2E60               	goto	u6085
 12526  3664  3001               	movlw	1
 12527  3665  02F6               	subwf	___awmod@counter,f
 12528  3666  1D03               	btfss	3,2
 12529  3667  2E53               	goto	l4778
 12530  3668                     l4786:	
 12531  3668  0877               	movf	___awmod@sign,w
 12532  3669  1903               	btfsc	3,2
 12533  366A  2E70               	goto	l4790
 12534  366B  09F3               	comf	___awmod@dividend,f
 12535  366C  09F4               	comf	___awmod@dividend+1,f
 12536  366D  0AF3               	incf	___awmod@dividend,f
 12537  366E  1903               	skipnz
 12538  366F  0AF4               	incf	___awmod@dividend+1,f
 12539  3670                     l4790:	
 12540  3670  0874               	movf	___awmod@dividend+1,w
 12541  3671  00F2               	movwf	?___awmod+1
 12542  3672  0873               	movf	___awmod@dividend,w
 12543  3673  00F1               	movwf	?___awmod
 12544  3674  0008               	return
 12545  3675                     __end_of___awmod:	
 12546                           
 12547                           	psect	text28
 12548  37AF                     __ptext28:	
 12549 ;; *************** function ___awdiv *****************
 12550 ;; Defined at:
 12551 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 12552 ;; Parameters:    Size  Location     Type
 12553 ;;  divisor         2    1[COMMON] int 
 12554 ;;  dividend        2    3[COMMON] int 
 12555 ;; Auto vars:     Size  Location     Type
 12556 ;;  quotient        2    8[COMMON] int 
 12557 ;;  sign            1    7[COMMON] unsigned char 
 12558 ;;  counter         1    6[COMMON] unsigned char 
 12559 ;; Return value:  Size  Location     Type
 12560 ;;                  2    1[COMMON] int 
 12561 ;; Registers used:
 12562 ;;		wreg, status,2, status,0
 12563 ;; Tracked objects:
 12564 ;;		On entry : 0/0
 12565 ;;		On exit  : 0/0
 12566 ;;		Unchanged: 0/0
 12567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12568 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12569 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12570 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12571 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12572 ;;Total ram usage:        9 bytes
 12573 ;; Hardware stack levels used:    1
 12574 ;; Hardware stack levels required when called:    1
 12575 ;; This function calls:
 12576 ;;		Nothing
 12577 ;; This function is called by:
 12578 ;;		_efgtoa
 12579 ;; This function uses a non-reentrant model
 12580 ;;
 12581                           
 12582                           
 12583                           ;psect for function ___awdiv
 12584  37AF                     ___awdiv:	
 12585                           
 12586                           ;incstack = 0
 12587                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 12588  37AF  01F7               	clrf	___awdiv@sign
 12589  37B0  1FF2               	btfss	___awdiv@divisor+1,7
 12590  37B1  2FB9               	goto	l4720
 12591  37B2  09F1               	comf	___awdiv@divisor,f
 12592  37B3  09F2               	comf	___awdiv@divisor+1,f
 12593  37B4  0AF1               	incf	___awdiv@divisor,f
 12594  37B5  1903               	skipnz
 12595  37B6  0AF2               	incf	___awdiv@divisor+1,f
 12596  37B7  01F7               	clrf	___awdiv@sign
 12597  37B8  0AF7               	incf	___awdiv@sign,f
 12598  37B9                     l4720:	
 12599  37B9  1FF4               	btfss	___awdiv@dividend+1,7
 12600  37BA  2FC4               	goto	l4726
 12601  37BB  09F3               	comf	___awdiv@dividend,f
 12602  37BC  09F4               	comf	___awdiv@dividend+1,f
 12603  37BD  0AF3               	incf	___awdiv@dividend,f
 12604  37BE  1903               	skipnz
 12605  37BF  0AF4               	incf	___awdiv@dividend+1,f
 12606  37C0  3001               	movlw	1
 12607  37C1  00F5               	movwf	??___awdiv
 12608  37C2  0875               	movf	??___awdiv,w
 12609  37C3  06F7               	xorwf	___awdiv@sign,f
 12610  37C4                     l4726:	
 12611  37C4  01F8               	clrf	___awdiv@quotient
 12612  37C5  01F9               	clrf	___awdiv@quotient+1
 12613  37C6  0871               	movf	___awdiv@divisor,w
 12614  37C7  0472               	iorwf	___awdiv@divisor+1,w
 12615  37C8  1903               	btfsc	3,2
 12616  37C9  2FF3               	goto	l4748
 12617  37CA  01F6               	clrf	___awdiv@counter
 12618  37CB  0AF6               	incf	___awdiv@counter,f
 12619  37CC                     l4736:	
 12620  37CC  1BF2               	btfsc	___awdiv@divisor+1,7
 12621  37CD  2FD8               	goto	l4738
 12622  37CE  3001               	movlw	1
 12623  37CF                     u5955:	
 12624  37CF  35F1               	lslf	___awdiv@divisor,f
 12625  37D0  0DF2               	rlf	___awdiv@divisor+1,f
 12626  37D1  0B89               	decfsz	9,f
 12627  37D2  2FCF               	goto	u5955
 12628  37D3  3001               	movlw	1
 12629  37D4  00F5               	movwf	??___awdiv
 12630  37D5  0875               	movf	??___awdiv,w
 12631  37D6  07F6               	addwf	___awdiv@counter,f
 12632  37D7  2FCC               	goto	l4736
 12633  37D8                     l4738:	
 12634  37D8  3001               	movlw	1
 12635  37D9                     u5975:	
 12636  37D9  35F8               	lslf	___awdiv@quotient,f
 12637  37DA  0DF9               	rlf	___awdiv@quotient+1,f
 12638  37DB  0B89               	decfsz	9,f
 12639  37DC  2FD9               	goto	u5975
 12640  37DD  0872               	movf	___awdiv@divisor+1,w
 12641  37DE  0274               	subwf	___awdiv@dividend+1,w
 12642  37DF  1D03               	skipz
 12643  37E0  2FE3               	goto	u5985
 12644  37E1  0871               	movf	___awdiv@divisor,w
 12645  37E2  0273               	subwf	___awdiv@dividend,w
 12646  37E3                     u5985:	
 12647  37E3  1C03               	skipc
 12648  37E4  2FEA               	goto	l4744
 12649  37E5  0871               	movf	___awdiv@divisor,w
 12650  37E6  02F3               	subwf	___awdiv@dividend,f
 12651  37E7  0872               	movf	___awdiv@divisor+1,w
 12652  37E8  3BF4               	subwfb	___awdiv@dividend+1,f
 12653  37E9  1478               	bsf	___awdiv@quotient,0
 12654  37EA                     l4744:	
 12655  37EA  3001               	movlw	1
 12656  37EB                     u5995:	
 12657  37EB  36F2               	lsrf	___awdiv@divisor+1,f
 12658  37EC  0CF1               	rrf	___awdiv@divisor,f
 12659  37ED  0B89               	decfsz	9,f
 12660  37EE  2FEB               	goto	u5995
 12661  37EF  3001               	movlw	1
 12662  37F0  02F6               	subwf	___awdiv@counter,f
 12663  37F1  1D03               	btfss	3,2
 12664  37F2  2FD8               	goto	l4738
 12665  37F3                     l4748:	
 12666  37F3  0877               	movf	___awdiv@sign,w
 12667  37F4  1903               	btfsc	3,2
 12668  37F5  2FFB               	goto	l4752
 12669  37F6  09F8               	comf	___awdiv@quotient,f
 12670  37F7  09F9               	comf	___awdiv@quotient+1,f
 12671  37F8  0AF8               	incf	___awdiv@quotient,f
 12672  37F9  1903               	skipnz
 12673  37FA  0AF9               	incf	___awdiv@quotient+1,f
 12674  37FB                     l4752:	
 12675  37FB  0879               	movf	___awdiv@quotient+1,w
 12676  37FC  00F2               	movwf	?___awdiv+1
 12677  37FD  0878               	movf	___awdiv@quotient,w
 12678  37FE  00F1               	movwf	?___awdiv
 12679  37FF  0008               	return
 12680  3800                     __end_of___awdiv:	
 12681                           
 12682                           	psect	text29
 12683  1B72                     __ptext29:	
 12684 ;; *************** function _dtoa *****************
 12685 ;; Defined at:
 12686 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 12687 ;; Parameters:    Size  Location     Type
 12688 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
 12689 ;;		 -> vsnprintf@f(6), 
 12690 ;;  d               8   18[BANK0 ] long long 
 12691 ;; Auto vars:     Size  Location     Type
 12692 ;;  n               8   37[BANK0 ] long long 
 12693 ;;  i               2   45[BANK0 ] int 
 12694 ;;  s               2   35[BANK0 ] int 
 12695 ;;  w               2   33[BANK0 ] int 
 12696 ;;  p               2   31[BANK0 ] int 
 12697 ;; Return value:  Size  Location     Type
 12698 ;;                  2   16[BANK0 ] int 
 12699 ;; Registers used:
 12700 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12701 ;; Tracked objects:
 12702 ;;		On entry : 0/0
 12703 ;;		On exit  : 0/0
 12704 ;;		Unchanged: 0/0
 12705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12706 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12707 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12708 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12709 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12710 ;;Total ram usage:       31 bytes
 12711 ;; Hardware stack levels used:    1
 12712 ;; Hardware stack levels required when called:    5
 12713 ;; This function calls:
 12714 ;;		___aodiv
 12715 ;;		___aomod
 12716 ;;		_abs
 12717 ;;		_pad
 12718 ;; This function is called by:
 12719 ;;		_vfpfcnvrt
 12720 ;; This function uses a non-reentrant model
 12721 ;;
 12722                           
 12723                           
 12724                           ;psect for function _dtoa
 12725  1B72                     _dtoa:	
 12726                           
 12727                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
 12728                           
 12729                           ;incstack = 0
 12730                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12731  1B72  0020               	movlb	0	; select bank0
 12732  1B73  0832               	movf	dtoa@d,w
 12733  1B74  00C5               	movwf	dtoa@n
 12734  1B75  0833               	movf	dtoa@d+1,w
 12735  1B76  00C6               	movwf	dtoa@n+1
 12736  1B77  0834               	movf	dtoa@d+2,w
 12737  1B78  00C7               	movwf	dtoa@n+2
 12738  1B79  0835               	movf	dtoa@d+3,w
 12739  1B7A  00C8               	movwf	dtoa@n+3
 12740  1B7B  0836               	movf	dtoa@d+4,w
 12741  1B7C  00C9               	movwf	dtoa@n+4
 12742  1B7D  0837               	movf	dtoa@d+5,w
 12743  1B7E  00CA               	movwf	dtoa@n+5
 12744  1B7F  0838               	movf	dtoa@d+6,w
 12745  1B80  00CB               	movwf	dtoa@n+6
 12746  1B81  0839               	movf	dtoa@d+7,w
 12747  1B82  00CC               	movwf	dtoa@n+7
 12748                           
 12749                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 12750  1B83  3045               	movlw	low dtoa@n
 12751  1B84  0086               	movwf	6
 12752  1B85  3000               	movlw	high dtoa@n
 12753  1B86  0087               	movwf	7
 12754  1B87  3F47               	moviw [7]fsr1
 12755  1B88  00BA               	movwf	??_dtoa
 12756  1B89  1FBA               	btfss	??_dtoa,7
 12757  1B8A  2B8D               	goto	u10120
 12758  1B8B  3001               	movlw	1
 12759  1B8C  2B8E               	goto	u10130
 12760  1B8D                     u10120:	
 12761  1B8D  3000               	movlw	0
 12762  1B8E                     u10130:	
 12763  1B8E  0020               	movlb	0	; select bank0
 12764  1B8F  00BB               	movwf	??_dtoa+1
 12765  1B90  01BC               	clrf	??_dtoa+2
 12766  1B91  083B               	movf	??_dtoa+1,w
 12767  1B92  00C3               	movwf	dtoa@s
 12768  1B93  083C               	movf	??_dtoa+2,w
 12769  1B94  00C4               	movwf	dtoa@s+1
 12770                           
 12771                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 12772  1B95  0843               	movf	dtoa@s,w
 12773  1B96  0444               	iorwf	dtoa@s+1,w
 12774  1B97  1903               	btfsc	3,2
 12775  1B98  2BB7               	goto	l571
 12776                           
 12777                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 12778  1B99  09C5               	comf	dtoa@n,f
 12779  1B9A  09C6               	comf	dtoa@n+1,f
 12780  1B9B  09C7               	comf	dtoa@n+2,f
 12781  1B9C  09C8               	comf	dtoa@n+3,f
 12782  1B9D  09C9               	comf	dtoa@n+4,f
 12783  1B9E  09CA               	comf	dtoa@n+5,f
 12784  1B9F  09CB               	comf	dtoa@n+6,f
 12785  1BA0  09CC               	comf	dtoa@n+7,f
 12786  1BA1  0AC5               	incf	dtoa@n,f
 12787  1BA2  1D03               	skipz
 12788  1BA3  2BB7               	goto	l571
 12789  1BA4  0AC6               	incf	dtoa@n+1,f
 12790  1BA5  1D03               	skipz
 12791  1BA6  2BB7               	goto	l571
 12792  1BA7  0AC7               	incf	dtoa@n+2,f
 12793  1BA8  1D03               	skipz
 12794  1BA9  2BB7               	goto	l571
 12795  1BAA  0AC8               	incf	dtoa@n+3,f
 12796  1BAB  1D03               	skipz
 12797  1BAC  2BB7               	goto	l571
 12798  1BAD  0AC9               	incf	dtoa@n+4,f
 12799  1BAE  1D03               	skipz
 12800  1BAF  2BB7               	goto	l571
 12801  1BB0  0ACA               	incf	dtoa@n+5,f
 12802  1BB1  1D03               	skipz
 12803  1BB2  2BB7               	goto	l571
 12804  1BB3  0ACB               	incf	dtoa@n+6,f
 12805  1BB4  1D03               	skipz
 12806  1BB5  2BB7               	goto	l571
 12807  1BB6  0ACC               	incf	dtoa@n+7,f
 12808  1BB7                     l571:	
 12809                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
 12810                           
 12811                           
 12812                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 12813  1BB7  0023               	movlb	3	; select bank3
 12814  1BB8  1BC1               	btfsc	(_prec+1)^(0+384),7
 12815  1BB9  2BBE               	goto	l572
 12816                           
 12817                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 12818  1BBA  30FD               	movlw	253
 12819  1BBB  05C2               	andwf	_flags^(0+384),f
 12820  1BBC  30FF               	movlw	255
 12821  1BBD  05C3               	andwf	(_flags+1)^(0+384),f
 12822  1BBE                     l572:	
 12823                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
 12824                           
 12825                           
 12826                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 12827  1BBE  0841               	movf	(_prec+1)^(0+384),w
 12828  1BBF  3A80               	xorlw	128
 12829  1BC0  0020               	movlb	0	; select bank0
 12830  1BC1  00BA               	movwf	??_dtoa
 12831  1BC2  3080               	movlw	128
 12832  1BC3  023A               	subwf	??_dtoa,w
 12833  1BC4  1D03               	skipz
 12834  1BC5  2BC9               	goto	u10175
 12835  1BC6  3001               	movlw	1
 12836  1BC7  0023               	movlb	3	; select bank3
 12837  1BC8  0240               	subwf	_prec^(0+384),w
 12838  1BC9                     u10175:	
 12839  1BC9  1803               	skipnc
 12840  1BCA  2BD1               	goto	l7246
 12841  1BCB  3001               	movlw	1
 12842  1BCC  0020               	movlb	0	; select bank0
 12843  1BCD  00BF               	movwf	dtoa@p
 12844  1BCE  3000               	movlw	0
 12845  1BCF  00C0               	movwf	dtoa@p+1
 12846  1BD0  2BD9               	goto	l576
 12847  1BD1                     l7246:	
 12848  1BD1  0023               	movlb	3	; select bank3
 12849  1BD2  0841               	movf	(_prec+1)^(0+384),w
 12850  1BD3  0020               	movlb	0	; select bank0
 12851  1BD4  00C0               	movwf	dtoa@p+1
 12852  1BD5  0023               	movlb	3	; select bank3
 12853  1BD6  0840               	movf	_prec^(0+384),w
 12854  1BD7  0020               	movlb	0	; select bank0
 12855  1BD8  00BF               	movwf	dtoa@p
 12856  1BD9                     l576:	
 12857                           
 12858                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 12859  1BD9  0023               	movlb	3	; select bank3
 12860  1BDA  083F               	movf	(_width+1)^(0+384),w
 12861  1BDB  0020               	movlb	0	; select bank0
 12862  1BDC  00C2               	movwf	dtoa@w+1
 12863  1BDD  0023               	movlb	3	; select bank3
 12864  1BDE  083E               	movf	_width^(0+384),w
 12865  1BDF  0020               	movlb	0	; select bank0
 12866  1BE0  00C1               	movwf	dtoa@w
 12867                           
 12868                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 12869  1BE1  0843               	movf	dtoa@s,w
 12870  1BE2  0444               	iorwf	dtoa@s+1,w
 12871  1BE3  1D03               	btfss	3,2
 12872  1BE4  2BE8               	goto	l7252
 12873  1BE5  0023               	movlb	3	; select bank3
 12874  1BE6  1D42               	btfss	_flags^(0+384),2
 12875  1BE7  2BED               	goto	l577
 12876  1BE8                     l7252:	
 12877                           
 12878                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 12879  1BE8  30FF               	movlw	255
 12880  1BE9  0020               	movlb	0	; select bank0
 12881  1BEA  07C1               	addwf	dtoa@w,f
 12882  1BEB  30FF               	movlw	255
 12883  1BEC  3DC2               	addwfc	dtoa@w+1,f
 12884  1BED                     l577:	
 12885                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
 12886                           
 12887                           
 12888                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 12889  1BED  304F               	movlw	79
 12890  1BEE  0020               	movlb	0	; select bank0
 12891  1BEF  00CD               	movwf	dtoa@i
 12892  1BF0  3000               	movlw	0
 12893  1BF1  00CE               	movwf	dtoa@i+1
 12894                           
 12895                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 12896  1BF2  0024               	movlb	4	; select bank4
 12897  1BF3  01EF               	clrf	(_dbuf^(0+512)+79)
 12898                           
 12899                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12900  1BF4  2C83               	goto	l580
 12901  1BF5                     l7266:	
 12902  1BF5  0020               	movlb	0	; select bank0
 12903  1BF6  0845               	movf	dtoa@n,w
 12904  1BF7  0446               	iorwf	dtoa@n+1,w
 12905  1BF8  0447               	iorwf	dtoa@n+2,w
 12906  1BF9  0448               	iorwf	dtoa@n+3,w
 12907  1BFA  0449               	iorwf	dtoa@n+4,w
 12908  1BFB  044A               	iorwf	dtoa@n+5,w
 12909  1BFC  044B               	iorwf	dtoa@n+6,w
 12910  1BFD  044C               	iorwf	dtoa@n+7,w
 12911  1BFE  1D03               	skipz
 12912  1BFF  2C1A               	goto	l7256
 12913  1C00  0840               	movf	dtoa@p+1,w
 12914  1C01  3A80               	xorlw	128
 12915  1C02  00BA               	movwf	??_dtoa
 12916  1C03  3080               	movlw	128
 12917  1C04  023A               	subwf	??_dtoa,w
 12918  1C05  1D03               	skipz
 12919  1C06  2C09               	goto	u10225
 12920  1C07  3001               	movlw	1
 12921  1C08  023F               	subwf	dtoa@p,w
 12922  1C09                     u10225:	
 12923  1C09  1803               	skipnc
 12924  1C0A  2C1A               	goto	l7256
 12925  1C0B  0020               	movlb	0	; select bank0
 12926  1C0C  0842               	movf	dtoa@w+1,w
 12927  1C0D  3A80               	xorlw	128
 12928  1C0E  00BA               	movwf	??_dtoa
 12929  1C0F  3080               	movlw	128
 12930  1C10  023A               	subwf	??_dtoa,w
 12931  1C11  1D03               	skipz
 12932  1C12  2C15               	goto	u10235
 12933  1C13  3001               	movlw	1
 12934  1C14  0241               	subwf	dtoa@w,w
 12935  1C15                     u10235:	
 12936  1C15  1C03               	skipc
 12937  1C16  2C8F               	goto	l7274
 12938  1C17  0023               	movlb	3	; select bank3
 12939  1C18  1CC2               	btfss	_flags^(0+384),1
 12940  1C19  2C8F               	goto	l7274
 12941  1C1A                     l7256:	
 12942                           
 12943                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 12944  1C1A  30FF               	movlw	255
 12945  1C1B  0020               	movlb	0	; select bank0
 12946  1C1C  07CD               	addwf	dtoa@i,f
 12947  1C1D  30FF               	movlw	255
 12948  1C1E  3DCE               	addwfc	dtoa@i+1,f
 12949                           
 12950                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 12951  1C1F  300A               	movlw	10
 12952  1C20  00A0               	movwf	___aomod@divisor
 12953  1C21  01A1               	clrf	___aomod@divisor+1
 12954  1C22  01A2               	clrf	___aomod@divisor+2
 12955  1C23  01A3               	clrf	___aomod@divisor+3
 12956  1C24  01A4               	clrf	___aomod@divisor+4
 12957  1C25  01A5               	clrf	___aomod@divisor+5
 12958  1C26  01A6               	clrf	___aomod@divisor+6
 12959  1C27  01A7               	clrf	___aomod@divisor+7
 12960  1C28  0845               	movf	dtoa@n,w
 12961  1C29  00A8               	movwf	___aomod@dividend
 12962  1C2A  0846               	movf	dtoa@n+1,w
 12963  1C2B  00A9               	movwf	___aomod@dividend+1
 12964  1C2C  0847               	movf	dtoa@n+2,w
 12965  1C2D  00AA               	movwf	___aomod@dividend+2
 12966  1C2E  0848               	movf	dtoa@n+3,w
 12967  1C2F  00AB               	movwf	___aomod@dividend+3
 12968  1C30  0849               	movf	dtoa@n+4,w
 12969  1C31  00AC               	movwf	___aomod@dividend+4
 12970  1C32  084A               	movf	dtoa@n+5,w
 12971  1C33  00AD               	movwf	___aomod@dividend+5
 12972  1C34  084B               	movf	dtoa@n+6,w
 12973  1C35  00AE               	movwf	___aomod@dividend+6
 12974  1C36  084C               	movf	dtoa@n+7,w
 12975  1C37  00AF               	movwf	___aomod@dividend+7
 12976  1C38  31A3  2379  319B   	fcall	___aomod
 12977  1C3B  0020               	movlb	0	; select bank0
 12978  1C3C  0821               	movf	?___aomod+1,w
 12979  1C3D  00F5               	movwf	abs@a+1
 12980  1C3E  0820               	movf	?___aomod,w
 12981  1C3F  00F4               	movwf	abs@a
 12982  1C40  31B3  2392  319B   	fcall	_abs
 12983  1C43  0874               	movf	?_abs,w
 12984  1C44  3E30               	addlw	48
 12985  1C45  0020               	movlb	0	; select bank0
 12986  1C46  00BA               	movwf	??_dtoa
 12987  1C47  084D               	movf	dtoa@i,w
 12988  1C48  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 12989  1C49  0086               	movwf	6
 12990  1C4A  3002               	movlw	2	; select bank4/5
 12991  1C4B  0087               	movwf	7
 12992  1C4C  083A               	movf	??_dtoa,w
 12993  1C4D  0081               	movwf	1
 12994                           
 12995                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 12996  1C4E  30FF               	movlw	255
 12997  1C4F  07BF               	addwf	dtoa@p,f
 12998  1C50  30FF               	movlw	255
 12999  1C51  3DC0               	addwfc	dtoa@p+1,f
 13000                           
 13001                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 13002  1C52  30FF               	movlw	255
 13003  1C53  07C1               	addwf	dtoa@w,f
 13004  1C54  30FF               	movlw	255
 13005  1C55  3DC2               	addwfc	dtoa@w+1,f
 13006                           
 13007                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 13008  1C56  300A               	movlw	10
 13009  1C57  00A0               	movwf	___aodiv@divisor
 13010  1C58  01A1               	clrf	___aodiv@divisor+1
 13011  1C59  01A2               	clrf	___aodiv@divisor+2
 13012  1C5A  01A3               	clrf	___aodiv@divisor+3
 13013  1C5B  01A4               	clrf	___aodiv@divisor+4
 13014  1C5C  01A5               	clrf	___aodiv@divisor+5
 13015  1C5D  01A6               	clrf	___aodiv@divisor+6
 13016  1C5E  01A7               	clrf	___aodiv@divisor+7
 13017  1C5F  0845               	movf	dtoa@n,w
 13018  1C60  00A8               	movwf	___aodiv@dividend
 13019  1C61  0846               	movf	dtoa@n+1,w
 13020  1C62  00A9               	movwf	___aodiv@dividend+1
 13021  1C63  0847               	movf	dtoa@n+2,w
 13022  1C64  00AA               	movwf	___aodiv@dividend+2
 13023  1C65  0848               	movf	dtoa@n+3,w
 13024  1C66  00AB               	movwf	___aodiv@dividend+3
 13025  1C67  0849               	movf	dtoa@n+4,w
 13026  1C68  00AC               	movwf	___aodiv@dividend+4
 13027  1C69  084A               	movf	dtoa@n+5,w
 13028  1C6A  00AD               	movwf	___aodiv@dividend+5
 13029  1C6B  084B               	movf	dtoa@n+6,w
 13030  1C6C  00AE               	movwf	___aodiv@dividend+6
 13031  1C6D  084C               	movf	dtoa@n+7,w
 13032  1C6E  00AF               	movwf	___aodiv@dividend+7
 13033  1C6F  31A7  270D  319B   	fcall	___aodiv
 13034  1C72  0020               	movlb	0	; select bank0
 13035  1C73  0820               	movf	?___aodiv,w
 13036  1C74  00C5               	movwf	dtoa@n
 13037  1C75  0821               	movf	?___aodiv+1,w
 13038  1C76  00C6               	movwf	dtoa@n+1
 13039  1C77  0822               	movf	?___aodiv+2,w
 13040  1C78  00C7               	movwf	dtoa@n+2
 13041  1C79  0823               	movf	?___aodiv+3,w
 13042  1C7A  00C8               	movwf	dtoa@n+3
 13043  1C7B  0824               	movf	?___aodiv+4,w
 13044  1C7C  00C9               	movwf	dtoa@n+4
 13045  1C7D  0825               	movf	?___aodiv+5,w
 13046  1C7E  00CA               	movwf	dtoa@n+5
 13047  1C7F  0826               	movf	?___aodiv+6,w
 13048  1C80  00CB               	movwf	dtoa@n+6
 13049  1C81  0827               	movf	?___aodiv+7,w
 13050  1C82  00CC               	movwf	dtoa@n+7
 13051  1C83                     l580:	
 13052                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
 13053                           
 13054                           
 13055                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13056  1C83  0020               	movlb	0	; select bank0
 13057  1C84  084E               	movf	dtoa@i+1,w
 13058  1C85  3A80               	xorlw	128
 13059  1C86  00BA               	movwf	??_dtoa
 13060  1C87  3080               	movlw	128
 13061  1C88  023A               	subwf	??_dtoa,w
 13062  1C89  1D03               	skipz
 13063  1C8A  2C8D               	goto	u10205
 13064  1C8B  3001               	movlw	1
 13065  1C8C  024D               	subwf	dtoa@i,w
 13066  1C8D                     u10205:	
 13067  1C8D  1803               	btfsc	3,0
 13068  1C8E  2BF5               	goto	l7266
 13069  1C8F                     l7274:	
 13070                           
 13071                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 13072  1C8F  0020               	movlb	0	; select bank0
 13073  1C90  0843               	movf	dtoa@s,w
 13074  1C91  0444               	iorwf	dtoa@s+1,w
 13075  1C92  1D03               	btfss	3,2
 13076  1C93  2C97               	goto	l7278
 13077  1C94  0023               	movlb	3	; select bank3
 13078  1C95  1D42               	btfss	_flags^(0+384),2
 13079  1C96  2CAF               	goto	l7288
 13080  1C97                     l7278:	
 13081                           
 13082                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 13083  1C97  30FF               	movlw	255
 13084  1C98  0020               	movlb	0	; select bank0
 13085  1C99  07CD               	addwf	dtoa@i,f
 13086  1C9A  30FF               	movlw	255
 13087  1C9B  3DCE               	addwfc	dtoa@i+1,f
 13088                           
 13089                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 13090  1C9C  0843               	movf	dtoa@s,w
 13091  1C9D  0444               	iorwf	dtoa@s+1,w
 13092  1C9E  1D03               	btfss	3,2
 13093  1C9F  2CA2               	goto	l7284
 13094  1CA0  302B               	movlw	43
 13095  1CA1  2CA3               	goto	L12
 13096  1CA2                     l7284:	
 13097  1CA2  302D               	movlw	45
 13098  1CA3                     L12:	
 13099  1CA3  00BD               	movwf	_dtoa$1060
 13100  1CA4  3000               	movlw	0
 13101  1CA5  00BE               	movwf	_dtoa$1060+1
 13102  1CA6  083D               	movf	_dtoa$1060,w
 13103  1CA7  00BA               	movwf	??_dtoa
 13104  1CA8  084D               	movf	dtoa@i,w
 13105  1CA9  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 13106  1CAA  0086               	movwf	6
 13107  1CAB  3002               	movlw	2	; select bank4/5
 13108  1CAC  0087               	movwf	7
 13109  1CAD  083A               	movf	??_dtoa,w
 13110  1CAE  0081               	movwf	1
 13111  1CAF                     l7288:	
 13112                           
 13113                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 13114  1CAF  0020               	movlb	0	; select bank0
 13115  1CB0  0831               	movf	dtoa@fp+1,w
 13116  1CB1  00A7               	movwf	pad@fp+1
 13117  1CB2  0830               	movf	dtoa@fp,w
 13118  1CB3  00A6               	movwf	pad@fp
 13119  1CB4  084D               	movf	dtoa@i,w
 13120  1CB5  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 13121  1CB6  00BA               	movwf	??_dtoa
 13122  1CB7  083A               	movf	??_dtoa,w
 13123  1CB8  00A8               	movwf	pad@buf
 13124  1CB9  0842               	movf	dtoa@w+1,w
 13125  1CBA  00AA               	movwf	pad@p+1
 13126  1CBB  0841               	movf	dtoa@w,w
 13127  1CBC  00A9               	movwf	pad@p
 13128  1CBD  31B7  275E         	fcall	_pad
 13129  1CBF  0020               	movlb	0	; select bank0
 13130  1CC0  0827               	movf	?_pad+1,w
 13131  1CC1  00B1               	movwf	?_dtoa+1
 13132  1CC2  0826               	movf	?_pad,w
 13133  1CC3  00B0               	movwf	?_dtoa
 13134  1CC4  0008               	return
 13135  1CC5                     __end_of_dtoa:	
 13136                           
 13137                           	psect	text30
 13138  3392                     __ptext30:	
 13139 ;; *************** function _abs *****************
 13140 ;; Defined at:
 13141 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
 13142 ;; Parameters:    Size  Location     Type
 13143 ;;  a               2    4[COMMON] int 
 13144 ;; Auto vars:     Size  Location     Type
 13145 ;;		None
 13146 ;; Return value:  Size  Location     Type
 13147 ;;                  2    4[COMMON] int 
 13148 ;; Registers used:
 13149 ;;		wreg, status,2, status,0
 13150 ;; Tracked objects:
 13151 ;;		On entry : 0/0
 13152 ;;		On exit  : 0/0
 13153 ;;		Unchanged: 0/0
 13154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13155 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13157 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13158 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13159 ;;Total ram usage:        4 bytes
 13160 ;; Hardware stack levels used:    1
 13161 ;; Hardware stack levels required when called:    1
 13162 ;; This function calls:
 13163 ;;		Nothing
 13164 ;; This function is called by:
 13165 ;;		_dtoa
 13166 ;; This function uses a non-reentrant model
 13167 ;;
 13168                           
 13169                           
 13170                           ;psect for function _abs
 13171  3392                     _abs:	
 13172                           
 13173                           ;incstack = 0
 13174                           ; Regs used in _abs: [wreg+status,2+status,0]
 13175  3392  0875               	movf	abs@a+1,w
 13176  3393  3A80               	xorlw	128
 13177  3394  00F6               	movwf	??_abs
 13178  3395  3080               	movlw	128
 13179  3396  0276               	subwf	??_abs,w
 13180  3397  1D03               	skipz
 13181  3398  2B9B               	goto	u5365
 13182  3399  3001               	movlw	1
 13183  339A  0274               	subwf	abs@a,w
 13184  339B                     u5365:	
 13185  339B  1803               	skipnc
 13186  339C  0008               	return
 13187  339D  0974               	comf	abs@a,w
 13188  339E  00F6               	movwf	??_abs
 13189  339F  0975               	comf	abs@a+1,w
 13190  33A0  00F7               	movwf	??_abs+1
 13191  33A1  0AF6               	incf	??_abs,f
 13192  33A2  1903               	skipnz
 13193  33A3  0AF7               	incf	??_abs+1,f
 13194  33A4  0876               	movf	??_abs,w
 13195  33A5  00F4               	movwf	?_abs
 13196  33A6  0877               	movf	??_abs+1,w
 13197  33A7  00F5               	movwf	?_abs+1
 13198  33A8  0008               	return
 13199  33A9                     __end_of_abs:	
 13200                           
 13201                           	psect	text31
 13202  2379                     __ptext31:	
 13203 ;; *************** function ___aomod *****************
 13204 ;; Defined at:
 13205 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
 13206 ;; Parameters:    Size  Location     Type
 13207 ;;  divisor         8    0[BANK0 ] long long 
 13208 ;;  dividend        8    8[BANK0 ] long long 
 13209 ;; Auto vars:     Size  Location     Type
 13210 ;;  sign            1    3[COMMON] unsigned char 
 13211 ;;  counter         1    2[COMMON] unsigned char 
 13212 ;; Return value:  Size  Location     Type
 13213 ;;                  8    0[BANK0 ] long long 
 13214 ;; Registers used:
 13215 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13216 ;; Tracked objects:
 13217 ;;		On entry : 0/0
 13218 ;;		On exit  : 0/0
 13219 ;;		Unchanged: 0/0
 13220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13221 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13222 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13223 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13224 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13225 ;;Total ram usage:       19 bytes
 13226 ;; Hardware stack levels used:    1
 13227 ;; Hardware stack levels required when called:    1
 13228 ;; This function calls:
 13229 ;;		Nothing
 13230 ;; This function is called by:
 13231 ;;		_dtoa
 13232 ;; This function uses a non-reentrant model
 13233 ;;
 13234                           
 13235                           
 13236                           ;psect for function ___aomod
 13237  2379                     ___aomod:	
 13238                           
 13239                           ;incstack = 0
 13240                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
 13241  2379  01F3               	clrf	___aomod@sign
 13242  237A  3028               	movlw	low ___aomod@dividend
 13243  237B  0086               	movwf	6
 13244  237C  3000               	movlw	high ___aomod@dividend
 13245  237D  0087               	movwf	7
 13246  237E  3F47               	moviw [7]fsr1
 13247  237F  00F1               	movwf	??___aomod
 13248  2380  1FF1               	btfss	??___aomod,7
 13249  2381  2BA3               	goto	l4688
 13250  2382  0020               	movlb	0	; select bank0
 13251  2383  09A8               	comf	___aomod@dividend,f
 13252  2384  09A9               	comf	___aomod@dividend+1,f
 13253  2385  09AA               	comf	___aomod@dividend+2,f
 13254  2386  09AB               	comf	___aomod@dividend+3,f
 13255  2387  09AC               	comf	___aomod@dividend+4,f
 13256  2388  09AD               	comf	___aomod@dividend+5,f
 13257  2389  09AE               	comf	___aomod@dividend+6,f
 13258  238A  09AF               	comf	___aomod@dividend+7,f
 13259  238B  0AA8               	incf	___aomod@dividend,f
 13260  238C  1D03               	skipz
 13261  238D  2BA1               	goto	u583lld
 13262  238E  0AA9               	incf	___aomod@dividend+1,f
 13263  238F  1D03               	skipz
 13264  2390  2BA1               	goto	u583lld
 13265  2391  0AAA               	incf	___aomod@dividend+2,f
 13266  2392  1D03               	skipz
 13267  2393  2BA1               	goto	u583lld
 13268  2394  0AAB               	incf	___aomod@dividend+3,f
 13269  2395  1D03               	skipz
 13270  2396  2BA1               	goto	u583lld
 13271  2397  0AAC               	incf	___aomod@dividend+4,f
 13272  2398  1D03               	skipz
 13273  2399  2BA1               	goto	u583lld
 13274  239A  0AAD               	incf	___aomod@dividend+5,f
 13275  239B  1D03               	skipz
 13276  239C  2BA1               	goto	u583lld
 13277  239D  0AAE               	incf	___aomod@dividend+6,f
 13278  239E  1D03               	skipz
 13279  239F  2BA1               	goto	u583lld
 13280  23A0  0AAF               	incf	___aomod@dividend+7,f
 13281  23A1                     u583lld:	
 13282  23A1  01F3               	clrf	___aomod@sign
 13283  23A2  0AF3               	incf	___aomod@sign,f
 13284  23A3                     l4688:	
 13285  23A3  3020               	movlw	low ___aomod@divisor
 13286  23A4  0086               	movwf	6
 13287  23A5  3000               	movlw	high ___aomod@divisor
 13288  23A6  0087               	movwf	7
 13289  23A7  3F47               	moviw [7]fsr1
 13290  23A8  00F1               	movwf	??___aomod
 13291  23A9  1FF1               	btfss	??___aomod,7
 13292  23AA  2BCA               	goto	l4692
 13293  23AB  0020               	movlb	0	; select bank0
 13294  23AC  09A0               	comf	___aomod@divisor,f
 13295  23AD  09A1               	comf	___aomod@divisor+1,f
 13296  23AE  09A2               	comf	___aomod@divisor+2,f
 13297  23AF  09A3               	comf	___aomod@divisor+3,f
 13298  23B0  09A4               	comf	___aomod@divisor+4,f
 13299  23B1  09A5               	comf	___aomod@divisor+5,f
 13300  23B2  09A6               	comf	___aomod@divisor+6,f
 13301  23B3  09A7               	comf	___aomod@divisor+7,f
 13302  23B4  0AA0               	incf	___aomod@divisor,f
 13303  23B5  1D03               	skipz
 13304  23B6  2BCA               	goto	l4692
 13305  23B7  0AA1               	incf	___aomod@divisor+1,f
 13306  23B8  1D03               	skipz
 13307  23B9  2BCA               	goto	l4692
 13308  23BA  0AA2               	incf	___aomod@divisor+2,f
 13309  23BB  1D03               	skipz
 13310  23BC  2BCA               	goto	l4692
 13311  23BD  0AA3               	incf	___aomod@divisor+3,f
 13312  23BE  1D03               	skipz
 13313  23BF  2BCA               	goto	l4692
 13314  23C0  0AA4               	incf	___aomod@divisor+4,f
 13315  23C1  1D03               	skipz
 13316  23C2  2BCA               	goto	l4692
 13317  23C3  0AA5               	incf	___aomod@divisor+5,f
 13318  23C4  1D03               	skipz
 13319  23C5  2BCA               	goto	l4692
 13320  23C6  0AA6               	incf	___aomod@divisor+6,f
 13321  23C7  1D03               	skipz
 13322  23C8  2BCA               	goto	l4692
 13323  23C9  0AA7               	incf	___aomod@divisor+7,f
 13324  23CA                     l4692:	
 13325  23CA  0020               	movlb	0	; select bank0
 13326  23CB  0820               	movf	___aomod@divisor,w
 13327  23CC  0421               	iorwf	___aomod@divisor+1,w
 13328  23CD  0422               	iorwf	___aomod@divisor+2,w
 13329  23CE  0423               	iorwf	___aomod@divisor+3,w
 13330  23CF  0424               	iorwf	___aomod@divisor+4,w
 13331  23D0  0425               	iorwf	___aomod@divisor+5,w
 13332  23D1  0426               	iorwf	___aomod@divisor+6,w
 13333  23D2  0427               	iorwf	___aomod@divisor+7,w
 13334  23D3  1903               	skipnz
 13335  23D4  2C22               	goto	l4708
 13336  23D5  01F2               	clrf	___aomod@counter
 13337  23D6  0AF2               	incf	___aomod@counter,f
 13338  23D7                     l4700:	
 13339  23D7  1BA7               	btfsc	___aomod@divisor+7,7
 13340  23D8  2BE6               	goto	l4702
 13341  23D9  35A0               	lslf	___aomod@divisor,f
 13342  23DA  0DA1               	rlf	___aomod@divisor+1,f
 13343  23DB  0DA2               	rlf	___aomod@divisor+2,f
 13344  23DC  0DA3               	rlf	___aomod@divisor+3,f
 13345  23DD  0DA4               	rlf	___aomod@divisor+4,f
 13346  23DE  0DA5               	rlf	___aomod@divisor+5,f
 13347  23DF  0DA6               	rlf	___aomod@divisor+6,f
 13348  23E0  0DA7               	rlf	___aomod@divisor+7,f
 13349  23E1  3001               	movlw	1
 13350  23E2  00F1               	movwf	??___aomod
 13351  23E3  0871               	movf	??___aomod,w
 13352  23E4  07F2               	addwf	___aomod@counter,f
 13353  23E5  2BD7               	goto	l4700
 13354  23E6                     l4702:	
 13355  23E6  0827               	movf	___aomod@divisor+7,w
 13356  23E7  022F               	subwf	___aomod@dividend+7,w
 13357  23E8  1D03               	skipz
 13358  23E9  2C04               	goto	u5885
 13359  23EA  0826               	movf	___aomod@divisor+6,w
 13360  23EB  022E               	subwf	___aomod@dividend+6,w
 13361  23EC  1D03               	skipz
 13362  23ED  2C04               	goto	u5885
 13363  23EE  0825               	movf	___aomod@divisor+5,w
 13364  23EF  022D               	subwf	___aomod@dividend+5,w
 13365  23F0  1D03               	skipz
 13366  23F1  2C04               	goto	u5885
 13367  23F2  0824               	movf	___aomod@divisor+4,w
 13368  23F3  022C               	subwf	___aomod@dividend+4,w
 13369  23F4  1D03               	skipz
 13370  23F5  2C04               	goto	u5885
 13371  23F6  0823               	movf	___aomod@divisor+3,w
 13372  23F7  022B               	subwf	___aomod@dividend+3,w
 13373  23F8  1D03               	skipz
 13374  23F9  2C04               	goto	u5885
 13375  23FA  0822               	movf	___aomod@divisor+2,w
 13376  23FB  022A               	subwf	___aomod@dividend+2,w
 13377  23FC  1D03               	skipz
 13378  23FD  2C04               	goto	u5885
 13379  23FE  0821               	movf	___aomod@divisor+1,w
 13380  23FF  0229               	subwf	___aomod@dividend+1,w
 13381  2400  1D03               	skipz
 13382  2401  2C04               	goto	u5885
 13383  2402  0820               	movf	___aomod@divisor,w
 13384  2403  0228               	subwf	___aomod@dividend,w
 13385  2404                     u5885:	
 13386  2404  1C03               	skipc
 13387  2405  2C16               	goto	l4706
 13388  2406  0820               	movf	___aomod@divisor,w
 13389  2407  02A8               	subwf	___aomod@dividend,f
 13390  2408  0821               	movf	___aomod@divisor+1,w
 13391  2409  3BA9               	subwfb	___aomod@dividend+1,f
 13392  240A  0822               	movf	___aomod@divisor+2,w
 13393  240B  3BAA               	subwfb	___aomod@dividend+2,f
 13394  240C  0823               	movf	___aomod@divisor+3,w
 13395  240D  3BAB               	subwfb	___aomod@dividend+3,f
 13396  240E  0824               	movf	___aomod@divisor+4,w
 13397  240F  3BAC               	subwfb	___aomod@dividend+4,f
 13398  2410  0825               	movf	___aomod@divisor+5,w
 13399  2411  3BAD               	subwfb	___aomod@dividend+5,f
 13400  2412  0826               	movf	___aomod@divisor+6,w
 13401  2413  3BAE               	subwfb	___aomod@dividend+6,f
 13402  2414  0827               	movf	___aomod@divisor+7,w
 13403  2415  3BAF               	subwfb	___aomod@dividend+7,f
 13404  2416                     l4706:	
 13405  2416  36A7               	lsrf	___aomod@divisor+7,f
 13406  2417  0CA6               	rrf	___aomod@divisor+6,f
 13407  2418  0CA5               	rrf	___aomod@divisor+5,f
 13408  2419  0CA4               	rrf	___aomod@divisor+4,f
 13409  241A  0CA3               	rrf	___aomod@divisor+3,f
 13410  241B  0CA2               	rrf	___aomod@divisor+2,f
 13411  241C  0CA1               	rrf	___aomod@divisor+1,f
 13412  241D  0CA0               	rrf	___aomod@divisor,f
 13413  241E  3001               	movlw	1
 13414  241F  02F2               	subwf	___aomod@counter,f
 13415  2420  1D03               	btfss	3,2
 13416  2421  2BE6               	goto	l4702
 13417  2422                     l4708:	
 13418  2422  0873               	movf	___aomod@sign,w
 13419  2423  1903               	btfsc	3,2
 13420  2424  2C43               	goto	l987
 13421  2425  09A8               	comf	___aomod@dividend,f
 13422  2426  09A9               	comf	___aomod@dividend+1,f
 13423  2427  09AA               	comf	___aomod@dividend+2,f
 13424  2428  09AB               	comf	___aomod@dividend+3,f
 13425  2429  09AC               	comf	___aomod@dividend+4,f
 13426  242A  09AD               	comf	___aomod@dividend+5,f
 13427  242B  09AE               	comf	___aomod@dividend+6,f
 13428  242C  09AF               	comf	___aomod@dividend+7,f
 13429  242D  0AA8               	incf	___aomod@dividend,f
 13430  242E  1D03               	skipz
 13431  242F  2C43               	goto	l987
 13432  2430  0AA9               	incf	___aomod@dividend+1,f
 13433  2431  1D03               	skipz
 13434  2432  2C43               	goto	l987
 13435  2433  0AAA               	incf	___aomod@dividend+2,f
 13436  2434  1D03               	skipz
 13437  2435  2C43               	goto	l987
 13438  2436  0AAB               	incf	___aomod@dividend+3,f
 13439  2437  1D03               	skipz
 13440  2438  2C43               	goto	l987
 13441  2439  0AAC               	incf	___aomod@dividend+4,f
 13442  243A  1D03               	skipz
 13443  243B  2C43               	goto	l987
 13444  243C  0AAD               	incf	___aomod@dividend+5,f
 13445  243D  1D03               	skipz
 13446  243E  2C43               	goto	l987
 13447  243F  0AAE               	incf	___aomod@dividend+6,f
 13448  2440  1D03               	skipz
 13449  2441  2C43               	goto	l987
 13450  2442  0AAF               	incf	___aomod@dividend+7,f
 13451  2443                     l987:	
 13452  2443  0020               	movlb	0	; select bank0
 13453  2444  0828               	movf	___aomod@dividend,w
 13454  2445  00A0               	movwf	?___aomod
 13455  2446  0829               	movf	___aomod@dividend+1,w
 13456  2447  00A1               	movwf	?___aomod+1
 13457  2448  082A               	movf	___aomod@dividend+2,w
 13458  2449  00A2               	movwf	?___aomod+2
 13459  244A  082B               	movf	___aomod@dividend+3,w
 13460  244B  00A3               	movwf	?___aomod+3
 13461  244C  082C               	movf	___aomod@dividend+4,w
 13462  244D  00A4               	movwf	?___aomod+4
 13463  244E  082D               	movf	___aomod@dividend+5,w
 13464  244F  00A5               	movwf	?___aomod+5
 13465  2450  082E               	movf	___aomod@dividend+6,w
 13466  2451  00A6               	movwf	?___aomod+6
 13467  2452  082F               	movf	___aomod@dividend+7,w
 13468  2453  00A7               	movwf	?___aomod+7
 13469  2454  0008               	return
 13470  2455                     __end_of___aomod:	
 13471                           
 13472                           	psect	text32
 13473  270D                     __ptext32:	
 13474 ;; *************** function ___aodiv *****************
 13475 ;; Defined at:
 13476 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
 13477 ;; Parameters:    Size  Location     Type
 13478 ;;  divisor         8    0[BANK0 ] long long 
 13479 ;;  dividend        8    8[BANK0 ] long long 
 13480 ;; Auto vars:     Size  Location     Type
 13481 ;;  quotient        8    4[COMMON] long long 
 13482 ;;  sign            1    3[COMMON] unsigned char 
 13483 ;;  counter         1    2[COMMON] unsigned char 
 13484 ;; Return value:  Size  Location     Type
 13485 ;;                  8    0[BANK0 ] long long 
 13486 ;; Registers used:
 13487 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13488 ;; Tracked objects:
 13489 ;;		On entry : 0/0
 13490 ;;		On exit  : 0/0
 13491 ;;		Unchanged: 0/0
 13492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13493 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13494 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13495 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13496 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13497 ;;Total ram usage:       27 bytes
 13498 ;; Hardware stack levels used:    1
 13499 ;; Hardware stack levels required when called:    1
 13500 ;; This function calls:
 13501 ;;		Nothing
 13502 ;; This function is called by:
 13503 ;;		_dtoa
 13504 ;; This function uses a non-reentrant model
 13505 ;;
 13506                           
 13507                           
 13508                           ;psect for function ___aodiv
 13509  270D                     ___aodiv:	
 13510                           
 13511                           ;incstack = 0
 13512                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
 13513  270D  01F3               	clrf	___aodiv@sign
 13514  270E  3020               	movlw	low ___aodiv@divisor
 13515  270F  0086               	movwf	6
 13516  2710  3000               	movlw	high ___aodiv@divisor
 13517  2711  0087               	movwf	7
 13518  2712  3F47               	moviw [7]fsr1
 13519  2713  00F1               	movwf	??___aodiv
 13520  2714  1FF1               	btfss	??___aodiv,7
 13521  2715  2F37               	goto	l4650
 13522  2716  0020               	movlb	0	; select bank0
 13523  2717  09A0               	comf	___aodiv@divisor,f
 13524  2718  09A1               	comf	___aodiv@divisor+1,f
 13525  2719  09A2               	comf	___aodiv@divisor+2,f
 13526  271A  09A3               	comf	___aodiv@divisor+3,f
 13527  271B  09A4               	comf	___aodiv@divisor+4,f
 13528  271C  09A5               	comf	___aodiv@divisor+5,f
 13529  271D  09A6               	comf	___aodiv@divisor+6,f
 13530  271E  09A7               	comf	___aodiv@divisor+7,f
 13531  271F  0AA0               	incf	___aodiv@divisor,f
 13532  2720  1D03               	skipz
 13533  2721  2F35               	goto	u572lld
 13534  2722  0AA1               	incf	___aodiv@divisor+1,f
 13535  2723  1D03               	skipz
 13536  2724  2F35               	goto	u572lld
 13537  2725  0AA2               	incf	___aodiv@divisor+2,f
 13538  2726  1D03               	skipz
 13539  2727  2F35               	goto	u572lld
 13540  2728  0AA3               	incf	___aodiv@divisor+3,f
 13541  2729  1D03               	skipz
 13542  272A  2F35               	goto	u572lld
 13543  272B  0AA4               	incf	___aodiv@divisor+4,f
 13544  272C  1D03               	skipz
 13545  272D  2F35               	goto	u572lld
 13546  272E  0AA5               	incf	___aodiv@divisor+5,f
 13547  272F  1D03               	skipz
 13548  2730  2F35               	goto	u572lld
 13549  2731  0AA6               	incf	___aodiv@divisor+6,f
 13550  2732  1D03               	skipz
 13551  2733  2F35               	goto	u572lld
 13552  2734  0AA7               	incf	___aodiv@divisor+7,f
 13553  2735                     u572lld:	
 13554  2735  01F3               	clrf	___aodiv@sign
 13555  2736  0AF3               	incf	___aodiv@sign,f
 13556  2737                     l4650:	
 13557  2737  3028               	movlw	low ___aodiv@dividend
 13558  2738  0086               	movwf	6
 13559  2739  3000               	movlw	high ___aodiv@dividend
 13560  273A  0087               	movwf	7
 13561  273B  3F47               	moviw [7]fsr1
 13562  273C  00F1               	movwf	??___aodiv
 13563  273D  1FF1               	btfss	??___aodiv,7
 13564  273E  2F62               	goto	l4656
 13565  273F  0020               	movlb	0	; select bank0
 13566  2740  09A8               	comf	___aodiv@dividend,f
 13567  2741  09A9               	comf	___aodiv@dividend+1,f
 13568  2742  09AA               	comf	___aodiv@dividend+2,f
 13569  2743  09AB               	comf	___aodiv@dividend+3,f
 13570  2744  09AC               	comf	___aodiv@dividend+4,f
 13571  2745  09AD               	comf	___aodiv@dividend+5,f
 13572  2746  09AE               	comf	___aodiv@dividend+6,f
 13573  2747  09AF               	comf	___aodiv@dividend+7,f
 13574  2748  0AA8               	incf	___aodiv@dividend,f
 13575  2749  1D03               	skipz
 13576  274A  2F5E               	goto	l4654
 13577  274B  0AA9               	incf	___aodiv@dividend+1,f
 13578  274C  1D03               	skipz
 13579  274D  2F5E               	goto	l4654
 13580  274E  0AAA               	incf	___aodiv@dividend+2,f
 13581  274F  1D03               	skipz
 13582  2750  2F5E               	goto	l4654
 13583  2751  0AAB               	incf	___aodiv@dividend+3,f
 13584  2752  1D03               	skipz
 13585  2753  2F5E               	goto	l4654
 13586  2754  0AAC               	incf	___aodiv@dividend+4,f
 13587  2755  1D03               	skipz
 13588  2756  2F5E               	goto	l4654
 13589  2757  0AAD               	incf	___aodiv@dividend+5,f
 13590  2758  1D03               	skipz
 13591  2759  2F5E               	goto	l4654
 13592  275A  0AAE               	incf	___aodiv@dividend+6,f
 13593  275B  1D03               	skipz
 13594  275C  2F5E               	goto	l4654
 13595  275D  0AAF               	incf	___aodiv@dividend+7,f
 13596  275E                     l4654:	
 13597  275E  3001               	movlw	1
 13598  275F  00F1               	movwf	??___aodiv
 13599  2760  0871               	movf	??___aodiv,w
 13600  2761  06F3               	xorwf	___aodiv@sign,f
 13601  2762                     l4656:	
 13602  2762  3074               	movlw	low ___aodiv@quotient
 13603  2763  0086               	movwf	6
 13604  2764  3000               	movlw	high ___aodiv@quotient
 13605  2765  0087               	movwf	7
 13606  2766  3008               	movlw	8
 13607  2767  00F1               	movwf	??___aodiv
 13608  2768  3000               	movlw	0
 13609  2769                     u5750:	
 13610  2769  001E               	movwi fsr1++
 13611  276A  0BF1               	decfsz	??___aodiv,f
 13612  276B  2F69               	goto	u5750
 13613  276C  0020               	movlb	0	; select bank0
 13614  276D  0820               	movf	___aodiv@divisor,w
 13615  276E  0421               	iorwf	___aodiv@divisor+1,w
 13616  276F  0422               	iorwf	___aodiv@divisor+2,w
 13617  2770  0423               	iorwf	___aodiv@divisor+3,w
 13618  2771  0424               	iorwf	___aodiv@divisor+4,w
 13619  2772  0425               	iorwf	___aodiv@divisor+5,w
 13620  2773  0426               	iorwf	___aodiv@divisor+6,w
 13621  2774  0427               	iorwf	___aodiv@divisor+7,w
 13622  2775  1903               	skipnz
 13623  2776  2FCD               	goto	l4678
 13624  2777  01F2               	clrf	___aodiv@counter
 13625  2778  0AF2               	incf	___aodiv@counter,f
 13626  2779                     l4666:	
 13627  2779  1BA7               	btfsc	___aodiv@divisor+7,7
 13628  277A  2F88               	goto	l4668
 13629  277B  35A0               	lslf	___aodiv@divisor,f
 13630  277C  0DA1               	rlf	___aodiv@divisor+1,f
 13631  277D  0DA2               	rlf	___aodiv@divisor+2,f
 13632  277E  0DA3               	rlf	___aodiv@divisor+3,f
 13633  277F  0DA4               	rlf	___aodiv@divisor+4,f
 13634  2780  0DA5               	rlf	___aodiv@divisor+5,f
 13635  2781  0DA6               	rlf	___aodiv@divisor+6,f
 13636  2782  0DA7               	rlf	___aodiv@divisor+7,f
 13637  2783  3001               	movlw	1
 13638  2784  00F1               	movwf	??___aodiv
 13639  2785  0871               	movf	??___aodiv,w
 13640  2786  07F2               	addwf	___aodiv@counter,f
 13641  2787  2F79               	goto	l4666
 13642  2788                     l4668:	
 13643  2788  35F4               	lslf	___aodiv@quotient,f
 13644  2789  0DF5               	rlf	___aodiv@quotient+1,f
 13645  278A  0DF6               	rlf	___aodiv@quotient+2,f
 13646  278B  0DF7               	rlf	___aodiv@quotient+3,f
 13647  278C  0DF8               	rlf	___aodiv@quotient+4,f
 13648  278D  0DF9               	rlf	___aodiv@quotient+5,f
 13649  278E  0DFA               	rlf	___aodiv@quotient+6,f
 13650  278F  0DFB               	rlf	___aodiv@quotient+7,f
 13651  2790  0827               	movf	___aodiv@divisor+7,w
 13652  2791  022F               	subwf	___aodiv@dividend+7,w
 13653  2792  1D03               	skipz
 13654  2793  2FAE               	goto	u5785
 13655  2794  0826               	movf	___aodiv@divisor+6,w
 13656  2795  022E               	subwf	___aodiv@dividend+6,w
 13657  2796  1D03               	skipz
 13658  2797  2FAE               	goto	u5785
 13659  2798  0825               	movf	___aodiv@divisor+5,w
 13660  2799  022D               	subwf	___aodiv@dividend+5,w
 13661  279A  1D03               	skipz
 13662  279B  2FAE               	goto	u5785
 13663  279C  0824               	movf	___aodiv@divisor+4,w
 13664  279D  022C               	subwf	___aodiv@dividend+4,w
 13665  279E  1D03               	skipz
 13666  279F  2FAE               	goto	u5785
 13667  27A0  0823               	movf	___aodiv@divisor+3,w
 13668  27A1  022B               	subwf	___aodiv@dividend+3,w
 13669  27A2  1D03               	skipz
 13670  27A3  2FAE               	goto	u5785
 13671  27A4  0822               	movf	___aodiv@divisor+2,w
 13672  27A5  022A               	subwf	___aodiv@dividend+2,w
 13673  27A6  1D03               	skipz
 13674  27A7  2FAE               	goto	u5785
 13675  27A8  0821               	movf	___aodiv@divisor+1,w
 13676  27A9  0229               	subwf	___aodiv@dividend+1,w
 13677  27AA  1D03               	skipz
 13678  27AB  2FAE               	goto	u5785
 13679  27AC  0820               	movf	___aodiv@divisor,w
 13680  27AD  0228               	subwf	___aodiv@dividend,w
 13681  27AE                     u5785:	
 13682  27AE  1C03               	skipc
 13683  27AF  2FC1               	goto	l4676
 13684  27B0  0820               	movf	___aodiv@divisor,w
 13685  27B1  02A8               	subwf	___aodiv@dividend,f
 13686  27B2  0821               	movf	___aodiv@divisor+1,w
 13687  27B3  3BA9               	subwfb	___aodiv@dividend+1,f
 13688  27B4  0822               	movf	___aodiv@divisor+2,w
 13689  27B5  3BAA               	subwfb	___aodiv@dividend+2,f
 13690  27B6  0823               	movf	___aodiv@divisor+3,w
 13691  27B7  3BAB               	subwfb	___aodiv@dividend+3,f
 13692  27B8  0824               	movf	___aodiv@divisor+4,w
 13693  27B9  3BAC               	subwfb	___aodiv@dividend+4,f
 13694  27BA  0825               	movf	___aodiv@divisor+5,w
 13695  27BB  3BAD               	subwfb	___aodiv@dividend+5,f
 13696  27BC  0826               	movf	___aodiv@divisor+6,w
 13697  27BD  3BAE               	subwfb	___aodiv@dividend+6,f
 13698  27BE  0827               	movf	___aodiv@divisor+7,w
 13699  27BF  3BAF               	subwfb	___aodiv@dividend+7,f
 13700  27C0  1474               	bsf	___aodiv@quotient,0
 13701  27C1                     l4676:	
 13702  27C1  36A7               	lsrf	___aodiv@divisor+7,f
 13703  27C2  0CA6               	rrf	___aodiv@divisor+6,f
 13704  27C3  0CA5               	rrf	___aodiv@divisor+5,f
 13705  27C4  0CA4               	rrf	___aodiv@divisor+4,f
 13706  27C5  0CA3               	rrf	___aodiv@divisor+3,f
 13707  27C6  0CA2               	rrf	___aodiv@divisor+2,f
 13708  27C7  0CA1               	rrf	___aodiv@divisor+1,f
 13709  27C8  0CA0               	rrf	___aodiv@divisor,f
 13710  27C9  3001               	movlw	1
 13711  27CA  02F2               	subwf	___aodiv@counter,f
 13712  27CB  1D03               	btfss	3,2
 13713  27CC  2F88               	goto	l4668
 13714  27CD                     l4678:	
 13715  27CD  0873               	movf	___aodiv@sign,w
 13716  27CE  1903               	btfsc	3,2
 13717  27CF  2FEE               	goto	l974
 13718  27D0  09F4               	comf	___aodiv@quotient,f
 13719  27D1  09F5               	comf	___aodiv@quotient+1,f
 13720  27D2  09F6               	comf	___aodiv@quotient+2,f
 13721  27D3  09F7               	comf	___aodiv@quotient+3,f
 13722  27D4  09F8               	comf	___aodiv@quotient+4,f
 13723  27D5  09F9               	comf	___aodiv@quotient+5,f
 13724  27D6  09FA               	comf	___aodiv@quotient+6,f
 13725  27D7  09FB               	comf	___aodiv@quotient+7,f
 13726  27D8  0AF4               	incf	___aodiv@quotient,f
 13727  27D9  1D03               	skipz
 13728  27DA  2FEE               	goto	l974
 13729  27DB  0AF5               	incf	___aodiv@quotient+1,f
 13730  27DC  1D03               	skipz
 13731  27DD  2FEE               	goto	l974
 13732  27DE  0AF6               	incf	___aodiv@quotient+2,f
 13733  27DF  1D03               	skipz
 13734  27E0  2FEE               	goto	l974
 13735  27E1  0AF7               	incf	___aodiv@quotient+3,f
 13736  27E2  1D03               	skipz
 13737  27E3  2FEE               	goto	l974
 13738  27E4  0AF8               	incf	___aodiv@quotient+4,f
 13739  27E5  1D03               	skipz
 13740  27E6  2FEE               	goto	l974
 13741  27E7  0AF9               	incf	___aodiv@quotient+5,f
 13742  27E8  1D03               	skipz
 13743  27E9  2FEE               	goto	l974
 13744  27EA  0AFA               	incf	___aodiv@quotient+6,f
 13745  27EB  1D03               	skipz
 13746  27EC  2FEE               	goto	l974
 13747  27ED  0AFB               	incf	___aodiv@quotient+7,f
 13748  27EE                     l974:	
 13749  27EE  0874               	movf	___aodiv@quotient,w
 13750  27EF  0020               	movlb	0	; select bank0
 13751  27F0  00A0               	movwf	?___aodiv
 13752  27F1  0875               	movf	___aodiv@quotient+1,w
 13753  27F2  00A1               	movwf	?___aodiv+1
 13754  27F3  0876               	movf	___aodiv@quotient+2,w
 13755  27F4  00A2               	movwf	?___aodiv+2
 13756  27F5  0877               	movf	___aodiv@quotient+3,w
 13757  27F6  00A3               	movwf	?___aodiv+3
 13758  27F7  0878               	movf	___aodiv@quotient+4,w
 13759  27F8  00A4               	movwf	?___aodiv+4
 13760  27F9  0879               	movf	___aodiv@quotient+5,w
 13761  27FA  00A5               	movwf	?___aodiv+5
 13762  27FB  087A               	movf	___aodiv@quotient+6,w
 13763  27FC  00A6               	movwf	?___aodiv+6
 13764  27FD  087B               	movf	___aodiv@quotient+7,w
 13765  27FE  00A7               	movwf	?___aodiv+7
 13766  27FF  0008               	return
 13767  2800                     __end_of___aodiv:	
 13768                           
 13769                           	psect	text33
 13770  3585                     __ptext33:	
 13771 ;; *************** function _ctoa *****************
 13772 ;; Defined at:
 13773 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 13774 ;; Parameters:    Size  Location     Type
 13775 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
 13776 ;;		 -> vsnprintf@f(6), 
 13777 ;;  c               1   18[BANK0 ] unsigned char 
 13778 ;; Auto vars:     Size  Location     Type
 13779 ;;  w               2   20[BANK0 ] int 
 13780 ;;  l               2    0        int 
 13781 ;; Return value:  Size  Location     Type
 13782 ;;                  2   16[BANK0 ] int 
 13783 ;; Registers used:
 13784 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13785 ;; Tracked objects:
 13786 ;;		On entry : 0/0
 13787 ;;		On exit  : 0/0
 13788 ;;		Unchanged: 0/0
 13789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13790 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13791 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13792 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13793 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13794 ;;Total ram usage:        6 bytes
 13795 ;; Hardware stack levels used:    1
 13796 ;; Hardware stack levels required when called:    5
 13797 ;; This function calls:
 13798 ;;		_pad
 13799 ;; This function is called by:
 13800 ;;		_vfpfcnvrt
 13801 ;; This function uses a non-reentrant model
 13802 ;;
 13803                           
 13804                           
 13805                           ;psect for function _ctoa
 13806  3585                     _ctoa:	
 13807                           
 13808                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 13809                           
 13810                           ;incstack = 0
 13811                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13812  3585  0023               	movlb	3	; select bank3
 13813  3586  083E               	movf	_width^(0+384),w
 13814  3587  043F               	iorwf	(_width+1)^(0+384),w
 13815  3588  1D03               	btfss	3,2
 13816  3589  2D92               	goto	l7224
 13817  358A  083F               	movf	(_width+1)^(0+384),w
 13818  358B  0020               	movlb	0	; select bank0
 13819  358C  00B5               	movwf	ctoa@w+1
 13820  358D  0023               	movlb	3	; select bank3
 13821  358E  083E               	movf	_width^(0+384),w
 13822  358F  0020               	movlb	0	; select bank0
 13823  3590  00B4               	movwf	ctoa@w
 13824  3591  2D9B               	goto	l7226
 13825  3592                     l7224:	
 13826  3592  083E               	movf	_width^(0+384),w
 13827  3593  3EFF               	addlw	255
 13828  3594  0020               	movlb	0	; select bank0
 13829  3595  00B4               	movwf	ctoa@w
 13830  3596  30FF               	movlw	255
 13831  3597  0023               	movlb	3	; select bank3
 13832  3598  3D3F               	addwfc	(_width+1)^(0+384),w
 13833  3599  0020               	movlb	0	; select bank0
 13834  359A  00B5               	movwf	ctoa@w+1
 13835  359B                     l7226:	
 13836                           
 13837                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 13838  359B  0832               	movf	ctoa@c,w
 13839  359C  00B3               	movwf	??_ctoa
 13840  359D  0833               	movf	??_ctoa,w
 13841  359E  0024               	movlb	4	; select bank4
 13842  359F  00A0               	movwf	_dbuf^(0+512)
 13843                           
 13844                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 13845  35A0  01A1               	clrf	(_dbuf^(0+512)+1)
 13846                           
 13847                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 13848  35A1  0020               	movlb	0	; select bank0
 13849  35A2  0831               	movf	ctoa@fp+1,w
 13850  35A3  00A7               	movwf	pad@fp+1
 13851  35A4  0830               	movf	ctoa@fp,w
 13852  35A5  00A6               	movwf	pad@fp
 13853  35A6  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
 13854  35A7  00B3               	movwf	??_ctoa
 13855  35A8  0833               	movf	??_ctoa,w
 13856  35A9  00A8               	movwf	pad@buf
 13857  35AA  0835               	movf	ctoa@w+1,w
 13858  35AB  00AA               	movwf	pad@p+1
 13859  35AC  0834               	movf	ctoa@w,w
 13860  35AD  00A9               	movwf	pad@p
 13861  35AE  31B7  275E         	fcall	_pad
 13862  35B0  0020               	movlb	0	; select bank0
 13863  35B1  0827               	movf	?_pad+1,w
 13864  35B2  00B1               	movwf	?_ctoa+1
 13865  35B3  0826               	movf	?_pad,w
 13866  35B4  00B0               	movwf	?_ctoa
 13867  35B5  0008               	return
 13868  35B6                     __end_of_ctoa:	
 13869                           
 13870                           	psect	text34
 13871  375E                     __ptext34:	
 13872 ;; *************** function _pad *****************
 13873 ;; Defined at:
 13874 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 13875 ;; Parameters:    Size  Location     Type
 13876 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
 13877 ;;		 -> vsnprintf@f(6), 
 13878 ;;  buf             1    8[BANK0 ] PTR unsigned char 
 13879 ;;		 -> dbuf(80), 
 13880 ;;  p               2    9[BANK0 ] int 
 13881 ;; Auto vars:     Size  Location     Type
 13882 ;;  w               2   14[BANK0 ] int 
 13883 ;;  i               2   12[BANK0 ] int 
 13884 ;; Return value:  Size  Location     Type
 13885 ;;                  2    6[BANK0 ] int 
 13886 ;; Registers used:
 13887 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13888 ;; Tracked objects:
 13889 ;;		On entry : 0/0
 13890 ;;		On exit  : 0/0
 13891 ;;		Unchanged: 0/0
 13892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13893 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13894 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13895 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13896 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13897 ;;Total ram usage:       10 bytes
 13898 ;; Hardware stack levels used:    1
 13899 ;; Hardware stack levels required when called:    4
 13900 ;; This function calls:
 13901 ;;		_fputc
 13902 ;;		_fputs
 13903 ;;		_strlen
 13904 ;; This function is called by:
 13905 ;;		_ctoa
 13906 ;;		_dtoa
 13907 ;;		_efgtoa
 13908 ;;		_otoa
 13909 ;;		_utoa
 13910 ;;		_xtoa
 13911 ;; This function uses a non-reentrant model
 13912 ;;
 13913                           
 13914                           
 13915                           ;psect for function _pad
 13916  375E                     _pad:	
 13917                           
 13918                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 13919                           
 13920                           ;incstack = 0
 13921                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13922  375E  0023               	movlb	3	; select bank3
 13923  375F  1C42               	btfss	_flags^(0+384),0
 13924  3760  2F6A               	goto	l7164
 13925                           
 13926                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 13927  3761  0020               	movlb	0	; select bank0
 13928  3762  0827               	movf	pad@fp+1,w
 13929  3763  00FB               	movwf	fputs@fp+1
 13930  3764  0826               	movf	pad@fp,w
 13931  3765  00FA               	movwf	fputs@fp
 13932  3766  0828               	movf	pad@buf,w
 13933  3767  31B5  255F  31B7   	fcall	_fputs
 13934  376A                     l7164:	
 13935                           
 13936                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 13937  376A  0020               	movlb	0	; select bank0
 13938  376B  1BAA               	btfsc	pad@p+1,7
 13939  376C  2F72               	goto	l7168
 13940  376D  082A               	movf	pad@p+1,w
 13941  376E  00AF               	movwf	pad@w+1
 13942  376F  0829               	movf	pad@p,w
 13943  3770  00AE               	movwf	pad@w
 13944  3771  2F74               	goto	l556
 13945  3772                     l7168:	
 13946  3772  01AE               	clrf	pad@w
 13947  3773  01AF               	clrf	pad@w+1
 13948  3774                     l556:	
 13949                           
 13950                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 13951  3774  01AC               	clrf	pad@i
 13952  3775  01AD               	clrf	pad@i+1
 13953  3776                     l7174:	
 13954                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 13955                           
 13956                           
 13957                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 13958  3776  082D               	movf	pad@i+1,w
 13959  3777  3A80               	xorlw	128
 13960  3778  00AB               	movwf	??_pad
 13961  3779  082F               	movf	pad@w+1,w
 13962  377A  3A80               	xorlw	128
 13963  377B  022B               	subwf	??_pad,w
 13964  377C  1D03               	skipz
 13965  377D  2F80               	goto	u10005
 13966  377E  082E               	movf	pad@w,w
 13967  377F  022C               	subwf	pad@i,w
 13968  3780                     u10005:	
 13969  3780  1803               	btfsc	3,0
 13970  3781  2F94               	goto	l559
 13971                           
 13972                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 13973  3782  3020               	movlw	32
 13974  3783  00F1               	movwf	fputc@c
 13975  3784  3000               	movlw	0
 13976  3785  00F2               	movwf	fputc@c+1
 13977  3786  0020               	movlb	0	; select bank0
 13978  3787  0827               	movf	pad@fp+1,w
 13979  3788  00F4               	movwf	fputc@fp+1
 13980  3789  0826               	movf	pad@fp,w
 13981  378A  00F3               	movwf	fputc@fp
 13982  378B  31A8  202C  31B7   	fcall	_fputc
 13983                           
 13984                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 13985  378E  3001               	movlw	1
 13986  378F  0020               	movlb	0	; select bank0
 13987  3790  07AC               	addwf	pad@i,f
 13988  3791  3000               	movlw	0
 13989  3792  3DAD               	addwfc	pad@i+1,f
 13990  3793  2F76               	goto	l7174
 13991  3794                     l559:	
 13992                           
 13993                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 13994  3794  0023               	movlb	3	; select bank3
 13995  3795  1842               	btfsc	_flags^(0+384),0
 13996  3796  2FA0               	goto	l7178
 13997                           
 13998                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 13999  3797  0020               	movlb	0	; select bank0
 14000  3798  0827               	movf	pad@fp+1,w
 14001  3799  00FB               	movwf	fputs@fp+1
 14002  379A  0826               	movf	pad@fp,w
 14003  379B  00FA               	movwf	fputs@fp
 14004  379C  0828               	movf	pad@buf,w
 14005  379D  31B5  255F  31B7   	fcall	_fputs
 14006  37A0                     l7178:	
 14007                           
 14008                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 14009  37A0  0020               	movlb	0	; select bank0
 14010  37A1  0828               	movf	pad@buf,w
 14011  37A2  00F1               	movwf	strlen@s
 14012  37A3  3002               	movlw	2
 14013  37A4  00F2               	movwf	strlen@s+1
 14014  37A5  31B3  237B         	fcall	_strlen
 14015  37A7  0020               	movlb	0	; select bank0
 14016  37A8  082E               	movf	pad@w,w
 14017  37A9  0771               	addwf	?_strlen,w
 14018  37AA  00A6               	movwf	?_pad
 14019  37AB  082F               	movf	pad@w+1,w
 14020  37AC  3D72               	addwfc	?_strlen+1,w
 14021  37AD  00A7               	movwf	?_pad+1
 14022  37AE  0008               	return
 14023  37AF                     __end_of_pad:	
 14024                           
 14025                           	psect	text35
 14026  337B                     __ptext35:	
 14027 ;; *************** function _strlen *****************
 14028 ;; Defined at:
 14029 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 14030 ;; Parameters:    Size  Location     Type
 14031 ;;  s               2    1[COMMON] PTR const unsigned char 
 14032 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(80), 
 14033 ;; Auto vars:     Size  Location     Type
 14034 ;;  a               2    3[COMMON] PTR const unsigned char 
 14035 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(80), 
 14036 ;; Return value:  Size  Location     Type
 14037 ;;                  2    1[COMMON] unsigned int 
 14038 ;; Registers used:
 14039 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14040 ;; Tracked objects:
 14041 ;;		On entry : 0/0
 14042 ;;		On exit  : 0/0
 14043 ;;		Unchanged: 0/0
 14044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14045 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14046 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14048 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14049 ;;Total ram usage:        4 bytes
 14050 ;; Hardware stack levels used:    1
 14051 ;; Hardware stack levels required when called:    1
 14052 ;; This function calls:
 14053 ;;		Nothing
 14054 ;; This function is called by:
 14055 ;;		_pad
 14056 ;;		_stoa
 14057 ;; This function uses a non-reentrant model
 14058 ;;
 14059                           
 14060                           
 14061                           ;psect for function _strlen
 14062  337B                     _strlen:	
 14063                           
 14064                           ;incstack = 0
 14065                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 14066  337B  0872               	movf	strlen@s+1,w
 14067  337C  00F4               	movwf	strlen@a+1
 14068  337D  0871               	movf	strlen@s,w
 14069  337E  00F3               	movwf	strlen@a
 14070  337F                     l4296:	
 14071  337F  0871               	movf	strlen@s,w
 14072  3380  0086               	movwf	6
 14073  3381  0872               	movf	strlen@s+1,w
 14074  3382  0087               	movwf	7
 14075  3383  0801               	movf	1,w
 14076  3384  1903               	btfsc	3,2
 14077  3385  2B8B               	goto	l4298
 14078  3386  3001               	movlw	1
 14079  3387  07F1               	addwf	strlen@s,f
 14080  3388  3000               	movlw	0
 14081  3389  3DF2               	addwfc	strlen@s+1,f
 14082  338A  2B7F               	goto	l4296
 14083  338B                     l4298:	
 14084  338B  0873               	movf	strlen@a,w
 14085  338C  0271               	subwf	strlen@s,w
 14086  338D  00F1               	movwf	?_strlen
 14087  338E  0874               	movf	strlen@a+1,w
 14088  338F  3B72               	subwfb	strlen@s+1,w
 14089  3390  00F2               	movwf	?_strlen+1
 14090  3391  0008               	return
 14091  3392                     __end_of_strlen:	
 14092                           
 14093                           	psect	text36
 14094  355F                     __ptext36:	
 14095 ;; *************** function _fputs *****************
 14096 ;; Defined at:
 14097 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 14098 ;; Parameters:    Size  Location     Type
 14099 ;;  s               1    wreg     PTR const unsigned char 
 14100 ;;		 -> dbuf(80), 
 14101 ;;  fp              2   10[COMMON] PTR struct _IO_FILE
 14102 ;;		 -> vsnprintf@f(6), 
 14103 ;; Auto vars:     Size  Location     Type
 14104 ;;  s               1    5[BANK0 ] PTR const unsigned char 
 14105 ;;		 -> dbuf(80), 
 14106 ;;  i               2    3[BANK0 ] int 
 14107 ;;  c               1    2[BANK0 ] unsigned char 
 14108 ;; Return value:  Size  Location     Type
 14109 ;;                  2   10[COMMON] int 
 14110 ;; Registers used:
 14111 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14112 ;; Tracked objects:
 14113 ;;		On entry : 0/0
 14114 ;;		On exit  : 0/0
 14115 ;;		Unchanged: 0/0
 14116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14117 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14118 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14119 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14120 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14121 ;;Total ram usage:        8 bytes
 14122 ;; Hardware stack levels used:    1
 14123 ;; Hardware stack levels required when called:    3
 14124 ;; This function calls:
 14125 ;;		_fputc
 14126 ;; This function is called by:
 14127 ;;		_pad
 14128 ;; This function uses a non-reentrant model
 14129 ;;
 14130                           
 14131                           
 14132                           ;psect for function _fputs
 14133  355F                     _fputs:	
 14134                           
 14135                           ;incstack = 0
 14136                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14137                           ;fputs@s stored from wreg
 14138  355F  0020               	movlb	0	; select bank0
 14139  3560  00A5               	movwf	fputs@s
 14140  3561  01A3               	clrf	fputs@i
 14141  3562  01A4               	clrf	fputs@i+1
 14142  3563                     l4290:	
 14143  3563  0823               	movf	fputs@i,w
 14144  3564  0725               	addwf	fputs@s,w
 14145  3565  00A0               	movwf	??_fputs
 14146  3566  0820               	movf	??_fputs,w
 14147  3567  0086               	movwf	6
 14148  3568  3002               	movlw	2	; select bank4/5
 14149  3569  0087               	movwf	7
 14150  356A  0801               	movf	1,w
 14151  356B  00A1               	movwf	??_fputs+1
 14152  356C  0821               	movf	??_fputs+1,w
 14153  356D  00A2               	movwf	fputs@c
 14154  356E  0822               	movf	fputs@c,w
 14155  356F  1903               	btfsc	3,2
 14156  3570  0008               	return
 14157  3571  0822               	movf	fputs@c,w
 14158  3572  00A0               	movwf	??_fputs
 14159  3573  01A1               	clrf	??_fputs+1
 14160  3574  0820               	movf	??_fputs,w
 14161  3575  00F1               	movwf	fputc@c
 14162  3576  0821               	movf	??_fputs+1,w
 14163  3577  00F2               	movwf	fputc@c+1
 14164  3578  087B               	movf	fputs@fp+1,w
 14165  3579  00F4               	movwf	fputc@fp+1
 14166  357A  087A               	movf	fputs@fp,w
 14167  357B  00F3               	movwf	fputc@fp
 14168  357C  31A8  202C  31B5   	fcall	_fputc
 14169  357F  3001               	movlw	1
 14170  3580  0020               	movlb	0	; select bank0
 14171  3581  07A3               	addwf	fputs@i,f
 14172  3582  3000               	movlw	0
 14173  3583  3DA4               	addwfc	fputs@i+1,f
 14174  3584  2D63               	goto	l4290
 14175  3585                     __end_of_fputs:	
 14176                           
 14177                           	psect	text37
 14178  282C                     __ptext37:	
 14179 ;; *************** function _fputc *****************
 14180 ;; Defined at:
 14181 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 14182 ;; Parameters:    Size  Location     Type
 14183 ;;  c               2    1[COMMON] int 
 14184 ;;  fp              2    3[COMMON] PTR struct _IO_FILE
 14185 ;;		 -> vsnprintf@f(6), 
 14186 ;; Auto vars:     Size  Location     Type
 14187 ;;		None
 14188 ;; Return value:  Size  Location     Type
 14189 ;;                  2    1[COMMON] int 
 14190 ;; Registers used:
 14191 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14192 ;; Tracked objects:
 14193 ;;		On entry : 0/0
 14194 ;;		On exit  : 0/0
 14195 ;;		Unchanged: 0/0
 14196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14197 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14199 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14200 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14201 ;;Total ram usage:        9 bytes
 14202 ;; Hardware stack levels used:    1
 14203 ;; Hardware stack levels required when called:    2
 14204 ;; This function calls:
 14205 ;;		_putch
 14206 ;; This function is called by:
 14207 ;;		_pad
 14208 ;;		_stoa
 14209 ;;		_vfpfcnvrt
 14210 ;;		_fputs
 14211 ;; This function uses a non-reentrant model
 14212 ;;
 14213                           
 14214                           
 14215                           ;psect for function _fputc
 14216  282C                     _fputc:	
 14217                           
 14218                           ;incstack = 0
 14219                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14220  282C  0873               	movf	fputc@fp,w
 14221  282D  0474               	iorwf	fputc@fp+1,w
 14222  282E  1903               	btfsc	3,2
 14223  282F  2834               	goto	l4272
 14224  2830  0873               	movf	fputc@fp,w
 14225  2831  0474               	iorwf	fputc@fp+1,w
 14226  2832  1D03               	btfss	3,2
 14227  2833  2838               	goto	l4274
 14228  2834                     l4272:	
 14229  2834  0871               	movf	fputc@c,w
 14230  2835  3187  27FE         	fcall	_putch
 14231  2837  0008               	return
 14232  2838                     l4274:	
 14233  2838  0873               	movf	fputc@fp,w
 14234  2839  0086               	movwf	6
 14235  283A  0874               	movf	fputc@fp+1,w
 14236  283B  0087               	movwf	7
 14237  283C  3144               	addfsr 1,4
 14238  283D  0016               	moviw fsr1++
 14239  283E  0401               	iorwf	1,w
 14240  283F  1903               	btfsc	3,2
 14241  2840  285F               	goto	l4278
 14242  2841  0873               	movf	fputc@fp,w
 14243  2842  0086               	movwf	6
 14244  2843  0874               	movf	fputc@fp+1,w
 14245  2844  0087               	movwf	7
 14246  2845  3144               	addfsr 1,4
 14247  2846  3F40               	moviw [0]fsr1
 14248  2847  00F5               	movwf	??_fputc
 14249  2848  3F41               	moviw [1]fsr1
 14250  2849  00F6               	movwf	??_fputc+1
 14251  284A  0873               	movf	fputc@fp,w
 14252  284B  0086               	movwf	6
 14253  284C  0874               	movf	fputc@fp+1,w
 14254  284D  0087               	movwf	7
 14255  284E  3142               	addfsr 1,2
 14256  284F  3F40               	moviw [0]fsr1
 14257  2850  00F7               	movwf	??_fputc+2
 14258  2851  3F41               	moviw [1]fsr1
 14259  2852  00F8               	movwf	??_fputc+3
 14260  2853  0878               	movf	??_fputc+3,w
 14261  2854  3A80               	xorlw	128
 14262  2855  00F9               	movwf	??_fputc+4
 14263  2856  0876               	movf	??_fputc+1,w
 14264  2857  3A80               	xorlw	128
 14265  2858  0279               	subwf	??_fputc+4,w
 14266  2859  1D03               	skipz
 14267  285A  285D               	goto	u4795
 14268  285B  0875               	movf	??_fputc,w
 14269  285C  0277               	subwf	??_fputc+2,w
 14270  285D                     u4795:	
 14271  285D  1803               	skipnc
 14272  285E  0008               	return
 14273  285F                     l4278:	
 14274  285F  0873               	movf	fputc@fp,w
 14275  2860  0086               	movwf	6
 14276  2861  0874               	movf	fputc@fp+1,w
 14277  2862  0087               	movwf	7
 14278  2863  3142               	addfsr 1,2
 14279  2864  0873               	movf	fputc@fp,w
 14280  2865  0084               	movwf	4
 14281  2866  0874               	movf	fputc@fp+1,w
 14282  2867  0085               	movwf	5
 14283  2868  3F40               	moviw [0]fsr1
 14284  2869  0700               	addwf	0,w
 14285  286A  00F5               	movwf	??_fputc
 14286  286B  3101               	addfsr 0,1
 14287  286C  3F41               	moviw [1]fsr1
 14288  286D  3D00               	addwfc	0,w
 14289  286E  00F6               	movwf	??_fputc+1
 14290  286F  0875               	movf	??_fputc,w
 14291  2870  0086               	movwf	6
 14292  2871  0876               	movf	??_fputc+1,w
 14293  2872  0087               	movwf	7
 14294  2873  0871               	movf	fputc@c,w
 14295  2874  0081               	movwf	1
 14296  2875  0873               	movf	fputc@fp,w
 14297  2876  0086               	movwf	6
 14298  2877  0874               	movf	fputc@fp+1,w
 14299  2878  0087               	movwf	7
 14300  2879  3142               	addfsr 1,2
 14301  287A  3001               	movlw	1
 14302  287B  0781               	addwf	1,f
 14303  287C  3141               	addfsr 1,1
 14304  287D  1803               	skipnc
 14305  287E  0A81               	incf	1,f
 14306  287F  0008               	return
 14307  2880                     __end_of_fputc:	
 14308                           
 14309                           	psect	text38
 14310  07FE                     __ptext38:	
 14311 ;; *************** function _putch *****************
 14312 ;; Defined at:
 14313 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
 14314 ;; Parameters:    Size  Location     Type
 14315 ;;  c               1    wreg     unsigned char 
 14316 ;; Auto vars:     Size  Location     Type
 14317 ;;  c               1    0[COMMON] unsigned char 
 14318 ;; Return value:  Size  Location     Type
 14319 ;;                  1    wreg      void 
 14320 ;; Registers used:
 14321 ;;		wreg
 14322 ;; Tracked objects:
 14323 ;;		On entry : 0/0
 14324 ;;		On exit  : 0/0
 14325 ;;		Unchanged: 0/0
 14326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14331 ;;Total ram usage:        0 bytes
 14332 ;; Hardware stack levels used:    1
 14333 ;; Hardware stack levels required when called:    1
 14334 ;; This function calls:
 14335 ;;		Nothing
 14336 ;; This function is called by:
 14337 ;;		_fputc
 14338 ;; This function uses a non-reentrant model
 14339 ;;
 14340                           
 14341                           
 14342                           ;psect for function _putch
 14343  07FE                     _putch:	
 14344                           
 14345                           ;incstack = 0
 14346                           ; Regs used in _putch: [wreg]
 14347  07FE  0008               	return
 14348  07FF                     __end_of_putch:	
 14349                           
 14350                           	psect	text39
 14351  2D5F                     __ptext39:	
 14352 ;; *************** function _atoi *****************
 14353 ;; Defined at:
 14354 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 14355 ;; Parameters:    Size  Location     Type
 14356 ;;  s               2    7[COMMON] PTR const unsigned char 
 14357 ;;		 -> STR_24(18), STR_23(18), STR_22(19), STR_21(20), 
 14358 ;;		 -> STR_20(20), STR_19(21), STR_18(21), STR_17(21), 
 14359 ;;		 -> STR_16(22), STR_15(22), STR_14(21), STR_13(21), 
 14360 ;;		 -> STR_8(57), STR_7(44), STR_6(42), STR_3(43), 
 14361 ;; Auto vars:     Size  Location     Type
 14362 ;;  n               2   11[BANK0 ] int 
 14363 ;;  neg             2    4[BANK0 ] int 
 14364 ;; Return value:  Size  Location     Type
 14365 ;;                  2    7[COMMON] int 
 14366 ;; Registers used:
 14367 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14368 ;; Tracked objects:
 14369 ;;		On entry : 0/0
 14370 ;;		On exit  : 0/0
 14371 ;;		Unchanged: 0/0
 14372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14373 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14374 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14375 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14376 ;;      Totals:         2      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14377 ;;Total ram usage:       15 bytes
 14378 ;; Hardware stack levels used:    1
 14379 ;; Hardware stack levels required when called:    2
 14380 ;; This function calls:
 14381 ;;		___wmul
 14382 ;;		_isdigit
 14383 ;;		_isspace
 14384 ;; This function is called by:
 14385 ;;		_vfpfcnvrt
 14386 ;; This function uses a non-reentrant model
 14387 ;;
 14388                           
 14389                           
 14390                           ;psect for function _atoi
 14391  2D5F                     _atoi:	
 14392                           
 14393                           ;incstack = 0
 14394                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14395  2D5F  0020               	movlb	0	; select bank0
 14396  2D60  01AB               	clrf	atoi@n
 14397  2D61  01AC               	clrf	atoi@n+1
 14398  2D62  01A4               	clrf	atoi@neg
 14399  2D63  01A5               	clrf	atoi@neg+1
 14400  2D64                     l7782:	
 14401  2D64  01AA               	clrf	_atoi$1600
 14402  2D65  0AAA               	incf	_atoi$1600,f
 14403  2D66  0877               	movf	atoi@s,w
 14404  2D67  0084               	movwf	4
 14405  2D68  0878               	movf	atoi@s+1,w
 14406  2D69  0085               	movwf	5
 14407  2D6A  0012               	moviw fsr0++
 14408  2D6B  3A20               	xorlw	32
 14409  2D6C  1903               	btfsc	3,2
 14410  2D6D  2D80               	goto	l7790
 14411  2D6E  0877               	movf	atoi@s,w
 14412  2D6F  0084               	movwf	4
 14413  2D70  0878               	movf	atoi@s+1,w
 14414  2D71  0085               	movwf	5
 14415  2D72  0800               	movf	0,w	;code access
 14416  2D73  3EF7               	addlw	247
 14417  2D74  00A0               	movwf	??_atoi
 14418  2D75  30FF               	movlw	255
 14419  2D76  1803               	skipnc
 14420  2D77  3000               	movlw	0
 14421  2D78  00A1               	movwf	??_atoi+1
 14422  2D79  3000               	movlw	0
 14423  2D7A  0221               	subwf	??_atoi+1,w
 14424  2D7B  3005               	movlw	5
 14425  2D7C  1903               	skipnz
 14426  2D7D  0220               	subwf	??_atoi,w
 14427  2D7E  1803               	btfsc	3,0
 14428  2D7F  01AA               	clrf	_atoi$1600
 14429  2D80                     l7790:	
 14430  2D80  082A               	movf	_atoi$1600,w
 14431  2D81  00A0               	movwf	??_atoi
 14432  2D82  01A1               	clrf	??_atoi+1
 14433  2D83  0820               	movf	??_atoi,w
 14434  2D84  00A6               	movwf	_atoi$1599
 14435  2D85  0821               	movf	??_atoi+1,w
 14436  2D86  00A7               	movwf	_atoi$1599+1
 14437  2D87  0826               	movf	_atoi$1599,w
 14438  2D88  0427               	iorwf	_atoi$1599+1,w
 14439  2D89  1903               	btfsc	3,2
 14440  2D8A  2D95               	goto	l7798
 14441  2D8B  3001               	movlw	1
 14442  2D8C  07F7               	addwf	atoi@s,f
 14443  2D8D  3000               	movlw	0
 14444  2D8E  3DF8               	addwfc	atoi@s+1,f
 14445  2D8F  2D64               	goto	l7782
 14446  2D90                     l7796:	
 14447  2D90  3001               	movlw	1
 14448  2D91  00A4               	movwf	atoi@neg
 14449  2D92  3000               	movlw	0
 14450  2D93  00A5               	movwf	atoi@neg+1
 14451  2D94  2DC8               	goto	l1360
 14452  2D95                     l7798:	
 14453  2D95  0877               	movf	atoi@s,w
 14454  2D96  0084               	movwf	4
 14455  2D97  0878               	movf	atoi@s+1,w
 14456  2D98  0085               	movwf	5
 14457  2D99  0800               	movf	0,w	;code access
 14458  2D9A  00A0               	movwf	??_atoi
 14459  2D9B  01A1               	clrf	??_atoi+1
 14460                           
 14461                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14462                           ; Switch size 1, requested type "simple"
 14463                           ; Number of cases is 1, Range of values is 0 to 0
 14464                           ; switch strategies available:
 14465                           ; Name         Instructions Cycles
 14466                           ; simple_byte            4     3 (average)
 14467                           ; direct_byte            8     6 (fixed)
 14468                           ; jumptable            260     6 (fixed)
 14469                           ;	Chosen strategy is simple_byte
 14470  2D9C  0821               	movf	??_atoi+1,w
 14471  2D9D  3A00               	xorlw	0	; case 0
 14472  2D9E  1903               	skipnz
 14473  2D9F  2DA1               	goto	l8604
 14474  2DA0  2DCC               	goto	l7804
 14475  2DA1                     l8604:	
 14476                           
 14477                           ; Switch size 1, requested type "simple"
 14478                           ; Number of cases is 2, Range of values is 43 to 45
 14479                           ; switch strategies available:
 14480                           ; Name         Instructions Cycles
 14481                           ; simple_byte            7     4 (average)
 14482                           ; direct_byte           15     9 (fixed)
 14483                           ; jumptable            263     9 (fixed)
 14484                           ;	Chosen strategy is simple_byte
 14485  2DA1  0820               	movf	??_atoi,w
 14486  2DA2  3A2B               	xorlw	43	; case 43
 14487  2DA3  1903               	skipnz
 14488  2DA4  2DC8               	goto	l1360
 14489  2DA5  3A06               	xorlw	6	; case 45
 14490  2DA6  1903               	skipnz
 14491  2DA7  2D90               	goto	l7796
 14492  2DA8  2DCC               	goto	l7804
 14493  2DA9                     l7800:	
 14494  2DA9  0877               	movf	atoi@s,w
 14495  2DAA  0084               	movwf	4
 14496  2DAB  0878               	movf	atoi@s+1,w
 14497  2DAC  0085               	movwf	5
 14498  2DAD  0800               	movf	0,w	;code access
 14499  2DAE  00A0               	movwf	??_atoi
 14500  2DAF  082C               	movf	atoi@n+1,w
 14501  2DB0  00F2               	movwf	___wmul@multiplier+1
 14502  2DB1  082B               	movf	atoi@n,w
 14503  2DB2  00F1               	movwf	___wmul@multiplier
 14504  2DB3  300A               	movlw	10
 14505  2DB4  00F3               	movwf	___wmul@multiplicand
 14506  2DB5  3000               	movlw	0
 14507  2DB6  00F4               	movwf	___wmul@multiplicand+1
 14508  2DB7  31B4  2409  31AD   	fcall	___wmul
 14509  2DBA  0872               	movf	?___wmul+1,w
 14510  2DBB  0020               	movlb	0	; select bank0
 14511  2DBC  00A2               	movwf	??_atoi+2
 14512  2DBD  0820               	movf	??_atoi,w
 14513  2DBE  0271               	subwf	?___wmul,w
 14514  2DBF  00A1               	movwf	??_atoi+1
 14515  2DC0  1C03               	skipc
 14516  2DC1  03A2               	decf	??_atoi+2,f
 14517  2DC2  0821               	movf	??_atoi+1,w
 14518  2DC3  3E30               	addlw	48
 14519  2DC4  00AB               	movwf	atoi@n
 14520  2DC5  3000               	movlw	0
 14521  2DC6  3D22               	addwfc	??_atoi+2,w
 14522  2DC7  00AC               	movwf	atoi@n+1
 14523  2DC8                     l1360:	
 14524  2DC8  3001               	movlw	1
 14525  2DC9  07F7               	addwf	atoi@s,f
 14526  2DCA  3000               	movlw	0
 14527  2DCB  3DF8               	addwfc	atoi@s+1,f
 14528  2DCC                     l7804:	
 14529  2DCC  0877               	movf	atoi@s,w
 14530  2DCD  0084               	movwf	4
 14531  2DCE  0878               	movf	atoi@s+1,w
 14532  2DCF  0085               	movwf	5
 14533  2DD0  0800               	movf	0,w	;code access
 14534  2DD1  3ED0               	addlw	208
 14535  2DD2  00A0               	movwf	??_atoi
 14536  2DD3  30FF               	movlw	255
 14537  2DD4  1803               	skipnc
 14538  2DD5  3000               	movlw	0
 14539  2DD6  00A1               	movwf	??_atoi+1
 14540  2DD7  3000               	movlw	0
 14541  2DD8  0221               	subwf	??_atoi+1,w
 14542  2DD9  300A               	movlw	10
 14543  2DDA  1903               	skipnz
 14544  2DDB  0220               	subwf	??_atoi,w
 14545  2DDC  1803               	btfsc	3,0
 14546  2DDD  2DE0               	goto	u11260
 14547  2DDE  3001               	movlw	1
 14548  2DDF  2DE1               	goto	u11270
 14549  2DE0                     u11260:	
 14550  2DE0  3000               	movlw	0
 14551  2DE1                     u11270:	
 14552  2DE1  00A2               	movwf	??_atoi+2
 14553  2DE2  01A3               	clrf	??_atoi+3
 14554  2DE3  0822               	movf	??_atoi+2,w
 14555  2DE4  00A8               	movwf	_atoi$1601
 14556  2DE5  0823               	movf	??_atoi+3,w
 14557  2DE6  00A9               	movwf	_atoi$1601+1
 14558  2DE7  0828               	movf	_atoi$1601,w
 14559  2DE8  0429               	iorwf	_atoi$1601+1,w
 14560  2DE9  1D03               	btfss	3,2
 14561  2DEA  2DA9               	goto	l7800
 14562  2DEB  0824               	movf	atoi@neg,w
 14563  2DEC  0425               	iorwf	atoi@neg+1,w
 14564  2DED  1D03               	btfss	3,2
 14565  2DEE  2DFB               	goto	l7814
 14566  2DEF  092B               	comf	atoi@n,w
 14567  2DF0  00A0               	movwf	??_atoi
 14568  2DF1  092C               	comf	atoi@n+1,w
 14569  2DF2  00A1               	movwf	??_atoi+1
 14570  2DF3  0AA0               	incf	??_atoi,f
 14571  2DF4  1903               	skipnz
 14572  2DF5  0AA1               	incf	??_atoi+1,f
 14573  2DF6  0820               	movf	??_atoi,w
 14574  2DF7  00F7               	movwf	?_atoi
 14575  2DF8  0821               	movf	??_atoi+1,w
 14576  2DF9  00F8               	movwf	?_atoi+1
 14577  2DFA  0008               	return
 14578  2DFB                     l7814:	
 14579  2DFB  082C               	movf	atoi@n+1,w
 14580  2DFC  00F8               	movwf	?_atoi+1
 14581  2DFD  082B               	movf	atoi@n,w
 14582  2DFE  00F7               	movwf	?_atoi
 14583  2DFF  0008               	return
 14584  2E00                     __end_of_atoi:	
 14585                           
 14586                           	psect	text40
 14587  3424                     __ptext40:	
 14588 ;; *************** function _isspace *****************
 14589 ;; Defined at:
 14590 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 14591 ;; Parameters:    Size  Location     Type
 14592 ;;  c               2    1[COMMON] int 
 14593 ;; Auto vars:     Size  Location     Type
 14594 ;;		None
 14595 ;; Return value:  Size  Location     Type
 14596 ;;                  2    1[COMMON] int 
 14597 ;; Registers used:
 14598 ;;		wreg, status,2, status,0
 14599 ;; Tracked objects:
 14600 ;;		On entry : 0/0
 14601 ;;		On exit  : 0/0
 14602 ;;		Unchanged: 0/0
 14603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14604 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14605 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14606 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14607 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14608 ;;Total ram usage:        5 bytes
 14609 ;; Hardware stack levels used:    1
 14610 ;; Hardware stack levels required when called:    1
 14611 ;; This function calls:
 14612 ;;		Nothing
 14613 ;; This function is called by:
 14614 ;;		_atoi
 14615 ;; This function uses a non-reentrant model
 14616 ;;
 14617                           
 14618                           
 14619                           ;psect for function _isspace
 14620  3424                     _isspace:	
 14621                           
 14622                           ;incstack = 0
 14623                           ; Regs used in _isspace: [wreg+status,2+status,0]
 14624  3424  01F5               	clrf	_isspace$1639
 14625  3425  0AF5               	incf	_isspace$1639,f
 14626  3426  3020               	movlw	32
 14627  3427  0671               	xorwf	isspace@c,w
 14628  3428  0472               	iorwf	isspace@c+1,w
 14629  3429  1903               	btfsc	3,2
 14630  342A  2C38               	goto	l5202
 14631  342B  0871               	movf	isspace@c,w
 14632  342C  3EF7               	addlw	247
 14633  342D  00F3               	movwf	??_isspace
 14634  342E  30FF               	movlw	255
 14635  342F  3D72               	addwfc	isspace@c+1,w
 14636  3430  00F4               	movwf	??_isspace+1
 14637  3431  3000               	movlw	0
 14638  3432  0274               	subwf	??_isspace+1,w
 14639  3433  3005               	movlw	5
 14640  3434  1903               	skipnz
 14641  3435  0273               	subwf	??_isspace,w
 14642  3436  1803               	btfsc	3,0
 14643  3437  01F5               	clrf	_isspace$1639
 14644  3438                     l5202:	
 14645  3438  0875               	movf	_isspace$1639,w
 14646  3439  00F3               	movwf	??_isspace
 14647  343A  01F4               	clrf	??_isspace+1
 14648  343B  0873               	movf	??_isspace,w
 14649  343C  00F1               	movwf	?_isspace
 14650  343D  0874               	movf	??_isspace+1,w
 14651  343E  00F2               	movwf	?_isspace+1
 14652  343F  0008               	return
 14653  3440                     __end_of_isspace:	
 14654                           
 14655                           	psect	text41
 14656  3364                     __ptext41:	
 14657 ;; *************** function _isdigit *****************
 14658 ;; Defined at:
 14659 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 14660 ;; Parameters:    Size  Location     Type
 14661 ;;  c               2    1[COMMON] int 
 14662 ;; Auto vars:     Size  Location     Type
 14663 ;;		None
 14664 ;; Return value:  Size  Location     Type
 14665 ;;                  2    1[COMMON] int 
 14666 ;; Registers used:
 14667 ;;		wreg, status,2, status,0
 14668 ;; Tracked objects:
 14669 ;;		On entry : 0/0
 14670 ;;		On exit  : 0/0
 14671 ;;		Unchanged: 0/0
 14672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14673 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14675 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14676 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14677 ;;Total ram usage:        6 bytes
 14678 ;; Hardware stack levels used:    1
 14679 ;; Hardware stack levels required when called:    1
 14680 ;; This function calls:
 14681 ;;		Nothing
 14682 ;; This function is called by:
 14683 ;;		_vfpfcnvrt
 14684 ;;		_atoi
 14685 ;; This function uses a non-reentrant model
 14686 ;;
 14687                           
 14688                           
 14689                           ;psect for function _isdigit
 14690  3364                     _isdigit:	
 14691                           
 14692                           ;incstack = 0
 14693                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 14694  3364  0871               	movf	isdigit@c,w
 14695  3365  3ED0               	addlw	208
 14696  3366  00F3               	movwf	??_isdigit
 14697  3367  30FF               	movlw	255
 14698  3368  3D72               	addwfc	isdigit@c+1,w
 14699  3369  00F4               	movwf	??_isdigit+1
 14700  336A  3000               	movlw	0
 14701  336B  0274               	subwf	??_isdigit+1,w
 14702  336C  300A               	movlw	10
 14703  336D  1903               	skipnz
 14704  336E  0273               	subwf	??_isdigit,w
 14705  336F  1803               	btfsc	3,0
 14706  3370  2B73               	goto	u5650
 14707  3371  3001               	movlw	1
 14708  3372  2B74               	goto	u5660
 14709  3373                     u5650:	
 14710  3373  3000               	movlw	0
 14711  3374                     u5660:	
 14712  3374  00F5               	movwf	??_isdigit+2
 14713  3375  01F6               	clrf	??_isdigit+3
 14714  3376  0875               	movf	??_isdigit+2,w
 14715  3377  00F1               	movwf	?_isdigit
 14716  3378  0876               	movf	??_isdigit+3,w
 14717  3379  00F2               	movwf	?_isdigit+1
 14718  337A  0008               	return
 14719  337B                     __end_of_isdigit:	
 14720                           
 14721                           	psect	text42
 14722  33EF                     __ptext42:	
 14723 ;; *************** function _EUSART_Write_Text *****************
 14724 ;; Defined at:
 14725 ;;		line 75 in file "EUSART.c"
 14726 ;; Parameters:    Size  Location     Type
 14727 ;;  text            2    2[COMMON] PTR unsigned char 
 14728 ;;		 -> STR_25(3), STR_12(3), STR_11(38), STR_10(45), 
 14729 ;;		 -> STR_9(42), STR_5(3), STR_4(53), messageBuffer(127), 
 14730 ;;		 -> STR_2(46), STR_1(40), 
 14731 ;; Auto vars:     Size  Location     Type
 14732 ;;  i               2    5[COMMON] int 
 14733 ;; Return value:  Size  Location     Type
 14734 ;;                  1    wreg      void 
 14735 ;; Registers used:
 14736 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14737 ;; Tracked objects:
 14738 ;;		On entry : 0/0
 14739 ;;		On exit  : 0/0
 14740 ;;		Unchanged: 0/0
 14741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14742 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14743 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14744 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14745 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14746 ;;Total ram usage:        5 bytes
 14747 ;; Hardware stack levels used:    1
 14748 ;; Hardware stack levels required when called:    2
 14749 ;; This function calls:
 14750 ;;		_EUSART_Write
 14751 ;; This function is called by:
 14752 ;;		_statemachine
 14753 ;;		_printotAFERegisters
 14754 ;; This function uses a non-reentrant model
 14755 ;;
 14756                           
 14757                           
 14758                           ;psect for function _EUSART_Write_Text
 14759  33EF                     _EUSART_Write_Text:	
 14760                           
 14761                           ;EUSART.c: 75: void EUSART_Write_Text(char *text);EUSART.c: 76: {;EUSART.c: 77:   int i;
      +                          ;EUSART.c: 78:   for(i=0;text[i]!='\0';i++)
 14762                           
 14763                           ;incstack = 0
 14764                           ; Regs used in _EUSART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14765  33EF  01F5               	clrf	EUSART_Write_Text@i
 14766  33F0  01F6               	clrf	EUSART_Write_Text@i+1
 14767  33F1                     l6422:	
 14768  33F1  0872               	movf	EUSART_Write_Text@text,w
 14769  33F2  0775               	addwf	EUSART_Write_Text@i,w
 14770  33F3  0084               	movwf	4
 14771  33F4  0873               	movf	EUSART_Write_Text@text+1,w
 14772  33F5  3D76               	addwfc	EUSART_Write_Text@i+1,w
 14773  33F6  0085               	movwf	5
 14774  33F7  0012               	moviw fsr0++
 14775  33F8  1903               	btfsc	3,2
 14776  33F9  0008               	return
 14777                           
 14778                           ;EUSART.c: 79:    EUSART_Write(text[i]);
 14779  33FA  0872               	movf	EUSART_Write_Text@text,w
 14780  33FB  0775               	addwf	EUSART_Write_Text@i,w
 14781  33FC  0084               	movwf	4
 14782  33FD  0873               	movf	EUSART_Write_Text@text+1,w
 14783  33FE  3D76               	addwfc	EUSART_Write_Text@i+1,w
 14784  33FF  0085               	movwf	5
 14785  3400  0800               	movf	0,w	;code access
 14786  3401  31B2  22E3  31B3   	fcall	_EUSART_Write
 14787  3404  3001               	movlw	1
 14788  3405  07F5               	addwf	EUSART_Write_Text@i,f
 14789  3406  3000               	movlw	0
 14790  3407  3DF6               	addwfc	EUSART_Write_Text@i+1,f
 14791  3408  2BF1               	goto	l6422
 14792  3409                     __end_of_EUSART_Write_Text:	
 14793                           
 14794                           	psect	text43
 14795  32E3                     __ptext43:	
 14796 ;; *************** function _EUSART_Write *****************
 14797 ;; Defined at:
 14798 ;;		line 56 in file "EUSART.c"
 14799 ;; Parameters:    Size  Location     Type
 14800 ;;  txData          1    wreg     unsigned char 
 14801 ;; Auto vars:     Size  Location     Type
 14802 ;;  txData          1    1[COMMON] unsigned char 
 14803 ;; Return value:  Size  Location     Type
 14804 ;;                  1    wreg      void 
 14805 ;; Registers used:
 14806 ;;		wreg
 14807 ;; Tracked objects:
 14808 ;;		On entry : 0/0
 14809 ;;		On exit  : 0/0
 14810 ;;		Unchanged: 0/0
 14811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14813 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14815 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14816 ;;Total ram usage:        1 bytes
 14817 ;; Hardware stack levels used:    1
 14818 ;; Hardware stack levels required when called:    1
 14819 ;; This function calls:
 14820 ;;		Nothing
 14821 ;; This function is called by:
 14822 ;;		_EUSART_Write_Text
 14823 ;; This function uses a non-reentrant model
 14824 ;;
 14825                           
 14826                           
 14827                           ;psect for function _EUSART_Write
 14828  32E3                     _EUSART_Write:	
 14829                           
 14830                           ;incstack = 0
 14831                           ; Regs used in _EUSART_Write: [wreg]
 14832                           ;EUSART_Write@txData stored from wreg
 14833  32E3  00F1               	movwf	EUSART_Write@txData
 14834  32E4                     l227:	
 14835                           ;EUSART.c: 59:     {;EUSART.c: 60:     }
 14836                           
 14837                           
 14838                           ;EUSART.c: 58:     while(0 == PIR1bits.TXIF)
 14839  32E4  0020               	movlb	0	; select bank0
 14840  32E5  1E11               	btfss	17,4	;volatile
 14841  32E6  2AE4               	goto	l227
 14842                           
 14843                           ;EUSART.c: 62:     TX1REG = txData;
 14844  32E7  0871               	movf	EUSART_Write@txData,w
 14845  32E8  0023               	movlb	3	; select bank3
 14846  32E9  009A               	movwf	26	;volatile
 14847  32EA  0008               	return
 14848  32EB                     __end_of_EUSART_Write:	
 14849                           
 14850                           	psect	text44
 14851  0801                     __ptext44:	
 14852 ;; *************** function _init_AFE *****************
 14853 ;; Defined at:
 14854 ;;		line 3 in file "BQ76920.c"
 14855 ;; Parameters:    Size  Location     Type
 14856 ;;		None
 14857 ;; Auto vars:     Size  Location     Type
 14858 ;;		None
 14859 ;; Return value:  Size  Location     Type
 14860 ;;                  1    wreg      void 
 14861 ;; Registers used:
 14862 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14863 ;; Tracked objects:
 14864 ;;		On entry : 0/0
 14865 ;;		On exit  : 0/0
 14866 ;;		Unchanged: 0/0
 14867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14872 ;;Total ram usage:        0 bytes
 14873 ;; Hardware stack levels used:    1
 14874 ;; Hardware stack levels required when called:    4
 14875 ;; This function calls:
 14876 ;;		_setOverCurrentDischargeProtection
 14877 ;;		_setShortCircuitProtection
 14878 ;;		_setShuntResistorValue
 14879 ;;		_setTemperatureLimitsint
 14880 ;; This function is called by:
 14881 ;;		_statemachine
 14882 ;; This function uses a non-reentrant model
 14883 ;;
 14884                           
 14885                           
 14886                           ;psect for function _init_AFE
 14887  0801                     _init_AFE:	
 14888                           
 14889                           ;BQ76920.c: 5:     setTemperatureLimitsint(-20, 45, 0, 45);
 14890                           
 14891                           ;incstack = 0
 14892                           ; Regs used in _init_AFE: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14893  0801  30EC               	movlw	236
 14894  0802  0020               	movlb	0	; select bank0
 14895  0803  00A0               	movwf	setTemperatureLimitsint@minDischarge_degC
 14896  0804  30FF               	movlw	255
 14897  0805  00A1               	movwf	setTemperatureLimitsint@minDischarge_degC+1
 14898  0806  302D               	movlw	45
 14899  0807  00A2               	movwf	setTemperatureLimitsint@maxDischarge_degC
 14900  0808  3000               	movlw	0
 14901  0809  00A3               	movwf	setTemperatureLimitsint@maxDischarge_degC+1
 14902  080A  3000               	movlw	0
 14903  080B  00A4               	movwf	setTemperatureLimitsint@minCharge_degC
 14904  080C  00A5               	movwf	setTemperatureLimitsint@minCharge_degC+1
 14905  080D  302D               	movlw	45
 14906  080E  00A6               	movwf	setTemperatureLimitsint@maxCharge_degC
 14907  080F  3000               	movlw	0
 14908  0810  00A7               	movwf	setTemperatureLimitsint@maxCharge_degC+1
 14909  0811  31B5  25EC  3188   	fcall	_setTemperatureLimitsint
 14910                           
 14911                           ;BQ76920.c: 6:     setShuntResistorValue(0.02);
 14912  0814  303C               	movlw	60
 14913  0815  00F4               	movwf	setShuntResistorValue@res_mOhm+3
 14914  0816  30A3               	movlw	163
 14915  0817  00F3               	movwf	setShuntResistorValue@res_mOhm+2
 14916  0818  30D7               	movlw	215
 14917  0819  00F2               	movwf	setShuntResistorValue@res_mOhm+1
 14918  081A  300A               	movlw	10
 14919  081B  00F1               	movwf	setShuntResistorValue@res_mOhm
 14920  081C  31B3  2323  3188   	fcall	_setShuntResistorValue
 14921                           
 14922                           ;BQ76920.c: 7:     setShortCircuitProtection(2500, 200);
 14923  081F  3000               	movlw	0
 14924  0820  0020               	movlb	0	; select bank0
 14925  0821  00E9               	movwf	setShortCircuitProtection@current_mA+3
 14926  0822  3000               	movlw	0
 14927  0823  00E8               	movwf	setShortCircuitProtection@current_mA+2
 14928  0824  3009               	movlw	9
 14929  0825  00E7               	movwf	setShortCircuitProtection@current_mA+1
 14930  0826  30C4               	movlw	196
 14931  0827  00E6               	movwf	setShortCircuitProtection@current_mA
 14932  0828  30C8               	movlw	200
 14933  0829  00EA               	movwf	setShortCircuitProtection@delay_us
 14934  082A  3000               	movlw	0
 14935  082B  00EB               	movwf	setShortCircuitProtection@delay_us+1
 14936  082C  319A  225B  3188   	fcall	_setShortCircuitProtection
 14937                           
 14938                           ;BQ76920.c: 9:     setOverCurrentDischargeProtection(20000, 320);
 14939  082F  3000               	movlw	0
 14940  0830  0020               	movlb	0	; select bank0
 14941  0831  00E9               	movwf	setOverCurrentDischargeProtection@current_mA+3
 14942  0832  3000               	movlw	0
 14943  0833  00E8               	movwf	setOverCurrentDischargeProtection@current_mA+2
 14944  0834  304E               	movlw	78
 14945  0835  00E7               	movwf	setOverCurrentDischargeProtection@current_mA+1
 14946  0836  3020               	movlw	32
 14947  0837  00E6               	movwf	setOverCurrentDischargeProtection@current_mA
 14948  0838  3040               	movlw	64
 14949  0839  00EA               	movwf	setOverCurrentDischargeProtection@delay_ms
 14950  083A  3001               	movlw	1
 14951  083B  00EB               	movwf	setOverCurrentDischargeProtection@delay_ms+1
 14952  083C  3199  2146         	fcall	_setOverCurrentDischargeProtection
 14953  083E  0008               	return
 14954  083F                     __end_of_init_AFE:	
 14955                           
 14956                           	psect	text45
 14957  35EC                     __ptext45:	
 14958 ;; *************** function _setTemperatureLimitsint *****************
 14959 ;; Defined at:
 14960 ;;		line 58 in file "BQ76920.c"
 14961 ;; Parameters:    Size  Location     Type
 14962 ;;  minDischarge    2    0[BANK0 ] int 
 14963 ;;  maxDischarge    2    2[BANK0 ] int 
 14964 ;;  minCharge_de    2    4[BANK0 ] int 
 14965 ;;  maxCharge_de    2    6[BANK0 ] int 
 14966 ;; Auto vars:     Size  Location     Type
 14967 ;;		None
 14968 ;; Return value:  Size  Location     Type
 14969 ;;                  1    wreg      void 
 14970 ;; Registers used:
 14971 ;;		wreg, status,2, status,0, pclath, cstack
 14972 ;; Tracked objects:
 14973 ;;		On entry : 0/0
 14974 ;;		On exit  : 0/0
 14975 ;;		Unchanged: 0/0
 14976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14977 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14980 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14981 ;;Total ram usage:        8 bytes
 14982 ;; Hardware stack levels used:    1
 14983 ;; Hardware stack levels required when called:    2
 14984 ;; This function calls:
 14985 ;;		___wmul
 14986 ;; This function is called by:
 14987 ;;		_init_AFE
 14988 ;; This function uses a non-reentrant model
 14989 ;;
 14990                           
 14991                           
 14992                           ;psect for function _setTemperatureLimitsint
 14993  35EC                     _setTemperatureLimitsint:	
 14994                           
 14995                           ;BQ76920.c: 60:     minCellTempDischarge = minDischarge_degC * 10;
 14996                           
 14997                           ;incstack = 0
 14998                           ; Regs used in _setTemperatureLimitsint: [wreg+status,2+status,0+pclath+cstack]
 14999  35EC  0020               	movlb	0	; select bank0
 15000  35ED  0821               	movf	setTemperatureLimitsint@minDischarge_degC+1,w
 15001  35EE  00F2               	movwf	___wmul@multiplier+1
 15002  35EF  0820               	movf	setTemperatureLimitsint@minDischarge_degC,w
 15003  35F0  00F1               	movwf	___wmul@multiplier
 15004  35F1  300A               	movlw	10
 15005  35F2  00F3               	movwf	___wmul@multiplicand
 15006  35F3  3000               	movlw	0
 15007  35F4  00F4               	movwf	___wmul@multiplicand+1
 15008  35F5  31B4  2409  31B5   	fcall	___wmul
 15009  35F8  0872               	movf	?___wmul+1,w
 15010  35F9  0023               	movlb	3	; select bank3
 15011  35FA  00CD               	movwf	(_minCellTempDischarge+1)^(0+384)
 15012  35FB  0871               	movf	?___wmul,w
 15013  35FC  00CC               	movwf	_minCellTempDischarge^(0+384)
 15014                           
 15015                           ;BQ76920.c: 61:     maxCellTempDischarge = maxDischarge_degC * 10;
 15016  35FD  0020               	movlb	0	; select bank0
 15017  35FE  0823               	movf	setTemperatureLimitsint@maxDischarge_degC+1,w
 15018  35FF  00F2               	movwf	___wmul@multiplier+1
 15019  3600  0822               	movf	setTemperatureLimitsint@maxDischarge_degC,w
 15020  3601  00F1               	movwf	___wmul@multiplier
 15021  3602  300A               	movlw	10
 15022  3603  00F3               	movwf	___wmul@multiplicand
 15023  3604  3000               	movlw	0
 15024  3605  00F4               	movwf	___wmul@multiplicand+1
 15025  3606  31B4  2409  31B5   	fcall	___wmul
 15026  3609  0872               	movf	?___wmul+1,w
 15027  360A  0023               	movlb	3	; select bank3
 15028  360B  00C9               	movwf	(_maxCellTempDischarge+1)^(0+384)
 15029  360C  0871               	movf	?___wmul,w
 15030  360D  00C8               	movwf	_maxCellTempDischarge^(0+384)
 15031                           
 15032                           ;BQ76920.c: 62:     minCellTempCharge = minCharge_degC * 10;
 15033  360E  0020               	movlb	0	; select bank0
 15034  360F  0825               	movf	setTemperatureLimitsint@minCharge_degC+1,w
 15035  3610  00F2               	movwf	___wmul@multiplier+1
 15036  3611  0824               	movf	setTemperatureLimitsint@minCharge_degC,w
 15037  3612  00F1               	movwf	___wmul@multiplier
 15038  3613  300A               	movlw	10
 15039  3614  00F3               	movwf	___wmul@multiplicand
 15040  3615  3000               	movlw	0
 15041  3616  00F4               	movwf	___wmul@multiplicand+1
 15042  3617  31B4  2409  31B5   	fcall	___wmul
 15043  361A  0872               	movf	?___wmul+1,w
 15044  361B  0023               	movlb	3	; select bank3
 15045  361C  00CF               	movwf	(_minCellTempCharge+1)^(0+384)
 15046  361D  0871               	movf	?___wmul,w
 15047  361E  00CE               	movwf	_minCellTempCharge^(0+384)
 15048                           
 15049                           ;BQ76920.c: 63:     maxCellTempCharge = maxCharge_degC * 10;
 15050  361F  0020               	movlb	0	; select bank0
 15051  3620  0827               	movf	setTemperatureLimitsint@maxCharge_degC+1,w
 15052  3621  00F2               	movwf	___wmul@multiplier+1
 15053  3622  0826               	movf	setTemperatureLimitsint@maxCharge_degC,w
 15054  3623  00F1               	movwf	___wmul@multiplier
 15055  3624  300A               	movlw	10
 15056  3625  00F3               	movwf	___wmul@multiplicand
 15057  3626  3000               	movlw	0
 15058  3627  00F4               	movwf	___wmul@multiplicand+1
 15059  3628  31B4  2409         	fcall	___wmul
 15060  362A  0872               	movf	?___wmul+1,w
 15061  362B  0023               	movlb	3	; select bank3
 15062  362C  00CB               	movwf	(_maxCellTempCharge+1)^(0+384)
 15063  362D  0871               	movf	?___wmul,w
 15064  362E  00CA               	movwf	_maxCellTempCharge^(0+384)
 15065  362F  0008               	return
 15066  3630                     __end_of_setTemperatureLimitsint:	
 15067                           
 15068                           	psect	text46
 15069  3409                     __ptext46:	
 15070 ;; *************** function ___wmul *****************
 15071 ;; Defined at:
 15072 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 15073 ;; Parameters:    Size  Location     Type
 15074 ;;  multiplier      2    1[COMMON] unsigned int 
 15075 ;;  multiplicand    2    3[COMMON] unsigned int 
 15076 ;; Auto vars:     Size  Location     Type
 15077 ;;  product         2    5[COMMON] unsigned int 
 15078 ;; Return value:  Size  Location     Type
 15079 ;;                  2    1[COMMON] unsigned int 
 15080 ;; Registers used:
 15081 ;;		wreg, status,2, status,0
 15082 ;; Tracked objects:
 15083 ;;		On entry : 0/0
 15084 ;;		On exit  : 0/0
 15085 ;;		Unchanged: 0/0
 15086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15087 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15088 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15090 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15091 ;;Total ram usage:        6 bytes
 15092 ;; Hardware stack levels used:    1
 15093 ;; Hardware stack levels required when called:    1
 15094 ;; This function calls:
 15095 ;;		Nothing
 15096 ;; This function is called by:
 15097 ;;		_setTemperatureLimitsint
 15098 ;;		_atoi
 15099 ;; This function uses a non-reentrant model
 15100 ;;
 15101                           
 15102                           
 15103                           ;psect for function ___wmul
 15104  3409                     ___wmul:	
 15105                           
 15106                           ;incstack = 0
 15107                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 15108  3409  01F5               	clrf	___wmul@product
 15109  340A  01F6               	clrf	___wmul@product+1
 15110  340B                     l4632:	
 15111  340B  1C71               	btfss	___wmul@multiplier,0
 15112  340C  2C11               	goto	l874
 15113  340D  0873               	movf	___wmul@multiplicand,w
 15114  340E  07F5               	addwf	___wmul@product,f
 15115  340F  0874               	movf	___wmul@multiplicand+1,w
 15116  3410  3DF6               	addwfc	___wmul@product+1,f
 15117  3411                     l874:	
 15118  3411  3001               	movlw	1
 15119  3412                     u5685:	
 15120  3412  35F3               	lslf	___wmul@multiplicand,f
 15121  3413  0DF4               	rlf	___wmul@multiplicand+1,f
 15122  3414  0B89               	decfsz	9,f
 15123  3415  2C12               	goto	u5685
 15124  3416  3001               	movlw	1
 15125  3417                     u5695:	
 15126  3417  36F2               	lsrf	___wmul@multiplier+1,f
 15127  3418  0CF1               	rrf	___wmul@multiplier,f
 15128  3419  0B89               	decfsz	9,f
 15129  341A  2C17               	goto	u5695
 15130  341B  0871               	movf	___wmul@multiplier,w
 15131  341C  0472               	iorwf	___wmul@multiplier+1,w
 15132  341D  1D03               	btfss	3,2
 15133  341E  2C0B               	goto	l4632
 15134  341F  0876               	movf	___wmul@product+1,w
 15135  3420  00F2               	movwf	?___wmul+1
 15136  3421  0875               	movf	___wmul@product,w
 15137  3422  00F1               	movwf	?___wmul
 15138  3423  0008               	return
 15139  3424                     __end_of___wmul:	
 15140                           
 15141                           	psect	text47
 15142  3323                     __ptext47:	
 15143 ;; *************** function _setShuntResistorValue *****************
 15144 ;; Defined at:
 15145 ;;		line 70 in file "BQ76920.c"
 15146 ;; Parameters:    Size  Location     Type
 15147 ;;  res_mOhm        4    1[COMMON] float 
 15148 ;; Auto vars:     Size  Location     Type
 15149 ;;		None
 15150 ;; Return value:  Size  Location     Type
 15151 ;;                  1    wreg      void 
 15152 ;; Registers used:
 15153 ;;		wreg
 15154 ;; Tracked objects:
 15155 ;;		On entry : 0/0
 15156 ;;		On exit  : 0/0
 15157 ;;		Unchanged: 0/0
 15158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15159 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15162 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15163 ;;Total ram usage:        4 bytes
 15164 ;; Hardware stack levels used:    1
 15165 ;; Hardware stack levels required when called:    1
 15166 ;; This function calls:
 15167 ;;		Nothing
 15168 ;; This function is called by:
 15169 ;;		_init_AFE
 15170 ;; This function uses a non-reentrant model
 15171 ;;
 15172                           
 15173                           
 15174                           ;psect for function _setShuntResistorValue
 15175  3323                     _setShuntResistorValue:	
 15176                           
 15177                           ;BQ76920.c: 71:     shuntResistorValue_mOhm = res_mOhm;
 15178                           
 15179                           ;incstack = 0
 15180                           ; Regs used in _setShuntResistorValue: [wreg]
 15181  3323  0874               	movf	setShuntResistorValue@res_mOhm+3,w
 15182  3324  0023               	movlb	3	; select bank3
 15183  3325  00B5               	movwf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384)
 15184  3326  0873               	movf	setShuntResistorValue@res_mOhm+2,w
 15185  3327  00B4               	movwf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384)
 15186  3328  0872               	movf	setShuntResistorValue@res_mOhm+1,w
 15187  3329  00B3               	movwf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384)
 15188  332A  0871               	movf	setShuntResistorValue@res_mOhm,w
 15189  332B  00B2               	movwf	BQ76920@shuntResistorValue_mOhm^(0+384)
 15190  332C  0008               	return
 15191  332D                     __end_of_setShuntResistorValue:	
 15192                           
 15193                           	psect	text48
 15194  1A5B                     __ptext48:	
 15195 ;; *************** function _setShortCircuitProtection *****************
 15196 ;; Defined at:
 15197 ;;		line 78 in file "BQ76920.c"
 15198 ;; Parameters:    Size  Location     Type
 15199 ;;  current_mA      4   70[BANK0 ] long 
 15200 ;;  delay_us        2   74[BANK0 ] int 
 15201 ;; Auto vars:     Size  Location     Type
 15202 ;;  i               2   10[BANK1 ] int 
 15203 ;;  i               2    8[BANK1 ] int 
 15204 ;;  scaler          4    0[BANK1 ] float 
 15205 ;; Return value:  Size  Location     Type
 15206 ;;                  1    wreg      void 
 15207 ;; Registers used:
 15208 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15209 ;; Tracked objects:
 15210 ;;		On entry : 0/0
 15211 ;;		On exit  : 0/0
 15212 ;;		Unchanged: 0/0
 15213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15214 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15215 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15216 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15217 ;;      Totals:         0       9      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15218 ;;Total ram usage:       21 bytes
 15219 ;; Hardware stack levels used:    1
 15220 ;; Hardware stack levels required when called:    3
 15221 ;; This function calls:
 15222 ;;		_I2C_writeRegister
 15223 ;;		___fldiv
 15224 ;;		___flge
 15225 ;;		___flmul
 15226 ;;		___xxtofl
 15227 ;; This function is called by:
 15228 ;;		_init_AFE
 15229 ;; This function uses a non-reentrant model
 15230 ;;
 15231                           
 15232                           
 15233                           ;psect for function _setShortCircuitProtection
 15234  1A5B                     _setShortCircuitProtection:	
 15235                           
 15236                           ;BQ76920.c: 83:     float scaler = 1000.0;
 15237                           
 15238                           ;incstack = 0
 15239                           ; Regs used in _setShortCircuitProtection: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15240  1A5B  3044               	movlw	68
 15241  1A5C  0021               	movlb	1	; select bank1
 15242  1A5D  00A3               	movwf	(setShortCircuitProtection@scaler+3)^(0+128)
 15243  1A5E  307A               	movlw	122
 15244  1A5F  00A2               	movwf	(setShortCircuitProtection@scaler+2)^(0+128)
 15245  1A60  3000               	movlw	0
 15246  1A61  00A1               	movwf	(setShortCircuitProtection@scaler+1)^(0+128)
 15247  1A62  3000               	movlw	0
 15248  1A63  00A0               	movwf	setShortCircuitProtection@scaler^(0+128)
 15249                           
 15250                           ;BQ76920.c: 84:     protect1.bits.SCD_THRESH = 0;
 15251  1A64  30F8               	movlw	-8
 15252  1A65  0023               	movlb	3	; select bank3
 15253  1A66  05D6               	andwf	BQ76920@protect1^(0+384),f
 15254                           
 15255                           ;BQ76920.c: 85:     for (int i = 0; i < (sizeof(SCD_threshold_setting) / sizeof((SCD_thr
      +                          eshold_setting)[0])) - 1; i++) {
 15256  1A67  0021               	movlb	1	; select bank1
 15257  1A68  01A8               	clrf	setShortCircuitProtection@i^(0+128)
 15258  1A69  01A9               	clrf	(setShortCircuitProtection@i+1)^(0+128)
 15259  1A6A                     l6472:	
 15260                           
 15261                           ;BQ76920.c: 86:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) >
      +                          = SCD_threshold_setting[i]) {
 15262  1A6A  0023               	movlb	3	; select bank3
 15263  1A6B  0835               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 15264  1A6C  0020               	movlb	0	; select bank0
 15265  1A6D  00A9               	movwf	___flmul@b+3
 15266  1A6E  0023               	movlb	3	; select bank3
 15267  1A6F  0834               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 15268  1A70  0020               	movlb	0	; select bank0
 15269  1A71  00A8               	movwf	___flmul@b+2
 15270  1A72  0023               	movlb	3	; select bank3
 15271  1A73  0833               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 15272  1A74  0020               	movlb	0	; select bank0
 15273  1A75  00A7               	movwf	___flmul@b+1
 15274  1A76  0023               	movlb	3	; select bank3
 15275  1A77  0832               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 15276  1A78  0020               	movlb	0	; select bank0
 15277  1A79  00A6               	movwf	___flmul@b
 15278  1A7A  0869               	movf	setShortCircuitProtection@current_mA+3,w
 15279  1A7B  00F4               	movwf	___xxtofl@val+3
 15280  1A7C  0868               	movf	setShortCircuitProtection@current_mA+2,w
 15281  1A7D  00F3               	movwf	___xxtofl@val+2
 15282  1A7E  0867               	movf	setShortCircuitProtection@current_mA+1,w
 15283  1A7F  00F2               	movwf	___xxtofl@val+1
 15284  1A80  0866               	movf	setShortCircuitProtection@current_mA,w
 15285  1A81  00F1               	movwf	___xxtofl@val
 15286  1A82  3001               	movlw	1
 15287  1A83  31AC  24C9  319A   	fcall	___xxtofl
 15288  1A86  0874               	movf	?___xxtofl+3,w
 15289  1A87  0020               	movlb	0	; select bank0
 15290  1A88  00AD               	movwf	___flmul@a+3
 15291  1A89  0873               	movf	?___xxtofl+2,w
 15292  1A8A  00AC               	movwf	___flmul@a+2
 15293  1A8B  0872               	movf	?___xxtofl+1,w
 15294  1A8C  00AB               	movwf	___flmul@a+1
 15295  1A8D  0871               	movf	?___xxtofl,w
 15296  1A8E  00AA               	movwf	___flmul@a
 15297  1A8F  3195  25D4  319A   	fcall	___flmul
 15298  1A92  0020               	movlb	0	; select bank0
 15299  1A93  0829               	movf	?___flmul+3,w
 15300  1A94  0021               	movlb	1	; select bank1
 15301  1A95  00A7               	movwf	(_setShortCircuitProtection$1974+3)^(0+128)
 15302  1A96  0020               	movlb	0	; select bank0
 15303  1A97  0828               	movf	?___flmul+2,w
 15304  1A98  0021               	movlb	1	; select bank1
 15305  1A99  00A6               	movwf	(_setShortCircuitProtection$1974+2)^(0+128)
 15306  1A9A  0020               	movlb	0	; select bank0
 15307  1A9B  0827               	movf	?___flmul+1,w
 15308  1A9C  0021               	movlb	1	; select bank1
 15309  1A9D  00A5               	movwf	(_setShortCircuitProtection$1974+1)^(0+128)
 15310  1A9E  0020               	movlb	0	; select bank0
 15311  1A9F  0826               	movf	?___flmul,w
 15312  1AA0  0021               	movlb	1	; select bank1
 15313  1AA1  00A4               	movwf	_setShortCircuitProtection$1974^(0+128)
 15314                           
 15315                           ;BQ76920.c: 86:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) >
      +                          = SCD_threshold_setting[i]) {
 15316  1AA2  3044               	movlw	68
 15317  1AA3  0020               	movlb	0	; select bank0
 15318  1AA4  00C3               	movwf	___fldiv@a+3
 15319  1AA5  307A               	movlw	122
 15320  1AA6  00C2               	movwf	___fldiv@a+2
 15321  1AA7  3000               	movlw	0
 15322  1AA8  00C1               	movwf	___fldiv@a+1
 15323  1AA9  3000               	movlw	0
 15324  1AAA  00C0               	movwf	___fldiv@a
 15325  1AAB  0021               	movlb	1	; select bank1
 15326  1AAC  0823               	movf	(setShortCircuitProtection@scaler+3)^(0+128),w
 15327  1AAD  0020               	movlb	0	; select bank0
 15328  1AAE  00A9               	movwf	___flmul@b+3
 15329  1AAF  0021               	movlb	1	; select bank1
 15330  1AB0  0822               	movf	(setShortCircuitProtection@scaler+2)^(0+128),w
 15331  1AB1  0020               	movlb	0	; select bank0
 15332  1AB2  00A8               	movwf	___flmul@b+2
 15333  1AB3  0021               	movlb	1	; select bank1
 15334  1AB4  0821               	movf	(setShortCircuitProtection@scaler+1)^(0+128),w
 15335  1AB5  0020               	movlb	0	; select bank0
 15336  1AB6  00A7               	movwf	___flmul@b+1
 15337  1AB7  0021               	movlb	1	; select bank1
 15338  1AB8  0820               	movf	setShortCircuitProtection@scaler^(0+128),w
 15339  1AB9  0020               	movlb	0	; select bank0
 15340  1ABA  00A6               	movwf	___flmul@b
 15341  1ABB  0021               	movlb	1	; select bank1
 15342  1ABC  0827               	movf	(_setShortCircuitProtection$1974+3)^(0+128),w
 15343  1ABD  0020               	movlb	0	; select bank0
 15344  1ABE  00AD               	movwf	___flmul@a+3
 15345  1ABF  0021               	movlb	1	; select bank1
 15346  1AC0  0826               	movf	(_setShortCircuitProtection$1974+2)^(0+128),w
 15347  1AC1  0020               	movlb	0	; select bank0
 15348  1AC2  00AC               	movwf	___flmul@a+2
 15349  1AC3  0021               	movlb	1	; select bank1
 15350  1AC4  0825               	movf	(_setShortCircuitProtection$1974+1)^(0+128),w
 15351  1AC5  0020               	movlb	0	; select bank0
 15352  1AC6  00AB               	movwf	___flmul@a+1
 15353  1AC7  0021               	movlb	1	; select bank1
 15354  1AC8  0824               	movf	_setShortCircuitProtection$1974^(0+128),w
 15355  1AC9  0020               	movlb	0	; select bank0
 15356  1ACA  00AA               	movwf	___flmul@a
 15357  1ACB  3195  25D4  319A   	fcall	___flmul
 15358  1ACE  0020               	movlb	0	; select bank0
 15359  1ACF  0829               	movf	?___flmul+3,w
 15360  1AD0  00C7               	movwf	___fldiv@b+3
 15361  1AD1  0828               	movf	?___flmul+2,w
 15362  1AD2  00C6               	movwf	___fldiv@b+2
 15363  1AD3  0827               	movf	?___flmul+1,w
 15364  1AD4  00C5               	movwf	___fldiv@b+1
 15365  1AD5  0826               	movf	?___flmul,w
 15366  1AD6  00C4               	movwf	___fldiv@b
 15367  1AD7  3190  2052  319A   	fcall	___fldiv
 15368  1ADA  0020               	movlb	0	; select bank0
 15369  1ADB  0843               	movf	?___fldiv+3,w
 15370  1ADC  00DD               	movwf	___flge@ff1+3
 15371  1ADD  0842               	movf	?___fldiv+2,w
 15372  1ADE  00DC               	movwf	___flge@ff1+2
 15373  1ADF  0841               	movf	?___fldiv+1,w
 15374  1AE0  00DB               	movwf	___flge@ff1+1
 15375  1AE1  0840               	movf	?___fldiv,w
 15376  1AE2  00DA               	movwf	___flge@ff1
 15377  1AE3  0021               	movlb	1	; select bank1
 15378  1AE4  0829               	movf	(setShortCircuitProtection@i+1)^(0+128),w
 15379  1AE5  0085               	movwf	5
 15380  1AE6  0828               	movf	setShortCircuitProtection@i^(0+128),w
 15381  1AE7  0084               	movwf	4
 15382  1AE8  3584               	lslf	4,f
 15383  1AE9  0D85               	rlf	5,f
 15384  1AEA  30E8               	movlw	low (_SCD_threshold_setting| (0+32768))
 15385  1AEB  0784               	addwf	4,f
 15386  1AEC  30BA               	movlw	high (_SCD_threshold_setting| (0+32768))
 15387  1AED  3D85               	addwfc	5,f
 15388  1AEE  3F00               	moviw [0]fsr0
 15389  1AEF  0020               	movlb	0	; select bank0
 15390  1AF0  00EC               	movwf	??_setShortCircuitProtection
 15391  1AF1  3F01               	moviw [1]fsr0
 15392  1AF2  00ED               	movwf	??_setShortCircuitProtection+1
 15393  1AF3  086C               	movf	??_setShortCircuitProtection,w
 15394  1AF4  00F1               	movwf	___xxtofl@val
 15395  1AF5  086D               	movf	??_setShortCircuitProtection+1,w
 15396  1AF6  00F2               	movwf	___xxtofl@val+1
 15397  1AF7  0D89               	rlf	9,f
 15398  1AF8  3B89               	subwfb	9,f
 15399  1AF9  0989               	comf	9,f
 15400  1AFA  00F3               	movwf	___xxtofl@val+2
 15401  1AFB  00F4               	movwf	___xxtofl@val+3
 15402  1AFC  3001               	movlw	1
 15403  1AFD  31AC  24C9  319A   	fcall	___xxtofl
 15404  1B00  0874               	movf	?___xxtofl+3,w
 15405  1B01  0020               	movlb	0	; select bank0
 15406  1B02  00E1               	movwf	___flge@ff2+3
 15407  1B03  0873               	movf	?___xxtofl+2,w
 15408  1B04  00E0               	movwf	___flge@ff2+2
 15409  1B05  0872               	movf	?___xxtofl+1,w
 15410  1B06  00DF               	movwf	___flge@ff2+1
 15411  1B07  0871               	movf	?___xxtofl,w
 15412  1B08  00DE               	movwf	___flge@ff2
 15413  1B09  31A9  21C7  319A   	fcall	___flge
 15414  1B0C  1C03               	btfss	3,0
 15415  1B0D  2B16               	goto	l6478
 15416                           
 15417                           ;BQ76920.c: 87:             protect1.bits.SCD_THRESH = i;
 15418  1B0E  0023               	movlb	3	; select bank3
 15419  1B0F  0856               	movf	BQ76920@protect1^(0+384),w
 15420  1B10  0021               	movlb	1	; select bank1
 15421  1B11  0628               	xorwf	setShortCircuitProtection@i^(0+128),w
 15422  1B12  39F8               	andlw	-8
 15423  1B13  0628               	xorwf	setShortCircuitProtection@i^(0+128),w
 15424  1B14  0023               	movlb	3	; select bank3
 15425  1B15  00D6               	movwf	BQ76920@protect1^(0+384)
 15426  1B16                     l6478:	
 15427                           
 15428                           ;BQ76920.c: 89:     }
 15429  1B16  3001               	movlw	1
 15430  1B17  0021               	movlb	1	; select bank1
 15431  1B18  07A8               	addwf	setShortCircuitProtection@i^(0+128),f
 15432  1B19  3000               	movlw	0
 15433  1B1A  3DA9               	addwfc	(setShortCircuitProtection@i+1)^(0+128),f
 15434  1B1B  3000               	movlw	0
 15435  1B1C  0229               	subwf	(setShortCircuitProtection@i+1)^(0+128),w
 15436  1B1D  3007               	movlw	7
 15437  1B1E  1903               	skipnz
 15438  1B1F  0228               	subwf	setShortCircuitProtection@i^(0+128),w
 15439  1B20  1C03               	skipc
 15440  1B21  2A6A               	goto	l6472
 15441                           
 15442                           ;BQ76920.c: 91:     protect1.bits.SCD_DELAY = 0;
 15443  1B22  30E7               	movlw	-25
 15444  1B23  0023               	movlb	3	; select bank3
 15445  1B24  05D6               	andwf	BQ76920@protect1^(0+384),f
 15446                           
 15447                           ;BQ76920.c: 92:     for (int i = 0; i < (sizeof(SCD_threshold_setting) / sizeof((SCD_thr
      +                          eshold_setting)[0])) - 1; i++) {
 15448  1B25  0021               	movlb	1	; select bank1
 15449  1B26  01AA               	clrf	setShortCircuitProtection@i_885^(0+128)
 15450  1B27  01AB               	clrf	(setShortCircuitProtection@i_885+1)^(0+128)
 15451  1B28                     l6490:	
 15452                           
 15453                           ;BQ76920.c: 93:         if (delay_us >= SCD_delay_setting[i]) {
 15454  1B28  082B               	movf	(setShortCircuitProtection@i_885+1)^(0+128),w
 15455  1B29  0085               	movwf	5
 15456  1B2A  082A               	movf	setShortCircuitProtection@i_885^(0+128),w
 15457  1B2B  0084               	movwf	4
 15458  1B2C  3584               	lslf	4,f
 15459  1B2D  0D85               	rlf	5,f
 15460  1B2E  3008               	movlw	low (_SCD_delay_setting| (0+32768))
 15461  1B2F  0784               	addwf	4,f
 15462  1B30  30BB               	movlw	high (_SCD_delay_setting| (0+32768))
 15463  1B31  3D85               	addwfc	5,f
 15464  1B32  3F00               	moviw [0]fsr0
 15465  1B33  0020               	movlb	0	; select bank0
 15466  1B34  00EC               	movwf	??_setShortCircuitProtection
 15467  1B35  3F01               	moviw [1]fsr0
 15468  1B36  00ED               	movwf	??_setShortCircuitProtection+1
 15469  1B37  086B               	movf	setShortCircuitProtection@delay_us+1,w
 15470  1B38  3A80               	xorlw	128
 15471  1B39  00EE               	movwf	??_setShortCircuitProtection+2
 15472  1B3A  086D               	movf	??_setShortCircuitProtection+1,w
 15473  1B3B  3A80               	xorlw	128
 15474  1B3C  026E               	subwf	??_setShortCircuitProtection+2,w
 15475  1B3D  1D03               	skipz
 15476  1B3E  2B41               	goto	u9095
 15477  1B3F  086C               	movf	??_setShortCircuitProtection,w
 15478  1B40  026A               	subwf	setShortCircuitProtection@delay_us,w
 15479  1B41                     u9095:	
 15480  1B41  1C03               	skipc
 15481  1B42  2B52               	goto	l6494
 15482                           
 15483                           ;BQ76920.c: 94:             protect1.bits.SCD_DELAY = i;
 15484  1B43  0021               	movlb	1	; select bank1
 15485  1B44  082A               	movf	setShortCircuitProtection@i_885^(0+128),w
 15486  1B45  0020               	movlb	0	; select bank0
 15487  1B46  00EC               	movwf	??_setShortCircuitProtection
 15488  1B47  0DEC               	rlf	??_setShortCircuitProtection,f
 15489  1B48  0DEC               	rlf	??_setShortCircuitProtection,f
 15490  1B49  0DEC               	rlf	??_setShortCircuitProtection,f
 15491  1B4A  0023               	movlb	3	; select bank3
 15492  1B4B  0856               	movf	BQ76920@protect1^(0+384),w
 15493  1B4C  0020               	movlb	0	; select bank0
 15494  1B4D  066C               	xorwf	??_setShortCircuitProtection,w
 15495  1B4E  39E7               	andlw	-25
 15496  1B4F  066C               	xorwf	??_setShortCircuitProtection,w
 15497  1B50  0023               	movlb	3	; select bank3
 15498  1B51  00D6               	movwf	BQ76920@protect1^(0+384)
 15499  1B52                     l6494:	
 15500                           
 15501                           ;BQ76920.c: 96:     }
 15502  1B52  3001               	movlw	1
 15503  1B53  0021               	movlb	1	; select bank1
 15504  1B54  07AA               	addwf	setShortCircuitProtection@i_885^(0+128),f
 15505  1B55  3000               	movlw	0
 15506  1B56  3DAB               	addwfc	(setShortCircuitProtection@i_885+1)^(0+128),f
 15507  1B57  3000               	movlw	0
 15508  1B58  022B               	subwf	(setShortCircuitProtection@i_885+1)^(0+128),w
 15509  1B59  3007               	movlw	7
 15510  1B5A  1903               	skipnz
 15511  1B5B  022A               	subwf	setShortCircuitProtection@i_885^(0+128),w
 15512  1B5C  1C03               	skipc
 15513  1B5D  2B28               	goto	l6490
 15514                           
 15515                           ;BQ76920.c: 98:     I2C_writeRegister(0x18, 0x06, protect1.regByte);
 15516  1B5E  3018               	movlw	24
 15517  1B5F  00F5               	movwf	I2C_writeRegister@slaveAddress
 15518  1B60  3000               	movlw	0
 15519  1B61  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 15520  1B62  3006               	movlw	6
 15521  1B63  00F7               	movwf	I2C_writeRegister@regAddress
 15522  1B64  3000               	movlw	0
 15523  1B65  00F8               	movwf	I2C_writeRegister@regAddress+1
 15524  1B66  0023               	movlb	3	; select bank3
 15525  1B67  0856               	movf	BQ76920@protect1^(0+384),w
 15526  1B68  0020               	movlb	0	; select bank0
 15527  1B69  00EC               	movwf	??_setShortCircuitProtection
 15528  1B6A  01ED               	clrf	??_setShortCircuitProtection+1
 15529  1B6B  086C               	movf	??_setShortCircuitProtection,w
 15530  1B6C  00F9               	movwf	I2C_writeRegister@data
 15531  1B6D  086D               	movf	??_setShortCircuitProtection+1,w
 15532  1B6E  00FA               	movwf	I2C_writeRegister@data+1
 15533  1B6F  31B4  245D         	fcall	_I2C_writeRegister
 15534  1B71  0008               	return
 15535  1B72                     __end_of_setShortCircuitProtection:	
 15536                           
 15537                           	psect	text49
 15538  1946                     __ptext49:	
 15539 ;; *************** function _setOverCurrentDischargeProtection *****************
 15540 ;; Defined at:
 15541 ;;		line 105 in file "BQ76920.c"
 15542 ;; Parameters:    Size  Location     Type
 15543 ;;  current_mA      4   70[BANK0 ] long 
 15544 ;;  delay_ms        2   74[BANK0 ] int 
 15545 ;; Auto vars:     Size  Location     Type
 15546 ;;  i               2   10[BANK1 ] int 
 15547 ;;  i               2    8[BANK1 ] int 
 15548 ;;  scaler          4    0[BANK1 ] float 
 15549 ;; Return value:  Size  Location     Type
 15550 ;;                  1    wreg      void 
 15551 ;; Registers used:
 15552 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15553 ;; Tracked objects:
 15554 ;;		On entry : 0/0
 15555 ;;		On exit  : 0/0
 15556 ;;		Unchanged: 0/0
 15557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15558 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15559 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15560 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15561 ;;      Totals:         0       9      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15562 ;;Total ram usage:       21 bytes
 15563 ;; Hardware stack levels used:    1
 15564 ;; Hardware stack levels required when called:    3
 15565 ;; This function calls:
 15566 ;;		_I2C_writeRegister
 15567 ;;		___fldiv
 15568 ;;		___flge
 15569 ;;		___flmul
 15570 ;;		___xxtofl
 15571 ;; This function is called by:
 15572 ;;		_init_AFE
 15573 ;; This function uses a non-reentrant model
 15574 ;;
 15575                           
 15576                           
 15577                           ;psect for function _setOverCurrentDischargeProtection
 15578  1946                     _setOverCurrentDischargeProtection:	
 15579                           
 15580                           ;BQ76920.c: 108:     float scaler = 1000.0;
 15581                           
 15582                           ;incstack = 0
 15583                           ; Regs used in _setOverCurrentDischargeProtection: [wreg-fsr0h+status,2+status,0+pclath+
      +                          cstack]
 15584  1946  3044               	movlw	68
 15585  1947  0021               	movlb	1	; select bank1
 15586  1948  00A3               	movwf	(setOverCurrentDischargeProtection@scaler+3)^(0+128)
 15587  1949  307A               	movlw	122
 15588  194A  00A2               	movwf	(setOverCurrentDischargeProtection@scaler+2)^(0+128)
 15589  194B  3000               	movlw	0
 15590  194C  00A1               	movwf	(setOverCurrentDischargeProtection@scaler+1)^(0+128)
 15591  194D  3000               	movlw	0
 15592  194E  00A0               	movwf	setOverCurrentDischargeProtection@scaler^(0+128)
 15593                           
 15594                           ;BQ76920.c: 109:     protect2.bits.OCD_THRESH = 0;
 15595  194F  30F0               	movlw	-16
 15596  1950  0023               	movlb	3	; select bank3
 15597  1951  05D5               	andwf	BQ76920@protect2^(0+384),f
 15598                           
 15599                           ;BQ76920.c: 110:     for (int i = 0; i < (sizeof(OCD_threshold_setting) / sizeof((OCD_th
      +                          reshold_setting)[0])) - 1; i++) {
 15600  1952  0021               	movlb	1	; select bank1
 15601  1953  01A8               	clrf	setOverCurrentDischargeProtection@i^(0+128)
 15602  1954  01A9               	clrf	(setOverCurrentDischargeProtection@i+1)^(0+128)
 15603  1955                     l6510:	
 15604                           
 15605                           ;BQ76920.c: 111:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) 
      +                          >= OCD_threshold_setting[i]) {
 15606  1955  0023               	movlb	3	; select bank3
 15607  1956  0835               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 15608  1957  0020               	movlb	0	; select bank0
 15609  1958  00A9               	movwf	___flmul@b+3
 15610  1959  0023               	movlb	3	; select bank3
 15611  195A  0834               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 15612  195B  0020               	movlb	0	; select bank0
 15613  195C  00A8               	movwf	___flmul@b+2
 15614  195D  0023               	movlb	3	; select bank3
 15615  195E  0833               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 15616  195F  0020               	movlb	0	; select bank0
 15617  1960  00A7               	movwf	___flmul@b+1
 15618  1961  0023               	movlb	3	; select bank3
 15619  1962  0832               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 15620  1963  0020               	movlb	0	; select bank0
 15621  1964  00A6               	movwf	___flmul@b
 15622  1965  0869               	movf	setOverCurrentDischargeProtection@current_mA+3,w
 15623  1966  00F4               	movwf	___xxtofl@val+3
 15624  1967  0868               	movf	setOverCurrentDischargeProtection@current_mA+2,w
 15625  1968  00F3               	movwf	___xxtofl@val+2
 15626  1969  0867               	movf	setOverCurrentDischargeProtection@current_mA+1,w
 15627  196A  00F2               	movwf	___xxtofl@val+1
 15628  196B  0866               	movf	setOverCurrentDischargeProtection@current_mA,w
 15629  196C  00F1               	movwf	___xxtofl@val
 15630  196D  3001               	movlw	1
 15631  196E  31AC  24C9  3199   	fcall	___xxtofl
 15632  1971  0874               	movf	?___xxtofl+3,w
 15633  1972  0020               	movlb	0	; select bank0
 15634  1973  00AD               	movwf	___flmul@a+3
 15635  1974  0873               	movf	?___xxtofl+2,w
 15636  1975  00AC               	movwf	___flmul@a+2
 15637  1976  0872               	movf	?___xxtofl+1,w
 15638  1977  00AB               	movwf	___flmul@a+1
 15639  1978  0871               	movf	?___xxtofl,w
 15640  1979  00AA               	movwf	___flmul@a
 15641  197A  3195  25D4  3199   	fcall	___flmul
 15642  197D  0020               	movlb	0	; select bank0
 15643  197E  0829               	movf	?___flmul+3,w
 15644  197F  0021               	movlb	1	; select bank1
 15645  1980  00A7               	movwf	(_setOverCurrentDischargeProtection$1975+3)^(0+128)
 15646  1981  0020               	movlb	0	; select bank0
 15647  1982  0828               	movf	?___flmul+2,w
 15648  1983  0021               	movlb	1	; select bank1
 15649  1984  00A6               	movwf	(_setOverCurrentDischargeProtection$1975+2)^(0+128)
 15650  1985  0020               	movlb	0	; select bank0
 15651  1986  0827               	movf	?___flmul+1,w
 15652  1987  0021               	movlb	1	; select bank1
 15653  1988  00A5               	movwf	(_setOverCurrentDischargeProtection$1975+1)^(0+128)
 15654  1989  0020               	movlb	0	; select bank0
 15655  198A  0826               	movf	?___flmul,w
 15656  198B  0021               	movlb	1	; select bank1
 15657  198C  00A4               	movwf	_setOverCurrentDischargeProtection$1975^(0+128)
 15658                           
 15659                           ;BQ76920.c: 111:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) 
      +                          >= OCD_threshold_setting[i]) {
 15660  198D  3044               	movlw	68
 15661  198E  0020               	movlb	0	; select bank0
 15662  198F  00C3               	movwf	___fldiv@a+3
 15663  1990  307A               	movlw	122
 15664  1991  00C2               	movwf	___fldiv@a+2
 15665  1992  3000               	movlw	0
 15666  1993  00C1               	movwf	___fldiv@a+1
 15667  1994  3000               	movlw	0
 15668  1995  00C0               	movwf	___fldiv@a
 15669  1996  0021               	movlb	1	; select bank1
 15670  1997  0823               	movf	(setOverCurrentDischargeProtection@scaler+3)^(0+128),w
 15671  1998  0020               	movlb	0	; select bank0
 15672  1999  00A9               	movwf	___flmul@b+3
 15673  199A  0021               	movlb	1	; select bank1
 15674  199B  0822               	movf	(setOverCurrentDischargeProtection@scaler+2)^(0+128),w
 15675  199C  0020               	movlb	0	; select bank0
 15676  199D  00A8               	movwf	___flmul@b+2
 15677  199E  0021               	movlb	1	; select bank1
 15678  199F  0821               	movf	(setOverCurrentDischargeProtection@scaler+1)^(0+128),w
 15679  19A0  0020               	movlb	0	; select bank0
 15680  19A1  00A7               	movwf	___flmul@b+1
 15681  19A2  0021               	movlb	1	; select bank1
 15682  19A3  0820               	movf	setOverCurrentDischargeProtection@scaler^(0+128),w
 15683  19A4  0020               	movlb	0	; select bank0
 15684  19A5  00A6               	movwf	___flmul@b
 15685  19A6  0021               	movlb	1	; select bank1
 15686  19A7  0827               	movf	(_setOverCurrentDischargeProtection$1975+3)^(0+128),w
 15687  19A8  0020               	movlb	0	; select bank0
 15688  19A9  00AD               	movwf	___flmul@a+3
 15689  19AA  0021               	movlb	1	; select bank1
 15690  19AB  0826               	movf	(_setOverCurrentDischargeProtection$1975+2)^(0+128),w
 15691  19AC  0020               	movlb	0	; select bank0
 15692  19AD  00AC               	movwf	___flmul@a+2
 15693  19AE  0021               	movlb	1	; select bank1
 15694  19AF  0825               	movf	(_setOverCurrentDischargeProtection$1975+1)^(0+128),w
 15695  19B0  0020               	movlb	0	; select bank0
 15696  19B1  00AB               	movwf	___flmul@a+1
 15697  19B2  0021               	movlb	1	; select bank1
 15698  19B3  0824               	movf	_setOverCurrentDischargeProtection$1975^(0+128),w
 15699  19B4  0020               	movlb	0	; select bank0
 15700  19B5  00AA               	movwf	___flmul@a
 15701  19B6  3195  25D4  3199   	fcall	___flmul
 15702  19B9  0020               	movlb	0	; select bank0
 15703  19BA  0829               	movf	?___flmul+3,w
 15704  19BB  00C7               	movwf	___fldiv@b+3
 15705  19BC  0828               	movf	?___flmul+2,w
 15706  19BD  00C6               	movwf	___fldiv@b+2
 15707  19BE  0827               	movf	?___flmul+1,w
 15708  19BF  00C5               	movwf	___fldiv@b+1
 15709  19C0  0826               	movf	?___flmul,w
 15710  19C1  00C4               	movwf	___fldiv@b
 15711  19C2  3190  2052  3199   	fcall	___fldiv
 15712  19C5  0020               	movlb	0	; select bank0
 15713  19C6  0843               	movf	?___fldiv+3,w
 15714  19C7  00DD               	movwf	___flge@ff1+3
 15715  19C8  0842               	movf	?___fldiv+2,w
 15716  19C9  00DC               	movwf	___flge@ff1+2
 15717  19CA  0841               	movf	?___fldiv+1,w
 15718  19CB  00DB               	movwf	___flge@ff1+1
 15719  19CC  0840               	movf	?___fldiv,w
 15720  19CD  00DA               	movwf	___flge@ff1
 15721  19CE  0021               	movlb	1	; select bank1
 15722  19CF  0829               	movf	(setOverCurrentDischargeProtection@i+1)^(0+128),w
 15723  19D0  0085               	movwf	5
 15724  19D1  0828               	movf	setOverCurrentDischargeProtection@i^(0+128),w
 15725  19D2  0084               	movwf	4
 15726  19D3  3584               	lslf	4,f
 15727  19D4  0D85               	rlf	5,f
 15728  19D5  30C4               	movlw	low (_OCD_threshold_setting| (0+32768))
 15729  19D6  0784               	addwf	4,f
 15730  19D7  30B9               	movlw	high (_OCD_threshold_setting| (0+32768))
 15731  19D8  3D85               	addwfc	5,f
 15732  19D9  3F00               	moviw [0]fsr0
 15733  19DA  0020               	movlb	0	; select bank0
 15734  19DB  00EC               	movwf	??_setOverCurrentDischargeProtection
 15735  19DC  3F01               	moviw [1]fsr0
 15736  19DD  00ED               	movwf	??_setOverCurrentDischargeProtection+1
 15737  19DE  086C               	movf	??_setOverCurrentDischargeProtection,w
 15738  19DF  00F1               	movwf	___xxtofl@val
 15739  19E0  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 15740  19E1  00F2               	movwf	___xxtofl@val+1
 15741  19E2  0D89               	rlf	9,f
 15742  19E3  3B89               	subwfb	9,f
 15743  19E4  0989               	comf	9,f
 15744  19E5  00F3               	movwf	___xxtofl@val+2
 15745  19E6  00F4               	movwf	___xxtofl@val+3
 15746  19E7  3001               	movlw	1
 15747  19E8  31AC  24C9  3199   	fcall	___xxtofl
 15748  19EB  0874               	movf	?___xxtofl+3,w
 15749  19EC  0020               	movlb	0	; select bank0
 15750  19ED  00E1               	movwf	___flge@ff2+3
 15751  19EE  0873               	movf	?___xxtofl+2,w
 15752  19EF  00E0               	movwf	___flge@ff2+2
 15753  19F0  0872               	movf	?___xxtofl+1,w
 15754  19F1  00DF               	movwf	___flge@ff2+1
 15755  19F2  0871               	movf	?___xxtofl,w
 15756  19F3  00DE               	movwf	___flge@ff2
 15757  19F4  31A9  21C7  3199   	fcall	___flge
 15758  19F7  1C03               	btfss	3,0
 15759  19F8  2A01               	goto	l6516
 15760                           
 15761                           ;BQ76920.c: 112:             protect2.bits.OCD_THRESH = i;
 15762  19F9  0023               	movlb	3	; select bank3
 15763  19FA  0855               	movf	BQ76920@protect2^(0+384),w
 15764  19FB  0021               	movlb	1	; select bank1
 15765  19FC  0628               	xorwf	setOverCurrentDischargeProtection@i^(0+128),w
 15766  19FD  39F0               	andlw	-16
 15767  19FE  0628               	xorwf	setOverCurrentDischargeProtection@i^(0+128),w
 15768  19FF  0023               	movlb	3	; select bank3
 15769  1A00  00D5               	movwf	BQ76920@protect2^(0+384)
 15770  1A01                     l6516:	
 15771                           
 15772                           ;BQ76920.c: 114:     }
 15773  1A01  3001               	movlw	1
 15774  1A02  0021               	movlb	1	; select bank1
 15775  1A03  07A8               	addwf	setOverCurrentDischargeProtection@i^(0+128),f
 15776  1A04  3000               	movlw	0
 15777  1A05  3DA9               	addwfc	(setOverCurrentDischargeProtection@i+1)^(0+128),f
 15778  1A06  3000               	movlw	0
 15779  1A07  0229               	subwf	(setOverCurrentDischargeProtection@i+1)^(0+128),w
 15780  1A08  300F               	movlw	15
 15781  1A09  1903               	skipnz
 15782  1A0A  0228               	subwf	setOverCurrentDischargeProtection@i^(0+128),w
 15783  1A0B  1C03               	skipc
 15784  1A0C  2955               	goto	l6510
 15785                           
 15786                           ;BQ76920.c: 116:     protect2.bits.OCD_DELAY = 0;
 15787  1A0D  308F               	movlw	-113
 15788  1A0E  0023               	movlb	3	; select bank3
 15789  1A0F  05D5               	andwf	BQ76920@protect2^(0+384),f
 15790                           
 15791                           ;BQ76920.c: 117:     for (int i = 0; i < (sizeof(OCD_delay_setting) / sizeof((OCD_delay_
      +                          setting)[0])) - 1; i++) {
 15792  1A10  0021               	movlb	1	; select bank1
 15793  1A11  01AA               	clrf	setOverCurrentDischargeProtection@i_894^(0+128)
 15794  1A12  01AB               	clrf	(setOverCurrentDischargeProtection@i_894+1)^(0+128)
 15795  1A13                     l6528:	
 15796                           
 15797                           ;BQ76920.c: 118:         if (delay_ms >= OCD_delay_setting[i]) {
 15798  1A13  082B               	movf	(setOverCurrentDischargeProtection@i_894+1)^(0+128),w
 15799  1A14  0085               	movwf	5
 15800  1A15  082A               	movf	setOverCurrentDischargeProtection@i_894^(0+128),w
 15801  1A16  0084               	movwf	4
 15802  1A17  3584               	lslf	4,f
 15803  1A18  0D85               	rlf	5,f
 15804  1A19  30D8               	movlw	low (_OCD_delay_setting| (0+32768))
 15805  1A1A  0784               	addwf	4,f
 15806  1A1B  30BA               	movlw	high (_OCD_delay_setting| (0+32768))
 15807  1A1C  3D85               	addwfc	5,f
 15808  1A1D  3F00               	moviw [0]fsr0
 15809  1A1E  0020               	movlb	0	; select bank0
 15810  1A1F  00EC               	movwf	??_setOverCurrentDischargeProtection
 15811  1A20  3F01               	moviw [1]fsr0
 15812  1A21  00ED               	movwf	??_setOverCurrentDischargeProtection+1
 15813  1A22  086B               	movf	setOverCurrentDischargeProtection@delay_ms+1,w
 15814  1A23  3A80               	xorlw	128
 15815  1A24  00EE               	movwf	??_setOverCurrentDischargeProtection+2
 15816  1A25  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 15817  1A26  3A80               	xorlw	128
 15818  1A27  026E               	subwf	??_setOverCurrentDischargeProtection+2,w
 15819  1A28  1D03               	skipz
 15820  1A29  2A2C               	goto	u9135
 15821  1A2A  086C               	movf	??_setOverCurrentDischargeProtection,w
 15822  1A2B  026A               	subwf	setOverCurrentDischargeProtection@delay_ms,w
 15823  1A2C                     u9135:	
 15824  1A2C  1C03               	skipc
 15825  1A2D  2A3B               	goto	l6532
 15826                           
 15827                           ;BQ76920.c: 119:             protect2.bits.OCD_DELAY = i;
 15828  1A2E  0021               	movlb	1	; select bank1
 15829  1A2F  082A               	movf	setOverCurrentDischargeProtection@i_894^(0+128),w
 15830  1A30  0020               	movlb	0	; select bank0
 15831  1A31  00EC               	movwf	??_setOverCurrentDischargeProtection
 15832  1A32  0EEC               	swapf	??_setOverCurrentDischargeProtection,f
 15833  1A33  0023               	movlb	3	; select bank3
 15834  1A34  0855               	movf	BQ76920@protect2^(0+384),w
 15835  1A35  0020               	movlb	0	; select bank0
 15836  1A36  066C               	xorwf	??_setOverCurrentDischargeProtection,w
 15837  1A37  398F               	andlw	-113
 15838  1A38  066C               	xorwf	??_setOverCurrentDischargeProtection,w
 15839  1A39  0023               	movlb	3	; select bank3
 15840  1A3A  00D5               	movwf	BQ76920@protect2^(0+384)
 15841  1A3B                     l6532:	
 15842                           
 15843                           ;BQ76920.c: 121:     }
 15844  1A3B  3001               	movlw	1
 15845  1A3C  0021               	movlb	1	; select bank1
 15846  1A3D  07AA               	addwf	setOverCurrentDischargeProtection@i_894^(0+128),f
 15847  1A3E  3000               	movlw	0
 15848  1A3F  3DAB               	addwfc	(setOverCurrentDischargeProtection@i_894+1)^(0+128),f
 15849  1A40  3000               	movlw	0
 15850  1A41  022B               	subwf	(setOverCurrentDischargeProtection@i_894+1)^(0+128),w
 15851  1A42  3007               	movlw	7
 15852  1A43  1903               	skipnz
 15853  1A44  022A               	subwf	setOverCurrentDischargeProtection@i_894^(0+128),w
 15854  1A45  1C03               	skipc
 15855  1A46  2A13               	goto	l6528
 15856                           
 15857                           ;BQ76920.c: 123:     I2C_writeRegister(0x18, 0x07, protect2.regByte);
 15858  1A47  3018               	movlw	24
 15859  1A48  00F5               	movwf	I2C_writeRegister@slaveAddress
 15860  1A49  3000               	movlw	0
 15861  1A4A  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 15862  1A4B  3007               	movlw	7
 15863  1A4C  00F7               	movwf	I2C_writeRegister@regAddress
 15864  1A4D  3000               	movlw	0
 15865  1A4E  00F8               	movwf	I2C_writeRegister@regAddress+1
 15866  1A4F  0023               	movlb	3	; select bank3
 15867  1A50  0855               	movf	BQ76920@protect2^(0+384),w
 15868  1A51  0020               	movlb	0	; select bank0
 15869  1A52  00EC               	movwf	??_setOverCurrentDischargeProtection
 15870  1A53  01ED               	clrf	??_setOverCurrentDischargeProtection+1
 15871  1A54  086C               	movf	??_setOverCurrentDischargeProtection,w
 15872  1A55  00F9               	movwf	I2C_writeRegister@data
 15873  1A56  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 15874  1A57  00FA               	movwf	I2C_writeRegister@data+1
 15875  1A58  31B4  245D         	fcall	_I2C_writeRegister
 15876  1A5A  0008               	return
 15877  1A5B                     __end_of_setOverCurrentDischargeProtection:	
 15878                           
 15879                           	psect	text50
 15880  15D4                     __ptext50:	
 15881 ;; *************** function ___flmul *****************
 15882 ;; Defined at:
 15883 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
 15884 ;; Parameters:    Size  Location     Type
 15885 ;;  b               4    6[BANK0 ] void 
 15886 ;;  a               4   10[BANK0 ] void 
 15887 ;; Auto vars:     Size  Location     Type
 15888 ;;  prod            4   26[BANK0 ] struct .
 15889 ;;  grs             4   20[BANK0 ] unsigned long 
 15890 ;;  temp            2   30[BANK0 ] struct .
 15891 ;;  bexp            1   25[BANK0 ] unsigned char 
 15892 ;;  aexp            1   24[BANK0 ] unsigned char 
 15893 ;;  sign            1   19[BANK0 ] unsigned char 
 15894 ;; Return value:  Size  Location     Type
 15895 ;;                  4    6[BANK0 ] unsigned char 
 15896 ;; Registers used:
 15897 ;;		wreg, status,2, status,0, pclath, cstack
 15898 ;; Tracked objects:
 15899 ;;		On entry : 0/0
 15900 ;;		On exit  : 0/0
 15901 ;;		Unchanged: 0/0
 15902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15903 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15904 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15905 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15906 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15907 ;;Total ram usage:       26 bytes
 15908 ;; Hardware stack levels used:    1
 15909 ;; Hardware stack levels required when called:    2
 15910 ;; This function calls:
 15911 ;;		__Umul8_16
 15912 ;; This function is called by:
 15913 ;;		_setShortCircuitProtection
 15914 ;;		_setOverCurrentDischargeProtection
 15915 ;;		_efgtoa
 15916 ;; This function uses a non-reentrant model
 15917 ;;
 15918                           
 15919                           
 15920                           ;psect for function ___flmul
 15921  15D4                     ___flmul:	
 15922                           
 15923                           ;incstack = 0
 15924                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 15925  15D4  0020               	movlb	0	; select bank0
 15926  15D5  0829               	movf	___flmul@b+3,w
 15927  15D6  3980               	andlw	128
 15928  15D7  00AE               	movwf	??___flmul
 15929  15D8  082E               	movf	??___flmul,w
 15930  15D9  00B3               	movwf	___flmul@sign
 15931  15DA  3529               	lslf	___flmul@b+3,w
 15932  15DB  00AE               	movwf	??___flmul
 15933  15DC  082E               	movf	??___flmul,w
 15934  15DD  00B9               	movwf	___flmul@bexp
 15935  15DE  1BA8               	btfsc	___flmul@b+2,7
 15936  15DF  1439               	bsf	___flmul@bexp,0
 15937  15E0  0839               	movf	___flmul@bexp,w
 15938  15E1  1903               	btfsc	3,2
 15939  15E2  2DF0               	goto	l5070
 15940  15E3  0A39               	incf	___flmul@bexp,w
 15941  15E4  1D03               	btfss	3,2
 15942  15E5  2DEE               	goto	l5068
 15943  15E6  3000               	movlw	0
 15944  15E7  00A9               	movwf	___flmul@b+3
 15945  15E8  3000               	movlw	0
 15946  15E9  00A8               	movwf	___flmul@b+2
 15947  15EA  3000               	movlw	0
 15948  15EB  00A7               	movwf	___flmul@b+1
 15949  15EC  3000               	movlw	0
 15950  15ED  00A6               	movwf	___flmul@b
 15951  15EE                     l5068:	
 15952  15EE  17A8               	bsf	___flmul@b+2,7
 15953  15EF  2DF8               	goto	l5072
 15954  15F0                     l5070:	
 15955  15F0  3000               	movlw	0
 15956  15F1  00A9               	movwf	___flmul@b+3
 15957  15F2  3000               	movlw	0
 15958  15F3  00A8               	movwf	___flmul@b+2
 15959  15F4  3000               	movlw	0
 15960  15F5  00A7               	movwf	___flmul@b+1
 15961  15F6  3000               	movlw	0
 15962  15F7  00A6               	movwf	___flmul@b
 15963  15F8                     l5072:	
 15964  15F8  082D               	movf	___flmul@a+3,w
 15965  15F9  3980               	andlw	128
 15966  15FA  00AE               	movwf	??___flmul
 15967  15FB  082E               	movf	??___flmul,w
 15968  15FC  06B3               	xorwf	___flmul@sign,f
 15969  15FD  352D               	lslf	___flmul@a+3,w
 15970  15FE  00AE               	movwf	??___flmul
 15971  15FF  082E               	movf	??___flmul,w
 15972  1600  00B8               	movwf	___flmul@aexp
 15973  1601  1BAC               	btfsc	___flmul@a+2,7
 15974  1602  1438               	bsf	___flmul@aexp,0
 15975  1603  0838               	movf	___flmul@aexp,w
 15976  1604  1903               	btfsc	3,2
 15977  1605  2E13               	goto	l5088
 15978  1606  0A38               	incf	___flmul@aexp,w
 15979  1607  1D03               	btfss	3,2
 15980  1608  2E11               	goto	l5086
 15981  1609  3000               	movlw	0
 15982  160A  00AD               	movwf	___flmul@a+3
 15983  160B  3000               	movlw	0
 15984  160C  00AC               	movwf	___flmul@a+2
 15985  160D  3000               	movlw	0
 15986  160E  00AB               	movwf	___flmul@a+1
 15987  160F  3000               	movlw	0
 15988  1610  00AA               	movwf	___flmul@a
 15989  1611                     l5086:	
 15990  1611  17AC               	bsf	___flmul@a+2,7
 15991  1612  2E1B               	goto	l5090
 15992  1613                     l5088:	
 15993  1613  3000               	movlw	0
 15994  1614  00AD               	movwf	___flmul@a+3
 15995  1615  3000               	movlw	0
 15996  1616  00AC               	movwf	___flmul@a+2
 15997  1617  3000               	movlw	0
 15998  1618  00AB               	movwf	___flmul@a+1
 15999  1619  3000               	movlw	0
 16000  161A  00AA               	movwf	___flmul@a
 16001  161B                     l5090:	
 16002  161B  0838               	movf	___flmul@aexp,w
 16003  161C  1D03               	btfss	3,2
 16004  161D  0839               	movf	___flmul@bexp,w
 16005  161E  1D03               	btfss	3,2
 16006  161F  2E29               	goto	l5098
 16007  1620  3000               	movlw	0
 16008  1621  00A9               	movwf	?___flmul+3
 16009  1622  3000               	movlw	0
 16010  1623  00A8               	movwf	?___flmul+2
 16011  1624  3000               	movlw	0
 16012  1625  00A7               	movwf	?___flmul+1
 16013  1626  3000               	movlw	0
 16014  1627  00A6               	movwf	?___flmul
 16015  1628  0008               	return
 16016  1629                     l5098:	
 16017  1629  0826               	movf	___flmul@b,w
 16018  162A  00AE               	movwf	??___flmul
 16019  162B  082E               	movf	??___flmul,w
 16020  162C  00F1               	movwf	__Umul8_16@multiplicand
 16021  162D  082C               	movf	___flmul@a+2,w
 16022  162E  31B4  247B  3195   	fcall	__Umul8_16
 16023  1631  0872               	movf	?__Umul8_16+1,w
 16024  1632  0020               	movlb	0	; select bank0
 16025  1633  00BF               	movwf	___flmul@temp+1
 16026  1634  0871               	movf	?__Umul8_16,w
 16027  1635  00BE               	movwf	___flmul@temp
 16028  1636  083E               	movf	___flmul@temp,w
 16029  1637  00AE               	movwf	??___flmul
 16030  1638  01AF               	clrf	??___flmul+1
 16031  1639  01B0               	clrf	??___flmul+2
 16032  163A  01B1               	clrf	??___flmul+3
 16033  163B  0831               	movf	??___flmul+3,w
 16034  163C  00B7               	movwf	___flmul@grs+3
 16035  163D  0830               	movf	??___flmul+2,w
 16036  163E  00B6               	movwf	___flmul@grs+2
 16037  163F  082F               	movf	??___flmul+1,w
 16038  1640  00B5               	movwf	___flmul@grs+1
 16039  1641  082E               	movf	??___flmul,w
 16040  1642  00B4               	movwf	___flmul@grs
 16041  1643  083F               	movf	___flmul@temp+1,w
 16042  1644  00AE               	movwf	??___flmul
 16043  1645  01AF               	clrf	??___flmul+1
 16044  1646  01B0               	clrf	??___flmul+2
 16045  1647  01B1               	clrf	??___flmul+3
 16046  1648  0831               	movf	??___flmul+3,w
 16047  1649  00BD               	movwf	___flmul@prod+3
 16048  164A  0830               	movf	??___flmul+2,w
 16049  164B  00BC               	movwf	___flmul@prod+2
 16050  164C  082F               	movf	??___flmul+1,w
 16051  164D  00BB               	movwf	___flmul@prod+1
 16052  164E  082E               	movf	??___flmul,w
 16053  164F  00BA               	movwf	___flmul@prod
 16054  1650  0827               	movf	___flmul@b+1,w
 16055  1651  00AE               	movwf	??___flmul
 16056  1652  082E               	movf	??___flmul,w
 16057  1653  00F1               	movwf	__Umul8_16@multiplicand
 16058  1654  082B               	movf	___flmul@a+1,w
 16059  1655  31B4  247B  3195   	fcall	__Umul8_16
 16060  1658  0872               	movf	?__Umul8_16+1,w
 16061  1659  0020               	movlb	0	; select bank0
 16062  165A  00BF               	movwf	___flmul@temp+1
 16063  165B  0871               	movf	?__Umul8_16,w
 16064  165C  00BE               	movwf	___flmul@temp
 16065  165D  083E               	movf	___flmul@temp,w
 16066  165E  00AE               	movwf	??___flmul
 16067  165F  01AF               	clrf	??___flmul+1
 16068  1660  01B0               	clrf	??___flmul+2
 16069  1661  01B1               	clrf	??___flmul+3
 16070  1662  082E               	movf	??___flmul,w
 16071  1663  07B4               	addwf	___flmul@grs,f
 16072  1664  082F               	movf	??___flmul+1,w
 16073  1665  3DB5               	addwfc	___flmul@grs+1,f
 16074  1666  0830               	movf	??___flmul+2,w
 16075  1667  3DB6               	addwfc	___flmul@grs+2,f
 16076  1668  0831               	movf	??___flmul+3,w
 16077  1669  3DB7               	addwfc	___flmul@grs+3,f
 16078  166A  083F               	movf	___flmul@temp+1,w
 16079  166B  00AE               	movwf	??___flmul
 16080  166C  01AF               	clrf	??___flmul+1
 16081  166D  01B0               	clrf	??___flmul+2
 16082  166E  01B1               	clrf	??___flmul+3
 16083  166F  082E               	movf	??___flmul,w
 16084  1670  07BA               	addwf	___flmul@prod,f
 16085  1671  082F               	movf	??___flmul+1,w
 16086  1672  3DBB               	addwfc	___flmul@prod+1,f
 16087  1673  0830               	movf	??___flmul+2,w
 16088  1674  3DBC               	addwfc	___flmul@prod+2,f
 16089  1675  0831               	movf	??___flmul+3,w
 16090  1676  3DBD               	addwfc	___flmul@prod+3,f
 16091  1677  0828               	movf	___flmul@b+2,w
 16092  1678  00AE               	movwf	??___flmul
 16093  1679  082E               	movf	??___flmul,w
 16094  167A  00F1               	movwf	__Umul8_16@multiplicand
 16095  167B  082A               	movf	___flmul@a,w
 16096  167C  31B4  247B  3195   	fcall	__Umul8_16
 16097  167F  0872               	movf	?__Umul8_16+1,w
 16098  1680  0020               	movlb	0	; select bank0
 16099  1681  00BF               	movwf	___flmul@temp+1
 16100  1682  0871               	movf	?__Umul8_16,w
 16101  1683  00BE               	movwf	___flmul@temp
 16102  1684  083E               	movf	___flmul@temp,w
 16103  1685  00AE               	movwf	??___flmul
 16104  1686  01AF               	clrf	??___flmul+1
 16105  1687  01B0               	clrf	??___flmul+2
 16106  1688  01B1               	clrf	??___flmul+3
 16107  1689  082E               	movf	??___flmul,w
 16108  168A  07B4               	addwf	___flmul@grs,f
 16109  168B  082F               	movf	??___flmul+1,w
 16110  168C  3DB5               	addwfc	___flmul@grs+1,f
 16111  168D  0830               	movf	??___flmul+2,w
 16112  168E  3DB6               	addwfc	___flmul@grs+2,f
 16113  168F  0831               	movf	??___flmul+3,w
 16114  1690  3DB7               	addwfc	___flmul@grs+3,f
 16115  1691  083F               	movf	___flmul@temp+1,w
 16116  1692  00AE               	movwf	??___flmul
 16117  1693  01AF               	clrf	??___flmul+1
 16118  1694  01B0               	clrf	??___flmul+2
 16119  1695  01B1               	clrf	??___flmul+3
 16120  1696  082E               	movf	??___flmul,w
 16121  1697  07BA               	addwf	___flmul@prod,f
 16122  1698  082F               	movf	??___flmul+1,w
 16123  1699  3DBB               	addwfc	___flmul@prod+1,f
 16124  169A  0830               	movf	??___flmul+2,w
 16125  169B  3DBC               	addwfc	___flmul@prod+2,f
 16126  169C  0831               	movf	??___flmul+3,w
 16127  169D  3DBD               	addwfc	___flmul@prod+3,f
 16128  169E  3008               	movlw	8
 16129  169F                     u6765:	
 16130  169F  35B4               	lslf	___flmul@grs,f
 16131  16A0  0DB5               	rlf	___flmul@grs+1,f
 16132  16A1  0DB6               	rlf	___flmul@grs+2,f
 16133  16A2  0DB7               	rlf	___flmul@grs+3,f
 16134  16A3  0B89               	decfsz	9,f
 16135  16A4  2E9F               	goto	u6765
 16136  16A5  0827               	movf	___flmul@b+1,w
 16137  16A6  00AE               	movwf	??___flmul
 16138  16A7  082E               	movf	??___flmul,w
 16139  16A8  00F1               	movwf	__Umul8_16@multiplicand
 16140  16A9  082A               	movf	___flmul@a,w
 16141  16AA  31B4  247B  3195   	fcall	__Umul8_16
 16142  16AD  0872               	movf	?__Umul8_16+1,w
 16143  16AE  0020               	movlb	0	; select bank0
 16144  16AF  00BF               	movwf	___flmul@temp+1
 16145  16B0  0871               	movf	?__Umul8_16,w
 16146  16B1  00BE               	movwf	___flmul@temp
 16147  16B2  083E               	movf	___flmul@temp,w
 16148  16B3  07B4               	addwf	___flmul@grs,f
 16149  16B4  083F               	movf	___flmul@temp+1,w
 16150  16B5  3DB5               	addwfc	___flmul@grs+1,f
 16151  16B6  3000               	movlw	0
 16152  16B7  3DB6               	addwfc	___flmul@grs+2,f
 16153  16B8  3DB7               	addwfc	___flmul@grs+3,f
 16154  16B9  0826               	movf	___flmul@b,w
 16155  16BA  00AE               	movwf	??___flmul
 16156  16BB  082E               	movf	??___flmul,w
 16157  16BC  00F1               	movwf	__Umul8_16@multiplicand
 16158  16BD  082B               	movf	___flmul@a+1,w
 16159  16BE  31B4  247B  3195   	fcall	__Umul8_16
 16160  16C1  0872               	movf	?__Umul8_16+1,w
 16161  16C2  0020               	movlb	0	; select bank0
 16162  16C3  00BF               	movwf	___flmul@temp+1
 16163  16C4  0871               	movf	?__Umul8_16,w
 16164  16C5  00BE               	movwf	___flmul@temp
 16165  16C6  083E               	movf	___flmul@temp,w
 16166  16C7  07B4               	addwf	___flmul@grs,f
 16167  16C8  083F               	movf	___flmul@temp+1,w
 16168  16C9  3DB5               	addwfc	___flmul@grs+1,f
 16169  16CA  3000               	movlw	0
 16170  16CB  3DB6               	addwfc	___flmul@grs+2,f
 16171  16CC  3DB7               	addwfc	___flmul@grs+3,f
 16172  16CD  3008               	movlw	8
 16173  16CE                     u6775:	
 16174  16CE  35B4               	lslf	___flmul@grs,f
 16175  16CF  0DB5               	rlf	___flmul@grs+1,f
 16176  16D0  0DB6               	rlf	___flmul@grs+2,f
 16177  16D1  0DB7               	rlf	___flmul@grs+3,f
 16178  16D2  0B89               	decfsz	9,f
 16179  16D3  2ECE               	goto	u6775
 16180  16D4  0826               	movf	___flmul@b,w
 16181  16D5  00AE               	movwf	??___flmul
 16182  16D6  082E               	movf	??___flmul,w
 16183  16D7  00F1               	movwf	__Umul8_16@multiplicand
 16184  16D8  082A               	movf	___flmul@a,w
 16185  16D9  31B4  247B  3195   	fcall	__Umul8_16
 16186  16DC  0872               	movf	?__Umul8_16+1,w
 16187  16DD  0020               	movlb	0	; select bank0
 16188  16DE  00BF               	movwf	___flmul@temp+1
 16189  16DF  0871               	movf	?__Umul8_16,w
 16190  16E0  00BE               	movwf	___flmul@temp
 16191  16E1  083E               	movf	___flmul@temp,w
 16192  16E2  07B4               	addwf	___flmul@grs,f
 16193  16E3  083F               	movf	___flmul@temp+1,w
 16194  16E4  3DB5               	addwfc	___flmul@grs+1,f
 16195  16E5  3000               	movlw	0
 16196  16E6  3DB6               	addwfc	___flmul@grs+2,f
 16197  16E7  3DB7               	addwfc	___flmul@grs+3,f
 16198  16E8  0827               	movf	___flmul@b+1,w
 16199  16E9  00AE               	movwf	??___flmul
 16200  16EA  082E               	movf	??___flmul,w
 16201  16EB  00F1               	movwf	__Umul8_16@multiplicand
 16202  16EC  082C               	movf	___flmul@a+2,w
 16203  16ED  31B4  247B  3195   	fcall	__Umul8_16
 16204  16F0  0872               	movf	?__Umul8_16+1,w
 16205  16F1  0020               	movlb	0	; select bank0
 16206  16F2  00BF               	movwf	___flmul@temp+1
 16207  16F3  0871               	movf	?__Umul8_16,w
 16208  16F4  00BE               	movwf	___flmul@temp
 16209  16F5  083E               	movf	___flmul@temp,w
 16210  16F6  07BA               	addwf	___flmul@prod,f
 16211  16F7  083F               	movf	___flmul@temp+1,w
 16212  16F8  3DBB               	addwfc	___flmul@prod+1,f
 16213  16F9  3000               	movlw	0
 16214  16FA  3DBC               	addwfc	___flmul@prod+2,f
 16215  16FB  3DBD               	addwfc	___flmul@prod+3,f
 16216  16FC  0828               	movf	___flmul@b+2,w
 16217  16FD  00AE               	movwf	??___flmul
 16218  16FE  082E               	movf	??___flmul,w
 16219  16FF  00F1               	movwf	__Umul8_16@multiplicand
 16220  1700  082B               	movf	___flmul@a+1,w
 16221  1701  31B4  247B  3195   	fcall	__Umul8_16
 16222  1704  0872               	movf	?__Umul8_16+1,w
 16223  1705  0020               	movlb	0	; select bank0
 16224  1706  00BF               	movwf	___flmul@temp+1
 16225  1707  0871               	movf	?__Umul8_16,w
 16226  1708  00BE               	movwf	___flmul@temp
 16227  1709  083E               	movf	___flmul@temp,w
 16228  170A  07BA               	addwf	___flmul@prod,f
 16229  170B  083F               	movf	___flmul@temp+1,w
 16230  170C  3DBB               	addwfc	___flmul@prod+1,f
 16231  170D  3000               	movlw	0
 16232  170E  3DBC               	addwfc	___flmul@prod+2,f
 16233  170F  3DBD               	addwfc	___flmul@prod+3,f
 16234  1710  0828               	movf	___flmul@b+2,w
 16235  1711  00AE               	movwf	??___flmul
 16236  1712  082E               	movf	??___flmul,w
 16237  1713  00F1               	movwf	__Umul8_16@multiplicand
 16238  1714  082C               	movf	___flmul@a+2,w
 16239  1715  31B4  247B  3195   	fcall	__Umul8_16
 16240  1718  0872               	movf	?__Umul8_16+1,w
 16241  1719  0020               	movlb	0	; select bank0
 16242  171A  00BF               	movwf	___flmul@temp+1
 16243  171B  0871               	movf	?__Umul8_16,w
 16244  171C  00BE               	movwf	___flmul@temp
 16245  171D  083E               	movf	___flmul@temp,w
 16246  171E  00AE               	movwf	??___flmul
 16247  171F  083F               	movf	___flmul@temp+1,w
 16248  1720  00AF               	movwf	??___flmul+1
 16249  1721  01B0               	clrf	??___flmul+2
 16250  1722  01B1               	clrf	??___flmul+3
 16251  1723  3008               	movlw	8
 16252  1724                     u6785:	
 16253  1724  35AE               	lslf	??___flmul,f
 16254  1725  0DAF               	rlf	??___flmul+1,f
 16255  1726  0DB0               	rlf	??___flmul+2,f
 16256  1727  0DB1               	rlf	??___flmul+3,f
 16257  1728  0B89               	decfsz	9,f
 16258  1729  2F24               	goto	u6785
 16259  172A  082E               	movf	??___flmul,w
 16260  172B  07BA               	addwf	___flmul@prod,f
 16261  172C  082F               	movf	??___flmul+1,w
 16262  172D  3DBB               	addwfc	___flmul@prod+1,f
 16263  172E  0830               	movf	??___flmul+2,w
 16264  172F  3DBC               	addwfc	___flmul@prod+2,f
 16265  1730  0831               	movf	??___flmul+3,w
 16266  1731  3DBD               	addwfc	___flmul@prod+3,f
 16267  1732  0834               	movf	___flmul@grs,w
 16268  1733  00AE               	movwf	??___flmul
 16269  1734  0835               	movf	___flmul@grs+1,w
 16270  1735  00AF               	movwf	??___flmul+1
 16271  1736  0836               	movf	___flmul@grs+2,w
 16272  1737  00B0               	movwf	??___flmul+2
 16273  1738  0837               	movf	___flmul@grs+3,w
 16274  1739  00B1               	movwf	??___flmul+3
 16275  173A  3018               	movlw	24
 16276  173B                     u6795:	
 16277  173B  36B1               	lsrf	??___flmul+3,f
 16278  173C  0CB0               	rrf	??___flmul+2,f
 16279  173D  0CAF               	rrf	??___flmul+1,f
 16280  173E  0CAE               	rrf	??___flmul,f
 16281  173F  0B89               	decfsz	9,f
 16282  1740  2F3B               	goto	u6795
 16283  1741  082E               	movf	??___flmul,w
 16284  1742  07BA               	addwf	___flmul@prod,f
 16285  1743  082F               	movf	??___flmul+1,w
 16286  1744  3DBB               	addwfc	___flmul@prod+1,f
 16287  1745  0830               	movf	??___flmul+2,w
 16288  1746  3DBC               	addwfc	___flmul@prod+2,f
 16289  1747  0831               	movf	??___flmul+3,w
 16290  1748  3DBD               	addwfc	___flmul@prod+3,f
 16291  1749  3008               	movlw	8
 16292  174A                     u6805:	
 16293  174A  35B4               	lslf	___flmul@grs,f
 16294  174B  0DB5               	rlf	___flmul@grs+1,f
 16295  174C  0DB6               	rlf	___flmul@grs+2,f
 16296  174D  0DB7               	rlf	___flmul@grs+3,f
 16297  174E  0B89               	decfsz	9,f
 16298  174F  2F4A               	goto	u6805
 16299  1750  0839               	movf	___flmul@bexp,w
 16300  1751  0738               	addwf	___flmul@aexp,w
 16301  1752  00AE               	movwf	??___flmul
 16302  1753  01AF               	clrf	??___flmul+1
 16303  1754  0DAF               	rlf	??___flmul+1,f
 16304  1755  082E               	movf	??___flmul,w
 16305  1756  3E82               	addlw	130
 16306  1757  00BE               	movwf	___flmul@temp
 16307  1758  30FF               	movlw	255
 16308  1759  3D2F               	addwfc	??___flmul+1,w
 16309  175A  00BF               	movwf	___flmul@temp+1
 16310  175B                     l5150:	
 16311  175B  1BBC               	btfsc	___flmul@prod+2,7
 16312  175C  2F72               	goto	l5152
 16313  175D  3001               	movlw	1
 16314  175E                     u6815:	
 16315  175E  35BA               	lslf	___flmul@prod,f
 16316  175F  0DBB               	rlf	___flmul@prod+1,f
 16317  1760  0DBC               	rlf	___flmul@prod+2,f
 16318  1761  0DBD               	rlf	___flmul@prod+3,f
 16319  1762  0B89               	decfsz	9,f
 16320  1763  2F5E               	goto	u6815
 16321  1764  1BB7               	btfsc	___flmul@grs+3,7
 16322  1765  143A               	bsf	___flmul@prod,0
 16323  1766  3001               	movlw	1
 16324  1767                     u6835:	
 16325  1767  35B4               	lslf	___flmul@grs,f
 16326  1768  0DB5               	rlf	___flmul@grs+1,f
 16327  1769  0DB6               	rlf	___flmul@grs+2,f
 16328  176A  0DB7               	rlf	___flmul@grs+3,f
 16329  176B  0B89               	decfsz	9,f
 16330  176C  2F67               	goto	u6835
 16331  176D  30FF               	movlw	255
 16332  176E  07BE               	addwf	___flmul@temp,f
 16333  176F  30FF               	movlw	255
 16334  1770  3DBF               	addwfc	___flmul@temp+1,f
 16335  1771  2F5B               	goto	l5150
 16336  1772                     l5152:	
 16337  1772  01B8               	clrf	___flmul@aexp
 16338  1773  1FB7               	btfss	___flmul@grs+3,7
 16339  1774  2F8B               	goto	l5162
 16340  1775  30FF               	movlw	255
 16341  1776  0534               	andwf	___flmul@grs,w
 16342  1777  00AE               	movwf	??___flmul
 16343  1778  30FF               	movlw	255
 16344  1779  0535               	andwf	___flmul@grs+1,w
 16345  177A  00AF               	movwf	??___flmul+1
 16346  177B  30FF               	movlw	255
 16347  177C  0536               	andwf	___flmul@grs+2,w
 16348  177D  00B0               	movwf	??___flmul+2
 16349  177E  307F               	movlw	127
 16350  177F  0537               	andwf	___flmul@grs+3,w
 16351  1780  00B1               	movwf	??___flmul+3
 16352  1781  0831               	movf	??___flmul+3,w
 16353  1782  0430               	iorwf	??___flmul+2,w
 16354  1783  042F               	iorwf	??___flmul+1,w
 16355  1784  042E               	iorwf	??___flmul,w
 16356  1785  1903               	skipnz
 16357  1786  183A               	btfsc	___flmul@prod,0
 16358  1787  2F89               	goto	l5158
 16359  1788  2F8B               	goto	l5162
 16360  1789                     l5158:	
 16361  1789  01B8               	clrf	___flmul@aexp
 16362  178A  0AB8               	incf	___flmul@aexp,f
 16363  178B                     l5162:	
 16364  178B  0838               	movf	___flmul@aexp,w
 16365  178C  1903               	btfsc	3,2
 16366  178D  2FB4               	goto	l5172
 16367  178E  3001               	movlw	1
 16368  178F  07BA               	addwf	___flmul@prod,f
 16369  1790  3000               	movlw	0
 16370  1791  3DBB               	addwfc	___flmul@prod+1,f
 16371  1792  3000               	movlw	0
 16372  1793  3DBC               	addwfc	___flmul@prod+2,f
 16373  1794  3000               	movlw	0
 16374  1795  3DBD               	addwfc	___flmul@prod+3,f
 16375  1796  1C3D               	btfss	___flmul@prod+3,0
 16376  1797  2FB4               	goto	l5172
 16377  1798  083A               	movf	___flmul@prod,w
 16378  1799  00AE               	movwf	??___flmul
 16379  179A  083B               	movf	___flmul@prod+1,w
 16380  179B  00AF               	movwf	??___flmul+1
 16381  179C  083C               	movf	___flmul@prod+2,w
 16382  179D  00B0               	movwf	??___flmul+2
 16383  179E  083D               	movf	___flmul@prod+3,w
 16384  179F  00B1               	movwf	??___flmul+3
 16385  17A0  3001               	movlw	1
 16386  17A1  00B2               	movwf	??___flmul+4
 16387  17A2                     u6905:	
 16388  17A2  37B1               	asrf	??___flmul+3,f
 16389  17A3  0CB0               	rrf	??___flmul+2,f
 16390  17A4  0CAF               	rrf	??___flmul+1,f
 16391  17A5  0CAE               	rrf	??___flmul,f
 16392  17A6  0BB2               	decfsz	??___flmul+4,f
 16393  17A7  2FA2               	goto	u6905
 16394  17A8  0831               	movf	??___flmul+3,w
 16395  17A9  00BD               	movwf	___flmul@prod+3
 16396  17AA  0830               	movf	??___flmul+2,w
 16397  17AB  00BC               	movwf	___flmul@prod+2
 16398  17AC  082F               	movf	??___flmul+1,w
 16399  17AD  00BB               	movwf	___flmul@prod+1
 16400  17AE  082E               	movf	??___flmul,w
 16401  17AF  00BA               	movwf	___flmul@prod
 16402  17B0  3001               	movlw	1
 16403  17B1  07BE               	addwf	___flmul@temp,f
 16404  17B2  3000               	movlw	0
 16405  17B3  3DBF               	addwfc	___flmul@temp+1,f
 16406  17B4                     l5172:	
 16407  17B4  083F               	movf	___flmul@temp+1,w
 16408  17B5  3A80               	xorlw	128
 16409  17B6  00AE               	movwf	??___flmul
 16410  17B7  3080               	movlw	128
 16411  17B8  022E               	subwf	??___flmul,w
 16412  17B9  1D03               	skipz
 16413  17BA  2FBD               	goto	u6915
 16414  17BB  30FF               	movlw	255
 16415  17BC  023E               	subwf	___flmul@temp,w
 16416  17BD                     u6915:	
 16417  17BD  1C03               	skipc
 16418  17BE  2FC9               	goto	l5176
 16419  17BF  307F               	movlw	127
 16420  17C0  0020               	movlb	0	; select bank0
 16421  17C1  00BD               	movwf	___flmul@prod+3
 16422  17C2  3080               	movlw	128
 16423  17C3  00BC               	movwf	___flmul@prod+2
 16424  17C4  3000               	movlw	0
 16425  17C5  00BB               	movwf	___flmul@prod+1
 16426  17C6  3000               	movlw	0
 16427  17C7  00BA               	movwf	___flmul@prod
 16428  17C8  2FF3               	goto	l1283
 16429  17C9                     l5176:	
 16430  17C9  0020               	movlb	0	; select bank0
 16431  17CA  083F               	movf	___flmul@temp+1,w
 16432  17CB  3A80               	xorlw	128
 16433  17CC  00AE               	movwf	??___flmul
 16434  17CD  3080               	movlw	128
 16435  17CE  022E               	subwf	??___flmul,w
 16436  17CF  1D03               	skipz
 16437  17D0  2FD3               	goto	u6925
 16438  17D1  3001               	movlw	1
 16439  17D2  023E               	subwf	___flmul@temp,w
 16440  17D3                     u6925:	
 16441  17D3  1803               	skipnc
 16442  17D4  2FE0               	goto	l5182
 16443  17D5  3000               	movlw	0
 16444  17D6  0020               	movlb	0	; select bank0
 16445  17D7  00BD               	movwf	___flmul@prod+3
 16446  17D8  3000               	movlw	0
 16447  17D9  00BC               	movwf	___flmul@prod+2
 16448  17DA  3000               	movlw	0
 16449  17DB  00BB               	movwf	___flmul@prod+1
 16450  17DC  3000               	movlw	0
 16451  17DD  00BA               	movwf	___flmul@prod
 16452  17DE  01B3               	clrf	___flmul@sign
 16453  17DF  2FF3               	goto	l1283
 16454  17E0                     l5182:	
 16455  17E0  0020               	movlb	0	; select bank0
 16456  17E1  083E               	movf	___flmul@temp,w
 16457  17E2  00AE               	movwf	??___flmul
 16458  17E3  082E               	movf	??___flmul,w
 16459  17E4  00B9               	movwf	___flmul@bexp
 16460  17E5  30FF               	movlw	255
 16461  17E6  05BA               	andwf	___flmul@prod,f
 16462  17E7  30FF               	movlw	255
 16463  17E8  05BB               	andwf	___flmul@prod+1,f
 16464  17E9  307F               	movlw	127
 16465  17EA  05BC               	andwf	___flmul@prod+2,f
 16466  17EB  3000               	movlw	0
 16467  17EC  05BD               	andwf	___flmul@prod+3,f
 16468  17ED  1839               	btfsc	___flmul@bexp,0
 16469  17EE  17BC               	bsf	___flmul@prod+2,7
 16470  17EF  3639               	lsrf	___flmul@bexp,w
 16471  17F0  00AE               	movwf	??___flmul
 16472  17F1  082E               	movf	??___flmul,w
 16473  17F2  00BD               	movwf	___flmul@prod+3
 16474  17F3                     l1283:	
 16475  17F3  0833               	movf	___flmul@sign,w
 16476  17F4  00AE               	movwf	??___flmul
 16477  17F5  082E               	movf	??___flmul,w
 16478  17F6  04BD               	iorwf	___flmul@prod+3,f
 16479  17F7  083D               	movf	___flmul@prod+3,w
 16480  17F8  00A9               	movwf	?___flmul+3
 16481  17F9  083C               	movf	___flmul@prod+2,w
 16482  17FA  00A8               	movwf	?___flmul+2
 16483  17FB  083B               	movf	___flmul@prod+1,w
 16484  17FC  00A7               	movwf	?___flmul+1
 16485  17FD  083A               	movf	___flmul@prod,w
 16486  17FE  00A6               	movwf	?___flmul
 16487  17FF  0008               	return
 16488  1800                     __end_of___flmul:	
 16489                           
 16490                           	psect	text51
 16491  347B                     __ptext51:	
 16492 ;; *************** function __Umul8_16 *****************
 16493 ;; Defined at:
 16494 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
 16495 ;; Parameters:    Size  Location     Type
 16496 ;;  multiplier      1    wreg     unsigned char 
 16497 ;;  multiplicand    1    1[COMMON] unsigned char 
 16498 ;; Auto vars:     Size  Location     Type
 16499 ;;  multiplier      1    9[COMMON] unsigned char 
 16500 ;;  word_mpld       2    7[COMMON] unsigned int 
 16501 ;;  product         2    5[COMMON] unsigned int 
 16502 ;; Return value:  Size  Location     Type
 16503 ;;                  2    1[COMMON] unsigned int 
 16504 ;; Registers used:
 16505 ;;		wreg, status,2, status,0
 16506 ;; Tracked objects:
 16507 ;;		On entry : 0/0
 16508 ;;		On exit  : 0/0
 16509 ;;		Unchanged: 0/0
 16510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16511 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16512 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16513 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16514 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16515 ;;Total ram usage:        9 bytes
 16516 ;; Hardware stack levels used:    1
 16517 ;; Hardware stack levels required when called:    1
 16518 ;; This function calls:
 16519 ;;		Nothing
 16520 ;; This function is called by:
 16521 ;;		___flmul
 16522 ;; This function uses a non-reentrant model
 16523 ;;
 16524                           
 16525                           
 16526                           ;psect for function __Umul8_16
 16527  347B                     __Umul8_16:	
 16528                           
 16529                           ;incstack = 0
 16530                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 16531                           ;__Umul8_16@multiplier stored from wreg
 16532  347B  00F9               	movwf	__Umul8_16@multiplier
 16533  347C  01F5               	clrf	__Umul8_16@product
 16534  347D  01F6               	clrf	__Umul8_16@product+1
 16535  347E  0871               	movf	__Umul8_16@multiplicand,w
 16536  347F  00F3               	movwf	??__Umul8_16
 16537  3480  01F4               	clrf	??__Umul8_16+1
 16538  3481  0873               	movf	??__Umul8_16,w
 16539  3482  00F7               	movwf	__Umul8_16@word_mpld
 16540  3483  0874               	movf	??__Umul8_16+1,w
 16541  3484  00F8               	movwf	__Umul8_16@word_mpld+1
 16542  3485                     l4504:	
 16543  3485  1C79               	btfss	__Umul8_16@multiplier,0
 16544  3486  2C8B               	goto	l1493
 16545  3487  0877               	movf	__Umul8_16@word_mpld,w
 16546  3488  07F5               	addwf	__Umul8_16@product,f
 16547  3489  0878               	movf	__Umul8_16@word_mpld+1,w
 16548  348A  3DF6               	addwfc	__Umul8_16@product+1,f
 16549  348B                     l1493:	
 16550  348B  3001               	movlw	1
 16551  348C                     u5285:	
 16552  348C  35F7               	lslf	__Umul8_16@word_mpld,f
 16553  348D  0DF8               	rlf	__Umul8_16@word_mpld+1,f
 16554  348E  0B89               	decfsz	9,f
 16555  348F  2C8C               	goto	u5285
 16556  3490  1003               	clrc
 16557  3491  0CF9               	rrf	__Umul8_16@multiplier,f
 16558  3492  0879               	movf	__Umul8_16@multiplier,w
 16559  3493  1D03               	btfss	3,2
 16560  3494  2C85               	goto	l4504
 16561  3495  0876               	movf	__Umul8_16@product+1,w
 16562  3496  00F2               	movwf	?__Umul8_16+1
 16563  3497  0875               	movf	__Umul8_16@product,w
 16564  3498  00F1               	movwf	?__Umul8_16
 16565  3499  0008               	return
 16566  349A                     __end_of__Umul8_16:	
 16567                           
 16568                           	psect	text52
 16569  29C7                     __ptext52:	
 16570 ;; *************** function ___flge *****************
 16571 ;; Defined at:
 16572 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
 16573 ;; Parameters:    Size  Location     Type
 16574 ;;  ff1             4   58[BANK0 ] unsigned int 
 16575 ;;  ff2             4   62[BANK0 ] unsigned int 
 16576 ;; Auto vars:     Size  Location     Type
 16577 ;;		None
 16578 ;; Return value:  Size  Location     Type
 16579 ;;		None               void
 16580 ;; Registers used:
 16581 ;;		wreg, status,2, status,0
 16582 ;; Tracked objects:
 16583 ;;		On entry : 0/0
 16584 ;;		On exit  : 0/0
 16585 ;;		Unchanged: 0/0
 16586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16587 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16589 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16590 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16591 ;;Total ram usage:       12 bytes
 16592 ;; Hardware stack levels used:    1
 16593 ;; Hardware stack levels required when called:    1
 16594 ;; This function calls:
 16595 ;;		Nothing
 16596 ;; This function is called by:
 16597 ;;		_setShortCircuitProtection
 16598 ;;		_setOverCurrentDischargeProtection
 16599 ;;		_efgtoa
 16600 ;; This function uses a non-reentrant model
 16601 ;;
 16602                           
 16603                           
 16604                           ;psect for function ___flge
 16605  29C7                     ___flge:	
 16606                           
 16607                           ;incstack = 0
 16608                           ; Regs used in ___flge: [wreg+status,2+status,0]
 16609  29C7  3000               	movlw	0
 16610  29C8  0020               	movlb	0	; select bank0
 16611  29C9  055A               	andwf	___flge@ff1,w
 16612  29CA  00E2               	movwf	??___flge
 16613  29CB  3000               	movlw	0
 16614  29CC  055B               	andwf	___flge@ff1+1,w
 16615  29CD  00E3               	movwf	??___flge+1
 16616  29CE  3080               	movlw	128
 16617  29CF  055C               	andwf	___flge@ff1+2,w
 16618  29D0  00E4               	movwf	??___flge+2
 16619  29D1  307F               	movlw	127
 16620  29D2  055D               	andwf	___flge@ff1+3,w
 16621  29D3  00E5               	movwf	??___flge+3
 16622  29D4  0865               	movf	??___flge+3,w
 16623  29D5  0464               	iorwf	??___flge+2,w
 16624  29D6  0463               	iorwf	??___flge+1,w
 16625  29D7  0462               	iorwf	??___flge,w
 16626  29D8  1D03               	skipz
 16627  29D9  29E2               	goto	l1052
 16628  29DA  3000               	movlw	0
 16629  29DB  00DD               	movwf	___flge@ff1+3
 16630  29DC  3000               	movlw	0
 16631  29DD  00DC               	movwf	___flge@ff1+2
 16632  29DE  3000               	movlw	0
 16633  29DF  00DB               	movwf	___flge@ff1+1
 16634  29E0  3000               	movlw	0
 16635  29E1  00DA               	movwf	___flge@ff1
 16636  29E2                     l1052:	
 16637  29E2  3000               	movlw	0
 16638  29E3  055E               	andwf	___flge@ff2,w
 16639  29E4  00E2               	movwf	??___flge
 16640  29E5  3000               	movlw	0
 16641  29E6  055F               	andwf	___flge@ff2+1,w
 16642  29E7  00E3               	movwf	??___flge+1
 16643  29E8  3080               	movlw	128
 16644  29E9  0560               	andwf	___flge@ff2+2,w
 16645  29EA  00E4               	movwf	??___flge+2
 16646  29EB  307F               	movlw	127
 16647  29EC  0561               	andwf	___flge@ff2+3,w
 16648  29ED  00E5               	movwf	??___flge+3
 16649  29EE  0865               	movf	??___flge+3,w
 16650  29EF  0464               	iorwf	??___flge+2,w
 16651  29F0  0463               	iorwf	??___flge+1,w
 16652  29F1  0462               	iorwf	??___flge,w
 16653  29F2  1D03               	skipz
 16654  29F3  29FC               	goto	l4812
 16655  29F4  3000               	movlw	0
 16656  29F5  00E1               	movwf	___flge@ff2+3
 16657  29F6  3000               	movlw	0
 16658  29F7  00E0               	movwf	___flge@ff2+2
 16659  29F8  3000               	movlw	0
 16660  29F9  00DF               	movwf	___flge@ff2+1
 16661  29FA  3000               	movlw	0
 16662  29FB  00DE               	movwf	___flge@ff2
 16663  29FC                     l4812:	
 16664  29FC  1FDD               	btfss	___flge@ff1+3,7
 16665  29FD  2A16               	goto	l4816
 16666  29FE  3000               	movlw	0
 16667  29FF  00E2               	movwf	??___flge
 16668  2A00  3000               	movlw	0
 16669  2A01  00E3               	movwf	??___flge+1
 16670  2A02  3000               	movlw	0
 16671  2A03  00E4               	movwf	??___flge+2
 16672  2A04  3080               	movlw	128
 16673  2A05  00E5               	movwf	??___flge+3
 16674  2A06  085A               	movf	___flge@ff1,w
 16675  2A07  02E2               	subwf	??___flge,f
 16676  2A08  085B               	movf	___flge@ff1+1,w
 16677  2A09  3BE3               	subwfb	??___flge+1,f
 16678  2A0A  085C               	movf	___flge@ff1+2,w
 16679  2A0B  3BE4               	subwfb	??___flge+2,f
 16680  2A0C  085D               	movf	___flge@ff1+3,w
 16681  2A0D  3BE5               	subwfb	??___flge+3,f
 16682  2A0E  0865               	movf	??___flge+3,w
 16683  2A0F  00DD               	movwf	___flge@ff1+3
 16684  2A10  0864               	movf	??___flge+2,w
 16685  2A11  00DC               	movwf	___flge@ff1+2
 16686  2A12  0863               	movf	??___flge+1,w
 16687  2A13  00DB               	movwf	___flge@ff1+1
 16688  2A14  0862               	movf	??___flge,w
 16689  2A15  00DA               	movwf	___flge@ff1
 16690  2A16                     l4816:	
 16691  2A16  1FE1               	btfss	___flge@ff2+3,7
 16692  2A17  2A30               	goto	l1055
 16693  2A18  3000               	movlw	0
 16694  2A19  00E2               	movwf	??___flge
 16695  2A1A  3000               	movlw	0
 16696  2A1B  00E3               	movwf	??___flge+1
 16697  2A1C  3000               	movlw	0
 16698  2A1D  00E4               	movwf	??___flge+2
 16699  2A1E  3080               	movlw	128
 16700  2A1F  00E5               	movwf	??___flge+3
 16701  2A20  085E               	movf	___flge@ff2,w
 16702  2A21  02E2               	subwf	??___flge,f
 16703  2A22  085F               	movf	___flge@ff2+1,w
 16704  2A23  3BE3               	subwfb	??___flge+1,f
 16705  2A24  0860               	movf	___flge@ff2+2,w
 16706  2A25  3BE4               	subwfb	??___flge+2,f
 16707  2A26  0861               	movf	___flge@ff2+3,w
 16708  2A27  3BE5               	subwfb	??___flge+3,f
 16709  2A28  0865               	movf	??___flge+3,w
 16710  2A29  00E1               	movwf	___flge@ff2+3
 16711  2A2A  0864               	movf	??___flge+2,w
 16712  2A2B  00E0               	movwf	___flge@ff2+2
 16713  2A2C  0863               	movf	??___flge+1,w
 16714  2A2D  00DF               	movwf	___flge@ff2+1
 16715  2A2E  0862               	movf	??___flge,w
 16716  2A2F  00DE               	movwf	___flge@ff2
 16717  2A30                     l1055:	
 16718  2A30  3080               	movlw	128
 16719  2A31  06DD               	xorwf	___flge@ff1+3,f
 16720  2A32  3080               	movlw	128
 16721  2A33  06E1               	xorwf	___flge@ff2+3,f
 16722  2A34  0861               	movf	___flge@ff2+3,w
 16723  2A35  025D               	subwf	___flge@ff1+3,w
 16724  2A36  1D03               	skipz
 16725  2A37  0008               	return
 16726  2A38  0860               	movf	___flge@ff2+2,w
 16727  2A39  025C               	subwf	___flge@ff1+2,w
 16728  2A3A  1D03               	skipz
 16729  2A3B  0008               	return
 16730  2A3C  085F               	movf	___flge@ff2+1,w
 16731  2A3D  025B               	subwf	___flge@ff1+1,w
 16732  2A3E  1D03               	skipz
 16733  2A3F  0008               	return
 16734  2A40  085E               	movf	___flge@ff2,w
 16735  2A41  025A               	subwf	___flge@ff1,w
 16736  2A42  0008               	return
 16737  2A43                     __end_of___flge:	
 16738                           
 16739                           	psect	text53
 16740  2F4C                     __ptext53:	
 16741 ;; *************** function _beginAFEcommunication *****************
 16742 ;; Defined at:
 16743 ;;		line 22 in file "BQ76920.c"
 16744 ;; Parameters:    Size  Location     Type
 16745 ;;		None
 16746 ;; Auto vars:     Size  Location     Type
 16747 ;;  i               2   13[BANK0 ] int 
 16748 ;;  commSuccess     2   11[BANK0 ] int 
 16749 ;; Return value:  Size  Location     Type
 16750 ;;                  2    0[BANK0 ] int 
 16751 ;; Registers used:
 16752 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16753 ;; Tracked objects:
 16754 ;;		On entry : 0/0
 16755 ;;		On exit  : 0/0
 16756 ;;		Unchanged: 0/0
 16757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16758 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16759 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16760 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16761 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16762 ;;Total ram usage:       15 bytes
 16763 ;; Hardware stack levels used:    1
 16764 ;; Hardware stack levels required when called:    3
 16765 ;; This function calls:
 16766 ;;		_I2C_writeRegister
 16767 ;;		_readRegister
 16768 ;; This function is called by:
 16769 ;;		_statemachine
 16770 ;; This function uses a non-reentrant model
 16771 ;;
 16772                           
 16773                           
 16774                           ;psect for function _beginAFEcommunication
 16775  2F4C                     _beginAFEcommunication:	
 16776                           
 16777                           ;BQ76920.c: 24:     int commSuccess = 0;
 16778                           
 16779                           ;incstack = 0
 16780                           ; Regs used in _beginAFEcommunication: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 16781  2F4C  0020               	movlb	0	; select bank0
 16782  2F4D  01AB               	clrf	beginAFEcommunication@commSuccess
 16783  2F4E  01AC               	clrf	beginAFEcommunication@commSuccess+1
 16784                           
 16785                           ;BQ76920.c: 27:     for (int i = 0; i < 4; i++) {
 16786  2F4F  01AD               	clrf	beginAFEcommunication@i
 16787  2F50  01AE               	clrf	beginAFEcommunication@i+1
 16788  2F51                     l8342:	
 16789                           
 16790                           ;BQ76920.c: 28:         cellVoltages[i] = 0;
 16791  2F51  0020               	movlb	0	; select bank0
 16792  2F52  352D               	lslf	beginAFEcommunication@i,w
 16793  2F53  3EA0               	addlw	(low (_cellVoltages| (0+256)))& (0+255)
 16794  2F54  0086               	movwf	6
 16795  2F55  3001               	movlw	1	; select bank3/4
 16796  2F56  0087               	movwf	7
 16797  2F57  3000               	movlw	0
 16798  2F58  3FC0               	movwi [0]fsr1
 16799  2F59  3FC1               	movwi [1]fsr1
 16800                           
 16801                           ;BQ76920.c: 29:     }
 16802  2F5A  3001               	movlw	1
 16803  2F5B  07AD               	addwf	beginAFEcommunication@i,f
 16804  2F5C  3000               	movlw	0
 16805  2F5D  3DAE               	addwfc	beginAFEcommunication@i+1,f
 16806  2F5E  082E               	movf	beginAFEcommunication@i+1,w
 16807  2F5F  3A80               	xorlw	128
 16808  2F60  00A2               	movwf	??_beginAFEcommunication
 16809  2F61  3080               	movlw	128
 16810  2F62  0222               	subwf	??_beginAFEcommunication,w
 16811  2F63  1D03               	skipz
 16812  2F64  2F67               	goto	u11955
 16813  2F65  3004               	movlw	4
 16814  2F66  022D               	subwf	beginAFEcommunication@i,w
 16815  2F67                     u11955:	
 16816  2F67  1C03               	skipc
 16817  2F68  2F51               	goto	l8342
 16818                           
 16819                           ;BQ76920.c: 32:     I2C_writeRegister(0x18, 0x0B, 0x19);
 16820  2F69  3018               	movlw	24
 16821  2F6A  00F5               	movwf	I2C_writeRegister@slaveAddress
 16822  2F6B  3000               	movlw	0
 16823  2F6C  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16824  2F6D  300B               	movlw	11
 16825  2F6E  00F7               	movwf	I2C_writeRegister@regAddress
 16826  2F6F  3000               	movlw	0
 16827  2F70  00F8               	movwf	I2C_writeRegister@regAddress+1
 16828  2F71  3019               	movlw	25
 16829  2F72  00F9               	movwf	I2C_writeRegister@data
 16830  2F73  3000               	movlw	0
 16831  2F74  00FA               	movwf	I2C_writeRegister@data+1
 16832  2F75  31B4  245D  31AF   	fcall	_I2C_writeRegister
 16833                           
 16834                           ;BQ76920.c: 34:     if (readRegister(0x18, 0x0B) == 0x19) {
 16835  2F78  3018               	movlw	24
 16836  2F79  00F5               	movwf	readRegister@slaveAddress
 16837  2F7A  3000               	movlw	0
 16838  2F7B  00F6               	movwf	readRegister@slaveAddress+1
 16839  2F7C  300B               	movlw	11
 16840  2F7D  00F7               	movwf	readRegister@regAddress
 16841  2F7E  3000               	movlw	0
 16842  2F7F  00F8               	movwf	readRegister@regAddress+1
 16843  2F80  31B5  25B6  31AF   	fcall	_readRegister
 16844  2F83  3019               	movlw	25
 16845  2F84  0675               	xorwf	?_readRegister,w
 16846  2F85  0476               	iorwf	?_readRegister+1,w
 16847  2F86  1D03               	btfss	3,2
 16848  2F87  2FFA               	goto	l402
 16849                           
 16850                           ;BQ76920.c: 35:         commSuccess = 1;
 16851  2F88  3001               	movlw	1
 16852  2F89  0020               	movlb	0	; select bank0
 16853  2F8A  00AB               	movwf	beginAFEcommunication@commSuccess
 16854  2F8B  3000               	movlw	0
 16855  2F8C  00AC               	movwf	beginAFEcommunication@commSuccess+1
 16856                           
 16857                           ;BQ76920.c: 39:         I2C_writeRegister(0x18, 0x04, 0x18);
 16858  2F8D  3018               	movlw	24
 16859  2F8E  00F5               	movwf	I2C_writeRegister@slaveAddress
 16860  2F8F  3000               	movlw	0
 16861  2F90  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16862  2F91  3004               	movlw	4
 16863  2F92  00F7               	movwf	I2C_writeRegister@regAddress
 16864  2F93  3000               	movlw	0
 16865  2F94  00F8               	movwf	I2C_writeRegister@regAddress+1
 16866  2F95  3018               	movlw	24
 16867  2F96  00F9               	movwf	I2C_writeRegister@data
 16868  2F97  3000               	movlw	0
 16869  2F98  00FA               	movwf	I2C_writeRegister@data+1
 16870  2F99  31B4  245D  31AF   	fcall	_I2C_writeRegister
 16871                           
 16872                           ;BQ76920.c: 40:         I2C_writeRegister(0x18, 0x05, 0x40);
 16873  2F9C  3018               	movlw	24
 16874  2F9D  00F5               	movwf	I2C_writeRegister@slaveAddress
 16875  2F9E  3000               	movlw	0
 16876  2F9F  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16877  2FA0  3005               	movlw	5
 16878  2FA1  00F7               	movwf	I2C_writeRegister@regAddress
 16879  2FA2  3000               	movlw	0
 16880  2FA3  00F8               	movwf	I2C_writeRegister@regAddress+1
 16881  2FA4  3040               	movlw	64
 16882  2FA5  00F9               	movwf	I2C_writeRegister@data
 16883  2FA6  3000               	movlw	0
 16884  2FA7  00FA               	movwf	I2C_writeRegister@data+1
 16885  2FA8  31B4  245D  31AF   	fcall	_I2C_writeRegister
 16886                           
 16887                           ;BQ76920.c: 43:         adcOffset = (signed int) readRegister(0x18, 0x51);
 16888  2FAB  3018               	movlw	24
 16889  2FAC  00F5               	movwf	readRegister@slaveAddress
 16890  2FAD  3000               	movlw	0
 16891  2FAE  00F6               	movwf	readRegister@slaveAddress+1
 16892  2FAF  3051               	movlw	81
 16893  2FB0  00F7               	movwf	readRegister@regAddress
 16894  2FB1  3000               	movlw	0
 16895  2FB2  00F8               	movwf	readRegister@regAddress+1
 16896  2FB3  31B5  25B6  31AF   	fcall	_readRegister
 16897  2FB6  0876               	movf	?_readRegister+1,w
 16898  2FB7  0023               	movlb	3	; select bank3
 16899  2FB8  00D1               	movwf	(_adcOffset+1)^(0+384)
 16900  2FB9  0875               	movf	?_readRegister,w
 16901  2FBA  00D0               	movwf	_adcOffset^(0+384)
 16902                           
 16903                           ;BQ76920.c: 44:         adcGain = 365 + (((readRegister(0x18, 0x50) & 0x0C) << 1) |
 16904  2FBB  3018               	movlw	24
 16905  2FBC  00F5               	movwf	readRegister@slaveAddress
 16906  2FBD  3000               	movlw	0
 16907  2FBE  00F6               	movwf	readRegister@slaveAddress+1
 16908  2FBF  3059               	movlw	89
 16909  2FC0  00F7               	movwf	readRegister@regAddress
 16910  2FC1  3000               	movlw	0
 16911  2FC2  00F8               	movwf	readRegister@regAddress+1
 16912  2FC3  31B5  25B6  31AF   	fcall	_readRegister
 16913  2FC6  0875               	movf	?_readRegister,w
 16914  2FC7  0020               	movlb	0	; select bank0
 16915  2FC8  00A2               	movwf	??_beginAFEcommunication
 16916  2FC9  0876               	movf	?_readRegister+1,w
 16917  2FCA  00A3               	movwf	??_beginAFEcommunication+1
 16918  2FCB  3005               	movlw	5
 16919  2FCC  00A4               	movwf	??_beginAFEcommunication+2
 16920  2FCD                     u11975:	
 16921  2FCD  0D23               	rlf	??_beginAFEcommunication+1,w
 16922  2FCE  0CA3               	rrf	??_beginAFEcommunication+1,f
 16923  2FCF  0CA2               	rrf	??_beginAFEcommunication,f
 16924  2FD0  0BA4               	decfsz	??_beginAFEcommunication+2,f
 16925  2FD1  2FCD               	goto	u11975
 16926  2FD2  3007               	movlw	7
 16927  2FD3  0522               	andwf	??_beginAFEcommunication,w
 16928  2FD4  00A5               	movwf	??_beginAFEcommunication+3
 16929  2FD5  3000               	movlw	0
 16930  2FD6  0523               	andwf	??_beginAFEcommunication+1,w
 16931  2FD7  00A6               	movwf	??_beginAFEcommunication+4
 16932  2FD8  3018               	movlw	24
 16933  2FD9  00F5               	movwf	readRegister@slaveAddress
 16934  2FDA  3000               	movlw	0
 16935  2FDB  00F6               	movwf	readRegister@slaveAddress+1
 16936  2FDC  3050               	movlw	80
 16937  2FDD  00F7               	movwf	readRegister@regAddress
 16938  2FDE  3000               	movlw	0
 16939  2FDF  00F8               	movwf	readRegister@regAddress+1
 16940  2FE0  31B5  25B6         	fcall	_readRegister
 16941  2FE2  300C               	movlw	12
 16942  2FE3  0575               	andwf	?_readRegister,w
 16943  2FE4  0020               	movlb	0	; select bank0
 16944  2FE5  00A7               	movwf	??_beginAFEcommunication+5
 16945  2FE6  3000               	movlw	0
 16946  2FE7  0576               	andwf	?_readRegister+1,w
 16947  2FE8  00A8               	movwf	??_beginAFEcommunication+6
 16948  2FE9  35A7               	lslf	??_beginAFEcommunication+5,f
 16949  2FEA  0DA8               	rlf	??_beginAFEcommunication+6,f
 16950  2FEB  0825               	movf	??_beginAFEcommunication+3,w
 16951  2FEC  0427               	iorwf	??_beginAFEcommunication+5,w
 16952  2FED  00A9               	movwf	??_beginAFEcommunication+7
 16953  2FEE  0826               	movf	??_beginAFEcommunication+4,w
 16954  2FEF  0428               	iorwf	??_beginAFEcommunication+6,w
 16955  2FF0  00AA               	movwf	??_beginAFEcommunication+8
 16956  2FF1  0829               	movf	??_beginAFEcommunication+7,w
 16957  2FF2  3E6D               	addlw	109
 16958  2FF3  0023               	movlb	3	; select bank3
 16959  2FF4  00D2               	movwf	_adcGain^(0+384)
 16960  2FF5  3001               	movlw	1
 16961  2FF6  0020               	movlb	0	; select bank0
 16962  2FF7  3D2A               	addwfc	??_beginAFEcommunication+8,w
 16963  2FF8  0023               	movlb	3	; select bank3
 16964  2FF9  00D3               	movwf	(_adcGain+1)^(0+384)
 16965  2FFA                     l402:	
 16966                           ;BQ76920.c: 47:     }
 16967                           
 16968                           
 16969                           ;BQ76920.c: 51:     return commSuccess;
 16970  2FFA  0020               	movlb	0	; select bank0
 16971  2FFB  082C               	movf	beginAFEcommunication@commSuccess+1,w
 16972  2FFC  00A1               	movwf	?_beginAFEcommunication+1
 16973  2FFD  082B               	movf	beginAFEcommunication@commSuccess,w
 16974  2FFE  00A0               	movwf	?_beginAFEcommunication
 16975  2FFF  0008               	return
 16976  3000                     __end_of_beginAFEcommunication:	
 16977                           
 16978                           	psect	text54
 16979  35B6                     __ptext54:	
 16980 ;; *************** function _readRegister *****************
 16981 ;; Defined at:
 16982 ;;		line 129 in file "I2C.c"
 16983 ;; Parameters:    Size  Location     Type
 16984 ;;  slaveAddress    2    5[COMMON] int 
 16985 ;;  regAddress      2    7[COMMON] int 
 16986 ;; Auto vars:     Size  Location     Type
 16987 ;;  recievedData    2    9[COMMON] int 
 16988 ;; Return value:  Size  Location     Type
 16989 ;;                  2    5[COMMON] int 
 16990 ;; Registers used:
 16991 ;;		wreg, status,2, status,0, pclath, cstack
 16992 ;; Tracked objects:
 16993 ;;		On entry : 0/0
 16994 ;;		On exit  : 0/0
 16995 ;;		Unchanged: 0/0
 16996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16997 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16998 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17000 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17001 ;;Total ram usage:        6 bytes
 17002 ;; Hardware stack levels used:    1
 17003 ;; Hardware stack levels required when called:    2
 17004 ;; This function calls:
 17005 ;;		_read_I2C_data
 17006 ;;		_send_I2C_NACK
 17007 ;;		_send_I2C_controlByte
 17008 ;;		_send_I2C_data
 17009 ;;		_send_I2C_startBit
 17010 ;;		_send_I2C_stopBit
 17011 ;; This function is called by:
 17012 ;;		_beginAFEcommunication
 17013 ;;		_printotAFERegisters
 17014 ;;		_setCellUndervoltageProtection
 17015 ;; This function uses a non-reentrant model
 17016 ;;
 17017                           
 17018                           
 17019                           ;psect for function _readRegister
 17020  35B6                     _readRegister:	
 17021                           
 17022                           ;I2C.c: 130:     int recievedData;;I2C.c: 131:     send_I2C_startBit();
 17023                           
 17024                           ;incstack = 0
 17025                           ; Regs used in _readRegister: [wreg+status,2+status,0+pclath+cstack]
 17026  35B6  31B2  22D3  31B5   	fcall	_send_I2C_startBit
 17027                           
 17028                           ;I2C.c: 132:     send_I2C_controlByte(slaveAddress, 0);
 17029  35B9  0876               	movf	readRegister@slaveAddress+1,w
 17030  35BA  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 17031  35BB  0875               	movf	readRegister@slaveAddress,w
 17032  35BC  00F1               	movwf	send_I2C_controlByte@BlockAddress
 17033  35BD  3000               	movlw	0
 17034  35BE  00F3               	movwf	send_I2C_controlByte@RW_bit
 17035  35BF  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 17036  35C0  31B3  2319  31B5   	fcall	_send_I2C_controlByte
 17037                           
 17038                           ;I2C.c: 133:     send_I2C_data(regAddress);
 17039  35C3  0878               	movf	readRegister@regAddress+1,w
 17040  35C4  00F2               	movwf	send_I2C_data@databyte+1
 17041  35C5  0877               	movf	readRegister@regAddress,w
 17042  35C6  00F1               	movwf	send_I2C_data@databyte
 17043  35C7  31B2  22F4  31B5   	fcall	_send_I2C_data
 17044                           
 17045                           ;I2C.c: 134:     send_I2C_stopBit();
 17046  35CA  31B2  22DB  31B5   	fcall	_send_I2C_stopBit
 17047                           
 17048                           ;I2C.c: 135:     send_I2C_startBit();
 17049  35CD  31B2  22D3  31B5   	fcall	_send_I2C_startBit
 17050                           
 17051                           ;I2C.c: 136:     send_I2C_controlByte(slaveAddress, 1);
 17052  35D0  0876               	movf	readRegister@slaveAddress+1,w
 17053  35D1  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 17054  35D2  0875               	movf	readRegister@slaveAddress,w
 17055  35D3  00F1               	movwf	send_I2C_controlByte@BlockAddress
 17056  35D4  3001               	movlw	1
 17057  35D5  00F3               	movwf	send_I2C_controlByte@RW_bit
 17058  35D6  3000               	movlw	0
 17059  35D7  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 17060  35D8  31B3  2319  31B5   	fcall	_send_I2C_controlByte
 17061                           
 17062                           ;I2C.c: 137:     recievedData = read_I2C_data();
 17063  35DB  31B3  2354  31B5   	fcall	_read_I2C_data
 17064  35DE  0872               	movf	?_read_I2C_data+1,w
 17065  35DF  00FA               	movwf	readRegister@recievedData+1
 17066  35E0  0871               	movf	?_read_I2C_data,w
 17067  35E1  00F9               	movwf	readRegister@recievedData
 17068                           
 17069                           ;I2C.c: 138:     send_I2C_NACK();
 17070  35E2  31B2  22FD  31B5   	fcall	_send_I2C_NACK
 17071                           
 17072                           ;I2C.c: 139:     send_I2C_stopBit();
 17073  35E5  31B2  22DB         	fcall	_send_I2C_stopBit
 17074                           
 17075                           ;I2C.c: 140:     return recievedData;
 17076  35E7  087A               	movf	readRegister@recievedData+1,w
 17077  35E8  00F6               	movwf	?_readRegister+1
 17078  35E9  0879               	movf	readRegister@recievedData,w
 17079  35EA  00F5               	movwf	?_readRegister
 17080  35EB  0008               	return
 17081  35EC                     __end_of_readRegister:	
 17082                           
 17083                           	psect	text55
 17084  32FD                     __ptext55:	
 17085 ;; *************** function _send_I2C_NACK *****************
 17086 ;; Defined at:
 17087 ;;		line 83 in file "I2C.c"
 17088 ;; Parameters:    Size  Location     Type
 17089 ;;		None
 17090 ;; Auto vars:     Size  Location     Type
 17091 ;;		None
 17092 ;; Return value:  Size  Location     Type
 17093 ;;                  1    wreg      void 
 17094 ;; Registers used:
 17095 ;;		None
 17096 ;; Tracked objects:
 17097 ;;		On entry : 0/0
 17098 ;;		On exit  : 0/0
 17099 ;;		Unchanged: 0/0
 17100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17105 ;;Total ram usage:        0 bytes
 17106 ;; Hardware stack levels used:    1
 17107 ;; Hardware stack levels required when called:    1
 17108 ;; This function calls:
 17109 ;;		Nothing
 17110 ;; This function is called by:
 17111 ;;		_readRegister
 17112 ;; This function uses a non-reentrant model
 17113 ;;
 17114                           
 17115                           
 17116                           ;psect for function _send_I2C_NACK
 17117  32FD                     _send_I2C_NACK:	
 17118                           
 17119                           ;I2C.c: 84:     PIR1bits.SSP1IF = 0;
 17120                           
 17121                           ;incstack = 0
 17122                           ; Regs used in _send_I2C_NACK: []
 17123  32FD  0020               	movlb	0	; select bank0
 17124  32FE  1191               	bcf	17,3	;volatile
 17125                           
 17126                           ;I2C.c: 85:     SSPCON2bits.ACKDT = 1;
 17127  32FF  0024               	movlb	4	; select bank4
 17128  3300  1696               	bsf	22,5	;volatile
 17129                           
 17130                           ;I2C.c: 86:     SSPCON2bits.ACKEN = 1;
 17131  3301  1616               	bsf	22,4	;volatile
 17132  3302                     l298:	
 17133                           ;I2C.c: 87:     while (!PIR1bits.SSP1IF);
 17134                           
 17135  3302  0020               	movlb	0	; select bank0
 17136  3303  1991               	btfsc	17,3	;volatile
 17137  3304  0008               	return
 17138  3305  2B02               	goto	l298
 17139  3306                     __end_of_send_I2C_NACK:	
 17140                           
 17141                           	psect	text56
 17142  3354                     __ptext56:	
 17143 ;; *************** function _read_I2C_data *****************
 17144 ;; Defined at:
 17145 ;;		line 42 in file "I2C.c"
 17146 ;; Parameters:    Size  Location     Type
 17147 ;;		None
 17148 ;; Auto vars:     Size  Location     Type
 17149 ;;		None
 17150 ;; Return value:  Size  Location     Type
 17151 ;;                  2    1[COMMON] unsigned int 
 17152 ;; Registers used:
 17153 ;;		wreg
 17154 ;; Tracked objects:
 17155 ;;		On entry : 0/0
 17156 ;;		On exit  : 0/0
 17157 ;;		Unchanged: 0/0
 17158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17159 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17161 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17162 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17163 ;;Total ram usage:        4 bytes
 17164 ;; Hardware stack levels used:    1
 17165 ;; Hardware stack levels required when called:    1
 17166 ;; This function calls:
 17167 ;;		Nothing
 17168 ;; This function is called by:
 17169 ;;		_readRegister
 17170 ;; This function uses a non-reentrant model
 17171 ;;
 17172                           
 17173                           
 17174                           ;psect for function _read_I2C_data
 17175  3354                     _read_I2C_data:	
 17176                           
 17177                           ;I2C.c: 43:     PIR1bits.SSP1IF = 0;
 17178                           
 17179                           ;incstack = 0
 17180                           ; Regs used in _read_I2C_data: [wreg]
 17181  3354  0020               	movlb	0	; select bank0
 17182  3355  1191               	bcf	17,3	;volatile
 17183                           
 17184                           ;I2C.c: 44:     SSPCON2bits.RCEN = 1;
 17185  3356  0024               	movlb	4	; select bank4
 17186  3357  1596               	bsf	22,3	;volatile
 17187  3358                     l268:	
 17188                           ;I2C.c: 45:     while (!PIR1bits.SSP1IF);
 17189                           
 17190  3358  0020               	movlb	0	; select bank0
 17191  3359  1D91               	btfss	17,3	;volatile
 17192  335A  2B58               	goto	l268
 17193                           
 17194                           ;I2C.c: 46:     return (SSPBUF);
 17195  335B  0024               	movlb	4	; select bank4
 17196  335C  0811               	movf	17,w	;volatile
 17197  335D  00F3               	movwf	??_read_I2C_data
 17198  335E  01F4               	clrf	??_read_I2C_data+1
 17199  335F  0873               	movf	??_read_I2C_data,w
 17200  3360  00F1               	movwf	?_read_I2C_data
 17201  3361  0874               	movf	??_read_I2C_data+1,w
 17202  3362  00F2               	movwf	?_read_I2C_data+1
 17203  3363  0008               	return
 17204  3364                     __end_of_read_I2C_data:	
 17205                           
 17206                           	psect	text57
 17207  345D                     __ptext57:	
 17208 ;; *************** function _I2C_writeRegister *****************
 17209 ;; Defined at:
 17210 ;;		line 118 in file "I2C.c"
 17211 ;; Parameters:    Size  Location     Type
 17212 ;;  slaveAddress    2    5[COMMON] int 
 17213 ;;  regAddress      2    7[COMMON] int 
 17214 ;;  data            2    9[COMMON] int 
 17215 ;; Auto vars:     Size  Location     Type
 17216 ;;		None
 17217 ;; Return value:  Size  Location     Type
 17218 ;;                  1    wreg      void 
 17219 ;; Registers used:
 17220 ;;		wreg, status,2, status,0, pclath, cstack
 17221 ;; Tracked objects:
 17222 ;;		On entry : 0/0
 17223 ;;		On exit  : 0/0
 17224 ;;		Unchanged: 0/0
 17225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17226 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17229 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17230 ;;Total ram usage:        6 bytes
 17231 ;; Hardware stack levels used:    1
 17232 ;; Hardware stack levels required when called:    2
 17233 ;; This function calls:
 17234 ;;		_send_I2C_controlByte
 17235 ;;		_send_I2C_data
 17236 ;;		_send_I2C_startBit
 17237 ;;		_send_I2C_stopBit
 17238 ;; This function is called by:
 17239 ;;		_beginAFEcommunication
 17240 ;;		_setShortCircuitProtection
 17241 ;;		_setOverCurrentDischargeProtection
 17242 ;;		_setCellUndervoltageProtection
 17243 ;; This function uses a non-reentrant model
 17244 ;;
 17245                           
 17246                           
 17247                           ;psect for function _I2C_writeRegister
 17248  345D                     _I2C_writeRegister:	
 17249                           
 17250                           ;I2C.c: 119:     send_I2C_startBit();
 17251                           
 17252                           ;incstack = 0
 17253                           ; Regs used in _I2C_writeRegister: [wreg+status,2+status,0+pclath+cstack]
 17254  345D  31B2  22D3  31B4   	fcall	_send_I2C_startBit
 17255                           
 17256                           ;I2C.c: 120:     send_I2C_controlByte(slaveAddress, 0);
 17257  3460  0876               	movf	I2C_writeRegister@slaveAddress+1,w
 17258  3461  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 17259  3462  0875               	movf	I2C_writeRegister@slaveAddress,w
 17260  3463  00F1               	movwf	send_I2C_controlByte@BlockAddress
 17261  3464  3000               	movlw	0
 17262  3465  00F3               	movwf	send_I2C_controlByte@RW_bit
 17263  3466  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 17264  3467  31B3  2319  31B4   	fcall	_send_I2C_controlByte
 17265                           
 17266                           ;I2C.c: 121:     send_I2C_data(regAddress);
 17267  346A  0878               	movf	I2C_writeRegister@regAddress+1,w
 17268  346B  00F2               	movwf	send_I2C_data@databyte+1
 17269  346C  0877               	movf	I2C_writeRegister@regAddress,w
 17270  346D  00F1               	movwf	send_I2C_data@databyte
 17271  346E  31B2  22F4  31B4   	fcall	_send_I2C_data
 17272                           
 17273                           ;I2C.c: 122:     send_I2C_data(data);
 17274  3471  087A               	movf	I2C_writeRegister@data+1,w
 17275  3472  00F2               	movwf	send_I2C_data@databyte+1
 17276  3473  0879               	movf	I2C_writeRegister@data,w
 17277  3474  00F1               	movwf	send_I2C_data@databyte
 17278  3475  31B2  22F4  31B4   	fcall	_send_I2C_data
 17279                           
 17280                           ;I2C.c: 123:     send_I2C_stopBit();
 17281  3478  31B2  22DB         	fcall	_send_I2C_stopBit
 17282  347A  0008               	return
 17283  347B                     __end_of_I2C_writeRegister:	
 17284                           
 17285                           	psect	text58
 17286  32DB                     __ptext58:	
 17287 ;; *************** function _send_I2C_stopBit *****************
 17288 ;; Defined at:
 17289 ;;		line 70 in file "I2C.c"
 17290 ;; Parameters:    Size  Location     Type
 17291 ;;		None
 17292 ;; Auto vars:     Size  Location     Type
 17293 ;;		None
 17294 ;; Return value:  Size  Location     Type
 17295 ;;                  1    wreg      void 
 17296 ;; Registers used:
 17297 ;;		None
 17298 ;; Tracked objects:
 17299 ;;		On entry : 0/0
 17300 ;;		On exit  : 0/0
 17301 ;;		Unchanged: 0/0
 17302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17307 ;;Total ram usage:        0 bytes
 17308 ;; Hardware stack levels used:    1
 17309 ;; Hardware stack levels required when called:    1
 17310 ;; This function calls:
 17311 ;;		Nothing
 17312 ;; This function is called by:
 17313 ;;		_I2C_writeRegister
 17314 ;;		_readRegister
 17315 ;;		_retrieve_data_ATmega328
 17316 ;; This function uses a non-reentrant model
 17317 ;;
 17318                           
 17319                           
 17320                           ;psect for function _send_I2C_stopBit
 17321  32DB                     _send_I2C_stopBit:	
 17322                           
 17323                           ;I2C.c: 71:     PIR1bits.SSP1IF = 0;
 17324                           
 17325                           ;incstack = 0
 17326                           ; Regs used in _send_I2C_stopBit: []
 17327  32DB  0020               	movlb	0	; select bank0
 17328  32DC  1191               	bcf	17,3	;volatile
 17329                           
 17330                           ;I2C.c: 72:     SSPCON2bits.PEN = 1;
 17331  32DD  0024               	movlb	4	; select bank4
 17332  32DE  1516               	bsf	22,2	;volatile
 17333  32DF                     l286:	
 17334                           ;I2C.c: 73:     while (!PIR1bits.SSP1IF);
 17335                           
 17336  32DF  0020               	movlb	0	; select bank0
 17337  32E0  1991               	btfsc	17,3	;volatile
 17338  32E1  0008               	return
 17339  32E2  2ADF               	goto	l286
 17340  32E3                     __end_of_send_I2C_stopBit:	
 17341                           
 17342                           	psect	text59
 17343  32D3                     __ptext59:	
 17344 ;; *************** function _send_I2C_startBit *****************
 17345 ;; Defined at:
 17346 ;;		line 64 in file "I2C.c"
 17347 ;; Parameters:    Size  Location     Type
 17348 ;;		None
 17349 ;; Auto vars:     Size  Location     Type
 17350 ;;		None
 17351 ;; Return value:  Size  Location     Type
 17352 ;;                  1    wreg      void 
 17353 ;; Registers used:
 17354 ;;		None
 17355 ;; Tracked objects:
 17356 ;;		On entry : 0/0
 17357 ;;		On exit  : 0/0
 17358 ;;		Unchanged: 0/0
 17359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17364 ;;Total ram usage:        0 bytes
 17365 ;; Hardware stack levels used:    1
 17366 ;; Hardware stack levels required when called:    1
 17367 ;; This function calls:
 17368 ;;		Nothing
 17369 ;; This function is called by:
 17370 ;;		_I2C_writeRegister
 17371 ;;		_readRegister
 17372 ;;		_retrieve_data_ATmega328
 17373 ;; This function uses a non-reentrant model
 17374 ;;
 17375                           
 17376                           
 17377                           ;psect for function _send_I2C_startBit
 17378  32D3                     _send_I2C_startBit:	
 17379                           
 17380                           ;I2C.c: 65:     PIR1bits.SSP1IF = 0;
 17381                           
 17382                           ;incstack = 0
 17383                           ; Regs used in _send_I2C_startBit: []
 17384  32D3  0020               	movlb	0	; select bank0
 17385  32D4  1191               	bcf	17,3	;volatile
 17386                           
 17387                           ;I2C.c: 66:     SSPCON2bits.SEN = 1;
 17388  32D5  0024               	movlb	4	; select bank4
 17389  32D6  1416               	bsf	22,0	;volatile
 17390  32D7                     l280:	
 17391                           ;I2C.c: 67:     while (!PIR1bits.SSP1IF);
 17392                           
 17393  32D7  0020               	movlb	0	; select bank0
 17394  32D8  1991               	btfsc	17,3	;volatile
 17395  32D9  0008               	return
 17396  32DA  2AD7               	goto	l280
 17397  32DB                     __end_of_send_I2C_startBit:	
 17398                           
 17399                           	psect	text60
 17400  32F4                     __ptext60:	
 17401 ;; *************** function _send_I2C_data *****************
 17402 ;; Defined at:
 17403 ;;		line 33 in file "I2C.c"
 17404 ;; Parameters:    Size  Location     Type
 17405 ;;  databyte        2    1[COMMON] unsigned int 
 17406 ;; Auto vars:     Size  Location     Type
 17407 ;;		None
 17408 ;; Return value:  Size  Location     Type
 17409 ;;                  1    wreg      void 
 17410 ;; Registers used:
 17411 ;;		wreg
 17412 ;; Tracked objects:
 17413 ;;		On entry : 0/0
 17414 ;;		On exit  : 0/0
 17415 ;;		Unchanged: 0/0
 17416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17417 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17420 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17421 ;;Total ram usage:        2 bytes
 17422 ;; Hardware stack levels used:    1
 17423 ;; Hardware stack levels required when called:    1
 17424 ;; This function calls:
 17425 ;;		Nothing
 17426 ;; This function is called by:
 17427 ;;		_I2C_writeRegister
 17428 ;;		_readRegister
 17429 ;; This function uses a non-reentrant model
 17430 ;;
 17431                           
 17432                           
 17433                           ;psect for function _send_I2C_data
 17434  32F4                     _send_I2C_data:	
 17435                           
 17436                           ;I2C.c: 34:     PIR1bits.SSP1IF = 0;
 17437                           
 17438                           ;incstack = 0
 17439                           ; Regs used in _send_I2C_data: [wreg]
 17440  32F4  0020               	movlb	0	; select bank0
 17441  32F5  1191               	bcf	17,3	;volatile
 17442                           
 17443                           ;I2C.c: 35:     SSPBUF = databyte;
 17444  32F6  0871               	movf	send_I2C_data@databyte,w
 17445  32F7  0024               	movlb	4	; select bank4
 17446  32F8  0091               	movwf	17	;volatile
 17447  32F9                     l262:	
 17448                           ;I2C.c: 36:     while (!PIR1bits.SSP1IF);
 17449                           
 17450  32F9  0020               	movlb	0	; select bank0
 17451  32FA  1991               	btfsc	17,3	;volatile
 17452  32FB  0008               	return
 17453  32FC  2AF9               	goto	l262
 17454  32FD                     __end_of_send_I2C_data:	
 17455                           
 17456                           	psect	text61
 17457  3319                     __ptext61:	
 17458 ;; *************** function _send_I2C_controlByte *****************
 17459 ;; Defined at:
 17460 ;;		line 52 in file "I2C.c"
 17461 ;; Parameters:    Size  Location     Type
 17462 ;;  BlockAddress    2    1[COMMON] unsigned int 
 17463 ;;  RW_bit          2    3[COMMON] unsigned int 
 17464 ;; Auto vars:     Size  Location     Type
 17465 ;;		None
 17466 ;; Return value:  Size  Location     Type
 17467 ;;                  1    wreg      void 
 17468 ;; Registers used:
 17469 ;;		wreg, status,2, status,0
 17470 ;; Tracked objects:
 17471 ;;		On entry : 0/0
 17472 ;;		On exit  : 0/0
 17473 ;;		Unchanged: 0/0
 17474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17475 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17478 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17479 ;;Total ram usage:        4 bytes
 17480 ;; Hardware stack levels used:    1
 17481 ;; Hardware stack levels required when called:    1
 17482 ;; This function calls:
 17483 ;;		Nothing
 17484 ;; This function is called by:
 17485 ;;		_I2C_writeRegister
 17486 ;;		_readRegister
 17487 ;;		_retrieve_data_ATmega328
 17488 ;; This function uses a non-reentrant model
 17489 ;;
 17490                           
 17491                           
 17492                           ;psect for function _send_I2C_controlByte
 17493  3319                     _send_I2C_controlByte:	
 17494                           
 17495                           ;I2C.c: 53:     PIR1bits.SSP1IF = 0;
 17496                           
 17497                           ;incstack = 0
 17498                           ; Regs used in _send_I2C_controlByte: [wreg+status,2+status,0]
 17499  3319  0020               	movlb	0	; select bank0
 17500  331A  1191               	bcf	17,3	;volatile
 17501                           
 17502                           ;I2C.c: 59:     SSPBUF = (((0b0000 << 4) | (BlockAddress << 1)) + RW_bit);
 17503  331B  3571               	lslf	send_I2C_controlByte@BlockAddress,w
 17504  331C  0773               	addwf	send_I2C_controlByte@RW_bit,w
 17505  331D  0024               	movlb	4	; select bank4
 17506  331E  0091               	movwf	17	;volatile
 17507  331F                     l274:	
 17508                           ;I2C.c: 61:     while (!PIR1bits.SSP1IF);
 17509                           
 17510  331F  0020               	movlb	0	; select bank0
 17511  3320  1991               	btfsc	17,3	;volatile
 17512  3321  0008               	return
 17513  3322  2B1F               	goto	l274
 17514  3323                     __end_of_send_I2C_controlByte:	
 17515                           
 17516                           	psect	text62
 17517  34F9                     __ptext62:	
 17518 ;; *************** function _RGB_AWAIT_AFE_CONN *****************
 17519 ;; Defined at:
 17520 ;;		line 43 in file "RGB.c"
 17521 ;; Parameters:    Size  Location     Type
 17522 ;;		None
 17523 ;; Auto vars:     Size  Location     Type
 17524 ;;		None
 17525 ;; Return value:  Size  Location     Type
 17526 ;;                  1    wreg      void 
 17527 ;; Registers used:
 17528 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17529 ;; Tracked objects:
 17530 ;;		On entry : 0/0
 17531 ;;		On exit  : 0/0
 17532 ;;		Unchanged: 0/0
 17533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17536 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17537 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17538 ;;Total ram usage:        1 bytes
 17539 ;; Hardware stack levels used:    1
 17540 ;; Hardware stack levels required when called:    2
 17541 ;; This function calls:
 17542 ;;		_RGB_color
 17543 ;; This function is called by:
 17544 ;;		_statemachine
 17545 ;; This function uses a non-reentrant model
 17546 ;;
 17547                           
 17548                           
 17549                           ;psect for function _RGB_AWAIT_AFE_CONN
 17550  34F9                     _RGB_AWAIT_AFE_CONN:	
 17551                           
 17552                           ;RGB.c: 45:     if (toggleColor) {
 17553                           
 17554                           ;incstack = 0
 17555                           ; Regs used in _RGB_AWAIT_AFE_CONN: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17556  34F9  087C               	movf	_toggleColor,w
 17557  34FA  1903               	btfsc	3,2
 17558  34FB  2D0B               	goto	l6544
 17559                           
 17560                           ;RGB.c: 46:         toggleColor = !toggleColor;
 17561  34FC  087C               	movf	_toggleColor,w
 17562  34FD  1D03               	btfss	3,2
 17563  34FE  2D01               	goto	u9160
 17564  34FF  3001               	movlw	1
 17565  3500  2D02               	goto	u9170
 17566  3501                     u9160:	
 17567  3501  3000               	movlw	0
 17568  3502                     u9170:	
 17569  3502  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 17570  3503  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 17571  3504  00FC               	movwf	_toggleColor
 17572                           
 17573                           ;RGB.c: 47:         RGB_color(0);
 17574  3505  3000               	movlw	0
 17575  3506  00F1               	movwf	RGB_color@color
 17576  3507  00F2               	movwf	RGB_color@color+1
 17577  3508  31B4  24D8         	fcall	_RGB_color
 17578                           
 17579                           ;RGB.c: 48:     } else {
 17580  350A  0008               	return
 17581  350B                     l6544:	
 17582                           
 17583                           ;RGB.c: 49:         toggleColor = !toggleColor;
 17584  350B  087C               	movf	_toggleColor,w
 17585  350C  1D03               	btfss	3,2
 17586  350D  2D10               	goto	u9180
 17587  350E  3001               	movlw	1
 17588  350F  2D11               	goto	u9190
 17589  3510                     u9180:	
 17590  3510  3000               	movlw	0
 17591  3511                     u9190:	
 17592  3511  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 17593  3512  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 17594  3513  00FC               	movwf	_toggleColor
 17595                           
 17596                           ;RGB.c: 50:         RGB_color(1);
 17597  3514  3001               	movlw	1
 17598  3515  00F1               	movwf	RGB_color@color
 17599  3516  3000               	movlw	0
 17600  3517  00F2               	movwf	RGB_color@color+1
 17601  3518  31B4  24D8         	fcall	_RGB_color
 17602  351A  0008               	return
 17603  351B                     __end_of_RGB_AWAIT_AFE_CONN:	
 17604                           
 17605                           	psect	text63
 17606  34D8                     __ptext63:	
 17607 ;; *************** function _RGB_color *****************
 17608 ;; Defined at:
 17609 ;;		line 17 in file "RGB.c"
 17610 ;; Parameters:    Size  Location     Type
 17611 ;;  color           2    1[COMMON] int 
 17612 ;; Auto vars:     Size  Location     Type
 17613 ;;		None
 17614 ;; Return value:  Size  Location     Type
 17615 ;;                  1    wreg      void 
 17616 ;; Registers used:
 17617 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 17618 ;; Tracked objects:
 17619 ;;		On entry : 0/0
 17620 ;;		On exit  : 0/0
 17621 ;;		Unchanged: 0/0
 17622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17623 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17626 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17627 ;;Total ram usage:        2 bytes
 17628 ;; Hardware stack levels used:    1
 17629 ;; Hardware stack levels required when called:    1
 17630 ;; This function calls:
 17631 ;;		Nothing
 17632 ;; This function is called by:
 17633 ;;		_statemachine
 17634 ;;		_RGB_AWAIT_AFE_CONN
 17635 ;; This function uses a non-reentrant model
 17636 ;;
 17637                           
 17638                           
 17639                           ;psect for function _RGB_color
 17640  34D8                     _RGB_color:	
 17641                           
 17642                           ;RGB.c: 19:     switch (color) {
 17643                           
 17644                           ;incstack = 0
 17645                           ; Regs used in _RGB_color: [wreg-fsr0h+status,2+status,0]
 17646  34D8  2CE8               	goto	l6428
 17647  34D9                     l323:	
 17648                           ;RGB.c: 20:         case 0:
 17649                           
 17650                           
 17651                           ;RGB.c: 21:             LATAbits.LATA4 = 0;
 17652  34D9  0022               	movlb	2	; select bank2
 17653  34DA  120C               	bcf	12,4	;volatile
 17654                           
 17655                           ;RGB.c: 22:             LATAbits.LATA5 = 1;
 17656  34DB  168C               	bsf	12,5	;volatile
 17657                           
 17658                           ;RGB.c: 23:             LATEbits.LATE0 = 1;
 17659  34DC  1410               	bsf	16,0	;volatile
 17660                           
 17661                           ;RGB.c: 24:             break;
 17662  34DD  0008               	return
 17663  34DE                     l325:	
 17664                           ;RGB.c: 25:         case 1:
 17665                           
 17666                           
 17667                           ;RGB.c: 26:             LATAbits.LATA4 = 1;
 17668  34DE  0022               	movlb	2	; select bank2
 17669  34DF  160C               	bsf	12,4	;volatile
 17670                           
 17671                           ;RGB.c: 27:             LATAbits.LATA5 = 0;
 17672  34E0  128C               	bcf	12,5	;volatile
 17673                           
 17674                           ;RGB.c: 28:             LATEbits.LATE0 = 1;
 17675  34E1  1410               	bsf	16,0	;volatile
 17676                           
 17677                           ;RGB.c: 29:             break;
 17678  34E2  0008               	return
 17679  34E3                     l326:	
 17680                           ;RGB.c: 30:         case 2:
 17681                           
 17682                           
 17683                           ;RGB.c: 31:             LATAbits.LATA4 = 1;
 17684  34E3  0022               	movlb	2	; select bank2
 17685  34E4  160C               	bsf	12,4	;volatile
 17686                           
 17687                           ;RGB.c: 32:             LATAbits.LATA5 = 1;
 17688  34E5  168C               	bsf	12,5	;volatile
 17689                           
 17690                           ;RGB.c: 33:             LATEbits.LATE0 = 0;
 17691  34E6  1010               	bcf	16,0	;volatile
 17692                           
 17693                           ;RGB.c: 34:             break;
 17694  34E7  0008               	return
 17695  34E8                     l6428:	
 17696                           
 17697                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17698                           ; Switch size 1, requested type "simple"
 17699                           ; Number of cases is 1, Range of values is 0 to 0
 17700                           ; switch strategies available:
 17701                           ; Name         Instructions Cycles
 17702                           ; simple_byte            4     3 (average)
 17703                           ; direct_byte            8     6 (fixed)
 17704                           ; jumptable            260     6 (fixed)
 17705                           ;	Chosen strategy is simple_byte
 17706  34E8  0872               	movf	RGB_color@color+1,w
 17707  34E9  3A00               	xorlw	0	; case 0
 17708  34EA  1903               	skipnz
 17709  34EB  2CED               	goto	l8606
 17710  34EC  2CF8               	goto	l327
 17711  34ED                     l8606:	
 17712                           
 17713                           ; Switch size 1, requested type "simple"
 17714                           ; Number of cases is 3, Range of values is 0 to 2
 17715                           ; switch strategies available:
 17716                           ; Name         Instructions Cycles
 17717                           ; simple_byte           10     6 (average)
 17718                           ; direct_byte           12     6 (fixed)
 17719                           ; jumptable            260     6 (fixed)
 17720                           ;	Chosen strategy is simple_byte
 17721  34ED  0871               	movf	RGB_color@color,w
 17722  34EE  3A00               	xorlw	0	; case 0
 17723  34EF  1903               	skipnz
 17724  34F0  2CD9               	goto	l323
 17725  34F1  3A01               	xorlw	1	; case 1
 17726  34F2  1903               	skipnz
 17727  34F3  2CDE               	goto	l325
 17728  34F4  3A03               	xorlw	3	; case 2
 17729  34F5  1903               	skipnz
 17730  34F6  2CE3               	goto	l326
 17731  34F7  2CF8               	goto	l327
 17732  34F8                     l327:	
 17733  34F8  0008               	return
 17734  34F9                     __end_of_RGB_color:	
 17735                           
 17736                           	psect	text64
 17737  370E                     __ptext64:	
 17738 ;; *************** function _AFE_getSetShortCircuitCurrent *****************
 17739 ;; Defined at:
 17740 ;;		line 155 in file "BQ76920.c"
 17741 ;; Parameters:    Size  Location     Type
 17742 ;;		None
 17743 ;; Auto vars:     Size  Location     Type
 17744 ;;		None
 17745 ;; Return value:  Size  Location     Type
 17746 ;;                  4   67[BANK0 ] long 
 17747 ;; Registers used:
 17748 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17749 ;; Tracked objects:
 17750 ;;		On entry : 0/0
 17751 ;;		On exit  : 0/0
 17752 ;;		Unchanged: 0/0
 17753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17754 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17756 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17757 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17758 ;;Total ram usage:        8 bytes
 17759 ;; Hardware stack levels used:    1
 17760 ;; Hardware stack levels required when called:    2
 17761 ;; This function calls:
 17762 ;;		___fldiv
 17763 ;;		___fltol
 17764 ;;		___xxtofl
 17765 ;; This function is called by:
 17766 ;;		_statemachine
 17767 ;; This function uses a non-reentrant model
 17768 ;;
 17769                           
 17770                           
 17771                           ;psect for function _AFE_getSetShortCircuitCurrent
 17772  370E                     _AFE_getSetShortCircuitCurrent:	
 17773                           
 17774                           ;BQ76920.c: 156:     return (long) (SCD_threshold_setting[protect1.bits.SCD_THRESH]) / s
      +                          huntResistorValue_mOhm;
 17775                           
 17776                           ;incstack = 0
 17777                           ; Regs used in _AFE_getSetShortCircuitCurrent: [wreg-fsr0h+status,2+status,0+pclath+csta
      +                          ck]
 17778  370E  0023               	movlb	3	; select bank3
 17779  370F  0856               	movf	BQ76920@protect1^(0+384),w
 17780  3710  3907               	andlw	7
 17781  3711  0020               	movlb	0	; select bank0
 17782  3712  00E7               	movwf	??_AFE_getSetShortCircuitCurrent
 17783  3713  01E8               	clrf	??_AFE_getSetShortCircuitCurrent+1
 17784  3714  35E7               	lslf	??_AFE_getSetShortCircuitCurrent,f
 17785  3715  0DE8               	rlf	??_AFE_getSetShortCircuitCurrent+1,f
 17786  3716  30E8               	movlw	low (_SCD_threshold_setting| (0+32768))
 17787  3717  0767               	addwf	??_AFE_getSetShortCircuitCurrent,w
 17788  3718  0084               	movwf	4
 17789  3719  30BA               	movlw	high (_SCD_threshold_setting| (0+32768))
 17790  371A  3D68               	addwfc	??_AFE_getSetShortCircuitCurrent+1,w
 17791  371B  0085               	movwf	5
 17792  371C  3F00               	moviw [0]fsr0
 17793  371D  00E9               	movwf	??_AFE_getSetShortCircuitCurrent+2
 17794  371E  3F01               	moviw [1]fsr0
 17795  371F  00EA               	movwf	??_AFE_getSetShortCircuitCurrent+3
 17796  3720  0869               	movf	??_AFE_getSetShortCircuitCurrent+2,w
 17797  3721  00F1               	movwf	___xxtofl@val
 17798  3722  086A               	movf	??_AFE_getSetShortCircuitCurrent+3,w
 17799  3723  00F2               	movwf	___xxtofl@val+1
 17800  3724  0D89               	rlf	9,f
 17801  3725  3B89               	subwfb	9,f
 17802  3726  0989               	comf	9,f
 17803  3727  00F3               	movwf	___xxtofl@val+2
 17804  3728  00F4               	movwf	___xxtofl@val+3
 17805  3729  3001               	movlw	1
 17806  372A  31AC  24C9  31B7   	fcall	___xxtofl
 17807  372D  0874               	movf	?___xxtofl+3,w
 17808  372E  0020               	movlb	0	; select bank0
 17809  372F  00C7               	movwf	___fldiv@b+3
 17810  3730  0873               	movf	?___xxtofl+2,w
 17811  3731  00C6               	movwf	___fldiv@b+2
 17812  3732  0872               	movf	?___xxtofl+1,w
 17813  3733  00C5               	movwf	___fldiv@b+1
 17814  3734  0871               	movf	?___xxtofl,w
 17815  3735  00C4               	movwf	___fldiv@b
 17816  3736  0023               	movlb	3	; select bank3
 17817  3737  0835               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 17818  3738  0020               	movlb	0	; select bank0
 17819  3739  00C3               	movwf	___fldiv@a+3
 17820  373A  0023               	movlb	3	; select bank3
 17821  373B  0834               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 17822  373C  0020               	movlb	0	; select bank0
 17823  373D  00C2               	movwf	___fldiv@a+2
 17824  373E  0023               	movlb	3	; select bank3
 17825  373F  0833               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 17826  3740  0020               	movlb	0	; select bank0
 17827  3741  00C1               	movwf	___fldiv@a+1
 17828  3742  0023               	movlb	3	; select bank3
 17829  3743  0832               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 17830  3744  0020               	movlb	0	; select bank0
 17831  3745  00C0               	movwf	___fldiv@a
 17832  3746  3190  2052  31B7   	fcall	___fldiv
 17833  3749  0020               	movlb	0	; select bank0
 17834  374A  0843               	movf	?___fldiv+3,w
 17835  374B  00DD               	movwf	___fltol@f1+3
 17836  374C  0842               	movf	?___fldiv+2,w
 17837  374D  00DC               	movwf	___fltol@f1+2
 17838  374E  0841               	movf	?___fldiv+1,w
 17839  374F  00DB               	movwf	___fltol@f1+1
 17840  3750  0840               	movf	?___fldiv,w
 17841  3751  00DA               	movwf	___fltol@f1
 17842  3752  31A8  2080         	fcall	___fltol
 17843  3754  0020               	movlb	0	; select bank0
 17844  3755  085D               	movf	?___fltol+3,w
 17845  3756  00E6               	movwf	?_AFE_getSetShortCircuitCurrent+3
 17846  3757  085C               	movf	?___fltol+2,w
 17847  3758  00E5               	movwf	?_AFE_getSetShortCircuitCurrent+2
 17848  3759  085B               	movf	?___fltol+1,w
 17849  375A  00E4               	movwf	?_AFE_getSetShortCircuitCurrent+1
 17850  375B  085A               	movf	?___fltol,w
 17851  375C  00E3               	movwf	?_AFE_getSetShortCircuitCurrent
 17852  375D  0008               	return
 17853  375E                     __end_of_AFE_getSetShortCircuitCurrent:	
 17854                           
 17855                           	psect	text65
 17856  330F                     __ptext65:	
 17857 ;; *************** function _AFE_getSetCurrentSenseRes *****************
 17858 ;; Defined at:
 17859 ;;		line 151 in file "BQ76920.c"
 17860 ;; Parameters:    Size  Location     Type
 17861 ;;		None
 17862 ;; Auto vars:     Size  Location     Type
 17863 ;;		None
 17864 ;; Return value:  Size  Location     Type
 17865 ;;                  4    1[COMMON] float 
 17866 ;; Registers used:
 17867 ;;		wreg
 17868 ;; Tracked objects:
 17869 ;;		On entry : 0/0
 17870 ;;		On exit  : 0/0
 17871 ;;		Unchanged: 0/0
 17872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17873 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17876 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17877 ;;Total ram usage:        4 bytes
 17878 ;; Hardware stack levels used:    1
 17879 ;; Hardware stack levels required when called:    1
 17880 ;; This function calls:
 17881 ;;		Nothing
 17882 ;; This function is called by:
 17883 ;;		_statemachine
 17884 ;; This function uses a non-reentrant model
 17885 ;;
 17886                           
 17887                           
 17888                           ;psect for function _AFE_getSetCurrentSenseRes
 17889  330F                     _AFE_getSetCurrentSenseRes:	
 17890                           
 17891                           ;BQ76920.c: 152:     return (float) shuntResistorValue_mOhm;
 17892                           
 17893                           ;incstack = 0
 17894                           ; Regs used in _AFE_getSetCurrentSenseRes: [wreg]
 17895  330F  0023               	movlb	3	; select bank3
 17896  3310  0835               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 17897  3311  00F4               	movwf	?_AFE_getSetCurrentSenseRes+3
 17898  3312  0834               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 17899  3313  00F3               	movwf	?_AFE_getSetCurrentSenseRes+2
 17900  3314  0833               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 17901  3315  00F2               	movwf	?_AFE_getSetCurrentSenseRes+1
 17902  3316  0832               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 17903  3317  00F1               	movwf	?_AFE_getSetCurrentSenseRes
 17904  3318  0008               	return
 17905  3319                     __end_of_AFE_getSetCurrentSenseRes:	
 17906                           
 17907                           	psect	text66
 17908  36BE                     __ptext66:	
 17909 ;; *************** function _AFE_getOverCurrentDischargeCurrent *****************
 17910 ;; Defined at:
 17911 ;;		line 159 in file "BQ76920.c"
 17912 ;; Parameters:    Size  Location     Type
 17913 ;;		None
 17914 ;; Auto vars:     Size  Location     Type
 17915 ;;		None
 17916 ;; Return value:  Size  Location     Type
 17917 ;;                  4   67[BANK0 ] long 
 17918 ;; Registers used:
 17919 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17920 ;; Tracked objects:
 17921 ;;		On entry : 0/0
 17922 ;;		On exit  : 0/0
 17923 ;;		Unchanged: 0/0
 17924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17925 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17927 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17928 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17929 ;;Total ram usage:        8 bytes
 17930 ;; Hardware stack levels used:    1
 17931 ;; Hardware stack levels required when called:    2
 17932 ;; This function calls:
 17933 ;;		___fldiv
 17934 ;;		___fltol
 17935 ;;		___xxtofl
 17936 ;; This function is called by:
 17937 ;;		_statemachine
 17938 ;; This function uses a non-reentrant model
 17939 ;;
 17940                           
 17941                           
 17942                           ;psect for function _AFE_getOverCurrentDischargeCurrent
 17943  36BE                     _AFE_getOverCurrentDischargeCurrent:	
 17944                           
 17945                           ;BQ76920.c: 160:     return (long) (OCD_threshold_setting[protect2.bits.OCD_THRESH]) / s
      +                          huntResistorValue_mOhm;
 17946                           
 17947                           ;incstack = 0
 17948                           ; Regs used in _AFE_getOverCurrentDischargeCurrent: [wreg-fsr0h+status,2+status,0+pclath
      +                          +cstack]
 17949  36BE  0023               	movlb	3	; select bank3
 17950  36BF  0855               	movf	BQ76920@protect2^(0+384),w
 17951  36C0  390F               	andlw	15
 17952  36C1  0020               	movlb	0	; select bank0
 17953  36C2  00E7               	movwf	??_AFE_getOverCurrentDischargeCurrent
 17954  36C3  01E8               	clrf	??_AFE_getOverCurrentDischargeCurrent+1
 17955  36C4  35E7               	lslf	??_AFE_getOverCurrentDischargeCurrent,f
 17956  36C5  0DE8               	rlf	??_AFE_getOverCurrentDischargeCurrent+1,f
 17957  36C6  30C4               	movlw	low (_OCD_threshold_setting| (0+32768))
 17958  36C7  0767               	addwf	??_AFE_getOverCurrentDischargeCurrent,w
 17959  36C8  0084               	movwf	4
 17960  36C9  30B9               	movlw	high (_OCD_threshold_setting| (0+32768))
 17961  36CA  3D68               	addwfc	??_AFE_getOverCurrentDischargeCurrent+1,w
 17962  36CB  0085               	movwf	5
 17963  36CC  3F00               	moviw [0]fsr0
 17964  36CD  00E9               	movwf	??_AFE_getOverCurrentDischargeCurrent+2
 17965  36CE  3F01               	moviw [1]fsr0
 17966  36CF  00EA               	movwf	??_AFE_getOverCurrentDischargeCurrent+3
 17967  36D0  0869               	movf	??_AFE_getOverCurrentDischargeCurrent+2,w
 17968  36D1  00F1               	movwf	___xxtofl@val
 17969  36D2  086A               	movf	??_AFE_getOverCurrentDischargeCurrent+3,w
 17970  36D3  00F2               	movwf	___xxtofl@val+1
 17971  36D4  0D89               	rlf	9,f
 17972  36D5  3B89               	subwfb	9,f
 17973  36D6  0989               	comf	9,f
 17974  36D7  00F3               	movwf	___xxtofl@val+2
 17975  36D8  00F4               	movwf	___xxtofl@val+3
 17976  36D9  3001               	movlw	1
 17977  36DA  31AC  24C9  31B6   	fcall	___xxtofl
 17978  36DD  0874               	movf	?___xxtofl+3,w
 17979  36DE  0020               	movlb	0	; select bank0
 17980  36DF  00C7               	movwf	___fldiv@b+3
 17981  36E0  0873               	movf	?___xxtofl+2,w
 17982  36E1  00C6               	movwf	___fldiv@b+2
 17983  36E2  0872               	movf	?___xxtofl+1,w
 17984  36E3  00C5               	movwf	___fldiv@b+1
 17985  36E4  0871               	movf	?___xxtofl,w
 17986  36E5  00C4               	movwf	___fldiv@b
 17987  36E6  0023               	movlb	3	; select bank3
 17988  36E7  0835               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 17989  36E8  0020               	movlb	0	; select bank0
 17990  36E9  00C3               	movwf	___fldiv@a+3
 17991  36EA  0023               	movlb	3	; select bank3
 17992  36EB  0834               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 17993  36EC  0020               	movlb	0	; select bank0
 17994  36ED  00C2               	movwf	___fldiv@a+2
 17995  36EE  0023               	movlb	3	; select bank3
 17996  36EF  0833               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 17997  36F0  0020               	movlb	0	; select bank0
 17998  36F1  00C1               	movwf	___fldiv@a+1
 17999  36F2  0023               	movlb	3	; select bank3
 18000  36F3  0832               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 18001  36F4  0020               	movlb	0	; select bank0
 18002  36F5  00C0               	movwf	___fldiv@a
 18003  36F6  3190  2052  31B6   	fcall	___fldiv
 18004  36F9  0020               	movlb	0	; select bank0
 18005  36FA  0843               	movf	?___fldiv+3,w
 18006  36FB  00DD               	movwf	___fltol@f1+3
 18007  36FC  0842               	movf	?___fldiv+2,w
 18008  36FD  00DC               	movwf	___fltol@f1+2
 18009  36FE  0841               	movf	?___fldiv+1,w
 18010  36FF  00DB               	movwf	___fltol@f1+1
 18011  3700  0840               	movf	?___fldiv,w
 18012  3701  00DA               	movwf	___fltol@f1
 18013  3702  31A8  2080         	fcall	___fltol
 18014  3704  0020               	movlb	0	; select bank0
 18015  3705  085D               	movf	?___fltol+3,w
 18016  3706  00E6               	movwf	?_AFE_getOverCurrentDischargeCurrent+3
 18017  3707  085C               	movf	?___fltol+2,w
 18018  3708  00E5               	movwf	?_AFE_getOverCurrentDischargeCurrent+2
 18019  3709  085B               	movf	?___fltol+1,w
 18020  370A  00E4               	movwf	?_AFE_getOverCurrentDischargeCurrent+1
 18021  370B  085A               	movf	?___fltol,w
 18022  370C  00E3               	movwf	?_AFE_getOverCurrentDischargeCurrent
 18023  370D  0008               	return
 18024  370E                     __end_of_AFE_getOverCurrentDischargeCurrent:	
 18025                           
 18026                           	psect	text67
 18027  2CC9                     __ptext67:	
 18028 ;; *************** function ___xxtofl *****************
 18029 ;; Defined at:
 18030 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 18031 ;; Parameters:    Size  Location     Type
 18032 ;;  sign            1    wreg     unsigned char 
 18033 ;;  val             4    1[COMMON] long 
 18034 ;; Auto vars:     Size  Location     Type
 18035 ;;  sign            1    0[BANK0 ] unsigned char 
 18036 ;;  arg             4    2[BANK0 ] unsigned long 
 18037 ;;  exp             1    1[BANK0 ] unsigned char 
 18038 ;; Return value:  Size  Location     Type
 18039 ;;                  4    1[COMMON] unsigned char 
 18040 ;; Registers used:
 18041 ;;		wreg, status,2, status,0
 18042 ;; Tracked objects:
 18043 ;;		On entry : 0/0
 18044 ;;		On exit  : 0/0
 18045 ;;		Unchanged: 0/0
 18046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18047 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18048 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18049 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18050 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18051 ;;Total ram usage:       14 bytes
 18052 ;; Hardware stack levels used:    1
 18053 ;; Hardware stack levels required when called:    1
 18054 ;; This function calls:
 18055 ;;		Nothing
 18056 ;; This function is called by:
 18057 ;;		_setShortCircuitProtection
 18058 ;;		_setOverCurrentDischargeProtection
 18059 ;;		_AFE_getSetShortCircuitCurrent
 18060 ;;		_AFE_getOverCurrentDischargeCurrent
 18061 ;; This function uses a non-reentrant model
 18062 ;;
 18063                           
 18064                           
 18065                           ;psect for function ___xxtofl
 18066  2CC9                     ___xxtofl:	
 18067                           
 18068                           ;incstack = 0
 18069                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 18070                           ;___xxtofl@sign stored from wreg
 18071  2CC9  0020               	movlb	0	; select bank0
 18072  2CCA  00A0               	movwf	___xxtofl@sign
 18073  2CCB  0820               	movf	___xxtofl@sign,w
 18074  2CCC  1D03               	btfss	3,2
 18075  2CCD  1FF4               	btfss	___xxtofl@val+3,7
 18076  2CCE  2CDF               	goto	l6346
 18077  2CCF  0971               	comf	___xxtofl@val,w
 18078  2CD0  00A2               	movwf	___xxtofl@arg
 18079  2CD1  0972               	comf	___xxtofl@val+1,w
 18080  2CD2  00A3               	movwf	___xxtofl@arg+1
 18081  2CD3  0973               	comf	___xxtofl@val+2,w
 18082  2CD4  00A4               	movwf	___xxtofl@arg+2
 18083  2CD5  0974               	comf	___xxtofl@val+3,w
 18084  2CD6  00A5               	movwf	___xxtofl@arg+3
 18085  2CD7  0AA2               	incf	___xxtofl@arg,f
 18086  2CD8  1903               	skipnz
 18087  2CD9  0AA3               	incf	___xxtofl@arg+1,f
 18088  2CDA  1903               	skipnz
 18089  2CDB  0AA4               	incf	___xxtofl@arg+2,f
 18090  2CDC  1903               	skipnz
 18091  2CDD  0AA5               	incf	___xxtofl@arg+3,f
 18092  2CDE  2CE7               	goto	l1309
 18093  2CDF                     l6346:	
 18094  2CDF  0874               	movf	___xxtofl@val+3,w
 18095  2CE0  00A5               	movwf	___xxtofl@arg+3
 18096  2CE1  0873               	movf	___xxtofl@val+2,w
 18097  2CE2  00A4               	movwf	___xxtofl@arg+2
 18098  2CE3  0872               	movf	___xxtofl@val+1,w
 18099  2CE4  00A3               	movwf	___xxtofl@arg+1
 18100  2CE5  0871               	movf	___xxtofl@val,w
 18101  2CE6  00A2               	movwf	___xxtofl@arg
 18102  2CE7                     l1309:	
 18103  2CE7  0874               	movf	___xxtofl@val+3,w
 18104  2CE8  0473               	iorwf	___xxtofl@val+2,w
 18105  2CE9  0472               	iorwf	___xxtofl@val+1,w
 18106  2CEA  0471               	iorwf	___xxtofl@val,w
 18107  2CEB  1D03               	skipz
 18108  2CEC  2CF6               	goto	l6352
 18109  2CED  3000               	movlw	0
 18110  2CEE  00F4               	movwf	?___xxtofl+3
 18111  2CEF  3000               	movlw	0
 18112  2CF0  00F3               	movwf	?___xxtofl+2
 18113  2CF1  3000               	movlw	0
 18114  2CF2  00F2               	movwf	?___xxtofl+1
 18115  2CF3  3000               	movlw	0
 18116  2CF4  00F1               	movwf	?___xxtofl
 18117  2CF5  0008               	return
 18118  2CF6                     l6352:	
 18119  2CF6  3096               	movlw	150
 18120  2CF7  00F5               	movwf	??___xxtofl
 18121  2CF8  0875               	movf	??___xxtofl,w
 18122  2CF9  00A1               	movwf	___xxtofl@exp
 18123  2CFA                     l6356:	
 18124  2CFA  30FE               	movlw	254
 18125  2CFB  0525               	andwf	___xxtofl@arg+3,w
 18126  2CFC  1903               	btfsc	3,2
 18127  2CFD  2D1D               	goto	l1315
 18128  2CFE  3001               	movlw	1
 18129  2CFF  00F5               	movwf	??___xxtofl
 18130  2D00  0875               	movf	??___xxtofl,w
 18131  2D01  07A1               	addwf	___xxtofl@exp,f
 18132  2D02  3001               	movlw	1
 18133  2D03                     u8905:	
 18134  2D03  36A5               	lsrf	___xxtofl@arg+3,f
 18135  2D04  0CA4               	rrf	___xxtofl@arg+2,f
 18136  2D05  0CA3               	rrf	___xxtofl@arg+1,f
 18137  2D06  0CA2               	rrf	___xxtofl@arg,f
 18138  2D07  0B89               	decfsz	9,f
 18139  2D08  2D03               	goto	u8905
 18140  2D09  2CFA               	goto	l6356
 18141  2D0A                     l6358:	
 18142  2D0A  3001               	movlw	1
 18143  2D0B  00F5               	movwf	??___xxtofl
 18144  2D0C  0875               	movf	??___xxtofl,w
 18145  2D0D  07A1               	addwf	___xxtofl@exp,f
 18146  2D0E  3001               	movlw	1
 18147  2D0F  07A2               	addwf	___xxtofl@arg,f
 18148  2D10  3000               	movlw	0
 18149  2D11  3DA3               	addwfc	___xxtofl@arg+1,f
 18150  2D12  3000               	movlw	0
 18151  2D13  3DA4               	addwfc	___xxtofl@arg+2,f
 18152  2D14  3000               	movlw	0
 18153  2D15  3DA5               	addwfc	___xxtofl@arg+3,f
 18154  2D16  3001               	movlw	1
 18155  2D17                     u8925:	
 18156  2D17  36A5               	lsrf	___xxtofl@arg+3,f
 18157  2D18  0CA4               	rrf	___xxtofl@arg+2,f
 18158  2D19  0CA3               	rrf	___xxtofl@arg+1,f
 18159  2D1A  0CA2               	rrf	___xxtofl@arg,f
 18160  2D1B  0B89               	decfsz	9,f
 18161  2D1C  2D17               	goto	u8925
 18162  2D1D                     l1315:	
 18163  2D1D  30FF               	movlw	255
 18164  2D1E  0525               	andwf	___xxtofl@arg+3,w
 18165  2D1F  1903               	btfsc	3,2
 18166  2D20  2D2F               	goto	l6366
 18167  2D21  2D0A               	goto	l6358
 18168  2D22                     l6368:	
 18169  2D22  3002               	movlw	2
 18170  2D23  0221               	subwf	___xxtofl@exp,w
 18171  2D24  1C03               	btfss	3,0
 18172  2D25  2D31               	goto	l1322
 18173  2D26  3001               	movlw	1
 18174  2D27  02A1               	subwf	___xxtofl@exp,f
 18175  2D28  3001               	movlw	1
 18176  2D29                     u8945:	
 18177  2D29  35A2               	lslf	___xxtofl@arg,f
 18178  2D2A  0DA3               	rlf	___xxtofl@arg+1,f
 18179  2D2B  0DA4               	rlf	___xxtofl@arg+2,f
 18180  2D2C  0DA5               	rlf	___xxtofl@arg+3,f
 18181  2D2D  0B89               	decfsz	9,f
 18182  2D2E  2D29               	goto	u8945
 18183  2D2F                     l6366:	
 18184  2D2F  1FA4               	btfss	___xxtofl@arg+2,7
 18185  2D30  2D22               	goto	l6368
 18186  2D31                     l1322:	
 18187  2D31  1821               	btfsc	___xxtofl@exp,0
 18188  2D32  2D3B               	goto	l1323
 18189  2D33  30FF               	movlw	255
 18190  2D34  05A2               	andwf	___xxtofl@arg,f
 18191  2D35  30FF               	movlw	255
 18192  2D36  05A3               	andwf	___xxtofl@arg+1,f
 18193  2D37  307F               	movlw	127
 18194  2D38  05A4               	andwf	___xxtofl@arg+2,f
 18195  2D39  30FF               	movlw	255
 18196  2D3A  05A5               	andwf	___xxtofl@arg+3,f
 18197  2D3B                     l1323:	
 18198  2D3B  1003               	clrc
 18199  2D3C  0CA1               	rrf	___xxtofl@exp,f
 18200  2D3D  0821               	movf	___xxtofl@exp,w
 18201  2D3E  00F5               	movwf	??___xxtofl
 18202  2D3F  01F6               	clrf	??___xxtofl+1
 18203  2D40  01F7               	clrf	??___xxtofl+2
 18204  2D41  01F8               	clrf	??___xxtofl+3
 18205  2D42  3018               	movlw	24
 18206  2D43                     u8985:	
 18207  2D43  35F5               	lslf	??___xxtofl,f
 18208  2D44  0DF6               	rlf	??___xxtofl+1,f
 18209  2D45  0DF7               	rlf	??___xxtofl+2,f
 18210  2D46  0DF8               	rlf	??___xxtofl+3,f
 18211  2D47  0B89               	decfsz	9,f
 18212  2D48  2D43               	goto	u8985
 18213  2D49  0875               	movf	??___xxtofl,w
 18214  2D4A  04A2               	iorwf	___xxtofl@arg,f
 18215  2D4B  0876               	movf	??___xxtofl+1,w
 18216  2D4C  04A3               	iorwf	___xxtofl@arg+1,f
 18217  2D4D  0877               	movf	??___xxtofl+2,w
 18218  2D4E  04A4               	iorwf	___xxtofl@arg+2,f
 18219  2D4F  0878               	movf	??___xxtofl+3,w
 18220  2D50  04A5               	iorwf	___xxtofl@arg+3,f
 18221  2D51  0820               	movf	___xxtofl@sign,w
 18222  2D52  1D03               	btfss	3,2
 18223  2D53  1FF4               	btfss	___xxtofl@val+3,7
 18224  2D54  2D56               	goto	l6380
 18225  2D55  17A5               	bsf	___xxtofl@arg+3,7
 18226  2D56                     l6380:	
 18227  2D56  0825               	movf	___xxtofl@arg+3,w
 18228  2D57  00F4               	movwf	?___xxtofl+3
 18229  2D58  0824               	movf	___xxtofl@arg+2,w
 18230  2D59  00F3               	movwf	?___xxtofl+2
 18231  2D5A  0823               	movf	___xxtofl@arg+1,w
 18232  2D5B  00F2               	movwf	?___xxtofl+1
 18233  2D5C  0822               	movf	___xxtofl@arg,w
 18234  2D5D  00F1               	movwf	?___xxtofl
 18235  2D5E  0008               	return
 18236  2D5F                     __end_of___xxtofl:	
 18237                           
 18238                           	psect	text68
 18239  2880                     __ptext68:	
 18240 ;; *************** function ___fltol *****************
 18241 ;; Defined at:
 18242 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 18243 ;; Parameters:    Size  Location     Type
 18244 ;;  f1              4   58[BANK0 ] unsigned char 
 18245 ;; Auto vars:     Size  Location     Type
 18246 ;;  exp1            1   11[COMMON] unsigned char 
 18247 ;;  sign1           1   10[COMMON] unsigned char 
 18248 ;; Return value:  Size  Location     Type
 18249 ;;                  4   58[BANK0 ] long 
 18250 ;; Registers used:
 18251 ;;		wreg, status,2, status,0
 18252 ;; Tracked objects:
 18253 ;;		On entry : 0/0
 18254 ;;		On exit  : 0/0
 18255 ;;		Unchanged: 0/0
 18256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18257 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18258 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18259 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18260 ;;      Totals:         2       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18261 ;;Total ram usage:       11 bytes
 18262 ;; Hardware stack levels used:    1
 18263 ;; Hardware stack levels required when called:    1
 18264 ;; This function calls:
 18265 ;;		Nothing
 18266 ;; This function is called by:
 18267 ;;		_AFE_getSetShortCircuitCurrent
 18268 ;;		_AFE_getOverCurrentDischargeCurrent
 18269 ;;		_efgtoa
 18270 ;; This function uses a non-reentrant model
 18271 ;;
 18272                           
 18273                           
 18274                           ;psect for function ___fltol
 18275  2880                     ___fltol:	
 18276                           
 18277                           ;incstack = 0
 18278                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 18279  2880  1003               	clrc
 18280  2881  0020               	movlb	0	; select bank0
 18281  2882  0D5C               	rlf	___fltol@f1+2,w
 18282  2883  0D5D               	rlf	___fltol@f1+3,w
 18283  2884  00DE               	movwf	??___fltol
 18284  2885  085E               	movf	??___fltol,w
 18285  2886  00FB               	movwf	___fltol@exp1
 18286  2887  087B               	movf	___fltol@exp1,w
 18287  2888  1D03               	btfss	3,2
 18288  2889  2893               	goto	l4840
 18289  288A                     l4836:	
 18290  288A  3000               	movlw	0
 18291  288B  00DD               	movwf	?___fltol+3
 18292  288C  3000               	movlw	0
 18293  288D  00DC               	movwf	?___fltol+2
 18294  288E  3000               	movlw	0
 18295  288F  00DB               	movwf	?___fltol+1
 18296  2890  3000               	movlw	0
 18297  2891  00DA               	movwf	?___fltol
 18298  2892  0008               	return
 18299  2893                     l4840:	
 18300  2893  085A               	movf	___fltol@f1,w
 18301  2894  00DE               	movwf	??___fltol
 18302  2895  085B               	movf	___fltol@f1+1,w
 18303  2896  00DF               	movwf	??___fltol+1
 18304  2897  085C               	movf	___fltol@f1+2,w
 18305  2898  00E0               	movwf	??___fltol+2
 18306  2899  085D               	movf	___fltol@f1+3,w
 18307  289A  00E1               	movwf	??___fltol+3
 18308  289B  301F               	movlw	31
 18309  289C                     u6215:	
 18310  289C  36E1               	lsrf	??___fltol+3,f
 18311  289D  0CE0               	rrf	??___fltol+2,f
 18312  289E  0CDF               	rrf	??___fltol+1,f
 18313  289F  0CDE               	rrf	??___fltol,f
 18314  28A0  0B89               	decfsz	9,f
 18315  28A1  289C               	goto	u6215
 18316  28A2  085E               	movf	??___fltol,w
 18317  28A3  00E2               	movwf	??___fltol+4
 18318  28A4  0862               	movf	??___fltol+4,w
 18319  28A5  00FA               	movwf	___fltol@sign1
 18320  28A6  17DC               	bsf	___fltol@f1+2,7
 18321  28A7  30FF               	movlw	255
 18322  28A8  05DA               	andwf	___fltol@f1,f
 18323  28A9  30FF               	movlw	255
 18324  28AA  05DB               	andwf	___fltol@f1+1,f
 18325  28AB  30FF               	movlw	255
 18326  28AC  05DC               	andwf	___fltol@f1+2,f
 18327  28AD  3000               	movlw	0
 18328  28AE  05DD               	andwf	___fltol@f1+3,f
 18329  28AF  3096               	movlw	150
 18330  28B0  02FB               	subwf	___fltol@exp1,f
 18331  28B1  1FFB               	btfss	___fltol@exp1,7
 18332  28B2  28C6               	goto	l4858
 18333  28B3  087B               	movf	___fltol@exp1,w
 18334  28B4  3A80               	xorlw	128
 18335  28B5  3E97               	addlw	151
 18336  28B6  1C03               	btfss	3,0
 18337  28B7  288A               	goto	l4836
 18338  28B8                     l4856:	
 18339  28B8  3001               	movlw	1
 18340  28B9                     u6245:	
 18341  28B9  36DD               	lsrf	___fltol@f1+3,f
 18342  28BA  0CDC               	rrf	___fltol@f1+2,f
 18343  28BB  0CDB               	rrf	___fltol@f1+1,f
 18344  28BC  0CDA               	rrf	___fltol@f1,f
 18345  28BD  0B89               	decfsz	9,f
 18346  28BE  28B9               	goto	u6245
 18347  28BF  3001               	movlw	1
 18348  28C0  00DE               	movwf	??___fltol
 18349  28C1  085E               	movf	??___fltol,w
 18350  28C2  07FB               	addwf	___fltol@exp1,f
 18351  28C3  1903               	btfsc	3,2
 18352  28C4  28D7               	goto	l4866
 18353  28C5  28B8               	goto	l4856
 18354  28C6                     l4858:	
 18355  28C6  3020               	movlw	32
 18356  28C7  027B               	subwf	___fltol@exp1,w
 18357  28C8  1803               	btfsc	3,0
 18358  28C9  288A               	goto	l4836
 18359  28CA                     l1075:	
 18360  28CA  087B               	movf	___fltol@exp1,w
 18361  28CB  1903               	btfsc	3,2
 18362  28CC  28D7               	goto	l4866
 18363  28CD  3001               	movlw	1
 18364  28CE                     u6275:	
 18365  28CE  35DA               	lslf	___fltol@f1,f
 18366  28CF  0DDB               	rlf	___fltol@f1+1,f
 18367  28D0  0DDC               	rlf	___fltol@f1+2,f
 18368  28D1  0DDD               	rlf	___fltol@f1+3,f
 18369  28D2  0B89               	decfsz	9,f
 18370  28D3  28CE               	goto	u6275
 18371  28D4  3001               	movlw	1
 18372  28D5  02FB               	subwf	___fltol@exp1,f
 18373  28D6  28CA               	goto	l1075
 18374  28D7                     l4866:	
 18375  28D7  087A               	movf	___fltol@sign1,w
 18376  28D8  1903               	btfsc	3,2
 18377  28D9  0008               	return
 18378  28DA  09DA               	comf	___fltol@f1,f
 18379  28DB  09DB               	comf	___fltol@f1+1,f
 18380  28DC  09DC               	comf	___fltol@f1+2,f
 18381  28DD  09DD               	comf	___fltol@f1+3,f
 18382  28DE  0ADA               	incf	___fltol@f1,f
 18383  28DF  1903               	skipnz
 18384  28E0  0ADB               	incf	___fltol@f1+1,f
 18385  28E1  1903               	skipnz
 18386  28E2  0ADC               	incf	___fltol@f1+2,f
 18387  28E3  1903               	skipnz
 18388  28E4  0ADD               	incf	___fltol@f1+3,f
 18389  28E5  0008               	return
 18390  28E6                     __end_of___fltol:	
 18391                           
 18392                           	psect	text69
 18393  1052                     __ptext69:	
 18394 ;; *************** function ___fldiv *****************
 18395 ;; Defined at:
 18396 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 18397 ;; Parameters:    Size  Location     Type
 18398 ;;  a               4   32[BANK0 ] long 
 18399 ;;  b               4   36[BANK0 ] long 
 18400 ;; Auto vars:     Size  Location     Type
 18401 ;;  grs             4   52[BANK0 ] unsigned long 
 18402 ;;  rem             4   45[BANK0 ] unsigned long 
 18403 ;;  new_exp         2   50[BANK0 ] int 
 18404 ;;  aexp            1   57[BANK0 ] unsigned char 
 18405 ;;  bexp            1   56[BANK0 ] unsigned char 
 18406 ;;  sign            1   49[BANK0 ] unsigned char 
 18407 ;; Return value:  Size  Location     Type
 18408 ;;                  4   32[BANK0 ] unsigned char 
 18409 ;; Registers used:
 18410 ;;		wreg, status,2, status,0
 18411 ;; Tracked objects:
 18412 ;;		On entry : 0/0
 18413 ;;		On exit  : 0/0
 18414 ;;		Unchanged: 0/0
 18415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18416 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18417 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18418 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18419 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18420 ;;Total ram usage:       26 bytes
 18421 ;; Hardware stack levels used:    1
 18422 ;; Hardware stack levels required when called:    1
 18423 ;; This function calls:
 18424 ;;		Nothing
 18425 ;; This function is called by:
 18426 ;;		_setShortCircuitProtection
 18427 ;;		_setOverCurrentDischargeProtection
 18428 ;;		_AFE_getSetShortCircuitCurrent
 18429 ;;		_AFE_getOverCurrentDischargeCurrent
 18430 ;;		_efgtoa
 18431 ;; This function uses a non-reentrant model
 18432 ;;
 18433                           
 18434                           
 18435                           ;psect for function ___fldiv
 18436  1052                     ___fldiv:	
 18437                           
 18438                           ;incstack = 0
 18439                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 18440  1052  0020               	movlb	0	; select bank0
 18441  1053  0847               	movf	___fldiv@b+3,w
 18442  1054  3980               	andlw	128
 18443  1055  00C8               	movwf	??___fldiv
 18444  1056  0848               	movf	??___fldiv,w
 18445  1057  00D1               	movwf	___fldiv@sign
 18446  1058  3547               	lslf	___fldiv@b+3,w
 18447  1059  00C8               	movwf	??___fldiv
 18448  105A  0848               	movf	??___fldiv,w
 18449  105B  00D8               	movwf	___fldiv@bexp
 18450  105C  1BC6               	btfsc	___fldiv@b+2,7
 18451  105D  1458               	bsf	___fldiv@bexp,0
 18452  105E  0858               	movf	___fldiv@bexp,w
 18453  105F  1903               	btfsc	3,2
 18454  1060  286F               	goto	l4932
 18455  1061  0A58               	incf	___fldiv@bexp,w
 18456  1062  1D03               	btfss	3,2
 18457  1063  286C               	goto	l4928
 18458  1064  3000               	movlw	0
 18459  1065  00C7               	movwf	___fldiv@b+3
 18460  1066  3000               	movlw	0
 18461  1067  00C6               	movwf	___fldiv@b+2
 18462  1068  3000               	movlw	0
 18463  1069  00C5               	movwf	___fldiv@b+1
 18464  106A  3000               	movlw	0
 18465  106B  00C4               	movwf	___fldiv@b
 18466  106C                     l4928:	
 18467  106C  17C6               	bsf	___fldiv@b+2,7
 18468  106D  01C7               	clrf	___fldiv@b+3
 18469  106E  2877               	goto	l4934
 18470  106F                     l4932:	
 18471  106F  3000               	movlw	0
 18472  1070  00C7               	movwf	___fldiv@b+3
 18473  1071  3000               	movlw	0
 18474  1072  00C6               	movwf	___fldiv@b+2
 18475  1073  3000               	movlw	0
 18476  1074  00C5               	movwf	___fldiv@b+1
 18477  1075  3000               	movlw	0
 18478  1076  00C4               	movwf	___fldiv@b
 18479  1077                     l4934:	
 18480  1077  0843               	movf	___fldiv@a+3,w
 18481  1078  3980               	andlw	128
 18482  1079  00C8               	movwf	??___fldiv
 18483  107A  0848               	movf	??___fldiv,w
 18484  107B  06D1               	xorwf	___fldiv@sign,f
 18485  107C  3543               	lslf	___fldiv@a+3,w
 18486  107D  00C8               	movwf	??___fldiv
 18487  107E  0848               	movf	??___fldiv,w
 18488  107F  00D9               	movwf	___fldiv@aexp
 18489  1080  1BC2               	btfsc	___fldiv@a+2,7
 18490  1081  1459               	bsf	___fldiv@aexp,0
 18491  1082  0859               	movf	___fldiv@aexp,w
 18492  1083  1903               	btfsc	3,2
 18493  1084  2893               	goto	l4952
 18494  1085  0A59               	incf	___fldiv@aexp,w
 18495  1086  1D03               	btfss	3,2
 18496  1087  2890               	goto	l4948
 18497  1088  3000               	movlw	0
 18498  1089  00C3               	movwf	___fldiv@a+3
 18499  108A  3000               	movlw	0
 18500  108B  00C2               	movwf	___fldiv@a+2
 18501  108C  3000               	movlw	0
 18502  108D  00C1               	movwf	___fldiv@a+1
 18503  108E  3000               	movlw	0
 18504  108F  00C0               	movwf	___fldiv@a
 18505  1090                     l4948:	
 18506  1090  17C2               	bsf	___fldiv@a+2,7
 18507  1091  01C3               	clrf	___fldiv@a+3
 18508  1092  289B               	goto	l1231
 18509  1093                     l4952:	
 18510  1093  3000               	movlw	0
 18511  1094  00C3               	movwf	___fldiv@a+3
 18512  1095  3000               	movlw	0
 18513  1096  00C2               	movwf	___fldiv@a+2
 18514  1097  3000               	movlw	0
 18515  1098  00C1               	movwf	___fldiv@a+1
 18516  1099  3000               	movlw	0
 18517  109A  00C0               	movwf	___fldiv@a
 18518  109B                     l1231:	
 18519  109B  0843               	movf	___fldiv@a+3,w
 18520  109C  0442               	iorwf	___fldiv@a+2,w
 18521  109D  0441               	iorwf	___fldiv@a+1,w
 18522  109E  0440               	iorwf	___fldiv@a,w
 18523  109F  1D03               	skipz
 18524  10A0  28BA               	goto	l4962
 18525  10A1  3000               	movlw	0
 18526  10A2  00C7               	movwf	___fldiv@b+3
 18527  10A3  3000               	movlw	0
 18528  10A4  00C6               	movwf	___fldiv@b+2
 18529  10A5  3000               	movlw	0
 18530  10A6  00C5               	movwf	___fldiv@b+1
 18531  10A7  3000               	movlw	0
 18532  10A8  00C4               	movwf	___fldiv@b
 18533  10A9  3080               	movlw	128
 18534  10AA  04C6               	iorwf	___fldiv@b+2,f
 18535  10AB  307F               	movlw	127
 18536  10AC  04C7               	iorwf	___fldiv@b+3,f
 18537  10AD                     L14:	
 18538  10AD  0851               	movf	___fldiv@sign,w
 18539  10AE  00C8               	movwf	??___fldiv
 18540  10AF  0848               	movf	??___fldiv,w
 18541  10B0  04C7               	iorwf	___fldiv@b+3,f
 18542  10B1  0847               	movf	___fldiv@b+3,w
 18543  10B2  00C3               	movwf	?___fldiv+3
 18544  10B3  0846               	movf	___fldiv@b+2,w
 18545  10B4  00C2               	movwf	?___fldiv+2
 18546  10B5  0845               	movf	___fldiv@b+1,w
 18547  10B6  00C1               	movwf	?___fldiv+1
 18548  10B7  0844               	movf	___fldiv@b,w
 18549  10B8  00C0               	movwf	?___fldiv
 18550  10B9  0008               	return
 18551  10BA                     l4962:	
 18552  10BA  0858               	movf	___fldiv@bexp,w
 18553  10BB  1D03               	btfss	3,2
 18554  10BC  28C6               	goto	l4968
 18555  10BD  3000               	movlw	0
 18556  10BE  00C3               	movwf	?___fldiv+3
 18557  10BF  3000               	movlw	0
 18558  10C0  00C2               	movwf	?___fldiv+2
 18559  10C1  3000               	movlw	0
 18560  10C2  00C1               	movwf	?___fldiv+1
 18561  10C3  3000               	movlw	0
 18562  10C4  00C0               	movwf	?___fldiv
 18563  10C5  0008               	return
 18564  10C6                     l4968:	
 18565  10C6  0858               	movf	___fldiv@bexp,w
 18566  10C7  00C8               	movwf	??___fldiv
 18567  10C8  01C9               	clrf	??___fldiv+1
 18568  10C9  0849               	movf	??___fldiv+1,w
 18569  10CA  00CB               	movwf	??___fldiv+3
 18570  10CB  0859               	movf	___fldiv@aexp,w
 18571  10CC  0248               	subwf	??___fldiv,w
 18572  10CD  00CA               	movwf	??___fldiv+2
 18573  10CE  1C03               	skipc
 18574  10CF  03CB               	decf	??___fldiv+3,f
 18575  10D0  084A               	movf	??___fldiv+2,w
 18576  10D1  3E7F               	addlw	127
 18577  10D2  00D2               	movwf	___fldiv@new_exp
 18578  10D3  3000               	movlw	0
 18579  10D4  3D4B               	addwfc	??___fldiv+3,w
 18580  10D5  00D3               	movwf	___fldiv@new_exp+1
 18581  10D6  0847               	movf	___fldiv@b+3,w
 18582  10D7  00D0               	movwf	___fldiv@rem+3
 18583  10D8  0846               	movf	___fldiv@b+2,w
 18584  10D9  00CF               	movwf	___fldiv@rem+2
 18585  10DA  0845               	movf	___fldiv@b+1,w
 18586  10DB  00CE               	movwf	___fldiv@rem+1
 18587  10DC  0844               	movf	___fldiv@b,w
 18588  10DD  00CD               	movwf	___fldiv@rem
 18589  10DE  3000               	movlw	0
 18590  10DF  00C7               	movwf	___fldiv@b+3
 18591  10E0  3000               	movlw	0
 18592  10E1  00C6               	movwf	___fldiv@b+2
 18593  10E2  3000               	movlw	0
 18594  10E3  00C5               	movwf	___fldiv@b+1
 18595  10E4  3000               	movlw	0
 18596  10E5  00C4               	movwf	___fldiv@b
 18597  10E6  3000               	movlw	0
 18598  10E7  00D7               	movwf	___fldiv@grs+3
 18599  10E8  3000               	movlw	0
 18600  10E9  00D6               	movwf	___fldiv@grs+2
 18601  10EA  3000               	movlw	0
 18602  10EB  00D5               	movwf	___fldiv@grs+1
 18603  10EC  3000               	movlw	0
 18604  10ED  00D4               	movwf	___fldiv@grs
 18605  10EE  01D9               	clrf	___fldiv@aexp
 18606  10EF                     l4996:	
 18607  10EF  301A               	movlw	26
 18608  10F0  0259               	subwf	___fldiv@aexp,w
 18609  10F1  1803               	btfsc	3,0
 18610  10F2  292B               	goto	l4998
 18611  10F3  0859               	movf	___fldiv@aexp,w
 18612  10F4  1903               	btfsc	3,2
 18613  10F5  290D               	goto	l4988
 18614  10F6  3001               	movlw	1
 18615  10F7                     u6485:	
 18616  10F7  35CD               	lslf	___fldiv@rem,f
 18617  10F8  0DCE               	rlf	___fldiv@rem+1,f
 18618  10F9  0DCF               	rlf	___fldiv@rem+2,f
 18619  10FA  0DD0               	rlf	___fldiv@rem+3,f
 18620  10FB  0B89               	decfsz	9,f
 18621  10FC  28F7               	goto	u6485
 18622  10FD  3001               	movlw	1
 18623  10FE                     u6495:	
 18624  10FE  35C4               	lslf	___fldiv@b,f
 18625  10FF  0DC5               	rlf	___fldiv@b+1,f
 18626  1100  0DC6               	rlf	___fldiv@b+2,f
 18627  1101  0DC7               	rlf	___fldiv@b+3,f
 18628  1102  0B89               	decfsz	9,f
 18629  1103  28FE               	goto	u6495
 18630  1104  1BD7               	btfsc	___fldiv@grs+3,7
 18631  1105  1444               	bsf	___fldiv@b,0
 18632  1106  3001               	movlw	1
 18633  1107                     u6515:	
 18634  1107  35D4               	lslf	___fldiv@grs,f
 18635  1108  0DD5               	rlf	___fldiv@grs+1,f
 18636  1109  0DD6               	rlf	___fldiv@grs+2,f
 18637  110A  0DD7               	rlf	___fldiv@grs+3,f
 18638  110B  0B89               	decfsz	9,f
 18639  110C  2907               	goto	u6515
 18640  110D                     l4988:	
 18641  110D  0843               	movf	___fldiv@a+3,w
 18642  110E  0250               	subwf	___fldiv@rem+3,w
 18643  110F  1D03               	skipz
 18644  1110  291B               	goto	u6525
 18645  1111  0842               	movf	___fldiv@a+2,w
 18646  1112  024F               	subwf	___fldiv@rem+2,w
 18647  1113  1D03               	skipz
 18648  1114  291B               	goto	u6525
 18649  1115  0841               	movf	___fldiv@a+1,w
 18650  1116  024E               	subwf	___fldiv@rem+1,w
 18651  1117  1D03               	skipz
 18652  1118  291B               	goto	u6525
 18653  1119  0840               	movf	___fldiv@a,w
 18654  111A  024D               	subwf	___fldiv@rem,w
 18655  111B                     u6525:	
 18656  111B  1C03               	skipc
 18657  111C  2926               	goto	l4994
 18658  111D  1757               	bsf	___fldiv@grs+3,6
 18659  111E  0840               	movf	___fldiv@a,w
 18660  111F  02CD               	subwf	___fldiv@rem,f
 18661  1120  0841               	movf	___fldiv@a+1,w
 18662  1121  3BCE               	subwfb	___fldiv@rem+1,f
 18663  1122  0842               	movf	___fldiv@a+2,w
 18664  1123  3BCF               	subwfb	___fldiv@rem+2,f
 18665  1124  0843               	movf	___fldiv@a+3,w
 18666  1125  3BD0               	subwfb	___fldiv@rem+3,f
 18667  1126                     l4994:	
 18668  1126  3001               	movlw	1
 18669  1127  00C8               	movwf	??___fldiv
 18670  1128  0848               	movf	??___fldiv,w
 18671  1129  07D9               	addwf	___fldiv@aexp,f
 18672  112A  28EF               	goto	l4996
 18673  112B                     l4998:	
 18674  112B  0850               	movf	___fldiv@rem+3,w
 18675  112C  044F               	iorwf	___fldiv@rem+2,w
 18676  112D  044E               	iorwf	___fldiv@rem+1,w
 18677  112E  044D               	iorwf	___fldiv@rem,w
 18678  112F  1D03               	btfss	3,2
 18679  1130  1454               	bsf	___fldiv@grs,0
 18680  1131                     l5012:	
 18681  1131  1BC6               	btfsc	___fldiv@b+2,7
 18682  1132  2948               	goto	l5014
 18683  1133  3001               	movlw	1
 18684  1134                     u6555:	
 18685  1134  35C4               	lslf	___fldiv@b,f
 18686  1135  0DC5               	rlf	___fldiv@b+1,f
 18687  1136  0DC6               	rlf	___fldiv@b+2,f
 18688  1137  0DC7               	rlf	___fldiv@b+3,f
 18689  1138  0B89               	decfsz	9,f
 18690  1139  2934               	goto	u6555
 18691  113A  1BD7               	btfsc	___fldiv@grs+3,7
 18692  113B  1444               	bsf	___fldiv@b,0
 18693  113C  3001               	movlw	1
 18694  113D                     u6575:	
 18695  113D  35D4               	lslf	___fldiv@grs,f
 18696  113E  0DD5               	rlf	___fldiv@grs+1,f
 18697  113F  0DD6               	rlf	___fldiv@grs+2,f
 18698  1140  0DD7               	rlf	___fldiv@grs+3,f
 18699  1141  0B89               	decfsz	9,f
 18700  1142  293D               	goto	u6575
 18701  1143  30FF               	movlw	255
 18702  1144  07D2               	addwf	___fldiv@new_exp,f
 18703  1145  30FF               	movlw	255
 18704  1146  3DD3               	addwfc	___fldiv@new_exp+1,f
 18705  1147  2931               	goto	l5012
 18706  1148                     l5014:	
 18707  1148  01D9               	clrf	___fldiv@aexp
 18708  1149  1FD7               	btfss	___fldiv@grs+3,7
 18709  114A  2961               	goto	l5024
 18710  114B  30FF               	movlw	255
 18711  114C  0554               	andwf	___fldiv@grs,w
 18712  114D  00C8               	movwf	??___fldiv
 18713  114E  30FF               	movlw	255
 18714  114F  0555               	andwf	___fldiv@grs+1,w
 18715  1150  00C9               	movwf	??___fldiv+1
 18716  1151  30FF               	movlw	255
 18717  1152  0556               	andwf	___fldiv@grs+2,w
 18718  1153  00CA               	movwf	??___fldiv+2
 18719  1154  307F               	movlw	127
 18720  1155  0557               	andwf	___fldiv@grs+3,w
 18721  1156  00CB               	movwf	??___fldiv+3
 18722  1157  084B               	movf	??___fldiv+3,w
 18723  1158  044A               	iorwf	??___fldiv+2,w
 18724  1159  0449               	iorwf	??___fldiv+1,w
 18725  115A  0448               	iorwf	??___fldiv,w
 18726  115B  1903               	skipnz
 18727  115C  1844               	btfsc	___fldiv@b,0
 18728  115D  295F               	goto	l5020
 18729  115E  2961               	goto	l5024
 18730  115F                     l5020:	
 18731  115F  01D9               	clrf	___fldiv@aexp
 18732  1160  0AD9               	incf	___fldiv@aexp,f
 18733  1161                     l5024:	
 18734  1161  0859               	movf	___fldiv@aexp,w
 18735  1162  1903               	btfsc	3,2
 18736  1163  298A               	goto	l5034
 18737  1164  3001               	movlw	1
 18738  1165  07C4               	addwf	___fldiv@b,f
 18739  1166  3000               	movlw	0
 18740  1167  3DC5               	addwfc	___fldiv@b+1,f
 18741  1168  3000               	movlw	0
 18742  1169  3DC6               	addwfc	___fldiv@b+2,f
 18743  116A  3000               	movlw	0
 18744  116B  3DC7               	addwfc	___fldiv@b+3,f
 18745  116C  1C47               	btfss	___fldiv@b+3,0
 18746  116D  298A               	goto	l5034
 18747  116E  0844               	movf	___fldiv@b,w
 18748  116F  00C8               	movwf	??___fldiv
 18749  1170  0845               	movf	___fldiv@b+1,w
 18750  1171  00C9               	movwf	??___fldiv+1
 18751  1172  0846               	movf	___fldiv@b+2,w
 18752  1173  00CA               	movwf	??___fldiv+2
 18753  1174  0847               	movf	___fldiv@b+3,w
 18754  1175  00CB               	movwf	??___fldiv+3
 18755  1176  3001               	movlw	1
 18756  1177  00CC               	movwf	??___fldiv+4
 18757  1178                     u6645:	
 18758  1178  37CB               	asrf	??___fldiv+3,f
 18759  1179  0CCA               	rrf	??___fldiv+2,f
 18760  117A  0CC9               	rrf	??___fldiv+1,f
 18761  117B  0CC8               	rrf	??___fldiv,f
 18762  117C  0BCC               	decfsz	??___fldiv+4,f
 18763  117D  2978               	goto	u6645
 18764  117E  084B               	movf	??___fldiv+3,w
 18765  117F  00C7               	movwf	___fldiv@b+3
 18766  1180  084A               	movf	??___fldiv+2,w
 18767  1181  00C6               	movwf	___fldiv@b+2
 18768  1182  0849               	movf	??___fldiv+1,w
 18769  1183  00C5               	movwf	___fldiv@b+1
 18770  1184  0848               	movf	??___fldiv,w
 18771  1185  00C4               	movwf	___fldiv@b
 18772  1186  3001               	movlw	1
 18773  1187  07D2               	addwf	___fldiv@new_exp,f
 18774  1188  3000               	movlw	0
 18775  1189  3DD3               	addwfc	___fldiv@new_exp+1,f
 18776  118A                     l5034:	
 18777  118A  0853               	movf	___fldiv@new_exp+1,w
 18778  118B  3A80               	xorlw	128
 18779  118C  00C8               	movwf	??___fldiv
 18780  118D  3080               	movlw	128
 18781  118E  0248               	subwf	??___fldiv,w
 18782  118F  1D03               	skipz
 18783  1190  2993               	goto	u6655
 18784  1191  30FF               	movlw	255
 18785  1192  0252               	subwf	___fldiv@new_exp,w
 18786  1193                     u6655:	
 18787  1193  1C03               	skipc
 18788  1194  29A2               	goto	l1252
 18789  1195  30FF               	movlw	255
 18790  1196  0020               	movlb	0	; select bank0
 18791  1197  00D2               	movwf	___fldiv@new_exp
 18792  1198  3000               	movlw	0
 18793  1199  00D3               	movwf	___fldiv@new_exp+1
 18794  119A  3000               	movlw	0
 18795  119B  00C7               	movwf	___fldiv@b+3
 18796  119C  3000               	movlw	0
 18797  119D  00C6               	movwf	___fldiv@b+2
 18798  119E  3000               	movlw	0
 18799  119F  00C5               	movwf	___fldiv@b+1
 18800  11A0  3000               	movlw	0
 18801  11A1  00C4               	movwf	___fldiv@b
 18802  11A2                     l1252:	
 18803  11A2  0020               	movlb	0	; select bank0
 18804  11A3  0853               	movf	___fldiv@new_exp+1,w
 18805  11A4  3A80               	xorlw	128
 18806  11A5  00C8               	movwf	??___fldiv
 18807  11A6  3080               	movlw	128
 18808  11A7  0248               	subwf	??___fldiv,w
 18809  11A8  1D03               	skipz
 18810  11A9  29AC               	goto	u6665
 18811  11AA  3001               	movlw	1
 18812  11AB  0252               	subwf	___fldiv@new_exp,w
 18813  11AC                     u6665:	
 18814  11AC  1803               	skipnc
 18815  11AD  29BA               	goto	l1253
 18816  11AE  0020               	movlb	0	; select bank0
 18817  11AF  01D2               	clrf	___fldiv@new_exp
 18818  11B0  01D3               	clrf	___fldiv@new_exp+1
 18819  11B1  3000               	movlw	0
 18820  11B2  00C7               	movwf	___fldiv@b+3
 18821  11B3  3000               	movlw	0
 18822  11B4  00C6               	movwf	___fldiv@b+2
 18823  11B5  3000               	movlw	0
 18824  11B6  00C5               	movwf	___fldiv@b+1
 18825  11B7  3000               	movlw	0
 18826  11B8  00C4               	movwf	___fldiv@b
 18827  11B9  01D1               	clrf	___fldiv@sign
 18828  11BA                     l1253:	
 18829  11BA  0020               	movlb	0	; select bank0
 18830  11BB  0852               	movf	___fldiv@new_exp,w
 18831  11BC  00C8               	movwf	??___fldiv
 18832  11BD  0848               	movf	??___fldiv,w
 18833  11BE  00D8               	movwf	___fldiv@bexp
 18834  11BF  1C58               	btfss	___fldiv@bexp,0
 18835  11C0  29C3               	goto	l5048
 18836  11C1  17C6               	bsf	___fldiv@b+2,7
 18837  11C2  29C7               	goto	l1255
 18838  11C3                     l5048:	
 18839  11C3  307F               	movlw	127
 18840  11C4  00C8               	movwf	??___fldiv
 18841  11C5  0848               	movf	??___fldiv,w
 18842  11C6  05C6               	andwf	___fldiv@b+2,f
 18843  11C7                     l1255:	
 18844  11C7  3658               	lsrf	___fldiv@bexp,w
 18845  11C8  00C8               	movwf	??___fldiv
 18846  11C9  0848               	movf	??___fldiv,w
 18847  11CA  00C7               	movwf	___fldiv@b+3
 18848  11CB  28AD               	goto	L14
 18849  11CC                     __end_of___fldiv:	
 18850                           
 18851                           	psect	text70
 18852  332D                     __ptext70:	
 18853 ;; *************** function _init_TMR1 *****************
 18854 ;; Defined at:
 18855 ;;		line 172 in file "main.c"
 18856 ;; Parameters:    Size  Location     Type
 18857 ;;		None
 18858 ;; Auto vars:     Size  Location     Type
 18859 ;;		None
 18860 ;; Return value:  Size  Location     Type
 18861 ;;                  1    wreg      void 
 18862 ;; Registers used:
 18863 ;;		wreg, status,2, status,0
 18864 ;; Tracked objects:
 18865 ;;		On entry : 0/0
 18866 ;;		On exit  : 0/0
 18867 ;;		Unchanged: 0/0
 18868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18873 ;;Total ram usage:        0 bytes
 18874 ;; Hardware stack levels used:    1
 18875 ;; Hardware stack levels required when called:    1
 18876 ;; This function calls:
 18877 ;;		Nothing
 18878 ;; This function is called by:
 18879 ;;		_main
 18880 ;; This function uses a non-reentrant model
 18881 ;;
 18882                           
 18883                           
 18884                           ;psect for function _init_TMR1
 18885  332D                     _init_TMR1:	
 18886                           
 18887                           ;main.c: 175:     T1CONbits.T1CKPS = 0b00;
 18888                           
 18889                           ;incstack = 0
 18890                           ; Regs used in _init_TMR1: [wreg+status,2+status,0]
 18891  332D  30CF               	movlw	-49
 18892  332E  0020               	movlb	0	; select bank0
 18893  332F  0598               	andwf	24,f	;volatile
 18894                           
 18895                           ;main.c: 177:     TMR1 = 0;
 18896  3330  0196               	clrf	22	;volatile
 18897  3331  0197               	clrf	23	;volatile
 18898                           
 18899                           ;main.c: 179:     T1CONbits.TMR1ON = 1;
 18900  3332  1418               	bsf	24,0	;volatile
 18901                           
 18902                           ;main.c: 181:     PIE1bits.TMR1IE = 1;
 18903  3333  0021               	movlb	1	; select bank1
 18904  3334  1411               	bsf	17,0	;volatile
 18905                           
 18906                           ;main.c: 183:     INTCONbits.PEIE = 1;
 18907  3335  170B               	bsf	11,6	;volatile
 18908                           
 18909                           ;main.c: 185:     (INTCONbits.GIE = 1);
 18910  3336  178B               	bsf	11,7	;volatile
 18911  3337  0008               	return
 18912  3338                     __end_of_init_TMR1:	
 18913                           
 18914                           	psect	text71
 18915  1801                     __ptext71:	
 18916 ;; *************** function _init_RGB *****************
 18917 ;; Defined at:
 18918 ;;		line 6 in file "RGB.c"
 18919 ;; Parameters:    Size  Location     Type
 18920 ;;		None
 18921 ;; Auto vars:     Size  Location     Type
 18922 ;;		None
 18923 ;; Return value:  Size  Location     Type
 18924 ;;                  1    wreg      void 
 18925 ;; Registers used:
 18926 ;;		None
 18927 ;; Tracked objects:
 18928 ;;		On entry : 0/0
 18929 ;;		On exit  : 0/0
 18930 ;;		Unchanged: 0/0
 18931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18936 ;;Total ram usage:        0 bytes
 18937 ;; Hardware stack levels used:    1
 18938 ;; Hardware stack levels required when called:    1
 18939 ;; This function calls:
 18940 ;;		Nothing
 18941 ;; This function is called by:
 18942 ;;		_main
 18943 ;; This function uses a non-reentrant model
 18944 ;;
 18945                           
 18946                           
 18947                           ;psect for function _init_RGB
 18948  1801                     _init_RGB:	
 18949                           
 18950                           ;RGB.c: 8:     LATAbits.LATA4 = 1;
 18951                           
 18952                           ;incstack = 0
 18953                           ; Regs used in _init_RGB: []
 18954  1801  0022               	movlb	2	; select bank2
 18955  1802  160C               	bsf	12,4	;volatile
 18956                           
 18957                           ;RGB.c: 9:     LATAbits.LATA5 = 1;
 18958  1803  168C               	bsf	12,5	;volatile
 18959                           
 18960                           ;RGB.c: 10:     LATEbits.LATE0 = 1;
 18961  1804  1410               	bsf	16,0	;volatile
 18962  1805  0008               	return
 18963  1806                     __end_of_init_RGB:	
 18964                           
 18965                           	psect	text72
 18966  3344                     __ptext72:	
 18967 ;; *************** function _init_I2C *****************
 18968 ;; Defined at:
 18969 ;;		line 10 in file "I2C.c"
 18970 ;; Parameters:    Size  Location     Type
 18971 ;;		None
 18972 ;; Auto vars:     Size  Location     Type
 18973 ;;		None
 18974 ;; Return value:  Size  Location     Type
 18975 ;;                  1    wreg      void 
 18976 ;; Registers used:
 18977 ;;		wreg, status,2, status,0
 18978 ;; Tracked objects:
 18979 ;;		On entry : 0/0
 18980 ;;		On exit  : 0/0
 18981 ;;		Unchanged: 0/0
 18982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18985 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18986 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18987 ;;Total ram usage:        1 bytes
 18988 ;; Hardware stack levels used:    1
 18989 ;; Hardware stack levels required when called:    1
 18990 ;; This function calls:
 18991 ;;		Nothing
 18992 ;; This function is called by:
 18993 ;;		_main
 18994 ;; This function uses a non-reentrant model
 18995 ;;
 18996                           
 18997                           
 18998                           ;psect for function _init_I2C
 18999  3344                     _init_I2C:	
 19000                           
 19001                           ;I2C.c: 14:     SSPCONbits.SSPM = 0x08;
 19002                           
 19003                           ;incstack = 0
 19004                           ; Regs used in _init_I2C: [wreg+status,2+status,0]
 19005  3344  0024               	movlb	4	; select bank4
 19006  3345  0815               	movf	21,w	;volatile
 19007  3346  39F0               	andlw	-16
 19008  3347  3808               	iorlw	8
 19009  3348  0095               	movwf	21	;volatile
 19010                           
 19011                           ;I2C.c: 15:     SSPCONbits.SSPEN = 1;
 19012  3349  1695               	bsf	21,5	;volatile
 19013                           
 19014                           ;I2C.c: 24:     SSPADD = 39;
 19015  334A  3027               	movlw	39
 19016  334B  0092               	movwf	18	;volatile
 19017                           
 19018                           ;I2C.c: 27:     _delay((unsigned long)((10)*(16000000/4000.0)));
 19019  334C  3034               	movlw	52
 19020  334D  00F1               	movwf	??_init_I2C
 19021  334E  30F2               	movlw	242
 19022  334F                     u12047:	
 19023  334F  0B89               	decfsz	9,f
 19024  3350  2B4F               	goto	u12047
 19025  3351  0BF1               	decfsz	??_init_I2C,f
 19026  3352  2B4F               	goto	u12047
 19027  3353  0008               	return
 19028  3354                     __end_of_init_I2C:	
 19029                           
 19030                           	psect	text73
 19031  1806                     __ptext73:	
 19032 ;; *************** function _init_GPIO *****************
 19033 ;; Defined at:
 19034 ;;		line 189 in file "main.c"
 19035 ;; Parameters:    Size  Location     Type
 19036 ;;		None
 19037 ;; Auto vars:     Size  Location     Type
 19038 ;;		None
 19039 ;; Return value:  Size  Location     Type
 19040 ;;                  1    wreg      void 
 19041 ;; Registers used:
 19042 ;;		wreg, status,2, status,0
 19043 ;; Tracked objects:
 19044 ;;		On entry : 0/0
 19045 ;;		On exit  : 0/0
 19046 ;;		Unchanged: 0/0
 19047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19052 ;;Total ram usage:        0 bytes
 19053 ;; Hardware stack levels used:    1
 19054 ;; Hardware stack levels required when called:    1
 19055 ;; This function calls:
 19056 ;;		Nothing
 19057 ;; This function is called by:
 19058 ;;		_main
 19059 ;; This function uses a non-reentrant model
 19060 ;;
 19061                           
 19062                           
 19063                           ;psect for function _init_GPIO
 19064  1806                     _init_GPIO:	
 19065                           
 19066                           ;main.c: 195:     TRISBbits.TRISB2 = 0;
 19067                           
 19068                           ;incstack = 0
 19069                           ; Regs used in _init_GPIO: [wreg+status,2+status,0]
 19070  1806  0021               	movlb	1	; select bank1
 19071  1807  110D               	bcf	13,2	;volatile
 19072                           
 19073                           ;main.c: 196:     ANSELBbits.ANSB2 = 0;
 19074  1808  0023               	movlb	3	; select bank3
 19075  1809  110D               	bcf	13,2	;volatile
 19076                           
 19077                           ;main.c: 197:     TRISBbits.TRISB3 = 1;
 19078  180A  0021               	movlb	1	; select bank1
 19079  180B  158D               	bsf	13,3	;volatile
 19080                           
 19081                           ;main.c: 198:     ANSELBbits.ANSB3 = 0;
 19082  180C  0023               	movlb	3	; select bank3
 19083  180D  118D               	bcf	13,3	;volatile
 19084                           
 19085                           ;main.c: 203:     ANSELCbits.ANSC4 = 0;
 19086  180E  120E               	bcf	14,4	;volatile
 19087                           
 19088                           ;main.c: 204:     ANSELCbits.ANSC5 = 0;
 19089  180F  128E               	bcf	14,5	;volatile
 19090                           
 19091                           ;main.c: 205:     TRISCbits.TRISC4 = 1;
 19092  1810  0021               	movlb	1	; select bank1
 19093  1811  160E               	bsf	14,4	;volatile
 19094                           
 19095                           ;main.c: 206:     TRISCbits.TRISC5 = 1;
 19096  1812  168E               	bsf	14,5	;volatile
 19097                           
 19098                           ;main.c: 215:     TRISAbits.TRISA4 = 0;
 19099  1813  120C               	bcf	12,4	;volatile
 19100                           
 19101                           ;main.c: 216:     TRISAbits.TRISA5 = 0;
 19102  1814  128C               	bcf	12,5	;volatile
 19103                           
 19104                           ;main.c: 217:     TRISEbits.TRISE0 = 0;
 19105  1815  1010               	bcf	16,0	;volatile
 19106                           
 19107                           ;main.c: 223:     PPSLOCK = 0x55;
 19108  1816  3055               	movlw	85
 19109  1817  003C               	movlb	28	; select bank28
 19110  1818  008F               	movwf	15	;volsfr
 19111                           
 19112                           ;main.c: 224:     PPSLOCK = 0xAA;
 19113  1819  30AA               	movlw	170
 19114  181A  008F               	movwf	15	;volsfr
 19115                           
 19116                           ;main.c: 225:     PPSLOCKbits.PPSLOCKED = 0x00;
 19117  181B  100F               	bcf	15,0	;volsfr
 19118                           
 19119                           ;main.c: 229:     RC4PPSbits.RC4PPS = 0x0011;
 19120  181C  003D               	movlb	29	; select bank29
 19121  181D  0824               	movf	36,w	;volatile
 19122  181E  39E0               	andlw	-32
 19123  181F  3811               	iorlw	17
 19124  1820  00A4               	movwf	36	;volatile
 19125                           
 19126                           ;main.c: 230:     SSPDATPPSbits.SSPDATPPS = 0x0014;
 19127  1821  003C               	movlb	28	; select bank28
 19128  1822  0821               	movf	33,w	;volatile
 19129  1823  39E0               	andlw	-32
 19130  1824  3814               	iorlw	20
 19131  1825  00A1               	movwf	33	;volatile
 19132                           
 19133                           ;main.c: 231:     SSPCLKPPSbits.SSPCLKPPS = 0x0015;
 19134  1826  0820               	movf	32,w	;volatile
 19135  1827  39E0               	andlw	-32
 19136  1828  3815               	iorlw	21
 19137  1829  00A0               	movwf	32	;volatile
 19138                           
 19139                           ;main.c: 232:     RC5PPSbits.RC5PPS = 0x0010;
 19140  182A  003D               	movlb	29	; select bank29
 19141  182B  0825               	movf	37,w	;volatile
 19142  182C  39E0               	andlw	-32
 19143  182D  3810               	iorlw	16
 19144  182E  00A5               	movwf	37	;volatile
 19145                           
 19146                           ;main.c: 235:     RB2PPSbits.RB2PPS = 0x14;
 19147  182F  081A               	movf	26,w	;volatile
 19148  1830  39E0               	andlw	-32
 19149  1831  3814               	iorlw	20
 19150  1832  009A               	movwf	26	;volatile
 19151                           
 19152                           ;main.c: 236:     RXPPSbits.RXPPS = 0x0B;
 19153  1833  003C               	movlb	28	; select bank28
 19154  1834  0824               	movf	36,w	;volatile
 19155  1835  39E0               	andlw	-32
 19156  1836  380B               	iorlw	11
 19157  1837  00A4               	movwf	36	;volatile
 19158                           
 19159                           ;main.c: 238:     PPSLOCK = 0x55;
 19160  1838  3055               	movlw	85
 19161  1839  008F               	movwf	15	;volsfr
 19162                           
 19163                           ;main.c: 239:     PPSLOCK = 0xAA;
 19164  183A  30AA               	movlw	170
 19165  183B  008F               	movwf	15	;volsfr
 19166                           
 19167                           ;main.c: 240:     PPSLOCKbits.PPSLOCKED = 0x01;
 19168  183C  140F               	bsf	15,0	;volsfr
 19169  183D  0008               	return
 19170  183E                     __end_of_init_GPIO:	
 19171                           
 19172                           	psect	text74
 19173  2801                     __ptext74:	
 19174 ;; *************** function _initClock *****************
 19175 ;; Defined at:
 19176 ;;		line 163 in file "main.c"
 19177 ;; Parameters:    Size  Location     Type
 19178 ;;		None
 19179 ;; Auto vars:     Size  Location     Type
 19180 ;;		None
 19181 ;; Return value:  Size  Location     Type
 19182 ;;                  1    wreg      void 
 19183 ;; Registers used:
 19184 ;;		status,2, status,0, pclath, cstack
 19185 ;; Tracked objects:
 19186 ;;		On entry : 0/0
 19187 ;;		On exit  : 0/0
 19188 ;;		Unchanged: 0/0
 19189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19194 ;;Total ram usage:        0 bytes
 19195 ;; Hardware stack levels used:    1
 19196 ;; Hardware stack levels required when called:    2
 19197 ;; This function calls:
 19198 ;;		_internal_16
 19199 ;; This function is called by:
 19200 ;;		_main
 19201 ;; This function uses a non-reentrant model
 19202 ;;
 19203                           
 19204                           
 19205                           ;psect for function _initClock
 19206  2801                     _initClock:	
 19207                           
 19208                           ;main.c: 165:     internal_16();
 19209                           
 19210                           ;incstack = 0
 19211                           ; Regs used in _initClock: [status,2+status,0+pclath+cstack]
 19212  2801  31B2  22EB         	fcall	_internal_16
 19213  2803  0008               	return
 19214  2804                     __end_of_initClock:	
 19215                           
 19216                           	psect	text75
 19217  32EB                     __ptext75:	
 19218 ;; *************** function _internal_16 *****************
 19219 ;; Defined at:
 19220 ;;		line 26 in file "pic16f1719_internals.c"
 19221 ;; Parameters:    Size  Location     Type
 19222 ;;		None
 19223 ;; Auto vars:     Size  Location     Type
 19224 ;;		None
 19225 ;; Return value:  Size  Location     Type
 19226 ;;                  1    wreg      void 
 19227 ;; Registers used:
 19228 ;;		None
 19229 ;; Tracked objects:
 19230 ;;		On entry : 0/0
 19231 ;;		On exit  : 0/0
 19232 ;;		Unchanged: 0/0
 19233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19238 ;;Total ram usage:        0 bytes
 19239 ;; Hardware stack levels used:    1
 19240 ;; Hardware stack levels required when called:    1
 19241 ;; This function calls:
 19242 ;;		Nothing
 19243 ;; This function is called by:
 19244 ;;		_initClock
 19245 ;; This function uses a non-reentrant model
 19246 ;;
 19247                           
 19248                           
 19249                           ;psect for function _internal_16
 19250  32EB                     _internal_16:	
 19251                           
 19252                           ;pic16f1719_internals.c: 28: SCS0 = 0;
 19253                           
 19254                           ;incstack = 0
 19255                           ; Regs used in _internal_16: []
 19256  32EB  0021               	movlb	1	; select bank1
 19257  32EC  1019               	bcf	25,0	;volatile
 19258                           
 19259                           ;pic16f1719_internals.c: 29: SCS1 = 0;
 19260  32ED  1099               	bcf	25,1	;volatile
 19261                           
 19262                           ;pic16f1719_internals.c: 31: IRCF0 = 1;
 19263  32EE  1599               	bsf	25,3	;volatile
 19264                           
 19265                           ;pic16f1719_internals.c: 32: IRCF1 = 1;
 19266  32EF  1619               	bsf	25,4	;volatile
 19267                           
 19268                           ;pic16f1719_internals.c: 33: IRCF2 = 1;
 19269  32F0  1699               	bsf	25,5	;volatile
 19270                           
 19271                           ;pic16f1719_internals.c: 34: IRCF3 = 1;
 19272  32F1  1719               	bsf	25,6	;volatile
 19273                           
 19274                           ;pic16f1719_internals.c: 36: SPLLEN = 0;
 19275  32F2  1399               	bcf	25,7	;volatile
 19276  32F3  0008               	return
 19277  32F4                     __end_of_internal_16:	
 19278                           
 19279                           	psect	text76
 19280  2EA4                     __ptext76:	
 19281 ;; *************** function _EUSART_Initialize *****************
 19282 ;; Defined at:
 19283 ;;		line 6 in file "EUSART.c"
 19284 ;; Parameters:    Size  Location     Type
 19285 ;;  baudrate        4    6[BANK0 ] const long 
 19286 ;; Auto vars:     Size  Location     Type
 19287 ;;  x               2   10[COMMON] unsigned int 
 19288 ;; Return value:  Size  Location     Type
 19289 ;;                  1    wreg      unsigned char 
 19290 ;; Registers used:
 19291 ;;		wreg, status,2, status,0, pclath, cstack
 19292 ;; Tracked objects:
 19293 ;;		On entry : 0/0
 19294 ;;		On exit  : 0/0
 19295 ;;		Unchanged: 0/0
 19296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19297 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19298 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19299 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19300 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19301 ;;Total ram usage:       18 bytes
 19302 ;; Hardware stack levels used:    1
 19303 ;; Hardware stack levels required when called:    2
 19304 ;; This function calls:
 19305 ;;		___aldiv
 19306 ;; This function is called by:
 19307 ;;		_main
 19308 ;; This function uses a non-reentrant model
 19309 ;;
 19310                           
 19311                           
 19312                           ;psect for function _EUSART_Initialize
 19313  2EA4                     _EUSART_Initialize:	
 19314                           
 19315                           ;EUSART.c: 6: char EUSART_Initialize(const long int baudrate);EUSART.c: 7: {;EUSART.c: 8
      +                          :  unsigned int x;;EUSART.c: 9:  x = (16000000 - baudrate*64)/(baudrate*64);
 19316                           
 19317                           ;incstack = 0
 19318                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 19319  2EA4  0020               	movlb	0	; select bank0
 19320  2EA5  0826               	movf	EUSART_Initialize@baudrate,w
 19321  2EA6  00AA               	movwf	??_EUSART_Initialize
 19322  2EA7  0827               	movf	EUSART_Initialize@baudrate+1,w
 19323  2EA8  00AB               	movwf	??_EUSART_Initialize+1
 19324  2EA9  0828               	movf	EUSART_Initialize@baudrate+2,w
 19325  2EAA  00AC               	movwf	??_EUSART_Initialize+2
 19326  2EAB  0829               	movf	EUSART_Initialize@baudrate+3,w
 19327  2EAC  00AD               	movwf	??_EUSART_Initialize+3
 19328  2EAD  3006               	movlw	6
 19329  2EAE                     u9335:	
 19330  2EAE  35AA               	lslf	??_EUSART_Initialize,f
 19331  2EAF  0DAB               	rlf	??_EUSART_Initialize+1,f
 19332  2EB0  0DAC               	rlf	??_EUSART_Initialize+2,f
 19333  2EB1  0DAD               	rlf	??_EUSART_Initialize+3,f
 19334  2EB2  0B89               	decfsz	9,f
 19335  2EB3  2EAE               	goto	u9335
 19336  2EB4  082D               	movf	??_EUSART_Initialize+3,w
 19337  2EB5  00F4               	movwf	___aldiv@divisor+3
 19338  2EB6  082C               	movf	??_EUSART_Initialize+2,w
 19339  2EB7  00F3               	movwf	___aldiv@divisor+2
 19340  2EB8  082B               	movf	??_EUSART_Initialize+1,w
 19341  2EB9  00F2               	movwf	___aldiv@divisor+1
 19342  2EBA  082A               	movf	??_EUSART_Initialize,w
 19343  2EBB  00F1               	movwf	___aldiv@divisor
 19344  2EBC  0826               	movf	EUSART_Initialize@baudrate,w
 19345  2EBD  00AE               	movwf	??_EUSART_Initialize+4
 19346  2EBE  0827               	movf	EUSART_Initialize@baudrate+1,w
 19347  2EBF  00AF               	movwf	??_EUSART_Initialize+5
 19348  2EC0  0828               	movf	EUSART_Initialize@baudrate+2,w
 19349  2EC1  00B0               	movwf	??_EUSART_Initialize+6
 19350  2EC2  0829               	movf	EUSART_Initialize@baudrate+3,w
 19351  2EC3  00B1               	movwf	??_EUSART_Initialize+7
 19352  2EC4  3006               	movlw	6
 19353  2EC5                     u9345:	
 19354  2EC5  35AE               	lslf	??_EUSART_Initialize+4,f
 19355  2EC6  0DAF               	rlf	??_EUSART_Initialize+5,f
 19356  2EC7  0DB0               	rlf	??_EUSART_Initialize+6,f
 19357  2EC8  0DB1               	rlf	??_EUSART_Initialize+7,f
 19358  2EC9  0B89               	decfsz	9,f
 19359  2ECA  2EC5               	goto	u9345
 19360  2ECB  3000               	movlw	0
 19361  2ECC  00B2               	movwf	??_EUSART_Initialize+8
 19362  2ECD  3024               	movlw	36
 19363  2ECE  00B3               	movwf	??_EUSART_Initialize+9
 19364  2ECF  30F4               	movlw	244
 19365  2ED0  00B4               	movwf	??_EUSART_Initialize+10
 19366  2ED1  3000               	movlw	0
 19367  2ED2  00B5               	movwf	??_EUSART_Initialize+11
 19368  2ED3  082E               	movf	??_EUSART_Initialize+4,w
 19369  2ED4  02B2               	subwf	??_EUSART_Initialize+8,f
 19370  2ED5  082F               	movf	??_EUSART_Initialize+5,w
 19371  2ED6  3BB3               	subwfb	??_EUSART_Initialize+9,f
 19372  2ED7  0830               	movf	??_EUSART_Initialize+6,w
 19373  2ED8  3BB4               	subwfb	??_EUSART_Initialize+10,f
 19374  2ED9  0831               	movf	??_EUSART_Initialize+7,w
 19375  2EDA  3BB5               	subwfb	??_EUSART_Initialize+11,f
 19376  2EDB  0835               	movf	??_EUSART_Initialize+11,w
 19377  2EDC  00F8               	movwf	___aldiv@dividend+3
 19378  2EDD  0834               	movf	??_EUSART_Initialize+10,w
 19379  2EDE  00F7               	movwf	___aldiv@dividend+2
 19380  2EDF  0833               	movf	??_EUSART_Initialize+9,w
 19381  2EE0  00F6               	movwf	___aldiv@dividend+1
 19382  2EE1  0832               	movf	??_EUSART_Initialize+8,w
 19383  2EE2  00F5               	movwf	___aldiv@dividend
 19384  2EE3  31AB  233C  31AE   	fcall	___aldiv
 19385  2EE6  0872               	movf	?___aldiv+1,w
 19386  2EE7  00FB               	movwf	EUSART_Initialize@x+1
 19387  2EE8  0871               	movf	?___aldiv,w
 19388  2EE9  00FA               	movwf	EUSART_Initialize@x
 19389                           
 19390                           ;EUSART.c: 10:  if(x>255)
 19391  2EEA  3001               	movlw	1
 19392  2EEB  027B               	subwf	EUSART_Initialize@x+1,w
 19393  2EEC  3000               	movlw	0
 19394  2EED  1903               	skipnz
 19395  2EEE  027A               	subwf	EUSART_Initialize@x,w
 19396  2EEF  1C03               	skipc
 19397  2EF0  2F39               	goto	l6696
 19398                           
 19399                           ;EUSART.c: 11:  {;EUSART.c: 12:   x = (16000000 - baudrate*16)/(baudrate*16);
 19400  2EF1  0020               	movlb	0	; select bank0
 19401  2EF2  0826               	movf	EUSART_Initialize@baudrate,w
 19402  2EF3  00AA               	movwf	??_EUSART_Initialize
 19403  2EF4  0827               	movf	EUSART_Initialize@baudrate+1,w
 19404  2EF5  00AB               	movwf	??_EUSART_Initialize+1
 19405  2EF6  0828               	movf	EUSART_Initialize@baudrate+2,w
 19406  2EF7  00AC               	movwf	??_EUSART_Initialize+2
 19407  2EF8  0829               	movf	EUSART_Initialize@baudrate+3,w
 19408  2EF9  00AD               	movwf	??_EUSART_Initialize+3
 19409  2EFA  3004               	movlw	4
 19410  2EFB                     u9365:	
 19411  2EFB  35AA               	lslf	??_EUSART_Initialize,f
 19412  2EFC  0DAB               	rlf	??_EUSART_Initialize+1,f
 19413  2EFD  0DAC               	rlf	??_EUSART_Initialize+2,f
 19414  2EFE  0DAD               	rlf	??_EUSART_Initialize+3,f
 19415  2EFF  0B89               	decfsz	9,f
 19416  2F00  2EFB               	goto	u9365
 19417  2F01  082D               	movf	??_EUSART_Initialize+3,w
 19418  2F02  00F4               	movwf	___aldiv@divisor+3
 19419  2F03  082C               	movf	??_EUSART_Initialize+2,w
 19420  2F04  00F3               	movwf	___aldiv@divisor+2
 19421  2F05  082B               	movf	??_EUSART_Initialize+1,w
 19422  2F06  00F2               	movwf	___aldiv@divisor+1
 19423  2F07  082A               	movf	??_EUSART_Initialize,w
 19424  2F08  00F1               	movwf	___aldiv@divisor
 19425  2F09  0826               	movf	EUSART_Initialize@baudrate,w
 19426  2F0A  00AE               	movwf	??_EUSART_Initialize+4
 19427  2F0B  0827               	movf	EUSART_Initialize@baudrate+1,w
 19428  2F0C  00AF               	movwf	??_EUSART_Initialize+5
 19429  2F0D  0828               	movf	EUSART_Initialize@baudrate+2,w
 19430  2F0E  00B0               	movwf	??_EUSART_Initialize+6
 19431  2F0F  0829               	movf	EUSART_Initialize@baudrate+3,w
 19432  2F10  00B1               	movwf	??_EUSART_Initialize+7
 19433  2F11  3004               	movlw	4
 19434  2F12                     u9375:	
 19435  2F12  35AE               	lslf	??_EUSART_Initialize+4,f
 19436  2F13  0DAF               	rlf	??_EUSART_Initialize+5,f
 19437  2F14  0DB0               	rlf	??_EUSART_Initialize+6,f
 19438  2F15  0DB1               	rlf	??_EUSART_Initialize+7,f
 19439  2F16  0B89               	decfsz	9,f
 19440  2F17  2F12               	goto	u9375
 19441  2F18  3000               	movlw	0
 19442  2F19  00B2               	movwf	??_EUSART_Initialize+8
 19443  2F1A  3024               	movlw	36
 19444  2F1B  00B3               	movwf	??_EUSART_Initialize+9
 19445  2F1C  30F4               	movlw	244
 19446  2F1D  00B4               	movwf	??_EUSART_Initialize+10
 19447  2F1E  3000               	movlw	0
 19448  2F1F  00B5               	movwf	??_EUSART_Initialize+11
 19449  2F20  082E               	movf	??_EUSART_Initialize+4,w
 19450  2F21  02B2               	subwf	??_EUSART_Initialize+8,f
 19451  2F22  082F               	movf	??_EUSART_Initialize+5,w
 19452  2F23  3BB3               	subwfb	??_EUSART_Initialize+9,f
 19453  2F24  0830               	movf	??_EUSART_Initialize+6,w
 19454  2F25  3BB4               	subwfb	??_EUSART_Initialize+10,f
 19455  2F26  0831               	movf	??_EUSART_Initialize+7,w
 19456  2F27  3BB5               	subwfb	??_EUSART_Initialize+11,f
 19457  2F28  0835               	movf	??_EUSART_Initialize+11,w
 19458  2F29  00F8               	movwf	___aldiv@dividend+3
 19459  2F2A  0834               	movf	??_EUSART_Initialize+10,w
 19460  2F2B  00F7               	movwf	___aldiv@dividend+2
 19461  2F2C  0833               	movf	??_EUSART_Initialize+9,w
 19462  2F2D  00F6               	movwf	___aldiv@dividend+1
 19463  2F2E  0832               	movf	??_EUSART_Initialize+8,w
 19464  2F2F  00F5               	movwf	___aldiv@dividend
 19465  2F30  31AB  233C  31AE   	fcall	___aldiv
 19466  2F33  0872               	movf	?___aldiv+1,w
 19467  2F34  00FB               	movwf	EUSART_Initialize@x+1
 19468  2F35  0871               	movf	?___aldiv,w
 19469  2F36  00FA               	movwf	EUSART_Initialize@x
 19470                           
 19471                           ;EUSART.c: 13:   BRGH = 1;
 19472  2F37  0023               	movlb	3	; select bank3
 19473  2F38  151E               	bsf	30,2	;volatile
 19474  2F39                     l6696:	
 19475                           
 19476                           ;EUSART.c: 15:  if(x<256)
 19477  2F39  3001               	movlw	1
 19478  2F3A  027B               	subwf	EUSART_Initialize@x+1,w
 19479  2F3B  3000               	movlw	0
 19480  2F3C  1903               	skipnz
 19481  2F3D  027A               	subwf	EUSART_Initialize@x,w
 19482  2F3E  1803               	skipnc
 19483  2F3F  0008               	return
 19484                           
 19485                           ;EUSART.c: 16:  {;EUSART.c: 17:    SPBRG = x;
 19486  2F40  087A               	movf	EUSART_Initialize@x,w
 19487  2F41  0023               	movlb	3	; select bank3
 19488  2F42  009B               	movwf	27	;volatile
 19489                           
 19490                           ;EUSART.c: 18:    SYNC = 0;
 19491  2F43  121E               	bcf	30,4	;volatile
 19492                           
 19493                           ;EUSART.c: 19:    SPEN = 1;
 19494  2F44  179D               	bsf	29,7	;volatile
 19495                           
 19496                           ;EUSART.c: 20:           TRISC7 = 1;
 19497  2F45  0021               	movlb	1	; select bank1
 19498  2F46  178E               	bsf	14,7	;volatile
 19499                           
 19500                           ;EUSART.c: 21:           TRISC6 = 1;
 19501  2F47  170E               	bsf	14,6	;volatile
 19502                           
 19503                           ;EUSART.c: 22:           CREN = 1;
 19504  2F48  0023               	movlb	3	; select bank3
 19505  2F49  161D               	bsf	29,4	;volatile
 19506                           
 19507                           ;EUSART.c: 23:           TXEN = 1;
 19508  2F4A  169E               	bsf	30,5	;volatile
 19509  2F4B  0008               	return
 19510  2F4C                     __end_of_EUSART_Initialize:	
 19511                           
 19512                           	psect	text77
 19513  2B3C                     __ptext77:	
 19514 ;; *************** function ___aldiv *****************
 19515 ;; Defined at:
 19516 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
 19517 ;; Parameters:    Size  Location     Type
 19518 ;;  divisor         4    1[COMMON] long 
 19519 ;;  dividend        4    5[COMMON] long 
 19520 ;; Auto vars:     Size  Location     Type
 19521 ;;  quotient        4    2[BANK0 ] long 
 19522 ;;  sign            1    1[BANK0 ] unsigned char 
 19523 ;;  counter         1    0[BANK0 ] unsigned char 
 19524 ;; Return value:  Size  Location     Type
 19525 ;;                  4    1[COMMON] long 
 19526 ;; Registers used:
 19527 ;;		wreg, status,2, status,0
 19528 ;; Tracked objects:
 19529 ;;		On entry : 0/0
 19530 ;;		On exit  : 0/0
 19531 ;;		Unchanged: 0/0
 19532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19533 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19534 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19535 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19536 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19537 ;;Total ram usage:       15 bytes
 19538 ;; Hardware stack levels used:    1
 19539 ;; Hardware stack levels required when called:    1
 19540 ;; This function calls:
 19541 ;;		Nothing
 19542 ;; This function is called by:
 19543 ;;		_EUSART_Initialize
 19544 ;;		_setCellUndervoltageProtection
 19545 ;; This function uses a non-reentrant model
 19546 ;;
 19547                           
 19548                           
 19549                           ;psect for function ___aldiv
 19550  2B3C                     ___aldiv:	
 19551                           
 19552                           ;incstack = 0
 19553                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 19554  2B3C  0020               	movlb	0	; select bank0
 19555  2B3D  01A1               	clrf	___aldiv@sign
 19556  2B3E  1FF4               	btfss	___aldiv@divisor+3,7
 19557  2B3F  2B4D               	goto	l939
 19558  2B40  09F1               	comf	___aldiv@divisor,f
 19559  2B41  09F2               	comf	___aldiv@divisor+1,f
 19560  2B42  09F3               	comf	___aldiv@divisor+2,f
 19561  2B43  09F4               	comf	___aldiv@divisor+3,f
 19562  2B44  0AF1               	incf	___aldiv@divisor,f
 19563  2B45  1903               	skipnz
 19564  2B46  0AF2               	incf	___aldiv@divisor+1,f
 19565  2B47  1903               	skipnz
 19566  2B48  0AF3               	incf	___aldiv@divisor+2,f
 19567  2B49  1903               	skipnz
 19568  2B4A  0AF4               	incf	___aldiv@divisor+3,f
 19569  2B4B  01A1               	clrf	___aldiv@sign
 19570  2B4C  0AA1               	incf	___aldiv@sign,f
 19571  2B4D                     l939:	
 19572  2B4D  1FF8               	btfss	___aldiv@dividend+3,7
 19573  2B4E  2B5E               	goto	l6658
 19574  2B4F  09F5               	comf	___aldiv@dividend,f
 19575  2B50  09F6               	comf	___aldiv@dividend+1,f
 19576  2B51  09F7               	comf	___aldiv@dividend+2,f
 19577  2B52  09F8               	comf	___aldiv@dividend+3,f
 19578  2B53  0AF5               	incf	___aldiv@dividend,f
 19579  2B54  1903               	skipnz
 19580  2B55  0AF6               	incf	___aldiv@dividend+1,f
 19581  2B56  1903               	skipnz
 19582  2B57  0AF7               	incf	___aldiv@dividend+2,f
 19583  2B58  1903               	skipnz
 19584  2B59  0AF8               	incf	___aldiv@dividend+3,f
 19585  2B5A  3001               	movlw	1
 19586  2B5B  00F9               	movwf	??___aldiv
 19587  2B5C  0879               	movf	??___aldiv,w
 19588  2B5D  06A1               	xorwf	___aldiv@sign,f
 19589  2B5E                     l6658:	
 19590  2B5E  3000               	movlw	0
 19591  2B5F  00A5               	movwf	___aldiv@quotient+3
 19592  2B60  3000               	movlw	0
 19593  2B61  00A4               	movwf	___aldiv@quotient+2
 19594  2B62  3000               	movlw	0
 19595  2B63  00A3               	movwf	___aldiv@quotient+1
 19596  2B64  3000               	movlw	0
 19597  2B65  00A2               	movwf	___aldiv@quotient
 19598  2B66  0874               	movf	___aldiv@divisor+3,w
 19599  2B67  0473               	iorwf	___aldiv@divisor+2,w
 19600  2B68  0472               	iorwf	___aldiv@divisor+1,w
 19601  2B69  0471               	iorwf	___aldiv@divisor,w
 19602  2B6A  1903               	skipnz
 19603  2B6B  2BA7               	goto	l6680
 19604  2B6C  01A0               	clrf	___aldiv@counter
 19605  2B6D  0AA0               	incf	___aldiv@counter,f
 19606  2B6E                     l6666:	
 19607  2B6E  1BF4               	btfsc	___aldiv@divisor+3,7
 19608  2B6F  2B7C               	goto	l6668
 19609  2B70  3001               	movlw	1
 19610  2B71                     u9265:	
 19611  2B71  35F1               	lslf	___aldiv@divisor,f
 19612  2B72  0DF2               	rlf	___aldiv@divisor+1,f
 19613  2B73  0DF3               	rlf	___aldiv@divisor+2,f
 19614  2B74  0DF4               	rlf	___aldiv@divisor+3,f
 19615  2B75  0B89               	decfsz	9,f
 19616  2B76  2B71               	goto	u9265
 19617  2B77  3001               	movlw	1
 19618  2B78  00F9               	movwf	??___aldiv
 19619  2B79  0879               	movf	??___aldiv,w
 19620  2B7A  07A0               	addwf	___aldiv@counter,f
 19621  2B7B  2B6E               	goto	l6666
 19622  2B7C                     l6668:	
 19623  2B7C  3001               	movlw	1
 19624  2B7D                     u9285:	
 19625  2B7D  35A2               	lslf	___aldiv@quotient,f
 19626  2B7E  0DA3               	rlf	___aldiv@quotient+1,f
 19627  2B7F  0DA4               	rlf	___aldiv@quotient+2,f
 19628  2B80  0DA5               	rlf	___aldiv@quotient+3,f
 19629  2B81  0B89               	decfsz	9,f
 19630  2B82  2B7D               	goto	u9285
 19631  2B83  0874               	movf	___aldiv@divisor+3,w
 19632  2B84  0278               	subwf	___aldiv@dividend+3,w
 19633  2B85  1D03               	skipz
 19634  2B86  2B91               	goto	u9295
 19635  2B87  0873               	movf	___aldiv@divisor+2,w
 19636  2B88  0277               	subwf	___aldiv@dividend+2,w
 19637  2B89  1D03               	skipz
 19638  2B8A  2B91               	goto	u9295
 19639  2B8B  0872               	movf	___aldiv@divisor+1,w
 19640  2B8C  0276               	subwf	___aldiv@dividend+1,w
 19641  2B8D  1D03               	skipz
 19642  2B8E  2B91               	goto	u9295
 19643  2B8F  0871               	movf	___aldiv@divisor,w
 19644  2B90  0275               	subwf	___aldiv@dividend,w
 19645  2B91                     u9295:	
 19646  2B91  1C03               	skipc
 19647  2B92  2B9C               	goto	l6676
 19648  2B93  0871               	movf	___aldiv@divisor,w
 19649  2B94  02F5               	subwf	___aldiv@dividend,f
 19650  2B95  0872               	movf	___aldiv@divisor+1,w
 19651  2B96  3BF6               	subwfb	___aldiv@dividend+1,f
 19652  2B97  0873               	movf	___aldiv@divisor+2,w
 19653  2B98  3BF7               	subwfb	___aldiv@dividend+2,f
 19654  2B99  0874               	movf	___aldiv@divisor+3,w
 19655  2B9A  3BF8               	subwfb	___aldiv@dividend+3,f
 19656  2B9B  1422               	bsf	___aldiv@quotient,0
 19657  2B9C                     l6676:	
 19658  2B9C  3001               	movlw	1
 19659  2B9D                     u9305:	
 19660  2B9D  36F4               	lsrf	___aldiv@divisor+3,f
 19661  2B9E  0CF3               	rrf	___aldiv@divisor+2,f
 19662  2B9F  0CF2               	rrf	___aldiv@divisor+1,f
 19663  2BA0  0CF1               	rrf	___aldiv@divisor,f
 19664  2BA1  0B89               	decfsz	9,f
 19665  2BA2  2B9D               	goto	u9305
 19666  2BA3  3001               	movlw	1
 19667  2BA4  02A0               	subwf	___aldiv@counter,f
 19668  2BA5  1D03               	btfss	3,2
 19669  2BA6  2B7C               	goto	l6668
 19670  2BA7                     l6680:	
 19671  2BA7  0821               	movf	___aldiv@sign,w
 19672  2BA8  1903               	btfsc	3,2
 19673  2BA9  2BB5               	goto	l6684
 19674  2BAA  09A2               	comf	___aldiv@quotient,f
 19675  2BAB  09A3               	comf	___aldiv@quotient+1,f
 19676  2BAC  09A4               	comf	___aldiv@quotient+2,f
 19677  2BAD  09A5               	comf	___aldiv@quotient+3,f
 19678  2BAE  0AA2               	incf	___aldiv@quotient,f
 19679  2BAF  1903               	skipnz
 19680  2BB0  0AA3               	incf	___aldiv@quotient+1,f
 19681  2BB1  1903               	skipnz
 19682  2BB2  0AA4               	incf	___aldiv@quotient+2,f
 19683  2BB3  1903               	skipnz
 19684  2BB4  0AA5               	incf	___aldiv@quotient+3,f
 19685  2BB5                     l6684:	
 19686  2BB5  0825               	movf	___aldiv@quotient+3,w
 19687  2BB6  00F4               	movwf	?___aldiv+3
 19688  2BB7  0824               	movf	___aldiv@quotient+2,w
 19689  2BB8  00F3               	movwf	?___aldiv+2
 19690  2BB9  0823               	movf	___aldiv@quotient+1,w
 19691  2BBA  00F2               	movwf	?___aldiv+1
 19692  2BBB  0822               	movf	___aldiv@quotient,w
 19693  2BBC  00F1               	movwf	?___aldiv
 19694  2BBD  0008               	return
 19695  2BBE                     __end_of___aldiv:	
 19696                           
 19697                           	psect	intentry
 19698  0004                     __pintentry:	
 19699 ;; *************** function _myIsr *****************
 19700 ;; Defined at:
 19701 ;;		line 57 in file "main.c"
 19702 ;; Parameters:    Size  Location     Type
 19703 ;;		None
 19704 ;; Auto vars:     Size  Location     Type
 19705 ;;		None
 19706 ;; Return value:  Size  Location     Type
 19707 ;;                  1    wreg      void 
 19708 ;; Registers used:
 19709 ;;		wreg, status,2, status,0
 19710 ;; Tracked objects:
 19711 ;;		On entry : 0/0
 19712 ;;		On exit  : 0/0
 19713 ;;		Unchanged: 0/0
 19714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19717 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19718 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19719 ;;Total ram usage:        1 bytes
 19720 ;; Hardware stack levels used:    1
 19721 ;; This function calls:
 19722 ;;		Nothing
 19723 ;; This function is called by:
 19724 ;;		Interrupt level 1
 19725 ;; This function uses a non-reentrant model
 19726 ;;
 19727                           
 19728  0004                     _myIsr:	
 19729                           
 19730                           ;incstack = 0
 19731  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 19732                           
 19733                           ; Regs used in _myIsr: [wreg+status,2+status,0]
 19734  0005  3180               	pagesel	$
 19735                           
 19736                           ;main.c: 59:     static uint8_t count = 0;;main.c: 61:     if (PIR1bits.TMR1IF && PIE1bi
      +                          ts.TMR1IE) {
 19737  0006  0020               	movlb	0	; select bank0
 19738  0007  1C11               	btfss	17,0	;volatile
 19739  0008  281C               	goto	i1l133
 19740  0009  0021               	movlb	1	; select bank1
 19741  000A  1C11               	btfss	17,0	;volatile
 19742  000B  281C               	goto	i1l133
 19743                           
 19744                           ;main.c: 62:         PIR1bits.TMR1IF = 0;
 19745  000C  0020               	movlb	0	; select bank0
 19746  000D  1011               	bcf	17,0	;volatile
 19747                           
 19748                           ;main.c: 63:         count++;
 19749  000E  3001               	movlw	1
 19750  000F  00F0               	movwf	??_myIsr
 19751  0010  0870               	movf	??_myIsr,w
 19752  0011  0023               	movlb	3	; select bank3
 19753  0012  07D7               	addwf	myIsr@count^(0+384),f
 19754                           
 19755                           ;main.c: 66:         if (count == 61) {
 19756  0013  303D               	movlw	61
 19757  0014  0657               	xorwf	myIsr@count^(0+384),w
 19758  0015  1D03               	btfss	3,2
 19759  0016  281C               	goto	i1l133
 19760                           
 19761                           ;main.c: 67:             tmr1_flag = 1;
 19762  0017  3001               	movlw	1
 19763  0018  00F0               	movwf	??_myIsr
 19764  0019  0870               	movf	??_myIsr,w
 19765  001A  00D8               	movwf	_tmr1_flag^(0+384)	;volatile
 19766                           
 19767                           ;main.c: 68:             count = 0;
 19768  001B  01D7               	clrf	myIsr@count^(0+384)
 19769  001C                     i1l133:	
 19770  001C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 19771  001D  0009               	retfie
 19772  001E                     __end_of_myIsr:	
 19773  007E                     btemp	set	126	;btemp
 19774  007E                     int$flags	set	126
 19775  007E                     wtemp0	set	126
 19776  2771                     
 19777                           	psect	text6_split_1
 19778  2BBE                     l7918:	
 19779                           
 19780                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
 19781  2BBE  0021               	movlb	1	; select bank1
 19782  2BBF  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19783  2BC0  0086               	movwf	6
 19784  2BC1  0187               	clrf	7
 19785  2BC2  3F40               	moviw [0]fsr1
 19786  2BC3  00F1               	movwf	strncmp@_l
 19787  2BC4  3F41               	moviw [1]fsr1
 19788  2BC5  00F2               	movwf	strncmp@_l+1
 19789  2BC6  301C               	movlw	low (STR_34| (0+32768))
 19790  2BC7  00F3               	movwf	strncmp@_r
 19791  2BC8  30BB               	movlw	high (STR_34| (0+32768))
 19792  2BC9  00F4               	movwf	strncmp@_r+1
 19793  2BCA  3003               	movlw	3
 19794  2BCB  00F5               	movwf	strncmp@n
 19795  2BCC  3000               	movlw	0
 19796  2BCD  00F6               	movwf	strncmp@n+1
 19797  2BCE  3190  2000  31AB   	fcall	_strncmp
 19798  2BD1  0871               	movf	?_strncmp,w
 19799  2BD2  0472               	iorwf	?_strncmp+1,w
 19800  2BD3  1903               	btfsc	3,2
 19801  2BD4  2BEC               	goto	l7922
 19802  2BD5  0021               	movlb	1	; select bank1
 19803  2BD6  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19804  2BD7  0086               	movwf	6
 19805  2BD8  0187               	clrf	7
 19806  2BD9  3F40               	moviw [0]fsr1
 19807  2BDA  00F1               	movwf	strncmp@_l
 19808  2BDB  3F41               	moviw [1]fsr1
 19809  2BDC  00F2               	movwf	strncmp@_l+1
 19810  2BDD  3024               	movlw	low (STR_38| (0+32768))
 19811  2BDE  00F3               	movwf	strncmp@_r
 19812  2BDF  30BB               	movlw	high (STR_38| (0+32768))
 19813  2BE0  00F4               	movwf	strncmp@_r+1
 19814  2BE1  3003               	movlw	3
 19815  2BE2  00F5               	movwf	strncmp@n
 19816  2BE3  3000               	movlw	0
 19817  2BE4  00F6               	movwf	strncmp@n+1
 19818  2BE5  3190  2000  31AB   	fcall	_strncmp
 19819  2BE8  0871               	movf	?_strncmp,w
 19820  2BE9  0472               	iorwf	?_strncmp+1,w
 19821  2BEA  1D03               	btfss	3,2
 19822  2BEB  2C3F               	goto	L18
 19823  2BEC                     l7922:	
 19824                           
 19825                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
 19826  2BEC  0021               	movlb	1	; select bank1
 19827  2BED  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19828  2BEE  0086               	movwf	6
 19829  2BEF  0187               	clrf	7
 19830  2BF0  3003               	movlw	3
 19831  2BF1  0781               	addwf	1,f
 19832  2BF2  3141               	addfsr 1,1
 19833  2BF3  1803               	skipnc
 19834  2BF4  0A81               	incf	1,f
 19835                           
 19836                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
 19837  2BF5  0866               	movf	vfpfcnvrt@ap^(0+128),w
 19838  2BF6  0086               	movwf	6
 19839  2BF7  3001               	movlw	1	; select bank2/3
 19840  2BF8  0087               	movwf	7
 19841  2BF9  0801               	movf	1,w
 19842  2BFA  0084               	movwf	4
 19843  2BFB  3001               	movlw	1	; select bank2/3
 19844  2BFC  0085               	movwf	5
 19845  2BFD  3002               	movlw	2
 19846  2BFE  0781               	addwf	1,f
 19847  2BFF  0800               	movf	0,w
 19848  2C00  0022               	movlb	2	; select bank2
 19849  2C01  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 19850  2C02  3980               	andlw	128
 19851  2C03  1D03               	skipz
 19852  2C04  30FF               	movlw	255
 19853  2C05  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 19854  2C06  00BE               	movwf	(vfpfcnvrt@ll+2)^(0+256)
 19855  2C07  00BF               	movwf	(vfpfcnvrt@ll+3)^(0+256)
 19856  2C08  00C0               	movwf	(vfpfcnvrt@ll+4)^(0+256)
 19857  2C09  00C1               	movwf	(vfpfcnvrt@ll+5)^(0+256)
 19858  2C0A  00C2               	movwf	(vfpfcnvrt@ll+6)^(0+256)
 19859  2C0B  00C3               	movwf	(vfpfcnvrt@ll+7)^(0+256)
 19860                           
 19861                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
 19862  2C0C  0021               	movlb	1	; select bank1
 19863  2C0D  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 19864  2C0E  0020               	movlb	0	; select bank0
 19865  2C0F  00B1               	movwf	dtoa@fp+1
 19866  2C10  0021               	movlb	1	; select bank1
 19867  2C11  0863               	movf	vfpfcnvrt@fp^(0+128),w
 19868  2C12  0020               	movlb	0	; select bank0
 19869  2C13  00B0               	movwf	dtoa@fp
 19870  2C14  0022               	movlb	2	; select bank2
 19871  2C15  083C               	movf	vfpfcnvrt@ll^(0+256),w
 19872  2C16  0020               	movlb	0	; select bank0
 19873  2C17  00B2               	movwf	dtoa@d
 19874  2C18  0022               	movlb	2	; select bank2
 19875  2C19  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 19876  2C1A  0020               	movlb	0	; select bank0
 19877  2C1B  00B3               	movwf	dtoa@d+1
 19878  2C1C  0022               	movlb	2	; select bank2
 19879  2C1D  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 19880  2C1E  0020               	movlb	0	; select bank0
 19881  2C1F  00B4               	movwf	dtoa@d+2
 19882  2C20  0022               	movlb	2	; select bank2
 19883  2C21  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 19884  2C22  0020               	movlb	0	; select bank0
 19885  2C23  00B5               	movwf	dtoa@d+3
 19886  2C24  0022               	movlb	2	; select bank2
 19887  2C25  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 19888  2C26  0020               	movlb	0	; select bank0
 19889  2C27  00B6               	movwf	dtoa@d+4
 19890  2C28  0022               	movlb	2	; select bank2
 19891  2C29  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 19892  2C2A  0020               	movlb	0	; select bank0
 19893  2C2B  00B7               	movwf	dtoa@d+5
 19894  2C2C  0022               	movlb	2	; select bank2
 19895  2C2D  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 19896  2C2E  0020               	movlb	0	; select bank0
 19897  2C2F  00B8               	movwf	dtoa@d+6
 19898  2C30  0022               	movlb	2	; select bank2
 19899  2C31  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 19900  2C32  0020               	movlb	0	; select bank0
 19901  2C33  00B9               	movwf	dtoa@d+7
 19902  2C34  319B  2372         	fcall	_dtoa
 19903  2C36  0020               	movlb	0	; select bank0
 19904  2C37  0831               	movf	?_dtoa+1,w
 19905  2C38  0021               	movlb	1	; select bank1
 19906  2C39  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 19907  2C3A  0020               	movlb	0	; select bank0
 19908  2C3B  0830               	movf	?_dtoa,w
 19909  2C3C  0021               	movlb	1	; select bank1
 19910  2C3D  00E3               	movwf	?_vfpfcnvrt^(0+128)
 19911  2C3E  0008               	return
 19912  2C3F                     L18:	
 19913  2C3F                     L17:	
 19914  2C3F  31AC  2C41         	ljmp	l7930
 19915                           
 19916                           	psect	text6_split_2
 19917  2C41                     l7930:	
 19918                           
 19919                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
 19920  2C41  0021               	movlb	1	; select bank1
 19921  2C42  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19922  2C43  0086               	movwf	6
 19923  2C44  0187               	clrf	7
 19924  2C45  3F40               	moviw [0]fsr1
 19925  2C46  00F1               	movwf	strncmp@_l
 19926  2C47  3F41               	moviw [1]fsr1
 19927  2C48  00F2               	movwf	strncmp@_l+1
 19928  2C49  301D               	movlw	low ((STR_34+1)| (0+32768))
 19929  2C4A  00F3               	movwf	strncmp@_r
 19930  2C4B  30BB               	movlw	high ((STR_34+1)| (0+32768))
 19931  2C4C  00F4               	movwf	strncmp@_r+1
 19932  2C4D  3002               	movlw	2
 19933  2C4E  00F5               	movwf	strncmp@n
 19934  2C4F  3000               	movlw	0
 19935  2C50  00F6               	movwf	strncmp@n+1
 19936  2C51  3190  2000  31AC   	fcall	_strncmp
 19937  2C54  0871               	movf	?_strncmp,w
 19938  2C55  0472               	iorwf	?_strncmp+1,w
 19939  2C56  1903               	btfsc	3,2
 19940  2C57  2C6F               	goto	l7934
 19941  2C58  0021               	movlb	1	; select bank1
 19942  2C59  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19943  2C5A  0086               	movwf	6
 19944  2C5B  0187               	clrf	7
 19945  2C5C  3F40               	moviw [0]fsr1
 19946  2C5D  00F1               	movwf	strncmp@_l
 19947  2C5E  3F41               	moviw [1]fsr1
 19948  2C5F  00F2               	movwf	strncmp@_l+1
 19949  2C60  3025               	movlw	low ((STR_38+1)| (0+32768))
 19950  2C61  00F3               	movwf	strncmp@_r
 19951  2C62  30BB               	movlw	high ((STR_38+1)| (0+32768))
 19952  2C63  00F4               	movwf	strncmp@_r+1
 19953  2C64  3002               	movlw	2
 19954  2C65  00F5               	movwf	strncmp@n
 19955  2C66  3000               	movlw	0
 19956  2C67  00F6               	movwf	strncmp@n+1
 19957  2C68  3190  2000  31AC   	fcall	_strncmp
 19958  2C6B  0871               	movf	?_strncmp,w
 19959  2C6C  0472               	iorwf	?_strncmp+1,w
 19960  2C6D  1D03               	btfss	3,2
 19961  2C6E  2CC7               	goto	L20
 19962  2C6F                     l7934:	
 19963                           
 19964                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
 19965  2C6F  0021               	movlb	1	; select bank1
 19966  2C70  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19967  2C71  0086               	movwf	6
 19968  2C72  0187               	clrf	7
 19969  2C73  3002               	movlw	2
 19970  2C74  0781               	addwf	1,f
 19971  2C75  3141               	addfsr 1,1
 19972  2C76  1803               	skipnc
 19973  2C77  0A81               	incf	1,f
 19974                           
 19975                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
 19976  2C78  0866               	movf	vfpfcnvrt@ap^(0+128),w
 19977  2C79  0086               	movwf	6
 19978  2C7A  3001               	movlw	1	; select bank2/3
 19979  2C7B  0087               	movwf	7
 19980  2C7C  0801               	movf	1,w
 19981  2C7D  0084               	movwf	4
 19982  2C7E  3001               	movlw	1	; select bank2/3
 19983  2C7F  0085               	movwf	5
 19984  2C80  3002               	movlw	2
 19985  2C81  0781               	addwf	1,f
 19986  2C82  3F00               	moviw [0]fsr0
 19987  2C83  0022               	movlb	2	; select bank2
 19988  2C84  00A0               	movwf	??_vfpfcnvrt^(0+256)
 19989  2C85  3F01               	moviw [1]fsr0
 19990  2C86  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 19991  2C87  0820               	movf	??_vfpfcnvrt^(0+256),w
 19992  2C88  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 19993  2C89  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 19994  2C8A  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 19995  2C8B  0D89               	rlf	9,f
 19996  2C8C  3B89               	subwfb	9,f
 19997  2C8D  0989               	comf	9,f
 19998  2C8E  00BE               	movwf	(vfpfcnvrt@ll+2)^(0+256)
 19999  2C8F  00BF               	movwf	(vfpfcnvrt@ll+3)^(0+256)
 20000  2C90  00C0               	movwf	(vfpfcnvrt@ll+4)^(0+256)
 20001  2C91  00C1               	movwf	(vfpfcnvrt@ll+5)^(0+256)
 20002  2C92  00C2               	movwf	(vfpfcnvrt@ll+6)^(0+256)
 20003  2C93  00C3               	movwf	(vfpfcnvrt@ll+7)^(0+256)
 20004                           
 20005                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 820:       
      +                                return dtoa(fp, ll);
 20006  2C94  0021               	movlb	1	; select bank1
 20007  2C95  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 20008  2C96  0020               	movlb	0	; select bank0
 20009  2C97  00B1               	movwf	dtoa@fp+1
 20010  2C98  0021               	movlb	1	; select bank1
 20011  2C99  0863               	movf	vfpfcnvrt@fp^(0+128),w
 20012  2C9A  0020               	movlb	0	; select bank0
 20013  2C9B  00B0               	movwf	dtoa@fp
 20014  2C9C  0022               	movlb	2	; select bank2
 20015  2C9D  083C               	movf	vfpfcnvrt@ll^(0+256),w
 20016  2C9E  0020               	movlb	0	; select bank0
 20017  2C9F  00B2               	movwf	dtoa@d
 20018  2CA0  0022               	movlb	2	; select bank2
 20019  2CA1  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 20020  2CA2  0020               	movlb	0	; select bank0
 20021  2CA3  00B3               	movwf	dtoa@d+1
 20022  2CA4  0022               	movlb	2	; select bank2
 20023  2CA5  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 20024  2CA6  0020               	movlb	0	; select bank0
 20025  2CA7  00B4               	movwf	dtoa@d+2
 20026  2CA8  0022               	movlb	2	; select bank2
 20027  2CA9  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 20028  2CAA  0020               	movlb	0	; select bank0
 20029  2CAB  00B5               	movwf	dtoa@d+3
 20030  2CAC  0022               	movlb	2	; select bank2
 20031  2CAD  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 20032  2CAE  0020               	movlb	0	; select bank0
 20033  2CAF  00B6               	movwf	dtoa@d+4
 20034  2CB0  0022               	movlb	2	; select bank2
 20035  2CB1  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 20036  2CB2  0020               	movlb	0	; select bank0
 20037  2CB3  00B7               	movwf	dtoa@d+5
 20038  2CB4  0022               	movlb	2	; select bank2
 20039  2CB5  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 20040  2CB6  0020               	movlb	0	; select bank0
 20041  2CB7  00B8               	movwf	dtoa@d+6
 20042  2CB8  0022               	movlb	2	; select bank2
 20043  2CB9  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 20044  2CBA  0020               	movlb	0	; select bank0
 20045  2CBB  00B9               	movwf	dtoa@d+7
 20046  2CBC  319B  2372         	fcall	_dtoa
 20047  2CBE  0020               	movlb	0	; select bank0
 20048  2CBF  0831               	movf	?_dtoa+1,w
 20049  2CC0  0021               	movlb	1	; select bank1
 20050  2CC1  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 20051  2CC2  0020               	movlb	0	; select bank0
 20052  2CC3  0830               	movf	?_dtoa,w
 20053  2CC4  0021               	movlb	1	; select bank1
 20054  2CC5  00E3               	movwf	?_vfpfcnvrt^(0+128)
 20055  2CC6  0008               	return
 20056  2CC7                     L20:	
 20057  2CC7                     L19:	
 20058  2CC7  3198  283E         	ljmp	l7942
 20059                           
 20060                           	psect	text6_split_3
 20061  183E                     l7942:	
 20062                           
 20063                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 20064  183E  0021               	movlb	1	; select bank1
 20065  183F  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20066  1840  0086               	movwf	6
 20067  1841  0187               	clrf	7
 20068  1842  3F40               	moviw [0]fsr1
 20069  1843  0022               	movlb	2	; select bank2
 20070  1844  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20071  1845  3F41               	moviw [1]fsr1
 20072  1846  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 20073  1847  0820               	movf	??_vfpfcnvrt^(0+256),w
 20074  1848  0084               	movwf	4
 20075  1849  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 20076  184A  0085               	movwf	5
 20077  184B  0012               	moviw fsr0++
 20078  184C  3A64               	xorlw	100
 20079  184D  1903               	btfsc	3,2
 20080  184E  2860               	goto	l7946
 20081  184F  0021               	movlb	1	; select bank1
 20082  1850  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20083  1851  0086               	movwf	6
 20084  1852  0187               	clrf	7
 20085  1853  3F40               	moviw [0]fsr1
 20086  1854  0022               	movlb	2	; select bank2
 20087  1855  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20088  1856  3F41               	moviw [1]fsr1
 20089  1857  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 20090  1858  0820               	movf	??_vfpfcnvrt^(0+256),w
 20091  1859  0084               	movwf	4
 20092  185A  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 20093  185B  0085               	movwf	5
 20094  185C  0012               	moviw fsr0++
 20095  185D  3A69               	xorlw	105
 20096  185E  1D03               	btfss	3,2
 20097  185F  28B8               	goto	l7954
 20098  1860                     l7946:	
 20099                           
 20100                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 20101  1860  0021               	movlb	1	; select bank1
 20102  1861  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20103  1862  0086               	movwf	6
 20104  1863  0187               	clrf	7
 20105  1864  3001               	movlw	1
 20106  1865  0781               	addwf	1,f
 20107  1866  3141               	addfsr 1,1
 20108  1867  1803               	skipnc
 20109  1868  0A81               	incf	1,f
 20110                           
 20111                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 20112  1869  0866               	movf	vfpfcnvrt@ap^(0+128),w
 20113  186A  0086               	movwf	6
 20114  186B  3001               	movlw	1	; select bank2/3
 20115  186C  0087               	movwf	7
 20116  186D  0801               	movf	1,w
 20117  186E  0084               	movwf	4
 20118  186F  3001               	movlw	1	; select bank2/3
 20119  1870  0085               	movwf	5
 20120  1871  3002               	movlw	2
 20121  1872  0781               	addwf	1,f
 20122  1873  3F00               	moviw [0]fsr0
 20123  1874  0022               	movlb	2	; select bank2
 20124  1875  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20125  1876  3F01               	moviw [1]fsr0
 20126  1877  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 20127  1878  0820               	movf	??_vfpfcnvrt^(0+256),w
 20128  1879  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 20129  187A  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 20130  187B  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 20131  187C  0D89               	rlf	9,f
 20132  187D  3B89               	subwfb	9,f
 20133  187E  0989               	comf	9,f
 20134  187F  00BE               	movwf	(vfpfcnvrt@ll+2)^(0+256)
 20135  1880  00BF               	movwf	(vfpfcnvrt@ll+3)^(0+256)
 20136  1881  00C0               	movwf	(vfpfcnvrt@ll+4)^(0+256)
 20137  1882  00C1               	movwf	(vfpfcnvrt@ll+5)^(0+256)
 20138  1883  00C2               	movwf	(vfpfcnvrt@ll+6)^(0+256)
 20139  1884  00C3               	movwf	(vfpfcnvrt@ll+7)^(0+256)
 20140                           
 20141                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 20142  1885  0021               	movlb	1	; select bank1
 20143  1886  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 20144  1887  0020               	movlb	0	; select bank0
 20145  1888  00B1               	movwf	dtoa@fp+1
 20146  1889  0021               	movlb	1	; select bank1
 20147  188A  0863               	movf	vfpfcnvrt@fp^(0+128),w
 20148  188B  0020               	movlb	0	; select bank0
 20149  188C  00B0               	movwf	dtoa@fp
 20150  188D  0022               	movlb	2	; select bank2
 20151  188E  083C               	movf	vfpfcnvrt@ll^(0+256),w
 20152  188F  0020               	movlb	0	; select bank0
 20153  1890  00B2               	movwf	dtoa@d
 20154  1891  0022               	movlb	2	; select bank2
 20155  1892  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 20156  1893  0020               	movlb	0	; select bank0
 20157  1894  00B3               	movwf	dtoa@d+1
 20158  1895  0022               	movlb	2	; select bank2
 20159  1896  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 20160  1897  0020               	movlb	0	; select bank0
 20161  1898  00B4               	movwf	dtoa@d+2
 20162  1899  0022               	movlb	2	; select bank2
 20163  189A  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 20164  189B  0020               	movlb	0	; select bank0
 20165  189C  00B5               	movwf	dtoa@d+3
 20166  189D  0022               	movlb	2	; select bank2
 20167  189E  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 20168  189F  0020               	movlb	0	; select bank0
 20169  18A0  00B6               	movwf	dtoa@d+4
 20170  18A1  0022               	movlb	2	; select bank2
 20171  18A2  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 20172  18A3  0020               	movlb	0	; select bank0
 20173  18A4  00B7               	movwf	dtoa@d+5
 20174  18A5  0022               	movlb	2	; select bank2
 20175  18A6  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 20176  18A7  0020               	movlb	0	; select bank0
 20177  18A8  00B8               	movwf	dtoa@d+6
 20178  18A9  0022               	movlb	2	; select bank2
 20179  18AA  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 20180  18AB  0020               	movlb	0	; select bank0
 20181  18AC  00B9               	movwf	dtoa@d+7
 20182  18AD  319B  2372         	fcall	_dtoa
 20183  18AF  0020               	movlb	0	; select bank0
 20184  18B0  0831               	movf	?_dtoa+1,w
 20185  18B1  0021               	movlb	1	; select bank1
 20186  18B2  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 20187  18B3  0020               	movlb	0	; select bank0
 20188  18B4  0830               	movf	?_dtoa,w
 20189  18B5  0021               	movlb	1	; select bank1
 20190  18B6  00E3               	movwf	?_vfpfcnvrt^(0+128)
 20191  18B7  0008               	return
 20192  18B8                     l7954:	
 20193                           
 20194                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 835:       
      +                            if (!strncmp(*fmt, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", (
      +                          (sizeof("li")/sizeof("li"[0]))-1))) {
 20195  18B8  0021               	movlb	1	; select bank1
 20196  18B9  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20197  18BA  0086               	movwf	6
 20198  18BB  0187               	clrf	7
 20199  18BC  3F40               	moviw [0]fsr1
 20200  18BD  00F1               	movwf	strncmp@_l
 20201  18BE  3F41               	moviw [1]fsr1
 20202  18BF  00F2               	movwf	strncmp@_l+1
 20203  18C0  3042               	movlw	low (STR_52| (0+32768))
 20204  18C1  00F3               	movwf	strncmp@_r
 20205  18C2  30BB               	movlw	high (STR_52| (0+32768))
 20206  18C3  00F4               	movwf	strncmp@_r+1
 20207  18C4  3002               	movlw	2
 20208  18C5  00F5               	movwf	strncmp@n
 20209  18C6  3000               	movlw	0
 20210  18C7  00F6               	movwf	strncmp@n+1
 20211  18C8  3190  2000  3198   	fcall	_strncmp
 20212  18CB  0871               	movf	?_strncmp,w
 20213  18CC  0472               	iorwf	?_strncmp+1,w
 20214  18CD  1903               	btfsc	3,2
 20215  18CE  28E6               	goto	l7958
 20216  18CF  0021               	movlb	1	; select bank1
 20217  18D0  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20218  18D1  0086               	movwf	6
 20219  18D2  0187               	clrf	7
 20220  18D3  3F40               	moviw [0]fsr1
 20221  18D4  00F1               	movwf	strncmp@_l
 20222  18D5  3F41               	moviw [1]fsr1
 20223  18D6  00F2               	movwf	strncmp@_l+1
 20224  18D7  304B               	movlw	low (STR_56| (0+32768))
 20225  18D8  00F3               	movwf	strncmp@_r
 20226  18D9  30BB               	movlw	high (STR_56| (0+32768))
 20227  18DA  00F4               	movwf	strncmp@_r+1
 20228  18DB  3002               	movlw	2
 20229  18DC  00F5               	movwf	strncmp@n
 20230  18DD  3000               	movlw	0
 20231  18DE  00F6               	movwf	strncmp@n+1
 20232  18DF  3190  2000  3198   	fcall	_strncmp
 20233  18E2  0871               	movf	?_strncmp,w
 20234  18E3  0472               	iorwf	?_strncmp+1,w
 20235  18E4  1D03               	btfss	3,2
 20236  18E5  2944               	goto	L22
 20237  18E6                     l7958:	
 20238                           
 20239                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 836: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 838:             
      +                          *fmt += ((sizeof("ld")/sizeof("ld"[0]))-1);
 20240  18E6  0021               	movlb	1	; select bank1
 20241  18E7  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20242  18E8  0086               	movwf	6
 20243  18E9  0187               	clrf	7
 20244  18EA  3002               	movlw	2
 20245  18EB  0781               	addwf	1,f
 20246  18EC  3141               	addfsr 1,1
 20247  18ED  1803               	skipnc
 20248  18EE  0A81               	incf	1,f
 20249                           
 20250                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 839:       
      +                                ll = (long long)(*(long *)__va_arg(*(long **)ap, (long)0));
 20251  18EF  0866               	movf	vfpfcnvrt@ap^(0+128),w
 20252  18F0  0086               	movwf	6
 20253  18F1  3001               	movlw	1	; select bank2/3
 20254  18F2  0087               	movwf	7
 20255  18F3  0801               	movf	1,w
 20256  18F4  0084               	movwf	4
 20257  18F5  3001               	movlw	1	; select bank2/3
 20258  18F6  0085               	movwf	5
 20259  18F7  3004               	movlw	4
 20260  18F8  0781               	addwf	1,f
 20261  18F9  3F00               	moviw [0]fsr0
 20262  18FA  0022               	movlb	2	; select bank2
 20263  18FB  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20264  18FC  3F01               	moviw [1]fsr0
 20265  18FD  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 20266  18FE  3F02               	moviw [2]fsr0
 20267  18FF  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 20268  1900  3F03               	moviw [3]fsr0
 20269  1901  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 20270  1902  0820               	movf	??_vfpfcnvrt^(0+256),w
 20271  1903  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 20272  1904  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 20273  1905  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 20274  1906  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 20275  1907  00BE               	movwf	(vfpfcnvrt@ll+2)^(0+256)
 20276  1908  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 20277  1909  00BF               	movwf	(vfpfcnvrt@ll+3)^(0+256)
 20278  190A  3000               	movlw	0
 20279  190B  1BBF               	btfsc	(vfpfcnvrt@ll+3)^(0+256),7
 20280  190C  30FF               	movlw	255
 20281  190D  00C0               	movwf	(vfpfcnvrt@ll+4)^(0+256)
 20282  190E  00C1               	movwf	(vfpfcnvrt@ll+5)^(0+256)
 20283  190F  00C2               	movwf	(vfpfcnvrt@ll+6)^(0+256)
 20284  1910  00C3               	movwf	(vfpfcnvrt@ll+7)^(0+256)
 20285                           
 20286                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 841:       
      +                                return dtoa(fp, ll);
 20287  1911  0021               	movlb	1	; select bank1
 20288  1912  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 20289  1913  0020               	movlb	0	; select bank0
 20290  1914  00B1               	movwf	dtoa@fp+1
 20291  1915  0021               	movlb	1	; select bank1
 20292  1916  0863               	movf	vfpfcnvrt@fp^(0+128),w
 20293  1917  0020               	movlb	0	; select bank0
 20294  1918  00B0               	movwf	dtoa@fp
 20295  1919  0022               	movlb	2	; select bank2
 20296  191A  083C               	movf	vfpfcnvrt@ll^(0+256),w
 20297  191B  0020               	movlb	0	; select bank0
 20298  191C  00B2               	movwf	dtoa@d
 20299  191D  0022               	movlb	2	; select bank2
 20300  191E  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 20301  191F  0020               	movlb	0	; select bank0
 20302  1920  00B3               	movwf	dtoa@d+1
 20303  1921  0022               	movlb	2	; select bank2
 20304  1922  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 20305  1923  0020               	movlb	0	; select bank0
 20306  1924  00B4               	movwf	dtoa@d+2
 20307  1925  0022               	movlb	2	; select bank2
 20308  1926  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 20309  1927  0020               	movlb	0	; select bank0
 20310  1928  00B5               	movwf	dtoa@d+3
 20311  1929  0022               	movlb	2	; select bank2
 20312  192A  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 20313  192B  0020               	movlb	0	; select bank0
 20314  192C  00B6               	movwf	dtoa@d+4
 20315  192D  0022               	movlb	2	; select bank2
 20316  192E  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 20317  192F  0020               	movlb	0	; select bank0
 20318  1930  00B7               	movwf	dtoa@d+5
 20319  1931  0022               	movlb	2	; select bank2
 20320  1932  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 20321  1933  0020               	movlb	0	; select bank0
 20322  1934  00B8               	movwf	dtoa@d+6
 20323  1935  0022               	movlb	2	; select bank2
 20324  1936  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 20325  1937  0020               	movlb	0	; select bank0
 20326  1938  00B9               	movwf	dtoa@d+7
 20327  1939  319B  2372         	fcall	_dtoa
 20328  193B  0020               	movlb	0	; select bank0
 20329  193C  0831               	movf	?_dtoa+1,w
 20330  193D  0021               	movlb	1	; select bank1
 20331  193E  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 20332  193F  0020               	movlb	0	; select bank0
 20333  1940  0830               	movf	?_dtoa,w
 20334  1941  0021               	movlb	1	; select bank1
 20335  1942  00E3               	movwf	?_vfpfcnvrt^(0+128)
 20336  1943  0008               	return
 20337  1944                     L22:	
 20338  1944                     L21:	
 20339  1944  31A1  29CB         	ljmp	l7966
 20340                           
 20341                           	psect	text6_split_4
 20342  21CB                     l7966:	
 20343                           
 20344                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
 20345  21CB  0021               	movlb	1	; select bank1
 20346  21CC  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20347  21CD  0086               	movwf	6
 20348  21CE  0187               	clrf	7
 20349  21CF  3F40               	moviw [0]fsr1
 20350  21D0  00F1               	movwf	strncmp@_l
 20351  21D1  3F41               	moviw [1]fsr1
 20352  21D2  00F2               	movwf	strncmp@_l+1
 20353  21D3  3045               	movlw	low (STR_61| (0+32768))
 20354  21D4  00F3               	movwf	strncmp@_r
 20355  21D5  30BB               	movlw	high (STR_61| (0+32768))
 20356  21D6  00F4               	movwf	strncmp@_r+1
 20357  21D7  3002               	movlw	2
 20358  21D8  00F5               	movwf	strncmp@n
 20359  21D9  3000               	movlw	0
 20360  21DA  00F6               	movwf	strncmp@n+1
 20361  21DB  3190  2000  31A1   	fcall	_strncmp
 20362  21DE  0871               	movf	?_strncmp,w
 20363  21DF  0472               	iorwf	?_strncmp+1,w
 20364  21E0  1903               	btfsc	3,2
 20365  21E1  29F9               	goto	l7970
 20366  21E2  0021               	movlb	1	; select bank1
 20367  21E3  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20368  21E4  0086               	movwf	6
 20369  21E5  0187               	clrf	7
 20370  21E6  3F40               	moviw [0]fsr1
 20371  21E7  00F1               	movwf	strncmp@_l
 20372  21E8  3F41               	moviw [1]fsr1
 20373  21E9  00F2               	movwf	strncmp@_l+1
 20374  21EA  304E               	movlw	low (STR_65| (0+32768))
 20375  21EB  00F3               	movwf	strncmp@_r
 20376  21EC  30BB               	movlw	high (STR_65| (0+32768))
 20377  21ED  00F4               	movwf	strncmp@_r+1
 20378  21EE  3002               	movlw	2
 20379  21EF  00F5               	movwf	strncmp@n
 20380  21F0  3000               	movlw	0
 20381  21F1  00F6               	movwf	strncmp@n+1
 20382  21F2  3190  2000  31A1   	fcall	_strncmp
 20383  21F5  0871               	movf	?_strncmp,w
 20384  21F6  0472               	iorwf	?_strncmp+1,w
 20385  21F7  1D03               	btfss	3,2
 20386  21F8  2A4A               	goto	l7978
 20387  21F9                     l7970:	
 20388                           
 20389                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
 20390  21F9  0021               	movlb	1	; select bank1
 20391  21FA  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20392  21FB  0086               	movwf	6
 20393  21FC  0187               	clrf	7
 20394  21FD  3002               	movlw	2
 20395  21FE  0781               	addwf	1,f
 20396  21FF  3141               	addfsr 1,1
 20397  2200  1803               	skipnc
 20398  2201  0A81               	incf	1,f
 20399                           
 20400                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 20401  2202  0866               	movf	vfpfcnvrt@ap^(0+128),w
 20402  2203  0086               	movwf	6
 20403  2204  3001               	movlw	1	; select bank2/3
 20404  2205  0087               	movwf	7
 20405  2206  0801               	movf	1,w
 20406  2207  0084               	movwf	4
 20407  2208  3001               	movlw	1	; select bank2/3
 20408  2209  0085               	movwf	5
 20409  220A  3002               	movlw	2
 20410  220B  0781               	addwf	1,f
 20411  220C  3F00               	moviw [0]fsr0
 20412  220D  0022               	movlb	2	; select bank2
 20413  220E  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 20414  220F  3F01               	moviw [1]fsr0
 20415  2210  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 20416  2211  01BE               	clrf	(vfpfcnvrt@ll+2)^(0+256)
 20417  2212  01BF               	clrf	(vfpfcnvrt@ll+3)^(0+256)
 20418  2213  01C0               	clrf	(vfpfcnvrt@ll+4)^(0+256)
 20419  2214  01C1               	clrf	(vfpfcnvrt@ll+5)^(0+256)
 20420  2215  01C2               	clrf	(vfpfcnvrt@ll+6)^(0+256)
 20421  2216  01C3               	clrf	(vfpfcnvrt@ll+7)^(0+256)
 20422                           
 20423                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 889:       
      +                                return dtoa(fp, ll);
 20424  2217  0021               	movlb	1	; select bank1
 20425  2218  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 20426  2219  0020               	movlb	0	; select bank0
 20427  221A  00B1               	movwf	dtoa@fp+1
 20428  221B  0021               	movlb	1	; select bank1
 20429  221C  0863               	movf	vfpfcnvrt@fp^(0+128),w
 20430  221D  0020               	movlb	0	; select bank0
 20431  221E  00B0               	movwf	dtoa@fp
 20432  221F  0022               	movlb	2	; select bank2
 20433  2220  083C               	movf	vfpfcnvrt@ll^(0+256),w
 20434  2221  0020               	movlb	0	; select bank0
 20435  2222  00B2               	movwf	dtoa@d
 20436  2223  0022               	movlb	2	; select bank2
 20437  2224  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 20438  2225  0020               	movlb	0	; select bank0
 20439  2226  00B3               	movwf	dtoa@d+1
 20440  2227  0022               	movlb	2	; select bank2
 20441  2228  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 20442  2229  0020               	movlb	0	; select bank0
 20443  222A  00B4               	movwf	dtoa@d+2
 20444  222B  0022               	movlb	2	; select bank2
 20445  222C  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 20446  222D  0020               	movlb	0	; select bank0
 20447  222E  00B5               	movwf	dtoa@d+3
 20448  222F  0022               	movlb	2	; select bank2
 20449  2230  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 20450  2231  0020               	movlb	0	; select bank0
 20451  2232  00B6               	movwf	dtoa@d+4
 20452  2233  0022               	movlb	2	; select bank2
 20453  2234  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 20454  2235  0020               	movlb	0	; select bank0
 20455  2236  00B7               	movwf	dtoa@d+5
 20456  2237  0022               	movlb	2	; select bank2
 20457  2238  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 20458  2239  0020               	movlb	0	; select bank0
 20459  223A  00B8               	movwf	dtoa@d+6
 20460  223B  0022               	movlb	2	; select bank2
 20461  223C  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 20462  223D  0020               	movlb	0	; select bank0
 20463  223E  00B9               	movwf	dtoa@d+7
 20464  223F  319B  2372         	fcall	_dtoa
 20465  2241  0020               	movlb	0	; select bank0
 20466  2242  0831               	movf	?_dtoa+1,w
 20467  2243  0021               	movlb	1	; select bank1
 20468  2244  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 20469  2245  0020               	movlb	0	; select bank0
 20470  2246  0830               	movf	?_dtoa,w
 20471  2247  0021               	movlb	1	; select bank1
 20472  2248  00E3               	movwf	?_vfpfcnvrt^(0+128)
 20473  2249  0008               	return
 20474  224A                     l7978:	
 20475                           
 20476                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
 20477  224A  3066               	movlw	102
 20478  224B  0022               	movlb	2	; select bank2
 20479  224C  0635               	xorwf	vfpfcnvrt@ct^(0+256),w
 20480  224D  1D03               	btfss	3,2
 20481  224E  2A9F               	goto	L24
 20482                           
 20483                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
 20484  224F  0021               	movlb	1	; select bank1
 20485  2250  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20486  2251  0086               	movwf	6
 20487  2252  0187               	clrf	7
 20488  2253  3F40               	moviw [0]fsr1
 20489  2254  0022               	movlb	2	; select bank2
 20490  2255  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20491  2256  3F41               	moviw [1]fsr1
 20492  2257  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 20493  2258  0820               	movf	??_vfpfcnvrt^(0+256),w
 20494  2259  0084               	movwf	4
 20495  225A  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 20496  225B  0085               	movwf	5
 20497  225C  0800               	movf	0,w	;code access
 20498  225D  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 20499  225E  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 20500  225F  00C5               	movwf	vfpfcnvrt@c^(0+256)
 20501                           
 20502                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
 20503  2260  0021               	movlb	1	; select bank1
 20504  2261  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20505  2262  0086               	movwf	6
 20506  2263  0187               	clrf	7
 20507  2264  3001               	movlw	1
 20508  2265  0781               	addwf	1,f
 20509  2266  3141               	addfsr 1,1
 20510  2267  1803               	skipnc
 20511  2268  0A81               	incf	1,f
 20512                           
 20513                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 20514  2269  0866               	movf	vfpfcnvrt@ap^(0+128),w
 20515  226A  0086               	movwf	6
 20516  226B  3001               	movlw	1	; select bank2/3
 20517  226C  0087               	movwf	7
 20518  226D  0801               	movf	1,w
 20519  226E  0084               	movwf	4
 20520  226F  3001               	movlw	1	; select bank2/3
 20521  2270  0085               	movwf	5
 20522  2271  3004               	movlw	4
 20523  2272  0781               	addwf	1,f
 20524  2273  3F00               	moviw [0]fsr0
 20525  2274  0022               	movlb	2	; select bank2
 20526  2275  00B8               	movwf	vfpfcnvrt@f^(0+256)
 20527  2276  3F01               	moviw [1]fsr0
 20528  2277  00B9               	movwf	(vfpfcnvrt@f+1)^(0+256)
 20529  2278  3F02               	moviw [2]fsr0
 20530  2279  00BA               	movwf	(vfpfcnvrt@f+2)^(0+256)
 20531  227A  3F03               	moviw [3]fsr0
 20532  227B  00BB               	movwf	(vfpfcnvrt@f+3)^(0+256)
 20533                           
 20534                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
 20535  227C  0021               	movlb	1	; select bank1
 20536  227D  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 20537  227E  00A1               	movwf	(efgtoa@fp+1)^(0+128)
 20538  227F  0863               	movf	vfpfcnvrt@fp^(0+128),w
 20539  2280  00A0               	movwf	efgtoa@fp^(0+128)
 20540  2281  0022               	movlb	2	; select bank2
 20541  2282  083B               	movf	(vfpfcnvrt@f+3)^(0+256),w
 20542  2283  0021               	movlb	1	; select bank1
 20543  2284  00A5               	movwf	(efgtoa@f+3)^(0+128)
 20544  2285  0022               	movlb	2	; select bank2
 20545  2286  083A               	movf	(vfpfcnvrt@f+2)^(0+256),w
 20546  2287  0021               	movlb	1	; select bank1
 20547  2288  00A4               	movwf	(efgtoa@f+2)^(0+128)
 20548  2289  0022               	movlb	2	; select bank2
 20549  228A  0839               	movf	(vfpfcnvrt@f+1)^(0+256),w
 20550  228B  0021               	movlb	1	; select bank1
 20551  228C  00A3               	movwf	(efgtoa@f+1)^(0+128)
 20552  228D  0022               	movlb	2	; select bank2
 20553  228E  0838               	movf	vfpfcnvrt@f^(0+256),w
 20554  228F  0021               	movlb	1	; select bank1
 20555  2290  00A2               	movwf	efgtoa@f^(0+128)
 20556  2291  0022               	movlb	2	; select bank2
 20557  2292  0845               	movf	vfpfcnvrt@c^(0+256),w
 20558  2293  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20559  2294  0820               	movf	??_vfpfcnvrt^(0+256),w
 20560  2295  0021               	movlb	1	; select bank1
 20561  2296  00A6               	movwf	efgtoa@c^(0+128)
 20562  2297  3180  2058         	fcall	_efgtoa
 20563  2299  0021               	movlb	1	; select bank1
 20564  229A  0821               	movf	(?_efgtoa+1)^(0+128),w
 20565  229B  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 20566  229C  0820               	movf	?_efgtoa^(0+128),w
 20567  229D  00E3               	movwf	?_vfpfcnvrt^(0+128)
 20568  229E  0008               	return
 20569  229F                     L24:	
 20570  229F                     L23:	
 20571  229F  31AE  2E00         	ljmp	l7990
 20572                           
 20573                           	psect	text6_split_5
 20574  2E00                     l7990:	
 20575                           
 20576                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 20577  2E00  3035               	movlw	low vfpfcnvrt@ct
 20578  2E01  00F1               	movwf	strncmp@_l
 20579  2E02  3001               	movlw	high vfpfcnvrt@ct
 20580  2E03  00F2               	movwf	strncmp@_l+1
 20581  2E04  3048               	movlw	low (STR_70| (0+32768))
 20582  2E05  00F3               	movwf	strncmp@_r
 20583  2E06  30BB               	movlw	high (STR_70| (0+32768))
 20584  2E07  00F4               	movwf	strncmp@_r+1
 20585  2E08  3002               	movlw	2
 20586  2E09  00F5               	movwf	strncmp@n
 20587  2E0A  3000               	movlw	0
 20588  2E0B  00F6               	movwf	strncmp@n+1
 20589  2E0C  3190  2000  31AE   	fcall	_strncmp
 20590  2E0F  0871               	movf	?_strncmp,w
 20591  2E10  0472               	iorwf	?_strncmp+1,w
 20592  2E11  1D03               	btfss	3,2
 20593  2E12  2EA2               	goto	L26
 20594                           
 20595                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 20596  2E13  0021               	movlb	1	; select bank1
 20597  2E14  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20598  2E15  0086               	movwf	6
 20599  2E16  0187               	clrf	7
 20600  2E17  3F40               	moviw [0]fsr1
 20601  2E18  0022               	movlb	2	; select bank2
 20602  2E19  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20603  2E1A  3F41               	moviw [1]fsr1
 20604  2E1B  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 20605  2E1C  3001               	movlw	1
 20606  2E1D  0720               	addwf	??_vfpfcnvrt^(0+256),w
 20607  2E1E  0084               	movwf	4
 20608  2E1F  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 20609  2E20  1803               	skipnc
 20610  2E21  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 20611  2E22  0085               	movwf	5
 20612  2E23  0800               	movf	0,w	;code access
 20613  2E24  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 20614  2E25  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 20615  2E26  00C5               	movwf	vfpfcnvrt@c^(0+256)
 20616  2E27  0021               	movlb	1	; select bank1
 20617  2E28  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20618  2E29  0086               	movwf	6
 20619  2E2A  0187               	clrf	7
 20620  2E2B  3F40               	moviw [0]fsr1
 20621  2E2C  0022               	movlb	2	; select bank2
 20622  2E2D  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20623  2E2E  3F41               	moviw [1]fsr1
 20624  2E2F  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 20625  2E30  0820               	movf	??_vfpfcnvrt^(0+256),w
 20626  2E31  0084               	movwf	4
 20627  2E32  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 20628  2E33  0085               	movwf	5
 20629  2E34  0800               	movf	0,w	;code access
 20630  2E35  3EBF               	addlw	191
 20631  2E36  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 20632  2E37  30FF               	movlw	255
 20633  2E38  1803               	skipnc
 20634  2E39  3000               	movlw	0
 20635  2E3A  00A3               	movwf	((??_vfpfcnvrt+2)^(0+256)+1)
 20636  2E3B  3000               	movlw	0
 20637  2E3C  0223               	subwf	(??_vfpfcnvrt+3)^(0+256),w
 20638  2E3D  301A               	movlw	26
 20639  2E3E  1903               	skipnz
 20640  2E3F  0222               	subwf	(??_vfpfcnvrt+2)^(0+256),w
 20641  2E40  1803               	btfsc	3,0
 20642  2E41  2E44               	goto	u11580
 20643  2E42  3001               	movlw	1
 20644  2E43  2E45               	goto	u11590
 20645  2E44                     u11580:	
 20646  2E44  3000               	movlw	0
 20647  2E45                     u11590:	
 20648  2E45  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
 20649  2E46  01A5               	clrf	((??_vfpfcnvrt+4)^(0+256)+1)
 20650  2E47  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
 20651  2E48  00B3               	movwf	_vfpfcnvrt$1172^(0+256)
 20652  2E49  0825               	movf	(??_vfpfcnvrt+5)^(0+256),w
 20653  2E4A  00B4               	movwf	(_vfpfcnvrt$1172+1)^(0+256)
 20654  2E4B  0833               	movf	_vfpfcnvrt$1172^(0+256),w
 20655  2E4C  0434               	iorwf	(_vfpfcnvrt$1172+1)^(0+256),w
 20656  2E4D  1903               	btfsc	3,2
 20657  2E4E  2E63               	goto	l8000
 20658                           
 20659                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
 20660  2E4F  0021               	movlb	1	; select bank1
 20661  2E50  0866               	movf	vfpfcnvrt@ap^(0+128),w
 20662  2E51  0086               	movwf	6
 20663  2E52  3001               	movlw	1	; select bank2/3
 20664  2E53  0087               	movwf	7
 20665  2E54  0801               	movf	1,w
 20666  2E55  0084               	movwf	4
 20667  2E56  3001               	movlw	1	; select bank2/3
 20668  2E57  0085               	movwf	5
 20669  2E58  3004               	movlw	4
 20670  2E59  0781               	addwf	1,f
 20671  2E5A  3F00               	moviw [0]fsr0
 20672  2E5B  0022               	movlb	2	; select bank2
 20673  2E5C  00B8               	movwf	vfpfcnvrt@f^(0+256)
 20674  2E5D  3F01               	moviw [1]fsr0
 20675  2E5E  00B9               	movwf	(vfpfcnvrt@f+1)^(0+256)
 20676  2E5F  3F02               	moviw [2]fsr0
 20677  2E60  00BA               	movwf	(vfpfcnvrt@f+2)^(0+256)
 20678  2E61  3F03               	moviw [3]fsr0
 20679  2E62  2E76               	goto	L1
 20680  2E63                     l8000:	
 20681                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
 20682                           
 20683                           
 20684                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 20685  2E63  0021               	movlb	1	; select bank1
 20686  2E64  0866               	movf	vfpfcnvrt@ap^(0+128),w
 20687  2E65  0086               	movwf	6
 20688  2E66  3001               	movlw	1	; select bank2/3
 20689  2E67  0087               	movwf	7
 20690  2E68  0801               	movf	1,w
 20691  2E69  0084               	movwf	4
 20692  2E6A  3001               	movlw	1	; select bank2/3
 20693  2E6B  0085               	movwf	5
 20694  2E6C  3004               	movlw	4
 20695  2E6D  0781               	addwf	1,f
 20696  2E6E  3F00               	moviw [0]fsr0
 20697  2E6F  0022               	movlb	2	; select bank2
 20698  2E70  00B8               	movwf	vfpfcnvrt@f^(0+256)
 20699  2E71  3F01               	moviw [1]fsr0
 20700  2E72  00B9               	movwf	(vfpfcnvrt@f+1)^(0+256)
 20701  2E73  3F02               	moviw [2]fsr0
 20702  2E74  00BA               	movwf	(vfpfcnvrt@f+2)^(0+256)
 20703  2E75  3F03               	moviw [3]fsr0
 20704  2E76                     L1:	
 20705  2E76  00BB               	movwf	(vfpfcnvrt@f+3)^(0+256)
 20706                           
 20707                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
 20708  2E77  0021               	movlb	1	; select bank1
 20709  2E78  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20710  2E79  0086               	movwf	6
 20711  2E7A  0187               	clrf	7
 20712  2E7B  3002               	movlw	2
 20713  2E7C  0781               	addwf	1,f
 20714  2E7D  3141               	addfsr 1,1
 20715  2E7E  1803               	skipnc
 20716  2E7F  0A81               	incf	1,f
 20717                           
 20718                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 938:       
      +                                return efgtoa(fp, f, c);
 20719  2E80  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 20720  2E81  00A1               	movwf	(efgtoa@fp+1)^(0+128)
 20721  2E82  0863               	movf	vfpfcnvrt@fp^(0+128),w
 20722  2E83  00A0               	movwf	efgtoa@fp^(0+128)
 20723  2E84  0022               	movlb	2	; select bank2
 20724  2E85  083B               	movf	(vfpfcnvrt@f+3)^(0+256),w
 20725  2E86  0021               	movlb	1	; select bank1
 20726  2E87  00A5               	movwf	(efgtoa@f+3)^(0+128)
 20727  2E88  0022               	movlb	2	; select bank2
 20728  2E89  083A               	movf	(vfpfcnvrt@f+2)^(0+256),w
 20729  2E8A  0021               	movlb	1	; select bank1
 20730  2E8B  00A4               	movwf	(efgtoa@f+2)^(0+128)
 20731  2E8C  0022               	movlb	2	; select bank2
 20732  2E8D  0839               	movf	(vfpfcnvrt@f+1)^(0+256),w
 20733  2E8E  0021               	movlb	1	; select bank1
 20734  2E8F  00A3               	movwf	(efgtoa@f+1)^(0+128)
 20735  2E90  0022               	movlb	2	; select bank2
 20736  2E91  0838               	movf	vfpfcnvrt@f^(0+256),w
 20737  2E92  0021               	movlb	1	; select bank1
 20738  2E93  00A2               	movwf	efgtoa@f^(0+128)
 20739  2E94  0022               	movlb	2	; select bank2
 20740  2E95  0845               	movf	vfpfcnvrt@c^(0+256),w
 20741  2E96  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20742  2E97  0820               	movf	??_vfpfcnvrt^(0+256),w
 20743  2E98  0021               	movlb	1	; select bank1
 20744  2E99  00A6               	movwf	efgtoa@c^(0+128)
 20745  2E9A  3180  2058         	fcall	_efgtoa
 20746  2E9C  0021               	movlb	1	; select bank1
 20747  2E9D  0821               	movf	(?_efgtoa+1)^(0+128),w
 20748  2E9E  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 20749  2E9F  0820               	movf	?_efgtoa^(0+128),w
 20750  2EA0  00E3               	movwf	?_vfpfcnvrt^(0+128)
 20751  2EA1  0008               	return
 20752  2EA2                     L26:	
 20753  2EA2                     L25:	
 20754  2EA2  31A0  28FA         	ljmp	l8008
 20755                           
 20756                           	psect	text6_split_6
 20757  20FA                     l8008:	
 20758                           
 20759                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
 20760  20FA  0021               	movlb	1	; select bank1
 20761  20FB  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20762  20FC  0086               	movwf	6
 20763  20FD  0187               	clrf	7
 20764  20FE  3F40               	moviw [0]fsr1
 20765  20FF  00F1               	movwf	strncmp@_l
 20766  2100  3F41               	moviw [1]fsr1
 20767  2101  00F2               	movwf	strncmp@_l+1
 20768  2102  3030               	movlw	low (STR_75| (0+32768))
 20769  2103  00F3               	movwf	strncmp@_r
 20770  2104  30BB               	movlw	high (STR_75| (0+32768))
 20771  2105  00F4               	movwf	strncmp@_r+1
 20772  2106  3003               	movlw	3
 20773  2107  00F5               	movwf	strncmp@n
 20774  2108  3000               	movlw	0
 20775  2109  00F6               	movwf	strncmp@n+1
 20776  210A  3190  2000  31A0   	fcall	_strncmp
 20777  210D  0871               	movf	?_strncmp,w
 20778  210E  0472               	iorwf	?_strncmp+1,w
 20779  210F  1D03               	btfss	3,2
 20780  2110  2961               	goto	l8018
 20781                           
 20782                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
 20783  2111  0021               	movlb	1	; select bank1
 20784  2112  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20785  2113  0086               	movwf	6
 20786  2114  0187               	clrf	7
 20787  2115  3003               	movlw	3
 20788  2116  0781               	addwf	1,f
 20789  2117  3141               	addfsr 1,1
 20790  2118  1803               	skipnc
 20791  2119  0A81               	incf	1,f
 20792                           
 20793                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 20794  211A  0866               	movf	vfpfcnvrt@ap^(0+128),w
 20795  211B  0086               	movwf	6
 20796  211C  3001               	movlw	1	; select bank2/3
 20797  211D  0087               	movwf	7
 20798  211E  0801               	movf	1,w
 20799  211F  0084               	movwf	4
 20800  2120  3001               	movlw	1	; select bank2/3
 20801  2121  0085               	movwf	5
 20802  2122  3002               	movlw	2
 20803  2123  0781               	addwf	1,f
 20804  2124  0800               	movf	0,w
 20805  2125  0022               	movlb	2	; select bank2
 20806  2126  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 20807  2127  01C7               	clrf	(vfpfcnvrt@llu+1)^(0+256)
 20808  2128  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 20809  2129  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 20810  212A  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 20811  212B  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 20812  212C  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 20813  212D  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 20814                           
 20815                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
 20816  212E  0021               	movlb	1	; select bank1
 20817  212F  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 20818  2130  0020               	movlb	0	; select bank0
 20819  2131  00B1               	movwf	otoa@fp+1
 20820  2132  0021               	movlb	1	; select bank1
 20821  2133  0863               	movf	vfpfcnvrt@fp^(0+128),w
 20822  2134  0020               	movlb	0	; select bank0
 20823  2135  00B0               	movwf	otoa@fp
 20824  2136  0022               	movlb	2	; select bank2
 20825  2137  0846               	movf	vfpfcnvrt@llu^(0+256),w
 20826  2138  0020               	movlb	0	; select bank0
 20827  2139  00B2               	movwf	otoa@d
 20828  213A  0022               	movlb	2	; select bank2
 20829  213B  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 20830  213C  0020               	movlb	0	; select bank0
 20831  213D  00B3               	movwf	otoa@d+1
 20832  213E  0022               	movlb	2	; select bank2
 20833  213F  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 20834  2140  0020               	movlb	0	; select bank0
 20835  2141  00B4               	movwf	otoa@d+2
 20836  2142  0022               	movlb	2	; select bank2
 20837  2143  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 20838  2144  0020               	movlb	0	; select bank0
 20839  2145  00B5               	movwf	otoa@d+3
 20840  2146  0022               	movlb	2	; select bank2
 20841  2147  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 20842  2148  0020               	movlb	0	; select bank0
 20843  2149  00B6               	movwf	otoa@d+4
 20844  214A  0022               	movlb	2	; select bank2
 20845  214B  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 20846  214C  0020               	movlb	0	; select bank0
 20847  214D  00B7               	movwf	otoa@d+5
 20848  214E  0022               	movlb	2	; select bank2
 20849  214F  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 20850  2150  0020               	movlb	0	; select bank0
 20851  2151  00B8               	movwf	otoa@d+6
 20852  2152  0022               	movlb	2	; select bank2
 20853  2153  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 20854  2154  0020               	movlb	0	; select bank0
 20855  2155  00B9               	movwf	otoa@d+7
 20856  2156  31A6  261C         	fcall	_otoa
 20857  2158  0020               	movlb	0	; select bank0
 20858  2159  0831               	movf	?_otoa+1,w
 20859  215A  0021               	movlb	1	; select bank1
 20860  215B  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 20861  215C  0020               	movlb	0	; select bank0
 20862  215D  0830               	movf	?_otoa,w
 20863  215E  0021               	movlb	1	; select bank1
 20864  215F  00E3               	movwf	?_vfpfcnvrt^(0+128)
 20865  2160  0008               	return
 20866  2161                     l8018:	
 20867                           
 20868                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
 20869  2161  0021               	movlb	1	; select bank1
 20870  2162  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20871  2163  0086               	movwf	6
 20872  2164  0187               	clrf	7
 20873  2165  3F40               	moviw [0]fsr1
 20874  2166  00F1               	movwf	strncmp@_l
 20875  2167  3F41               	moviw [1]fsr1
 20876  2168  00F2               	movwf	strncmp@_l+1
 20877  2169  3031               	movlw	low ((STR_75+1)| (0+32768))
 20878  216A  00F3               	movwf	strncmp@_r
 20879  216B  30BB               	movlw	high ((STR_75+1)| (0+32768))
 20880  216C  00F4               	movwf	strncmp@_r+1
 20881  216D  3002               	movlw	2
 20882  216E  00F5               	movwf	strncmp@n
 20883  216F  3000               	movlw	0
 20884  2170  00F6               	movwf	strncmp@n+1
 20885  2171  3190  2000  31A0   	fcall	_strncmp
 20886  2174  0871               	movf	?_strncmp,w
 20887  2175  0472               	iorwf	?_strncmp+1,w
 20888  2176  1D03               	btfss	3,2
 20889  2177  29C9               	goto	L28
 20890                           
 20891                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
 20892  2178  0021               	movlb	1	; select bank1
 20893  2179  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20894  217A  0086               	movwf	6
 20895  217B  0187               	clrf	7
 20896  217C  3002               	movlw	2
 20897  217D  0781               	addwf	1,f
 20898  217E  3141               	addfsr 1,1
 20899  217F  1803               	skipnc
 20900  2180  0A81               	incf	1,f
 20901                           
 20902                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
 20903  2181  0866               	movf	vfpfcnvrt@ap^(0+128),w
 20904  2182  0086               	movwf	6
 20905  2183  3001               	movlw	1	; select bank2/3
 20906  2184  0087               	movwf	7
 20907  2185  0801               	movf	1,w
 20908  2186  0084               	movwf	4
 20909  2187  3001               	movlw	1	; select bank2/3
 20910  2188  0085               	movwf	5
 20911  2189  3002               	movlw	2
 20912  218A  0781               	addwf	1,f
 20913  218B  3F00               	moviw [0]fsr0
 20914  218C  0022               	movlb	2	; select bank2
 20915  218D  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 20916  218E  3F01               	moviw [1]fsr0
 20917  218F  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 20918  2190  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 20919  2191  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 20920  2192  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 20921  2193  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 20922  2194  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 20923  2195  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 20924                           
 20925                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 985:       
      +                                return otoa(fp, llu);
 20926  2196  0021               	movlb	1	; select bank1
 20927  2197  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 20928  2198  0020               	movlb	0	; select bank0
 20929  2199  00B1               	movwf	otoa@fp+1
 20930  219A  0021               	movlb	1	; select bank1
 20931  219B  0863               	movf	vfpfcnvrt@fp^(0+128),w
 20932  219C  0020               	movlb	0	; select bank0
 20933  219D  00B0               	movwf	otoa@fp
 20934  219E  0022               	movlb	2	; select bank2
 20935  219F  0846               	movf	vfpfcnvrt@llu^(0+256),w
 20936  21A0  0020               	movlb	0	; select bank0
 20937  21A1  00B2               	movwf	otoa@d
 20938  21A2  0022               	movlb	2	; select bank2
 20939  21A3  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 20940  21A4  0020               	movlb	0	; select bank0
 20941  21A5  00B3               	movwf	otoa@d+1
 20942  21A6  0022               	movlb	2	; select bank2
 20943  21A7  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 20944  21A8  0020               	movlb	0	; select bank0
 20945  21A9  00B4               	movwf	otoa@d+2
 20946  21AA  0022               	movlb	2	; select bank2
 20947  21AB  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 20948  21AC  0020               	movlb	0	; select bank0
 20949  21AD  00B5               	movwf	otoa@d+3
 20950  21AE  0022               	movlb	2	; select bank2
 20951  21AF  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 20952  21B0  0020               	movlb	0	; select bank0
 20953  21B1  00B6               	movwf	otoa@d+4
 20954  21B2  0022               	movlb	2	; select bank2
 20955  21B3  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 20956  21B4  0020               	movlb	0	; select bank0
 20957  21B5  00B7               	movwf	otoa@d+5
 20958  21B6  0022               	movlb	2	; select bank2
 20959  21B7  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 20960  21B8  0020               	movlb	0	; select bank0
 20961  21B9  00B8               	movwf	otoa@d+6
 20962  21BA  0022               	movlb	2	; select bank2
 20963  21BB  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 20964  21BC  0020               	movlb	0	; select bank0
 20965  21BD  00B9               	movwf	otoa@d+7
 20966  21BE  31A6  261C         	fcall	_otoa
 20967  21C0  0020               	movlb	0	; select bank0
 20968  21C1  0831               	movf	?_otoa+1,w
 20969  21C2  0021               	movlb	1	; select bank1
 20970  21C3  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 20971  21C4  0020               	movlb	0	; select bank0
 20972  21C5  0830               	movf	?_otoa,w
 20973  21C6  0021               	movlb	1	; select bank1
 20974  21C7  00E3               	movwf	?_vfpfcnvrt^(0+128)
 20975  21C8  0008               	return
 20976  21C9                     L28:	
 20977  21C9                     L27:	
 20978  21C9  31A5  2D36         	ljmp	l8028
 20979                           
 20980                           	psect	text6_split_7
 20981  2536                     l8028:	
 20982                           
 20983                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
 20984  2536  0021               	movlb	1	; select bank1
 20985  2537  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20986  2538  0086               	movwf	6
 20987  2539  0187               	clrf	7
 20988  253A  3F40               	moviw [0]fsr1
 20989  253B  0022               	movlb	2	; select bank2
 20990  253C  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20991  253D  3F41               	moviw [1]fsr1
 20992  253E  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 20993  253F  0820               	movf	??_vfpfcnvrt^(0+256),w
 20994  2540  0084               	movwf	4
 20995  2541  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 20996  2542  0085               	movwf	5
 20997  2543  0012               	moviw fsr0++
 20998  2544  3A6F               	xorlw	111
 20999  2545  1D03               	btfss	3,2
 21000  2546  2D98               	goto	l8038
 21001                           
 21002                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
 21003  2547  0021               	movlb	1	; select bank1
 21004  2548  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21005  2549  0086               	movwf	6
 21006  254A  0187               	clrf	7
 21007  254B  3001               	movlw	1
 21008  254C  0781               	addwf	1,f
 21009  254D  3141               	addfsr 1,1
 21010  254E  1803               	skipnc
 21011  254F  0A81               	incf	1,f
 21012                           
 21013                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
 21014  2550  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21015  2551  0086               	movwf	6
 21016  2552  3001               	movlw	1	; select bank2/3
 21017  2553  0087               	movwf	7
 21018  2554  0801               	movf	1,w
 21019  2555  0084               	movwf	4
 21020  2556  3001               	movlw	1	; select bank2/3
 21021  2557  0085               	movwf	5
 21022  2558  3002               	movlw	2
 21023  2559  0781               	addwf	1,f
 21024  255A  3F00               	moviw [0]fsr0
 21025  255B  0022               	movlb	2	; select bank2
 21026  255C  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 21027  255D  3F01               	moviw [1]fsr0
 21028  255E  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 21029  255F  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 21030  2560  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 21031  2561  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 21032  2562  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 21033  2563  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 21034  2564  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 21035                           
 21036                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 995:       
      +                                return otoa(fp, llu);
 21037  2565  0021               	movlb	1	; select bank1
 21038  2566  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21039  2567  0020               	movlb	0	; select bank0
 21040  2568  00B1               	movwf	otoa@fp+1
 21041  2569  0021               	movlb	1	; select bank1
 21042  256A  0863               	movf	vfpfcnvrt@fp^(0+128),w
 21043  256B  0020               	movlb	0	; select bank0
 21044  256C  00B0               	movwf	otoa@fp
 21045  256D  0022               	movlb	2	; select bank2
 21046  256E  0846               	movf	vfpfcnvrt@llu^(0+256),w
 21047  256F  0020               	movlb	0	; select bank0
 21048  2570  00B2               	movwf	otoa@d
 21049  2571  0022               	movlb	2	; select bank2
 21050  2572  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 21051  2573  0020               	movlb	0	; select bank0
 21052  2574  00B3               	movwf	otoa@d+1
 21053  2575  0022               	movlb	2	; select bank2
 21054  2576  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 21055  2577  0020               	movlb	0	; select bank0
 21056  2578  00B4               	movwf	otoa@d+2
 21057  2579  0022               	movlb	2	; select bank2
 21058  257A  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 21059  257B  0020               	movlb	0	; select bank0
 21060  257C  00B5               	movwf	otoa@d+3
 21061  257D  0022               	movlb	2	; select bank2
 21062  257E  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 21063  257F  0020               	movlb	0	; select bank0
 21064  2580  00B6               	movwf	otoa@d+4
 21065  2581  0022               	movlb	2	; select bank2
 21066  2582  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 21067  2583  0020               	movlb	0	; select bank0
 21068  2584  00B7               	movwf	otoa@d+5
 21069  2585  0022               	movlb	2	; select bank2
 21070  2586  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 21071  2587  0020               	movlb	0	; select bank0
 21072  2588  00B8               	movwf	otoa@d+6
 21073  2589  0022               	movlb	2	; select bank2
 21074  258A  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 21075  258B  0020               	movlb	0	; select bank0
 21076  258C  00B9               	movwf	otoa@d+7
 21077  258D  31A6  261C         	fcall	_otoa
 21078  258F  0020               	movlb	0	; select bank0
 21079  2590  0831               	movf	?_otoa+1,w
 21080  2591  0021               	movlb	1	; select bank1
 21081  2592  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 21082  2593  0020               	movlb	0	; select bank0
 21083  2594  0830               	movf	?_otoa,w
 21084  2595  0021               	movlb	1	; select bank1
 21085  2596  00E3               	movwf	?_vfpfcnvrt^(0+128)
 21086  2597  0008               	return
 21087  2598                     l8038:	
 21088                           
 21089                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1000:      
      +                             if (!strncmp(*fmt, "lo", ((sizeof("lo")/sizeof("lo"[0]))-1))) {
 21090  2598  0021               	movlb	1	; select bank1
 21091  2599  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21092  259A  0086               	movwf	6
 21093  259B  0187               	clrf	7
 21094  259C  3F40               	moviw [0]fsr1
 21095  259D  00F1               	movwf	strncmp@_l
 21096  259E  3F41               	moviw [1]fsr1
 21097  259F  00F2               	movwf	strncmp@_l+1
 21098  25A0  3057               	movlw	low (STR_85| (0+32768))
 21099  25A1  00F3               	movwf	strncmp@_r
 21100  25A2  30BB               	movlw	high (STR_85| (0+32768))
 21101  25A3  00F4               	movwf	strncmp@_r+1
 21102  25A4  3002               	movlw	2
 21103  25A5  00F5               	movwf	strncmp@n
 21104  25A6  3000               	movlw	0
 21105  25A7  00F6               	movwf	strncmp@n+1
 21106  25A8  3190  2000  31A5   	fcall	_strncmp
 21107  25AB  0871               	movf	?_strncmp,w
 21108  25AC  0472               	iorwf	?_strncmp+1,w
 21109  25AD  1D03               	btfss	3,2
 21110  25AE  2E1A               	goto	L30
 21111                           
 21112                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1002:      
      +                                 *fmt += ((sizeof("lo")/sizeof("lo"[0]))-1);
 21113  25AF  0021               	movlb	1	; select bank1
 21114  25B0  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21115  25B1  0086               	movwf	6
 21116  25B2  0187               	clrf	7
 21117  25B3  3002               	movlw	2
 21118  25B4  0781               	addwf	1,f
 21119  25B5  3141               	addfsr 1,1
 21120  25B6  1803               	skipnc
 21121  25B7  0A81               	incf	1,f
 21122                           
 21123                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1003:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
 21124  25B8  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21125  25B9  0086               	movwf	6
 21126  25BA  3001               	movlw	1	; select bank2/3
 21127  25BB  0087               	movwf	7
 21128  25BC  0801               	movf	1,w
 21129  25BD  0084               	movwf	4
 21130  25BE  3001               	movlw	1	; select bank2/3
 21131  25BF  0085               	movwf	5
 21132  25C0  3004               	movlw	4
 21133  25C1  0781               	addwf	1,f
 21134  25C2  3F00               	moviw [0]fsr0
 21135  25C3  0022               	movlb	2	; select bank2
 21136  25C4  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21137  25C5  3F01               	moviw [1]fsr0
 21138  25C6  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21139  25C7  3F02               	moviw [2]fsr0
 21140  25C8  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 21141  25C9  3F03               	moviw [3]fsr0
 21142  25CA  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 21143  25CB  0820               	movf	??_vfpfcnvrt^(0+256),w
 21144  25CC  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
 21145  25CD  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 21146  25CE  00A5               	movwf	((??_vfpfcnvrt+4)^(0+256)+1)
 21147  25CF  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 21148  25D0  00A6               	movwf	((??_vfpfcnvrt+4)^(0+256)+2)
 21149  25D1  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 21150  25D2  00A7               	movwf	((??_vfpfcnvrt+4)^(0+256)+3)
 21151  25D3  01A8               	clrf	((??_vfpfcnvrt+4)^(0+256)+4)
 21152  25D4  01A9               	clrf	((??_vfpfcnvrt+4)^(0+256)+5)
 21153  25D5  01AA               	clrf	((??_vfpfcnvrt+4)^(0+256)+6)
 21154  25D6  01AB               	clrf	((??_vfpfcnvrt+4)^(0+256)+7)
 21155  25D7  082B               	movf	((??_vfpfcnvrt+4)^(0+256)+7),w
 21156  25D8  00CD               	movwf	(vfpfcnvrt@llu+7)^(0+256)
 21157  25D9  082A               	movf	((??_vfpfcnvrt+4)^(0+256)+6),w
 21158  25DA  00CC               	movwf	(vfpfcnvrt@llu+6)^(0+256)
 21159  25DB  0829               	movf	((??_vfpfcnvrt+4)^(0+256)+5),w
 21160  25DC  00CB               	movwf	(vfpfcnvrt@llu+5)^(0+256)
 21161  25DD  0828               	movf	((??_vfpfcnvrt+4)^(0+256)+4),w
 21162  25DE  00CA               	movwf	(vfpfcnvrt@llu+4)^(0+256)
 21163  25DF  0827               	movf	((??_vfpfcnvrt+4)^(0+256)+3),w
 21164  25E0  00C9               	movwf	(vfpfcnvrt@llu+3)^(0+256)
 21165  25E1  0826               	movf	((??_vfpfcnvrt+4)^(0+256)+2),w
 21166  25E2  00C8               	movwf	(vfpfcnvrt@llu+2)^(0+256)
 21167  25E3  0825               	movf	((??_vfpfcnvrt+4)^(0+256)+1),w
 21168  25E4  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 21169  25E5  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
 21170  25E6  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 21171                           
 21172                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1005:      
      +                                 return otoa(fp, llu);
 21173  25E7  0021               	movlb	1	; select bank1
 21174  25E8  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21175  25E9  0020               	movlb	0	; select bank0
 21176  25EA  00B1               	movwf	otoa@fp+1
 21177  25EB  0021               	movlb	1	; select bank1
 21178  25EC  0863               	movf	vfpfcnvrt@fp^(0+128),w
 21179  25ED  0020               	movlb	0	; select bank0
 21180  25EE  00B0               	movwf	otoa@fp
 21181  25EF  0022               	movlb	2	; select bank2
 21182  25F0  0846               	movf	vfpfcnvrt@llu^(0+256),w
 21183  25F1  0020               	movlb	0	; select bank0
 21184  25F2  00B2               	movwf	otoa@d
 21185  25F3  0022               	movlb	2	; select bank2
 21186  25F4  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 21187  25F5  0020               	movlb	0	; select bank0
 21188  25F6  00B3               	movwf	otoa@d+1
 21189  25F7  0022               	movlb	2	; select bank2
 21190  25F8  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 21191  25F9  0020               	movlb	0	; select bank0
 21192  25FA  00B4               	movwf	otoa@d+2
 21193  25FB  0022               	movlb	2	; select bank2
 21194  25FC  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 21195  25FD  0020               	movlb	0	; select bank0
 21196  25FE  00B5               	movwf	otoa@d+3
 21197  25FF  0022               	movlb	2	; select bank2
 21198  2600  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 21199  2601  0020               	movlb	0	; select bank0
 21200  2602  00B6               	movwf	otoa@d+4
 21201  2603  0022               	movlb	2	; select bank2
 21202  2604  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 21203  2605  0020               	movlb	0	; select bank0
 21204  2606  00B7               	movwf	otoa@d+5
 21205  2607  0022               	movlb	2	; select bank2
 21206  2608  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 21207  2609  0020               	movlb	0	; select bank0
 21208  260A  00B8               	movwf	otoa@d+6
 21209  260B  0022               	movlb	2	; select bank2
 21210  260C  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 21211  260D  0020               	movlb	0	; select bank0
 21212  260E  00B9               	movwf	otoa@d+7
 21213  260F  31A6  261C         	fcall	_otoa
 21214  2611  0020               	movlb	0	; select bank0
 21215  2612  0831               	movf	?_otoa+1,w
 21216  2613  0021               	movlb	1	; select bank1
 21217  2614  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 21218  2615  0020               	movlb	0	; select bank0
 21219  2616  0830               	movf	?_otoa,w
 21220  2617  0021               	movlb	1	; select bank1
 21221  2618  00E3               	movwf	?_vfpfcnvrt^(0+128)
 21222  2619  0008               	return
 21223  261A                     L30:	
 21224  261A                     L29:	
 21225  261A  3188  283F         	ljmp	l8048
 21226                           
 21227                           	psect	text6_split_8
 21228  083F                     l8048:	
 21229                           
 21230                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
 21231  083F  0021               	movlb	1	; select bank1
 21232  0840  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21233  0841  0086               	movwf	6
 21234  0842  0187               	clrf	7
 21235  0843  3F40               	moviw [0]fsr1
 21236  0844  00F1               	movwf	strncmp@_l
 21237  0845  3F41               	moviw [1]fsr1
 21238  0846  00F2               	movwf	strncmp@_l+1
 21239  0847  305A               	movlw	low (STR_90| (0+32768))
 21240  0848  00F3               	movwf	strncmp@_r
 21241  0849  30BB               	movlw	high (STR_90| (0+32768))
 21242  084A  00F4               	movwf	strncmp@_r+1
 21243  084B  3002               	movlw	2
 21244  084C  00F5               	movwf	strncmp@n
 21245  084D  3000               	movlw	0
 21246  084E  00F6               	movwf	strncmp@n+1
 21247  084F  3190  2000  3188   	fcall	_strncmp
 21248  0852  0871               	movf	?_strncmp,w
 21249  0853  0472               	iorwf	?_strncmp+1,w
 21250  0854  1D03               	btfss	3,2
 21251  0855  28A7               	goto	l8058
 21252                           
 21253                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
 21254  0856  0021               	movlb	1	; select bank1
 21255  0857  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21256  0858  0086               	movwf	6
 21257  0859  0187               	clrf	7
 21258  085A  3002               	movlw	2
 21259  085B  0781               	addwf	1,f
 21260  085C  3141               	addfsr 1,1
 21261  085D  1803               	skipnc
 21262  085E  0A81               	incf	1,f
 21263                           
 21264                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 21265  085F  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21266  0860  0086               	movwf	6
 21267  0861  3001               	movlw	1	; select bank2/3
 21268  0862  0087               	movwf	7
 21269  0863  0801               	movf	1,w
 21270  0864  0084               	movwf	4
 21271  0865  3001               	movlw	1	; select bank2/3
 21272  0866  0085               	movwf	5
 21273  0867  3002               	movlw	2
 21274  0868  0781               	addwf	1,f
 21275  0869  3F00               	moviw [0]fsr0
 21276  086A  0022               	movlb	2	; select bank2
 21277  086B  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 21278  086C  3F01               	moviw [1]fsr0
 21279  086D  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 21280  086E  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 21281  086F  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 21282  0870  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 21283  0871  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 21284  0872  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 21285  0873  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 21286                           
 21287                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1049:      
      +                                 return otoa(fp, llu);
 21288  0874  0021               	movlb	1	; select bank1
 21289  0875  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21290  0876  0020               	movlb	0	; select bank0
 21291  0877  00B1               	movwf	otoa@fp+1
 21292  0878  0021               	movlb	1	; select bank1
 21293  0879  0863               	movf	vfpfcnvrt@fp^(0+128),w
 21294  087A  0020               	movlb	0	; select bank0
 21295  087B  00B0               	movwf	otoa@fp
 21296  087C  0022               	movlb	2	; select bank2
 21297  087D  0846               	movf	vfpfcnvrt@llu^(0+256),w
 21298  087E  0020               	movlb	0	; select bank0
 21299  087F  00B2               	movwf	otoa@d
 21300  0880  0022               	movlb	2	; select bank2
 21301  0881  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 21302  0882  0020               	movlb	0	; select bank0
 21303  0883  00B3               	movwf	otoa@d+1
 21304  0884  0022               	movlb	2	; select bank2
 21305  0885  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 21306  0886  0020               	movlb	0	; select bank0
 21307  0887  00B4               	movwf	otoa@d+2
 21308  0888  0022               	movlb	2	; select bank2
 21309  0889  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 21310  088A  0020               	movlb	0	; select bank0
 21311  088B  00B5               	movwf	otoa@d+3
 21312  088C  0022               	movlb	2	; select bank2
 21313  088D  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 21314  088E  0020               	movlb	0	; select bank0
 21315  088F  00B6               	movwf	otoa@d+4
 21316  0890  0022               	movlb	2	; select bank2
 21317  0891  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 21318  0892  0020               	movlb	0	; select bank0
 21319  0893  00B7               	movwf	otoa@d+5
 21320  0894  0022               	movlb	2	; select bank2
 21321  0895  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 21322  0896  0020               	movlb	0	; select bank0
 21323  0897  00B8               	movwf	otoa@d+6
 21324  0898  0022               	movlb	2	; select bank2
 21325  0899  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 21326  089A  0020               	movlb	0	; select bank0
 21327  089B  00B9               	movwf	otoa@d+7
 21328  089C  31A6  261C         	fcall	_otoa
 21329  089E  0020               	movlb	0	; select bank0
 21330  089F  0831               	movf	?_otoa+1,w
 21331  08A0  0021               	movlb	1	; select bank1
 21332  08A1  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 21333  08A2  0020               	movlb	0	; select bank0
 21334  08A3  0830               	movf	?_otoa,w
 21335  08A4  0021               	movlb	1	; select bank1
 21336  08A5  00E3               	movwf	?_vfpfcnvrt^(0+128)
 21337  08A6  0008               	return
 21338  08A7                     l8058:	
 21339                           
 21340                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
 21341  08A7  0021               	movlb	1	; select bank1
 21342  08A8  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21343  08A9  0086               	movwf	6
 21344  08AA  0187               	clrf	7
 21345  08AB  3F40               	moviw [0]fsr1
 21346  08AC  00F1               	movwf	strncmp@_l
 21347  08AD  3F41               	moviw [1]fsr1
 21348  08AE  00F2               	movwf	strncmp@_l+1
 21349  08AF  302C               	movlw	low (STR_95| (0+32768))
 21350  08B0  00F3               	movwf	strncmp@_r
 21351  08B1  30BB               	movlw	high (STR_95| (0+32768))
 21352  08B2  00F4               	movwf	strncmp@_r+1
 21353  08B3  3003               	movlw	3
 21354  08B4  00F5               	movwf	strncmp@n
 21355  08B5  3000               	movlw	0
 21356  08B6  00F6               	movwf	strncmp@n+1
 21357  08B7  3190  2000  3188   	fcall	_strncmp
 21358  08BA  0871               	movf	?_strncmp,w
 21359  08BB  0472               	iorwf	?_strncmp+1,w
 21360  08BC  1D03               	btfss	3,2
 21361  08BD  2977               	goto	l8070
 21362                           
 21363                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
 21364  08BE  0021               	movlb	1	; select bank1
 21365  08BF  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21366  08C0  0086               	movwf	6
 21367  08C1  0187               	clrf	7
 21368  08C2  3003               	movlw	3
 21369  08C3  0781               	addwf	1,f
 21370  08C4  3141               	addfsr 1,1
 21371  08C5  1803               	skipnc
 21372  08C6  0A81               	incf	1,f
 21373                           
 21374                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
 21375  08C7  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21376  08C8  0086               	movwf	6
 21377  08C9  3001               	movlw	1	; select bank2/3
 21378  08CA  0087               	movwf	7
 21379  08CB  3F40               	moviw [0]fsr1
 21380  08CC  0084               	movwf	4
 21381  08CD  3001               	movlw	1	; select bank2/3
 21382  08CE  0085               	movwf	5
 21383  08CF  0A81               	incf	1,f
 21384  08D0  0800               	movf	0,w
 21385  08D1  0022               	movlb	2	; select bank2
 21386  08D2  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21387  08D3  0820               	movf	??_vfpfcnvrt^(0+256),w
 21388  08D4  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 21389                           
 21390                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
 21391  08D5  0023               	movlb	3	; select bank3
 21392  08D6  083C               	movf	_nout^(0+384),w
 21393  08D7  0022               	movlb	2	; select bank2
 21394  08D8  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21395  08D9  0844               	movf	vfpfcnvrt@vp^(0+256),w
 21396  08DA  0086               	movwf	6
 21397  08DB  3001               	movlw	1	; select bank2/3
 21398  08DC  0087               	movwf	7
 21399  08DD  0820               	movf	??_vfpfcnvrt^(0+256),w
 21400  08DE  0081               	movwf	1
 21401  08DF  2973               	goto	l8066
 21402  08E0                     l8072:	
 21403                           
 21404                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
 21405  08E0  0021               	movlb	1	; select bank1
 21406  08E1  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21407  08E2  0086               	movwf	6
 21408  08E3  0187               	clrf	7
 21409  08E4  3002               	movlw	2
 21410  08E5  0781               	addwf	1,f
 21411  08E6  3141               	addfsr 1,1
 21412  08E7  1803               	skipnc
 21413  08E8  0A81               	incf	1,f
 21414                           
 21415                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
 21416  08E9  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21417  08EA  0086               	movwf	6
 21418  08EB  3001               	movlw	1	; select bank2/3
 21419  08EC  0087               	movwf	7
 21420  08ED  3F40               	moviw [0]fsr1
 21421  08EE  0084               	movwf	4
 21422  08EF  3001               	movlw	1	; select bank2/3
 21423  08F0  0085               	movwf	5
 21424  08F1  0A81               	incf	1,f
 21425  08F2  0800               	movf	0,w
 21426  08F3  0022               	movlb	2	; select bank2
 21427  08F4  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21428  08F5  0820               	movf	??_vfpfcnvrt^(0+256),w
 21429  08F6  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 21430                           
 21431                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
 21432  08F7  0844               	movf	vfpfcnvrt@vp^(0+256),w
 21433  08F8  0086               	movwf	6
 21434  08F9  3001               	movlw	1	; select bank2/3
 21435  08FA  0087               	movwf	7
 21436  08FB  0023               	movlb	3	; select bank3
 21437  08FC  083C               	movf	_nout^(0+384),w
 21438  08FD  3FC0               	movwi [0]fsr1
 21439  08FE  083D               	movf	(_nout+1)^(0+384),w
 21440  08FF  3FC1               	movwi [1]fsr1
 21441  0900  2973               	goto	l8066
 21442  0901                     l8084:	
 21443                           
 21444                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
 21445  0901  0021               	movlb	1	; select bank1
 21446  0902  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21447  0903  0086               	movwf	6
 21448  0904  0187               	clrf	7
 21449  0905  3001               	movlw	1
 21450  0906  0781               	addwf	1,f
 21451  0907  3141               	addfsr 1,1
 21452  0908  1803               	skipnc
 21453  0909  0A81               	incf	1,f
 21454                           
 21455                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
 21456  090A  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21457  090B  0086               	movwf	6
 21458  090C  3001               	movlw	1	; select bank2/3
 21459  090D  0087               	movwf	7
 21460  090E  3F40               	moviw [0]fsr1
 21461  090F  0084               	movwf	4
 21462  0910  3001               	movlw	1	; select bank2/3
 21463  0911  0085               	movwf	5
 21464  0912  0A81               	incf	1,f
 21465  0913  0800               	movf	0,w
 21466  0914  0022               	movlb	2	; select bank2
 21467  0915  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21468  0916  0820               	movf	??_vfpfcnvrt^(0+256),w
 21469  0917  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 21470                           
 21471                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
 21472  0918  0844               	movf	vfpfcnvrt@vp^(0+256),w
 21473  0919  0086               	movwf	6
 21474  091A  3001               	movlw	1	; select bank2/3
 21475  091B  0087               	movwf	7
 21476  091C  0023               	movlb	3	; select bank3
 21477  091D  083C               	movf	_nout^(0+384),w
 21478  091E  3FC0               	movwi [0]fsr1
 21479  091F  083D               	movf	(_nout+1)^(0+384),w
 21480  0920  3FC1               	movwi [1]fsr1
 21481  0921  2973               	goto	l8066
 21482  0922                     l8096:	
 21483                           
 21484                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1087:      
      +                                 *fmt += ((sizeof("ln")/sizeof("ln"[0]))-1);
 21485  0922  0021               	movlb	1	; select bank1
 21486  0923  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21487  0924  0086               	movwf	6
 21488  0925  0187               	clrf	7
 21489  0926  3002               	movlw	2
 21490  0927  0781               	addwf	1,f
 21491  0928  3141               	addfsr 1,1
 21492  0929  1803               	skipnc
 21493  092A  0A81               	incf	1,f
 21494                           
 21495                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1088:      
      +                                 vp = (void *)(*(long * *)__va_arg(*(long * **)ap, (long *)0));
 21496  092B  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21497  092C  0086               	movwf	6
 21498  092D  3001               	movlw	1	; select bank2/3
 21499  092E  0087               	movwf	7
 21500  092F  3F40               	moviw [0]fsr1
 21501  0930  0084               	movwf	4
 21502  0931  3001               	movlw	1	; select bank2/3
 21503  0932  0085               	movwf	5
 21504  0933  0A81               	incf	1,f
 21505  0934  0800               	movf	0,w
 21506  0935  0022               	movlb	2	; select bank2
 21507  0936  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21508  0937  0820               	movf	??_vfpfcnvrt^(0+256),w
 21509  0938  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 21510                           
 21511                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1089:      
      +                                 *(long *)vp = (long)nout;
 21512  0939  0023               	movlb	3	; select bank3
 21513  093A  083C               	movf	_nout^(0+384),w
 21514  093B  0022               	movlb	2	; select bank2
 21515  093C  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21516  093D  0023               	movlb	3	; select bank3
 21517  093E  083D               	movf	(_nout+1)^(0+384),w
 21518  093F  0022               	movlb	2	; select bank2
 21519  0940  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21520  0941  3000               	movlw	0
 21521  0942  1BA1               	btfsc	(??_vfpfcnvrt^(0+256)+1),7
 21522  0943  30FF               	movlw	255
 21523  0944  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 21524  0945  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 21525  0946  0844               	movf	vfpfcnvrt@vp^(0+256),w
 21526  0947  0086               	movwf	6
 21527  0948  3001               	movlw	1	; select bank2/3
 21528  0949  0087               	movwf	7
 21529  094A  0820               	movf	??_vfpfcnvrt^(0+256),w
 21530  094B  3FC0               	movwi [0]fsr1
 21531  094C  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 21532  094D  3FC1               	movwi [1]fsr1
 21533  094E  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 21534  094F  3FC2               	movwi [2]fsr1
 21535  0950  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 21536  0951  3FC3               	movwi [3]fsr1
 21537  0952  2973               	goto	l8066
 21538  0953                     l8108:	
 21539                           
 21540                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
 21541  0953  0021               	movlb	1	; select bank1
 21542  0954  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21543  0955  0086               	movwf	6
 21544  0956  0187               	clrf	7
 21545  0957  3002               	movlw	2
 21546  0958  0781               	addwf	1,f
 21547  0959  3141               	addfsr 1,1
 21548  095A  1803               	skipnc
 21549  095B  0A81               	incf	1,f
 21550                           
 21551                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
 21552  095C  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21553  095D  0086               	movwf	6
 21554  095E  3001               	movlw	1	; select bank2/3
 21555  095F  0087               	movwf	7
 21556  0960  3F40               	moviw [0]fsr1
 21557  0961  0084               	movwf	4
 21558  0962  3001               	movlw	1	; select bank2/3
 21559  0963  0085               	movwf	5
 21560  0964  0A81               	incf	1,f
 21561  0965  0800               	movf	0,w
 21562  0966  0022               	movlb	2	; select bank2
 21563  0967  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21564  0968  0820               	movf	??_vfpfcnvrt^(0+256),w
 21565  0969  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 21566                           
 21567                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
 21568  096A  0844               	movf	vfpfcnvrt@vp^(0+256),w
 21569  096B  0086               	movwf	6
 21570  096C  3001               	movlw	1	; select bank2/3
 21571  096D  0087               	movwf	7
 21572  096E  0023               	movlb	3	; select bank3
 21573  096F  083C               	movf	_nout^(0+384),w
 21574  0970  3FC0               	movwi [0]fsr1
 21575  0971  083D               	movf	(_nout+1)^(0+384),w
 21576  0972  3FC1               	movwi [1]fsr1
 21577  0973                     l8066:	
 21578                           
 21579                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
 21580  0973  0021               	movlb	1	; select bank1
 21581  0974  01E3               	clrf	?_vfpfcnvrt^(0+128)
 21582  0975  01E4               	clrf	(?_vfpfcnvrt+1)^(0+128)
 21583  0976  0008               	return
 21584  0977                     l8070:	
 21585                           
 21586                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
 21587  0977  0021               	movlb	1	; select bank1
 21588  0978  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21589  0979  0086               	movwf	6
 21590  097A  0187               	clrf	7
 21591  097B  3F40               	moviw [0]fsr1
 21592  097C  00F1               	movwf	strncmp@_l
 21593  097D  3F41               	moviw [1]fsr1
 21594  097E  00F2               	movwf	strncmp@_l+1
 21595  097F  302D               	movlw	low ((STR_95+1)| (0+32768))
 21596  0980  00F3               	movwf	strncmp@_r
 21597  0981  30BB               	movlw	high ((STR_95+1)| (0+32768))
 21598  0982  00F4               	movwf	strncmp@_r+1
 21599  0983  3002               	movlw	2
 21600  0984  00F5               	movwf	strncmp@n
 21601  0985  3000               	movlw	0
 21602  0986  00F6               	movwf	strncmp@n+1
 21603  0987  3190  2000  3188   	fcall	_strncmp
 21604  098A  0871               	movf	?_strncmp,w
 21605  098B  0472               	iorwf	?_strncmp+1,w
 21606  098C  1903               	btfsc	3,2
 21607  098D  28E0               	goto	l8072
 21608                           
 21609                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
 21610  098E  0021               	movlb	1	; select bank1
 21611  098F  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21612  0990  0086               	movwf	6
 21613  0991  0187               	clrf	7
 21614  0992  3F40               	moviw [0]fsr1
 21615  0993  0022               	movlb	2	; select bank2
 21616  0994  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21617  0995  3F41               	moviw [1]fsr1
 21618  0996  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21619  0997  0820               	movf	??_vfpfcnvrt^(0+256),w
 21620  0998  0084               	movwf	4
 21621  0999  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 21622  099A  0085               	movwf	5
 21623  099B  0012               	moviw fsr0++
 21624  099C  3A6E               	xorlw	110
 21625  099D  1903               	btfsc	3,2
 21626  099E  2901               	goto	l8084
 21627                           
 21628                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1085:      
      +                             if (!strncmp(*fmt, "ln", ((sizeof("ln")/sizeof("ln"[0]))-1))) {
 21629  099F  0021               	movlb	1	; select bank1
 21630  09A0  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21631  09A1  0086               	movwf	6
 21632  09A2  0187               	clrf	7
 21633  09A3  3F40               	moviw [0]fsr1
 21634  09A4  00F1               	movwf	strncmp@_l
 21635  09A5  3F41               	moviw [1]fsr1
 21636  09A6  00F2               	movwf	strncmp@_l+1
 21637  09A7  3051               	movlw	low (STR_105| (0+32768))
 21638  09A8  00F3               	movwf	strncmp@_r
 21639  09A9  30BB               	movlw	high (STR_105| (0+32768))
 21640  09AA  00F4               	movwf	strncmp@_r+1
 21641  09AB  3002               	movlw	2
 21642  09AC  00F5               	movwf	strncmp@n
 21643  09AD  3000               	movlw	0
 21644  09AE  00F6               	movwf	strncmp@n+1
 21645  09AF  3190  2000  3188   	fcall	_strncmp
 21646  09B2  0871               	movf	?_strncmp,w
 21647  09B3  0472               	iorwf	?_strncmp+1,w
 21648  09B4  1903               	btfsc	3,2
 21649  09B5  2922               	goto	l8096
 21650                           
 21651                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
 21652  09B6  0021               	movlb	1	; select bank1
 21653  09B7  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21654  09B8  0086               	movwf	6
 21655  09B9  0187               	clrf	7
 21656  09BA  3F40               	moviw [0]fsr1
 21657  09BB  00F1               	movwf	strncmp@_l
 21658  09BC  3F41               	moviw [1]fsr1
 21659  09BD  00F2               	movwf	strncmp@_l+1
 21660  09BE  3054               	movlw	low (STR_110| (0+32768))
 21661  09BF  00F3               	movwf	strncmp@_r
 21662  09C0  30BB               	movlw	high (STR_110| (0+32768))
 21663  09C1  00F4               	movwf	strncmp@_r+1
 21664  09C2  3002               	movlw	2
 21665  09C3  00F5               	movwf	strncmp@n
 21666  09C4  3000               	movlw	0
 21667  09C5  00F6               	movwf	strncmp@n+1
 21668  09C6  3190  2000  3188   	fcall	_strncmp
 21669  09C9  0871               	movf	?_strncmp,w
 21670  09CA  0472               	iorwf	?_strncmp+1,w
 21671  09CB  1903               	btfsc	3,2
 21672  09CC  2953               	goto	l8108
 21673                           
 21674                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
 21675  09CD  0021               	movlb	1	; select bank1
 21676  09CE  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21677  09CF  0086               	movwf	6
 21678  09D0  0187               	clrf	7
 21679  09D1  3F40               	moviw [0]fsr1
 21680  09D2  0022               	movlb	2	; select bank2
 21681  09D3  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21682  09D4  3F41               	moviw [1]fsr1
 21683  09D5  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21684  09D6  0820               	movf	??_vfpfcnvrt^(0+256),w
 21685  09D7  0084               	movwf	4
 21686  09D8  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 21687  09D9  0085               	movwf	5
 21688  09DA  0012               	moviw fsr0++
 21689  09DB  3A70               	xorlw	112
 21690  09DC  1D03               	btfss	3,2
 21691  09DD  2A43               	goto	l8128
 21692                           
 21693                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
 21694  09DE  0021               	movlb	1	; select bank1
 21695  09DF  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21696  09E0  0086               	movwf	6
 21697  09E1  0187               	clrf	7
 21698  09E2  3001               	movlw	1
 21699  09E3  0781               	addwf	1,f
 21700  09E4  3141               	addfsr 1,1
 21701  09E5  1803               	skipnc
 21702  09E6  0A81               	incf	1,f
 21703                           
 21704                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
 21705  09E7  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21706  09E8  0086               	movwf	6
 21707  09E9  3001               	movlw	1	; select bank2/3
 21708  09EA  0087               	movwf	7
 21709  09EB  3F40               	moviw [0]fsr1
 21710  09EC  0084               	movwf	4
 21711  09ED  3001               	movlw	1	; select bank2/3
 21712  09EE  0085               	movwf	5
 21713  09EF  0A81               	incf	1,f
 21714  09F0  0800               	movf	0,w
 21715  09F1  0022               	movlb	2	; select bank2
 21716  09F2  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21717  09F3  01A1               	clrf	(??_vfpfcnvrt^(0+256)+1)
 21718  09F4  01A2               	clrf	(??_vfpfcnvrt^(0+256)+2)
 21719  09F5  01A3               	clrf	(??_vfpfcnvrt^(0+256)+3)
 21720  09F6  01A4               	clrf	(??_vfpfcnvrt^(0+256)+4)
 21721  09F7  01A5               	clrf	(??_vfpfcnvrt^(0+256)+5)
 21722  09F8  01A6               	clrf	(??_vfpfcnvrt^(0+256)+6)
 21723  09F9  01A7               	clrf	(??_vfpfcnvrt^(0+256)+7)
 21724  09FA  0827               	movf	(??_vfpfcnvrt^(0+256)+7),w
 21725  09FB  00CD               	movwf	(vfpfcnvrt@llu+7)^(0+256)
 21726  09FC  0826               	movf	(??_vfpfcnvrt^(0+256)+6),w
 21727  09FD  00CC               	movwf	(vfpfcnvrt@llu+6)^(0+256)
 21728  09FE  0825               	movf	(??_vfpfcnvrt^(0+256)+5),w
 21729  09FF  00CB               	movwf	(vfpfcnvrt@llu+5)^(0+256)
 21730  0A00  0824               	movf	(??_vfpfcnvrt^(0+256)+4),w
 21731  0A01  00CA               	movwf	(vfpfcnvrt@llu+4)^(0+256)
 21732  0A02  0823               	movf	(??_vfpfcnvrt^(0+256)+3),w
 21733  0A03  00C9               	movwf	(vfpfcnvrt@llu+3)^(0+256)
 21734  0A04  0822               	movf	(??_vfpfcnvrt^(0+256)+2),w
 21735  0A05  00C8               	movwf	(vfpfcnvrt@llu+2)^(0+256)
 21736  0A06  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 21737  0A07  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 21738  0A08  0820               	movf	??_vfpfcnvrt^(0+256),w
 21739  0A09  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 21740                           
 21741                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
 21742  0A0A  0021               	movlb	1	; select bank1
 21743  0A0B  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21744  0A0C  0020               	movlb	0	; select bank0
 21745  0A0D  00B1               	movwf	xtoa@fp+1
 21746  0A0E  0021               	movlb	1	; select bank1
 21747  0A0F  0863               	movf	vfpfcnvrt@fp^(0+128),w
 21748  0A10  0020               	movlb	0	; select bank0
 21749  0A11  00B0               	movwf	xtoa@fp
 21750  0A12  0022               	movlb	2	; select bank2
 21751  0A13  0846               	movf	vfpfcnvrt@llu^(0+256),w
 21752  0A14  0020               	movlb	0	; select bank0
 21753  0A15  00B2               	movwf	xtoa@d
 21754  0A16  0022               	movlb	2	; select bank2
 21755  0A17  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 21756  0A18  0020               	movlb	0	; select bank0
 21757  0A19  00B3               	movwf	xtoa@d+1
 21758  0A1A  0022               	movlb	2	; select bank2
 21759  0A1B  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 21760  0A1C  0020               	movlb	0	; select bank0
 21761  0A1D  00B4               	movwf	xtoa@d+2
 21762  0A1E  0022               	movlb	2	; select bank2
 21763  0A1F  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 21764  0A20  0020               	movlb	0	; select bank0
 21765  0A21  00B5               	movwf	xtoa@d+3
 21766  0A22  0022               	movlb	2	; select bank2
 21767  0A23  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 21768  0A24  0020               	movlb	0	; select bank0
 21769  0A25  00B6               	movwf	xtoa@d+4
 21770  0A26  0022               	movlb	2	; select bank2
 21771  0A27  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 21772  0A28  0020               	movlb	0	; select bank0
 21773  0A29  00B7               	movwf	xtoa@d+5
 21774  0A2A  0022               	movlb	2	; select bank2
 21775  0A2B  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 21776  0A2C  0020               	movlb	0	; select bank0
 21777  0A2D  00B8               	movwf	xtoa@d+6
 21778  0A2E  0022               	movlb	2	; select bank2
 21779  0A2F  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 21780  0A30  0020               	movlb	0	; select bank0
 21781  0A31  00B9               	movwf	xtoa@d+7
 21782  0A32  3078               	movlw	120
 21783  0A33  0022               	movlb	2	; select bank2
 21784  0A34  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21785  0A35  0820               	movf	??_vfpfcnvrt^(0+256),w
 21786  0A36  0020               	movlb	0	; select bank0
 21787  0A37  00BA               	movwf	xtoa@x
 21788  0A38  319C  24C5         	fcall	_xtoa
 21789  0A3A  0020               	movlb	0	; select bank0
 21790  0A3B  0831               	movf	?_xtoa+1,w
 21791  0A3C  0021               	movlb	1	; select bank1
 21792  0A3D  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 21793  0A3E  0020               	movlb	0	; select bank0
 21794  0A3F  0830               	movf	?_xtoa,w
 21795  0A40  0021               	movlb	1	; select bank1
 21796  0A41  00E3               	movwf	?_vfpfcnvrt^(0+128)
 21797  0A42  0008               	return
 21798  0A43                     l8128:	
 21799                           
 21800                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 21801  0A43  0021               	movlb	1	; select bank1
 21802  0A44  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21803  0A45  0086               	movwf	6
 21804  0A46  0187               	clrf	7
 21805  0A47  3F40               	moviw [0]fsr1
 21806  0A48  0022               	movlb	2	; select bank2
 21807  0A49  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21808  0A4A  3F41               	moviw [1]fsr1
 21809  0A4B  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21810  0A4C  0820               	movf	??_vfpfcnvrt^(0+256),w
 21811  0A4D  0084               	movwf	4
 21812  0A4E  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 21813  0A4F  0085               	movwf	5
 21814  0A50  0012               	moviw fsr0++
 21815  0A51  3A73               	xorlw	115
 21816  0A52  1D03               	btfss	3,2
 21817  0A53  2A84               	goto	l8138
 21818                           
 21819                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 21820  0A54  0021               	movlb	1	; select bank1
 21821  0A55  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21822  0A56  0086               	movwf	6
 21823  0A57  0187               	clrf	7
 21824  0A58  3001               	movlw	1
 21825  0A59  0781               	addwf	1,f
 21826  0A5A  3141               	addfsr 1,1
 21827  0A5B  1803               	skipnc
 21828  0A5C  0A81               	incf	1,f
 21829                           
 21830                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 21831  0A5D  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21832  0A5E  0086               	movwf	6
 21833  0A5F  3001               	movlw	1	; select bank2/3
 21834  0A60  0087               	movwf	7
 21835  0A61  3F40               	moviw [0]fsr1
 21836  0A62  0084               	movwf	4
 21837  0A63  3001               	movlw	1	; select bank2/3
 21838  0A64  0085               	movwf	5
 21839  0A65  0A81               	incf	1,f
 21840  0A66  0800               	movf	0,w
 21841  0A67  0022               	movlb	2	; select bank2
 21842  0A68  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21843  0A69  0820               	movf	??_vfpfcnvrt^(0+256),w
 21844  0A6A  00AC               	movwf	vfpfcnvrt@cp^(0+256)
 21845                           
 21846                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 21847  0A6B  0021               	movlb	1	; select bank1
 21848  0A6C  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21849  0A6D  0020               	movlb	0	; select bank0
 21850  0A6E  00A1               	movwf	stoa@fp+1
 21851  0A6F  0021               	movlb	1	; select bank1
 21852  0A70  0863               	movf	vfpfcnvrt@fp^(0+128),w
 21853  0A71  0020               	movlb	0	; select bank0
 21854  0A72  00A0               	movwf	stoa@fp
 21855  0A73  0022               	movlb	2	; select bank2
 21856  0A74  082C               	movf	vfpfcnvrt@cp^(0+256),w
 21857  0A75  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21858  0A76  0820               	movf	??_vfpfcnvrt^(0+256),w
 21859  0A77  0020               	movlb	0	; select bank0
 21860  0A78  00A2               	movwf	stoa@s
 21861  0A79  31A0  2035         	fcall	_stoa
 21862  0A7B  0020               	movlb	0	; select bank0
 21863  0A7C  0821               	movf	?_stoa+1,w
 21864  0A7D  0021               	movlb	1	; select bank1
 21865  0A7E  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 21866  0A7F  0020               	movlb	0	; select bank0
 21867  0A80  0820               	movf	?_stoa,w
 21868  0A81  0021               	movlb	1	; select bank1
 21869  0A82  00E3               	movwf	?_vfpfcnvrt^(0+128)
 21870  0A83  0008               	return
 21871  0A84                     l8138:	
 21872                           
 21873                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
 21874  0A84  0021               	movlb	1	; select bank1
 21875  0A85  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21876  0A86  0086               	movwf	6
 21877  0A87  0187               	clrf	7
 21878  0A88  3F40               	moviw [0]fsr1
 21879  0A89  00F1               	movwf	strncmp@_l
 21880  0A8A  3F41               	moviw [1]fsr1
 21881  0A8B  00F2               	movwf	strncmp@_l+1
 21882  0A8C  3034               	movlw	low (STR_115| (0+32768))
 21883  0A8D  00F3               	movwf	strncmp@_r
 21884  0A8E  30BB               	movlw	high (STR_115| (0+32768))
 21885  0A8F  00F4               	movwf	strncmp@_r+1
 21886  0A90  3003               	movlw	3
 21887  0A91  00F5               	movwf	strncmp@n
 21888  0A92  3000               	movlw	0
 21889  0A93  00F6               	movwf	strncmp@n+1
 21890  0A94  3190  2000  3188   	fcall	_strncmp
 21891  0A97  0871               	movf	?_strncmp,w
 21892  0A98  0472               	iorwf	?_strncmp+1,w
 21893  0A99  1D03               	btfss	3,2
 21894  0A9A  2AEB               	goto	l8148
 21895                           
 21896                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
 21897  0A9B  0021               	movlb	1	; select bank1
 21898  0A9C  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21899  0A9D  0086               	movwf	6
 21900  0A9E  0187               	clrf	7
 21901  0A9F  3003               	movlw	3
 21902  0AA0  0781               	addwf	1,f
 21903  0AA1  3141               	addfsr 1,1
 21904  0AA2  1803               	skipnc
 21905  0AA3  0A81               	incf	1,f
 21906                           
 21907                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 21908  0AA4  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21909  0AA5  0086               	movwf	6
 21910  0AA6  3001               	movlw	1	; select bank2/3
 21911  0AA7  0087               	movwf	7
 21912  0AA8  0801               	movf	1,w
 21913  0AA9  0084               	movwf	4
 21914  0AAA  3001               	movlw	1	; select bank2/3
 21915  0AAB  0085               	movwf	5
 21916  0AAC  3002               	movlw	2
 21917  0AAD  0781               	addwf	1,f
 21918  0AAE  0800               	movf	0,w
 21919  0AAF  0022               	movlb	2	; select bank2
 21920  0AB0  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 21921  0AB1  01C7               	clrf	(vfpfcnvrt@llu+1)^(0+256)
 21922  0AB2  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 21923  0AB3  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 21924  0AB4  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 21925  0AB5  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 21926  0AB6  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 21927  0AB7  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 21928                           
 21929                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
 21930  0AB8  0021               	movlb	1	; select bank1
 21931  0AB9  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21932  0ABA  0020               	movlb	0	; select bank0
 21933  0ABB  00B1               	movwf	utoa@fp+1
 21934  0ABC  0021               	movlb	1	; select bank1
 21935  0ABD  0863               	movf	vfpfcnvrt@fp^(0+128),w
 21936  0ABE  0020               	movlb	0	; select bank0
 21937  0ABF  00B0               	movwf	utoa@fp
 21938  0AC0  0022               	movlb	2	; select bank2
 21939  0AC1  0846               	movf	vfpfcnvrt@llu^(0+256),w
 21940  0AC2  0020               	movlb	0	; select bank0
 21941  0AC3  00B2               	movwf	utoa@d
 21942  0AC4  0022               	movlb	2	; select bank2
 21943  0AC5  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 21944  0AC6  0020               	movlb	0	; select bank0
 21945  0AC7  00B3               	movwf	utoa@d+1
 21946  0AC8  0022               	movlb	2	; select bank2
 21947  0AC9  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 21948  0ACA  0020               	movlb	0	; select bank0
 21949  0ACB  00B4               	movwf	utoa@d+2
 21950  0ACC  0022               	movlb	2	; select bank2
 21951  0ACD  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 21952  0ACE  0020               	movlb	0	; select bank0
 21953  0ACF  00B5               	movwf	utoa@d+3
 21954  0AD0  0022               	movlb	2	; select bank2
 21955  0AD1  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 21956  0AD2  0020               	movlb	0	; select bank0
 21957  0AD3  00B6               	movwf	utoa@d+4
 21958  0AD4  0022               	movlb	2	; select bank2
 21959  0AD5  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 21960  0AD6  0020               	movlb	0	; select bank0
 21961  0AD7  00B7               	movwf	utoa@d+5
 21962  0AD8  0022               	movlb	2	; select bank2
 21963  0AD9  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 21964  0ADA  0020               	movlb	0	; select bank0
 21965  0ADB  00B8               	movwf	utoa@d+6
 21966  0ADC  0022               	movlb	2	; select bank2
 21967  0ADD  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 21968  0ADE  0020               	movlb	0	; select bank0
 21969  0ADF  00B9               	movwf	utoa@d+7
 21970  0AE0  31A4  2455         	fcall	_utoa
 21971  0AE2  0020               	movlb	0	; select bank0
 21972  0AE3  0831               	movf	?_utoa+1,w
 21973  0AE4  0021               	movlb	1	; select bank1
 21974  0AE5  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 21975  0AE6  0020               	movlb	0	; select bank0
 21976  0AE7  0830               	movf	?_utoa,w
 21977  0AE8  0021               	movlb	1	; select bank1
 21978  0AE9  00E3               	movwf	?_vfpfcnvrt^(0+128)
 21979  0AEA  0008               	return
 21980  0AEB                     l8148:	
 21981                           
 21982                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
 21983  0AEB  0021               	movlb	1	; select bank1
 21984  0AEC  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21985  0AED  0086               	movwf	6
 21986  0AEE  0187               	clrf	7
 21987  0AEF  3F40               	moviw [0]fsr1
 21988  0AF0  00F1               	movwf	strncmp@_l
 21989  0AF1  3F41               	moviw [1]fsr1
 21990  0AF2  00F2               	movwf	strncmp@_l+1
 21991  0AF3  3035               	movlw	low ((STR_115+1)| (0+32768))
 21992  0AF4  00F3               	movwf	strncmp@_r
 21993  0AF5  30BB               	movlw	high ((STR_115+1)| (0+32768))
 21994  0AF6  00F4               	movwf	strncmp@_r+1
 21995  0AF7  3002               	movlw	2
 21996  0AF8  00F5               	movwf	strncmp@n
 21997  0AF9  3000               	movlw	0
 21998  0AFA  00F6               	movwf	strncmp@n+1
 21999  0AFB  3190  2000  3188   	fcall	_strncmp
 22000  0AFE  0871               	movf	?_strncmp,w
 22001  0AFF  0472               	iorwf	?_strncmp+1,w
 22002  0B00  1D03               	btfss	3,2
 22003  0B01  2B53               	goto	l8158
 22004                           
 22005                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
 22006  0B02  0021               	movlb	1	; select bank1
 22007  0B03  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22008  0B04  0086               	movwf	6
 22009  0B05  0187               	clrf	7
 22010  0B06  3002               	movlw	2
 22011  0B07  0781               	addwf	1,f
 22012  0B08  3141               	addfsr 1,1
 22013  0B09  1803               	skipnc
 22014  0B0A  0A81               	incf	1,f
 22015                           
 22016                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 22017  0B0B  0866               	movf	vfpfcnvrt@ap^(0+128),w
 22018  0B0C  0086               	movwf	6
 22019  0B0D  3001               	movlw	1	; select bank2/3
 22020  0B0E  0087               	movwf	7
 22021  0B0F  0801               	movf	1,w
 22022  0B10  0084               	movwf	4
 22023  0B11  3001               	movlw	1	; select bank2/3
 22024  0B12  0085               	movwf	5
 22025  0B13  3002               	movlw	2
 22026  0B14  0781               	addwf	1,f
 22027  0B15  3F00               	moviw [0]fsr0
 22028  0B16  0022               	movlb	2	; select bank2
 22029  0B17  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 22030  0B18  3F01               	moviw [1]fsr0
 22031  0B19  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 22032  0B1A  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 22033  0B1B  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 22034  0B1C  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 22035  0B1D  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 22036  0B1E  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 22037  0B1F  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 22038                           
 22039                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1177:      
      +                                 return utoa(fp, llu);
 22040  0B20  0021               	movlb	1	; select bank1
 22041  0B21  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22042  0B22  0020               	movlb	0	; select bank0
 22043  0B23  00B1               	movwf	utoa@fp+1
 22044  0B24  0021               	movlb	1	; select bank1
 22045  0B25  0863               	movf	vfpfcnvrt@fp^(0+128),w
 22046  0B26  0020               	movlb	0	; select bank0
 22047  0B27  00B0               	movwf	utoa@fp
 22048  0B28  0022               	movlb	2	; select bank2
 22049  0B29  0846               	movf	vfpfcnvrt@llu^(0+256),w
 22050  0B2A  0020               	movlb	0	; select bank0
 22051  0B2B  00B2               	movwf	utoa@d
 22052  0B2C  0022               	movlb	2	; select bank2
 22053  0B2D  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 22054  0B2E  0020               	movlb	0	; select bank0
 22055  0B2F  00B3               	movwf	utoa@d+1
 22056  0B30  0022               	movlb	2	; select bank2
 22057  0B31  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 22058  0B32  0020               	movlb	0	; select bank0
 22059  0B33  00B4               	movwf	utoa@d+2
 22060  0B34  0022               	movlb	2	; select bank2
 22061  0B35  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 22062  0B36  0020               	movlb	0	; select bank0
 22063  0B37  00B5               	movwf	utoa@d+3
 22064  0B38  0022               	movlb	2	; select bank2
 22065  0B39  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 22066  0B3A  0020               	movlb	0	; select bank0
 22067  0B3B  00B6               	movwf	utoa@d+4
 22068  0B3C  0022               	movlb	2	; select bank2
 22069  0B3D  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 22070  0B3E  0020               	movlb	0	; select bank0
 22071  0B3F  00B7               	movwf	utoa@d+5
 22072  0B40  0022               	movlb	2	; select bank2
 22073  0B41  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 22074  0B42  0020               	movlb	0	; select bank0
 22075  0B43  00B8               	movwf	utoa@d+6
 22076  0B44  0022               	movlb	2	; select bank2
 22077  0B45  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 22078  0B46  0020               	movlb	0	; select bank0
 22079  0B47  00B9               	movwf	utoa@d+7
 22080  0B48  31A4  2455         	fcall	_utoa
 22081  0B4A  0020               	movlb	0	; select bank0
 22082  0B4B  0831               	movf	?_utoa+1,w
 22083  0B4C  0021               	movlb	1	; select bank1
 22084  0B4D  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22085  0B4E  0020               	movlb	0	; select bank0
 22086  0B4F  0830               	movf	?_utoa,w
 22087  0B50  0021               	movlb	1	; select bank1
 22088  0B51  00E3               	movwf	?_vfpfcnvrt^(0+128)
 22089  0B52  0008               	return
 22090  0B53                     l8158:	
 22091                           
 22092                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 22093  0B53  0021               	movlb	1	; select bank1
 22094  0B54  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22095  0B55  0086               	movwf	6
 22096  0B56  0187               	clrf	7
 22097  0B57  3F40               	moviw [0]fsr1
 22098  0B58  0022               	movlb	2	; select bank2
 22099  0B59  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22100  0B5A  3F41               	moviw [1]fsr1
 22101  0B5B  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22102  0B5C  0820               	movf	??_vfpfcnvrt^(0+256),w
 22103  0B5D  0084               	movwf	4
 22104  0B5E  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 22105  0B5F  0085               	movwf	5
 22106  0B60  0012               	moviw fsr0++
 22107  0B61  3A75               	xorlw	117
 22108  0B62  1D03               	btfss	3,2
 22109  0B63  2BB5               	goto	l8168
 22110                           
 22111                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 22112  0B64  0021               	movlb	1	; select bank1
 22113  0B65  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22114  0B66  0086               	movwf	6
 22115  0B67  0187               	clrf	7
 22116  0B68  3001               	movlw	1
 22117  0B69  0781               	addwf	1,f
 22118  0B6A  3141               	addfsr 1,1
 22119  0B6B  1803               	skipnc
 22120  0B6C  0A81               	incf	1,f
 22121                           
 22122                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 22123  0B6D  0866               	movf	vfpfcnvrt@ap^(0+128),w
 22124  0B6E  0086               	movwf	6
 22125  0B6F  3001               	movlw	1	; select bank2/3
 22126  0B70  0087               	movwf	7
 22127  0B71  0801               	movf	1,w
 22128  0B72  0084               	movwf	4
 22129  0B73  3001               	movlw	1	; select bank2/3
 22130  0B74  0085               	movwf	5
 22131  0B75  3002               	movlw	2
 22132  0B76  0781               	addwf	1,f
 22133  0B77  3F00               	moviw [0]fsr0
 22134  0B78  0022               	movlb	2	; select bank2
 22135  0B79  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 22136  0B7A  3F01               	moviw [1]fsr0
 22137  0B7B  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 22138  0B7C  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 22139  0B7D  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 22140  0B7E  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 22141  0B7F  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 22142  0B80  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 22143  0B81  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 22144                           
 22145                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
 22146  0B82  0021               	movlb	1	; select bank1
 22147  0B83  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22148  0B84  0020               	movlb	0	; select bank0
 22149  0B85  00B1               	movwf	utoa@fp+1
 22150  0B86  0021               	movlb	1	; select bank1
 22151  0B87  0863               	movf	vfpfcnvrt@fp^(0+128),w
 22152  0B88  0020               	movlb	0	; select bank0
 22153  0B89  00B0               	movwf	utoa@fp
 22154  0B8A  0022               	movlb	2	; select bank2
 22155  0B8B  0846               	movf	vfpfcnvrt@llu^(0+256),w
 22156  0B8C  0020               	movlb	0	; select bank0
 22157  0B8D  00B2               	movwf	utoa@d
 22158  0B8E  0022               	movlb	2	; select bank2
 22159  0B8F  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 22160  0B90  0020               	movlb	0	; select bank0
 22161  0B91  00B3               	movwf	utoa@d+1
 22162  0B92  0022               	movlb	2	; select bank2
 22163  0B93  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 22164  0B94  0020               	movlb	0	; select bank0
 22165  0B95  00B4               	movwf	utoa@d+2
 22166  0B96  0022               	movlb	2	; select bank2
 22167  0B97  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 22168  0B98  0020               	movlb	0	; select bank0
 22169  0B99  00B5               	movwf	utoa@d+3
 22170  0B9A  0022               	movlb	2	; select bank2
 22171  0B9B  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 22172  0B9C  0020               	movlb	0	; select bank0
 22173  0B9D  00B6               	movwf	utoa@d+4
 22174  0B9E  0022               	movlb	2	; select bank2
 22175  0B9F  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 22176  0BA0  0020               	movlb	0	; select bank0
 22177  0BA1  00B7               	movwf	utoa@d+5
 22178  0BA2  0022               	movlb	2	; select bank2
 22179  0BA3  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 22180  0BA4  0020               	movlb	0	; select bank0
 22181  0BA5  00B8               	movwf	utoa@d+6
 22182  0BA6  0022               	movlb	2	; select bank2
 22183  0BA7  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 22184  0BA8  0020               	movlb	0	; select bank0
 22185  0BA9  00B9               	movwf	utoa@d+7
 22186  0BAA  31A4  2455         	fcall	_utoa
 22187  0BAC  0020               	movlb	0	; select bank0
 22188  0BAD  0831               	movf	?_utoa+1,w
 22189  0BAE  0021               	movlb	1	; select bank1
 22190  0BAF  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22191  0BB0  0020               	movlb	0	; select bank0
 22192  0BB1  0830               	movf	?_utoa,w
 22193  0BB2  0021               	movlb	1	; select bank1
 22194  0BB3  00E3               	movwf	?_vfpfcnvrt^(0+128)
 22195  0BB4  0008               	return
 22196  0BB5                     l8168:	
 22197                           
 22198                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1192:      
      +                             if (!strncmp(*fmt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 22199  0BB5  0021               	movlb	1	; select bank1
 22200  0BB6  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22201  0BB7  0086               	movwf	6
 22202  0BB8  0187               	clrf	7
 22203  0BB9  3F40               	moviw [0]fsr1
 22204  0BBA  00F1               	movwf	strncmp@_l
 22205  0BBB  3F41               	moviw [1]fsr1
 22206  0BBC  00F2               	movwf	strncmp@_l+1
 22207  0BBD  305D               	movlw	low (STR_125| (0+32768))
 22208  0BBE  00F3               	movwf	strncmp@_r
 22209  0BBF  30BB               	movlw	high (STR_125| (0+32768))
 22210  0BC0  00F4               	movwf	strncmp@_r+1
 22211  0BC1  3002               	movlw	2
 22212  0BC2  00F5               	movwf	strncmp@n
 22213  0BC3  3000               	movlw	0
 22214  0BC4  00F6               	movwf	strncmp@n+1
 22215  0BC5  3190  2000  3188   	fcall	_strncmp
 22216  0BC8  0871               	movf	?_strncmp,w
 22217  0BC9  0472               	iorwf	?_strncmp+1,w
 22218  0BCA  1D03               	btfss	3,2
 22219  0BCB  2C37               	goto	l8178
 22220                           
 22221                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1194:      
      +                                 *fmt += ((sizeof("lu")/sizeof("lu"[0]))-1);
 22222  0BCC  0021               	movlb	1	; select bank1
 22223  0BCD  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22224  0BCE  0086               	movwf	6
 22225  0BCF  0187               	clrf	7
 22226  0BD0  3002               	movlw	2
 22227  0BD1  0781               	addwf	1,f
 22228  0BD2  3141               	addfsr 1,1
 22229  0BD3  1803               	skipnc
 22230  0BD4  0A81               	incf	1,f
 22231                           
 22232                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1195:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
 22233  0BD5  0866               	movf	vfpfcnvrt@ap^(0+128),w
 22234  0BD6  0086               	movwf	6
 22235  0BD7  3001               	movlw	1	; select bank2/3
 22236  0BD8  0087               	movwf	7
 22237  0BD9  0801               	movf	1,w
 22238  0BDA  0084               	movwf	4
 22239  0BDB  3001               	movlw	1	; select bank2/3
 22240  0BDC  0085               	movwf	5
 22241  0BDD  3004               	movlw	4
 22242  0BDE  0781               	addwf	1,f
 22243  0BDF  3F00               	moviw [0]fsr0
 22244  0BE0  0022               	movlb	2	; select bank2
 22245  0BE1  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22246  0BE2  3F01               	moviw [1]fsr0
 22247  0BE3  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22248  0BE4  3F02               	moviw [2]fsr0
 22249  0BE5  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 22250  0BE6  3F03               	moviw [3]fsr0
 22251  0BE7  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 22252  0BE8  0820               	movf	??_vfpfcnvrt^(0+256),w
 22253  0BE9  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
 22254  0BEA  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 22255  0BEB  00A5               	movwf	((??_vfpfcnvrt+4)^(0+256)+1)
 22256  0BEC  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 22257  0BED  00A6               	movwf	((??_vfpfcnvrt+4)^(0+256)+2)
 22258  0BEE  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 22259  0BEF  00A7               	movwf	((??_vfpfcnvrt+4)^(0+256)+3)
 22260  0BF0  01A8               	clrf	((??_vfpfcnvrt+4)^(0+256)+4)
 22261  0BF1  01A9               	clrf	((??_vfpfcnvrt+4)^(0+256)+5)
 22262  0BF2  01AA               	clrf	((??_vfpfcnvrt+4)^(0+256)+6)
 22263  0BF3  01AB               	clrf	((??_vfpfcnvrt+4)^(0+256)+7)
 22264  0BF4  082B               	movf	((??_vfpfcnvrt+4)^(0+256)+7),w
 22265  0BF5  00CD               	movwf	(vfpfcnvrt@llu+7)^(0+256)
 22266  0BF6  082A               	movf	((??_vfpfcnvrt+4)^(0+256)+6),w
 22267  0BF7  00CC               	movwf	(vfpfcnvrt@llu+6)^(0+256)
 22268  0BF8  0829               	movf	((??_vfpfcnvrt+4)^(0+256)+5),w
 22269  0BF9  00CB               	movwf	(vfpfcnvrt@llu+5)^(0+256)
 22270  0BFA  0828               	movf	((??_vfpfcnvrt+4)^(0+256)+4),w
 22271  0BFB  00CA               	movwf	(vfpfcnvrt@llu+4)^(0+256)
 22272  0BFC  0827               	movf	((??_vfpfcnvrt+4)^(0+256)+3),w
 22273  0BFD  00C9               	movwf	(vfpfcnvrt@llu+3)^(0+256)
 22274  0BFE  0826               	movf	((??_vfpfcnvrt+4)^(0+256)+2),w
 22275  0BFF  00C8               	movwf	(vfpfcnvrt@llu+2)^(0+256)
 22276  0C00  0825               	movf	((??_vfpfcnvrt+4)^(0+256)+1),w
 22277  0C01  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 22278  0C02  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
 22279  0C03  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 22280                           
 22281                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1197:      
      +                                 return utoa(fp, llu);
 22282  0C04  0021               	movlb	1	; select bank1
 22283  0C05  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22284  0C06  0020               	movlb	0	; select bank0
 22285  0C07  00B1               	movwf	utoa@fp+1
 22286  0C08  0021               	movlb	1	; select bank1
 22287  0C09  0863               	movf	vfpfcnvrt@fp^(0+128),w
 22288  0C0A  0020               	movlb	0	; select bank0
 22289  0C0B  00B0               	movwf	utoa@fp
 22290  0C0C  0022               	movlb	2	; select bank2
 22291  0C0D  0846               	movf	vfpfcnvrt@llu^(0+256),w
 22292  0C0E  0020               	movlb	0	; select bank0
 22293  0C0F  00B2               	movwf	utoa@d
 22294  0C10  0022               	movlb	2	; select bank2
 22295  0C11  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 22296  0C12  0020               	movlb	0	; select bank0
 22297  0C13  00B3               	movwf	utoa@d+1
 22298  0C14  0022               	movlb	2	; select bank2
 22299  0C15  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 22300  0C16  0020               	movlb	0	; select bank0
 22301  0C17  00B4               	movwf	utoa@d+2
 22302  0C18  0022               	movlb	2	; select bank2
 22303  0C19  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 22304  0C1A  0020               	movlb	0	; select bank0
 22305  0C1B  00B5               	movwf	utoa@d+3
 22306  0C1C  0022               	movlb	2	; select bank2
 22307  0C1D  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 22308  0C1E  0020               	movlb	0	; select bank0
 22309  0C1F  00B6               	movwf	utoa@d+4
 22310  0C20  0022               	movlb	2	; select bank2
 22311  0C21  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 22312  0C22  0020               	movlb	0	; select bank0
 22313  0C23  00B7               	movwf	utoa@d+5
 22314  0C24  0022               	movlb	2	; select bank2
 22315  0C25  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 22316  0C26  0020               	movlb	0	; select bank0
 22317  0C27  00B8               	movwf	utoa@d+6
 22318  0C28  0022               	movlb	2	; select bank2
 22319  0C29  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 22320  0C2A  0020               	movlb	0	; select bank0
 22321  0C2B  00B9               	movwf	utoa@d+7
 22322  0C2C  31A4  2455         	fcall	_utoa
 22323  0C2E  0020               	movlb	0	; select bank0
 22324  0C2F  0831               	movf	?_utoa+1,w
 22325  0C30  0021               	movlb	1	; select bank1
 22326  0C31  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22327  0C32  0020               	movlb	0	; select bank0
 22328  0C33  0830               	movf	?_utoa,w
 22329  0C34  0021               	movlb	1	; select bank1
 22330  0C35  00E3               	movwf	?_vfpfcnvrt^(0+128)
 22331  0C36  0008               	return
 22332  0C37                     l8178:	
 22333                           
 22334                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
 22335  0C37  0021               	movlb	1	; select bank1
 22336  0C38  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22337  0C39  0086               	movwf	6
 22338  0C3A  0187               	clrf	7
 22339  0C3B  3F40               	moviw [0]fsr1
 22340  0C3C  00F1               	movwf	strncmp@_l
 22341  0C3D  3F41               	moviw [1]fsr1
 22342  0C3E  00F2               	movwf	strncmp@_l+1
 22343  0C3F  3060               	movlw	low (STR_130| (0+32768))
 22344  0C40  00F3               	movwf	strncmp@_r
 22345  0C41  30BB               	movlw	high (STR_130| (0+32768))
 22346  0C42  00F4               	movwf	strncmp@_r+1
 22347  0C43  3002               	movlw	2
 22348  0C44  00F5               	movwf	strncmp@n
 22349  0C45  3000               	movlw	0
 22350  0C46  00F6               	movwf	strncmp@n+1
 22351  0C47  3190  2000  3188   	fcall	_strncmp
 22352  0C4A  0871               	movf	?_strncmp,w
 22353  0C4B  0472               	iorwf	?_strncmp+1,w
 22354  0C4C  1D03               	btfss	3,2
 22355  0C4D  2C9F               	goto	l8188
 22356                           
 22357                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
 22358  0C4E  0021               	movlb	1	; select bank1
 22359  0C4F  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22360  0C50  0086               	movwf	6
 22361  0C51  0187               	clrf	7
 22362  0C52  3002               	movlw	2
 22363  0C53  0781               	addwf	1,f
 22364  0C54  3141               	addfsr 1,1
 22365  0C55  1803               	skipnc
 22366  0C56  0A81               	incf	1,f
 22367                           
 22368                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 22369  0C57  0866               	movf	vfpfcnvrt@ap^(0+128),w
 22370  0C58  0086               	movwf	6
 22371  0C59  3001               	movlw	1	; select bank2/3
 22372  0C5A  0087               	movwf	7
 22373  0C5B  0801               	movf	1,w
 22374  0C5C  0084               	movwf	4
 22375  0C5D  3001               	movlw	1	; select bank2/3
 22376  0C5E  0085               	movwf	5
 22377  0C5F  3002               	movlw	2
 22378  0C60  0781               	addwf	1,f
 22379  0C61  3F00               	moviw [0]fsr0
 22380  0C62  0022               	movlb	2	; select bank2
 22381  0C63  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 22382  0C64  3F01               	moviw [1]fsr0
 22383  0C65  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 22384  0C66  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 22385  0C67  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 22386  0C68  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 22387  0C69  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 22388  0C6A  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 22389  0C6B  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 22390                           
 22391                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1241:      
      +                                 return utoa(fp, llu);
 22392  0C6C  0021               	movlb	1	; select bank1
 22393  0C6D  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22394  0C6E  0020               	movlb	0	; select bank0
 22395  0C6F  00B1               	movwf	utoa@fp+1
 22396  0C70  0021               	movlb	1	; select bank1
 22397  0C71  0863               	movf	vfpfcnvrt@fp^(0+128),w
 22398  0C72  0020               	movlb	0	; select bank0
 22399  0C73  00B0               	movwf	utoa@fp
 22400  0C74  0022               	movlb	2	; select bank2
 22401  0C75  0846               	movf	vfpfcnvrt@llu^(0+256),w
 22402  0C76  0020               	movlb	0	; select bank0
 22403  0C77  00B2               	movwf	utoa@d
 22404  0C78  0022               	movlb	2	; select bank2
 22405  0C79  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 22406  0C7A  0020               	movlb	0	; select bank0
 22407  0C7B  00B3               	movwf	utoa@d+1
 22408  0C7C  0022               	movlb	2	; select bank2
 22409  0C7D  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 22410  0C7E  0020               	movlb	0	; select bank0
 22411  0C7F  00B4               	movwf	utoa@d+2
 22412  0C80  0022               	movlb	2	; select bank2
 22413  0C81  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 22414  0C82  0020               	movlb	0	; select bank0
 22415  0C83  00B5               	movwf	utoa@d+3
 22416  0C84  0022               	movlb	2	; select bank2
 22417  0C85  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 22418  0C86  0020               	movlb	0	; select bank0
 22419  0C87  00B6               	movwf	utoa@d+4
 22420  0C88  0022               	movlb	2	; select bank2
 22421  0C89  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 22422  0C8A  0020               	movlb	0	; select bank0
 22423  0C8B  00B7               	movwf	utoa@d+5
 22424  0C8C  0022               	movlb	2	; select bank2
 22425  0C8D  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 22426  0C8E  0020               	movlb	0	; select bank0
 22427  0C8F  00B8               	movwf	utoa@d+6
 22428  0C90  0022               	movlb	2	; select bank2
 22429  0C91  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 22430  0C92  0020               	movlb	0	; select bank0
 22431  0C93  00B9               	movwf	utoa@d+7
 22432  0C94  31A4  2455         	fcall	_utoa
 22433  0C96  0020               	movlb	0	; select bank0
 22434  0C97  0831               	movf	?_utoa+1,w
 22435  0C98  0021               	movlb	1	; select bank1
 22436  0C99  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22437  0C9A  0020               	movlb	0	; select bank0
 22438  0C9B  0830               	movf	?_utoa,w
 22439  0C9C  0021               	movlb	1	; select bank1
 22440  0C9D  00E3               	movwf	?_vfpfcnvrt^(0+128)
 22441  0C9E  0008               	return
 22442  0C9F                     l8188:	
 22443                           
 22444                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
 22445  0C9F  0021               	movlb	1	; select bank1
 22446  0CA0  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22447  0CA1  0086               	movwf	6
 22448  0CA2  0187               	clrf	7
 22449  0CA3  3F40               	moviw [0]fsr1
 22450  0CA4  00F1               	movwf	strncmp@_l
 22451  0CA5  3F41               	moviw [1]fsr1
 22452  0CA6  00F2               	movwf	strncmp@_l+1
 22453  0CA7  3038               	movlw	low (STR_135| (0+32768))
 22454  0CA8  00F3               	movwf	strncmp@_r
 22455  0CA9  30BB               	movlw	high (STR_135| (0+32768))
 22456  0CAA  00F4               	movwf	strncmp@_r+1
 22457  0CAB  3003               	movlw	3
 22458  0CAC  00F5               	movwf	strncmp@n
 22459  0CAD  3000               	movlw	0
 22460  0CAE  00F6               	movwf	strncmp@n+1
 22461  0CAF  3190  2000  3188   	fcall	_strncmp
 22462  0CB2  0871               	movf	?_strncmp,w
 22463  0CB3  0472               	iorwf	?_strncmp+1,w
 22464  0CB4  1903               	btfsc	3,2
 22465  0CB5  2CCD               	goto	l8192
 22466  0CB6  0021               	movlb	1	; select bank1
 22467  0CB7  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22468  0CB8  0086               	movwf	6
 22469  0CB9  0187               	clrf	7
 22470  0CBA  3F40               	moviw [0]fsr1
 22471  0CBB  00F1               	movwf	strncmp@_l
 22472  0CBC  3F41               	moviw [1]fsr1
 22473  0CBD  00F2               	movwf	strncmp@_l+1
 22474  0CBE  3018               	movlw	low (STR_139| (0+32768))
 22475  0CBF  00F3               	movwf	strncmp@_r
 22476  0CC0  30BB               	movlw	high (STR_139| (0+32768))
 22477  0CC1  00F4               	movwf	strncmp@_r+1
 22478  0CC2  3003               	movlw	3
 22479  0CC3  00F5               	movwf	strncmp@n
 22480  0CC4  3000               	movlw	0
 22481  0CC5  00F6               	movwf	strncmp@n+1
 22482  0CC6  3190  2000  3188   	fcall	_strncmp
 22483  0CC9  0871               	movf	?_strncmp,w
 22484  0CCA  0472               	iorwf	?_strncmp+1,w
 22485  0CCB  1D03               	btfss	3,2
 22486  0CCC  2D37               	goto	l8202
 22487  0CCD                     l8192:	
 22488                           
 22489                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
 22490  0CCD  0021               	movlb	1	; select bank1
 22491  0CCE  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22492  0CCF  0086               	movwf	6
 22493  0CD0  0187               	clrf	7
 22494  0CD1  3F40               	moviw [0]fsr1
 22495  0CD2  0022               	movlb	2	; select bank2
 22496  0CD3  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22497  0CD4  3F41               	moviw [1]fsr1
 22498  0CD5  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22499  0CD6  3002               	movlw	2
 22500  0CD7  0720               	addwf	??_vfpfcnvrt^(0+256),w
 22501  0CD8  0084               	movwf	4
 22502  0CD9  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 22503  0CDA  1803               	skipnc
 22504  0CDB  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 22505  0CDC  0085               	movwf	5
 22506  0CDD  0800               	movf	0,w	;code access
 22507  0CDE  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 22508  0CDF  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 22509  0CE0  00C5               	movwf	vfpfcnvrt@c^(0+256)
 22510                           
 22511                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
 22512  0CE1  0021               	movlb	1	; select bank1
 22513  0CE2  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22514  0CE3  0086               	movwf	6
 22515  0CE4  0187               	clrf	7
 22516  0CE5  3003               	movlw	3
 22517  0CE6  0781               	addwf	1,f
 22518  0CE7  3141               	addfsr 1,1
 22519  0CE8  1803               	skipnc
 22520  0CE9  0A81               	incf	1,f
 22521                           
 22522                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 22523  0CEA  0866               	movf	vfpfcnvrt@ap^(0+128),w
 22524  0CEB  0086               	movwf	6
 22525  0CEC  3001               	movlw	1	; select bank2/3
 22526  0CED  0087               	movwf	7
 22527  0CEE  0801               	movf	1,w
 22528  0CEF  0084               	movwf	4
 22529  0CF0  3001               	movlw	1	; select bank2/3
 22530  0CF1  0085               	movwf	5
 22531  0CF2  3002               	movlw	2
 22532  0CF3  0781               	addwf	1,f
 22533  0CF4  0800               	movf	0,w
 22534  0CF5  0022               	movlb	2	; select bank2
 22535  0CF6  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 22536  0CF7  01C7               	clrf	(vfpfcnvrt@llu+1)^(0+256)
 22537  0CF8  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 22538  0CF9  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 22539  0CFA  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 22540  0CFB  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 22541  0CFC  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 22542  0CFD  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 22543                           
 22544                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
 22545  0CFE  0021               	movlb	1	; select bank1
 22546  0CFF  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22547  0D00  0020               	movlb	0	; select bank0
 22548  0D01  00B1               	movwf	xtoa@fp+1
 22549  0D02  0021               	movlb	1	; select bank1
 22550  0D03  0863               	movf	vfpfcnvrt@fp^(0+128),w
 22551  0D04  0020               	movlb	0	; select bank0
 22552  0D05  00B0               	movwf	xtoa@fp
 22553  0D06  0022               	movlb	2	; select bank2
 22554  0D07  0846               	movf	vfpfcnvrt@llu^(0+256),w
 22555  0D08  0020               	movlb	0	; select bank0
 22556  0D09  00B2               	movwf	xtoa@d
 22557  0D0A  0022               	movlb	2	; select bank2
 22558  0D0B  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 22559  0D0C  0020               	movlb	0	; select bank0
 22560  0D0D  00B3               	movwf	xtoa@d+1
 22561  0D0E  0022               	movlb	2	; select bank2
 22562  0D0F  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 22563  0D10  0020               	movlb	0	; select bank0
 22564  0D11  00B4               	movwf	xtoa@d+2
 22565  0D12  0022               	movlb	2	; select bank2
 22566  0D13  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 22567  0D14  0020               	movlb	0	; select bank0
 22568  0D15  00B5               	movwf	xtoa@d+3
 22569  0D16  0022               	movlb	2	; select bank2
 22570  0D17  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 22571  0D18  0020               	movlb	0	; select bank0
 22572  0D19  00B6               	movwf	xtoa@d+4
 22573  0D1A  0022               	movlb	2	; select bank2
 22574  0D1B  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 22575  0D1C  0020               	movlb	0	; select bank0
 22576  0D1D  00B7               	movwf	xtoa@d+5
 22577  0D1E  0022               	movlb	2	; select bank2
 22578  0D1F  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 22579  0D20  0020               	movlb	0	; select bank0
 22580  0D21  00B8               	movwf	xtoa@d+6
 22581  0D22  0022               	movlb	2	; select bank2
 22582  0D23  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 22583  0D24  0020               	movlb	0	; select bank0
 22584  0D25  00B9               	movwf	xtoa@d+7
 22585  0D26  0022               	movlb	2	; select bank2
 22586  0D27  0845               	movf	vfpfcnvrt@c^(0+256),w
 22587  0D28  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22588  0D29  0820               	movf	??_vfpfcnvrt^(0+256),w
 22589  0D2A  0020               	movlb	0	; select bank0
 22590  0D2B  00BA               	movwf	xtoa@x
 22591  0D2C  319C  24C5         	fcall	_xtoa
 22592  0D2E  0020               	movlb	0	; select bank0
 22593  0D2F  0831               	movf	?_xtoa+1,w
 22594  0D30  0021               	movlb	1	; select bank1
 22595  0D31  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22596  0D32  0020               	movlb	0	; select bank0
 22597  0D33  0830               	movf	?_xtoa,w
 22598  0D34  0021               	movlb	1	; select bank1
 22599  0D35  00E3               	movwf	?_vfpfcnvrt^(0+128)
 22600  0D36  0008               	return
 22601  0D37                     l8202:	
 22602                           
 22603                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
 22604  0D37  0021               	movlb	1	; select bank1
 22605  0D38  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22606  0D39  0086               	movwf	6
 22607  0D3A  0187               	clrf	7
 22608  0D3B  3F40               	moviw [0]fsr1
 22609  0D3C  00F1               	movwf	strncmp@_l
 22610  0D3D  3F41               	moviw [1]fsr1
 22611  0D3E  00F2               	movwf	strncmp@_l+1
 22612  0D3F  3039               	movlw	low ((STR_135+1)| (0+32768))
 22613  0D40  00F3               	movwf	strncmp@_r
 22614  0D41  30BB               	movlw	high ((STR_135+1)| (0+32768))
 22615  0D42  00F4               	movwf	strncmp@_r+1
 22616  0D43  3002               	movlw	2
 22617  0D44  00F5               	movwf	strncmp@n
 22618  0D45  3000               	movlw	0
 22619  0D46  00F6               	movwf	strncmp@n+1
 22620  0D47  3190  2000  3188   	fcall	_strncmp
 22621  0D4A  0871               	movf	?_strncmp,w
 22622  0D4B  0472               	iorwf	?_strncmp+1,w
 22623  0D4C  1903               	btfsc	3,2
 22624  0D4D  2D65               	goto	l8206
 22625  0D4E  0021               	movlb	1	; select bank1
 22626  0D4F  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22627  0D50  0086               	movwf	6
 22628  0D51  0187               	clrf	7
 22629  0D52  3F40               	moviw [0]fsr1
 22630  0D53  00F1               	movwf	strncmp@_l
 22631  0D54  3F41               	moviw [1]fsr1
 22632  0D55  00F2               	movwf	strncmp@_l+1
 22633  0D56  3019               	movlw	low ((STR_139+1)| (0+32768))
 22634  0D57  00F3               	movwf	strncmp@_r
 22635  0D58  30BB               	movlw	high ((STR_139+1)| (0+32768))
 22636  0D59  00F4               	movwf	strncmp@_r+1
 22637  0D5A  3002               	movlw	2
 22638  0D5B  00F5               	movwf	strncmp@n
 22639  0D5C  3000               	movlw	0
 22640  0D5D  00F6               	movwf	strncmp@n+1
 22641  0D5E  3190  2000  3188   	fcall	_strncmp
 22642  0D61  0871               	movf	?_strncmp,w
 22643  0D62  0472               	iorwf	?_strncmp+1,w
 22644  0D63  1D03               	btfss	3,2
 22645  0D64  2DD0               	goto	l8216
 22646  0D65                     l8206:	
 22647                           
 22648                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
 22649  0D65  0021               	movlb	1	; select bank1
 22650  0D66  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22651  0D67  0086               	movwf	6
 22652  0D68  0187               	clrf	7
 22653  0D69  3F40               	moviw [0]fsr1
 22654  0D6A  0022               	movlb	2	; select bank2
 22655  0D6B  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22656  0D6C  3F41               	moviw [1]fsr1
 22657  0D6D  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22658  0D6E  3001               	movlw	1
 22659  0D6F  0720               	addwf	??_vfpfcnvrt^(0+256),w
 22660  0D70  0084               	movwf	4
 22661  0D71  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 22662  0D72  1803               	skipnc
 22663  0D73  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 22664  0D74  0085               	movwf	5
 22665  0D75  0800               	movf	0,w	;code access
 22666  0D76  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 22667  0D77  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 22668  0D78  00C5               	movwf	vfpfcnvrt@c^(0+256)
 22669                           
 22670                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
 22671  0D79  0021               	movlb	1	; select bank1
 22672  0D7A  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22673  0D7B  0086               	movwf	6
 22674  0D7C  0187               	clrf	7
 22675  0D7D  3002               	movlw	2
 22676  0D7E  0781               	addwf	1,f
 22677  0D7F  3141               	addfsr 1,1
 22678  0D80  1803               	skipnc
 22679  0D81  0A81               	incf	1,f
 22680                           
 22681                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 22682  0D82  0866               	movf	vfpfcnvrt@ap^(0+128),w
 22683  0D83  0086               	movwf	6
 22684  0D84  3001               	movlw	1	; select bank2/3
 22685  0D85  0087               	movwf	7
 22686  0D86  0801               	movf	1,w
 22687  0D87  0084               	movwf	4
 22688  0D88  3001               	movlw	1	; select bank2/3
 22689  0D89  0085               	movwf	5
 22690  0D8A  3002               	movlw	2
 22691  0D8B  0781               	addwf	1,f
 22692  0D8C  3F00               	moviw [0]fsr0
 22693  0D8D  0022               	movlb	2	; select bank2
 22694  0D8E  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 22695  0D8F  3F01               	moviw [1]fsr0
 22696  0D90  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 22697  0D91  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 22698  0D92  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 22699  0D93  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 22700  0D94  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 22701  0D95  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 22702  0D96  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 22703                           
 22704                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1269:      
      +                                 return xtoa(fp, llu, c);
 22705  0D97  0021               	movlb	1	; select bank1
 22706  0D98  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22707  0D99  0020               	movlb	0	; select bank0
 22708  0D9A  00B1               	movwf	xtoa@fp+1
 22709  0D9B  0021               	movlb	1	; select bank1
 22710  0D9C  0863               	movf	vfpfcnvrt@fp^(0+128),w
 22711  0D9D  0020               	movlb	0	; select bank0
 22712  0D9E  00B0               	movwf	xtoa@fp
 22713  0D9F  0022               	movlb	2	; select bank2
 22714  0DA0  0846               	movf	vfpfcnvrt@llu^(0+256),w
 22715  0DA1  0020               	movlb	0	; select bank0
 22716  0DA2  00B2               	movwf	xtoa@d
 22717  0DA3  0022               	movlb	2	; select bank2
 22718  0DA4  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 22719  0DA5  0020               	movlb	0	; select bank0
 22720  0DA6  00B3               	movwf	xtoa@d+1
 22721  0DA7  0022               	movlb	2	; select bank2
 22722  0DA8  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 22723  0DA9  0020               	movlb	0	; select bank0
 22724  0DAA  00B4               	movwf	xtoa@d+2
 22725  0DAB  0022               	movlb	2	; select bank2
 22726  0DAC  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 22727  0DAD  0020               	movlb	0	; select bank0
 22728  0DAE  00B5               	movwf	xtoa@d+3
 22729  0DAF  0022               	movlb	2	; select bank2
 22730  0DB0  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 22731  0DB1  0020               	movlb	0	; select bank0
 22732  0DB2  00B6               	movwf	xtoa@d+4
 22733  0DB3  0022               	movlb	2	; select bank2
 22734  0DB4  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 22735  0DB5  0020               	movlb	0	; select bank0
 22736  0DB6  00B7               	movwf	xtoa@d+5
 22737  0DB7  0022               	movlb	2	; select bank2
 22738  0DB8  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 22739  0DB9  0020               	movlb	0	; select bank0
 22740  0DBA  00B8               	movwf	xtoa@d+6
 22741  0DBB  0022               	movlb	2	; select bank2
 22742  0DBC  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 22743  0DBD  0020               	movlb	0	; select bank0
 22744  0DBE  00B9               	movwf	xtoa@d+7
 22745  0DBF  0022               	movlb	2	; select bank2
 22746  0DC0  0845               	movf	vfpfcnvrt@c^(0+256),w
 22747  0DC1  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22748  0DC2  0820               	movf	??_vfpfcnvrt^(0+256),w
 22749  0DC3  0020               	movlb	0	; select bank0
 22750  0DC4  00BA               	movwf	xtoa@x
 22751  0DC5  319C  24C5         	fcall	_xtoa
 22752  0DC7  0020               	movlb	0	; select bank0
 22753  0DC8  0831               	movf	?_xtoa+1,w
 22754  0DC9  0021               	movlb	1	; select bank1
 22755  0DCA  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22756  0DCB  0020               	movlb	0	; select bank0
 22757  0DCC  0830               	movf	?_xtoa,w
 22758  0DCD  0021               	movlb	1	; select bank1
 22759  0DCE  00E3               	movwf	?_vfpfcnvrt^(0+128)
 22760  0DCF  0008               	return
 22761  0DD0                     l8216:	
 22762                           
 22763                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 22764  0DD0  0021               	movlb	1	; select bank1
 22765  0DD1  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22766  0DD2  0086               	movwf	6
 22767  0DD3  0187               	clrf	7
 22768  0DD4  3F40               	moviw [0]fsr1
 22769  0DD5  0022               	movlb	2	; select bank2
 22770  0DD6  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22771  0DD7  3F41               	moviw [1]fsr1
 22772  0DD8  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22773  0DD9  0820               	movf	??_vfpfcnvrt^(0+256),w
 22774  0DDA  0084               	movwf	4
 22775  0DDB  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 22776  0DDC  0085               	movwf	5
 22777  0DDD  0012               	moviw fsr0++
 22778  0DDE  3A78               	xorlw	120
 22779  0DDF  1903               	btfsc	3,2
 22780  0DE0  2DF2               	goto	l8220
 22781  0DE1  0021               	movlb	1	; select bank1
 22782  0DE2  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22783  0DE3  0086               	movwf	6
 22784  0DE4  0187               	clrf	7
 22785  0DE5  3F40               	moviw [0]fsr1
 22786  0DE6  0022               	movlb	2	; select bank2
 22787  0DE7  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22788  0DE8  3F41               	moviw [1]fsr1
 22789  0DE9  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22790  0DEA  0820               	movf	??_vfpfcnvrt^(0+256),w
 22791  0DEB  0084               	movwf	4
 22792  0DEC  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 22793  0DED  0085               	movwf	5
 22794  0DEE  0012               	moviw fsr0++
 22795  0DEF  3A58               	xorlw	88
 22796  0DF0  1D03               	btfss	3,2
 22797  0DF1  2E5A               	goto	l8230
 22798  0DF2                     l8220:	
 22799                           
 22800                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 22801  0DF2  0021               	movlb	1	; select bank1
 22802  0DF3  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22803  0DF4  0086               	movwf	6
 22804  0DF5  0187               	clrf	7
 22805  0DF6  3F40               	moviw [0]fsr1
 22806  0DF7  0022               	movlb	2	; select bank2
 22807  0DF8  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22808  0DF9  3F41               	moviw [1]fsr1
 22809  0DFA  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22810  0DFB  0820               	movf	??_vfpfcnvrt^(0+256),w
 22811  0DFC  0084               	movwf	4
 22812  0DFD  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 22813  0DFE  0085               	movwf	5
 22814  0DFF  0800               	movf	0,w	;code access
 22815  0E00  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 22816  0E01  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 22817  0E02  00C5               	movwf	vfpfcnvrt@c^(0+256)
 22818                           
 22819                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 22820  0E03  0021               	movlb	1	; select bank1
 22821  0E04  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22822  0E05  0086               	movwf	6
 22823  0E06  0187               	clrf	7
 22824  0E07  3001               	movlw	1
 22825  0E08  0781               	addwf	1,f
 22826  0E09  3141               	addfsr 1,1
 22827  0E0A  1803               	skipnc
 22828  0E0B  0A81               	incf	1,f
 22829                           
 22830                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 22831  0E0C  0866               	movf	vfpfcnvrt@ap^(0+128),w
 22832  0E0D  0086               	movwf	6
 22833  0E0E  3001               	movlw	1	; select bank2/3
 22834  0E0F  0087               	movwf	7
 22835  0E10  0801               	movf	1,w
 22836  0E11  0084               	movwf	4
 22837  0E12  3001               	movlw	1	; select bank2/3
 22838  0E13  0085               	movwf	5
 22839  0E14  3002               	movlw	2
 22840  0E15  0781               	addwf	1,f
 22841  0E16  3F00               	moviw [0]fsr0
 22842  0E17  0022               	movlb	2	; select bank2
 22843  0E18  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 22844  0E19  3F01               	moviw [1]fsr0
 22845  0E1A  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 22846  0E1B  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 22847  0E1C  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 22848  0E1D  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 22849  0E1E  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 22850  0E1F  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 22851  0E20  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 22852                           
 22853                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 22854  0E21  0021               	movlb	1	; select bank1
 22855  0E22  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22856  0E23  0020               	movlb	0	; select bank0
 22857  0E24  00B1               	movwf	xtoa@fp+1
 22858  0E25  0021               	movlb	1	; select bank1
 22859  0E26  0863               	movf	vfpfcnvrt@fp^(0+128),w
 22860  0E27  0020               	movlb	0	; select bank0
 22861  0E28  00B0               	movwf	xtoa@fp
 22862  0E29  0022               	movlb	2	; select bank2
 22863  0E2A  0846               	movf	vfpfcnvrt@llu^(0+256),w
 22864  0E2B  0020               	movlb	0	; select bank0
 22865  0E2C  00B2               	movwf	xtoa@d
 22866  0E2D  0022               	movlb	2	; select bank2
 22867  0E2E  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 22868  0E2F  0020               	movlb	0	; select bank0
 22869  0E30  00B3               	movwf	xtoa@d+1
 22870  0E31  0022               	movlb	2	; select bank2
 22871  0E32  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 22872  0E33  0020               	movlb	0	; select bank0
 22873  0E34  00B4               	movwf	xtoa@d+2
 22874  0E35  0022               	movlb	2	; select bank2
 22875  0E36  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 22876  0E37  0020               	movlb	0	; select bank0
 22877  0E38  00B5               	movwf	xtoa@d+3
 22878  0E39  0022               	movlb	2	; select bank2
 22879  0E3A  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 22880  0E3B  0020               	movlb	0	; select bank0
 22881  0E3C  00B6               	movwf	xtoa@d+4
 22882  0E3D  0022               	movlb	2	; select bank2
 22883  0E3E  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 22884  0E3F  0020               	movlb	0	; select bank0
 22885  0E40  00B7               	movwf	xtoa@d+5
 22886  0E41  0022               	movlb	2	; select bank2
 22887  0E42  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 22888  0E43  0020               	movlb	0	; select bank0
 22889  0E44  00B8               	movwf	xtoa@d+6
 22890  0E45  0022               	movlb	2	; select bank2
 22891  0E46  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 22892  0E47  0020               	movlb	0	; select bank0
 22893  0E48  00B9               	movwf	xtoa@d+7
 22894  0E49  0022               	movlb	2	; select bank2
 22895  0E4A  0845               	movf	vfpfcnvrt@c^(0+256),w
 22896  0E4B  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22897  0E4C  0820               	movf	??_vfpfcnvrt^(0+256),w
 22898  0E4D  0020               	movlb	0	; select bank0
 22899  0E4E  00BA               	movwf	xtoa@x
 22900  0E4F  319C  24C5         	fcall	_xtoa
 22901  0E51  0020               	movlb	0	; select bank0
 22902  0E52  0831               	movf	?_xtoa+1,w
 22903  0E53  0021               	movlb	1	; select bank1
 22904  0E54  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22905  0E55  0020               	movlb	0	; select bank0
 22906  0E56  0830               	movf	?_xtoa,w
 22907  0E57  0021               	movlb	1	; select bank1
 22908  0E58  00E3               	movwf	?_vfpfcnvrt^(0+128)
 22909  0E59  0008               	return
 22910  0E5A                     l8230:	
 22911                           
 22912                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1285:      
      +                             if (!strncmp(*fmt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", 
      +                          ((sizeof("lX")/sizeof("lX"[0]))-1))) {
 22913  0E5A  0021               	movlb	1	; select bank1
 22914  0E5B  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22915  0E5C  0086               	movwf	6
 22916  0E5D  0187               	clrf	7
 22917  0E5E  3F40               	moviw [0]fsr1
 22918  0E5F  00F1               	movwf	strncmp@_l
 22919  0E60  3F41               	moviw [1]fsr1
 22920  0E61  00F2               	movwf	strncmp@_l+1
 22921  0E62  3063               	movlw	low (STR_153| (0+32768))
 22922  0E63  00F3               	movwf	strncmp@_r
 22923  0E64  30BB               	movlw	high (STR_153| (0+32768))
 22924  0E65  00F4               	movwf	strncmp@_r+1
 22925  0E66  3002               	movlw	2
 22926  0E67  00F5               	movwf	strncmp@n
 22927  0E68  3000               	movlw	0
 22928  0E69  00F6               	movwf	strncmp@n+1
 22929  0E6A  3190  2000  3188   	fcall	_strncmp
 22930  0E6D  0871               	movf	?_strncmp,w
 22931  0E6E  0472               	iorwf	?_strncmp+1,w
 22932  0E6F  1903               	btfsc	3,2
 22933  0E70  2E88               	goto	l8234
 22934  0E71  0021               	movlb	1	; select bank1
 22935  0E72  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22936  0E73  0086               	movwf	6
 22937  0E74  0187               	clrf	7
 22938  0E75  3F40               	moviw [0]fsr1
 22939  0E76  00F1               	movwf	strncmp@_l
 22940  0E77  3F41               	moviw [1]fsr1
 22941  0E78  00F2               	movwf	strncmp@_l+1
 22942  0E79  303C               	movlw	low (STR_157| (0+32768))
 22943  0E7A  00F3               	movwf	strncmp@_r
 22944  0E7B  30BB               	movlw	high (STR_157| (0+32768))
 22945  0E7C  00F4               	movwf	strncmp@_r+1
 22946  0E7D  3002               	movlw	2
 22947  0E7E  00F5               	movwf	strncmp@n
 22948  0E7F  3000               	movlw	0
 22949  0E80  00F6               	movwf	strncmp@n+1
 22950  0E81  3190  2000  3188   	fcall	_strncmp
 22951  0E84  0871               	movf	?_strncmp,w
 22952  0E85  0472               	iorwf	?_strncmp+1,w
 22953  0E86  1D03               	btfss	3,2
 22954  0E87  2F0D               	goto	l8244
 22955  0E88                     l8234:	
 22956                           
 22957                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1286: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1288:           
      +                            c = (*fmt)[1];
 22958  0E88  0021               	movlb	1	; select bank1
 22959  0E89  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22960  0E8A  0086               	movwf	6
 22961  0E8B  0187               	clrf	7
 22962  0E8C  3F40               	moviw [0]fsr1
 22963  0E8D  0022               	movlb	2	; select bank2
 22964  0E8E  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22965  0E8F  3F41               	moviw [1]fsr1
 22966  0E90  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22967  0E91  3001               	movlw	1
 22968  0E92  0720               	addwf	??_vfpfcnvrt^(0+256),w
 22969  0E93  0084               	movwf	4
 22970  0E94  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 22971  0E95  1803               	skipnc
 22972  0E96  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 22973  0E97  0085               	movwf	5
 22974  0E98  0800               	movf	0,w	;code access
 22975  0E99  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 22976  0E9A  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 22977  0E9B  00C5               	movwf	vfpfcnvrt@c^(0+256)
 22978                           
 22979                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1289:      
      +                                 *fmt += ((sizeof("lx")/sizeof("lx"[0]))-1);
 22980  0E9C  0021               	movlb	1	; select bank1
 22981  0E9D  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22982  0E9E  0086               	movwf	6
 22983  0E9F  0187               	clrf	7
 22984  0EA0  3002               	movlw	2
 22985  0EA1  0781               	addwf	1,f
 22986  0EA2  3141               	addfsr 1,1
 22987  0EA3  1803               	skipnc
 22988  0EA4  0A81               	incf	1,f
 22989                           
 22990                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1290:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
 22991  0EA5  0866               	movf	vfpfcnvrt@ap^(0+128),w
 22992  0EA6  0086               	movwf	6
 22993  0EA7  3001               	movlw	1	; select bank2/3
 22994  0EA8  0087               	movwf	7
 22995  0EA9  0801               	movf	1,w
 22996  0EAA  0084               	movwf	4
 22997  0EAB  3001               	movlw	1	; select bank2/3
 22998  0EAC  0085               	movwf	5
 22999  0EAD  3004               	movlw	4
 23000  0EAE  0781               	addwf	1,f
 23001  0EAF  3F00               	moviw [0]fsr0
 23002  0EB0  0022               	movlb	2	; select bank2
 23003  0EB1  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23004  0EB2  3F01               	moviw [1]fsr0
 23005  0EB3  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 23006  0EB4  3F02               	moviw [2]fsr0
 23007  0EB5  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 23008  0EB6  3F03               	moviw [3]fsr0
 23009  0EB7  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 23010  0EB8  0820               	movf	??_vfpfcnvrt^(0+256),w
 23011  0EB9  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
 23012  0EBA  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 23013  0EBB  00A5               	movwf	((??_vfpfcnvrt+4)^(0+256)+1)
 23014  0EBC  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 23015  0EBD  00A6               	movwf	((??_vfpfcnvrt+4)^(0+256)+2)
 23016  0EBE  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 23017  0EBF  00A7               	movwf	((??_vfpfcnvrt+4)^(0+256)+3)
 23018  0EC0  01A8               	clrf	((??_vfpfcnvrt+4)^(0+256)+4)
 23019  0EC1  01A9               	clrf	((??_vfpfcnvrt+4)^(0+256)+5)
 23020  0EC2  01AA               	clrf	((??_vfpfcnvrt+4)^(0+256)+6)
 23021  0EC3  01AB               	clrf	((??_vfpfcnvrt+4)^(0+256)+7)
 23022  0EC4  082B               	movf	((??_vfpfcnvrt+4)^(0+256)+7),w
 23023  0EC5  00CD               	movwf	(vfpfcnvrt@llu+7)^(0+256)
 23024  0EC6  082A               	movf	((??_vfpfcnvrt+4)^(0+256)+6),w
 23025  0EC7  00CC               	movwf	(vfpfcnvrt@llu+6)^(0+256)
 23026  0EC8  0829               	movf	((??_vfpfcnvrt+4)^(0+256)+5),w
 23027  0EC9  00CB               	movwf	(vfpfcnvrt@llu+5)^(0+256)
 23028  0ECA  0828               	movf	((??_vfpfcnvrt+4)^(0+256)+4),w
 23029  0ECB  00CA               	movwf	(vfpfcnvrt@llu+4)^(0+256)
 23030  0ECC  0827               	movf	((??_vfpfcnvrt+4)^(0+256)+3),w
 23031  0ECD  00C9               	movwf	(vfpfcnvrt@llu+3)^(0+256)
 23032  0ECE  0826               	movf	((??_vfpfcnvrt+4)^(0+256)+2),w
 23033  0ECF  00C8               	movwf	(vfpfcnvrt@llu+2)^(0+256)
 23034  0ED0  0825               	movf	((??_vfpfcnvrt+4)^(0+256)+1),w
 23035  0ED1  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 23036  0ED2  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
 23037  0ED3  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 23038                           
 23039                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1292:      
      +                                 return xtoa(fp, llu, c);
 23040  0ED4  0021               	movlb	1	; select bank1
 23041  0ED5  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 23042  0ED6  0020               	movlb	0	; select bank0
 23043  0ED7  00B1               	movwf	xtoa@fp+1
 23044  0ED8  0021               	movlb	1	; select bank1
 23045  0ED9  0863               	movf	vfpfcnvrt@fp^(0+128),w
 23046  0EDA  0020               	movlb	0	; select bank0
 23047  0EDB  00B0               	movwf	xtoa@fp
 23048  0EDC  0022               	movlb	2	; select bank2
 23049  0EDD  0846               	movf	vfpfcnvrt@llu^(0+256),w
 23050  0EDE  0020               	movlb	0	; select bank0
 23051  0EDF  00B2               	movwf	xtoa@d
 23052  0EE0  0022               	movlb	2	; select bank2
 23053  0EE1  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 23054  0EE2  0020               	movlb	0	; select bank0
 23055  0EE3  00B3               	movwf	xtoa@d+1
 23056  0EE4  0022               	movlb	2	; select bank2
 23057  0EE5  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 23058  0EE6  0020               	movlb	0	; select bank0
 23059  0EE7  00B4               	movwf	xtoa@d+2
 23060  0EE8  0022               	movlb	2	; select bank2
 23061  0EE9  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 23062  0EEA  0020               	movlb	0	; select bank0
 23063  0EEB  00B5               	movwf	xtoa@d+3
 23064  0EEC  0022               	movlb	2	; select bank2
 23065  0EED  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 23066  0EEE  0020               	movlb	0	; select bank0
 23067  0EEF  00B6               	movwf	xtoa@d+4
 23068  0EF0  0022               	movlb	2	; select bank2
 23069  0EF1  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 23070  0EF2  0020               	movlb	0	; select bank0
 23071  0EF3  00B7               	movwf	xtoa@d+5
 23072  0EF4  0022               	movlb	2	; select bank2
 23073  0EF5  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 23074  0EF6  0020               	movlb	0	; select bank0
 23075  0EF7  00B8               	movwf	xtoa@d+6
 23076  0EF8  0022               	movlb	2	; select bank2
 23077  0EF9  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 23078  0EFA  0020               	movlb	0	; select bank0
 23079  0EFB  00B9               	movwf	xtoa@d+7
 23080  0EFC  0022               	movlb	2	; select bank2
 23081  0EFD  0845               	movf	vfpfcnvrt@c^(0+256),w
 23082  0EFE  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23083  0EFF  0820               	movf	??_vfpfcnvrt^(0+256),w
 23084  0F00  0020               	movlb	0	; select bank0
 23085  0F01  00BA               	movwf	xtoa@x
 23086  0F02  319C  24C5         	fcall	_xtoa
 23087  0F04  0020               	movlb	0	; select bank0
 23088  0F05  0831               	movf	?_xtoa+1,w
 23089  0F06  0021               	movlb	1	; select bank1
 23090  0F07  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 23091  0F08  0020               	movlb	0	; select bank0
 23092  0F09  0830               	movf	?_xtoa,w
 23093  0F0A  0021               	movlb	1	; select bank1
 23094  0F0B  00E3               	movwf	?_vfpfcnvrt^(0+128)
 23095  0F0C  0008               	return
 23096  0F0D                     l8244:	
 23097                           
 23098                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
 23099  0F0D  0021               	movlb	1	; select bank1
 23100  0F0E  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23101  0F0F  0086               	movwf	6
 23102  0F10  0187               	clrf	7
 23103  0F11  3F40               	moviw [0]fsr1
 23104  0F12  00F1               	movwf	strncmp@_l
 23105  0F13  3F41               	moviw [1]fsr1
 23106  0F14  00F2               	movwf	strncmp@_l+1
 23107  0F15  3066               	movlw	low (STR_162| (0+32768))
 23108  0F16  00F3               	movwf	strncmp@_r
 23109  0F17  30BB               	movlw	high (STR_162| (0+32768))
 23110  0F18  00F4               	movwf	strncmp@_r+1
 23111  0F19  3002               	movlw	2
 23112  0F1A  00F5               	movwf	strncmp@n
 23113  0F1B  3000               	movlw	0
 23114  0F1C  00F6               	movwf	strncmp@n+1
 23115  0F1D  3190  2000  3188   	fcall	_strncmp
 23116  0F20  0871               	movf	?_strncmp,w
 23117  0F21  0472               	iorwf	?_strncmp+1,w
 23118  0F22  1903               	btfsc	3,2
 23119  0F23  2F3B               	goto	l8248
 23120  0F24  0021               	movlb	1	; select bank1
 23121  0F25  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23122  0F26  0086               	movwf	6
 23123  0F27  0187               	clrf	7
 23124  0F28  3F40               	moviw [0]fsr1
 23125  0F29  00F1               	movwf	strncmp@_l
 23126  0F2A  3F41               	moviw [1]fsr1
 23127  0F2B  00F2               	movwf	strncmp@_l+1
 23128  0F2C  303F               	movlw	low (STR_166| (0+32768))
 23129  0F2D  00F3               	movwf	strncmp@_r
 23130  0F2E  30BB               	movlw	high (STR_166| (0+32768))
 23131  0F2F  00F4               	movwf	strncmp@_r+1
 23132  0F30  3002               	movlw	2
 23133  0F31  00F5               	movwf	strncmp@n
 23134  0F32  3000               	movlw	0
 23135  0F33  00F6               	movwf	strncmp@n+1
 23136  0F34  3190  2000  3188   	fcall	_strncmp
 23137  0F37  0871               	movf	?_strncmp,w
 23138  0F38  0472               	iorwf	?_strncmp+1,w
 23139  0F39  1D03               	btfss	3,2
 23140  0F3A  2FA6               	goto	l8258
 23141  0F3B                     l8248:	
 23142                           
 23143                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
 23144  0F3B  0021               	movlb	1	; select bank1
 23145  0F3C  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23146  0F3D  0086               	movwf	6
 23147  0F3E  0187               	clrf	7
 23148  0F3F  3F40               	moviw [0]fsr1
 23149  0F40  0022               	movlb	2	; select bank2
 23150  0F41  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23151  0F42  3F41               	moviw [1]fsr1
 23152  0F43  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 23153  0F44  3001               	movlw	1
 23154  0F45  0720               	addwf	??_vfpfcnvrt^(0+256),w
 23155  0F46  0084               	movwf	4
 23156  0F47  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 23157  0F48  1803               	skipnc
 23158  0F49  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 23159  0F4A  0085               	movwf	5
 23160  0F4B  0800               	movf	0,w	;code access
 23161  0F4C  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 23162  0F4D  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 23163  0F4E  00C5               	movwf	vfpfcnvrt@c^(0+256)
 23164                           
 23165                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
 23166  0F4F  0021               	movlb	1	; select bank1
 23167  0F50  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23168  0F51  0086               	movwf	6
 23169  0F52  0187               	clrf	7
 23170  0F53  3002               	movlw	2
 23171  0F54  0781               	addwf	1,f
 23172  0F55  3141               	addfsr 1,1
 23173  0F56  1803               	skipnc
 23174  0F57  0A81               	incf	1,f
 23175                           
 23176                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 23177  0F58  0866               	movf	vfpfcnvrt@ap^(0+128),w
 23178  0F59  0086               	movwf	6
 23179  0F5A  3001               	movlw	1	; select bank2/3
 23180  0F5B  0087               	movwf	7
 23181  0F5C  0801               	movf	1,w
 23182  0F5D  0084               	movwf	4
 23183  0F5E  3001               	movlw	1	; select bank2/3
 23184  0F5F  0085               	movwf	5
 23185  0F60  3002               	movlw	2
 23186  0F61  0781               	addwf	1,f
 23187  0F62  3F00               	moviw [0]fsr0
 23188  0F63  0022               	movlb	2	; select bank2
 23189  0F64  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 23190  0F65  3F01               	moviw [1]fsr0
 23191  0F66  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 23192  0F67  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 23193  0F68  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 23194  0F69  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 23195  0F6A  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 23196  0F6B  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 23197  0F6C  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 23198                           
 23199                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1344:      
      +                                 return xtoa(fp, llu, c);
 23200  0F6D  0021               	movlb	1	; select bank1
 23201  0F6E  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 23202  0F6F  0020               	movlb	0	; select bank0
 23203  0F70  00B1               	movwf	xtoa@fp+1
 23204  0F71  0021               	movlb	1	; select bank1
 23205  0F72  0863               	movf	vfpfcnvrt@fp^(0+128),w
 23206  0F73  0020               	movlb	0	; select bank0
 23207  0F74  00B0               	movwf	xtoa@fp
 23208  0F75  0022               	movlb	2	; select bank2
 23209  0F76  0846               	movf	vfpfcnvrt@llu^(0+256),w
 23210  0F77  0020               	movlb	0	; select bank0
 23211  0F78  00B2               	movwf	xtoa@d
 23212  0F79  0022               	movlb	2	; select bank2
 23213  0F7A  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 23214  0F7B  0020               	movlb	0	; select bank0
 23215  0F7C  00B3               	movwf	xtoa@d+1
 23216  0F7D  0022               	movlb	2	; select bank2
 23217  0F7E  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 23218  0F7F  0020               	movlb	0	; select bank0
 23219  0F80  00B4               	movwf	xtoa@d+2
 23220  0F81  0022               	movlb	2	; select bank2
 23221  0F82  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 23222  0F83  0020               	movlb	0	; select bank0
 23223  0F84  00B5               	movwf	xtoa@d+3
 23224  0F85  0022               	movlb	2	; select bank2
 23225  0F86  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 23226  0F87  0020               	movlb	0	; select bank0
 23227  0F88  00B6               	movwf	xtoa@d+4
 23228  0F89  0022               	movlb	2	; select bank2
 23229  0F8A  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 23230  0F8B  0020               	movlb	0	; select bank0
 23231  0F8C  00B7               	movwf	xtoa@d+5
 23232  0F8D  0022               	movlb	2	; select bank2
 23233  0F8E  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 23234  0F8F  0020               	movlb	0	; select bank0
 23235  0F90  00B8               	movwf	xtoa@d+6
 23236  0F91  0022               	movlb	2	; select bank2
 23237  0F92  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 23238  0F93  0020               	movlb	0	; select bank0
 23239  0F94  00B9               	movwf	xtoa@d+7
 23240  0F95  0022               	movlb	2	; select bank2
 23241  0F96  0845               	movf	vfpfcnvrt@c^(0+256),w
 23242  0F97  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23243  0F98  0820               	movf	??_vfpfcnvrt^(0+256),w
 23244  0F99  0020               	movlb	0	; select bank0
 23245  0F9A  00BA               	movwf	xtoa@x
 23246  0F9B  319C  24C5         	fcall	_xtoa
 23247  0F9D  0020               	movlb	0	; select bank0
 23248  0F9E  0831               	movf	?_xtoa+1,w
 23249  0F9F  0021               	movlb	1	; select bank1
 23250  0FA0  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 23251  0FA1  0020               	movlb	0	; select bank0
 23252  0FA2  0830               	movf	?_xtoa,w
 23253  0FA3  0021               	movlb	1	; select bank1
 23254  0FA4  00E3               	movwf	?_vfpfcnvrt^(0+128)
 23255  0FA5  0008               	return
 23256  0FA6                     l8258:	
 23257                           
 23258                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 23259  0FA6  0021               	movlb	1	; select bank1
 23260  0FA7  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23261  0FA8  0086               	movwf	6
 23262  0FA9  0187               	clrf	7
 23263  0FAA  3F40               	moviw [0]fsr1
 23264  0FAB  0022               	movlb	2	; select bank2
 23265  0FAC  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23266  0FAD  3F41               	moviw [1]fsr1
 23267  0FAE  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 23268  0FAF  0820               	movf	??_vfpfcnvrt^(0+256),w
 23269  0FB0  0084               	movwf	4
 23270  0FB1  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 23271  0FB2  0085               	movwf	5
 23272  0FB3  0012               	moviw fsr0++
 23273  0FB4  3A25               	xorlw	37
 23274  0FB5  1D03               	btfss	3,2
 23275  0FB6  2FD0               	goto	l8268
 23276                           
 23277                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 23278  0FB7  0021               	movlb	1	; select bank1
 23279  0FB8  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23280  0FB9  0086               	movwf	6
 23281  0FBA  0187               	clrf	7
 23282  0FBB  3001               	movlw	1
 23283  0FBC  0781               	addwf	1,f
 23284  0FBD  3141               	addfsr 1,1
 23285  0FBE  1803               	skipnc
 23286  0FBF  0A81               	incf	1,f
 23287                           
 23288                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 23289  0FC0  3025               	movlw	37
 23290  0FC1  00F1               	movwf	fputc@c
 23291  0FC2  3000               	movlw	0
 23292  0FC3  00F2               	movwf	fputc@c+1
 23293  0FC4  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 23294  0FC5  00F4               	movwf	fputc@fp+1
 23295  0FC6  0863               	movf	vfpfcnvrt@fp^(0+128),w
 23296  0FC7  00F3               	movwf	fputc@fp
 23297  0FC8  31A8  202C         	fcall	_fputc
 23298  0FCA                     l8264:	
 23299                           
 23300                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 23301  0FCA  3001               	movlw	1
 23302  0FCB  0021               	movlb	1	; select bank1
 23303  0FCC  00E3               	movwf	?_vfpfcnvrt^(0+128)
 23304  0FCD  3000               	movlw	0
 23305  0FCE  00E4               	movwf	(?_vfpfcnvrt^(0+128)+1)
 23306  0FCF  0008               	return
 23307  0FD0                     l8268:	
 23308                           
 23309                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 23310  0FD0  0021               	movlb	1	; select bank1
 23311  0FD1  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23312  0FD2  0086               	movwf	6
 23313  0FD3  0187               	clrf	7
 23314  0FD4  3001               	movlw	1
 23315  0FD5  0781               	addwf	1,f
 23316  0FD6  3141               	addfsr 1,1
 23317  0FD7  1803               	skipnc
 23318  0FD8  0A81               	incf	1,f
 23319  0FD9  2973               	goto	l8066
 23320  0FDA                     l8274:	
 23321                           
 23322                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 23323  0FDA  0021               	movlb	1	; select bank1
 23324  0FDB  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23325  0FDC  0086               	movwf	6
 23326  0FDD  0187               	clrf	7
 23327  0FDE  3F40               	moviw [0]fsr1
 23328  0FDF  0022               	movlb	2	; select bank2
 23329  0FE0  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23330  0FE1  3F41               	moviw [1]fsr1
 23331  0FE2  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 23332  0FE3  0820               	movf	??_vfpfcnvrt^(0+256),w
 23333  0FE4  0084               	movwf	4
 23334  0FE5  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 23335  0FE6  0085               	movwf	5
 23336  0FE7  0800               	movf	0,w	;code access
 23337  0FE8  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 23338  0FE9  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
 23339  0FEA  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 23340  0FEB  00F1               	movwf	fputc@c
 23341  0FEC  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 23342  0FED  00F2               	movwf	fputc@c+1
 23343  0FEE  0021               	movlb	1	; select bank1
 23344  0FEF  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 23345  0FF0  00F4               	movwf	fputc@fp+1
 23346  0FF1  0863               	movf	vfpfcnvrt@fp^(0+128),w
 23347  0FF2  00F3               	movwf	fputc@fp
 23348  0FF3  31A8  202C  3188   	fcall	_fputc
 23349                           
 23350                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 23351  0FF6  0021               	movlb	1	; select bank1
 23352  0FF7  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23353  0FF8  0086               	movwf	6
 23354  0FF9  0187               	clrf	7
 23355  0FFA  3001               	movlw	1
 23356  0FFB  0781               	addwf	1,f
 23357  0FFC  3141               	addfsr 1,1
 23358  0FFD  1803               	skipnc
 23359  0FFE  0A81               	incf	1,f
 23360  0FFF  2FCA               	goto	l8264
 23361  1000                     __end_of_vfpfcnvrt:	


Data Sizes:
    Strings     783
    Constant    90
    Data        7
    BSS         142
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80     80      80
    BANK3            80      2      70
    BANK4            80      0      80
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           65      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    vsnprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK2[1]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_24(CODE[18]), STR_23(CODE[18]), STR_22(CODE[19]), STR_21(CODE[20]), 
		 -> STR_20(CODE[20]), STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), STR_3(CODE[43]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_168(CODE[3]), STR_164(CODE[3]), STR_159(CODE[3]), STR_155(CODE[3]), 
		 -> STR_150(CODE[3]), STR_146(CODE[3]), STR_141(CODE[4]), STR_137(CODE[4]), 
		 -> STR_132(CODE[3]), STR_127(CODE[3]), STR_122(CODE[3]), STR_117(CODE[4]), 
		 -> STR_112(CODE[3]), STR_107(CODE[3]), STR_102(CODE[3]), STR_97(CODE[4]), 
		 -> STR_92(CODE[3]), STR_87(CODE[3]), STR_82(CODE[3]), STR_77(CODE[4]), 
		 -> STR_72(CODE[3]), STR_67(CODE[3]), STR_63(CODE[3]), STR_58(CODE[3]), 
		 -> STR_54(CODE[3]), STR_49(CODE[3]), STR_45(CODE[3]), STR_40(CODE[4]), 
		 -> STR_36(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_168(CODE[3]), STR_164(CODE[3]), STR_159(CODE[3]), STR_155(CODE[3]), 
		 -> STR_150(CODE[3]), STR_146(CODE[3]), STR_141(CODE[4]), STR_137(CODE[4]), 
		 -> STR_132(CODE[3]), STR_127(CODE[3]), STR_122(CODE[3]), STR_117(CODE[4]), 
		 -> STR_112(CODE[3]), STR_107(CODE[3]), STR_102(CODE[3]), STR_97(CODE[4]), 
		 -> STR_92(CODE[3]), STR_87(CODE[3]), STR_82(CODE[3]), STR_77(CODE[4]), 
		 -> STR_72(CODE[3]), STR_67(CODE[3]), STR_63(CODE[3]), STR_58(CODE[3]), 
		 -> STR_54(CODE[3]), STR_49(CODE[3]), STR_45(CODE[3]), STR_40(CODE[4]), 
		 -> STR_36(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 57
		 -> vfpfcnvrt@ct(BANK2[3]), STR_24(CODE[18]), STR_23(CODE[18]), STR_22(CODE[19]), 
		 -> STR_21(CODE[20]), STR_20(CODE[20]), STR_19(CODE[21]), STR_18(CODE[21]), 
		 -> STR_17(CODE[21]), STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), 
		 -> STR_3(CODE[43]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 57
		 -> vfpfcnvrt@ct(BANK2[3]), STR_24(CODE[18]), STR_23(CODE[18]), STR_22(CODE[19]), 
		 -> STR_21(CODE[20]), STR_20(CODE[20]), STR_19(CODE[21]), STR_18(CODE[21]), 
		 -> STR_17(CODE[21]), STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), 
		 -> STR_3(CODE[43]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_snprintf(BANK2[2]), stoa@nuls(BANK0[7]), dbuf(BANK4[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_snprintf(BANK2[2]), stoa@nuls(BANK0[7]), dbuf(BANK4[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_31(CODE[4]), STR_30(CODE[4]), STR_27(CODE[4]), STR_26(CODE[4]), 
		 -> dbuf(BANK4[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_31(CODE[4]), STR_30(CODE[4]), STR_27(CODE[4]), STR_26(CODE[4]), 
		 -> dbuf(BANK4[80]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_24(CODE[18]), STR_23(CODE[18]), STR_22(CODE[19]), STR_21(CODE[20]), 
		 -> STR_20(CODE[20]), STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), STR_3(CODE[43]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    snprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_snprintf(BANK2[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    S1652_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_24(CODE[18]), STR_23(CODE[18]), STR_22(CODE[19]), STR_21(CODE[20]), 
		 -> STR_20(CODE[20]), STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), STR_3(CODE[43]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK2[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_24(CODE[18]), STR_23(CODE[18]), STR_22(CODE[19]), STR_21(CODE[20]), 
		 -> STR_20(CODE[20]), STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), STR_3(CODE[43]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 57
		 -> STR_24(CODE[18]), STR_23(CODE[18]), STR_22(CODE[19]), STR_21(CODE[20]), 
		 -> STR_20(CODE[20]), STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), STR_3(CODE[43]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 2
		 -> ?_snprintf(BANK2[2]), 

    vfpfcnvrt@vp	PTR void  size(1) Largest target is 2
		 -> ?_snprintf(BANK2[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK2[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    stoa@s	PTR unsigned char  size(1) Largest target is 2
		 -> ?_snprintf(BANK2[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(BANK2[2]), stoa@nuls(BANK0[7]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    EUSART_Write_Text@text	PTR unsigned char  size(2) Largest target is 127
		 -> STR_25(CODE[3]), STR_12(CODE[3]), STR_11(CODE[38]), STR_10(CODE[45]), 
		 -> STR_9(CODE[42]), STR_5(CODE[3]), STR_4(CODE[53]), messageBuffer(BIGRAM[127]), 
		 -> STR_2(CODE[46]), STR_1(CODE[40]), 


Critical Paths under _main in COMMON

    _main->_EUSART_Initialize
    _vfpfcnvrt->_stoa
    _vfpfcnvrt->_strncmp
    _toupper->_islower
    _stoa->_fputc
    _efgtoa->___fltol
    _tolower->_isupper
    _dtoa->___aodiv
    _abs->___aomod
    _pad->_fputs
    _fputs->_fputc
    _atoi->___wmul
    _atoi->_isdigit
    _EUSART_Write_Text->_EUSART_Write
    _setTemperatureLimitsint->___wmul
    _setShortCircuitProtection->_I2C_writeRegister
    _setOverCurrentDischargeProtection->_I2C_writeRegister
    ___flmul->__Umul8_16
    _beginAFEcommunication->_I2C_writeRegister
    _beginAFEcommunication->_readRegister
    _readRegister->_read_I2C_data
    _readRegister->_send_I2C_controlByte
    _I2C_writeRegister->_send_I2C_controlByte
    _RGB_AWAIT_AFE_CONN->_RGB_color
    _AFE_getSetShortCircuitCurrent->___fltol
    _AFE_getOverCurrentDischargeCurrent->___fltol
    _EUSART_Initialize->___aldiv

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    _vsnprintf->_vfprintf
    _xtoa->_pad
    _utoa->___lodiv
    _utoa->___lomod
    _utoa->_pad
    _otoa->_pad
    _efgtoa->_floorf
    _floorf->___fldiv
    ___flsub->___flmul
    _dtoa->___aodiv
    _dtoa->___aomod
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _init_AFE->_setOverCurrentDischargeProtection
    _init_AFE->_setShortCircuitProtection
    _setShortCircuitProtection->___flge
    _setOverCurrentDischargeProtection->___flge
    ___flmul->___xxtofl
    ___flge->___fldiv
    _AFE_getSetShortCircuitCurrent->___fltol
    _AFE_getOverCurrentDischargeCurrent->___fltol
    ___fltol->___fldiv
    ___fldiv->___flmul
    _EUSART_Initialize->___aldiv

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _init_AFE->_setOverCurrentDischargeProtection
    _init_AFE->_setShortCircuitProtection

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_statemachine
    _statemachine->_printotAFERegisters
    _printotAFERegisters->_snprintf
    _snprintf->_vsnprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _myIsr in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_statemachine

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _myIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _myIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _myIsr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _myIsr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _myIsr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _myIsr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _myIsr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _myIsr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _myIsr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _myIsr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _myIsr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _myIsr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _myIsr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  234016
                                              1 BANK3      1     1      0
                  _EUSART_Initialize
                          _initClock
                          _init_GPIO
                           _init_I2C
                           _init_RGB
                          _init_TMR1
                       _statemachine
 ---------------------------------------------------------------------------------
 (1) _statemachine                                         3     3      0  233028
                                             78 BANK2      2     2      0
                                              0 BANK3      1     1      0
 _AFE_getOverCurrentDischargeCurrent
          _AFE_getSetCurrentSenseRes
      _AFE_getSetShortCircuitCurrent
                  _EUSART_Write_Text
                 _RGB_AWAIT_AFE_CONN
                          _RGB_color
              _beginAFEcommunication
                           _init_AFE
                _printotAFERegisters
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _printotAFERegisters                                  1     1      0   99712
                                             77 BANK2      1     1      0
                  _EUSART_Write_Text
                       _readRegister
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _snprintf                                            14     4     10   94125
                                             63 BANK2     14     4     10
 _AFE_getOverCurrentDischargeCurrent (ARG)
          _AFE_getSetCurrentSenseRes (ARG)
      _AFE_getSetShortCircuitCurrent (ARG)
                       _readRegister (ARG)
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (3) _vsnprintf                                           19    12      7   89470
                                             78 BANK1      2     2      0
                                             46 BANK2     17    10      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             9     4      5   88433
                                             78 BANK0      2     2      0
                                             71 BANK1      7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           52    48      4   87571
                                             67 BANK1      4     0      4
                                              0 BANK2     46    46      0
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _otoa
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                39    28     11    9106
                                             16 BANK0     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              8     6      2     512
                                              7 COMMON     4     2      2
                                              0 BANK0      4     4      0
                            _islower
 ---------------------------------------------------------------------------------
 (8) _islower                                              6     4      2     191
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              8     6      2     161
                                              1 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (6) _utoa                                                25    15     10    7249
                                             16 BANK0     25    15     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lomod                                             18     2     16     311
                                              1 COMMON     2     2      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___lodiv                                             26    10     16     314
                                              1 COMMON    10    10      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6    6837
                                              1 COMMON    11     5      6
 ---------------------------------------------------------------------------------
 (6) _stoa                                                22    19      3    2280
                                             10 COMMON     2     2      0
                                              0 BANK0     20    17      3
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _otoa                                                34    24     10    6729
                                             16 BANK0     34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              67    60      7   29207
                                              0 BANK1     67    60      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2    1232
                                              7 COMMON     4     2      2
                                              0 BANK0      4     4      0
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     641
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                               8     6      2     641
                                              1 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     490
                                             58 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       16    12      4     287
                                              1 COMMON    10     6      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    3727
                                             32 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             20    12      8    3302
                                              1 COMMON     8     0      8
                                              0 BANK0     12    12      0
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     121
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     490
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              7     3      4     448
                                              1 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              9     5      4     452
                                              1 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                31    21     10    7932
                                             16 BANK0     31    21     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                              4 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             19     3     16     448
                                              1 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             27    11     16     452
                                              1 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 8     5      3    5680
                                             16 BANK0      6     3      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 10     5      5    5420
                                              6 BANK0     10     5      5
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     164
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                8     6      2    1605
                                             10 COMMON     2     0      2
                                              0 BANK0      6     6      0
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1290
                                              1 COMMON     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    2025
                                              7 COMMON     2     0      2
                                              0 BANK0     13    13      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              5     3      2     207
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     313
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write_Text                                    5     3      2    2012
                                              2 COMMON     5     3      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _init_AFE                                             0     0      0   22846
  _setOverCurrentDischargeProtection
          _setShortCircuitProtection
              _setShuntResistorValue
            _setTemperatureLimitsint
 ---------------------------------------------------------------------------------
 (3) _setTemperatureLimitsint                              8     0      8    1244
                                              0 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     852
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _setShuntResistorValue                                4     0      4      98
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) _setShortCircuitProtection                           21    15      6   10752
                                             70 BANK0      9     3      6
                                              0 BANK1     12    12      0
                  _I2C_writeRegister
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _setOverCurrentDischargeProtection                   21    15      6   10752
                                             70 BANK0      9     3      6
                                              0 BANK1     12    12      0
                  _I2C_writeRegister
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             26    18      8    3633
                                              6 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) __Umul8_16                                            9     7      2     799
                                              1 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8    1094
                                             58 BANK0     12     4      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _beginAFEcommunication                               15    13      2    6047
                                              0 BANK0     15    13      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _readRegister                                         6     2      4    3575
                                              5 COMMON     6     2      4
                      _read_I2C_data
                      _send_I2C_NACK
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (4) _send_I2C_NACK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _read_I2C_data                                        4     2      2       0
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (4) _I2C_writeRegister                                    6     0      6    2336
                                              5 COMMON     6     0      6
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (4) _send_I2C_stopBit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _send_I2C_startBit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _send_I2C_data                                        2     0      2     250
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _send_I2C_controlByte                                 4     0      4     652
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) _RGB_AWAIT_AFE_CONN                                   1     1      0     326
                                              3 COMMON     1     1      0
                          _RGB_color
 ---------------------------------------------------------------------------------
 (2) _RGB_color                                            2     0      2     326
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _AFE_getSetShortCircuitCurrent                        8     4      4    3800
                                             67 BANK0      8     4      4
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _AFE_getSetCurrentSenseRes                            4     0      4       0
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) _AFE_getOverCurrentDischargeCurrent                   8     4      4    3800
                                             67 BANK0      8     4      4
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     778
                                              1 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             11     7      4     533
                                             10 COMMON     2     2      0
                                             58 BANK0      9     5      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             26    18      8    2489
                                             32 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_TMR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_RGB                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_I2C                                             1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_GPIO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initClock                                            0     0      0       0
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Initialize                                   18    14      4     988
                                             10 COMMON     2     2      0
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     756
                                              1 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _myIsr                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Initialize
     ___aldiv
   _initClock
     _internal_16
   _init_GPIO
   _init_I2C
   _init_RGB
   _init_TMR1
   _statemachine
     _AFE_getOverCurrentDischargeCurrent
       ___fldiv
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _AFE_getSetCurrentSenseRes
     _AFE_getSetShortCircuitCurrent
       ___fldiv
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _EUSART_Write_Text
       _EUSART_Write
     _RGB_AWAIT_AFE_CONN
       _RGB_color
     _RGB_color
     _beginAFEcommunication
       _I2C_writeRegister
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _readRegister
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
     _init_AFE
       _setOverCurrentDischargeProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
       _setShortCircuitProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
       _setShuntResistorValue
       _setTemperatureLimitsint
         ___wmul
     _printotAFERegisters
       _EUSART_Write_Text
         _EUSART_Write
       _readRegister
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _snprintf
         _AFE_getOverCurrentDischargeCurrent (ARG)
           ___fldiv
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
         _AFE_getSetCurrentSenseRes (ARG)
         _AFE_getSetShortCircuitCurrent (ARG)
           ___fldiv
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
         _readRegister (ARG)
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         _vsnprintf (ARG)
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fleq
                 ___flge
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___fltol
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _otoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _stoa
                 _fputc
                   _putch
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _toupper
                   _islower
     _snprintf
       _AFE_getOverCurrentDischargeCurrent (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
       _AFE_getSetCurrentSenseRes (ARG)
       _AFE_getSetShortCircuitCurrent (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
       _readRegister (ARG)
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _vsnprintf (ARG)
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fleq
               ___flge
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul
                 __Umul8_16
                 ___xxtofl (ARG)
               ___flneg
               ___flsub
                 ___fladd
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
               ___fltol
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
             _isdigit
             _isupper
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     50      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      2      46      11       87.5%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      50      13      100.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     193      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     193      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              41      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Dec 28 03:11:43 2019

          __end_of_setShortCircuitProtection 1B72                               _maxCellVoltage 01C6  
                      __end_of_send_I2C_data 32FD                                 ___fldiv@aexp 0059  
                               ___fldiv@bexp 0058                                 ___fldiv@sign 0051  
                                __CFG_CP$OFF 0000                                 ___awdiv@sign 0077  
                        ___wmul@multiplicand 0073                        _setShuntResistorValue 3323  
                        __Umul8_16@word_mpld 0077                                          l151 07FD  
                                        l402 2FFA                                          l323 34D9  
                                        l227 32E4                                          l325 34DE  
                                        l326 34E3                                          l262 32F9  
                                        l327 34F8                                          l280 32D7  
                                        l274 331F                                          l268 3358  
                                        l286 32DF                                          l710 2077  
                                        l298 3302                                          l571 1BB7  
                                        l627 0293                                          l731 2477  
                                        l556 3774                                          l580 1C83  
                                        l572 1BBE                                          l628 0280  
                                        l638 02C7                                          l742 1CCC  
                                        l559 3794                                          l719 20D2  
                                        l727 245C                                          l576 1BD9  
                                        l656 048A                                          l577 1BED  
                                        l746 1CE7                                          l692 263E  
                                        l780 13F6                                          l693 26D3  
                                        l781 13F9                                          l767 1DEA  
                                        l783 142C                                          l688 2623  
                                        l776 13E4                                          l874 3411  
                                        l778 13F0                                          l939 2B4D  
                                        l699 26DE                                          l779 13F3  
                                        l974 27EE                                          l987 2443  
                                        _abs 3392                               RGB_color@color 0071  
                                        _pad 375E                                 ___awmod@sign 0077  
                               __CFG_BORV$LO 0000                                          wreg 0009  
                               __CFG_IESO$ON 0000                                 ___flmul@aexp 0038  
                               ___flmul@bexp 0039                                 ___flmul@sign 0033  
                               ___flmul@temp 003E                                 ___flmul@prod 003A  
                               _statemachine 06D5                                 __CFG_LVP$OFF 0000  
                               ___fltol@exp1 007B                                         l1043 3690  
                                       l1107 2AAE                                         ?_abs 0074  
                                       l1052 29E2                                         l1044 36AA  
                                       l1117 293E                                         l1231 109B  
                                       l1055 2A30                                         l1217 1FF8  
                                       l1209 1FE0                                         l1322 2D31  
                                       l1075 28CA                                         l1323 2D3B  
                                       l1315 2D1D                                         l1252 11A2  
                                       l1253 11BA                                         l1309 2CE7  
                                       l1181 1EE1                                         l1255 11C7  
                                       l1175 1E6B                                         l1360 2DC8  
                                       l1283 17F3                                         l1179 1EFE  
                                       l1196 1F81                                         l1383 2370  
                                       l5020 115F                                         l5012 1131  
                                       l1493 348B                                         l5014 1148  
                                       l5024 1161                                         l5034 118A  
                                       l5202 3438                                         l5150 175B  
                                       l5070 15F0                                         l5048 11C3  
                                       l4504 3485                                         l5152 1772  
                                       l5072 15F8                                         l4272 2834  
                                       l7000 1E60                                         l4600 2329  
                                       l5162 178B                                         l5090 161B  
                                       l4274 2838                                         l4290 3563  
                                       l7010 1E75                                         l4602 233A  
                                       l5172 17B4                                         l5068 15EE  
                                       l4700 23D7                                         l7004 1E63  
                                       l5182 17E0                                         l5158 1789  
                                       l5086 1611                                         l4278 285F  
                                       l4702 23E6                                         l7110 1FA0  
                                       l7102 1F93                                         l4606 2353  
                                       ?_pad 0026                                         l5176 17C9  
                                       l5088 1613                                         l4632 340B  
                                       l4296 337F                                         l4720 37B9  
                                       l7040 1EB1                                         l8000 2E63  
                                       l5098 1629                                         l4298 338B  
                                       l4650 2737                                         l4706 2416  
                                       l7210 36BC                                         l7050 1EEB  
                                       l4554 299A                                         l4570 34C2  
                                       l4812 29FC                                         l4708 2422  
                                       l7124 1FB2                                         l7116 1FA7  
                                       l4564 29C2                                         l4900 28F3  
                                       l6510 1955                                         l6422 33F1  
                                       l4654 275E                                         l4726 37C4  
                                       l7150 1FF4                                         l7118 1FA9  
                                       l4558 299F                                         l7310 00AA  
                                       l7302 0098                                         l4902 2902  
                                       l4840 2893                                         l6352 2CF6  
                                       l4816 2A16                                         l7224 3592  
                                       l4656 2762                                         l4752 37FB  
                                       l4744 37EA                                         l4736 37CC  
                                       l7128 1FB4                                         l7048 1EE9  
                                       l8008 20FA                                         l6346 2CDF  
                                       l7226 359B                                         l4666 2779  
                                       l4738 37D8                                         l7146 1FF0  
                                       l7074 1F1E                                         l7066 1F0C  
                                       l7058 1EF9                                         l7314 00B1  
                                       l7322 00C3                                         l4906 2932  
                                       l8202 0D37                                         l8018 2161  
                                       l4932 106F                                         l4836 288A  
                                       l6380 2D56                                         l6356 2CFA  
                                       l6428 34E8                                         l6532 1A3B  
                                       l6516 1A01                                         l7164 376A  
                                       l4676 27C1                                         l4668 2788  
                                       l4692 23CA                                         l7252 1BE8  
                                       l4748 37F3                                         l4764 363A  
                                       l7076 1F20                                         l7084 1F2F  
                                       l7412 02D4                                         l7404 02C2  
                                       l7332 00F3                                         l7340 0121  
                                       l5820 103A                                         l8220 0DF2  
                                       l8108 0953                                         l8028 2536  
                                       l4934 1077                                         l6366 2D2F  
                                       l6358 2D0A                                         l7174 3776  
                                       l4678 27CD                                         l7246 1BD1  
                                       l4790 3670                                         l4782 365F  
                                       l7094 1F79                                         l7510 05DD  
                                       l7422 02E8                                         l7414 02D8  
                                       l7350 0151                                         l5822 1015  
                                       l8230 0E5A                                         l8206 0D65  
                                       l8070 0977                                         l8038 2598  
                                       l8310 2AE6                                         l4952 1093  
                                       l4928 106C                                         l4856 28B8  
                                       l6368 2D22                                         l6544 350B  
                                       l6528 1A13                                         l6472 1A6A  
                                       l7168 3772                                         l4688 23A3  
                                       l7256 1C1A                                         l4776 3647  
                                       l4768 3641                                         l4880 2A5A  
                                       l8216 0DD0                                         l8128 0A43  
                                       l8072 08E0                                         l8048 083F  
                                       l8312 2AEE                                         l8304 2AD2  
                                       l4962 10BA                                         l4866 28D7  
                                       l4858 28C6                                         l6490 1B28  
                                       l7178 37A0                                         l7266 1BF5  
                                       l7274 1C8F                                         l4778 3653  
                                       l4786 3668                                         l7506 05C5  
                                       l7442 0439                                         l7426 02F0  
                                       l7370 01D0                                         l4890 2AA2  
                                       l4882 2A69                                         l8234 0E88  
                                       l8138 0A84                                         l8066 0973  
                                       l8058 08A7                                         l8322 2B2C  
                                       l4948 1090                                         l7284 1CA2  
                                       l7436 0302                                         l7372 020A  
                                       l5828 1041                                         l7700 251B  
                                       l8244 0F0D                                         l8148 0AEB  
                                       l8084 0901                                         l8324 2B30  
                                       l8420 06D6                                         l8342 2F51  
                                       l6494 1B52                                         l6478 1B16  
                                       l7278 1C97                                         l7534 0615  
                                       l7518 05F3                                         l7470 04FC  
                                       l7438 03E6                                         l7390 0296  
                                       l7366 01A0                                         l7358 017F  
                                       l7702 2496                                         l7710 2520  
                                       l8158 0B53                                         l8326 2B37  
                                       l6680 2BA7                                         l4968 10C6  
                                       l7800 2DA9                                         l7288 1CAF  
                                       l7536 061D                                         l7456 0488  
                                       l7448 045A                                         l7376 023A  
                                       l7624 26F7                                         l7608 2660  
                                       l7720 1CDF                                         l8264 0FCA  
                                       l8248 0F3B                                         l8192 0CCD  
                                       l8168 0BB5                                         l8096 0922  
                                       l8600 07F2                                         l6666 2B6E  
                                       l6658 2B5E                                         l4994 1126  
                                       l7546 0619                                         l7490 0517  
                                       l7458 0491                                         l7378 025F  
                                       l7650 2088                                         l7730 1D0F  
                                       l8258 0FA6                                         l8178 0C37  
                                       l8602 141A                                         l8274 0FDA  
                                       l8450 0740                                         l6684 2BB5  
                                       l6676 2B9C                                         l6668 2B7C  
                                       l4988 110D                                         l4996 10EF  
                                       l8604 2DA1                                         l7804 2DCC  
                                       l7572 0699                                         l7556 0667  
                                       l7548 0651                                         l7580 06B4  
                                       l7492 0531                                         l7396 029E  
                                       l7388 028D                                         l7636 2050  
                                       l8268 0FD0                                         l8188 0C9F  
                                       l8292 2008                                         l4998 112B  
                                       l8606 34ED                                         l7814 2DFB  
                                       l7590 2636                                         l7654 2099  
                                       l7750 1D77                                         l7734 1D29  
                                       l7726 1CF7                                         l8294 202C  
                                       l6696 2F39                                         l7672 20E7  
                                       l7664 20A9                                         l7656 20A6  
                                       l7498 0543                                         l7674 20F4  
                                       l7690 24BA                                         l7930 2C41  
                                       l7922 2BEC                                         l7834 13E6  
                                       l7850 1400                                         l6980 1E3B  
                                       l7668 20D6                                         l7684 246F  
                                       l7908 158F                                         l7844 13FC  
                                       l7790 2D80                                         l7782 2D64  
                                       l6982 1E43                                         l7598 2685  
                                       l7774 1E08                                         l7758 1DB9  
                                       l7942 183E                                         l7934 2C6F  
                                       l7918 2BBE                                         l7870 147F  
                                       l7854 1433                                         l8478 07E8  
                                       l6976 1E38                                         l8496 281F  
                                       l7970 21F9                                         l7954 18B8  
                                       l7946 1860                                         l7890 14FE  
                                       l7866 1465                                         l7796 2D90  
                                       l7892 1507                                         l7868 1476  
                                       l7876 14A7                                         l7798 2D95  
                                       l7990 2E00                                         l7966 21CB  
                                       l7958 18E6                                         l7888 14ED  
                                       l7978 224A                                         l7898 152F  
                                       STR_1 3976                                         STR_2 3870  
                                       STR_3 38F7                                         STR_4 383B  
                                       STR_5 3A22                                         STR_6 394C  
                                       STR_7 38CB                                         STR_8 3802  
                                       STR_9 3922                                         _BRGH 0CF2  
                                       _CREN 0CEC                                         u6300 2A4A  
                                       u5430 29BA                                         u6215 289C  
                                       u6055 364A                                         u5440 29BB  
                                       u5520 22F0                                         u5600 3455  
                                       u5425 29AC                                         u5505 22DD  
                                       u5610 3456                                         u6075 3659  
                                       u6245 28B9                                         u5285 348C  
                                       u5365 339B                                         u6085 3660  
                                       u5525 22EC                                         u5375 2970  
                                       u6335 2A8F                                         u5545 2315  
                                       u5650 3373                                         _SCS0 04C8  
                                       u6515 1107                                         u6275 28CE  
                                       u5395 2989                                         _SCS1 04C9  
                                       u5660 3374                                         u6525 111B  
                                       u5565 2343                                         u5750 2769  
                                       u5495 22C2                                         u6375 2920  
                                       u5585 235C                                         u6555 1134  
                                       u4795 285D                                         u6645 1178  
                                       u6485 10F7                                         u6805 174A  
                                       u5685 3412                                         u6655 1193  
                                       u6575 113D                                         u6495 10FE  
                                       u6815 175E                                         u9135 1A2C  
                                       u5695 3417                                         u9160 3501  
                                       u9305 2B9D                                         u6665 11AC  
                                       u6905 17A2                                         u5785 27AE  
                                       u9170 3502                                         u6915 17BD  
                                       u6835 1767                                         u5955 37CF  
                                       u9180 3510                                         u6925 17D3  
                                       u6765 169F                                         u5885 2404  
                                       u9190 3511                                         u9510 33B8  
                                       u9335 2EAE                                         u6775 16CE  
                                       u9095 1B41                                         u5975 37D9  
                                       u9520 33B9                                         u9265 2B71  
                                       u9345 2EC5                                         u6785 1724  
                                       u5985 37E3                                         u6795 173B  
                                       u5995 37EB                                         u9285 2B7D  
                                       u9365 2EFB                                         u9630 1ECF  
                                       u9295 2B91                                         u9375 2F12  
                                       u9640 1ED0                                         u8905 2D03  
                                       u9625 1EC5                                         u8925 2D17  
                                       u8945 2D29                                         u9753 1F41  
                                       u9745 1F24                                         u9675 1EEF  
                                       u9960 33CF                                         u8985 2D43  
                                       _TMR1 0016                                         u9970 33D0  
                                       u9795 1F94                                         u9895 1FCB  
                                       _SPEN 0CEF                                         _TXEN 0CF5  
                                       _SYNC 0CF4                                 __CFG_WRT$OFF 0000  
                                       abs@a 0074                                         _dbuf 0220  
                                       _atoi 2D5F                                         _ctoa 3585  
                                       _main 2804                                         _dtoa 1B72  
                                       _prec 01C0                                         _otoa 261C  
                                       _nout 01BC                                         pad@i 002C  
                                       pad@p 0029                                         fsr0h 0005  
                                       fsr1h 0007                                         indf0 0000  
                                       fsr0l 0004                                         indf1 0001  
                                       fsr1l 0006                                         pad@w 002E  
                                       _stoa 2035                                         btemp 007E  
                                       _utoa 2455                                         _xtoa 1CC5  
                              ___fpclassifyf 294F                                         start 001E  
                            ___fldiv@new_exp 0052                                 _tolower$1722 0079  
                   __end_of_send_I2C_stopBit 32E3                                        ??_abs 0076  
                                      ??_pad 002B                         _send_I2C_controlByte 3319  
                              ?_EUSART_Write 0070                                ___fltol@sign1 007A  
                            __end_of___aldiv 2BBE                              __end_of___aodiv 2800  
                                      ?_atoi 0077                                        ?_ctoa 0030  
                            __end_of___fladd 2000                                        ?_main 0070  
                                      ?_dtoa 0030                              __end_of___aomod 2455  
              I2C_writeRegister@slaveAddress 0075                              __end_of___fldiv 11CC  
                            __end_of___awdiv 3800                              __end_of___flneg 330F  
                                      STR_10 389E                                        STR_11 399E  
                                      STR_12 3A22                                        STR_20 3A79  
                                      STR_21 3A8D                                        STR_13 3A64  
                                      STR_30 3B14                                        STR_22 3AA1  
                                      STR_14 3A10                                        STR_31 3B28  
                                      STR_23 3AB4                                        STR_15 39E4  
                                      STR_40 3B24                                        STR_24 3AC6  
                                      STR_16 39FA                                        STR_25 3A22  
                                      STR_17 3A25                                __CFG_WDTE$OFF 0000  
                                      STR_34 3B1C                                        STR_26 3B10  
                                      STR_18 3A3A                                        STR_27 3B20  
                                      STR_19 3A4F                                        STR_36 3B1C  
                                      STR_52 3B42                              __end_of___awmod 3675  
                                      STR_45 3B1D                                        STR_61 3B45  
                                      STR_54 3B42                                        STR_70 3B48  
                                      STR_38 3B24                                        STR_63 3B45  
                                      STR_72 3B48                                        STR_56 3B4B  
                                      STR_49 3B25                                        STR_65 3B4E  
                                      STR_58 3B4B                                        STR_82 3B31  
                                      STR_90 3B5A                                        STR_67 3B4E  
                                      STR_75 3B30                                        STR_92 3B5A  
                                      STR_77 3B30                                        STR_85 3B57  
                                      STR_87 3B57                                        STR_95 3B2C  
                            __end_of___flmul 1800                                        STR_97 3B2C  
                                      ?_otoa 0030                              __end_of___flsub 34B9  
                            __end_of___fltol 28E6                                        ?_stoa 0020  
                                      u10020 352B                                        u10005 3780  
                                      u10030 352C                                        ?_utoa 0030  
                                      u10120 1B8D                                        u10105 36B8  
                                      u10130 1B8E                                        u10050 354D  
                                      u10060 354E                                        u11100 1D40  
                                      u10205 1C8D                                        u11005 2467  
                                      u11110 1D41                                        u10225 1C09  
                                      u10330 00E4                                        u11130 1D60  
                                      u10235 1C15                                        u11035 24A9  
                                      u10340 00E5                                        u11140 1D61  
                                      u11045 24B5                                        u11205 1DE5  
                                      u10175 1BC9                                        u12007 2826  
                                      u11400 1524                                        u12017 0703  
                                      u10370 0142                                        u11410 1525  
                            __end_of___lodiv 2ABF                                        u11075 1CD7  
                                      u12027 0747                                        u11260 2DE0  
                                      u10380 0143                              ___awdiv@divisor 0071  
                                      u11165 1D9D                                        u12037 11D0  
                                      u11270 2DE1                                        u11350 149C  
                                      u12047 334F                                        u10455 028B  
                                      u11175 1DC3                                        u11095 1D23  
                                      ?_xtoa 0030                                        u11360 149D  
                                      u11195 1DD9                                        u10900 203F  
                                      u10565 030C                                        u10485 02AB  
                                      u10495 02BE                                        u10815 262E  
                                      u10825 26B7                                        u10770 068C  
                                      u10755 065A                                        u10835 26DC  
                                      u10780 068D                                        u11580 2E44  
                                      u10685 05CF                                        u11590 2E45  
                                      u10695 05DB                                        u10855 2674  
                                      u10935 2070                                        u10865 2680  
                                      u10955 20A4                                        u10965 20B3  
                                      u10985 20F2                              __end_of___lomod 294F  
                                      u11945 2B23                                        u11955 2F67  
                                      u11975 2FCD                                        _IRCF0 04CB  
                                      _IRCF1 04CC                                        _IRCF2 04CD  
                                      _IRCF3 04CE                       __size_of_read_I2C_data 0010  
                                      i1l133 001C                              ___awdiv@counter 0076  
                               vfpfcnvrt@fmt 00E5                                 vfpfcnvrt@llu 0146  
                                      _SPBRG 019B                           __size_of_RGB_color 0021  
                             __CFG_FCMEN$OFF 0000                                        _flags 01C2  
                                      _errno 01BA                                        _fputc 282C  
                            __end_of_isalpha 345D                                        _fputs 355F  
                                      _myIsr 0004                              __end_of_isdigit 337B  
                        _printotAFERegisters 11CC                                        atoi@n 002B  
                                      pad@fp 0026                                        atoi@s 0077  
                                      _width 01BE                                        ctoa@c 0032  
                                      _putch 07FE                                        ctoa@w 0034  
                                      dtoa@d 0032                                        dtoa@i 004D  
                                      dtoa@n 0045                                        dtoa@p 003F  
                                      dtoa@s 0043                                        dtoa@w 0041  
                            __end_of_islower 33D7                              __end_of_isspace 3440  
                             __CFG_BOREN$OFF 0000                              __end_of_isupper 33C0  
                                      otoa@d 0032                                        otoa@i 0050  
                                      otoa@n 0048                                        otoa@p 0042  
                                      otoa@t 0044                                        otoa@w 0046  
                                      stoa@i 002A                                        stoa@l 0032  
                                      stoa@p 0030                                        stoa@s 0022  
                                      stoa@w 002C                                        utoa@d 0032  
                                      utoa@i 0047                                        utoa@n 003F  
                                      utoa@p 003B                                        utoa@w 003D  
                                      status 0003                                        wtemp0 007E  
                             ?___fpclassifyf 0071                              __end_of_tolower 353D  
                                      xtoa@c 0055                                        xtoa@d 0032  
                                      xtoa@i 0053                                        xtoa@n 004B  
                                      xtoa@p 0047                                        xtoa@w 0049  
                                      xtoa@x 003A                            _SCD_delay_setting 3B08  
                            __end_of_strncmp 1052                              __end_of_toupper 355F  
                           ___lodiv@dividend 0028                                 ?_internal_16 0070  
                               _toupper$1737 0079                               __CFG_MCLRE$OFF 0000  
                            __initialization 0020        setTemperatureLimitsint@maxCharge_degC 0026  
                               __end_of_atoi 2E00                                 __end_of_ctoa 35B6  
                               __end_of_main 282C                                 __end_of_dtoa 1CC5  
                               __end_of_otoa 270D                                 __end_of_stoa 20FA  
                               __end_of_utoa 2536                                 __end_of_xtoa 1E1E  
                       ?_printotAFERegisters 0070                     __end_of_UV_delay_setting 3B08  
                     ?_setShuntResistorValue 0071                       beginAFEcommunication@i 002D  
                      ?_send_I2C_controlByte 0071                               ??_EUSART_Write 0071  
                             __CFG_LPBOR$OFF 0000                            _ATmega328_address 3800  
                                     ??_atoi 0020                                       ??_ctoa 0033  
                                     ??_main 01E5                                       ??_dtoa 003A  
                                     ??_otoa 003A                                       ??_stoa 007A  
                                     ??_utoa 003A                                       ??_xtoa 003B  
                             __CFG_PLLEN$OFF 0000                             ___lodiv@quotient 0072  
                              ?_readRegister 0075                                       ?_fputc 0071  
                                     STR_102 3B2D                                       STR_110 3B54  
                                     ?_fputs 007A                                       STR_112 3B54  
                                     STR_105 3B51                                       STR_122 3B35  
                                     STR_130 3B60                                       STR_107 3B51  
                                     STR_115 3B34                                       ?_myIsr 0070  
                                     STR_132 3B60                                       STR_141 3B18  
                                     STR_117 3B34                                       STR_125 3B5D  
                                     STR_150 3B19                                       STR_127 3B5D  
                                     STR_135 3B38                                       STR_137 3B38  
                                     STR_153 3B63                                       STR_146 3B39  
                                     STR_162 3B66                                       STR_155 3B63  
                                     STR_139 3B18                                       STR_164 3B66  
                                     STR_157 3B3C                                       STR_166 3B3F  
                                     STR_159 3B3C                                       STR_168 3B3F  
                           ___awdiv@dividend 0073                               __CFG_ZCDDIS$ON 0000  
                                     ?_putch 0070                __end_of_OCD_threshold_setting 39E4  
                                     _RC1REG 0199                    __end_of_SCD_delay_setting 3B10  
                              vfpfcnvrt@done 012D                                       _TX1REG 019A  
                                     _SPLLEN 04CF       setOverCurrentDischargeProtection@i_894 00AA  
                                     _SSPADD 0212                                       _TRISC6 0476  
                                     _TRISC7 0477                                       _SSPBUF 0211  
                                     u572lld 2735                                       u583lld 23A1  
                              _read_I2C_data 3354                             __end_of___xxtofl 2D5F  
                             __CFG_PWRTE$OFF 0000                            __end_of_RGB_color 34F9  
                               vfprintf@cfmt 00EC                                       ___flge 29C7  
                                     ___fleq 3675                        ??_printotAFERegisters 016D  
                                  ??___aldiv 0079                                    ??___aodiv 0071  
                             _minCellVoltage 01C4                                    ??___fladd 0020  
                                  ??___aomod 0071                                       ___wmul 3409  
                                  ??___fldiv 0048                                    ??___awdiv 0075  
                                  ??___flneg 0075                               __CFG_STVREN$ON 0000  
                                  ??___awmod 0075                                    ??___flmul 002E  
                                  ??___flsub 007A                                    ??___fltol 005E  
                                  ??___lodiv 0071                             __end_of_init_I2C 3354  
                                  ??___lomod 0071                             __end_of_init_AFE 083F  
                                     _efgtoa 0058                             __end_of_init_RGB 1806  
                  __end_of_ATmega328_address 3802                                       _floorf 22A1  
                           ___awdiv@quotient 0078                        _beginAFEcommunication 2F4C  
                            ___awmod@divisor 0071                              ___awmod@counter 0076  
                                     pad@buf 0028                                       ctoa@fp 0030  
                                     dtoa@fp 0030                                       _strcpy 34B9  
                                     _strlen 337B                                       fputc@c 0071  
                                     fputs@c 0022                                       fputs@i 0023  
                                     fputs@s 0025                                    ??_isalpha 0073  
                                  ??_isdigit 0073                           __size_of__Umul8_16 001F  
                            ___fpclassifyf@e 0020                              ___fpclassifyf@u 0022  
                            ___fpclassifyf@x 0071                                    ??_islower 0073  
                                  ??_isspace 0073                                       otoa@fp 0030  
                             ??_readRegister 0079                                    ??_isupper 0073  
                                     stoa@cp 002E                                       stoa@fp 0020  
                                     putch@c 0070                             __end_of_vfprintf 2035  
                                     utoa@fp 0030                             __end_of_snprintf 33EF  
                                  ??_tolower 0020                                       xtoa@fp 0030  
                                  ??_strncmp 0077                                    ??_toupper 0020  
                                 ___flge@ff1 005A                                   ___flge@ff2 005E  
                            ??___fpclassifyf 0075                                 ___xxtofl@arg 0022  
                               ___xxtofl@exp 0021                                 ___xxtofl@val 0071  
                                 ___fleq@ff1 0071                                   ___fleq@ff2 0075  
                    __end_of__initialization 0054                               ?_read_I2C_data 0071  
                                 ___flneg@f1 0071                                   ___fltol@f1 005A  
                   ?_setTemperatureLimitsint 0020     setTemperatureLimitsint@minDischarge_degC 0020  
                             __pcstackCOMMON 0070                       ??_send_I2C_controlByte 0075  
                               __pidataBANK3 32CC                                __end_of_fputc 2880  
                              __end_of_fputs 3585                                __end_of_myIsr 001E  
                               _cellVoltages 01A0                                __end_of_putch 07FF  
                         _RGB_AWAIT_AFE_CONN 34F9                          ?_RGB_AWAIT_AFE_CONN 0070  
                                    ??_fputc 0075                                      ??_fputs 0020  
                                    ??_myIsr 0070                                      ??_putch 0071  
          setShortCircuitProtection@delay_us 006A                                   __pbssBANK3 01A0  
                                 __pbssBANK4 0220                         __end_of_EUSART_Write 32EB  
                         __size_of_init_GPIO 0038                           __size_of_initClock 0003  
                         __size_of_init_TMR1 000B                          statemachine@success 01E4  
                          __end_of__Umul8_16 349A                                   __pmaintext 2804  
                       ??_RGB_AWAIT_AFE_CONN 0073                         __size_of_internal_16 0009  
            setShortCircuitProtection@scaler 00A0                                      ?___flge 005A  
                                    ?___fleq 0071                            ?_send_I2C_stopBit 0070  
                                    ?___wmul 0071        setTemperatureLimitsint@minCharge_degC 0024  
                            __CFG_PPS1WAY$ON 0000                   ?_setShortCircuitProtection 0066  
                                 __pintentry 0004                                      ?_efgtoa 00A0  
                     ?_beginAFEcommunication 0020                                      ?_floorf 005A  
                         ??_send_I2C_stopBit 0071                                      ?_strcpy 0071  
                                    ?_strlen 0071                      _shuntResistorValue_mOhm 01B6  
                                  ?___xxtofl 0071               setShortCircuitProtection@i_885 00AA  
                         __size_of_vfpfcnvrt FC43                                      _PPSLOCK 0E0F  
                     __size_of_send_I2C_NACK 0009                             ___lomod@dividend 0028  
                            ??_read_I2C_data 0073                       __size_of_send_I2C_data 0009  
                                  ?_init_I2C 0070                                    ?_init_AFE 0070  
                                  ?_init_RGB 0070                     readRegister@recievedData 0079  
                    ??_setShuntResistorValue 0075                           __size_of_vsnprintf 007D  
                       __end_of_readRegister 35EC                                      ___aldiv 2B3C  
                                    _adcGain 01D2                              __size_of___flge 007C  
                            __size_of___fleq 0049                                      ___aodiv 270D  
                                    ___fladd 1E1E                                      ___aomod 2379  
                                    ___fldiv 1052                                      ___awdiv 37AF  
                                    ___flneg 3306                                      ___awmod 3630  
                                    ___flmul 15D4                                      ___flsub 349A  
                                    ___fltol 2880                              __size_of___wmul 001B  
                                    ___lodiv 2A43                                      ___lomod 28E6  
                                  ?_vfprintf 00E7                              __size_of_efgtoa 067D  
                                  ?_snprintf 015F                                _messageBuffer 2771  
            ??_AFE_getSetShortCircuitCurrent 0067                              __size_of_floorf 00D8  
                                    __ptext1 06D5                                      __ptext2 11CC  
                                    __ptext3 33D7                                      __ptext4 2ABF  
                                    __ptext5 2000                                      __ptext6 13BD  
                                    __ptext7 1CC5                                      __ptext8 353D  
                                    __ptext9 33C0                            __end_of_init_GPIO 183E  
                          __end_of_initClock 2804                            __end_of_init_TMR1 3338  
                            __size_of_strcpy 001F                              __size_of_strlen 0017  
                                  _T1CONbits 0018                                 __size_of_abs 0017  
         __size_of_AFE_getSetCurrentSenseRes 000A                                 __size_of_pad 0051  
                                    _isalpha 3440                                      _isdigit 3364  
                                 ??___xxtofl 0075                             ___awmod@dividend 0073  
                 ?_AFE_getSetCurrentSenseRes 0071                             ___aldiv@dividend 0075  
                                    _islower 33C0                                      _isspace 3424  
  __end_of_setOverCurrentDischargeProtection 1A5B   __size_of_setOverCurrentDischargeProtection 0115  
        ??_setOverCurrentDischargeProtection 006C           ?_setOverCurrentDischargeProtection 0066  
          _setOverCurrentDischargeProtection 1946                                      _isupper 33A9  
                                    efgtoa@c 00A6                                      efgtoa@d 00C3  
                                    efgtoa@e 00DB                                      efgtoa@f 00A2  
                                    efgtoa@g 00D7                                      efgtoa@h 00CD  
                                    efgtoa@i 00D5                                      efgtoa@l 00D1  
                                    efgtoa@m 00BF                                      efgtoa@n 00DD  
                                    efgtoa@p 00C7                                      efgtoa@t 00BB  
                                    efgtoa@u 00DF                                      efgtoa@w 00CA  
                                    atoi@neg 0024                                      _tolower 351B  
                                    clrloop0 3339                                      _strncmp 1000  
                                    _toupper 353D                         end_of_initialization 0054  
                                    floorf@e 0068                                      floorf@m 0064  
                                    floorf@u 006A                                      floorf@x 005A  
                                 ??_init_I2C 0071                                   ??_init_AFE 007B  
                                 ??_init_RGB 0071                                      fputc@fp 0073  
                                    fputs@fp 007A                            _EUSART_Initialize 2EA4  
                         ?_EUSART_Initialize 0026                            __end_of_vfpfcnvrt 1000  
                                 efgtoa@mode 00CC                                   efgtoa@sign 00C5  
                              _send_I2C_NACK 32FD                             ___aldiv@quotient 0022  
                 send_I2C_controlByte@RW_bit 0073                                      psplit$0 4B0094  
                                    psplit$1 940095                                      psplit$2 950096  
                                    psplit$3 960097                                      psplit$4 970098  
                                    psplit$5 980099                                      psplit$6 99009A  
                                    psplit$7 9A009B                                _send_I2C_data 32F4  
                                  _RGB_color 34D8                                   ??_vfprintf 006E  
                         EUSART_Initialize@x 007A                                   ??_snprintf 0169  
                                    strcpy@d 0077                                      strlen@a 0073  
                                    strcpy@s 0075                                      strlen@s 0071  
                        ??_EUSART_Initialize 002A                                  ___fladd@grs 002B  
                           __CFG_FOSC$INTOSC 0000                                ___xxtofl@sign 0020  
                                  _TRISAbits 008C                                    _TRISBbits 008D  
                                  _TRISCbits 008E                                    _TRISEbits 0090  
                      __size_of_EUSART_Write 0008            __end_of_AFE_getSetCurrentSenseRes 3319  
                          __end_of_vsnprintf 2B3C                                  ___fldiv@grs 0054  
                                ___fldiv@rem 004D                __end_of_SCD_threshold_setting 3AF8  
                                  _RXPPSbits 0E24                            _I2C_writeRegister 345D  
                                ___flmul@grs 0034                    __end_of_EUSART_Initialize 2F4C  
                      _OCD_threshold_setting 39C4                  __end_of_printotAFERegisters 13BD  
                         ?_I2C_writeRegister 0075             beginAFEcommunication@commSuccess 002B  
                             ?_send_I2C_NACK 0070                     readRegister@slaveAddress 0075  
                             ?_send_I2C_data 0071                          ??_I2C_writeRegister 007B  
 __end_of_AFE_getOverCurrentDischargeCurrent 370E  __size_of_AFE_getOverCurrentDischargeCurrent 0050  
       ??_AFE_getOverCurrentDischargeCurrent 0067          ?_AFE_getOverCurrentDischargeCurrent 0063  
         _AFE_getOverCurrentDischargeCurrent 36BE                                   ?_RGB_color 0071  
                             __end_of___flge 2A43                               __end_of___fleq 36BE  
                                vfpfcnvrt@ap 00E6                                  vfpfcnvrt@cp 012C  
                                vfpfcnvrt@ct 0135                                  vfpfcnvrt@fp 00E3  
                                vfpfcnvrt@ll 013C                               __end_of___wmul 3424  
                                vfpfcnvrt@vp 0144                               __end_of_efgtoa 06D5  
                               _EUSART_Write 32E3                               __end_of_floorf 2379  
                I2C_writeRegister@regAddress 0077                                   floorf@F524 01AA  
              setShuntResistorValue@res_mOhm 0071             __size_of_setTemperatureLimitsint 0044  
                             __end_of_strcpy 34D8                               __end_of_strlen 3392  
      __end_of_AFE_getSetShortCircuitCurrent 375E       __size_of_AFE_getSetShortCircuitCurrent 0050  
              _AFE_getSetShortCircuitCurrent 370E                          start_initialization 0020  
                            ___lodiv@divisor 0020                              ___lodiv@counter 007A  
                              ?_statemachine 0070                                  __end_of_abs 33A9  
                                __end_of_pad 37AF                            _minCellTempCharge 01CE  
                          pnum$text6_split_1 0094                            pnum$text6_split_2 0095  
                          pnum$text6_split_3 0096                            pnum$text6_split_4 0097  
                          pnum$text6_split_5 0098                            pnum$text6_split_6 0099  
                          pnum$text6_split_7 009A                            pnum$text6_split_8 009B  
                       _maxCellTempDischarge 01C8                         _minCellTempDischarge 01CC  
                  __end_of_I2C_writeRegister 347B       _setOverCurrentDischargeProtection$1975 00A4  
                      __end_of___fpclassifyf 29C7                            _EUSART_Write_Text 33EF  
                      __size_of_readRegister 0036                           ?_EUSART_Write_Text 0072  
                    ??_beginAFEcommunication 0022                                  vfprintf@fmt 00E9  
                                   ??___flge 0062                                     ??___fleq 0020  
                                   ??___wmul 0075                                     ??_efgtoa 00A7  
                                  __Umul8_16 347B                  ??_setShortCircuitProtection 006C  
                                __pdataBANK3 01DD                                     ??_floorf 005E  
                        ??_EUSART_Write_Text 0074                __size_of_send_I2C_controlByte 000A  
                                   ??_strcpy 0073                                     ??_strlen 0073  
                                  ___fladd@a 0075                                    ___fladd@b 0071  
                               vsnprintf@cnt 0157                                 vsnprintf@fmt 0152  
                                  ___fldiv@a 0040                                    ___fldiv@b 0044  
                                __pbssBIGRAM 2771                                    _adcOffset 01D0  
                                  ___flmul@a 002A                                    ___flmul@b 0026  
                                __pbssCOMMON 007C                                    ___flsub@a 0040  
                                  ___flsub@b 0044                               ??_statemachine 016E  
                                  ___latbits 0003             send_I2C_controlByte@BlockAddress 0071  
                                 myIsr@count 01D7                                __pcstackBANK0 0020  
                              __pcstackBANK1 00A0                                __pcstackBANK2 0120  
                              __pcstackBANK3 01E4                             ___aodiv@dividend 0028  
                  __size_of_send_I2C_stopBit 0008                                  snprintf@fmt 0163  
                          __size_of___xxtofl 0096                                 _readRegister 35B6  
   setTemperatureLimitsint@maxDischarge_degC 0022                    __end_of_EUSART_Write_Text 3409  
                 __size_of_EUSART_Initialize 00A8                                ??_internal_16 0071  
                                  _atoi$1600 002A                                    _atoi$1601 0028  
                                  _atoi$1599 0026                             _OV_delay_setting 3AF8  
                          __size_of_init_I2C 0010                        I2C_writeRegister@data 0079  
                            ??_send_I2C_NACK 0071                            __size_of_init_AFE 003E  
                          __size_of_init_RGB 0005                                  _efgtoa$1083 00AF  
                                _efgtoa$1092 00B5                                  _efgtoa$1084 00B1  
                                _efgtoa$1093 00B7                                  _efgtoa$1094 00B9  
                                _efgtoa$1088 00B3                            _send_I2C_startBit 32D3  
                                  _dtoa$1060 003D                              ??_send_I2C_data 0073  
                __size_of_RGB_AWAIT_AFE_CONN 0022               __size_of_setShuntResistorValue 000A  
                                   ?___aldiv 0071                                     ?___aodiv 0020  
                         ?_send_I2C_startBit 0070                                     ?___fladd 0071  
              __end_of_setShuntResistorValue 332D                                     ?___aomod 0020  
                                   ?___fldiv 0040                                     ?___awdiv 0071  
                           ___aodiv@quotient 0074                                     ?___flneg 0071  
                                   ?___awmod 0071                                     ?___flmul 0026  
                                   ?___flsub 0040                                     ?___fltol 005A  
                                   ?___lodiv 0020                                     ?___lomod 0020  
                                ??_RGB_color 0073                                   ?__Umul8_16 0071  
                  EUSART_Initialize@baudrate 0026                            __size_of_vfprintf 0035  
                        ??_send_I2C_startBit 0071                            __size_of_snprintf 0018  
             BQ76920@shuntResistorValue_mOhm 01B2                              ___lomod@divisor 0020  
                            ___lomod@counter 0072                                     ?_isalpha 0071  
                                   ?_isdigit 0071                                     ?_islower 0071  
                                   ?_isspace 0071                  ??_AFE_getSetCurrentSenseRes 0075  
                                  _init_GPIO 1806                                     ?_isupper 0071  
                                  _initClock 2801                                    _init_TMR1 332D  
                                  _currState 01D9                                     ?_tolower 0077  
                  _setShortCircuitProtection 1A5B                   __size_of_I2C_writeRegister 001E  
                             __size_of_fputc 0054                               __size_of_fputs 0026  
                             __size_of_myIsr 001A                                     ?_strncmp 0071  
             ?_AFE_getSetShortCircuitCurrent 0063                                     ?_toupper 0077  
                             __size_of_putch 0001                              ___aldiv@divisor 0071  
                      __end_of_read_I2C_data 3364                              ___aldiv@counter 0020  
                             ___wmul@product 0075                              BQ76920@protect1 01D6  
                            BQ76920@protect2 01D5                              BQ76920@protect3 01D4  
                                   _LATAbits 010C                                     _LATEbits 0110  
                  __end_of_send_I2C_startBit 32DB                                    clear_ram0 3338  
                                  _tmr1_flag 01D8                                     _PIE1bits 0091  
         setOverCurrentDischargeProtection@i 00A8                                     _PIR1bits 0011  
                 setShortCircuitProtection@i 00A8                          __end_of_internal_16 32F4  
                                  _vfpfcnvrt 13BD                                    _xtoa$1130 0043  
                                  _xtoa$1131 0045                            ___wmul@multiplier 0071  
                    _setTemperatureLimitsint 35EC                                   ?_init_GPIO 0070  
                                 ?_initClock 0070                                   ?_init_TMR1 0070  
                               _isspace$1639 0075                        send_I2C_data@databyte 0071  
                                 vfpfcnvrt@c 0145                                   vfpfcnvrt@f 0138  
                 __size_of_EUSART_Write_Text 001A                                    _vsnprintf 2ABF  
                          _OCD_delay_setting 3AD8                    _AFE_getSetCurrentSenseRes 330F  
                       __end_of_statemachine 07FE                                   vfprintf@ap 00EB  
                                 vfprintf@fp 00E7                                  ??__Umul8_16 0073  
                           __size_of___aldiv 0082                             __size_of___aodiv 00F3  
                           __size_of___fladd 01E2                             __size_of___aomod 00DC  
                           __size_of___fldiv 017A                             __size_of___awdiv 0051  
                           __size_of___flneg 0009                             __size_of___awmod 0045  
                                vsnprintf@ap 0154               _setShortCircuitProtection$1974 00A4  
                           __size_of___flmul 022C                             __size_of___flsub 001F  
                           __size_of___fltol 0066                       readRegister@regAddress 0077  
                           __size_of___lodiv 007C                             __size_of___lomod 0069  
                                 ?_vfpfcnvrt 00E3                                   snprintf@ap 016C  
                            ___aodiv@divisor 0020                              ___aodiv@counter 0072  
                                 _ANSELBbits 018D                                   _ANSELCbits 018E  
                         ___fpclassifyf@F463 01AE                                     ___xxtofl 2CC9  
setOverCurrentDischargeProtection@current_mA 0066                             __size_of_isalpha 001D  
                           __size_of_isdigit 0017                             _send_I2C_stopBit 32DB  
                           __size_of_islower 0017                             __size_of_isspace 001C  
                                   __ptext10 3440                                     __ptext11 2455  
                                   __ptext20 34B9                                     __ptext12 28E6  
                                   __ptext21 22A1                                     __ptext13 2A43  
                                   __ptext30 3392                                     __ptext22 294F  
                                   __ptext14 1000                                     __ptext31 2379  
                                   __ptext23 349A                                     __ptext15 2035  
                                   __ptext40 3424                                     __ptext32 270D  
                                   __ptext24 1E1E                                     __ptext16 261C  
                                   __ptext41 3364                                     __ptext33 3585  
                                   __ptext25 3306                                     __ptext17 0058  
                                   __ptext50 15D4                                     __ptext42 33EF  
                                   __ptext34 375E                                     __ptext26 3675  
                                   __ptext18 351B                                     __ptext51 347B  
                                   __ptext43 32E3                                     __ptext35 337B  
                                   __ptext27 3630                                     __ptext19 33A9  
                                   __ptext60 32F4                                     __ptext52 29C7  
                                   __ptext44 0801                                     __ptext36 355F  
                                   __ptext28 37AF                                     __ptext61 3319  
                                   __ptext53 2F4C                                     __ptext45 35EC  
                                   __ptext37 282C                                     __ptext29 1B72  
                                   __ptext70 332D                                     __ptext62 34F9  
                                   __ptext54 35B6                                     __ptext46 3409  
                                   __ptext38 07FE                                     __ptext71 1801  
                                   __ptext63 34D8                                     __ptext55 32FD  
                                   __ptext47 3323                                     __ptext39 2D5F  
                                   __ptext72 3344                                     __ptext64 370E  
                                   __ptext56 3354                                     __ptext48 1A5B  
                                   __ptext73 1806                                     __ptext65 330F  
                                   __ptext57 345D                                     __ptext49 1946  
                                   __ptext74 2801                                     __ptext66 36BE  
                                   __ptext58 32DB                                     __ptext75 32EB  
                                   __ptext67 2CC9                                     __ptext59 32D3  
                                   __ptext76 2EA4                                     __ptext68 2880  
                                   __ptext77 2B3C                                     __ptext69 1052  
                           __size_of_isupper 0017                             __size_of_tolower 0022  
                  __end_of_OCD_delay_setting 3AE8                                   strcpy@dest 0078  
                           __size_of_strncmp 0052                             __size_of_toupper 0022  
                                 ?_vsnprintf 014E                                     _init_I2C 3344  
                                   _init_AFE 0801                                     _init_RGB 1801  
                              __size_of_atoi 00A1                                __size_of_ctoa 0031  
                              __size_of_main 0028                                __size_of_dtoa 0153  
                              _SSPDATPPSbits 0E21                                    pnum$text6 004B  
                              __size_of_otoa 00F1                        _SCD_threshold_setting 3AE8  
                              __size_of_stoa 00C5                                __size_of_utoa 00E1  
                 __size_of_send_I2C_startBit 0008                                __size_of_xtoa 0159  
                                _internal_16 32EB                                   _RB2PPSbits 0E9A  
                                 _RC1STAbits 019D                                     efgtoa@fp 00A0  
                                   efgtoa@ne 00C1                                     efgtoa@pp 00BD  
                                   efgtoa@ou 00AB                                    stoa@F1174 01DD  
                                 _RC4PPSbits 0EA4               __size_of_beginAFEcommunication 00B4  
                              _SSPCLKPPSbits 0E20                __end_of_beginAFEcommunication 3000  
                                   int$flags 007E                                   _RC5PPSbits 0EA5  
                                   _protect1 01DC                                     _protect2 01DB  
               __size_of_printotAFERegisters 01F1                                     _protect3 01DA  
                  ??_setTemperatureLimitsint 0077                                     _vfprintf 2000  
                                   _snprintf 33D7                             ___aomod@dividend 0028  
  setOverCurrentDischargeProtection@delay_ms 006A                     __end_of_OV_delay_setting 3B00  
                             _vfpfcnvrt$1145 012F                               _vfpfcnvrt$1146 0131  
                             _vfpfcnvrt$1172 0133                                   _INTCONbits 000B  
                                ??_init_GPIO 0071                                  ??_initClock 0071  
                                ??_init_TMR1 0071                               __pstringtext10 389E  
                             __pstringtext11 38CB                               __pstringtext20 3A25  
                             __pstringtext12 38F7                               __pstringtext21 3A3A  
                             __pstringtext13 3922                               __pstringtext30 3B14  
                             __pstringtext22 3A4F                               __pstringtext14 394C  
                             __pstringtext31 3B18                               __pstringtext23 3A64  
                             __pstringtext15 3976                               __pstringtext40 3B3C  
                             __pstringtext32 3B1C                               __pstringtext24 3A79  
                             __pstringtext16 399E                               __pstringtext41 3B3F  
                             __pstringtext33 3B20                               __pstringtext25 3A8D  
                             __pstringtext17 39E4                               __pstringtext50 3B5A  
                             __pstringtext42 3B42                               __pstringtext34 3B24  
                             __pstringtext26 3AA1                               __pstringtext18 39FA  
                             __pstringtext51 3B5D                               __pstringtext43 3B45  
                             __pstringtext35 3B28                               __pstringtext27 3AB4  
                             __pstringtext19 3A10                               __pstringtext52 3B60  
                             __pstringtext44 3B48                               __pstringtext36 3B2C  
                             __pstringtext28 3AC6                               __pstringtext53 3B63  
                             __pstringtext45 3B4B                               __pstringtext37 3B30  
                             __pstringtext29 3B10                               __pstringtext54 3B66  
                             __pstringtext46 3B4E                               __pstringtext38 3B34  
                             __pstringtext55 0000                               __pstringtext47 3B51  
                             __pstringtext39 3B38                               __pstringtext48 3B54  
                             __pstringtext49 3B57                                     isalpha@c 0071  
                                   isdigit@c 0071                                   vsnprintf@f 0159  
                                 vsnprintf@n 0150                                   vsnprintf@s 014E  
                           _UV_delay_setting 3B00                                    snprintf@n 0161  
                                  snprintf@s 015F                 __end_of_send_I2C_controlByte 3323  
                                   intlevel1 0000          setShortCircuitProtection@current_mA 0066  
                                   islower@c 0071                                     isspace@c 0071  
                          __CFG_CLKOUTEN$OFF 0000                                    strcpy@src 0071  
                                _PPSLOCKbits 0E0F                                     isupper@c 0071  
         __size_of_setShortCircuitProtection 0117                                    strncmp@_l 0071  
                                  strncmp@_r 0073                                  efgtoa@nmode 00C9  
                          _maxCellTempCharge 01CA                              ___aomod@divisor 0020  
                                ??_vfpfcnvrt 0120                                     stoa@nuls 0023  
                            ___aomod@counter 0072                                __pstringtext1 39C4  
                              __pstringtext2 3AD8                                __pstringtext3 3AE8  
                              __pstringtext4 3AF8                                __pstringtext5 3B00  
                              __pstringtext6 3B08                                __pstringtext7 3800  
                              __pstringtext8 383B                                __pstringtext9 3870  
                     __Umul8_16@multiplicand 0071                                     tolower@c 0077  
                             _vsnprintf$1774 0155                       __size_of___fpclassifyf 0078  
                                   strncmp@l 0078                                     strncmp@n 0075  
                                   strncmp@r 007A                                     toupper@c 0077  
                      EUSART_Write_Text@text 0072                                 ___aldiv@sign 0021  
                                _SSPCON2bits 0216                                ___fladd@signs 0028  
            __end_of_setTemperatureLimitsint 3630                           EUSART_Write@txData 0071  
                               ___aodiv@sign 0073      setOverCurrentDischargeProtection@scaler 00A0  
                                ??_vsnprintf 00EE                                 ___fladd@aexp 0029  
                               ___fladd@bexp 002A                        __size_of_statemachine 0129  
                                _toggleColor 007C                         __Umul8_16@multiplier 0079  
                                 _SSPCONbits 0215                   __end_of_RGB_AWAIT_AFE_CONN 351B  
                               ___aomod@sign 0073                           EUSART_Write_Text@i 0075  
                      __end_of_send_I2C_NACK 3306                            __Umul8_16@product 0075  
