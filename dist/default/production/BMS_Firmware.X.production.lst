

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Feb 26 22:48:06 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1719
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	stringtext12,global,class=STRCODE,delta=2
    17                           	psect	stringtext13,global,class=STRCODE,delta=2
    18                           	psect	stringtext14,global,class=STRCODE,delta=2
    19                           	psect	stringtext15,global,class=STRCODE,delta=2
    20                           	psect	stringtext16,global,class=STRCODE,delta=2
    21                           	psect	stringtext17,global,class=STRCODE,delta=2
    22                           	psect	stringtext18,global,class=STRCODE,delta=2
    23                           	psect	stringtext19,global,class=STRCODE,delta=2
    24                           	psect	stringtext20,global,class=STRCODE,delta=2
    25                           	psect	stringtext21,global,class=STRCODE,delta=2
    26                           	psect	stringtext22,global,class=STRCODE,delta=2
    27                           	psect	stringtext23,global,class=STRCODE,delta=2
    28                           	psect	stringtext24,global,class=STRCODE,delta=2
    29                           	psect	stringtext25,global,class=STRCODE,delta=2
    30                           	psect	stringtext26,global,class=STRCODE,delta=2
    31                           	psect	stringtext27,global,class=STRCODE,delta=2
    32                           	psect	stringtext28,global,class=STRCODE,delta=2
    33                           	psect	stringtext29,global,class=STRCODE,delta=2
    34                           	psect	stringtext30,global,class=STRCODE,delta=2
    35                           	psect	stringtext31,global,class=STRCODE,delta=2
    36                           	psect	stringtext32,global,class=STRCODE,delta=2
    37                           	psect	stringtext33,global,class=STRCODE,delta=2
    38                           	psect	stringtext34,global,class=STRCODE,delta=2
    39                           	psect	stringtext35,global,class=STRCODE,delta=2
    40                           	psect	stringtext36,global,class=STRCODE,delta=2
    41                           	psect	stringtext37,global,class=STRCODE,delta=2
    42                           	psect	stringtext38,global,class=STRCODE,delta=2
    43                           	psect	stringtext39,global,class=STRCODE,delta=2
    44                           	psect	stringtext40,global,class=STRCODE,delta=2
    45                           	psect	stringtext41,global,class=STRCODE,delta=2
    46                           	psect	cinit,global,class=CODE,merge=1,delta=2
    47                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    48                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    49                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    50                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    51                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    52                           	psect	clrtext,global,class=CODE,delta=2
    53                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    54                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    55                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    56                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    57                           	psect	text1,local,class=CODE,merge=1,delta=2
    58                           	psect	text2,local,class=CODE,merge=1,delta=2
    59                           	psect	text3,local,class=CODE,merge=1,delta=2
    60                           	psect	text4,local,class=CODE,merge=1,delta=2
    61                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    62                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    63                           	psect	text7,local,class=CODE,merge=1,delta=2
    64                           	psect	text8,local,class=CODE,merge=1,delta=2
    65                           	psect	text9,local,class=CODE,merge=1,delta=2
    66                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    67                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    68                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    69                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    70                           	psect	text14,local,class=CODE,merge=1,delta=2
    71                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    72                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    73                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    74                           	psect	text18,local,class=CODE,merge=1,delta=2
    75                           	psect	text19,local,class=CODE,merge=1,delta=2
    76                           	psect	text20,local,class=CODE,merge=1,delta=2
    77                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    78                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    79                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    80                           	psect	text24,local,class=CODE,merge=1,delta=2
    81                           	psect	text25,local,class=CODE,merge=1,delta=2
    82                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    83                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    84                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    85                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    86                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    87                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    88                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    89                           	psect	text33,local,class=CODE,merge=1,delta=2
    90                           	psect	text34,local,class=CODE,merge=1,delta=2
    91                           	psect	text35,local,class=CODE,merge=1,delta=2
    92                           	psect	text36,local,class=CODE,merge=1,delta=2
    93                           	psect	text37,local,class=CODE,merge=1,delta=2,group=1
    94                           	psect	text38,local,class=CODE,merge=1,delta=2
    95                           	psect	text39,local,class=CODE,merge=1,delta=2
    96                           	psect	text40,local,class=CODE,merge=1,delta=2
    97                           	psect	text41,local,class=CODE,merge=1,delta=2,group=1
    98                           	psect	text42,local,class=CODE,merge=1,delta=2
    99                           	psect	text43,local,class=CODE,merge=1,delta=2
   100                           	psect	text44,local,class=CODE,merge=1,delta=2
   101                           	psect	text45,local,class=CODE,merge=1,delta=2
   102                           	psect	text46,local,class=CODE,merge=1,delta=2
   103                           	psect	text47,local,class=CODE,merge=1,delta=2
   104                           	psect	text48,local,class=CODE,merge=1,delta=2
   105                           	psect	text49,local,class=CODE,merge=1,delta=2,group=1
   106                           	psect	text50,local,class=CODE,merge=1,delta=2,group=1
   107                           	psect	text51,local,class=CODE,merge=1,delta=2,group=1
   108                           	psect	text52,local,class=CODE,merge=1,delta=2,group=1
   109                           	psect	text53,local,class=CODE,merge=1,delta=2,group=1
   110                           	psect	text54,local,class=CODE,merge=1,delta=2,group=1
   111                           	psect	text55,local,class=CODE,merge=1,delta=2,group=1
   112                           	psect	text56,local,class=CODE,merge=1,delta=2
   113                           	psect	text57,local,class=CODE,merge=1,delta=2
   114                           	psect	text58,local,class=CODE,merge=1,delta=2
   115                           	psect	text59,local,class=CODE,merge=1,delta=2
   116                           	psect	text60,local,class=CODE,merge=1,delta=2
   117                           	psect	text61,local,class=CODE,merge=1,delta=2
   118                           	psect	text62,local,class=CODE,merge=1,delta=2
   119                           	psect	text63,local,class=CODE,merge=1,delta=2
   120                           	psect	text64,local,class=CODE,merge=1,delta=2
   121                           	psect	text65,local,class=CODE,merge=1,delta=2
   122                           	psect	text66,local,class=CODE,merge=1,delta=2
   123                           	psect	text67,local,class=CODE,merge=1,delta=2
   124                           	psect	text68,local,class=CODE,merge=1,delta=2
   125                           	psect	text69,local,class=CODE,merge=1,delta=2
   126                           	psect	text70,local,class=CODE,merge=1,delta=2
   127                           	psect	text71,local,class=CODE,merge=1,delta=2
   128                           	psect	text72,local,class=CODE,merge=1,delta=2
   129                           	psect	text73,local,class=CODE,merge=1,delta=2
   130                           	psect	text74,local,class=CODE,merge=1,delta=2,group=1
   131                           	psect	intentry,global,class=CODE,delta=2
   132                           	psect	text8_split_1,local,class=CODE,merge=1,delta=2
   133                           	psect	text8_split_2,local,class=CODE,merge=1,delta=2
   134                           	dabs	1,0xCA0,32
   135                           	dabs	1,0xC20,80
   136                           	dabs	1,0xBE1,15
   137                           	dabs	1,0x2771,0,_messageBuffer
   138                           	dabs	1,0x7E,2
   139  0000                     
   140                           ; Version 2.05
   141                           ; Generated 20/12/2018 GMT
   142                           ; 
   143                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   144                           ; All rights reserved.
   145                           ; 
   146                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   147                           ; 
   148                           ; Redistribution and use in source and binary forms, with or without modification, are
   149                           ; permitted provided that the following conditions are met:
   150                           ; 
   151                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   152                           ;        conditions and the following disclaimer.
   153                           ; 
   154                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   155                           ;        of conditions and the following disclaimer in the documentation and/or other
   156                           ;        materials provided with the distribution.
   157                           ; 
   158                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   159                           ;        software without specific prior written permission.
   160                           ; 
   161                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   162                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   163                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   164                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   165                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   166                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   167                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   168                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   169                           ; 
   170                           ; 
   171                           ; Code-generator required, PIC16F1719 Definitions
   172                           ; 
   173                           ; SFR Addresses
   174  0000                     	;# 
   175  0001                     	;# 
   176  0002                     	;# 
   177  0003                     	;# 
   178  0004                     	;# 
   179  0005                     	;# 
   180  0006                     	;# 
   181  0007                     	;# 
   182  0008                     	;# 
   183  0009                     	;# 
   184  000A                     	;# 
   185  000B                     	;# 
   186  000C                     	;# 
   187  000D                     	;# 
   188  000E                     	;# 
   189  000F                     	;# 
   190  0010                     	;# 
   191  0011                     	;# 
   192  0012                     	;# 
   193  0013                     	;# 
   194  0015                     	;# 
   195  0016                     	;# 
   196  0016                     	;# 
   197  0017                     	;# 
   198  0018                     	;# 
   199  0019                     	;# 
   200  001A                     	;# 
   201  001B                     	;# 
   202  001C                     	;# 
   203  008C                     	;# 
   204  008D                     	;# 
   205  008E                     	;# 
   206  008F                     	;# 
   207  0090                     	;# 
   208  0091                     	;# 
   209  0092                     	;# 
   210  0093                     	;# 
   211  0095                     	;# 
   212  0096                     	;# 
   213  0097                     	;# 
   214  0098                     	;# 
   215  0099                     	;# 
   216  009A                     	;# 
   217  009B                     	;# 
   218  009B                     	;# 
   219  009C                     	;# 
   220  009D                     	;# 
   221  009E                     	;# 
   222  009F                     	;# 
   223  010C                     	;# 
   224  010D                     	;# 
   225  010E                     	;# 
   226  010F                     	;# 
   227  0110                     	;# 
   228  0111                     	;# 
   229  0112                     	;# 
   230  0113                     	;# 
   231  0114                     	;# 
   232  0115                     	;# 
   233  0116                     	;# 
   234  0117                     	;# 
   235  0118                     	;# 
   236  0119                     	;# 
   237  011A                     	;# 
   238  011B                     	;# 
   239  011B                     	;# 
   240  011C                     	;# 
   241  018C                     	;# 
   242  018D                     	;# 
   243  018E                     	;# 
   244  018F                     	;# 
   245  0190                     	;# 
   246  0191                     	;# 
   247  0191                     	;# 
   248  0192                     	;# 
   249  0193                     	;# 
   250  0193                     	;# 
   251  0194                     	;# 
   252  0195                     	;# 
   253  0196                     	;# 
   254  0197                     	;# 
   255  0199                     	;# 
   256  0199                     	;# 
   257  0199                     	;# 
   258  019A                     	;# 
   259  019A                     	;# 
   260  019A                     	;# 
   261  019B                     	;# 
   262  019B                     	;# 
   263  019B                     	;# 
   264  019B                     	;# 
   265  019B                     	;# 
   266  019C                     	;# 
   267  019C                     	;# 
   268  019C                     	;# 
   269  019D                     	;# 
   270  019D                     	;# 
   271  019D                     	;# 
   272  019E                     	;# 
   273  019E                     	;# 
   274  019E                     	;# 
   275  019F                     	;# 
   276  019F                     	;# 
   277  019F                     	;# 
   278  019F                     	;# 
   279  019F                     	;# 
   280  020C                     	;# 
   281  020D                     	;# 
   282  020E                     	;# 
   283  020F                     	;# 
   284  0210                     	;# 
   285  0211                     	;# 
   286  0211                     	;# 
   287  0212                     	;# 
   288  0212                     	;# 
   289  0213                     	;# 
   290  0213                     	;# 
   291  0214                     	;# 
   292  0214                     	;# 
   293  0215                     	;# 
   294  0215                     	;# 
   295  0215                     	;# 
   296  0215                     	;# 
   297  0216                     	;# 
   298  0216                     	;# 
   299  0217                     	;# 
   300  0217                     	;# 
   301  028C                     	;# 
   302  028D                     	;# 
   303  028E                     	;# 
   304  028F                     	;# 
   305  0290                     	;# 
   306  0291                     	;# 
   307  0291                     	;# 
   308  0292                     	;# 
   309  0293                     	;# 
   310  0293                     	;# 
   311  0298                     	;# 
   312  0298                     	;# 
   313  0299                     	;# 
   314  029A                     	;# 
   315  029A                     	;# 
   316  029E                     	;# 
   317  030C                     	;# 
   318  030D                     	;# 
   319  030E                     	;# 
   320  030F                     	;# 
   321  0310                     	;# 
   322  038C                     	;# 
   323  038D                     	;# 
   324  038E                     	;# 
   325  038F                     	;# 
   326  0390                     	;# 
   327  0391                     	;# 
   328  0392                     	;# 
   329  0393                     	;# 
   330  0394                     	;# 
   331  0395                     	;# 
   332  0396                     	;# 
   333  0397                     	;# 
   334  0398                     	;# 
   335  0399                     	;# 
   336  039D                     	;# 
   337  039E                     	;# 
   338  039F                     	;# 
   339  0415                     	;# 
   340  0416                     	;# 
   341  0417                     	;# 
   342  041C                     	;# 
   343  041D                     	;# 
   344  041E                     	;# 
   345  0498                     	;# 
   346  0498                     	;# 
   347  0499                     	;# 
   348  049A                     	;# 
   349  049B                     	;# 
   350  049B                     	;# 
   351  049C                     	;# 
   352  049D                     	;# 
   353  049E                     	;# 
   354  049F                     	;# 
   355  0511                     	;# 
   356  0515                     	;# 
   357  0617                     	;# 
   358  0618                     	;# 
   359  0619                     	;# 
   360  0619                     	;# 
   361  061A                     	;# 
   362  061B                     	;# 
   363  061C                     	;# 
   364  061C                     	;# 
   365  0691                     	;# 
   366  0692                     	;# 
   367  0693                     	;# 
   368  0694                     	;# 
   369  0695                     	;# 
   370  0696                     	;# 
   371  0697                     	;# 
   372  0698                     	;# 
   373  0699                     	;# 
   374  069A                     	;# 
   375  069B                     	;# 
   376  069C                     	;# 
   377  069D                     	;# 
   378  069E                     	;# 
   379  069F                     	;# 
   380  0E0F                     	;# 
   381  0E10                     	;# 
   382  0E11                     	;# 
   383  0E12                     	;# 
   384  0E13                     	;# 
   385  0E14                     	;# 
   386  0E15                     	;# 
   387  0E17                     	;# 
   388  0E20                     	;# 
   389  0E21                     	;# 
   390  0E22                     	;# 
   391  0E24                     	;# 
   392  0E25                     	;# 
   393  0E28                     	;# 
   394  0E29                     	;# 
   395  0E2A                     	;# 
   396  0E2B                     	;# 
   397  0E90                     	;# 
   398  0E91                     	;# 
   399  0E92                     	;# 
   400  0E93                     	;# 
   401  0E94                     	;# 
   402  0E95                     	;# 
   403  0E96                     	;# 
   404  0E97                     	;# 
   405  0E98                     	;# 
   406  0E99                     	;# 
   407  0E9A                     	;# 
   408  0E9B                     	;# 
   409  0E9C                     	;# 
   410  0E9D                     	;# 
   411  0E9E                     	;# 
   412  0E9F                     	;# 
   413  0EA0                     	;# 
   414  0EA1                     	;# 
   415  0EA2                     	;# 
   416  0EA3                     	;# 
   417  0EA4                     	;# 
   418  0EA5                     	;# 
   419  0EA6                     	;# 
   420  0EA7                     	;# 
   421  0EA8                     	;# 
   422  0EA9                     	;# 
   423  0EAA                     	;# 
   424  0EAB                     	;# 
   425  0EAC                     	;# 
   426  0EAD                     	;# 
   427  0EAE                     	;# 
   428  0EAF                     	;# 
   429  0EB0                     	;# 
   430  0EB1                     	;# 
   431  0EB2                     	;# 
   432  0F0F                     	;# 
   433  0F10                     	;# 
   434  0F11                     	;# 
   435  0F12                     	;# 
   436  0F13                     	;# 
   437  0F14                     	;# 
   438  0F15                     	;# 
   439  0F16                     	;# 
   440  0F17                     	;# 
   441  0F18                     	;# 
   442  0F19                     	;# 
   443  0F1A                     	;# 
   444  0F1B                     	;# 
   445  0F1C                     	;# 
   446  0F1D                     	;# 
   447  0F1E                     	;# 
   448  0F1F                     	;# 
   449  0F20                     	;# 
   450  0F21                     	;# 
   451  0F22                     	;# 
   452  0F23                     	;# 
   453  0F24                     	;# 
   454  0F25                     	;# 
   455  0F26                     	;# 
   456  0F27                     	;# 
   457  0F28                     	;# 
   458  0F29                     	;# 
   459  0F2A                     	;# 
   460  0F2B                     	;# 
   461  0F2C                     	;# 
   462  0F2D                     	;# 
   463  0F2E                     	;# 
   464  0F2F                     	;# 
   465  0F30                     	;# 
   466  0F31                     	;# 
   467  0F32                     	;# 
   468  0F33                     	;# 
   469  0F34                     	;# 
   470  0F35                     	;# 
   471  0F36                     	;# 
   472  0F37                     	;# 
   473  0FE4                     	;# 
   474  0FE5                     	;# 
   475  0FE6                     	;# 
   476  0FE7                     	;# 
   477  0FE8                     	;# 
   478  0FE9                     	;# 
   479  0FEA                     	;# 
   480  0FEB                     	;# 
   481  0FED                     	;# 
   482  0FEE                     	;# 
   483  0FEF                     	;# 
   484  0000                     	;# 
   485  0001                     	;# 
   486  0002                     	;# 
   487  0003                     	;# 
   488  0004                     	;# 
   489  0005                     	;# 
   490  0006                     	;# 
   491  0007                     	;# 
   492  0008                     	;# 
   493  0009                     	;# 
   494  000A                     	;# 
   495  000B                     	;# 
   496  000C                     	;# 
   497  000D                     	;# 
   498  000E                     	;# 
   499  000F                     	;# 
   500  0010                     	;# 
   501  0011                     	;# 
   502  0012                     	;# 
   503  0013                     	;# 
   504  0015                     	;# 
   505  0016                     	;# 
   506  0016                     	;# 
   507  0017                     	;# 
   508  0018                     	;# 
   509  0019                     	;# 
   510  001A                     	;# 
   511  001B                     	;# 
   512  001C                     	;# 
   513  008C                     	;# 
   514  008D                     	;# 
   515  008E                     	;# 
   516  008F                     	;# 
   517  0090                     	;# 
   518  0091                     	;# 
   519  0092                     	;# 
   520  0093                     	;# 
   521  0095                     	;# 
   522  0096                     	;# 
   523  0097                     	;# 
   524  0098                     	;# 
   525  0099                     	;# 
   526  009A                     	;# 
   527  009B                     	;# 
   528  009B                     	;# 
   529  009C                     	;# 
   530  009D                     	;# 
   531  009E                     	;# 
   532  009F                     	;# 
   533  010C                     	;# 
   534  010D                     	;# 
   535  010E                     	;# 
   536  010F                     	;# 
   537  0110                     	;# 
   538  0111                     	;# 
   539  0112                     	;# 
   540  0113                     	;# 
   541  0114                     	;# 
   542  0115                     	;# 
   543  0116                     	;# 
   544  0117                     	;# 
   545  0118                     	;# 
   546  0119                     	;# 
   547  011A                     	;# 
   548  011B                     	;# 
   549  011B                     	;# 
   550  011C                     	;# 
   551  018C                     	;# 
   552  018D                     	;# 
   553  018E                     	;# 
   554  018F                     	;# 
   555  0190                     	;# 
   556  0191                     	;# 
   557  0191                     	;# 
   558  0192                     	;# 
   559  0193                     	;# 
   560  0193                     	;# 
   561  0194                     	;# 
   562  0195                     	;# 
   563  0196                     	;# 
   564  0197                     	;# 
   565  0199                     	;# 
   566  0199                     	;# 
   567  0199                     	;# 
   568  019A                     	;# 
   569  019A                     	;# 
   570  019A                     	;# 
   571  019B                     	;# 
   572  019B                     	;# 
   573  019B                     	;# 
   574  019B                     	;# 
   575  019B                     	;# 
   576  019C                     	;# 
   577  019C                     	;# 
   578  019C                     	;# 
   579  019D                     	;# 
   580  019D                     	;# 
   581  019D                     	;# 
   582  019E                     	;# 
   583  019E                     	;# 
   584  019E                     	;# 
   585  019F                     	;# 
   586  019F                     	;# 
   587  019F                     	;# 
   588  019F                     	;# 
   589  019F                     	;# 
   590  020C                     	;# 
   591  020D                     	;# 
   592  020E                     	;# 
   593  020F                     	;# 
   594  0210                     	;# 
   595  0211                     	;# 
   596  0211                     	;# 
   597  0212                     	;# 
   598  0212                     	;# 
   599  0213                     	;# 
   600  0213                     	;# 
   601  0214                     	;# 
   602  0214                     	;# 
   603  0215                     	;# 
   604  0215                     	;# 
   605  0215                     	;# 
   606  0215                     	;# 
   607  0216                     	;# 
   608  0216                     	;# 
   609  0217                     	;# 
   610  0217                     	;# 
   611  028C                     	;# 
   612  028D                     	;# 
   613  028E                     	;# 
   614  028F                     	;# 
   615  0290                     	;# 
   616  0291                     	;# 
   617  0291                     	;# 
   618  0292                     	;# 
   619  0293                     	;# 
   620  0293                     	;# 
   621  0298                     	;# 
   622  0298                     	;# 
   623  0299                     	;# 
   624  029A                     	;# 
   625  029A                     	;# 
   626  029E                     	;# 
   627  030C                     	;# 
   628  030D                     	;# 
   629  030E                     	;# 
   630  030F                     	;# 
   631  0310                     	;# 
   632  038C                     	;# 
   633  038D                     	;# 
   634  038E                     	;# 
   635  038F                     	;# 
   636  0390                     	;# 
   637  0391                     	;# 
   638  0392                     	;# 
   639  0393                     	;# 
   640  0394                     	;# 
   641  0395                     	;# 
   642  0396                     	;# 
   643  0397                     	;# 
   644  0398                     	;# 
   645  0399                     	;# 
   646  039D                     	;# 
   647  039E                     	;# 
   648  039F                     	;# 
   649  0415                     	;# 
   650  0416                     	;# 
   651  0417                     	;# 
   652  041C                     	;# 
   653  041D                     	;# 
   654  041E                     	;# 
   655  0498                     	;# 
   656  0498                     	;# 
   657  0499                     	;# 
   658  049A                     	;# 
   659  049B                     	;# 
   660  049B                     	;# 
   661  049C                     	;# 
   662  049D                     	;# 
   663  049E                     	;# 
   664  049F                     	;# 
   665  0511                     	;# 
   666  0515                     	;# 
   667  0617                     	;# 
   668  0618                     	;# 
   669  0619                     	;# 
   670  0619                     	;# 
   671  061A                     	;# 
   672  061B                     	;# 
   673  061C                     	;# 
   674  061C                     	;# 
   675  0691                     	;# 
   676  0692                     	;# 
   677  0693                     	;# 
   678  0694                     	;# 
   679  0695                     	;# 
   680  0696                     	;# 
   681  0697                     	;# 
   682  0698                     	;# 
   683  0699                     	;# 
   684  069A                     	;# 
   685  069B                     	;# 
   686  069C                     	;# 
   687  069D                     	;# 
   688  069E                     	;# 
   689  069F                     	;# 
   690  0E0F                     	;# 
   691  0E10                     	;# 
   692  0E11                     	;# 
   693  0E12                     	;# 
   694  0E13                     	;# 
   695  0E14                     	;# 
   696  0E15                     	;# 
   697  0E17                     	;# 
   698  0E20                     	;# 
   699  0E21                     	;# 
   700  0E22                     	;# 
   701  0E24                     	;# 
   702  0E25                     	;# 
   703  0E28                     	;# 
   704  0E29                     	;# 
   705  0E2A                     	;# 
   706  0E2B                     	;# 
   707  0E90                     	;# 
   708  0E91                     	;# 
   709  0E92                     	;# 
   710  0E93                     	;# 
   711  0E94                     	;# 
   712  0E95                     	;# 
   713  0E96                     	;# 
   714  0E97                     	;# 
   715  0E98                     	;# 
   716  0E99                     	;# 
   717  0E9A                     	;# 
   718  0E9B                     	;# 
   719  0E9C                     	;# 
   720  0E9D                     	;# 
   721  0E9E                     	;# 
   722  0E9F                     	;# 
   723  0EA0                     	;# 
   724  0EA1                     	;# 
   725  0EA2                     	;# 
   726  0EA3                     	;# 
   727  0EA4                     	;# 
   728  0EA5                     	;# 
   729  0EA6                     	;# 
   730  0EA7                     	;# 
   731  0EA8                     	;# 
   732  0EA9                     	;# 
   733  0EAA                     	;# 
   734  0EAB                     	;# 
   735  0EAC                     	;# 
   736  0EAD                     	;# 
   737  0EAE                     	;# 
   738  0EAF                     	;# 
   739  0EB0                     	;# 
   740  0EB1                     	;# 
   741  0EB2                     	;# 
   742  0F0F                     	;# 
   743  0F10                     	;# 
   744  0F11                     	;# 
   745  0F12                     	;# 
   746  0F13                     	;# 
   747  0F14                     	;# 
   748  0F15                     	;# 
   749  0F16                     	;# 
   750  0F17                     	;# 
   751  0F18                     	;# 
   752  0F19                     	;# 
   753  0F1A                     	;# 
   754  0F1B                     	;# 
   755  0F1C                     	;# 
   756  0F1D                     	;# 
   757  0F1E                     	;# 
   758  0F1F                     	;# 
   759  0F20                     	;# 
   760  0F21                     	;# 
   761  0F22                     	;# 
   762  0F23                     	;# 
   763  0F24                     	;# 
   764  0F25                     	;# 
   765  0F26                     	;# 
   766  0F27                     	;# 
   767  0F28                     	;# 
   768  0F29                     	;# 
   769  0F2A                     	;# 
   770  0F2B                     	;# 
   771  0F2C                     	;# 
   772  0F2D                     	;# 
   773  0F2E                     	;# 
   774  0F2F                     	;# 
   775  0F30                     	;# 
   776  0F31                     	;# 
   777  0F32                     	;# 
   778  0F33                     	;# 
   779  0F34                     	;# 
   780  0F35                     	;# 
   781  0F36                     	;# 
   782  0F37                     	;# 
   783  0FE4                     	;# 
   784  0FE5                     	;# 
   785  0FE6                     	;# 
   786  0FE7                     	;# 
   787  0FE8                     	;# 
   788  0FE9                     	;# 
   789  0FEA                     	;# 
   790  0FEB                     	;# 
   791  0FED                     	;# 
   792  0FEE                     	;# 
   793  0FEF                     	;# 
   794  0000                     	;# 
   795  0001                     	;# 
   796  0002                     	;# 
   797  0003                     	;# 
   798  0004                     	;# 
   799  0005                     	;# 
   800  0006                     	;# 
   801  0007                     	;# 
   802  0008                     	;# 
   803  0009                     	;# 
   804  000A                     	;# 
   805  000B                     	;# 
   806  000C                     	;# 
   807  000D                     	;# 
   808  000E                     	;# 
   809  000F                     	;# 
   810  0010                     	;# 
   811  0011                     	;# 
   812  0012                     	;# 
   813  0013                     	;# 
   814  0015                     	;# 
   815  0016                     	;# 
   816  0016                     	;# 
   817  0017                     	;# 
   818  0018                     	;# 
   819  0019                     	;# 
   820  001A                     	;# 
   821  001B                     	;# 
   822  001C                     	;# 
   823  008C                     	;# 
   824  008D                     	;# 
   825  008E                     	;# 
   826  008F                     	;# 
   827  0090                     	;# 
   828  0091                     	;# 
   829  0092                     	;# 
   830  0093                     	;# 
   831  0095                     	;# 
   832  0096                     	;# 
   833  0097                     	;# 
   834  0098                     	;# 
   835  0099                     	;# 
   836  009A                     	;# 
   837  009B                     	;# 
   838  009B                     	;# 
   839  009C                     	;# 
   840  009D                     	;# 
   841  009E                     	;# 
   842  009F                     	;# 
   843  010C                     	;# 
   844  010D                     	;# 
   845  010E                     	;# 
   846  010F                     	;# 
   847  0110                     	;# 
   848  0111                     	;# 
   849  0112                     	;# 
   850  0113                     	;# 
   851  0114                     	;# 
   852  0115                     	;# 
   853  0116                     	;# 
   854  0117                     	;# 
   855  0118                     	;# 
   856  0119                     	;# 
   857  011A                     	;# 
   858  011B                     	;# 
   859  011B                     	;# 
   860  011C                     	;# 
   861  018C                     	;# 
   862  018D                     	;# 
   863  018E                     	;# 
   864  018F                     	;# 
   865  0190                     	;# 
   866  0191                     	;# 
   867  0191                     	;# 
   868  0192                     	;# 
   869  0193                     	;# 
   870  0193                     	;# 
   871  0194                     	;# 
   872  0195                     	;# 
   873  0196                     	;# 
   874  0197                     	;# 
   875  0199                     	;# 
   876  0199                     	;# 
   877  0199                     	;# 
   878  019A                     	;# 
   879  019A                     	;# 
   880  019A                     	;# 
   881  019B                     	;# 
   882  019B                     	;# 
   883  019B                     	;# 
   884  019B                     	;# 
   885  019B                     	;# 
   886  019C                     	;# 
   887  019C                     	;# 
   888  019C                     	;# 
   889  019D                     	;# 
   890  019D                     	;# 
   891  019D                     	;# 
   892  019E                     	;# 
   893  019E                     	;# 
   894  019E                     	;# 
   895  019F                     	;# 
   896  019F                     	;# 
   897  019F                     	;# 
   898  019F                     	;# 
   899  019F                     	;# 
   900  020C                     	;# 
   901  020D                     	;# 
   902  020E                     	;# 
   903  020F                     	;# 
   904  0210                     	;# 
   905  0211                     	;# 
   906  0211                     	;# 
   907  0212                     	;# 
   908  0212                     	;# 
   909  0213                     	;# 
   910  0213                     	;# 
   911  0214                     	;# 
   912  0214                     	;# 
   913  0215                     	;# 
   914  0215                     	;# 
   915  0215                     	;# 
   916  0215                     	;# 
   917  0216                     	;# 
   918  0216                     	;# 
   919  0217                     	;# 
   920  0217                     	;# 
   921  028C                     	;# 
   922  028D                     	;# 
   923  028E                     	;# 
   924  028F                     	;# 
   925  0290                     	;# 
   926  0291                     	;# 
   927  0291                     	;# 
   928  0292                     	;# 
   929  0293                     	;# 
   930  0293                     	;# 
   931  0298                     	;# 
   932  0298                     	;# 
   933  0299                     	;# 
   934  029A                     	;# 
   935  029A                     	;# 
   936  029E                     	;# 
   937  030C                     	;# 
   938  030D                     	;# 
   939  030E                     	;# 
   940  030F                     	;# 
   941  0310                     	;# 
   942  038C                     	;# 
   943  038D                     	;# 
   944  038E                     	;# 
   945  038F                     	;# 
   946  0390                     	;# 
   947  0391                     	;# 
   948  0392                     	;# 
   949  0393                     	;# 
   950  0394                     	;# 
   951  0395                     	;# 
   952  0396                     	;# 
   953  0397                     	;# 
   954  0398                     	;# 
   955  0399                     	;# 
   956  039D                     	;# 
   957  039E                     	;# 
   958  039F                     	;# 
   959  0415                     	;# 
   960  0416                     	;# 
   961  0417                     	;# 
   962  041C                     	;# 
   963  041D                     	;# 
   964  041E                     	;# 
   965  0498                     	;# 
   966  0498                     	;# 
   967  0499                     	;# 
   968  049A                     	;# 
   969  049B                     	;# 
   970  049B                     	;# 
   971  049C                     	;# 
   972  049D                     	;# 
   973  049E                     	;# 
   974  049F                     	;# 
   975  0511                     	;# 
   976  0515                     	;# 
   977  0617                     	;# 
   978  0618                     	;# 
   979  0619                     	;# 
   980  0619                     	;# 
   981  061A                     	;# 
   982  061B                     	;# 
   983  061C                     	;# 
   984  061C                     	;# 
   985  0691                     	;# 
   986  0692                     	;# 
   987  0693                     	;# 
   988  0694                     	;# 
   989  0695                     	;# 
   990  0696                     	;# 
   991  0697                     	;# 
   992  0698                     	;# 
   993  0699                     	;# 
   994  069A                     	;# 
   995  069B                     	;# 
   996  069C                     	;# 
   997  069D                     	;# 
   998  069E                     	;# 
   999  069F                     	;# 
  1000  0E0F                     	;# 
  1001  0E10                     	;# 
  1002  0E11                     	;# 
  1003  0E12                     	;# 
  1004  0E13                     	;# 
  1005  0E14                     	;# 
  1006  0E15                     	;# 
  1007  0E17                     	;# 
  1008  0E20                     	;# 
  1009  0E21                     	;# 
  1010  0E22                     	;# 
  1011  0E24                     	;# 
  1012  0E25                     	;# 
  1013  0E28                     	;# 
  1014  0E29                     	;# 
  1015  0E2A                     	;# 
  1016  0E2B                     	;# 
  1017  0E90                     	;# 
  1018  0E91                     	;# 
  1019  0E92                     	;# 
  1020  0E93                     	;# 
  1021  0E94                     	;# 
  1022  0E95                     	;# 
  1023  0E96                     	;# 
  1024  0E97                     	;# 
  1025  0E98                     	;# 
  1026  0E99                     	;# 
  1027  0E9A                     	;# 
  1028  0E9B                     	;# 
  1029  0E9C                     	;# 
  1030  0E9D                     	;# 
  1031  0E9E                     	;# 
  1032  0E9F                     	;# 
  1033  0EA0                     	;# 
  1034  0EA1                     	;# 
  1035  0EA2                     	;# 
  1036  0EA3                     	;# 
  1037  0EA4                     	;# 
  1038  0EA5                     	;# 
  1039  0EA6                     	;# 
  1040  0EA7                     	;# 
  1041  0EA8                     	;# 
  1042  0EA9                     	;# 
  1043  0EAA                     	;# 
  1044  0EAB                     	;# 
  1045  0EAC                     	;# 
  1046  0EAD                     	;# 
  1047  0EAE                     	;# 
  1048  0EAF                     	;# 
  1049  0EB0                     	;# 
  1050  0EB1                     	;# 
  1051  0EB2                     	;# 
  1052  0F0F                     	;# 
  1053  0F10                     	;# 
  1054  0F11                     	;# 
  1055  0F12                     	;# 
  1056  0F13                     	;# 
  1057  0F14                     	;# 
  1058  0F15                     	;# 
  1059  0F16                     	;# 
  1060  0F17                     	;# 
  1061  0F18                     	;# 
  1062  0F19                     	;# 
  1063  0F1A                     	;# 
  1064  0F1B                     	;# 
  1065  0F1C                     	;# 
  1066  0F1D                     	;# 
  1067  0F1E                     	;# 
  1068  0F1F                     	;# 
  1069  0F20                     	;# 
  1070  0F21                     	;# 
  1071  0F22                     	;# 
  1072  0F23                     	;# 
  1073  0F24                     	;# 
  1074  0F25                     	;# 
  1075  0F26                     	;# 
  1076  0F27                     	;# 
  1077  0F28                     	;# 
  1078  0F29                     	;# 
  1079  0F2A                     	;# 
  1080  0F2B                     	;# 
  1081  0F2C                     	;# 
  1082  0F2D                     	;# 
  1083  0F2E                     	;# 
  1084  0F2F                     	;# 
  1085  0F30                     	;# 
  1086  0F31                     	;# 
  1087  0F32                     	;# 
  1088  0F33                     	;# 
  1089  0F34                     	;# 
  1090  0F35                     	;# 
  1091  0F36                     	;# 
  1092  0F37                     	;# 
  1093  0FE4                     	;# 
  1094  0FE5                     	;# 
  1095  0FE6                     	;# 
  1096  0FE7                     	;# 
  1097  0FE8                     	;# 
  1098  0FE9                     	;# 
  1099  0FEA                     	;# 
  1100  0FEB                     	;# 
  1101  0FED                     	;# 
  1102  0FEE                     	;# 
  1103  0FEF                     	;# 
  1104  0000                     	;# 
  1105  0001                     	;# 
  1106  0002                     	;# 
  1107  0003                     	;# 
  1108  0004                     	;# 
  1109  0005                     	;# 
  1110  0006                     	;# 
  1111  0007                     	;# 
  1112  0008                     	;# 
  1113  0009                     	;# 
  1114  000A                     	;# 
  1115  000B                     	;# 
  1116  000C                     	;# 
  1117  000D                     	;# 
  1118  000E                     	;# 
  1119  000F                     	;# 
  1120  0010                     	;# 
  1121  0011                     	;# 
  1122  0012                     	;# 
  1123  0013                     	;# 
  1124  0015                     	;# 
  1125  0016                     	;# 
  1126  0016                     	;# 
  1127  0017                     	;# 
  1128  0018                     	;# 
  1129  0019                     	;# 
  1130  001A                     	;# 
  1131  001B                     	;# 
  1132  001C                     	;# 
  1133  008C                     	;# 
  1134  008D                     	;# 
  1135  008E                     	;# 
  1136  008F                     	;# 
  1137  0090                     	;# 
  1138  0091                     	;# 
  1139  0092                     	;# 
  1140  0093                     	;# 
  1141  0095                     	;# 
  1142  0096                     	;# 
  1143  0097                     	;# 
  1144  0098                     	;# 
  1145  0099                     	;# 
  1146  009A                     	;# 
  1147  009B                     	;# 
  1148  009B                     	;# 
  1149  009C                     	;# 
  1150  009D                     	;# 
  1151  009E                     	;# 
  1152  009F                     	;# 
  1153  010C                     	;# 
  1154  010D                     	;# 
  1155  010E                     	;# 
  1156  010F                     	;# 
  1157  0110                     	;# 
  1158  0111                     	;# 
  1159  0112                     	;# 
  1160  0113                     	;# 
  1161  0114                     	;# 
  1162  0115                     	;# 
  1163  0116                     	;# 
  1164  0117                     	;# 
  1165  0118                     	;# 
  1166  0119                     	;# 
  1167  011A                     	;# 
  1168  011B                     	;# 
  1169  011B                     	;# 
  1170  011C                     	;# 
  1171  018C                     	;# 
  1172  018D                     	;# 
  1173  018E                     	;# 
  1174  018F                     	;# 
  1175  0190                     	;# 
  1176  0191                     	;# 
  1177  0191                     	;# 
  1178  0192                     	;# 
  1179  0193                     	;# 
  1180  0193                     	;# 
  1181  0194                     	;# 
  1182  0195                     	;# 
  1183  0196                     	;# 
  1184  0197                     	;# 
  1185  0199                     	;# 
  1186  0199                     	;# 
  1187  0199                     	;# 
  1188  019A                     	;# 
  1189  019A                     	;# 
  1190  019A                     	;# 
  1191  019B                     	;# 
  1192  019B                     	;# 
  1193  019B                     	;# 
  1194  019B                     	;# 
  1195  019B                     	;# 
  1196  019C                     	;# 
  1197  019C                     	;# 
  1198  019C                     	;# 
  1199  019D                     	;# 
  1200  019D                     	;# 
  1201  019D                     	;# 
  1202  019E                     	;# 
  1203  019E                     	;# 
  1204  019E                     	;# 
  1205  019F                     	;# 
  1206  019F                     	;# 
  1207  019F                     	;# 
  1208  019F                     	;# 
  1209  019F                     	;# 
  1210  020C                     	;# 
  1211  020D                     	;# 
  1212  020E                     	;# 
  1213  020F                     	;# 
  1214  0210                     	;# 
  1215  0211                     	;# 
  1216  0211                     	;# 
  1217  0212                     	;# 
  1218  0212                     	;# 
  1219  0213                     	;# 
  1220  0213                     	;# 
  1221  0214                     	;# 
  1222  0214                     	;# 
  1223  0215                     	;# 
  1224  0215                     	;# 
  1225  0215                     	;# 
  1226  0215                     	;# 
  1227  0216                     	;# 
  1228  0216                     	;# 
  1229  0217                     	;# 
  1230  0217                     	;# 
  1231  028C                     	;# 
  1232  028D                     	;# 
  1233  028E                     	;# 
  1234  028F                     	;# 
  1235  0290                     	;# 
  1236  0291                     	;# 
  1237  0291                     	;# 
  1238  0292                     	;# 
  1239  0293                     	;# 
  1240  0293                     	;# 
  1241  0298                     	;# 
  1242  0298                     	;# 
  1243  0299                     	;# 
  1244  029A                     	;# 
  1245  029A                     	;# 
  1246  029E                     	;# 
  1247  030C                     	;# 
  1248  030D                     	;# 
  1249  030E                     	;# 
  1250  030F                     	;# 
  1251  0310                     	;# 
  1252  038C                     	;# 
  1253  038D                     	;# 
  1254  038E                     	;# 
  1255  038F                     	;# 
  1256  0390                     	;# 
  1257  0391                     	;# 
  1258  0392                     	;# 
  1259  0393                     	;# 
  1260  0394                     	;# 
  1261  0395                     	;# 
  1262  0396                     	;# 
  1263  0397                     	;# 
  1264  0398                     	;# 
  1265  0399                     	;# 
  1266  039D                     	;# 
  1267  039E                     	;# 
  1268  039F                     	;# 
  1269  0415                     	;# 
  1270  0416                     	;# 
  1271  0417                     	;# 
  1272  041C                     	;# 
  1273  041D                     	;# 
  1274  041E                     	;# 
  1275  0498                     	;# 
  1276  0498                     	;# 
  1277  0499                     	;# 
  1278  049A                     	;# 
  1279  049B                     	;# 
  1280  049B                     	;# 
  1281  049C                     	;# 
  1282  049D                     	;# 
  1283  049E                     	;# 
  1284  049F                     	;# 
  1285  0511                     	;# 
  1286  0515                     	;# 
  1287  0617                     	;# 
  1288  0618                     	;# 
  1289  0619                     	;# 
  1290  0619                     	;# 
  1291  061A                     	;# 
  1292  061B                     	;# 
  1293  061C                     	;# 
  1294  061C                     	;# 
  1295  0691                     	;# 
  1296  0692                     	;# 
  1297  0693                     	;# 
  1298  0694                     	;# 
  1299  0695                     	;# 
  1300  0696                     	;# 
  1301  0697                     	;# 
  1302  0698                     	;# 
  1303  0699                     	;# 
  1304  069A                     	;# 
  1305  069B                     	;# 
  1306  069C                     	;# 
  1307  069D                     	;# 
  1308  069E                     	;# 
  1309  069F                     	;# 
  1310  0E0F                     	;# 
  1311  0E10                     	;# 
  1312  0E11                     	;# 
  1313  0E12                     	;# 
  1314  0E13                     	;# 
  1315  0E14                     	;# 
  1316  0E15                     	;# 
  1317  0E17                     	;# 
  1318  0E20                     	;# 
  1319  0E21                     	;# 
  1320  0E22                     	;# 
  1321  0E24                     	;# 
  1322  0E25                     	;# 
  1323  0E28                     	;# 
  1324  0E29                     	;# 
  1325  0E2A                     	;# 
  1326  0E2B                     	;# 
  1327  0E90                     	;# 
  1328  0E91                     	;# 
  1329  0E92                     	;# 
  1330  0E93                     	;# 
  1331  0E94                     	;# 
  1332  0E95                     	;# 
  1333  0E96                     	;# 
  1334  0E97                     	;# 
  1335  0E98                     	;# 
  1336  0E99                     	;# 
  1337  0E9A                     	;# 
  1338  0E9B                     	;# 
  1339  0E9C                     	;# 
  1340  0E9D                     	;# 
  1341  0E9E                     	;# 
  1342  0E9F                     	;# 
  1343  0EA0                     	;# 
  1344  0EA1                     	;# 
  1345  0EA2                     	;# 
  1346  0EA3                     	;# 
  1347  0EA4                     	;# 
  1348  0EA5                     	;# 
  1349  0EA6                     	;# 
  1350  0EA7                     	;# 
  1351  0EA8                     	;# 
  1352  0EA9                     	;# 
  1353  0EAA                     	;# 
  1354  0EAB                     	;# 
  1355  0EAC                     	;# 
  1356  0EAD                     	;# 
  1357  0EAE                     	;# 
  1358  0EAF                     	;# 
  1359  0EB0                     	;# 
  1360  0EB1                     	;# 
  1361  0EB2                     	;# 
  1362  0F0F                     	;# 
  1363  0F10                     	;# 
  1364  0F11                     	;# 
  1365  0F12                     	;# 
  1366  0F13                     	;# 
  1367  0F14                     	;# 
  1368  0F15                     	;# 
  1369  0F16                     	;# 
  1370  0F17                     	;# 
  1371  0F18                     	;# 
  1372  0F19                     	;# 
  1373  0F1A                     	;# 
  1374  0F1B                     	;# 
  1375  0F1C                     	;# 
  1376  0F1D                     	;# 
  1377  0F1E                     	;# 
  1378  0F1F                     	;# 
  1379  0F20                     	;# 
  1380  0F21                     	;# 
  1381  0F22                     	;# 
  1382  0F23                     	;# 
  1383  0F24                     	;# 
  1384  0F25                     	;# 
  1385  0F26                     	;# 
  1386  0F27                     	;# 
  1387  0F28                     	;# 
  1388  0F29                     	;# 
  1389  0F2A                     	;# 
  1390  0F2B                     	;# 
  1391  0F2C                     	;# 
  1392  0F2D                     	;# 
  1393  0F2E                     	;# 
  1394  0F2F                     	;# 
  1395  0F30                     	;# 
  1396  0F31                     	;# 
  1397  0F32                     	;# 
  1398  0F33                     	;# 
  1399  0F34                     	;# 
  1400  0F35                     	;# 
  1401  0F36                     	;# 
  1402  0F37                     	;# 
  1403  0FE4                     	;# 
  1404  0FE5                     	;# 
  1405  0FE6                     	;# 
  1406  0FE7                     	;# 
  1407  0FE8                     	;# 
  1408  0FE9                     	;# 
  1409  0FEA                     	;# 
  1410  0FEB                     	;# 
  1411  0FED                     	;# 
  1412  0FEE                     	;# 
  1413  0FEF                     	;# 
  1414  0000                     	;# 
  1415  0001                     	;# 
  1416  0002                     	;# 
  1417  0003                     	;# 
  1418  0004                     	;# 
  1419  0005                     	;# 
  1420  0006                     	;# 
  1421  0007                     	;# 
  1422  0008                     	;# 
  1423  0009                     	;# 
  1424  000A                     	;# 
  1425  000B                     	;# 
  1426  000C                     	;# 
  1427  000D                     	;# 
  1428  000E                     	;# 
  1429  000F                     	;# 
  1430  0010                     	;# 
  1431  0011                     	;# 
  1432  0012                     	;# 
  1433  0013                     	;# 
  1434  0015                     	;# 
  1435  0016                     	;# 
  1436  0016                     	;# 
  1437  0017                     	;# 
  1438  0018                     	;# 
  1439  0019                     	;# 
  1440  001A                     	;# 
  1441  001B                     	;# 
  1442  001C                     	;# 
  1443  008C                     	;# 
  1444  008D                     	;# 
  1445  008E                     	;# 
  1446  008F                     	;# 
  1447  0090                     	;# 
  1448  0091                     	;# 
  1449  0092                     	;# 
  1450  0093                     	;# 
  1451  0095                     	;# 
  1452  0096                     	;# 
  1453  0097                     	;# 
  1454  0098                     	;# 
  1455  0099                     	;# 
  1456  009A                     	;# 
  1457  009B                     	;# 
  1458  009B                     	;# 
  1459  009C                     	;# 
  1460  009D                     	;# 
  1461  009E                     	;# 
  1462  009F                     	;# 
  1463  010C                     	;# 
  1464  010D                     	;# 
  1465  010E                     	;# 
  1466  010F                     	;# 
  1467  0110                     	;# 
  1468  0111                     	;# 
  1469  0112                     	;# 
  1470  0113                     	;# 
  1471  0114                     	;# 
  1472  0115                     	;# 
  1473  0116                     	;# 
  1474  0117                     	;# 
  1475  0118                     	;# 
  1476  0119                     	;# 
  1477  011A                     	;# 
  1478  011B                     	;# 
  1479  011B                     	;# 
  1480  011C                     	;# 
  1481  018C                     	;# 
  1482  018D                     	;# 
  1483  018E                     	;# 
  1484  018F                     	;# 
  1485  0190                     	;# 
  1486  0191                     	;# 
  1487  0191                     	;# 
  1488  0192                     	;# 
  1489  0193                     	;# 
  1490  0193                     	;# 
  1491  0194                     	;# 
  1492  0195                     	;# 
  1493  0196                     	;# 
  1494  0197                     	;# 
  1495  0199                     	;# 
  1496  0199                     	;# 
  1497  0199                     	;# 
  1498  019A                     	;# 
  1499  019A                     	;# 
  1500  019A                     	;# 
  1501  019B                     	;# 
  1502  019B                     	;# 
  1503  019B                     	;# 
  1504  019B                     	;# 
  1505  019B                     	;# 
  1506  019C                     	;# 
  1507  019C                     	;# 
  1508  019C                     	;# 
  1509  019D                     	;# 
  1510  019D                     	;# 
  1511  019D                     	;# 
  1512  019E                     	;# 
  1513  019E                     	;# 
  1514  019E                     	;# 
  1515  019F                     	;# 
  1516  019F                     	;# 
  1517  019F                     	;# 
  1518  019F                     	;# 
  1519  019F                     	;# 
  1520  020C                     	;# 
  1521  020D                     	;# 
  1522  020E                     	;# 
  1523  020F                     	;# 
  1524  0210                     	;# 
  1525  0211                     	;# 
  1526  0211                     	;# 
  1527  0212                     	;# 
  1528  0212                     	;# 
  1529  0213                     	;# 
  1530  0213                     	;# 
  1531  0214                     	;# 
  1532  0214                     	;# 
  1533  0215                     	;# 
  1534  0215                     	;# 
  1535  0215                     	;# 
  1536  0215                     	;# 
  1537  0216                     	;# 
  1538  0216                     	;# 
  1539  0217                     	;# 
  1540  0217                     	;# 
  1541  028C                     	;# 
  1542  028D                     	;# 
  1543  028E                     	;# 
  1544  028F                     	;# 
  1545  0290                     	;# 
  1546  0291                     	;# 
  1547  0291                     	;# 
  1548  0292                     	;# 
  1549  0293                     	;# 
  1550  0293                     	;# 
  1551  0298                     	;# 
  1552  0298                     	;# 
  1553  0299                     	;# 
  1554  029A                     	;# 
  1555  029A                     	;# 
  1556  029E                     	;# 
  1557  030C                     	;# 
  1558  030D                     	;# 
  1559  030E                     	;# 
  1560  030F                     	;# 
  1561  0310                     	;# 
  1562  038C                     	;# 
  1563  038D                     	;# 
  1564  038E                     	;# 
  1565  038F                     	;# 
  1566  0390                     	;# 
  1567  0391                     	;# 
  1568  0392                     	;# 
  1569  0393                     	;# 
  1570  0394                     	;# 
  1571  0395                     	;# 
  1572  0396                     	;# 
  1573  0397                     	;# 
  1574  0398                     	;# 
  1575  0399                     	;# 
  1576  039D                     	;# 
  1577  039E                     	;# 
  1578  039F                     	;# 
  1579  0415                     	;# 
  1580  0416                     	;# 
  1581  0417                     	;# 
  1582  041C                     	;# 
  1583  041D                     	;# 
  1584  041E                     	;# 
  1585  0498                     	;# 
  1586  0498                     	;# 
  1587  0499                     	;# 
  1588  049A                     	;# 
  1589  049B                     	;# 
  1590  049B                     	;# 
  1591  049C                     	;# 
  1592  049D                     	;# 
  1593  049E                     	;# 
  1594  049F                     	;# 
  1595  0511                     	;# 
  1596  0515                     	;# 
  1597  0617                     	;# 
  1598  0618                     	;# 
  1599  0619                     	;# 
  1600  0619                     	;# 
  1601  061A                     	;# 
  1602  061B                     	;# 
  1603  061C                     	;# 
  1604  061C                     	;# 
  1605  0691                     	;# 
  1606  0692                     	;# 
  1607  0693                     	;# 
  1608  0694                     	;# 
  1609  0695                     	;# 
  1610  0696                     	;# 
  1611  0697                     	;# 
  1612  0698                     	;# 
  1613  0699                     	;# 
  1614  069A                     	;# 
  1615  069B                     	;# 
  1616  069C                     	;# 
  1617  069D                     	;# 
  1618  069E                     	;# 
  1619  069F                     	;# 
  1620  0E0F                     	;# 
  1621  0E10                     	;# 
  1622  0E11                     	;# 
  1623  0E12                     	;# 
  1624  0E13                     	;# 
  1625  0E14                     	;# 
  1626  0E15                     	;# 
  1627  0E17                     	;# 
  1628  0E20                     	;# 
  1629  0E21                     	;# 
  1630  0E22                     	;# 
  1631  0E24                     	;# 
  1632  0E25                     	;# 
  1633  0E28                     	;# 
  1634  0E29                     	;# 
  1635  0E2A                     	;# 
  1636  0E2B                     	;# 
  1637  0E90                     	;# 
  1638  0E91                     	;# 
  1639  0E92                     	;# 
  1640  0E93                     	;# 
  1641  0E94                     	;# 
  1642  0E95                     	;# 
  1643  0E96                     	;# 
  1644  0E97                     	;# 
  1645  0E98                     	;# 
  1646  0E99                     	;# 
  1647  0E9A                     	;# 
  1648  0E9B                     	;# 
  1649  0E9C                     	;# 
  1650  0E9D                     	;# 
  1651  0E9E                     	;# 
  1652  0E9F                     	;# 
  1653  0EA0                     	;# 
  1654  0EA1                     	;# 
  1655  0EA2                     	;# 
  1656  0EA3                     	;# 
  1657  0EA4                     	;# 
  1658  0EA5                     	;# 
  1659  0EA6                     	;# 
  1660  0EA7                     	;# 
  1661  0EA8                     	;# 
  1662  0EA9                     	;# 
  1663  0EAA                     	;# 
  1664  0EAB                     	;# 
  1665  0EAC                     	;# 
  1666  0EAD                     	;# 
  1667  0EAE                     	;# 
  1668  0EAF                     	;# 
  1669  0EB0                     	;# 
  1670  0EB1                     	;# 
  1671  0EB2                     	;# 
  1672  0F0F                     	;# 
  1673  0F10                     	;# 
  1674  0F11                     	;# 
  1675  0F12                     	;# 
  1676  0F13                     	;# 
  1677  0F14                     	;# 
  1678  0F15                     	;# 
  1679  0F16                     	;# 
  1680  0F17                     	;# 
  1681  0F18                     	;# 
  1682  0F19                     	;# 
  1683  0F1A                     	;# 
  1684  0F1B                     	;# 
  1685  0F1C                     	;# 
  1686  0F1D                     	;# 
  1687  0F1E                     	;# 
  1688  0F1F                     	;# 
  1689  0F20                     	;# 
  1690  0F21                     	;# 
  1691  0F22                     	;# 
  1692  0F23                     	;# 
  1693  0F24                     	;# 
  1694  0F25                     	;# 
  1695  0F26                     	;# 
  1696  0F27                     	;# 
  1697  0F28                     	;# 
  1698  0F29                     	;# 
  1699  0F2A                     	;# 
  1700  0F2B                     	;# 
  1701  0F2C                     	;# 
  1702  0F2D                     	;# 
  1703  0F2E                     	;# 
  1704  0F2F                     	;# 
  1705  0F30                     	;# 
  1706  0F31                     	;# 
  1707  0F32                     	;# 
  1708  0F33                     	;# 
  1709  0F34                     	;# 
  1710  0F35                     	;# 
  1711  0F36                     	;# 
  1712  0F37                     	;# 
  1713  0FE4                     	;# 
  1714  0FE5                     	;# 
  1715  0FE6                     	;# 
  1716  0FE7                     	;# 
  1717  0FE8                     	;# 
  1718  0FE9                     	;# 
  1719  0FEA                     	;# 
  1720  0FEB                     	;# 
  1721  0FED                     	;# 
  1722  0FEE                     	;# 
  1723  0FEF                     	;# 
  1724  0000                     	;# 
  1725  0001                     	;# 
  1726  0002                     	;# 
  1727  0003                     	;# 
  1728  0004                     	;# 
  1729  0005                     	;# 
  1730  0006                     	;# 
  1731  0007                     	;# 
  1732  0008                     	;# 
  1733  0009                     	;# 
  1734  000A                     	;# 
  1735  000B                     	;# 
  1736  000C                     	;# 
  1737  000D                     	;# 
  1738  000E                     	;# 
  1739  000F                     	;# 
  1740  0010                     	;# 
  1741  0011                     	;# 
  1742  0012                     	;# 
  1743  0013                     	;# 
  1744  0015                     	;# 
  1745  0016                     	;# 
  1746  0016                     	;# 
  1747  0017                     	;# 
  1748  0018                     	;# 
  1749  0019                     	;# 
  1750  001A                     	;# 
  1751  001B                     	;# 
  1752  001C                     	;# 
  1753  008C                     	;# 
  1754  008D                     	;# 
  1755  008E                     	;# 
  1756  008F                     	;# 
  1757  0090                     	;# 
  1758  0091                     	;# 
  1759  0092                     	;# 
  1760  0093                     	;# 
  1761  0095                     	;# 
  1762  0096                     	;# 
  1763  0097                     	;# 
  1764  0098                     	;# 
  1765  0099                     	;# 
  1766  009A                     	;# 
  1767  009B                     	;# 
  1768  009B                     	;# 
  1769  009C                     	;# 
  1770  009D                     	;# 
  1771  009E                     	;# 
  1772  009F                     	;# 
  1773  010C                     	;# 
  1774  010D                     	;# 
  1775  010E                     	;# 
  1776  010F                     	;# 
  1777  0110                     	;# 
  1778  0111                     	;# 
  1779  0112                     	;# 
  1780  0113                     	;# 
  1781  0114                     	;# 
  1782  0115                     	;# 
  1783  0116                     	;# 
  1784  0117                     	;# 
  1785  0118                     	;# 
  1786  0119                     	;# 
  1787  011A                     	;# 
  1788  011B                     	;# 
  1789  011B                     	;# 
  1790  011C                     	;# 
  1791  018C                     	;# 
  1792  018D                     	;# 
  1793  018E                     	;# 
  1794  018F                     	;# 
  1795  0190                     	;# 
  1796  0191                     	;# 
  1797  0191                     	;# 
  1798  0192                     	;# 
  1799  0193                     	;# 
  1800  0193                     	;# 
  1801  0194                     	;# 
  1802  0195                     	;# 
  1803  0196                     	;# 
  1804  0197                     	;# 
  1805  0199                     	;# 
  1806  0199                     	;# 
  1807  0199                     	;# 
  1808  019A                     	;# 
  1809  019A                     	;# 
  1810  019A                     	;# 
  1811  019B                     	;# 
  1812  019B                     	;# 
  1813  019B                     	;# 
  1814  019B                     	;# 
  1815  019B                     	;# 
  1816  019C                     	;# 
  1817  019C                     	;# 
  1818  019C                     	;# 
  1819  019D                     	;# 
  1820  019D                     	;# 
  1821  019D                     	;# 
  1822  019E                     	;# 
  1823  019E                     	;# 
  1824  019E                     	;# 
  1825  019F                     	;# 
  1826  019F                     	;# 
  1827  019F                     	;# 
  1828  019F                     	;# 
  1829  019F                     	;# 
  1830  020C                     	;# 
  1831  020D                     	;# 
  1832  020E                     	;# 
  1833  020F                     	;# 
  1834  0210                     	;# 
  1835  0211                     	;# 
  1836  0211                     	;# 
  1837  0212                     	;# 
  1838  0212                     	;# 
  1839  0213                     	;# 
  1840  0213                     	;# 
  1841  0214                     	;# 
  1842  0214                     	;# 
  1843  0215                     	;# 
  1844  0215                     	;# 
  1845  0215                     	;# 
  1846  0215                     	;# 
  1847  0216                     	;# 
  1848  0216                     	;# 
  1849  0217                     	;# 
  1850  0217                     	;# 
  1851  028C                     	;# 
  1852  028D                     	;# 
  1853  028E                     	;# 
  1854  028F                     	;# 
  1855  0290                     	;# 
  1856  0291                     	;# 
  1857  0291                     	;# 
  1858  0292                     	;# 
  1859  0293                     	;# 
  1860  0293                     	;# 
  1861  0298                     	;# 
  1862  0298                     	;# 
  1863  0299                     	;# 
  1864  029A                     	;# 
  1865  029A                     	;# 
  1866  029E                     	;# 
  1867  030C                     	;# 
  1868  030D                     	;# 
  1869  030E                     	;# 
  1870  030F                     	;# 
  1871  0310                     	;# 
  1872  038C                     	;# 
  1873  038D                     	;# 
  1874  038E                     	;# 
  1875  038F                     	;# 
  1876  0390                     	;# 
  1877  0391                     	;# 
  1878  0392                     	;# 
  1879  0393                     	;# 
  1880  0394                     	;# 
  1881  0395                     	;# 
  1882  0396                     	;# 
  1883  0397                     	;# 
  1884  0398                     	;# 
  1885  0399                     	;# 
  1886  039D                     	;# 
  1887  039E                     	;# 
  1888  039F                     	;# 
  1889  0415                     	;# 
  1890  0416                     	;# 
  1891  0417                     	;# 
  1892  041C                     	;# 
  1893  041D                     	;# 
  1894  041E                     	;# 
  1895  0498                     	;# 
  1896  0498                     	;# 
  1897  0499                     	;# 
  1898  049A                     	;# 
  1899  049B                     	;# 
  1900  049B                     	;# 
  1901  049C                     	;# 
  1902  049D                     	;# 
  1903  049E                     	;# 
  1904  049F                     	;# 
  1905  0511                     	;# 
  1906  0515                     	;# 
  1907  0617                     	;# 
  1908  0618                     	;# 
  1909  0619                     	;# 
  1910  0619                     	;# 
  1911  061A                     	;# 
  1912  061B                     	;# 
  1913  061C                     	;# 
  1914  061C                     	;# 
  1915  0691                     	;# 
  1916  0692                     	;# 
  1917  0693                     	;# 
  1918  0694                     	;# 
  1919  0695                     	;# 
  1920  0696                     	;# 
  1921  0697                     	;# 
  1922  0698                     	;# 
  1923  0699                     	;# 
  1924  069A                     	;# 
  1925  069B                     	;# 
  1926  069C                     	;# 
  1927  069D                     	;# 
  1928  069E                     	;# 
  1929  069F                     	;# 
  1930  0E0F                     	;# 
  1931  0E10                     	;# 
  1932  0E11                     	;# 
  1933  0E12                     	;# 
  1934  0E13                     	;# 
  1935  0E14                     	;# 
  1936  0E15                     	;# 
  1937  0E17                     	;# 
  1938  0E20                     	;# 
  1939  0E21                     	;# 
  1940  0E22                     	;# 
  1941  0E24                     	;# 
  1942  0E25                     	;# 
  1943  0E28                     	;# 
  1944  0E29                     	;# 
  1945  0E2A                     	;# 
  1946  0E2B                     	;# 
  1947  0E90                     	;# 
  1948  0E91                     	;# 
  1949  0E92                     	;# 
  1950  0E93                     	;# 
  1951  0E94                     	;# 
  1952  0E95                     	;# 
  1953  0E96                     	;# 
  1954  0E97                     	;# 
  1955  0E98                     	;# 
  1956  0E99                     	;# 
  1957  0E9A                     	;# 
  1958  0E9B                     	;# 
  1959  0E9C                     	;# 
  1960  0E9D                     	;# 
  1961  0E9E                     	;# 
  1962  0E9F                     	;# 
  1963  0EA0                     	;# 
  1964  0EA1                     	;# 
  1965  0EA2                     	;# 
  1966  0EA3                     	;# 
  1967  0EA4                     	;# 
  1968  0EA5                     	;# 
  1969  0EA6                     	;# 
  1970  0EA7                     	;# 
  1971  0EA8                     	;# 
  1972  0EA9                     	;# 
  1973  0EAA                     	;# 
  1974  0EAB                     	;# 
  1975  0EAC                     	;# 
  1976  0EAD                     	;# 
  1977  0EAE                     	;# 
  1978  0EAF                     	;# 
  1979  0EB0                     	;# 
  1980  0EB1                     	;# 
  1981  0EB2                     	;# 
  1982  0F0F                     	;# 
  1983  0F10                     	;# 
  1984  0F11                     	;# 
  1985  0F12                     	;# 
  1986  0F13                     	;# 
  1987  0F14                     	;# 
  1988  0F15                     	;# 
  1989  0F16                     	;# 
  1990  0F17                     	;# 
  1991  0F18                     	;# 
  1992  0F19                     	;# 
  1993  0F1A                     	;# 
  1994  0F1B                     	;# 
  1995  0F1C                     	;# 
  1996  0F1D                     	;# 
  1997  0F1E                     	;# 
  1998  0F1F                     	;# 
  1999  0F20                     	;# 
  2000  0F21                     	;# 
  2001  0F22                     	;# 
  2002  0F23                     	;# 
  2003  0F24                     	;# 
  2004  0F25                     	;# 
  2005  0F26                     	;# 
  2006  0F27                     	;# 
  2007  0F28                     	;# 
  2008  0F29                     	;# 
  2009  0F2A                     	;# 
  2010  0F2B                     	;# 
  2011  0F2C                     	;# 
  2012  0F2D                     	;# 
  2013  0F2E                     	;# 
  2014  0F2F                     	;# 
  2015  0F30                     	;# 
  2016  0F31                     	;# 
  2017  0F32                     	;# 
  2018  0F33                     	;# 
  2019  0F34                     	;# 
  2020  0F35                     	;# 
  2021  0F36                     	;# 
  2022  0F37                     	;# 
  2023  0FE4                     	;# 
  2024  0FE5                     	;# 
  2025  0FE6                     	;# 
  2026  0FE7                     	;# 
  2027  0FE8                     	;# 
  2028  0FE9                     	;# 
  2029  0FEA                     	;# 
  2030  0FEB                     	;# 
  2031  0FED                     	;# 
  2032  0FEE                     	;# 
  2033  0FEF                     	;# 
  2034  0000                     	;# 
  2035  0001                     	;# 
  2036  0002                     	;# 
  2037  0003                     	;# 
  2038  0004                     	;# 
  2039  0005                     	;# 
  2040  0006                     	;# 
  2041  0007                     	;# 
  2042  0008                     	;# 
  2043  0009                     	;# 
  2044  000A                     	;# 
  2045  000B                     	;# 
  2046  000C                     	;# 
  2047  000D                     	;# 
  2048  000E                     	;# 
  2049  000F                     	;# 
  2050  0010                     	;# 
  2051  0011                     	;# 
  2052  0012                     	;# 
  2053  0013                     	;# 
  2054  0015                     	;# 
  2055  0016                     	;# 
  2056  0016                     	;# 
  2057  0017                     	;# 
  2058  0018                     	;# 
  2059  0019                     	;# 
  2060  001A                     	;# 
  2061  001B                     	;# 
  2062  001C                     	;# 
  2063  008C                     	;# 
  2064  008D                     	;# 
  2065  008E                     	;# 
  2066  008F                     	;# 
  2067  0090                     	;# 
  2068  0091                     	;# 
  2069  0092                     	;# 
  2070  0093                     	;# 
  2071  0095                     	;# 
  2072  0096                     	;# 
  2073  0097                     	;# 
  2074  0098                     	;# 
  2075  0099                     	;# 
  2076  009A                     	;# 
  2077  009B                     	;# 
  2078  009B                     	;# 
  2079  009C                     	;# 
  2080  009D                     	;# 
  2081  009E                     	;# 
  2082  009F                     	;# 
  2083  010C                     	;# 
  2084  010D                     	;# 
  2085  010E                     	;# 
  2086  010F                     	;# 
  2087  0110                     	;# 
  2088  0111                     	;# 
  2089  0112                     	;# 
  2090  0113                     	;# 
  2091  0114                     	;# 
  2092  0115                     	;# 
  2093  0116                     	;# 
  2094  0117                     	;# 
  2095  0118                     	;# 
  2096  0119                     	;# 
  2097  011A                     	;# 
  2098  011B                     	;# 
  2099  011B                     	;# 
  2100  011C                     	;# 
  2101  018C                     	;# 
  2102  018D                     	;# 
  2103  018E                     	;# 
  2104  018F                     	;# 
  2105  0190                     	;# 
  2106  0191                     	;# 
  2107  0191                     	;# 
  2108  0192                     	;# 
  2109  0193                     	;# 
  2110  0193                     	;# 
  2111  0194                     	;# 
  2112  0195                     	;# 
  2113  0196                     	;# 
  2114  0197                     	;# 
  2115  0199                     	;# 
  2116  0199                     	;# 
  2117  0199                     	;# 
  2118  019A                     	;# 
  2119  019A                     	;# 
  2120  019A                     	;# 
  2121  019B                     	;# 
  2122  019B                     	;# 
  2123  019B                     	;# 
  2124  019B                     	;# 
  2125  019B                     	;# 
  2126  019C                     	;# 
  2127  019C                     	;# 
  2128  019C                     	;# 
  2129  019D                     	;# 
  2130  019D                     	;# 
  2131  019D                     	;# 
  2132  019E                     	;# 
  2133  019E                     	;# 
  2134  019E                     	;# 
  2135  019F                     	;# 
  2136  019F                     	;# 
  2137  019F                     	;# 
  2138  019F                     	;# 
  2139  019F                     	;# 
  2140  020C                     	;# 
  2141  020D                     	;# 
  2142  020E                     	;# 
  2143  020F                     	;# 
  2144  0210                     	;# 
  2145  0211                     	;# 
  2146  0211                     	;# 
  2147  0212                     	;# 
  2148  0212                     	;# 
  2149  0213                     	;# 
  2150  0213                     	;# 
  2151  0214                     	;# 
  2152  0214                     	;# 
  2153  0215                     	;# 
  2154  0215                     	;# 
  2155  0215                     	;# 
  2156  0215                     	;# 
  2157  0216                     	;# 
  2158  0216                     	;# 
  2159  0217                     	;# 
  2160  0217                     	;# 
  2161  028C                     	;# 
  2162  028D                     	;# 
  2163  028E                     	;# 
  2164  028F                     	;# 
  2165  0290                     	;# 
  2166  0291                     	;# 
  2167  0291                     	;# 
  2168  0292                     	;# 
  2169  0293                     	;# 
  2170  0293                     	;# 
  2171  0298                     	;# 
  2172  0298                     	;# 
  2173  0299                     	;# 
  2174  029A                     	;# 
  2175  029A                     	;# 
  2176  029E                     	;# 
  2177  030C                     	;# 
  2178  030D                     	;# 
  2179  030E                     	;# 
  2180  030F                     	;# 
  2181  0310                     	;# 
  2182  038C                     	;# 
  2183  038D                     	;# 
  2184  038E                     	;# 
  2185  038F                     	;# 
  2186  0390                     	;# 
  2187  0391                     	;# 
  2188  0392                     	;# 
  2189  0393                     	;# 
  2190  0394                     	;# 
  2191  0395                     	;# 
  2192  0396                     	;# 
  2193  0397                     	;# 
  2194  0398                     	;# 
  2195  0399                     	;# 
  2196  039D                     	;# 
  2197  039E                     	;# 
  2198  039F                     	;# 
  2199  0415                     	;# 
  2200  0416                     	;# 
  2201  0417                     	;# 
  2202  041C                     	;# 
  2203  041D                     	;# 
  2204  041E                     	;# 
  2205  0498                     	;# 
  2206  0498                     	;# 
  2207  0499                     	;# 
  2208  049A                     	;# 
  2209  049B                     	;# 
  2210  049B                     	;# 
  2211  049C                     	;# 
  2212  049D                     	;# 
  2213  049E                     	;# 
  2214  049F                     	;# 
  2215  0511                     	;# 
  2216  0515                     	;# 
  2217  0617                     	;# 
  2218  0618                     	;# 
  2219  0619                     	;# 
  2220  0619                     	;# 
  2221  061A                     	;# 
  2222  061B                     	;# 
  2223  061C                     	;# 
  2224  061C                     	;# 
  2225  0691                     	;# 
  2226  0692                     	;# 
  2227  0693                     	;# 
  2228  0694                     	;# 
  2229  0695                     	;# 
  2230  0696                     	;# 
  2231  0697                     	;# 
  2232  0698                     	;# 
  2233  0699                     	;# 
  2234  069A                     	;# 
  2235  069B                     	;# 
  2236  069C                     	;# 
  2237  069D                     	;# 
  2238  069E                     	;# 
  2239  069F                     	;# 
  2240  0E0F                     	;# 
  2241  0E10                     	;# 
  2242  0E11                     	;# 
  2243  0E12                     	;# 
  2244  0E13                     	;# 
  2245  0E14                     	;# 
  2246  0E15                     	;# 
  2247  0E17                     	;# 
  2248  0E20                     	;# 
  2249  0E21                     	;# 
  2250  0E22                     	;# 
  2251  0E24                     	;# 
  2252  0E25                     	;# 
  2253  0E28                     	;# 
  2254  0E29                     	;# 
  2255  0E2A                     	;# 
  2256  0E2B                     	;# 
  2257  0E90                     	;# 
  2258  0E91                     	;# 
  2259  0E92                     	;# 
  2260  0E93                     	;# 
  2261  0E94                     	;# 
  2262  0E95                     	;# 
  2263  0E96                     	;# 
  2264  0E97                     	;# 
  2265  0E98                     	;# 
  2266  0E99                     	;# 
  2267  0E9A                     	;# 
  2268  0E9B                     	;# 
  2269  0E9C                     	;# 
  2270  0E9D                     	;# 
  2271  0E9E                     	;# 
  2272  0E9F                     	;# 
  2273  0EA0                     	;# 
  2274  0EA1                     	;# 
  2275  0EA2                     	;# 
  2276  0EA3                     	;# 
  2277  0EA4                     	;# 
  2278  0EA5                     	;# 
  2279  0EA6                     	;# 
  2280  0EA7                     	;# 
  2281  0EA8                     	;# 
  2282  0EA9                     	;# 
  2283  0EAA                     	;# 
  2284  0EAB                     	;# 
  2285  0EAC                     	;# 
  2286  0EAD                     	;# 
  2287  0EAE                     	;# 
  2288  0EAF                     	;# 
  2289  0EB0                     	;# 
  2290  0EB1                     	;# 
  2291  0EB2                     	;# 
  2292  0F0F                     	;# 
  2293  0F10                     	;# 
  2294  0F11                     	;# 
  2295  0F12                     	;# 
  2296  0F13                     	;# 
  2297  0F14                     	;# 
  2298  0F15                     	;# 
  2299  0F16                     	;# 
  2300  0F17                     	;# 
  2301  0F18                     	;# 
  2302  0F19                     	;# 
  2303  0F1A                     	;# 
  2304  0F1B                     	;# 
  2305  0F1C                     	;# 
  2306  0F1D                     	;# 
  2307  0F1E                     	;# 
  2308  0F1F                     	;# 
  2309  0F20                     	;# 
  2310  0F21                     	;# 
  2311  0F22                     	;# 
  2312  0F23                     	;# 
  2313  0F24                     	;# 
  2314  0F25                     	;# 
  2315  0F26                     	;# 
  2316  0F27                     	;# 
  2317  0F28                     	;# 
  2318  0F29                     	;# 
  2319  0F2A                     	;# 
  2320  0F2B                     	;# 
  2321  0F2C                     	;# 
  2322  0F2D                     	;# 
  2323  0F2E                     	;# 
  2324  0F2F                     	;# 
  2325  0F30                     	;# 
  2326  0F31                     	;# 
  2327  0F32                     	;# 
  2328  0F33                     	;# 
  2329  0F34                     	;# 
  2330  0F35                     	;# 
  2331  0F36                     	;# 
  2332  0F37                     	;# 
  2333  0FE4                     	;# 
  2334  0FE5                     	;# 
  2335  0FE6                     	;# 
  2336  0FE7                     	;# 
  2337  0FE8                     	;# 
  2338  0FE9                     	;# 
  2339  0FEA                     	;# 
  2340  0FEB                     	;# 
  2341  0FED                     	;# 
  2342  0FEE                     	;# 
  2343  0FEF                     	;_messageBuffer
  2344                           
  2345                           	psect	idataBANK2
  2346  07F7                     __pidataBANK2:	
  2347                           
  2348                           ;initializer for stoa@F1152
  2349  07F7  3428               	retlw	40
  2350  07F8  346E               	retlw	110
  2351  07F9  3475               	retlw	117
  2352  07FA  346C               	retlw	108
  2353  07FB  346C               	retlw	108
  2354  07FC  3429               	retlw	41
  2355  07FD  3400               	retlw	0
  2356                           
  2357                           ;initializer for _thermistorBetaValue
  2358  07FE  346B               	retlw	107
  2359  07FF  340D               	retlw	13
  2360                           
  2361                           	psect	stringtext1
  2362  3000                     __pstringtext1:	
  2363  3000                     _OCD_threshold_setting:	
  2364  3000  3411               	retlw	17
  2365  3001  3400               	retlw	0
  2366  3002  3416               	retlw	22
  2367  3003  3400               	retlw	0
  2368  3004  341C               	retlw	28
  2369  3005  3400               	retlw	0
  2370  3006  3421               	retlw	33
  2371  3007  3400               	retlw	0
  2372  3008  3427               	retlw	39
  2373  3009  3400               	retlw	0
  2374  300A  342C               	retlw	44
  2375  300B  3400               	retlw	0
  2376  300C  3432               	retlw	50
  2377  300D  3400               	retlw	0
  2378  300E  3438               	retlw	56
  2379  300F  3400               	retlw	0
  2380  3010  343D               	retlw	61
  2381  3011  3400               	retlw	0
  2382  3012  3443               	retlw	67
  2383  3013  3400               	retlw	0
  2384  3014  3448               	retlw	72
  2385  3015  3400               	retlw	0
  2386  3016  344E               	retlw	78
  2387  3017  3400               	retlw	0
  2388  3018  3453               	retlw	83
  2389  3019  3400               	retlw	0
  2390  301A  3459               	retlw	89
  2391  301B  3400               	retlw	0
  2392  301C  345E               	retlw	94
  2393  301D  3400               	retlw	0
  2394  301E  3464               	retlw	100
  2395  301F  3400               	retlw	0
  2396  3020                     __end_of_OCD_threshold_setting:	
  2397                           
  2398                           	psect	stringtext2
  2399  3114                     __pstringtext2:	
  2400  3114                     _OCD_delay_setting:	
  2401  3114  3408               	retlw	8
  2402  3115  3400               	retlw	0
  2403  3116  3414               	retlw	20
  2404  3117  3400               	retlw	0
  2405  3118  3428               	retlw	40
  2406  3119  3400               	retlw	0
  2407  311A  3450               	retlw	80
  2408  311B  3400               	retlw	0
  2409  311C  34A0               	retlw	160
  2410  311D  3400               	retlw	0
  2411  311E  3440               	retlw	64
  2412  311F  3401               	retlw	1
  2413  3120  3480               	retlw	128
  2414  3121  3402               	retlw	2
  2415  3122  3400               	retlw	0
  2416  3123  3405               	retlw	5
  2417  3124                     __end_of_OCD_delay_setting:	
  2418                           
  2419                           	psect	stringtext3
  2420  3124                     __pstringtext3:	
  2421  3124                     _SCD_threshold_setting:	
  2422  3124  342C               	retlw	44
  2423  3125  3400               	retlw	0
  2424  3126  3443               	retlw	67
  2425  3127  3400               	retlw	0
  2426  3128  3459               	retlw	89
  2427  3129  3400               	retlw	0
  2428  312A  346F               	retlw	111
  2429  312B  3400               	retlw	0
  2430  312C  3485               	retlw	133
  2431  312D  3400               	retlw	0
  2432  312E  349B               	retlw	155
  2433  312F  3400               	retlw	0
  2434  3130  34B2               	retlw	178
  2435  3131  3400               	retlw	0
  2436  3132  34C8               	retlw	200
  2437  3133  3400               	retlw	0
  2438  3134                     __end_of_SCD_threshold_setting:	
  2439                           
  2440                           	psect	stringtext4
  2441  3134                     __pstringtext4:	
  2442  3134                     _OV_delay_setting:	
  2443  3134  3401               	retlw	1
  2444  3135  3400               	retlw	0
  2445  3136  3402               	retlw	2
  2446  3137  3400               	retlw	0
  2447  3138  3404               	retlw	4
  2448  3139  3400               	retlw	0
  2449  313A  3408               	retlw	8
  2450  313B  3400               	retlw	0
  2451  313C                     __end_of_OV_delay_setting:	
  2452                           
  2453                           	psect	stringtext5
  2454  313C                     __pstringtext5:	
  2455  313C                     _UV_delay_setting:	
  2456  313C  3401               	retlw	1
  2457  313D  3400               	retlw	0
  2458  313E  3404               	retlw	4
  2459  313F  3400               	retlw	0
  2460  3140  3408               	retlw	8
  2461  3141  3400               	retlw	0
  2462  3142  3410               	retlw	16
  2463  3143  3400               	retlw	0
  2464  3144                     __end_of_UV_delay_setting:	
  2465                           
  2466                           	psect	stringtext6
  2467  3144                     __pstringtext6:	
  2468  3144                     _SCD_delay_setting:	
  2469  3144  3446               	retlw	70
  2470  3145  3400               	retlw	0
  2471  3146  3464               	retlw	100
  2472  3147  3400               	retlw	0
  2473  3148  34C8               	retlw	200
  2474  3149  3400               	retlw	0
  2475  314A  3490               	retlw	144
  2476  314B  3401               	retlw	1
  2477  314C                     __end_of_SCD_delay_setting:	
  2478                           
  2479                           	psect	stringtext7
  2480  314C                     __pstringtext7:	
  2481  314C                     _Lg4:	
  2482  314C  3426               	retlw	38
  2483  314D  349E               	retlw	158
  2484  314E  3478               	retlw	120
  2485  314F  343E               	retlw	62
  2486  3150                     __end_of_Lg4:	
  2487                           
  2488                           	psect	stringtext8
  2489  3150                     __pstringtext8:	
  2490  3150                     _Lg3:	
  2491  3150  34EE               	retlw	238
  2492  3151  34E9               	retlw	233
  2493  3152  3491               	retlw	145
  2494  3153  343E               	retlw	62
  2495  3154                     __end_of_Lg3:	
  2496                           
  2497                           	psect	stringtext9
  2498  3154                     __pstringtext9:	
  2499  3154                     _Lg2:	
  2500  3154  3413               	retlw	19
  2501  3155  34CE               	retlw	206
  2502  3156  34CC               	retlw	204
  2503  3157  343E               	retlw	62
  2504  3158                     __end_of_Lg2:	
  2505                           
  2506                           	psect	stringtext10
  2507  3158                     __pstringtext10:	
  2508  3158                     _Lg1:	
  2509  3158  34AA               	retlw	170
  2510  3159  34AA               	retlw	170
  2511  315A  342A               	retlw	42
  2512  315B  343F               	retlw	63
  2513  315C                     __end_of_Lg1:	
  2514                           
  2515                           	psect	stringtext11
  2516  315C                     __pstringtext11:	
  2517  315C                     _ln2_lo:	
  2518  315C  34D1               	retlw	209
  2519  315D  34F7               	retlw	247
  2520  315E  3417               	retlw	23
  2521  315F  3437               	retlw	55
  2522  3160                     __end_of_ln2_lo:	
  2523                           
  2524                           	psect	stringtext12
  2525  3160                     __pstringtext12:	
  2526  3160                     _ln2_hi:	
  2527  3160  3480               	retlw	128
  2528  3161  3471               	retlw	113
  2529  3162  3431               	retlw	49
  2530  3163  343F               	retlw	63
  2531  3164                     __end_of_ln2_hi:	
  2532                           
  2533                           	psect	stringtext13
  2534  2800                     __pstringtext13:	
  2535  2800                     _ATmega328_address:	
  2536  2800  3402               	retlw	2
  2537  2801  3400               	retlw	0
  2538  2802                     __end_of_ATmega328_address:	
  2539  0016                     _TMR1	set	22
  2540  0003                     _STATUSbits	set	3
  2541  000B                     _INTCONbits	set	11
  2542  0018                     _T1CONbits	set	24
  2543  0011                     _PIR1bits	set	17
  2544  0097                     _WDTCONbits	set	151
  2545  0090                     _TRISEbits	set	144
  2546  008C                     _TRISAbits	set	140
  2547  008E                     _TRISCbits	set	142
  2548  008D                     _TRISBbits	set	141
  2549  0091                     _PIE1bits	set	145
  2550  0476                     _TRISC6	set	1142
  2551  0477                     _TRISC7	set	1143
  2552  04CF                     _SPLLEN	set	1231
  2553  04CE                     _IRCF3	set	1230
  2554  04CD                     _IRCF2	set	1229
  2555  04CC                     _IRCF1	set	1228
  2556  04CB                     _IRCF0	set	1227
  2557  04C9                     _SCS1	set	1225
  2558  04C8                     _SCS0	set	1224
  2559  0110                     _LATEbits	set	272
  2560  010C                     _LATAbits	set	268
  2561  019A                     _TX1REG	set	410
  2562  0199                     _RC1REG	set	409
  2563  019D                     _RC1STAbits	set	413
  2564  019B                     _SPBRG	set	411
  2565  018E                     _ANSELCbits	set	398
  2566  018D                     _ANSELBbits	set	397
  2567  0CF5                     _TXEN	set	3317
  2568  0CEC                     _CREN	set	3308
  2569  0CEF                     _SPEN	set	3311
  2570  0CF4                     _SYNC	set	3316
  2571  0CF2                     _BRGH	set	3314
  2572  0216                     _SSPCON2bits	set	534
  2573  0211                     _SSPBUF	set	529
  2574  0212                     _SSPADD	set	530
  2575  0215                     _SSPCONbits	set	533
  2576  0E24                     _RXPPSbits	set	3620
  2577  0E20                     _SSPCLKPPSbits	set	3616
  2578  0E21                     _SSPDATPPSbits	set	3617
  2579  0E0F                     _PPSLOCKbits	set	3599
  2580  0E0F                     _PPSLOCK	set	3599
  2581  0E9A                     _RB2PPSbits	set	3738
  2582  0EA5                     _RC5PPSbits	set	3749
  2583  0EA4                     _RC4PPSbits	set	3748
  2584  2802                     STR_1:	
  2585  2802  3443               	retlw	67	;'C'
  2586  2803  3465               	retlw	101	;'e'
  2587  2804  346C               	retlw	108	;'l'
  2588  2805  346C               	retlw	108	;'l'
  2589  2806  3420               	retlw	32	;' '
  2590  2807  3462               	retlw	98	;'b'
  2591  2808  3461               	retlw	97	;'a'
  2592  2809  3474               	retlw	116	;'t'
  2593  280A  3474               	retlw	116	;'t'
  2594  280B  343A               	retlw	58	;':'
  2595  280C  3420               	retlw	32	;' '
  2596  280D  3425               	retlw	37	;'%'
  2597  280E  3469               	retlw	105	;'i'
  2598  280F  3420               	retlw	32	;' '
  2599  2810  342C               	retlw	44	;','
  2600  2811  3425               	retlw	37	;'%'
  2601  2812  3464               	retlw	100	;'d'
  2602  2813  342C               	retlw	44	;','
  2603  2814  3420               	retlw	32	;' '
  2604  2815  3425               	retlw	37	;'%'
  2605  2816  3464               	retlw	100	;'d'
  2606  2817  3420               	retlw	32	;' '
  2607  2818  342C               	retlw	44	;','
  2608  2819  3420               	retlw	32	;' '
  2609  281A  3425               	retlw	37	;'%'
  2610  281B  3464               	retlw	100	;'d'
  2611  281C  342C               	retlw	44	;','
  2612  281D  3420               	retlw	32	;' '
  2613  281E  3425               	retlw	37	;'%'
  2614  281F  3464               	retlw	100	;'d'
  2615  2820  342C               	retlw	44	;','
  2616  2821  3420               	retlw	32	;' '
  2617  2822  3425               	retlw	37	;'%'
  2618  2823  3464               	retlw	100	;'d'
  2619  2824  3420               	retlw	32	;' '
  2620  2825  3442               	retlw	66	;'B'
  2621  2826  3461               	retlw	97	;'a'
  2622  2827  3474               	retlw	116	;'t'
  2623  2828  3474               	retlw	116	;'t'
  2624  2829  3420               	retlw	32	;' '
  2625  282A  3443               	retlw	67	;'C'
  2626  282B  3475               	retlw	117	;'u'
  2627  282C  3472               	retlw	114	;'r'
  2628  282D  3472               	retlw	114	;'r'
  2629  282E  343A               	retlw	58	;':'
  2630  282F  3420               	retlw	32	;' '
  2631  2830  3425               	retlw	37	;'%'
  2632  2831  3469               	retlw	105	;'i'
  2633  2832  3420               	retlw	32	;' '
  2634  2833  3454               	retlw	84	;'T'
  2635  2834  3465               	retlw	101	;'e'
  2636  2835  346D               	retlw	109	;'m'
  2637  2836  3470               	retlw	112	;'p'
  2638  2837  343A               	retlw	58	;':'
  2639  2838  3420               	retlw	32	;' '
  2640  2839  3425               	retlw	37	;'%'
  2641  283A  3469               	retlw	105	;'i'
  2642  283B  3420               	retlw	32	;' '
  2643  283C  3443               	retlw	67	;'C'
  2644  283D  3454               	retlw	84	;'T'
  2645  283E  3452               	retlw	82	;'R'
  2646  283F  344C               	retlw	76	;'L'
  2647  2840  3432               	retlw	50	;'2'
  2648  2841  343A               	retlw	58	;':'
  2649  2842  3420               	retlw	32	;' '
  2650  2843  3425               	retlw	37	;'%'
  2651  2844  3469               	retlw	105	;'i'
  2652  2845  3420               	retlw	32	;' '
  2653  2846  340A               	retlw	10
  2654  2847  340D               	retlw	13
  2655  2848  3400               	retlw	0
  2656                           
  2657                           	psect	stringtext14
  2658  2849                     __pstringtext14:	
  2659  2849                     STR_3:	
  2660  2849  3450               	retlw	80	;'P'
  2661  284A  3472               	retlw	114	;'r'
  2662  284B  3469               	retlw	105	;'i'
  2663  284C  346E               	retlw	110	;'n'
  2664  284D  3474               	retlw	116	;'t'
  2665  284E  3469               	retlw	105	;'i'
  2666  284F  346E               	retlw	110	;'n'
  2667  2850  3467               	retlw	103	;'g'
  2668  2851  3420               	retlw	32	;' '
  2669  2852  346F               	retlw	111	;'o'
  2670  2853  3475               	retlw	117	;'u'
  2671  2854  3474               	retlw	116	;'t'
  2672  2855  3420               	retlw	32	;' '
  2673  2856  3441               	retlw	65	;'A'
  2674  2857  3446               	retlw	70	;'F'
  2675  2858  3445               	retlw	69	;'E'
  2676  2859  3420               	retlw	32	;' '
  2677  285A  3472               	retlw	114	;'r'
  2678  285B  3465               	retlw	101	;'e'
  2679  285C  3467               	retlw	103	;'g'
  2680  285D  3469               	retlw	105	;'i'
  2681  285E  3473               	retlw	115	;'s'
  2682  285F  3474               	retlw	116	;'t'
  2683  2860  3465               	retlw	101	;'e'
  2684  2861  3472               	retlw	114	;'r'
  2685  2862  3420               	retlw	32	;' '
  2686  2863  3476               	retlw	118	;'v'
  2687  2864  3461               	retlw	97	;'a'
  2688  2865  346C               	retlw	108	;'l'
  2689  2866  3475               	retlw	117	;'u'
  2690  2867  3465               	retlw	101	;'e'
  2691  2868  3473               	retlw	115	;'s'
  2692  2869  342E               	retlw	46	;'.'
  2693  286A  342E               	retlw	46	;'.'
  2694  286B  342E               	retlw	46	;'.'
  2695  286C  340A               	retlw	10
  2696  286D  340D               	retlw	13
  2697  286E  3400               	retlw	0
  2698                           
  2699                           	psect	stringtext15
  2700  3020                     __pstringtext15:	
  2701  3020                     STR_7:	
  2702  3020  3430               	retlw	48	;'0'
  2703  3021  3478               	retlw	120	;'x'
  2704  3022  3430               	retlw	48	;'0'
  2705  3023  3434               	retlw	52	;'4'
  2706  3024  3420               	retlw	32	;' '
  2707  3025  3453               	retlw	83	;'S'
  2708  3026  3459               	retlw	89	;'Y'
  2709  3027  3453               	retlw	83	;'S'
  2710  3028  345F               	retlw	95	;'_'
  2711  3029  3443               	retlw	67	;'C'
  2712  302A  3454               	retlw	84	;'T'
  2713  302B  3452               	retlw	82	;'R'
  2714  302C  344C               	retlw	76	;'L'
  2715  302D  3431               	retlw	49	;'1'
  2716  302E  343A               	retlw	58	;':'
  2717  302F  3420               	retlw	32	;' '
  2718  3030  3425               	retlw	37	;'%'
  2719  3031  3469               	retlw	105	;'i'
  2720  3032  3420               	retlw	32	;' '
  2721  3033  340A               	retlw	10
  2722  3034  340D               	retlw	13
  2723  3035  3400               	retlw	0
  2724                           
  2725                           	psect	stringtext16
  2726  3036                     __pstringtext16:	
  2727  3036                     STR_2:	
  2728  3036  3430               	retlw	48	;'0'
  2729  3037  3478               	retlw	120	;'x'
  2730  3038  3430               	retlw	48	;'0'
  2731  3039  3435               	retlw	53	;'5'
  2732  303A  3420               	retlw	32	;' '
  2733  303B  3453               	retlw	83	;'S'
  2734  303C  3459               	retlw	89	;'Y'
  2735  303D  3453               	retlw	83	;'S'
  2736  303E  345F               	retlw	95	;'_'
  2737  303F  3443               	retlw	67	;'C'
  2738  3040  3454               	retlw	84	;'T'
  2739  3041  3452               	retlw	82	;'R'
  2740  3042  344C               	retlw	76	;'L'
  2741  3043  3432               	retlw	50	;'2'
  2742  3044  343A               	retlw	58	;':'
  2743  3045  3420               	retlw	32	;' '
  2744  3046  3425               	retlw	37	;'%'
  2745  3047  3469               	retlw	105	;'i'
  2746  3048  3420               	retlw	32	;' '
  2747  3049  340A               	retlw	10
  2748  304A  340D               	retlw	13
  2749  304B  3400               	retlw	0
  2750                           
  2751                           	psect	stringtext17
  2752  304C                     __pstringtext17:	
  2753  304C                     STR_6:	
  2754  304C  3430               	retlw	48	;'0'
  2755  304D  3478               	retlw	120	;'x'
  2756  304E  3430               	retlw	48	;'0'
  2757  304F  3431               	retlw	49	;'1'
  2758  3050  3420               	retlw	32	;' '
  2759  3051  3443               	retlw	67	;'C'
  2760  3052  3445               	retlw	69	;'E'
  2761  3053  344C               	retlw	76	;'L'
  2762  3054  344C               	retlw	76	;'L'
  2763  3055  3442               	retlw	66	;'B'
  2764  3056  3441               	retlw	65	;'A'
  2765  3057  344C               	retlw	76	;'L'
  2766  3058  3431               	retlw	49	;'1'
  2767  3059  343A               	retlw	58	;':'
  2768  305A  3420               	retlw	32	;' '
  2769  305B  3425               	retlw	37	;'%'
  2770  305C  3469               	retlw	105	;'i'
  2771  305D  3420               	retlw	32	;' '
  2772  305E  340A               	retlw	10
  2773  305F  340D               	retlw	13
  2774  3060  3400               	retlw	0
  2775                           
  2776                           	psect	stringtext18
  2777  3061                     __pstringtext18:	
  2778  3061                     STR_9:	
  2779  3061  3430               	retlw	48	;'0'
  2780  3062  3478               	retlw	120	;'x'
  2781  3063  3430               	retlw	48	;'0'
  2782  3064  3436               	retlw	54	;'6'
  2783  3065  3420               	retlw	32	;' '
  2784  3066  3450               	retlw	80	;'P'
  2785  3067  3452               	retlw	82	;'R'
  2786  3068  344F               	retlw	79	;'O'
  2787  3069  3454               	retlw	84	;'T'
  2788  306A  3445               	retlw	69	;'E'
  2789  306B  3443               	retlw	67	;'C'
  2790  306C  3454               	retlw	84	;'T'
  2791  306D  3431               	retlw	49	;'1'
  2792  306E  343A               	retlw	58	;':'
  2793  306F  3420               	retlw	32	;' '
  2794  3070  3425               	retlw	37	;'%'
  2795  3071  3469               	retlw	105	;'i'
  2796  3072  3420               	retlw	32	;' '
  2797  3073  340A               	retlw	10
  2798  3074  340D               	retlw	13
  2799  3075  3400               	retlw	0
  2800                           
  2801                           	psect	stringtext19
  2802  3076                     __pstringtext19:	
  2803  3076                     STR_10:	
  2804  3076  3430               	retlw	48	;'0'
  2805  3077  3478               	retlw	120	;'x'
  2806  3078  3430               	retlw	48	;'0'
  2807  3079  3437               	retlw	55	;'7'
  2808  307A  3420               	retlw	32	;' '
  2809  307B  3450               	retlw	80	;'P'
  2810  307C  3452               	retlw	82	;'R'
  2811  307D  344F               	retlw	79	;'O'
  2812  307E  3454               	retlw	84	;'T'
  2813  307F  3445               	retlw	69	;'E'
  2814  3080  3443               	retlw	67	;'C'
  2815  3081  3454               	retlw	84	;'T'
  2816  3082  3432               	retlw	50	;'2'
  2817  3083  343A               	retlw	58	;':'
  2818  3084  3420               	retlw	32	;' '
  2819  3085  3425               	retlw	37	;'%'
  2820  3086  3469               	retlw	105	;'i'
  2821  3087  3420               	retlw	32	;' '
  2822  3088  340A               	retlw	10
  2823  3089  340D               	retlw	13
  2824  308A  3400               	retlw	0
  2825                           
  2826                           	psect	stringtext20
  2827  308B                     __pstringtext20:	
  2828  308B                     STR_11:	
  2829  308B  3430               	retlw	48	;'0'
  2830  308C  3478               	retlw	120	;'x'
  2831  308D  3430               	retlw	48	;'0'
  2832  308E  3438               	retlw	56	;'8'
  2833  308F  3420               	retlw	32	;' '
  2834  3090  3450               	retlw	80	;'P'
  2835  3091  3452               	retlw	82	;'R'
  2836  3092  344F               	retlw	79	;'O'
  2837  3093  3454               	retlw	84	;'T'
  2838  3094  3445               	retlw	69	;'E'
  2839  3095  3443               	retlw	67	;'C'
  2840  3096  3454               	retlw	84	;'T'
  2841  3097  3433               	retlw	51	;'3'
  2842  3098  343A               	retlw	58	;':'
  2843  3099  3420               	retlw	32	;' '
  2844  309A  3425               	retlw	37	;'%'
  2845  309B  3469               	retlw	105	;'i'
  2846  309C  3420               	retlw	32	;' '
  2847  309D  340A               	retlw	10
  2848  309E  340D               	retlw	13
  2849  309F  3400               	retlw	0
  2850                           
  2851                           	psect	stringtext21
  2852  30A0                     __pstringtext21:	
  2853  30A0                     STR_5:	
  2854  30A0  3430               	retlw	48	;'0'
  2855  30A1  3478               	retlw	120	;'x'
  2856  30A2  3430               	retlw	48	;'0'
  2857  30A3  3430               	retlw	48	;'0'
  2858  30A4  3420               	retlw	32	;' '
  2859  30A5  3453               	retlw	83	;'S'
  2860  30A6  3459               	retlw	89	;'Y'
  2861  30A7  3453               	retlw	83	;'S'
  2862  30A8  345F               	retlw	95	;'_'
  2863  30A9  3453               	retlw	83	;'S'
  2864  30AA  3454               	retlw	84	;'T'
  2865  30AB  3441               	retlw	65	;'A'
  2866  30AC  3454               	retlw	84	;'T'
  2867  30AD  343A               	retlw	58	;':'
  2868  30AE  3420               	retlw	32	;' '
  2869  30AF  3425               	retlw	37	;'%'
  2870  30B0  3469               	retlw	105	;'i'
  2871  30B1  3420               	retlw	32	;' '
  2872  30B2  340A               	retlw	10
  2873  30B3  340D               	retlw	13
  2874  30B4  3400               	retlw	0
  2875                           
  2876                           	psect	stringtext22
  2877  30B5                     __pstringtext22:	
  2878  30B5                     STR_12:	
  2879  30B5  3430               	retlw	48	;'0'
  2880  30B6  3478               	retlw	120	;'x'
  2881  30B7  3430               	retlw	48	;'0'
  2882  30B8  3439               	retlw	57	;'9'
  2883  30B9  3420               	retlw	32	;' '
  2884  30BA  344F               	retlw	79	;'O'
  2885  30BB  3456               	retlw	86	;'V'
  2886  30BC  345F               	retlw	95	;'_'
  2887  30BD  3454               	retlw	84	;'T'
  2888  30BE  3452               	retlw	82	;'R'
  2889  30BF  3449               	retlw	73	;'I'
  2890  30C0  3450               	retlw	80	;'P'
  2891  30C1  343A               	retlw	58	;':'
  2892  30C2  3420               	retlw	32	;' '
  2893  30C3  3425               	retlw	37	;'%'
  2894  30C4  3469               	retlw	105	;'i'
  2895  30C5  3420               	retlw	32	;' '
  2896  30C6  340A               	retlw	10
  2897  30C7  340D               	retlw	13
  2898  30C8  3400               	retlw	0
  2899                           
  2900                           	psect	stringtext23
  2901  30C9                     __pstringtext23:	
  2902  30C9                     STR_13:	
  2903  30C9  3430               	retlw	48	;'0'
  2904  30CA  3478               	retlw	120	;'x'
  2905  30CB  3430               	retlw	48	;'0'
  2906  30CC  3441               	retlw	65	;'A'
  2907  30CD  3420               	retlw	32	;' '
  2908  30CE  3455               	retlw	85	;'U'
  2909  30CF  3456               	retlw	86	;'V'
  2910  30D0  345F               	retlw	95	;'_'
  2911  30D1  3454               	retlw	84	;'T'
  2912  30D2  3452               	retlw	82	;'R'
  2913  30D3  3449               	retlw	73	;'I'
  2914  30D4  3450               	retlw	80	;'P'
  2915  30D5  343A               	retlw	58	;':'
  2916  30D6  3420               	retlw	32	;' '
  2917  30D7  3425               	retlw	37	;'%'
  2918  30D8  3469               	retlw	105	;'i'
  2919  30D9  3420               	retlw	32	;' '
  2920  30DA  340A               	retlw	10
  2921  30DB  340D               	retlw	13
  2922  30DC  3400               	retlw	0
  2923                           
  2924                           	psect	stringtext24
  2925  30DD                     __pstringtext24:	
  2926  30DD                     STR_14:	
  2927  30DD  3430               	retlw	48	;'0'
  2928  30DE  3478               	retlw	120	;'x'
  2929  30DF  3430               	retlw	48	;'0'
  2930  30E0  3442               	retlw	66	;'B'
  2931  30E1  3420               	retlw	32	;' '
  2932  30E2  3443               	retlw	67	;'C'
  2933  30E3  3443               	retlw	67	;'C'
  2934  30E4  345F               	retlw	95	;'_'
  2935  30E5  3443               	retlw	67	;'C'
  2936  30E6  3446               	retlw	70	;'F'
  2937  30E7  3447               	retlw	71	;'G'
  2938  30E8  343A               	retlw	58	;':'
  2939  30E9  3420               	retlw	32	;' '
  2940  30EA  3425               	retlw	37	;'%'
  2941  30EB  3469               	retlw	105	;'i'
  2942  30EC  3420               	retlw	32	;' '
  2943  30ED  340A               	retlw	10
  2944  30EE  340D               	retlw	13
  2945  30EF  3400               	retlw	0
  2946                           
  2947                           	psect	stringtext25
  2948  30F0                     __pstringtext25:	
  2949  30F0                     STR_15:	
  2950  30F0  3430               	retlw	48	;'0'
  2951  30F1  3478               	retlw	120	;'x'
  2952  30F2  3433               	retlw	51	;'3'
  2953  30F3  3432               	retlw	50	;'2'
  2954  30F4  3420               	retlw	32	;' '
  2955  30F5  3443               	retlw	67	;'C'
  2956  30F6  3443               	retlw	67	;'C'
  2957  30F7  345F               	retlw	95	;'_'
  2958  30F8  3448               	retlw	72	;'H'
  2959  30F9  3449               	retlw	73	;'I'
  2960  30FA  343A               	retlw	58	;':'
  2961  30FB  3420               	retlw	32	;' '
  2962  30FC  3425               	retlw	37	;'%'
  2963  30FD  3469               	retlw	105	;'i'
  2964  30FE  3420               	retlw	32	;' '
  2965  30FF  340A               	retlw	10
  2966  3100  340D               	retlw	13
  2967  3101  3400               	retlw	0
  2968                           
  2969                           	psect	stringtext26
  2970  3102                     __pstringtext26:	
  2971  3102                     STR_16:	
  2972  3102  3430               	retlw	48	;'0'
  2973  3103  3478               	retlw	120	;'x'
  2974  3104  3433               	retlw	51	;'3'
  2975  3105  3433               	retlw	51	;'3'
  2976  3106  3420               	retlw	32	;' '
  2977  3107  3443               	retlw	67	;'C'
  2978  3108  3443               	retlw	67	;'C'
  2979  3109  345F               	retlw	95	;'_'
  2980  310A  344C               	retlw	76	;'L'
  2981  310B  344F               	retlw	79	;'O'
  2982  310C  343A               	retlw	58	;':'
  2983  310D  3420               	retlw	32	;' '
  2984  310E  3425               	retlw	37	;'%'
  2985  310F  3469               	retlw	105	;'i'
  2986  3110  3420               	retlw	32	;' '
  2987  3111  340A               	retlw	10
  2988  3112  340D               	retlw	13
  2989  3113  3400               	retlw	0
  2990                           
  2991                           	psect	stringtext27
  2992  3164                     __pstringtext27:	
  2993  3164                     STR_94:	
  2994  3164  3468               	retlw	104	;'h'
  2995  3165  3468               	retlw	104	;'h'
  2996  3166  3458               	retlw	88	;'X'
  2997  3167  3400               	retlw	0
  2998                           
  2999                           	psect	stringtext28
  3000  3168                     __pstringtext28:	
  3001  3168                     STR_18:	
  3002  3168  3468               	retlw	104	;'h'
  3003  3169  3468               	retlw	104	;'h'
  3004  316A  3464               	retlw	100	;'d'
  3005  316B  3400               	retlw	0
  3006                           
  3007                           	psect	stringtext29
  3008  316C                     __pstringtext29:	
  3009  316C                     STR_22:	
  3010  316C  3468               	retlw	104	;'h'
  3011  316D  3468               	retlw	104	;'h'
  3012  316E  3469               	retlw	105	;'i'
  3013  316F  3400               	retlw	0
  3014                           
  3015                           	psect	stringtext30
  3016  3170                     __pstringtext30:	
  3017  3170                     STR_60:	
  3018  3170  3468               	retlw	104	;'h'
  3019  3171  3468               	retlw	104	;'h'
  3020  3172  346E               	retlw	110	;'n'
  3021  3173  3400               	retlw	0
  3022                           
  3023                           	psect	stringtext31
  3024  3174                     __pstringtext31:	
  3025  3174                     STR_45:	
  3026  3174  3468               	retlw	104	;'h'
  3027  3175  3468               	retlw	104	;'h'
  3028  3176  346F               	retlw	111	;'o'
  3029  3177  3400               	retlw	0
  3030                           
  3031                           	psect	stringtext32
  3032  3178                     __pstringtext32:	
  3033  3178                     STR_75:	
  3034  3178  3468               	retlw	104	;'h'
  3035  3179  3468               	retlw	104	;'h'
  3036  317A  3475               	retlw	117	;'u'
  3037  317B  3400               	retlw	0
  3038                           
  3039                           	psect	stringtext33
  3040  317C                     __pstringtext33:	
  3041  317C                     STR_90:	
  3042  317C  3468               	retlw	104	;'h'
  3043  317D  3468               	retlw	104	;'h'
  3044  317E  3478               	retlw	120	;'x'
  3045  317F  3400               	retlw	0
  3046                           
  3047                           	psect	stringtext34
  3048  3180                     __pstringtext34:	
  3049  3180                     STR_112:	
  3050  3180  347A               	retlw	122	;'z'
  3051  3181  3458               	retlw	88	;'X'
  3052  3182  3400               	retlw	0
  3053                           
  3054                           	psect	stringtext35
  3055  3183                     __pstringtext35:	
  3056  3183                     STR_36:	
  3057  3183  347A               	retlw	122	;'z'
  3058  3184  3464               	retlw	100	;'d'
  3059  3185  3400               	retlw	0
  3060                           
  3061                           	psect	stringtext36
  3062  3186                     __pstringtext36:	
  3063  3186                     STR_40:	
  3064  3186  347A               	retlw	122	;'z'
  3065  3187  3469               	retlw	105	;'i'
  3066  3188  3400               	retlw	0
  3067                           
  3068                           	psect	stringtext37
  3069  3189                     __pstringtext37:	
  3070  3189                     STR_70:	
  3071  3189  347A               	retlw	122	;'z'
  3072  318A  346E               	retlw	110	;'n'
  3073  318B  3400               	retlw	0
  3074                           
  3075                           	psect	stringtext38
  3076  318C                     __pstringtext38:	
  3077  318C                     STR_55:	
  3078  318C  347A               	retlw	122	;'z'
  3079  318D  346F               	retlw	111	;'o'
  3080  318E  3400               	retlw	0
  3081                           
  3082                           	psect	stringtext39
  3083  318F                     __pstringtext39:	
  3084  318F                     STR_85:	
  3085  318F  347A               	retlw	122	;'z'
  3086  3190  3475               	retlw	117	;'u'
  3087  3191  3400               	retlw	0
  3088                           
  3089                           	psect	stringtext40
  3090  3192                     __pstringtext40:	
  3091  3192                     STR_108:	
  3092  3192  347A               	retlw	122	;'z'
  3093  3193  3478               	retlw	120	;'x'
  3094  3194  3400               	retlw	0
  3095                           
  3096                           	psect	stringtext41
  3097  0000                     __pstringtext41:	
  3098  305E                     
  3099                           ; #config settings
  3100  0000                     
  3101                           	psect	cinit
  3102  0022                     start_initialization:	
  3103  0022                     __initialization:		;BIGRAM
  3104                           
  3105                           ; Initialize objects allocated to BANK2
  3106  0022  30F7               	movlw	low __pidataBANK2
  3107  0023  0084               	movwf	4
  3108  0024  3087               	movlw	(high __pidataBANK2)| (0+128)
  3109  0025  0085               	movwf	5
  3110  0026  0022               	movlb	2	; select bank2
  3111  0027  0012               	moviw fsr0++
  3112  0028  00E0               	movwf	__pdataBANK2& (0+127)
  3113  0029  0012               	moviw fsr0++
  3114  002A  00E1               	movwf	(__pdataBANK2+1)& (0+127)
  3115  002B  0012               	moviw fsr0++
  3116  002C  00E2               	movwf	(__pdataBANK2+2)& (0+127)
  3117  002D  0012               	moviw fsr0++
  3118  002E  00E3               	movwf	(__pdataBANK2+3)& (0+127)
  3119  002F  0012               	moviw fsr0++
  3120  0030  00E4               	movwf	(__pdataBANK2+4)& (0+127)
  3121  0031  0012               	moviw fsr0++
  3122  0032  00E5               	movwf	(__pdataBANK2+5)& (0+127)
  3123  0033  0012               	moviw fsr0++
  3124  0034  00E6               	movwf	(__pdataBANK2+6)& (0+127)
  3125  0035  0012               	moviw fsr0++
  3126  0036  00E7               	movwf	(__pdataBANK2+7)& (0+127)
  3127  0037  0012               	moviw fsr0++
  3128  0038  00E8               	movwf	(__pdataBANK2+8)& (0+127)
  3129                           
  3130                           ; Clear objects allocated to BIGRAM
  3131  0039  3071               	movlw	low (0+10097)
  3132  003A  0084               	movwf	4
  3133  003B  3027               	movlw	high (0+10097)
  3134  003C  0085               	movwf	5
  3135  003D  307F               	movlw	127
  3136  003E  00FE               	movwf	btemp
  3137  003F  3000               	movlw	0
  3138  0040  00FF               	movwf	btemp+1
  3139  0041  31AE  262F  3180   	fcall	clear_ram0
  3140                           
  3141                           ; Clear objects allocated to COMMON
  3142  0044  01FC               	clrf	__pbssCOMMON& (0+127)
  3143                           
  3144                           ; Clear objects allocated to BANK1
  3145  0045  0021               	movlb	1	; select bank1
  3146  0046  01ED               	clrf	__pbssBANK1& (0+127)
  3147  0047  01EE               	clrf	(__pbssBANK1+1)& (0+127)
  3148  0048  01EF               	clrf	(__pbssBANK1+2)& (0+127)
  3149                           
  3150                           ; Clear objects allocated to BANK2
  3151  0049  3020               	movlw	low __pbssBANK2
  3152  004A  0084               	movwf	4
  3153  004B  3001               	movlw	high __pbssBANK2
  3154  004C  0085               	movwf	5
  3155  004D  3040               	movlw	64
  3156  004E  00FE               	movwf	btemp
  3157  004F  3000               	movlw	0
  3158  0050  00FF               	movwf	btemp+1
  3159  0051  31AE  262F  3180   	fcall	clear_ram0
  3160                           
  3161                           ; Clear objects allocated to BANK3
  3162  0054  30A0               	movlw	low __pbssBANK3
  3163  0055  0084               	movwf	4
  3164  0056  3001               	movlw	high __pbssBANK3
  3165  0057  0085               	movwf	5
  3166  0058  3020               	movlw	32
  3167  0059  00FE               	movwf	btemp
  3168  005A  3000               	movlw	0
  3169  005B  00FF               	movwf	btemp+1
  3170  005C  31AE  262F         	fcall	clear_ram0
  3171  005E                     end_of_initialization:	
  3172                           ;End of C runtime variable initialization code
  3173                           
  3174  005E                     __end_of__initialization:	
  3175  005E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3176  005F  0020               	movlb	0
  3177  0060  31A0  28E5         	ljmp	_main	;jump to C main() function
  3178                           
  3179                           	psect	bssCOMMON
  3180  007C                     __pbssCOMMON:	
  3181  007C                     _toggleColor:	
  3182  007C                     	ds	1
  3183                           
  3184                           	psect	bssBANK1
  3185  00ED                     __pbssBANK1:	
  3186  00ED                     _flags:	
  3187  00ED                     	ds	2
  3188  00EF                     _tmr1_flag:	
  3189  00EF                     	ds	1
  3190                           
  3191                           	psect	bssBANK2
  3192  0120                     __pbssBANK2:	
  3193  0120                     _cellVoltages:	
  3194  0120                     	ds	10
  3195  012A                     logf@F469:	
  3196  012A                     	ds	4
  3197  012E                     BQ76920@shuntResistorValue_mOhm:	
  3198  012E                     	ds	4
  3199  0132                     _shuntResistorValue_mOhm:	
  3200  0132                     	ds	4
  3201  0136                     _batCurrent:	
  3202  0136                     	ds	4
  3203  013A                     _batVoltage:	
  3204  013A                     	ds	4
  3205  013E                     _errno:	
  3206  013E                     	ds	2
  3207  0140                     _nout:	
  3208  0140                     	ds	2
  3209  0142                     _width:	
  3210  0142                     	ds	2
  3211  0144                     _prec:	
  3212  0144                     	ds	2
  3213  0146                     _temperatureThermistor:	
  3214  0146                     	ds	2
  3215  0148                     _minCellVoltage:	
  3216  0148                     	ds	2
  3217  014A                     _maxCellVoltage:	
  3218  014A                     	ds	2
  3219  014C                     _maxCellTempDischarge:	
  3220  014C                     	ds	2
  3221  014E                     _maxCellTempCharge:	
  3222  014E                     	ds	2
  3223  0150                     _minCellTempDischarge:	
  3224  0150                     	ds	2
  3225  0152                     _minCellTempCharge:	
  3226  0152                     	ds	2
  3227  0154                     _adcOffset:	
  3228  0154                     	ds	2
  3229  0156                     BQ76920@protect3:	
  3230  0156                     	ds	1
  3231  0157                     BQ76920@protect2:	
  3232  0157                     	ds	1
  3233  0158                     BQ76920@protect1:	
  3234  0158                     	ds	1
  3235  0159                     myIsr@count:	
  3236  0159                     	ds	1
  3237  015A                     _currState:	
  3238  015A                     	ds	1
  3239  015B                     _protect3:	
  3240  015B                     	ds	1
  3241  015C                     _protect2:	
  3242  015C                     	ds	1
  3243  015D                     _protect1:	
  3244  015D                     	ds	1
  3245  015E                     _adcGain:	
  3246  015E                     	ds	2
  3247                           
  3248                           	psect	dataBANK2
  3249  0160                     __pdataBANK2:	
  3250  0160                     stoa@F1152:	
  3251  0160                     	ds	7
  3252  0167                     _thermistorBetaValue:	
  3253  0167                     	ds	2
  3254                           
  3255                           	psect	bssBANK3
  3256  01A0                     __pbssBANK3:	
  3257  01A0                     _dbuf:	
  3258  01A0                     	ds	32
  3259                           
  3260                           	psect	clrtext
  3261  2E2F                     clear_ram0:	
  3262                           ;	Called with FSR0 containing the base address, and
  3263                           ;	btemp/btemp+1 has the size to clear
  3264                           
  3265  2E2F  0064               	clrwdt	;clear the watchdog before getting into this loop
  3266  2E30                     clrloop0:	
  3267  2E30  0180               	clrf	0	;clear RAM location pointed to by FSR
  3268  2E31  3101               	addfsr 0,1
  3269  2E32  3001               	movlw	1
  3270  2E33  02FE               	subwf	126,f
  3271  2E34  3000               	movlw	0
  3272  2E35  3BFF               	subwfb	127,f
  3273  2E36  087F               	movf	127,w
  3274  2E37  047E               	iorwf	126,w
  3275  2E38  1903               	btfsc	3,2
  3276  2E39  3400               	retlw	0	;all done for this memory range, return
  3277  2E3A  2E30               	goto	clrloop0	;have we reached the end yet?
  3278                           
  3279                           	psect	cstackBANK1
  3280  00A0                     __pcstackBANK1:	
  3281  00A0                     ?___fltol:	
  3282  00A0                     vfpfcnvrt@cp:	
  3283                           ; 4 bytes @ 0x0
  3284                           
  3285  00A0                     setShortCircuitProtection@scaler:	
  3286                           ; 2 bytes @ 0x0
  3287                           
  3288  00A0                     setOverCurrentDischargeProtection@scaler:	
  3289                           ; 4 bytes @ 0x0
  3290                           
  3291  00A0                     ___fltol@f1:	
  3292                           ; 4 bytes @ 0x0
  3293                           
  3294                           
  3295                           ; 4 bytes @ 0x0
  3296  00A0                     	ds	2
  3297  00A2                     vfpfcnvrt@done:	
  3298                           
  3299                           ; 2 bytes @ 0x2
  3300  00A2                     	ds	2
  3301  00A4                     ??___fltol:	
  3302  00A4                     _vfpfcnvrt$1255:	
  3303                           ; 1 bytes @ 0x4
  3304                           
  3305  00A4                     _setShortCircuitProtection$2039:	
  3306                           ; 2 bytes @ 0x4
  3307                           
  3308  00A4                     _setOverCurrentDischargeProtection$2040:	
  3309                           ; 4 bytes @ 0x4
  3310                           
  3311                           
  3312                           ; 4 bytes @ 0x4
  3313  00A4                     	ds	2
  3314  00A6                     _vfpfcnvrt$1256:	
  3315                           
  3316                           ; 2 bytes @ 0x6
  3317  00A6                     	ds	2
  3318  00A8                     setShortCircuitProtection@i:	
  3319  00A8                     setOverCurrentDischargeProtection@i:	
  3320                           ; 2 bytes @ 0x8
  3321                           
  3322  00A8                     vfpfcnvrt@ll:	
  3323                           ; 2 bytes @ 0x8
  3324                           
  3325                           
  3326                           ; 8 bytes @ 0x8
  3327  00A8                     	ds	1
  3328  00A9                     ??_updateVoltages:	
  3329                           
  3330                           ; 1 bytes @ 0x9
  3331  00A9                     	ds	1
  3332  00AA                     setShortCircuitProtection@i_955:	
  3333  00AA                     setOverCurrentDischargeProtection@i_964:	
  3334                           ; 2 bytes @ 0xA
  3335                           
  3336                           
  3337                           ; 2 bytes @ 0xA
  3338  00AA                     	ds	2
  3339  00AC                     _updateVoltages$2041:	
  3340                           
  3341                           ; 4 bytes @ 0xC
  3342  00AC                     	ds	4
  3343  00B0                     vfpfcnvrt@vp:	
  3344  00B0                     updateVoltages@adcVal:	
  3345                           ; 2 bytes @ 0x10
  3346                           
  3347                           
  3348                           ; 4 bytes @ 0x10
  3349  00B0                     	ds	2
  3350  00B2                     vfpfcnvrt@c:	
  3351                           
  3352                           ; 1 bytes @ 0x12
  3353  00B2                     	ds	1
  3354  00B3                     vfpfcnvrt@llu:	
  3355                           
  3356                           ; 8 bytes @ 0x13
  3357  00B3                     	ds	8
  3358  00BB                     ?_vsnprintf:	
  3359  00BB                     vsnprintf@s:	
  3360                           ; 2 bytes @ 0x1B
  3361                           
  3362                           
  3363                           ; 2 bytes @ 0x1B
  3364  00BB                     	ds	2
  3365  00BD                     vsnprintf@n:	
  3366                           
  3367                           ; 2 bytes @ 0x1D
  3368  00BD                     	ds	2
  3369  00BF                     vsnprintf@fmt:	
  3370                           
  3371                           ; 2 bytes @ 0x1F
  3372  00BF                     	ds	2
  3373  00C1                     vsnprintf@ap:	
  3374                           
  3375                           ; 1 bytes @ 0x21
  3376  00C1                     	ds	1
  3377  00C2                     _vsnprintf$1827:	
  3378                           
  3379                           ; 2 bytes @ 0x22
  3380  00C2                     	ds	2
  3381  00C4                     vsnprintf@cnt:	
  3382                           
  3383                           ; 2 bytes @ 0x24
  3384  00C4                     	ds	2
  3385  00C6                     vsnprintf@f:	
  3386                           
  3387                           ; 6 bytes @ 0x26
  3388  00C6                     	ds	6
  3389  00CC                     ?_snprintf:	
  3390  00CC                     snprintf@s:	
  3391                           ; 2 bytes @ 0x2C
  3392                           
  3393                           
  3394                           ; 2 bytes @ 0x2C
  3395  00CC                     	ds	2
  3396  00CE                     snprintf@n:	
  3397                           
  3398                           ; 2 bytes @ 0x2E
  3399  00CE                     	ds	2
  3400  00D0                     snprintf@fmt:	
  3401                           
  3402                           ; 2 bytes @ 0x30
  3403  00D0                     	ds	24
  3404  00E8                     ??_statemachine:	
  3405                           
  3406                           ; 1 bytes @ 0x48
  3407  00E8                     	ds	2
  3408  00EA                     statemachine@success:	
  3409                           
  3410                           ; 1 bytes @ 0x4A
  3411  00EA                     	ds	1
  3412  00EB                     ??_main:	
  3413                           
  3414                           ; 1 bytes @ 0x4B
  3415  00EB                     	ds	2
  3416                           
  3417                           	psect	cstackCOMMON
  3418  0070                     __pcstackCOMMON:	
  3419  0070                     ?_initClock:	
  3420  0070                     ?_init_GPIO:	
  3421                           ; 1 bytes @ 0x0
  3422                           
  3423  0070                     ?_initWDT:	
  3424                           ; 1 bytes @ 0x0
  3425                           
  3426  0070                     ?_init_I2C:	
  3427                           ; 1 bytes @ 0x0
  3428                           
  3429  0070                     ?_init_TMR1:	
  3430                           ; 1 bytes @ 0x0
  3431                           
  3432  0070                     ?_init_RGB:	
  3433                           ; 1 bytes @ 0x0
  3434                           
  3435  0070                     ?_watchdog_timeout_shutdown:	
  3436                           ; 1 bytes @ 0x0
  3437                           
  3438  0070                     ?_statemachine:	
  3439                           ; 1 bytes @ 0x0
  3440                           
  3441  0070                     ?_RGB_AWAIT_AFE_CONN:	
  3442                           ; 1 bytes @ 0x0
  3443                           
  3444  0070                     ?_init_AFE:	
  3445                           ; 1 bytes @ 0x0
  3446                           
  3447  0070                     ?_AFE_UPDATE:	
  3448                           ; 1 bytes @ 0x0
  3449                           
  3450  0070                     ?_printcellParameters:	
  3451                           ; 1 bytes @ 0x0
  3452                           
  3453  0070                     ?_internal_16:	
  3454                           ; 1 bytes @ 0x0
  3455                           
  3456  0070                     ?_updateVoltages:	
  3457                           ; 1 bytes @ 0x0
  3458                           
  3459  0070                     ?_shutdown_BMS:	
  3460                           ; 1 bytes @ 0x0
  3461                           
  3462  0070                     ?_putch:	
  3463                           ; 1 bytes @ 0x0
  3464                           
  3465  0070                     ?_myIsr:	
  3466                           ; 1 bytes @ 0x0
  3467                           
  3468  0070                     ??_myIsr:	
  3469                           ; 1 bytes @ 0x0
  3470                           
  3471  0070                     ?_main:	
  3472                           ; 1 bytes @ 0x0
  3473                           
  3474  0070                     ?_EUSART_Write:	
  3475                           ; 1 bytes @ 0x0
  3476                           
  3477  0070                     ?_send_I2C_startBit:	
  3478                           ; 1 bytes @ 0x0
  3479                           
  3480  0070                     ?_send_I2C_stopBit:	
  3481                           ; 1 bytes @ 0x0
  3482                           
  3483  0070                     ?_send_I2C_NACK:	
  3484                           ; 1 bytes @ 0x0
  3485                           
  3486  0070                     putch@c:	
  3487                           ; 1 bytes @ 0x0
  3488                           
  3489                           
  3490                           ; 1 bytes @ 0x0
  3491  0070                     	ds	1
  3492  0071                     ??_initClock:	
  3493  0071                     ??_init_GPIO:	
  3494                           ; 1 bytes @ 0x1
  3495                           
  3496  0071                     ??_initWDT:	
  3497                           ; 1 bytes @ 0x1
  3498                           
  3499  0071                     ??_init_I2C:	
  3500                           ; 1 bytes @ 0x1
  3501                           
  3502  0071                     ??_init_TMR1:	
  3503                           ; 1 bytes @ 0x1
  3504                           
  3505  0071                     ??_init_RGB:	
  3506                           ; 1 bytes @ 0x1
  3507                           
  3508  0071                     ?_RGB_color:	
  3509                           ; 1 bytes @ 0x1
  3510                           
  3511  0071                     ??_internal_16:	
  3512                           ; 1 bytes @ 0x1
  3513                           
  3514  0071                     ?_setShuntResistorValue:	
  3515                           ; 1 bytes @ 0x1
  3516                           
  3517  0071                     ??_shutdown_BMS:	
  3518                           ; 1 bytes @ 0x1
  3519                           
  3520  0071                     ??_putch:	
  3521                           ; 1 bytes @ 0x1
  3522                           
  3523  0071                     ??_EUSART_Write:	
  3524                           ; 1 bytes @ 0x1
  3525                           
  3526  0071                     ?_send_I2C_data:	
  3527                           ; 1 bytes @ 0x1
  3528                           
  3529  0071                     ?_send_I2C_controlByte:	
  3530                           ; 1 bytes @ 0x1
  3531                           
  3532  0071                     ??_send_I2C_startBit:	
  3533                           ; 1 bytes @ 0x1
  3534                           
  3535  0071                     ??_send_I2C_stopBit:	
  3536                           ; 1 bytes @ 0x1
  3537                           
  3538  0071                     ??_send_I2C_NACK:	
  3539                           ; 1 bytes @ 0x1
  3540                           
  3541  0071                     ??___aodiv:	
  3542                           ; 1 bytes @ 0x1
  3543                           
  3544  0071                     ??___aomod:	
  3545                           ; 1 bytes @ 0x1
  3546                           
  3547  0071                     ??___lodiv:	
  3548                           ; 1 bytes @ 0x1
  3549                           
  3550  0071                     ??___lomod:	
  3551                           ; 1 bytes @ 0x1
  3552                           
  3553  0071                     ?_fputc:	
  3554                           ; 1 bytes @ 0x1
  3555                           
  3556  0071                     ?_strlen:	
  3557                           ; 2 bytes @ 0x1
  3558                           
  3559  0071                     ?_isupper:	
  3560                           ; 2 bytes @ 0x1
  3561                           
  3562  0071                     ?_isalpha:	
  3563                           ; 2 bytes @ 0x1
  3564                           
  3565  0071                     ?_isdigit:	
  3566                           ; 2 bytes @ 0x1
  3567                           
  3568  0071                     ?_strncmp:	
  3569                           ; 2 bytes @ 0x1
  3570                           
  3571  0071                     ?__Umul8_16:	
  3572                           ; 2 bytes @ 0x1
  3573                           
  3574  0071                     ?_isspace:	
  3575                           ; 2 bytes @ 0x1
  3576                           
  3577  0071                     ?_islower:	
  3578                           ; 2 bytes @ 0x1
  3579                           
  3580  0071                     ?_read_I2C_data:	
  3581                           ; 2 bytes @ 0x1
  3582                           
  3583  0071                     ?___wmul:	
  3584                           ; 2 bytes @ 0x1
  3585                           
  3586  0071                     ?___lmul:	
  3587                           ; 2 bytes @ 0x1
  3588                           
  3589  0071                     ?___xxtofl:	
  3590                           ; 4 bytes @ 0x1
  3591                           
  3592  0071                     EUSART_Write@txData:	
  3593                           ; 4 bytes @ 0x1
  3594                           
  3595  0071                     __Umul8_16@multiplicand:	
  3596                           ; 1 bytes @ 0x1
  3597                           
  3598  0071                     send_I2C_data@databyte:	
  3599                           ; 1 bytes @ 0x1
  3600                           
  3601  0071                     send_I2C_controlByte@BlockAddress:	
  3602                           ; 2 bytes @ 0x1
  3603                           
  3604  0071                     RGB_color@color:	
  3605                           ; 2 bytes @ 0x1
  3606                           
  3607  0071                     ___wmul@multiplier:	
  3608                           ; 2 bytes @ 0x1
  3609                           
  3610  0071                     isalpha@c:	
  3611                           ; 2 bytes @ 0x1
  3612                           
  3613  0071                     isdigit@c:	
  3614                           ; 2 bytes @ 0x1
  3615                           
  3616  0071                     isspace@c:	
  3617                           ; 2 bytes @ 0x1
  3618                           
  3619  0071                     isupper@c:	
  3620                           ; 2 bytes @ 0x1
  3621                           
  3622  0071                     fputc@c:	
  3623                           ; 2 bytes @ 0x1
  3624                           
  3625  0071                     strlen@s:	
  3626                           ; 2 bytes @ 0x1
  3627                           
  3628  0071                     strncmp@_l:	
  3629                           ; 2 bytes @ 0x1
  3630                           
  3631  0071                     islower@c:	
  3632                           ; 2 bytes @ 0x1
  3633                           
  3634  0071                     setShuntResistorValue@res_mOhm:	
  3635                           ; 2 bytes @ 0x1
  3636                           
  3637  0071                     ___lmul@multiplier:	
  3638                           ; 4 bytes @ 0x1
  3639                           
  3640  0071                     ___xxtofl@val:	
  3641                           ; 4 bytes @ 0x1
  3642                           
  3643                           
  3644                           ; 4 bytes @ 0x1
  3645  0071                     	ds	1
  3646  0072                     ?_EUSART_Write_Text:	
  3647  0072                     ___aodiv@counter:	
  3648                           ; 1 bytes @ 0x2
  3649                           
  3650  0072                     ___aomod@counter:	
  3651                           ; 1 bytes @ 0x2
  3652                           
  3653  0072                     ___lomod@counter:	
  3654                           ; 1 bytes @ 0x2
  3655                           
  3656  0072                     EUSART_Write_Text@text:	
  3657                           ; 1 bytes @ 0x2
  3658                           
  3659  0072                     ___lodiv@quotient:	
  3660                           ; 2 bytes @ 0x2
  3661                           
  3662                           
  3663                           ; 8 bytes @ 0x2
  3664  0072                     	ds	1
  3665  0073                     ??_watchdog_timeout_shutdown:	
  3666  0073                     ??_RGB_AWAIT_AFE_CONN:	
  3667                           ; 1 bytes @ 0x3
  3668                           
  3669  0073                     ??_RGB_color:	
  3670                           ; 1 bytes @ 0x3
  3671                           
  3672  0073                     ??_strlen:	
  3673                           ; 1 bytes @ 0x3
  3674                           
  3675  0073                     ??_isupper:	
  3676                           ; 1 bytes @ 0x3
  3677                           
  3678  0073                     ??_isalpha:	
  3679                           ; 1 bytes @ 0x3
  3680                           
  3681  0073                     ??_isdigit:	
  3682                           ; 1 bytes @ 0x3
  3683                           
  3684  0073                     ??__Umul8_16:	
  3685                           ; 1 bytes @ 0x3
  3686                           
  3687  0073                     ??_isspace:	
  3688                           ; 1 bytes @ 0x3
  3689                           
  3690  0073                     ??_islower:	
  3691                           ; 1 bytes @ 0x3
  3692                           
  3693  0073                     ??_send_I2C_data:	
  3694                           ; 1 bytes @ 0x3
  3695                           
  3696  0073                     ??_read_I2C_data:	
  3697                           ; 1 bytes @ 0x3
  3698                           
  3699  0073                     ___aodiv@sign:	
  3700                           ; 1 bytes @ 0x3
  3701                           
  3702  0073                     ___aomod@sign:	
  3703                           ; 1 bytes @ 0x3
  3704                           
  3705  0073                     send_I2C_controlByte@RW_bit:	
  3706                           ; 1 bytes @ 0x3
  3707                           
  3708  0073                     ___wmul@multiplicand:	
  3709                           ; 2 bytes @ 0x3
  3710                           
  3711  0073                     fputc@fp:	
  3712                           ; 2 bytes @ 0x3
  3713                           
  3714  0073                     strlen@a:	
  3715                           ; 2 bytes @ 0x3
  3716                           
  3717  0073                     strncmp@_r:	
  3718                           ; 2 bytes @ 0x3
  3719                           
  3720                           
  3721                           ; 2 bytes @ 0x3
  3722  0073                     	ds	1
  3723  0074                     ??_EUSART_Write_Text:	
  3724  0074                     ?_abs:	
  3725                           ; 1 bytes @ 0x4
  3726                           
  3727  0074                     abs@a:	
  3728                           ; 2 bytes @ 0x4
  3729                           
  3730  0074                     ___aodiv@quotient:	
  3731                           ; 2 bytes @ 0x4
  3732                           
  3733                           
  3734                           ; 8 bytes @ 0x4
  3735  0074                     	ds	1
  3736  0075                     ??_setShuntResistorValue:	
  3737  0075                     ??_fputc:	
  3738                           ; 1 bytes @ 0x5
  3739                           
  3740  0075                     ??_send_I2C_controlByte:	
  3741                           ; 1 bytes @ 0x5
  3742                           
  3743  0075                     ?_I2C_writeRegister:	
  3744                           ; 1 bytes @ 0x5
  3745                           
  3746  0075                     ??___wmul:	
  3747                           ; 1 bytes @ 0x5
  3748                           
  3749  0075                     ??___xxtofl:	
  3750                           ; 1 bytes @ 0x5
  3751                           
  3752  0075                     ?_readRegister:	
  3753                           ; 1 bytes @ 0x5
  3754                           
  3755  0075                     _isspace$1682:	
  3756                           ; 2 bytes @ 0x5
  3757                           
  3758  0075                     EUSART_Write_Text@i:	
  3759                           ; 1 bytes @ 0x5
  3760                           
  3761  0075                     I2C_writeRegister@slaveAddress:	
  3762                           ; 2 bytes @ 0x5
  3763                           
  3764  0075                     readRegister@slaveAddress:	
  3765                           ; 2 bytes @ 0x5
  3766                           
  3767  0075                     ___wmul@product:	
  3768                           ; 2 bytes @ 0x5
  3769                           
  3770  0075                     strncmp@n:	
  3771                           ; 2 bytes @ 0x5
  3772                           
  3773  0075                     __Umul8_16@product:	
  3774                           ; 2 bytes @ 0x5
  3775                           
  3776  0075                     ___lmul@multiplicand:	
  3777                           ; 2 bytes @ 0x5
  3778                           
  3779                           
  3780                           ; 4 bytes @ 0x5
  3781  0075                     	ds	1
  3782  0076                     ??_abs:	
  3783                           
  3784                           ; 1 bytes @ 0x6
  3785  0076                     	ds	1
  3786  0077                     ??_setTemperatureLimitsint:	
  3787  0077                     ??_strncmp:	
  3788                           ; 1 bytes @ 0x7
  3789                           
  3790  0077                     ?_toupper:	
  3791                           ; 1 bytes @ 0x7
  3792                           
  3793  0077                     ?_atoi:	
  3794                           ; 2 bytes @ 0x7
  3795                           
  3796  0077                     I2C_writeRegister@regAddress:	
  3797                           ; 2 bytes @ 0x7
  3798                           
  3799  0077                     readRegister@regAddress:	
  3800                           ; 2 bytes @ 0x7
  3801                           
  3802  0077                     atoi@s:	
  3803                           ; 2 bytes @ 0x7
  3804                           
  3805  0077                     toupper@c:	
  3806                           ; 2 bytes @ 0x7
  3807                           
  3808  0077                     __Umul8_16@word_mpld:	
  3809                           ; 2 bytes @ 0x7
  3810                           
  3811                           
  3812                           ; 2 bytes @ 0x7
  3813  0077                     	ds	1
  3814  0078                     strncmp@l:	
  3815                           
  3816                           ; 2 bytes @ 0x8
  3817  0078                     	ds	1
  3818  0079                     ??_readRegister:	
  3819  0079                     ??___lmul:	
  3820                           ; 1 bytes @ 0x9
  3821                           
  3822  0079                     ??___aldiv:	
  3823                           ; 1 bytes @ 0x9
  3824                           
  3825  0079                     __Umul8_16@multiplier:	
  3826                           ; 1 bytes @ 0x9
  3827                           
  3828  0079                     I2C_writeRegister@data:	
  3829                           ; 1 bytes @ 0x9
  3830                           
  3831  0079                     readRegister@recievedData:	
  3832                           ; 2 bytes @ 0x9
  3833                           
  3834  0079                     _toupper$1790:	
  3835                           ; 2 bytes @ 0x9
  3836                           
  3837                           
  3838                           ; 2 bytes @ 0x9
  3839  0079                     	ds	1
  3840  007A                     ??_stoa:	
  3841  007A                     ?_fputs:	
  3842                           ; 1 bytes @ 0xA
  3843                           
  3844  007A                     ___fltol@sign1:	
  3845                           ; 2 bytes @ 0xA
  3846                           
  3847  007A                     ___lodiv@counter:	
  3848                           ; 1 bytes @ 0xA
  3849                           
  3850  007A                     EUSART_Initialize@x:	
  3851                           ; 1 bytes @ 0xA
  3852                           
  3853  007A                     fputs@fp:	
  3854                           ; 2 bytes @ 0xA
  3855                           
  3856  007A                     strncmp@r:	
  3857                           ; 2 bytes @ 0xA
  3858                           
  3859                           
  3860                           ; 2 bytes @ 0xA
  3861  007A                     	ds	1
  3862  007B                     ??_init_AFE:	
  3863  007B                     ??_I2C_writeRegister:	
  3864                           ; 1 bytes @ 0xB
  3865                           
  3866  007B                     enableDischarging@sys_ctrl2:	
  3867                           ; 1 bytes @ 0xB
  3868                           
  3869  007B                     enableCharging@sys_ctrl2:	
  3870                           ; 1 bytes @ 0xB
  3871                           
  3872  007B                     ___fltol@exp1:	
  3873                           ; 1 bytes @ 0xB
  3874                           
  3875                           
  3876                           ; 1 bytes @ 0xB
  3877  007B                     	ds	1
  3878  007C                     ??_AFE_UPDATE:	
  3879  007C                     ??_printcellParameters:	
  3880                           ; 1 bytes @ 0xC
  3881                           
  3882                           
  3883                           	psect	cstackBANK0
  3884  0020                     __pcstackBANK0:	
  3885                           ; 1 bytes @ 0xC
  3886                           
  3887  0020                     ?_setTemperatureLimitsint:	
  3888  0020                     ?_enableDischarging:	
  3889                           ; 1 bytes @ 0x0
  3890                           
  3891  0020                     ?_enableCharging:	
  3892                           ; 1 bytes @ 0x0
  3893                           
  3894  0020                     ??_fputs:	
  3895                           ; 1 bytes @ 0x0
  3896                           
  3897  0020                     ??_toupper:	
  3898                           ; 1 bytes @ 0x0
  3899                           
  3900  0020                     ??_atoi:	
  3901                           ; 1 bytes @ 0x0
  3902                           
  3903  0020                     ?_beginAFEcommunication:	
  3904                           ; 1 bytes @ 0x0
  3905                           
  3906  0020                     ?_stoa:	
  3907                           ; 2 bytes @ 0x0
  3908                           
  3909  0020                     ?___aodiv:	
  3910                           ; 2 bytes @ 0x0
  3911                           
  3912  0020                     ?___aomod:	
  3913                           ; 8 bytes @ 0x0
  3914                           
  3915  0020                     ?___lodiv:	
  3916                           ; 8 bytes @ 0x0
  3917                           
  3918  0020                     ?___lomod:	
  3919                           ; 8 bytes @ 0x0
  3920                           
  3921  0020                     ___xxtofl@sign:	
  3922                           ; 8 bytes @ 0x0
  3923                           
  3924  0020                     setTemperatureLimitsint@minDischarge_degC:	
  3925                           ; 1 bytes @ 0x0
  3926                           
  3927  0020                     enableDischarging@enable:	
  3928                           ; 2 bytes @ 0x0
  3929                           
  3930  0020                     enableCharging@enable:	
  3931                           ; 2 bytes @ 0x0
  3932                           
  3933  0020                     stoa@fp:	
  3934                           ; 2 bytes @ 0x0
  3935                           
  3936  0020                     ___lmul@product:	
  3937                           ; 2 bytes @ 0x0
  3938                           
  3939  0020                     ___aodiv@divisor:	
  3940                           ; 4 bytes @ 0x0
  3941                           
  3942  0020                     ___aomod@divisor:	
  3943                           ; 8 bytes @ 0x0
  3944                           
  3945  0020                     ___lodiv@divisor:	
  3946                           ; 8 bytes @ 0x0
  3947                           
  3948  0020                     ___lomod@divisor:	
  3949                           ; 8 bytes @ 0x0
  3950                           
  3951                           
  3952                           ; 8 bytes @ 0x0
  3953  0020                     	ds	1
  3954  0021                     ___xxtofl@exp:	
  3955                           
  3956                           ; 1 bytes @ 0x1
  3957  0021                     	ds	1
  3958  0022                     ??_beginAFEcommunication:	
  3959  0022                     ??_enableDischarging:	
  3960                           ; 1 bytes @ 0x2
  3961                           
  3962  0022                     ??_enableCharging:	
  3963                           ; 1 bytes @ 0x2
  3964                           
  3965  0022                     fputs@c:	
  3966                           ; 1 bytes @ 0x2
  3967                           
  3968  0022                     setTemperatureLimitsint@maxDischarge_degC:	
  3969                           ; 1 bytes @ 0x2
  3970                           
  3971  0022                     stoa@s:	
  3972                           ; 2 bytes @ 0x2
  3973                           
  3974  0022                     ___xxtofl@arg:	
  3975                           ; 2 bytes @ 0x2
  3976                           
  3977                           
  3978                           ; 4 bytes @ 0x2
  3979  0022                     	ds	1
  3980  0023                     fputs@i:	
  3981                           
  3982                           ; 2 bytes @ 0x3
  3983  0023                     	ds	1
  3984  0024                     ?___aldiv:	
  3985  0024                     setTemperatureLimitsint@minCharge_degC:	
  3986                           ; 4 bytes @ 0x4
  3987                           
  3988  0024                     atoi@neg:	
  3989                           ; 2 bytes @ 0x4
  3990                           
  3991  0024                     ___aldiv@divisor:	
  3992                           ; 2 bytes @ 0x4
  3993                           
  3994  0024                     stoa@nuls:	
  3995                           ; 4 bytes @ 0x4
  3996                           
  3997                           
  3998                           ; 7 bytes @ 0x4
  3999  0024                     	ds	1
  4000  0025                     fputs@s:	
  4001                           
  4002                           ; 1 bytes @ 0x5
  4003  0025                     	ds	1
  4004  0026                     ?_pad:	
  4005  0026                     ?___flmul:	
  4006                           ; 2 bytes @ 0x6
  4007                           
  4008  0026                     setTemperatureLimitsint@maxCharge_degC:	
  4009                           ; 4 bytes @ 0x6
  4010                           
  4011  0026                     pad@fp:	
  4012                           ; 2 bytes @ 0x6
  4013                           
  4014  0026                     _atoi$1655:	
  4015                           ; 2 bytes @ 0x6
  4016                           
  4017  0026                     ___flmul@b:	
  4018                           ; 2 bytes @ 0x6
  4019                           
  4020                           
  4021                           ; 4 bytes @ 0x6
  4022  0026                     	ds	2
  4023  0028                     pad@buf:	
  4024  0028                     _atoi$1657:	
  4025                           ; 1 bytes @ 0x8
  4026                           
  4027  0028                     ___aldiv@dividend:	
  4028                           ; 2 bytes @ 0x8
  4029                           
  4030  0028                     ___aodiv@dividend:	
  4031                           ; 4 bytes @ 0x8
  4032                           
  4033  0028                     ___aomod@dividend:	
  4034                           ; 8 bytes @ 0x8
  4035                           
  4036  0028                     ___lodiv@dividend:	
  4037                           ; 8 bytes @ 0x8
  4038                           
  4039  0028                     ___lomod@dividend:	
  4040                           ; 8 bytes @ 0x8
  4041                           
  4042                           
  4043                           ; 8 bytes @ 0x8
  4044  0028                     	ds	1
  4045  0029                     pad@p:	
  4046                           
  4047                           ; 2 bytes @ 0x9
  4048  0029                     	ds	1
  4049  002A                     _atoi$1656:	
  4050  002A                     ___flmul@a:	
  4051                           ; 1 bytes @ 0xA
  4052                           
  4053                           
  4054                           ; 4 bytes @ 0xA
  4055  002A                     	ds	1
  4056  002B                     ??_pad:	
  4057  002B                     beginAFEcommunication@commSuccess:	
  4058                           ; 1 bytes @ 0xB
  4059                           
  4060  002B                     stoa@i:	
  4061                           ; 2 bytes @ 0xB
  4062                           
  4063  002B                     atoi@n:	
  4064                           ; 2 bytes @ 0xB
  4065                           
  4066                           
  4067                           ; 2 bytes @ 0xB
  4068  002B                     	ds	1
  4069  002C                     ___aldiv@counter:	
  4070  002C                     pad@i:	
  4071                           ; 1 bytes @ 0xC
  4072                           
  4073                           
  4074                           ; 2 bytes @ 0xC
  4075  002C                     	ds	1
  4076  002D                     ___aldiv@sign:	
  4077  002D                     beginAFEcommunication@i:	
  4078                           ; 1 bytes @ 0xD
  4079                           
  4080  002D                     stoa@w:	
  4081                           ; 2 bytes @ 0xD
  4082                           
  4083                           
  4084                           ; 2 bytes @ 0xD
  4085  002D                     	ds	1
  4086  002E                     ??___flmul:	
  4087  002E                     pad@w:	
  4088                           ; 1 bytes @ 0xE
  4089                           
  4090  002E                     ___aldiv@quotient:	
  4091                           ; 2 bytes @ 0xE
  4092                           
  4093                           
  4094                           ; 4 bytes @ 0xE
  4095  002E                     	ds	1
  4096  002F                     stoa@cp:	
  4097                           
  4098                           ; 2 bytes @ 0xF
  4099  002F                     	ds	1
  4100  0030                     ?_ctoa:	
  4101  0030                     ?_dtoa:	
  4102                           ; 2 bytes @ 0x10
  4103                           
  4104  0030                     ?_otoa:	
  4105                           ; 2 bytes @ 0x10
  4106                           
  4107  0030                     ?_utoa:	
  4108                           ; 2 bytes @ 0x10
  4109                           
  4110  0030                     ?_xtoa:	
  4111                           ; 2 bytes @ 0x10
  4112                           
  4113  0030                     ctoa@fp:	
  4114                           ; 2 bytes @ 0x10
  4115                           
  4116  0030                     dtoa@fp:	
  4117                           ; 2 bytes @ 0x10
  4118                           
  4119  0030                     otoa@fp:	
  4120                           ; 2 bytes @ 0x10
  4121                           
  4122  0030                     utoa@fp:	
  4123                           ; 2 bytes @ 0x10
  4124                           
  4125  0030                     xtoa@fp:	
  4126                           ; 2 bytes @ 0x10
  4127                           
  4128                           
  4129                           ; 2 bytes @ 0x10
  4130  0030                     	ds	1
  4131  0031                     stoa@p:	
  4132                           
  4133                           ; 2 bytes @ 0x11
  4134  0031                     	ds	1
  4135  0032                     ?_EUSART_Initialize:	
  4136  0032                     ?_setCellUndervoltageProtection:	
  4137                           ; 1 bytes @ 0x12
  4138                           
  4139  0032                     ?_setCellOvervoltageProtection:	
  4140                           ; 1 bytes @ 0x12
  4141                           
  4142  0032                     ctoa@c:	
  4143                           ; 1 bytes @ 0x12
  4144                           
  4145  0032                     setCellUndervoltageProtection@voltage_mV:	
  4146                           ; 1 bytes @ 0x12
  4147                           
  4148  0032                     setCellOvervoltageProtection@voltage_mV:	
  4149                           ; 2 bytes @ 0x12
  4150                           
  4151  0032                     EUSART_Initialize@baudrate:	
  4152                           ; 2 bytes @ 0x12
  4153                           
  4154  0032                     dtoa@d:	
  4155                           ; 4 bytes @ 0x12
  4156                           
  4157  0032                     otoa@d:	
  4158                           ; 8 bytes @ 0x12
  4159                           
  4160  0032                     utoa@d:	
  4161                           ; 8 bytes @ 0x12
  4162                           
  4163  0032                     xtoa@d:	
  4164                           ; 8 bytes @ 0x12
  4165                           
  4166                           
  4167                           ; 8 bytes @ 0x12
  4168  0032                     	ds	1
  4169  0033                     ??_ctoa:	
  4170  0033                     ___flmul@sign:	
  4171                           ; 1 bytes @ 0x13
  4172                           
  4173  0033                     stoa@l:	
  4174                           ; 1 bytes @ 0x13
  4175                           
  4176                           
  4177                           ; 2 bytes @ 0x13
  4178  0033                     	ds	1
  4179  0034                     ___flmul@aexp:	
  4180  0034                     setCellUndervoltageProtection@delay_s:	
  4181                           ; 1 bytes @ 0x14
  4182                           
  4183  0034                     setCellOvervoltageProtection@delay_s:	
  4184                           ; 2 bytes @ 0x14
  4185                           
  4186  0034                     ctoa@w:	
  4187                           ; 2 bytes @ 0x14
  4188                           
  4189                           
  4190                           ; 2 bytes @ 0x14
  4191  0034                     	ds	1
  4192  0035                     ___flmul@grs:	
  4193                           
  4194                           ; 4 bytes @ 0x15
  4195  0035                     	ds	1
  4196  0036                     ??_EUSART_Initialize:	
  4197  0036                     ??_setCellUndervoltageProtection:	
  4198                           ; 1 bytes @ 0x16
  4199                           
  4200  0036                     ??_setCellOvervoltageProtection:	
  4201                           ; 1 bytes @ 0x16
  4202                           
  4203                           
  4204                           ; 1 bytes @ 0x16
  4205  0036                     	ds	3
  4206  0039                     ___flmul@bexp:	
  4207                           
  4208                           ; 1 bytes @ 0x19
  4209  0039                     	ds	1
  4210  003A                     ??_dtoa:	
  4211  003A                     ??_otoa:	
  4212                           ; 1 bytes @ 0x1A
  4213                           
  4214  003A                     ??_utoa:	
  4215                           ; 1 bytes @ 0x1A
  4216                           
  4217  003A                     xtoa@x:	
  4218                           ; 1 bytes @ 0x1A
  4219                           
  4220  003A                     ___flmul@prod:	
  4221                           ; 1 bytes @ 0x1A
  4222                           
  4223                           
  4224                           ; 4 bytes @ 0x1A
  4225  003A                     	ds	1
  4226  003B                     ??_xtoa:	
  4227  003B                     utoa@p:	
  4228                           ; 1 bytes @ 0x1B
  4229                           
  4230                           
  4231                           ; 2 bytes @ 0x1B
  4232  003B                     	ds	2
  4233  003D                     _dtoa$1204:	
  4234  003D                     utoa@w:	
  4235                           ; 2 bytes @ 0x1D
  4236                           
  4237                           
  4238                           ; 2 bytes @ 0x1D
  4239  003D                     	ds	1
  4240  003E                     ___flmul@temp:	
  4241                           
  4242                           ; 2 bytes @ 0x1E
  4243  003E                     	ds	1
  4244  003F                     dtoa@p:	
  4245  003F                     utoa@n:	
  4246                           ; 2 bytes @ 0x1F
  4247                           
  4248                           
  4249                           ; 8 bytes @ 0x1F
  4250  003F                     	ds	1
  4251  0040                     ?___fldiv:	
  4252  0040                     ___fldiv@a:	
  4253                           ; 4 bytes @ 0x20
  4254                           
  4255                           
  4256                           ; 4 bytes @ 0x20
  4257  0040                     	ds	1
  4258  0041                     dtoa@w:	
  4259                           
  4260                           ; 2 bytes @ 0x21
  4261  0041                     	ds	1
  4262  0042                     otoa@p:	
  4263                           
  4264                           ; 2 bytes @ 0x22
  4265  0042                     	ds	1
  4266  0043                     dtoa@s:	
  4267  0043                     _xtoa$1240:	
  4268                           ; 2 bytes @ 0x23
  4269                           
  4270                           
  4271                           ; 2 bytes @ 0x23
  4272  0043                     	ds	1
  4273  0044                     setCellUndervoltageProtection@uv_trip:	
  4274  0044                     setCellOvervoltageProtection@ov_trip:	
  4275                           ; 1 bytes @ 0x24
  4276                           
  4277  0044                     otoa@t:	
  4278                           ; 1 bytes @ 0x24
  4279                           
  4280  0044                     ___fldiv@b:	
  4281                           ; 2 bytes @ 0x24
  4282                           
  4283                           
  4284                           ; 4 bytes @ 0x24
  4285  0044                     	ds	1
  4286  0045                     setCellUndervoltageProtection@i:	
  4287  0045                     setCellOvervoltageProtection@i:	
  4288                           ; 2 bytes @ 0x25
  4289                           
  4290  0045                     _xtoa$1241:	
  4291                           ; 2 bytes @ 0x25
  4292                           
  4293  0045                     dtoa@n:	
  4294                           ; 2 bytes @ 0x25
  4295                           
  4296                           
  4297                           ; 8 bytes @ 0x25
  4298  0045                     	ds	1
  4299  0046                     otoa@w:	
  4300                           
  4301                           ; 2 bytes @ 0x26
  4302  0046                     	ds	1
  4303  0047                     utoa@i:	
  4304  0047                     xtoa@p:	
  4305                           ; 2 bytes @ 0x27
  4306                           
  4307                           
  4308                           ; 2 bytes @ 0x27
  4309  0047                     	ds	1
  4310  0048                     ??___fldiv:	
  4311  0048                     otoa@n:	
  4312                           ; 1 bytes @ 0x28
  4313                           
  4314                           
  4315                           ; 8 bytes @ 0x28
  4316  0048                     	ds	1
  4317  0049                     xtoa@w:	
  4318                           
  4319                           ; 2 bytes @ 0x29
  4320  0049                     	ds	2
  4321  004B                     xtoa@n:	
  4322                           
  4323                           ; 8 bytes @ 0x2B
  4324  004B                     	ds	2
  4325  004D                     dtoa@i:	
  4326  004D                     ___fldiv@rem:	
  4327                           ; 2 bytes @ 0x2D
  4328                           
  4329                           
  4330                           ; 4 bytes @ 0x2D
  4331  004D                     	ds	3
  4332  0050                     otoa@i:	
  4333                           
  4334                           ; 2 bytes @ 0x30
  4335  0050                     	ds	1
  4336  0051                     ___fldiv@sign:	
  4337                           
  4338                           ; 1 bytes @ 0x31
  4339  0051                     	ds	1
  4340  0052                     ___fldiv@new_exp:	
  4341                           
  4342                           ; 2 bytes @ 0x32
  4343  0052                     	ds	1
  4344  0053                     xtoa@i:	
  4345                           
  4346                           ; 2 bytes @ 0x33
  4347  0053                     	ds	1
  4348  0054                     ___fldiv@grs:	
  4349                           
  4350                           ; 4 bytes @ 0x34
  4351  0054                     	ds	1
  4352  0055                     xtoa@c:	
  4353                           
  4354                           ; 2 bytes @ 0x35
  4355  0055                     	ds	2
  4356  0057                     ?_vfpfcnvrt:	
  4357  0057                     vfpfcnvrt@fp:	
  4358                           ; 2 bytes @ 0x37
  4359                           
  4360                           
  4361                           ; 2 bytes @ 0x37
  4362  0057                     	ds	1
  4363  0058                     ___fldiv@bexp:	
  4364                           
  4365                           ; 1 bytes @ 0x38
  4366  0058                     	ds	1
  4367  0059                     vfpfcnvrt@fmt:	
  4368  0059                     ___fldiv@aexp:	
  4369                           ; 1 bytes @ 0x39
  4370                           
  4371                           
  4372                           ; 1 bytes @ 0x39
  4373  0059                     	ds	1
  4374  005A                     ?___flge:	
  4375  005A                     ?___fladd:	
  4376                           ; 1 bit 
  4377                           
  4378  005A                     vfpfcnvrt@ap:	
  4379                           ; 4 bytes @ 0x3A
  4380                           
  4381  005A                     ___flge@ff1:	
  4382                           ; 1 bytes @ 0x3A
  4383                           
  4384  005A                     ___fladd@b:	
  4385                           ; 4 bytes @ 0x3A
  4386                           
  4387                           
  4388                           ; 4 bytes @ 0x3A
  4389  005A                     	ds	1
  4390  005B                     ??_vfpfcnvrt:	
  4391                           
  4392                           ; 1 bytes @ 0x3B
  4393  005B                     	ds	3
  4394  005E                     ___flge@ff2:	
  4395  005E                     ___fladd@a:	
  4396                           ; 4 bytes @ 0x3E
  4397                           
  4398                           
  4399                           ; 4 bytes @ 0x3E
  4400  005E                     	ds	3
  4401  0061                     ?_vfprintf:	
  4402  0061                     vfprintf@fp:	
  4403                           ; 2 bytes @ 0x41
  4404                           
  4405                           
  4406                           ; 2 bytes @ 0x41
  4407  0061                     	ds	1
  4408  0062                     ??___flge:	
  4409  0062                     ??___fladd:	
  4410                           ; 1 bytes @ 0x42
  4411                           
  4412                           
  4413                           ; 1 bytes @ 0x42
  4414  0062                     	ds	1
  4415  0063                     vfprintf@fmt:	
  4416                           
  4417                           ; 2 bytes @ 0x43
  4418  0063                     	ds	2
  4419  0065                     vfprintf@ap:	
  4420                           
  4421                           ; 1 bytes @ 0x45
  4422  0065                     	ds	1
  4423  0066                     ?_setShortCircuitProtection:	
  4424  0066                     ?_setOverCurrentDischargeProtection:	
  4425                           ; 1 bytes @ 0x46
  4426                           
  4427  0066                     ??_vfprintf:	
  4428                           ; 1 bytes @ 0x46
  4429                           
  4430  0066                     setShortCircuitProtection@current_mA:	
  4431                           ; 1 bytes @ 0x46
  4432                           
  4433  0066                     setOverCurrentDischargeProtection@current_mA:	
  4434                           ; 4 bytes @ 0x46
  4435                           
  4436                           
  4437                           ; 4 bytes @ 0x46
  4438  0066                     	ds	2
  4439  0068                     vfprintf@cfmt:	
  4440                           
  4441                           ; 2 bytes @ 0x48
  4442  0068                     	ds	2
  4443  006A                     ??_vsnprintf:	
  4444  006A                     ___fladd@signs:	
  4445                           ; 1 bytes @ 0x4A
  4446                           
  4447  006A                     setShortCircuitProtection@delay_us:	
  4448                           ; 1 bytes @ 0x4A
  4449                           
  4450  006A                     setOverCurrentDischargeProtection@delay_ms:	
  4451                           ; 2 bytes @ 0x4A
  4452                           
  4453                           
  4454                           ; 2 bytes @ 0x4A
  4455  006A                     	ds	1
  4456  006B                     ___fladd@aexp:	
  4457                           
  4458                           ; 1 bytes @ 0x4B
  4459  006B                     	ds	1
  4460  006C                     ??_setShortCircuitProtection:	
  4461  006C                     ??_setOverCurrentDischargeProtection:	
  4462                           ; 1 bytes @ 0x4C
  4463                           
  4464  006C                     ??_snprintf:	
  4465                           ; 1 bytes @ 0x4C
  4466                           
  4467  006C                     ___fladd@bexp:	
  4468                           ; 1 bytes @ 0x4C
  4469                           
  4470                           
  4471                           ; 1 bytes @ 0x4C
  4472  006C                     	ds	1
  4473  006D                     ___fladd@grs:	
  4474                           
  4475                           ; 1 bytes @ 0x4D
  4476  006D                     	ds	2
  4477  006F                     snprintf@ap:	
  4478                           
  4479                           ; 1 bytes @ 0x4F
  4480  006F                     	ds	1
  4481                           
  4482                           	psect	maintext
  4483  20E5                     __pmaintext:	
  4484 ;;
  4485 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4486 ;;
  4487 ;; *************** function _main *****************
  4488 ;; Defined at:
  4489 ;;		line 77 in file "main.c"
  4490 ;; Parameters:    Size  Location     Type
  4491 ;;		None
  4492 ;; Auto vars:     Size  Location     Type
  4493 ;;		None
  4494 ;; Return value:  Size  Location     Type
  4495 ;;                  1    wreg      void 
  4496 ;; Registers used:
  4497 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4498 ;; Tracked objects:
  4499 ;;		On entry : B1F/0
  4500 ;;		On exit  : 0/0
  4501 ;;		Unchanged: 0/0
  4502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4505 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4506 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4507 ;;Total ram usage:        2 bytes
  4508 ;; Hardware stack levels required when called:   12
  4509 ;; This function calls:
  4510 ;;		_EUSART_Initialize
  4511 ;;		_initClock
  4512 ;;		_initWDT
  4513 ;;		_init_GPIO
  4514 ;;		_init_I2C
  4515 ;;		_init_RGB
  4516 ;;		_init_TMR1
  4517 ;;		_statemachine
  4518 ;;		_watchdog_timeout_shutdown
  4519 ;; This function is called by:
  4520 ;;		Startup code after reset
  4521 ;; This function uses a non-reentrant model
  4522 ;;
  4523                           
  4524                           
  4525                           ;psect for function _main
  4526  20E5                     _main:	
  4527                           
  4528                           ;main.c: 80:     initClock();
  4529                           
  4530                           ;incstack = 0
  4531                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4532  20E5  31AD  25E0  31A0   	fcall	_initClock
  4533                           
  4534                           ;main.c: 81:     init_GPIO();
  4535  20E8  3188  2008  31A0   	fcall	_init_GPIO
  4536                           
  4537                           ;main.c: 82:     initWDT();
  4538  20EB  31AD  25E8  31A0   	fcall	_initWDT
  4539                           
  4540                           ;main.c: 83:     init_I2C();
  4541  20EE  31AE  263B  31A0   	fcall	_init_I2C
  4542                           
  4543                           ;main.c: 84:     EUSART_Initialize(9600);
  4544  20F1  3000               	movlw	0
  4545  20F2  0020               	movlb	0	; select bank0
  4546  20F3  00B5               	movwf	EUSART_Initialize@baudrate+3
  4547  20F4  3000               	movlw	0
  4548  20F5  00B4               	movwf	EUSART_Initialize@baudrate+2
  4549  20F6  3025               	movlw	37
  4550  20F7  00B3               	movwf	EUSART_Initialize@baudrate+1
  4551  20F8  3080               	movlw	128
  4552  20F9  00B2               	movwf	EUSART_Initialize@baudrate
  4553  20FA  3198  2044  31A0   	fcall	_EUSART_Initialize
  4554                           
  4555                           ;main.c: 85:     init_TMR1();
  4556  20FD  31AE  2624  31A0   	fcall	_init_TMR1
  4557                           
  4558                           ;main.c: 86:     init_RGB();
  4559  2100  31AD  25E3  31A0   	fcall	_init_RGB
  4560                           
  4561                           ;main.c: 89:     watchdog_timeout_shutdown();
  4562  2103  31AE  26DF  31A0   	fcall	_watchdog_timeout_shutdown
  4563  2106                     l8089:	
  4564                           
  4565                           ;main.c: 93:         statemachine();
  4566  2106  31A3  2308  31A0   	fcall	_statemachine
  4567                           
  4568                           ;main.c: 95:         _delay((unsigned long)((1000)*(16000000/4000.0)));
  4569  2109  3015               	movlw	21
  4570  210A  0021               	movlb	1	; select bank1
  4571  210B  00EC               	movwf	(??_main^(0+128)+1)
  4572  210C  304B               	movlw	75
  4573  210D  00EB               	movwf	??_main^(0+128)
  4574  210E  30BE               	movlw	190
  4575  210F                     u11397:	
  4576  210F  0B89               	decfsz	9,f
  4577  2110  290F               	goto	u11397
  4578  2111  0BEB               	decfsz	??_main^(0+128),f
  4579  2112  290F               	goto	u11397
  4580  2113  0BEC               	decfsz	(??_main^(0+128)+1),f
  4581  2114  290F               	goto	u11397
  4582  2115  0000               	nop
  4583  2116  2906               	goto	l8089
  4584  2117                     __end_of_main:	
  4585                           
  4586                           	psect	text1
  4587  2EDF                     __ptext1:	
  4588 ;; *************** function _watchdog_timeout_shutdown *****************
  4589 ;; Defined at:
  4590 ;;		line 3 in file "algorithms.c"
  4591 ;; Parameters:    Size  Location     Type
  4592 ;;		None
  4593 ;; Auto vars:     Size  Location     Type
  4594 ;;		None
  4595 ;; Return value:  Size  Location     Type
  4596 ;;                  1    wreg      void 
  4597 ;; Registers used:
  4598 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4599 ;; Tracked objects:
  4600 ;;		On entry : 0/0
  4601 ;;		On exit  : 0/0
  4602 ;;		Unchanged: 0/0
  4603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4606 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4607 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4608 ;;Total ram usage:        2 bytes
  4609 ;; Hardware stack levels used:    1
  4610 ;; Hardware stack levels required when called:    2
  4611 ;; This function calls:
  4612 ;;		_RGB_color
  4613 ;;		_shutdown_BMS
  4614 ;; This function is called by:
  4615 ;;		_main
  4616 ;; This function uses a non-reentrant model
  4617 ;;
  4618                           
  4619                           
  4620                           ;psect for function _watchdog_timeout_shutdown
  4621  2EDF                     _watchdog_timeout_shutdown:	
  4622                           
  4623                           ;algorithms.c: 5:     if (!STATUSbits.nTO) {
  4624                           
  4625                           ;incstack = 0
  4626                           ; Regs used in _watchdog_timeout_shutdown: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4627  2EDF  0020               	movlb	0	; select bank0
  4628  2EE0  1A03               	btfsc	3,4	;volatile
  4629  2EE1  0008               	return
  4630                           
  4631                           ;algorithms.c: 6:         RGB_color(0);
  4632  2EE2  3000               	movlw	0
  4633  2EE3  00F1               	movwf	RGB_color@color
  4634  2EE4  00F2               	movwf	RGB_color@color+1
  4635  2EE5  31AF  27BD  31AE   	fcall	_RGB_color
  4636                           
  4637                           ;algorithms.c: 7:          _delay((unsigned long)((2000)*(16000000/4000.0)));
  4638  2EE8  3029               	movlw	41
  4639  2EE9  00F4               	movwf	??_watchdog_timeout_shutdown+1
  4640  2EEA  3096               	movlw	150
  4641  2EEB  00F3               	movwf	??_watchdog_timeout_shutdown
  4642  2EEC  307F               	movlw	127
  4643  2EED                     u11407:	
  4644  2EED  0B89               	decfsz	9,f
  4645  2EEE  2EED               	goto	u11407
  4646  2EEF  0BF3               	decfsz	??_watchdog_timeout_shutdown,f
  4647  2EF0  2EED               	goto	u11407
  4648  2EF1  0BF4               	decfsz	??_watchdog_timeout_shutdown+1,f
  4649  2EF2  2EED               	goto	u11407
  4650  2EF3  0000               	nop
  4651                           
  4652                           ;algorithms.c: 8:         shutdown_BMS();
  4653  2EF4  3190  2000         	fcall	_shutdown_BMS
  4654  2EF6  0008               	return
  4655  2EF7                     __end_of_watchdog_timeout_shutdown:	
  4656                           
  4657                           	psect	text2
  4658  1000                     __ptext2:	
  4659 ;; *************** function _shutdown_BMS *****************
  4660 ;; Defined at:
  4661 ;;		line 12 in file "algorithms.c"
  4662 ;; Parameters:    Size  Location     Type
  4663 ;;		None
  4664 ;; Auto vars:     Size  Location     Type
  4665 ;;		None
  4666 ;; Return value:  Size  Location     Type
  4667 ;;                  1    wreg      void 
  4668 ;; Registers used:
  4669 ;;		None
  4670 ;; Tracked objects:
  4671 ;;		On entry : 0/0
  4672 ;;		On exit  : 0/0
  4673 ;;		Unchanged: 0/0
  4674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4679 ;;Total ram usage:        0 bytes
  4680 ;; Hardware stack levels used:    1
  4681 ;; Hardware stack levels required when called:    1
  4682 ;; This function calls:
  4683 ;;		Nothing
  4684 ;; This function is called by:
  4685 ;;		_watchdog_timeout_shutdown
  4686 ;; This function uses a non-reentrant model
  4687 ;;
  4688                           
  4689                           
  4690                           ;psect for function _shutdown_BMS
  4691  1000                     _shutdown_BMS:	
  4692                           
  4693                           ;algorithms.c: 13:  LATAbits.LATA3 = 1;
  4694                           
  4695                           ;incstack = 0
  4696                           ; Regs used in _shutdown_BMS: []
  4697  1000  0022               	movlb	2	; select bank2
  4698  1001  158C               	bsf	12,3	;volatile
  4699  1002  0008               	return
  4700  1003                     __end_of_shutdown_BMS:	
  4701                           
  4702                           	psect	text3
  4703  2308                     __ptext3:	
  4704 ;; *************** function _statemachine *****************
  4705 ;; Defined at:
  4706 ;;		line 101 in file "main.c"
  4707 ;; Parameters:    Size  Location     Type
  4708 ;;		None
  4709 ;; Auto vars:     Size  Location     Type
  4710 ;;  success         1   74[BANK1 ] unsigned char 
  4711 ;; Return value:  Size  Location     Type
  4712 ;;                  1    wreg      void 
  4713 ;; Registers used:
  4714 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4715 ;; Tracked objects:
  4716 ;;		On entry : 0/0
  4717 ;;		On exit  : 0/0
  4718 ;;		Unchanged: 0/0
  4719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4721 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4722 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4723 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4724 ;;Total ram usage:        3 bytes
  4725 ;; Hardware stack levels used:    1
  4726 ;; Hardware stack levels required when called:   11
  4727 ;; This function calls:
  4728 ;;		_AFE_UPDATE
  4729 ;;		_RGB_AWAIT_AFE_CONN
  4730 ;;		_RGB_color
  4731 ;;		_beginAFEcommunication
  4732 ;;		_init_AFE
  4733 ;;		_printcellParameters
  4734 ;; This function is called by:
  4735 ;;		_main
  4736 ;; This function uses a non-reentrant model
  4737 ;;
  4738                           
  4739                           
  4740                           ;psect for function _statemachine
  4741  2308                     _statemachine:	
  4742                           
  4743                           ;main.c: 103:     switch (currState) {
  4744                           
  4745                           ;incstack = 0
  4746                           ; Regs used in _statemachine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4747  2308  2B4F               	goto	l8059
  4748  2309                     l8029:	
  4749                           
  4750                           ;main.c: 106:             if (tmr1_flag) {
  4751  2309  086F               	movf	_tmr1_flag^(0+128),w	;volatile
  4752  230A  1903               	btfsc	3,2
  4753  230B  0008               	return
  4754                           
  4755                           ;main.c: 107:                 tmr1_flag = 0;
  4756  230C  01EF               	clrf	_tmr1_flag^(0+128)	;volatile
  4757                           
  4758                           ;main.c: 108:                 RGB_AWAIT_AFE_CONN();
  4759  230D  31AF  27DE  31A3   	fcall	_RGB_AWAIT_AFE_CONN
  4760                           
  4761                           ;main.c: 109:                 uint8_t success = beginAFEcommunication();
  4762  2310  3187  2743  31A3   	fcall	_beginAFEcommunication
  4763  2313  0020               	movlb	0	; select bank0
  4764  2314  0820               	movf	?_beginAFEcommunication,w
  4765  2315  0021               	movlb	1	; select bank1
  4766  2316  00E8               	movwf	??_statemachine^(0+128)
  4767  2317  0868               	movf	??_statemachine^(0+128),w
  4768  2318  00EA               	movwf	statemachine@success^(0+128)
  4769                           
  4770                           ;main.c: 114:                 if (success) {
  4771  2319  086A               	movf	statemachine@success^(0+128),w
  4772  231A  1903               	btfsc	3,2
  4773  231B  0008               	return
  4774                           
  4775                           ;main.c: 115:                     T1CONbits.TMR1ON = 0;
  4776  231C  0020               	movlb	0	; select bank0
  4777  231D  1018               	bcf	24,0	;volatile
  4778                           
  4779                           ;main.c: 116:                     PIE1bits.TMR1IE = 0;
  4780  231E  0021               	movlb	1	; select bank1
  4781  231F  1011               	bcf	17,0	;volatile
  4782                           
  4783                           ;main.c: 117:                     RGB_color(0);
  4784  2320  3000               	movlw	0
  4785  2321  00F1               	movwf	RGB_color@color
  4786  2322  00F2               	movwf	RGB_color@color+1
  4787  2323  31AF  27BD         	fcall	_RGB_color
  4788                           
  4789                           ;main.c: 118:                     tmr1_flag = 0;
  4790  2325  0021               	movlb	1	; select bank1
  4791  2326  01EF               	clrf	_tmr1_flag^(0+128)	;volatile
  4792                           
  4793                           ;main.c: 131:                     currState = 1;
  4794  2327  0022               	movlb	2	; select bank2
  4795  2328  01DA               	clrf	_currState^(0+256)
  4796  2329  0ADA               	incf	_currState^(0+256),f
  4797  232A  0008               	return
  4798  232B                     l8047:	
  4799                           
  4800                           ;main.c: 140:             init_AFE();
  4801  232B  31A2  22B2  31A3   	fcall	_init_AFE
  4802                           
  4803                           ;main.c: 159:             RGB_color(1);
  4804  232E  3001               	movlw	1
  4805  232F  00F1               	movwf	RGB_color@color
  4806  2330  3000               	movlw	0
  4807  2331  00F2               	movwf	RGB_color@color+1
  4808  2332  31AF  27BD         	fcall	_RGB_color
  4809                           
  4810                           ;main.c: 160:             currState = 2;
  4811  2334  3002               	movlw	2
  4812  2335  0021               	movlb	1	; select bank1
  4813  2336  00E8               	movwf	??_statemachine^(0+128)
  4814  2337  0868               	movf	??_statemachine^(0+128),w
  4815  2338  0022               	movlb	2	; select bank2
  4816  2339  00DA               	movwf	_currState^(0+256)
  4817                           
  4818                           ;main.c: 161:             break;
  4819  233A  0008               	return
  4820  233B                     l8051:	
  4821                           
  4822                           ;main.c: 165:             AFE_UPDATE();
  4823  233B  31AE  265B  31A3   	fcall	_AFE_UPDATE
  4824  233E  0064               	clrwdt	;# 
  4825                           
  4826                           ;main.c: 169:             printcellParameters();
  4827  233F  31A6  26C1  31A3   	fcall	_printcellParameters
  4828                           
  4829                           ;main.c: 171:             _delay((unsigned long)((5000)*(16000000/4000.0)));
  4830  2342  3066               	movlw	102
  4831  2343  0021               	movlb	1	; select bank1
  4832  2344  00E9               	movwf	(??_statemachine^(0+128)+1)
  4833  2345  3076               	movlw	118
  4834  2346  00E8               	movwf	??_statemachine^(0+128)
  4835  2347  30C1               	movlw	193
  4836  2348                     u11417:	
  4837  2348  0B89               	decfsz	9,f
  4838  2349  2B48               	goto	u11417
  4839  234A  0BE8               	decfsz	??_statemachine^(0+128),f
  4840  234B  2B48               	goto	u11417
  4841  234C  0BE9               	decfsz	(??_statemachine^(0+128)+1),f
  4842  234D  2B48               	goto	u11417
  4843                           
  4844                           ;main.c: 173:             break;
  4845  234E  0008               	return
  4846  234F                     l8059:	
  4847  234F  0022               	movlb	2	; select bank2
  4848  2350  085A               	movf	_currState^(0+256),w
  4849  2351  0021               	movlb	1	; select bank1
  4850  2352  00E8               	movwf	??_statemachine^(0+128)
  4851  2353  01E9               	clrf	(??_statemachine^(0+128)+1)
  4852                           
  4853                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4854                           ; Switch size 1, requested type "simple"
  4855                           ; Number of cases is 1, Range of values is 0 to 0
  4856                           ; switch strategies available:
  4857                           ; Name         Instructions Cycles
  4858                           ; simple_byte            4     3 (average)
  4859                           ; direct_byte            8     6 (fixed)
  4860                           ; jumptable            260     6 (fixed)
  4861                           ;	Chosen strategy is simple_byte
  4862  2354  0869               	movf	(??_statemachine+1)^(0+128),w
  4863  2355  3A00               	xorlw	0	; case 0
  4864  2356  1903               	skipnz
  4865  2357  2B59               	goto	l8381
  4866  2358  2B64               	goto	l159
  4867  2359                     l8381:	
  4868                           
  4869                           ; Switch size 1, requested type "simple"
  4870                           ; Number of cases is 3, Range of values is 0 to 2
  4871                           ; switch strategies available:
  4872                           ; Name         Instructions Cycles
  4873                           ; simple_byte           10     6 (average)
  4874                           ; direct_byte           12     6 (fixed)
  4875                           ; jumptable            260     6 (fixed)
  4876                           ;	Chosen strategy is simple_byte
  4877  2359  0868               	movf	??_statemachine^(0+128),w
  4878  235A  3A00               	xorlw	0	; case 0
  4879  235B  1903               	skipnz
  4880  235C  2B09               	goto	l8029
  4881  235D  3A01               	xorlw	1	; case 1
  4882  235E  1903               	skipnz
  4883  235F  2B2B               	goto	l8047
  4884  2360  3A03               	xorlw	3	; case 2
  4885  2361  1903               	skipnz
  4886  2362  2B3B               	goto	l8051
  4887  2363  2B64               	goto	l159
  4888  2364                     l159:	
  4889  2364  0008               	return
  4890  2365                     __end_of_statemachine:	
  4891                           
  4892                           	psect	text4
  4893  26C1                     __ptext4:	
  4894 ;; *************** function _printcellParameters *****************
  4895 ;; Defined at:
  4896 ;;		line 304 in file "BQ76920.c"
  4897 ;; Parameters:    Size  Location     Type
  4898 ;;		None
  4899 ;; Auto vars:     Size  Location     Type
  4900 ;;		None
  4901 ;; Return value:  Size  Location     Type
  4902 ;;                  1    wreg      void 
  4903 ;; Registers used:
  4904 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4905 ;; Tracked objects:
  4906 ;;		On entry : 0/0
  4907 ;;		On exit  : 0/0
  4908 ;;		Unchanged: 0/0
  4909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4914 ;;Total ram usage:        0 bytes
  4915 ;; Hardware stack levels used:    1
  4916 ;; Hardware stack levels required when called:   10
  4917 ;; This function calls:
  4918 ;;		_EUSART_Write_Text
  4919 ;;		_readRegister
  4920 ;;		_snprintf
  4921 ;; This function is called by:
  4922 ;;		_statemachine
  4923 ;; This function uses a non-reentrant model
  4924 ;;
  4925                           
  4926                           
  4927                           ;psect for function _printcellParameters
  4928  26C1                     _printcellParameters:	
  4929                           
  4930                           ;BQ76920.c: 305:     snprintf(messageBuffer, 127, "Cell batt: %i ,%d, %d , %d, %d, %d Ba
      +                          tt Curr: %i Temp: %i CTRL2: %i \n\r", batVoltage,cellVoltages[0],cellVoltages[1],cellVol
      +                          tages[2],cellVoltages[3],cellVoltages[4], batCurrent, temperatureThermistor,readRegister
      +                          (0x18, 0x05));
  4931                           
  4932                           ;incstack = 0
  4933                           ; Regs used in _printcellParameters: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4934  26C1  3071               	movlw	113
  4935  26C2  0021               	movlb	1	; select bank1
  4936  26C3  00CC               	movwf	snprintf@s^(0+128)
  4937  26C4  3027               	movlw	39
  4938  26C5  00CD               	movwf	(snprintf@s^(0+128)+1)
  4939  26C6  307F               	movlw	127
  4940  26C7  00CE               	movwf	snprintf@n^(0+128)
  4941  26C8  3000               	movlw	0
  4942  26C9  00CF               	movwf	(snprintf@n^(0+128)+1)
  4943  26CA  3002               	movlw	low (STR_1| (0+32768))
  4944  26CB  00D0               	movwf	snprintf@fmt^(0+128)
  4945  26CC  30A8               	movlw	high (STR_1| (0+32768))
  4946  26CD  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  4947  26CE  0022               	movlb	2	; select bank2
  4948  26CF  083D               	movf	(_batVoltage+3)^(0+256),w
  4949  26D0  0021               	movlb	1	; select bank1
  4950  26D1  00D5               	movwf	((?_snprintf+3)^(0+128)+6)
  4951  26D2  0022               	movlb	2	; select bank2
  4952  26D3  083C               	movf	(_batVoltage+2)^(0+256),w
  4953  26D4  0021               	movlb	1	; select bank1
  4954  26D5  00D4               	movwf	((?_snprintf+2)^(0+128)+6)
  4955  26D6  0022               	movlb	2	; select bank2
  4956  26D7  083B               	movf	(_batVoltage+1)^(0+256),w
  4957  26D8  0021               	movlb	1	; select bank1
  4958  26D9  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  4959  26DA  0022               	movlb	2	; select bank2
  4960  26DB  083A               	movf	_batVoltage^(0+256),w
  4961  26DC  0021               	movlb	1	; select bank1
  4962  26DD  00D2               	movwf	(?_snprintf^(0+128)+6)
  4963  26DE  0022               	movlb	2	; select bank2
  4964  26DF  0821               	movf	(_cellVoltages+1)^(0+256),w
  4965  26E0  0021               	movlb	1	; select bank1
  4966  26E1  00D7               	movwf	((?_snprintf+1)^(0+128)+10)
  4967  26E2  0022               	movlb	2	; select bank2
  4968  26E3  0820               	movf	_cellVoltages^(0+256),w
  4969  26E4  0021               	movlb	1	; select bank1
  4970  26E5  00D6               	movwf	(?_snprintf^(0+128)+10)
  4971  26E6  0022               	movlb	2	; select bank2
  4972  26E7  0823               	movf	((_cellVoltages+1)^(0+256)+2),w
  4973  26E8  0021               	movlb	1	; select bank1
  4974  26E9  00D9               	movwf	((?_snprintf+1)^(0+128)+12)
  4975  26EA  0022               	movlb	2	; select bank2
  4976  26EB  0822               	movf	(_cellVoltages^(0+256)+2),w
  4977  26EC  0021               	movlb	1	; select bank1
  4978  26ED  00D8               	movwf	(?_snprintf^(0+128)+12)
  4979  26EE  0022               	movlb	2	; select bank2
  4980  26EF  0825               	movf	((_cellVoltages+1)^(0+256)+4),w
  4981  26F0  0021               	movlb	1	; select bank1
  4982  26F1  00DB               	movwf	((?_snprintf+1)^(0+128)+14)
  4983  26F2  0022               	movlb	2	; select bank2
  4984  26F3  0824               	movf	(_cellVoltages^(0+256)+4),w
  4985  26F4  0021               	movlb	1	; select bank1
  4986  26F5  00DA               	movwf	(?_snprintf^(0+128)+14)
  4987  26F6  0022               	movlb	2	; select bank2
  4988  26F7  0827               	movf	((_cellVoltages+1)^(0+256)+6),w
  4989  26F8  0021               	movlb	1	; select bank1
  4990  26F9  00DD               	movwf	((?_snprintf+1)^(0+128)+16)
  4991  26FA  0022               	movlb	2	; select bank2
  4992  26FB  0826               	movf	(_cellVoltages^(0+256)+6),w
  4993  26FC  0021               	movlb	1	; select bank1
  4994  26FD  00DC               	movwf	(?_snprintf^(0+128)+16)
  4995  26FE  0022               	movlb	2	; select bank2
  4996  26FF  0829               	movf	((_cellVoltages+1)^(0+256)+8),w
  4997  2700  0021               	movlb	1	; select bank1
  4998  2701  00DF               	movwf	((?_snprintf+1)^(0+128)+18)
  4999  2702  0022               	movlb	2	; select bank2
  5000  2703  0828               	movf	(_cellVoltages^(0+256)+8),w
  5001  2704  0021               	movlb	1	; select bank1
  5002  2705  00DE               	movwf	(?_snprintf^(0+128)+18)
  5003  2706  0022               	movlb	2	; select bank2
  5004  2707  0839               	movf	(_batCurrent+3)^(0+256),w
  5005  2708  0021               	movlb	1	; select bank1
  5006  2709  00E3               	movwf	((?_snprintf+3)^(0+128)+20)
  5007  270A  0022               	movlb	2	; select bank2
  5008  270B  0838               	movf	(_batCurrent+2)^(0+256),w
  5009  270C  0021               	movlb	1	; select bank1
  5010  270D  00E2               	movwf	((?_snprintf+2)^(0+128)+20)
  5011  270E  0022               	movlb	2	; select bank2
  5012  270F  0837               	movf	(_batCurrent+1)^(0+256),w
  5013  2710  0021               	movlb	1	; select bank1
  5014  2711  00E1               	movwf	((?_snprintf+1)^(0+128)+20)
  5015  2712  0022               	movlb	2	; select bank2
  5016  2713  0836               	movf	_batCurrent^(0+256),w
  5017  2714  0021               	movlb	1	; select bank1
  5018  2715  00E0               	movwf	(?_snprintf^(0+128)+20)
  5019  2716  0022               	movlb	2	; select bank2
  5020  2717  0847               	movf	(_temperatureThermistor+1)^(0+256),w
  5021  2718  0021               	movlb	1	; select bank1
  5022  2719  00E5               	movwf	((?_snprintf+1)^(0+128)+24)
  5023  271A  0022               	movlb	2	; select bank2
  5024  271B  0846               	movf	_temperatureThermistor^(0+256),w
  5025  271C  0021               	movlb	1	; select bank1
  5026  271D  00E4               	movwf	(?_snprintf^(0+128)+24)
  5027  271E  3018               	movlw	24
  5028  271F  00F5               	movwf	readRegister@slaveAddress
  5029  2720  3000               	movlw	0
  5030  2721  00F6               	movwf	readRegister@slaveAddress+1
  5031  2722  3005               	movlw	5
  5032  2723  00F7               	movwf	readRegister@regAddress
  5033  2724  3000               	movlw	0
  5034  2725  00F8               	movwf	readRegister@regAddress+1
  5035  2726  31A1  2117  31A6   	fcall	_readRegister
  5036  2729  0876               	movf	?_readRegister+1,w
  5037  272A  0021               	movlb	1	; select bank1
  5038  272B  00E7               	movwf	((?_snprintf+1)^(0+128)+26)
  5039  272C  0875               	movf	?_readRegister,w
  5040  272D  00E6               	movwf	(?_snprintf^(0+128)+26)
  5041  272E  31AF  272C  31A6   	fcall	_snprintf
  5042                           
  5043                           ;BQ76920.c: 306:     EUSART_Write_Text(messageBuffer);
  5044  2731  3071               	movlw	113
  5045  2732  00F2               	movwf	EUSART_Write_Text@text
  5046  2733  3027               	movlw	39
  5047  2734  00F3               	movwf	EUSART_Write_Text@text+1
  5048  2735  31AE  26F7  31A6   	fcall	_EUSART_Write_Text
  5049                           
  5050                           ;BQ76920.c: 307:     snprintf(messageBuffer, 127, "0x05 SYS_CTRL2: %i \n\r", readRegiste
      +                          r(0x18, 0x05));
  5051  2738  3071               	movlw	113
  5052  2739  0021               	movlb	1	; select bank1
  5053  273A  00CC               	movwf	snprintf@s^(0+128)
  5054  273B  3027               	movlw	39
  5055  273C  00CD               	movwf	(snprintf@s^(0+128)+1)
  5056  273D  307F               	movlw	127
  5057  273E  00CE               	movwf	snprintf@n^(0+128)
  5058  273F  3000               	movlw	0
  5059  2740  00CF               	movwf	(snprintf@n^(0+128)+1)
  5060  2741  3036               	movlw	low (STR_2| (0+32768))
  5061  2742  00D0               	movwf	snprintf@fmt^(0+128)
  5062  2743  30B0               	movlw	high (STR_2| (0+32768))
  5063  2744  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5064  2745  3018               	movlw	24
  5065  2746  00F5               	movwf	readRegister@slaveAddress
  5066  2747  3000               	movlw	0
  5067  2748  00F6               	movwf	readRegister@slaveAddress+1
  5068  2749  3005               	movlw	5
  5069  274A  00F7               	movwf	readRegister@regAddress
  5070  274B  3000               	movlw	0
  5071  274C  00F8               	movwf	readRegister@regAddress+1
  5072  274D  31A1  2117  31A6   	fcall	_readRegister
  5073  2750  0876               	movf	?_readRegister+1,w
  5074  2751  0021               	movlb	1	; select bank1
  5075  2752  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5076  2753  0875               	movf	?_readRegister,w
  5077  2754  00D2               	movwf	(?_snprintf^(0+128)+6)
  5078  2755  31AF  272C  31A6   	fcall	_snprintf
  5079                           
  5080                           ;BQ76920.c: 309:     EUSART_Write_Text(messageBuffer);
  5081  2758  3071               	movlw	113
  5082  2759  00F2               	movwf	EUSART_Write_Text@text
  5083  275A  3027               	movlw	39
  5084  275B  00F3               	movwf	EUSART_Write_Text@text+1
  5085  275C  31AE  26F7         	fcall	_EUSART_Write_Text
  5086  275E  0008               	return
  5087  275F                     __end_of_printcellParameters:	
  5088                           
  5089                           	psect	text5
  5090  2F2C                     __ptext5:	
  5091 ;; *************** function _snprintf *****************
  5092 ;; Defined at:
  5093 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\snprintf.c"
  5094 ;; Parameters:    Size  Location     Type
  5095 ;;  s               2   44[BANK1 ] PTR unsigned char 
  5096 ;;		 -> messageBuffer(127), 
  5097 ;;  n               2   46[BANK1 ] unsigned int 
  5098 ;;  fmt             2   48[BANK1 ] PTR const unsigned char 
  5099 ;;		 -> STR_16(18), STR_15(18), STR_14(19), STR_13(20), 
  5100 ;;		 -> STR_12(20), STR_11(21), STR_10(21), STR_9(21), 
  5101 ;;		 -> STR_8(22), STR_7(22), STR_6(21), STR_5(21), 
  5102 ;;		 -> STR_2(22), STR_1(71), 
  5103 ;; Auto vars:     Size  Location     Type
  5104 ;;  ret             2    0        int 
  5105 ;;  ap              1   79[BANK0 ] PTR void [1]
  5106 ;;		 -> ?_snprintf(2), 
  5107 ;; Return value:  Size  Location     Type
  5108 ;;                  2   44[BANK1 ] int 
  5109 ;; Registers used:
  5110 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5111 ;; Tracked objects:
  5112 ;;		On entry : 0/0
  5113 ;;		On exit  : 0/0
  5114 ;;		Unchanged: 0/0
  5115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5116 ;;      Params:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5117 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5118 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5119 ;;      Totals:         0       4      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5120 ;;Total ram usage:       32 bytes
  5121 ;; Hardware stack levels used:    1
  5122 ;; Hardware stack levels required when called:    9
  5123 ;; This function calls:
  5124 ;;		_vsnprintf
  5125 ;; This function is called by:
  5126 ;;		_printcellParameters
  5127 ;;		_printotAFERegisters
  5128 ;; This function uses a non-reentrant model
  5129 ;;
  5130                           
  5131                           
  5132                           ;psect for function _snprintf
  5133  2F2C                     _snprintf:	
  5134                           
  5135                           ;incstack = 0
  5136                           ; Regs used in _snprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5137  2F2C  30D2               	movlw	(low ((?_snprintf| 0+6)))& (0+255)
  5138  2F2D  0020               	movlb	0	; select bank0
  5139  2F2E  00EC               	movwf	??_snprintf
  5140  2F2F  086C               	movf	??_snprintf,w
  5141  2F30  00EF               	movwf	snprintf@ap
  5142  2F31  0021               	movlb	1	; select bank1
  5143  2F32  084D               	movf	(snprintf@s+1)^(0+128),w
  5144  2F33  00BC               	movwf	(vsnprintf@s+1)^(0+128)
  5145  2F34  084C               	movf	snprintf@s^(0+128),w
  5146  2F35  00BB               	movwf	vsnprintf@s^(0+128)
  5147  2F36  084F               	movf	(snprintf@n+1)^(0+128),w
  5148  2F37  00BE               	movwf	(vsnprintf@n+1)^(0+128)
  5149  2F38  084E               	movf	snprintf@n^(0+128),w
  5150  2F39  00BD               	movwf	vsnprintf@n^(0+128)
  5151  2F3A  0851               	movf	(snprintf@fmt+1)^(0+128),w
  5152  2F3B  00C0               	movwf	(vsnprintf@fmt+1)^(0+128)
  5153  2F3C  0850               	movf	snprintf@fmt^(0+128),w
  5154  2F3D  00BF               	movwf	vsnprintf@fmt^(0+128)
  5155  2F3E  306F               	movlw	(low (snprintf@ap| 0))& (0+255)
  5156  2F3F  0020               	movlb	0	; select bank0
  5157  2F40  00EC               	movwf	??_snprintf
  5158  2F41  086C               	movf	??_snprintf,w
  5159  2F42  0021               	movlb	1	; select bank1
  5160  2F43  00C1               	movwf	vsnprintf@ap^(0+128)
  5161  2F44  31A5  252C         	fcall	_vsnprintf
  5162  2F46  0008               	return
  5163  2F47                     __end_of_snprintf:	
  5164                           
  5165                           	psect	text6
  5166  252C                     __ptext6:	
  5167 ;; *************** function _vsnprintf *****************
  5168 ;; Defined at:
  5169 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_vsnprintf.c"
  5170 ;; Parameters:    Size  Location     Type
  5171 ;;  s               2   27[BANK1 ] PTR unsigned char 
  5172 ;;		 -> messageBuffer(127), 
  5173 ;;  n               2   29[BANK1 ] unsigned int 
  5174 ;;  fmt             2   31[BANK1 ] PTR const unsigned char 
  5175 ;;		 -> STR_16(18), STR_15(18), STR_14(19), STR_13(20), 
  5176 ;;		 -> STR_12(20), STR_11(21), STR_10(21), STR_9(21), 
  5177 ;;		 -> STR_8(22), STR_7(22), STR_6(21), STR_5(21), 
  5178 ;;		 -> STR_2(22), STR_1(71), 
  5179 ;;  ap              1   33[BANK1 ] PTR PTR void 
  5180 ;;		 -> snprintf@ap(1), 
  5181 ;; Auto vars:     Size  Location     Type
  5182 ;;  f               6   38[BANK1 ] struct _IO_FILE
  5183 ;;  cnt             2   36[BANK1 ] int 
  5184 ;; Return value:  Size  Location     Type
  5185 ;;                  2   27[BANK1 ] int 
  5186 ;; Registers used:
  5187 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5188 ;; Tracked objects:
  5189 ;;		On entry : 0/0
  5190 ;;		On exit  : 0/0
  5191 ;;		Unchanged: 0/0
  5192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5193 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5194 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5195 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5196 ;;      Totals:         0       2      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5197 ;;Total ram usage:       19 bytes
  5198 ;; Hardware stack levels used:    1
  5199 ;; Hardware stack levels required when called:    8
  5200 ;; This function calls:
  5201 ;;		_vfprintf
  5202 ;; This function is called by:
  5203 ;;		_snprintf
  5204 ;; This function uses a non-reentrant model
  5205 ;;
  5206                           
  5207                           
  5208                           ;psect for function _vsnprintf
  5209  252C                     _vsnprintf:	
  5210                           
  5211                           ;incstack = 0
  5212                           ; Regs used in _vsnprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5213  252C  3080               	movlw	128
  5214  252D  0021               	movlb	1	; select bank1
  5215  252E  023E               	subwf	(vsnprintf@n+1)^(0+128),w
  5216  252F  3000               	movlw	0
  5217  2530  1903               	skipnz
  5218  2531  023D               	subwf	vsnprintf@n^(0+128),w
  5219  2532  1C03               	skipc
  5220  2533  2D3F               	goto	l7709
  5221  2534  304B               	movlw	75
  5222  2535  0022               	movlb	2	; select bank2
  5223  2536  00BE               	movwf	_errno^(0+256)
  5224  2537  3000               	movlw	0
  5225  2538  00BF               	movwf	(_errno^(0+256)+1)
  5226  2539  30FF               	movlw	255
  5227  253A  0021               	movlb	1	; select bank1
  5228  253B  00BB               	movwf	?_vsnprintf^(0+128)
  5229  253C  30FF               	movlw	255
  5230  253D  00BC               	movwf	(?_vsnprintf^(0+128)+1)
  5231  253E  0008               	return
  5232  253F                     l7709:	
  5233  253F  083C               	movf	(vsnprintf@s+1)^(0+128),w
  5234  2540  00C7               	movwf	(vsnprintf@f+1)^(0+128)
  5235  2541  083B               	movf	vsnprintf@s^(0+128),w
  5236  2542  00C6               	movwf	vsnprintf@f^(0+128)
  5237  2543  3000               	movlw	0
  5238  2544  023E               	subwf	(vsnprintf@n+1)^(0+128),w
  5239  2545  3002               	movlw	2
  5240  2546  1903               	skipnz
  5241  2547  023D               	subwf	vsnprintf@n^(0+128),w
  5242  2548  1C03               	skipc
  5243  2549  2D53               	goto	l7715
  5244  254A  083D               	movf	vsnprintf@n^(0+128),w
  5245  254B  3EFF               	addlw	255
  5246  254C  00CA               	movwf	(vsnprintf@f^(0+128)+4)
  5247  254D  30FF               	movlw	255
  5248  254E  3D3E               	addwfc	(vsnprintf@n+1)^(0+128),w
  5249  254F  00CB               	movwf	((vsnprintf@f+1)^(0+128)+4)
  5250  2550  01C8               	clrf	(vsnprintf@f^(0+128)+2)
  5251  2551  01C9               	clrf	((vsnprintf@f+1)^(0+128)+2)
  5252  2552  2D5B               	goto	l7717
  5253  2553                     l7715:	
  5254  2553  3001               	movlw	1
  5255  2554  00CA               	movwf	(vsnprintf@f^(0+128)+4)
  5256  2555  3000               	movlw	0
  5257  2556  00CB               	movwf	(vsnprintf@f^(0+128)+5)
  5258  2557  3001               	movlw	1
  5259  2558  00C8               	movwf	(vsnprintf@f^(0+128)+2)
  5260  2559  3000               	movlw	0
  5261  255A  00C9               	movwf	(vsnprintf@f^(0+128)+3)
  5262  255B                     l7717:	
  5263  255B  30C6               	movlw	low vsnprintf@f
  5264  255C  0020               	movlb	0	; select bank0
  5265  255D  00E1               	movwf	vfprintf@fp
  5266  255E  3000               	movlw	high vsnprintf@f
  5267  255F  00E2               	movwf	vfprintf@fp+1
  5268  2560  0021               	movlb	1	; select bank1
  5269  2561  0840               	movf	(vsnprintf@fmt+1)^(0+128),w
  5270  2562  0020               	movlb	0	; select bank0
  5271  2563  00E4               	movwf	vfprintf@fmt+1
  5272  2564  0021               	movlb	1	; select bank1
  5273  2565  083F               	movf	vsnprintf@fmt^(0+128),w
  5274  2566  0020               	movlb	0	; select bank0
  5275  2567  00E3               	movwf	vfprintf@fmt
  5276  2568  0021               	movlb	1	; select bank1
  5277  2569  0841               	movf	vsnprintf@ap^(0+128),w
  5278  256A  0020               	movlb	0	; select bank0
  5279  256B  00EA               	movwf	??_vsnprintf
  5280  256C  086A               	movf	??_vsnprintf,w
  5281  256D  00E5               	movwf	vfprintf@ap
  5282  256E  31A0  2082  31A5   	fcall	_vfprintf
  5283  2571  0020               	movlb	0	; select bank0
  5284  2572  0862               	movf	?_vfprintf+1,w
  5285  2573  0021               	movlb	1	; select bank1
  5286  2574  00C5               	movwf	(vsnprintf@cnt+1)^(0+128)
  5287  2575  0020               	movlb	0	; select bank0
  5288  2576  0861               	movf	?_vfprintf,w
  5289  2577  0021               	movlb	1	; select bank1
  5290  2578  00C4               	movwf	vsnprintf@cnt^(0+128)
  5291  2579  083D               	movf	vsnprintf@n^(0+128),w
  5292  257A  043E               	iorwf	(vsnprintf@n+1)^(0+128),w
  5293  257B  1D03               	btfss	3,2
  5294  257C  1BC5               	btfsc	(vsnprintf@cnt+1)^(0+128),7
  5295  257D  2DA4               	goto	l7731
  5296  257E  083D               	movf	vsnprintf@n^(0+128),w
  5297  257F  3EFF               	addlw	255
  5298  2580  0020               	movlb	0	; select bank0
  5299  2581  00EA               	movwf	??_vsnprintf
  5300  2582  30FF               	movlw	255
  5301  2583  0021               	movlb	1	; select bank1
  5302  2584  3D3E               	addwfc	(vsnprintf@n+1)^(0+128),w
  5303  2585  0020               	movlb	0	; select bank0
  5304  2586  00EB               	movwf	??_vsnprintf+1
  5305  2587  086B               	movf	??_vsnprintf+1,w
  5306  2588  0021               	movlb	1	; select bank1
  5307  2589  0245               	subwf	(vsnprintf@cnt+1)^(0+128),w
  5308  258A  1D03               	skipz
  5309  258B  2D90               	goto	u10915
  5310  258C  0020               	movlb	0	; select bank0
  5311  258D  086A               	movf	??_vsnprintf,w
  5312  258E  0021               	movlb	1	; select bank1
  5313  258F  0244               	subwf	vsnprintf@cnt^(0+128),w
  5314  2590                     u10915:	
  5315  2590  1C03               	skipc
  5316  2591  2D99               	goto	l7727
  5317  2592  083D               	movf	vsnprintf@n^(0+128),w
  5318  2593  3EFF               	addlw	255
  5319  2594  00C2               	movwf	_vsnprintf$1827^(0+128)
  5320  2595  30FF               	movlw	255
  5321  2596  3D3E               	addwfc	(vsnprintf@n+1)^(0+128),w
  5322  2597  00C3               	movwf	(_vsnprintf$1827+1)^(0+128)
  5323  2598  2D9D               	goto	l7729
  5324  2599                     l7727:	
  5325  2599  0845               	movf	(vsnprintf@cnt+1)^(0+128),w
  5326  259A  00C3               	movwf	(_vsnprintf$1827+1)^(0+128)
  5327  259B  0844               	movf	vsnprintf@cnt^(0+128),w
  5328  259C  00C2               	movwf	_vsnprintf$1827^(0+128)
  5329  259D                     l7729:	
  5330  259D  0842               	movf	_vsnprintf$1827^(0+128),w
  5331  259E  073B               	addwf	vsnprintf@s^(0+128),w
  5332  259F  0086               	movwf	6
  5333  25A0  0843               	movf	(_vsnprintf$1827+1)^(0+128),w
  5334  25A1  3D3C               	addwfc	(vsnprintf@s+1)^(0+128),w
  5335  25A2  0087               	movwf	7
  5336  25A3  0181               	clrf	1
  5337  25A4                     l7731:	
  5338  25A4  0845               	movf	(vsnprintf@cnt+1)^(0+128),w
  5339  25A5  00BC               	movwf	(?_vsnprintf+1)^(0+128)
  5340  25A6  0844               	movf	vsnprintf@cnt^(0+128),w
  5341  25A7  00BB               	movwf	?_vsnprintf^(0+128)
  5342  25A8  0008               	return
  5343  25A9                     __end_of_vsnprintf:	
  5344                           
  5345                           	psect	text7
  5346  2082                     __ptext7:	
  5347 ;; *************** function _vfprintf *****************
  5348 ;; Defined at:
  5349 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5350 ;; Parameters:    Size  Location     Type
  5351 ;;  fp              2   65[BANK0 ] PTR struct _IO_FILE
  5352 ;;		 -> vsnprintf@f(6), 
  5353 ;;  fmt             2   67[BANK0 ] PTR const unsigned char 
  5354 ;;		 -> STR_16(18), STR_15(18), STR_14(19), STR_13(20), 
  5355 ;;		 -> STR_12(20), STR_11(21), STR_10(21), STR_9(21), 
  5356 ;;		 -> STR_8(22), STR_7(22), STR_6(21), STR_5(21), 
  5357 ;;		 -> STR_2(22), STR_1(71), 
  5358 ;;  ap              1   69[BANK0 ] PTR PTR void 
  5359 ;;		 -> snprintf@ap(1), 
  5360 ;; Auto vars:     Size  Location     Type
  5361 ;;  cfmt            2   72[BANK0 ] PTR unsigned char 
  5362 ;;		 -> STR_16(18), STR_15(18), STR_14(19), STR_13(20), 
  5363 ;;		 -> STR_12(20), STR_11(21), STR_10(21), STR_9(21), 
  5364 ;;		 -> STR_8(22), STR_7(22), STR_6(21), STR_5(21), 
  5365 ;;		 -> STR_2(22), STR_1(71), 
  5366 ;; Return value:  Size  Location     Type
  5367 ;;                  2   65[BANK0 ] int 
  5368 ;; Registers used:
  5369 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5370 ;; Tracked objects:
  5371 ;;		On entry : 0/0
  5372 ;;		On exit  : 0/0
  5373 ;;		Unchanged: 0/0
  5374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5375 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5376 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5377 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5378 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5379 ;;Total ram usage:        9 bytes
  5380 ;; Hardware stack levels used:    1
  5381 ;; Hardware stack levels required when called:    7
  5382 ;; This function calls:
  5383 ;;		_vfpfcnvrt
  5384 ;; This function is called by:
  5385 ;;		_vsnprintf
  5386 ;; This function uses a non-reentrant model
  5387 ;;
  5388                           
  5389                           
  5390                           ;psect for function _vfprintf
  5391  2082                     _vfprintf:	
  5392                           
  5393                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  5394                           
  5395                           ;incstack = 0
  5396                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5397  2082  0020               	movlb	0	; select bank0
  5398  2083  0864               	movf	vfprintf@fmt+1,w
  5399  2084  00E9               	movwf	vfprintf@cfmt+1
  5400  2085  0863               	movf	vfprintf@fmt,w
  5401  2086  00E8               	movwf	vfprintf@cfmt
  5402                           
  5403                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  5404  2087  0022               	movlb	2	; select bank2
  5405  2088  01C0               	clrf	_nout^(0+256)
  5406  2089  01C1               	clrf	(_nout+1)^(0+256)
  5407  208A                     l7023:	
  5408                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5409                           
  5410                           
  5411                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5412  208A  0020               	movlb	0	; select bank0
  5413  208B  0868               	movf	vfprintf@cfmt,w
  5414  208C  0084               	movwf	4
  5415  208D  0869               	movf	vfprintf@cfmt+1,w
  5416  208E  0085               	movwf	5
  5417  208F  0012               	moviw fsr0++
  5418  2090  1903               	btfsc	3,2
  5419  2091  28AA               	goto	l7025
  5420                           
  5421                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  5422  2092  0862               	movf	vfprintf@fp+1,w
  5423  2093  00D8               	movwf	vfpfcnvrt@fp+1
  5424  2094  0861               	movf	vfprintf@fp,w
  5425  2095  00D7               	movwf	vfpfcnvrt@fp
  5426  2096  3068               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  5427  2097  00E6               	movwf	??_vfprintf
  5428  2098  0866               	movf	??_vfprintf,w
  5429  2099  00D9               	movwf	vfpfcnvrt@fmt
  5430  209A  0865               	movf	vfprintf@ap,w
  5431  209B  00E7               	movwf	??_vfprintf+1
  5432  209C  0867               	movf	??_vfprintf+1,w
  5433  209D  00DA               	movwf	vfpfcnvrt@ap
  5434  209E  3196  2659  31A0   	fcall	_vfpfcnvrt
  5435  20A1  0020               	movlb	0	; select bank0
  5436  20A2  0857               	movf	?_vfpfcnvrt,w
  5437  20A3  0022               	movlb	2	; select bank2
  5438  20A4  07C0               	addwf	_nout^(0+256),f
  5439  20A5  0020               	movlb	0	; select bank0
  5440  20A6  0858               	movf	?_vfpfcnvrt+1,w
  5441  20A7  0022               	movlb	2	; select bank2
  5442  20A8  3DC1               	addwfc	(_nout+1)^(0+256),f
  5443  20A9  288A               	goto	l7023
  5444  20AA                     l7025:	
  5445                           
  5446                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  5447  20AA  0022               	movlb	2	; select bank2
  5448  20AB  0841               	movf	(_nout+1)^(0+256),w
  5449  20AC  0020               	movlb	0	; select bank0
  5450  20AD  00E2               	movwf	?_vfprintf+1
  5451  20AE  0022               	movlb	2	; select bank2
  5452  20AF  0840               	movf	_nout^(0+256),w
  5453  20B0  0020               	movlb	0	; select bank0
  5454  20B1  00E1               	movwf	?_vfprintf
  5455  20B2  0008               	return
  5456  20B3                     __end_of_vfprintf:	
  5457                           
  5458                           	psect	text8
  5459  1659                     __ptext8:	
  5460 ;; *************** function _vfpfcnvrt *****************
  5461 ;; Defined at:
  5462 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5463 ;; Parameters:    Size  Location     Type
  5464 ;;  fp              2   55[BANK0 ] PTR struct _IO_FILE
  5465 ;;		 -> vsnprintf@f(6), 
  5466 ;;  fmt             1   57[BANK0 ] PTR PTR unsigned char 
  5467 ;;		 -> vfprintf@cfmt(2), 
  5468 ;;  ap              1   58[BANK0 ] PTR PTR void 
  5469 ;;		 -> snprintf@ap(1), 
  5470 ;; Auto vars:     Size  Location     Type
  5471 ;;  llu             8   19[BANK1 ] unsigned long long 
  5472 ;;  ll              8    8[BANK1 ] long long 
  5473 ;;  f               4    0        long long 
  5474 ;;  ct              3    0        unsigned char [3]
  5475 ;;  vp              2   16[BANK1 ] PTR void 
  5476 ;;		 -> ?_snprintf(2), thermistorBetaValue(2), adcGain(2), 
  5477 ;;  done            2    2[BANK1 ] int 
  5478 ;;  cp              2    0[BANK1 ] PTR unsigned char 
  5479 ;;		 -> ?_snprintf(2), thermistorBetaValue(2), adcGain(2), 
  5480 ;;  i               2    0        int 
  5481 ;;  c               1   18[BANK1 ] unsigned char 
  5482 ;; Return value:  Size  Location     Type
  5483 ;;                  2   55[BANK0 ] int 
  5484 ;; Registers used:
  5485 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5486 ;; Tracked objects:
  5487 ;;		On entry : 0/0
  5488 ;;		On exit  : 0/0
  5489 ;;		Unchanged: 0/0
  5490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5491 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5492 ;;      Locals:         0       0      27       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5493 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5494 ;;      Totals:         0      10      27       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5495 ;;Total ram usage:       37 bytes
  5496 ;; Hardware stack levels used:    1
  5497 ;; Hardware stack levels required when called:    6
  5498 ;; This function calls:
  5499 ;;		_atoi
  5500 ;;		_ctoa
  5501 ;;		_dtoa
  5502 ;;		_fputc
  5503 ;;		_isdigit
  5504 ;;		_otoa
  5505 ;;		_stoa
  5506 ;;		_strncmp
  5507 ;;		_utoa
  5508 ;;		_xtoa
  5509 ;; This function is called by:
  5510 ;;		_vfprintf
  5511 ;; This function uses a non-reentrant model
  5512 ;;
  5513                           
  5514                           
  5515                           ;psect for function _vfpfcnvrt
  5516  1659                     _vfpfcnvrt:	
  5517                           
  5518                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  5519                           
  5520                           ;incstack = 0
  5521                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5522  1659  0020               	movlb	0	; select bank0
  5523  165A  0859               	movf	vfpfcnvrt@fmt,w
  5524  165B  0086               	movwf	6
  5525  165C  0187               	clrf	7
  5526  165D  3F40               	moviw [0]fsr1
  5527  165E  00DB               	movwf	??_vfpfcnvrt
  5528  165F  3F41               	moviw [1]fsr1
  5529  1660  00DC               	movwf	??_vfpfcnvrt+1
  5530  1661  085B               	movf	??_vfpfcnvrt,w
  5531  1662  0084               	movwf	4
  5532  1663  085C               	movf	??_vfpfcnvrt+1,w
  5533  1664  0085               	movwf	5
  5534  1665  0012               	moviw fsr0++
  5535  1666  3A25               	xorlw	37
  5536  1667  1D03               	btfss	3,2
  5537  1668  2FFE               	goto	L7
  5538                           
  5539                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  5540  1669  0859               	movf	vfpfcnvrt@fmt,w
  5541  166A  0086               	movwf	6
  5542  166B  0187               	clrf	7
  5543  166C  3001               	movlw	1
  5544  166D  0781               	addwf	1,f
  5545  166E  3141               	addfsr 1,1
  5546  166F  1803               	skipnc
  5547  1670  0A81               	incf	1,f
  5548                           
  5549                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  5550  1671  0022               	movlb	2	; select bank2
  5551  1672  01C2               	clrf	_width^(0+256)
  5552  1673  01C3               	clrf	(_width+1)^(0+256)
  5553  1674  0021               	movlb	1	; select bank1
  5554  1675  01ED               	clrf	_flags^(0+128)
  5555  1676  01EE               	clrf	(_flags+1)^(0+128)
  5556                           
  5557                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  5558  1677  30FF               	movlw	255
  5559  1678  0022               	movlb	2	; select bank2
  5560  1679  00C4               	movwf	_prec^(0+256)
  5561  167A  30FF               	movlw	255
  5562  167B  00C5               	movwf	(_prec^(0+256)+1)
  5563                           
  5564                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  5565  167C  0021               	movlb	1	; select bank1
  5566  167D  01A2               	clrf	vfpfcnvrt@done^(0+128)
  5567  167E  01A3               	clrf	(vfpfcnvrt@done+1)^(0+128)
  5568                           
  5569                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  5570  167F  2E9D               	goto	l6659
  5571  1680                     l761:	
  5572                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 691:       
      +                                    case '-' :
  5573                           
  5574                           
  5575                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  5576  1680  0021               	movlb	1	; select bank1
  5577  1681  146D               	bsf	_flags^(0+128),0
  5578  1682                     l6643:	
  5579                           
  5580                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  5581  1682  0020               	movlb	0	; select bank0
  5582  1683  0859               	movf	vfpfcnvrt@fmt,w
  5583  1684  0086               	movwf	6
  5584  1685  0187               	clrf	7
  5585  1686  3001               	movlw	1
  5586  1687  0781               	addwf	1,f
  5587  1688  3141               	addfsr 1,1
  5588  1689  1803               	skipnc
  5589  168A  0A81               	incf	1,f
  5590                           
  5591                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  5592  168B  2E9D               	goto	l6659
  5593  168C                     l763:	
  5594                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 695:       
      +                                    case '0' :
  5595                           
  5596                           
  5597                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  5598  168C  0021               	movlb	1	; select bank1
  5599  168D  14ED               	bsf	_flags^(0+128),1
  5600  168E  2E82               	goto	l6643
  5601  168F                     l764:	
  5602                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 699:       
      +                                    case '+' :
  5603                           
  5604                           
  5605                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  5606  168F  0021               	movlb	1	; select bank1
  5607  1690  156D               	bsf	_flags^(0+128),2
  5608  1691  2E82               	goto	l6643
  5609  1692                     l765:	
  5610                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 703:       
      +                                    case ' ' :
  5611                           
  5612                           
  5613                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  5614  1692  0021               	movlb	1	; select bank1
  5615  1693  15ED               	bsf	_flags^(0+128),3
  5616  1694  2E82               	goto	l6643
  5617  1695                     l766:	
  5618                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 707:       
      +                                    case '#' :
  5619                           
  5620                           
  5621                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  5622  1695  0021               	movlb	1	; select bank1
  5623  1696  166D               	bsf	_flags^(0+128),4
  5624  1697  2E82               	goto	l6643
  5625  1698                     l6653:	
  5626                           
  5627                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  5628  1698  3001               	movlw	1
  5629  1699  0021               	movlb	1	; select bank1
  5630  169A  00A2               	movwf	vfpfcnvrt@done^(0+128)
  5631  169B  3000               	movlw	0
  5632  169C  00A3               	movwf	(vfpfcnvrt@done^(0+128)+1)
  5633  169D                     l6659:	
  5634                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  5635                           
  5636                           
  5637                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  5638  169D  0021               	movlb	1	; select bank1
  5639  169E  0822               	movf	vfpfcnvrt@done^(0+128),w
  5640  169F  0423               	iorwf	(vfpfcnvrt@done+1)^(0+128),w
  5641  16A0  1D03               	btfss	3,2
  5642  16A1  2EC8               	goto	l768
  5643  16A2  0020               	movlb	0	; select bank0
  5644  16A3  0859               	movf	vfpfcnvrt@fmt,w
  5645  16A4  0086               	movwf	6
  5646  16A5  0187               	clrf	7
  5647  16A6  3F40               	moviw [0]fsr1
  5648  16A7  00DB               	movwf	??_vfpfcnvrt
  5649  16A8  3F41               	moviw [1]fsr1
  5650  16A9  00DC               	movwf	??_vfpfcnvrt+1
  5651  16AA  085B               	movf	??_vfpfcnvrt,w
  5652  16AB  0084               	movwf	4
  5653  16AC  085C               	movf	??_vfpfcnvrt+1,w
  5654  16AD  0085               	movwf	5
  5655  16AE  0800               	movf	0,w	;code access
  5656  16AF  00DD               	movwf	??_vfpfcnvrt+2
  5657  16B0  01DE               	clrf	??_vfpfcnvrt+3
  5658                           
  5659                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5660                           ; Switch size 1, requested type "simple"
  5661                           ; Number of cases is 1, Range of values is 0 to 0
  5662                           ; switch strategies available:
  5663                           ; Name         Instructions Cycles
  5664                           ; simple_byte            4     3 (average)
  5665                           ; direct_byte            8     6 (fixed)
  5666                           ; jumptable            260     6 (fixed)
  5667                           ;	Chosen strategy is simple_byte
  5668  16B1  085E               	movf	??_vfpfcnvrt+3,w
  5669  16B2  3A00               	xorlw	0	; case 0
  5670  16B3  1903               	skipnz
  5671  16B4  2EB6               	goto	l8383
  5672  16B5  2E98               	goto	l6653
  5673  16B6                     l8383:	
  5674                           
  5675                           ; Switch size 1, requested type "simple"
  5676                           ; Number of cases is 5, Range of values is 32 to 48
  5677                           ; switch strategies available:
  5678                           ; Name         Instructions Cycles
  5679                           ; simple_byte           16     9 (average)
  5680                           ; direct_byte           43     9 (fixed)
  5681                           ; jumptable            263     9 (fixed)
  5682                           ;	Chosen strategy is simple_byte
  5683  16B6  085D               	movf	??_vfpfcnvrt+2,w
  5684  16B7  3A20               	xorlw	32	; case 32
  5685  16B8  1903               	skipnz
  5686  16B9  2E92               	goto	l765
  5687  16BA  3A03               	xorlw	3	; case 35
  5688  16BB  1903               	skipnz
  5689  16BC  2E95               	goto	l766
  5690  16BD  3A08               	xorlw	8	; case 43
  5691  16BE  1903               	skipnz
  5692  16BF  2E8F               	goto	l764
  5693  16C0  3A06               	xorlw	6	; case 45
  5694  16C1  1903               	skipnz
  5695  16C2  2E80               	goto	l761
  5696  16C3  3A1D               	xorlw	29	; case 48
  5697  16C4  1903               	skipnz
  5698  16C5  2E8C               	goto	l763
  5699  16C6  2E98               	goto	l6653
  5700  16C7  2E9D               	goto	l6659
  5701  16C8                     l768:	
  5702                           
  5703                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  5704  16C8  1C6D               	btfss	_flags^(0+128),0
  5705  16C9  2ECE               	goto	l6663
  5706                           
  5707                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  5708  16CA  30FD               	movlw	253
  5709  16CB  05ED               	andwf	_flags^(0+128),f
  5710  16CC  30FF               	movlw	255
  5711  16CD  05EE               	andwf	(_flags+1)^(0+128),f
  5712  16CE                     l6663:	
  5713                           
  5714                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  5715  16CE  0020               	movlb	0	; select bank0
  5716  16CF  0859               	movf	vfpfcnvrt@fmt,w
  5717  16D0  0086               	movwf	6
  5718  16D1  0187               	clrf	7
  5719  16D2  3F40               	moviw [0]fsr1
  5720  16D3  00DB               	movwf	??_vfpfcnvrt
  5721  16D4  3F41               	moviw [1]fsr1
  5722  16D5  00DC               	movwf	??_vfpfcnvrt+1
  5723  16D6  085B               	movf	??_vfpfcnvrt,w
  5724  16D7  0084               	movwf	4
  5725  16D8  085C               	movf	??_vfpfcnvrt+1,w
  5726  16D9  0085               	movwf	5
  5727  16DA  0012               	moviw fsr0++
  5728  16DB  3A2A               	xorlw	42
  5729  16DC  1D03               	btfss	3,2
  5730  16DD  2EFE               	goto	l6675
  5731                           
  5732                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  5733  16DE  0859               	movf	vfpfcnvrt@fmt,w
  5734  16DF  0086               	movwf	6
  5735  16E0  0187               	clrf	7
  5736  16E1  3001               	movlw	1
  5737  16E2  0781               	addwf	1,f
  5738  16E3  3141               	addfsr 1,1
  5739  16E4  1803               	skipnc
  5740  16E5  0A81               	incf	1,f
  5741                           
  5742                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  5743  16E6  085A               	movf	vfpfcnvrt@ap,w
  5744  16E7  0086               	movwf	6
  5745  16E8  0187               	clrf	7
  5746  16E9  0801               	movf	1,w
  5747  16EA  0084               	movwf	4
  5748  16EB  0185               	clrf	5
  5749  16EC  3002               	movlw	2
  5750  16ED  0781               	addwf	1,f
  5751  16EE  3F00               	moviw [0]fsr0
  5752  16EF  0022               	movlb	2	; select bank2
  5753  16F0  00C2               	movwf	_width^(0+256)
  5754  16F1  3F01               	moviw [1]fsr0
  5755  16F2  00C3               	movwf	(_width+1)^(0+256)
  5756                           
  5757                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  5758  16F3  1FC3               	btfss	(_width+1)^(0+256),7
  5759  16F4  2F41               	goto	l6685
  5760                           
  5761                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  5762  16F5  0021               	movlb	1	; select bank1
  5763  16F6  146D               	bsf	_flags^(0+128),0
  5764                           
  5765                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  5766  16F7  0022               	movlb	2	; select bank2
  5767  16F8  09C2               	comf	_width^(0+256),f
  5768  16F9  09C3               	comf	(_width+1)^(0+256),f
  5769  16FA  0AC2               	incf	_width^(0+256),f
  5770  16FB  1903               	skipnz
  5771  16FC  0AC3               	incf	(_width+1)^(0+256),f
  5772  16FD  2F41               	goto	l6685
  5773  16FE                     l6675:	
  5774                           
  5775                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  5776  16FE  0859               	movf	vfpfcnvrt@fmt,w
  5777  16FF  0086               	movwf	6
  5778  1700  0187               	clrf	7
  5779  1701  3F40               	moviw [0]fsr1
  5780  1702  00F7               	movwf	atoi@s
  5781  1703  3F41               	moviw [1]fsr1
  5782  1704  00F8               	movwf	atoi@s+1
  5783  1705  31A7  275F  3196   	fcall	_atoi
  5784  1708  0878               	movf	?_atoi+1,w
  5785  1709  0022               	movlb	2	; select bank2
  5786  170A  00C3               	movwf	(_width+1)^(0+256)
  5787  170B  0877               	movf	?_atoi,w
  5788  170C  00C2               	movwf	_width^(0+256)
  5789                           
  5790                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5791  170D  2F17               	goto	l6679
  5792  170E                     l6677:	
  5793                           
  5794                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  5795  170E  0020               	movlb	0	; select bank0
  5796  170F  0859               	movf	vfpfcnvrt@fmt,w
  5797  1710  0086               	movwf	6
  5798  1711  0187               	clrf	7
  5799  1712  3001               	movlw	1
  5800  1713  0781               	addwf	1,f
  5801  1714  3141               	addfsr 1,1
  5802  1715  1803               	skipnc
  5803  1716  0A81               	incf	1,f
  5804  1717                     l6679:	
  5805  1717  0020               	movlb	0	; select bank0
  5806  1718  0859               	movf	vfpfcnvrt@fmt,w
  5807  1719  0086               	movwf	6
  5808  171A  0187               	clrf	7
  5809  171B  3F40               	moviw [0]fsr1
  5810  171C  00DB               	movwf	??_vfpfcnvrt
  5811  171D  3F41               	moviw [1]fsr1
  5812  171E  00DC               	movwf	??_vfpfcnvrt+1
  5813  171F  085B               	movf	??_vfpfcnvrt,w
  5814  1720  0084               	movwf	4
  5815  1721  085C               	movf	??_vfpfcnvrt+1,w
  5816  1722  0085               	movwf	5
  5817  1723  0800               	movf	0,w	;code access
  5818  1724  3ED0               	addlw	208
  5819  1725  00DD               	movwf	??_vfpfcnvrt+2
  5820  1726  30FF               	movlw	255
  5821  1727  1803               	skipnc
  5822  1728  3000               	movlw	0
  5823  1729  00DE               	movwf	??_vfpfcnvrt+3
  5824  172A  3000               	movlw	0
  5825  172B  025E               	subwf	??_vfpfcnvrt+3,w
  5826  172C  300A               	movlw	10
  5827  172D  1903               	skipnz
  5828  172E  025D               	subwf	??_vfpfcnvrt+2,w
  5829  172F  1803               	btfsc	3,0
  5830  1730  2F33               	goto	u8950
  5831  1731  3001               	movlw	1
  5832  1732  2F34               	goto	u8960
  5833  1733                     u8950:	
  5834  1733  3000               	movlw	0
  5835  1734                     u8960:	
  5836  1734  00DF               	movwf	??_vfpfcnvrt+4
  5837  1735  01E0               	clrf	??_vfpfcnvrt+5
  5838  1736  085F               	movf	??_vfpfcnvrt+4,w
  5839  1737  0021               	movlb	1	; select bank1
  5840  1738  00A4               	movwf	_vfpfcnvrt$1255^(0+128)
  5841  1739  0020               	movlb	0	; select bank0
  5842  173A  0860               	movf	??_vfpfcnvrt+5,w
  5843  173B  0021               	movlb	1	; select bank1
  5844  173C  00A5               	movwf	(_vfpfcnvrt$1255+1)^(0+128)
  5845  173D  0824               	movf	_vfpfcnvrt$1255^(0+128),w
  5846  173E  0425               	iorwf	(_vfpfcnvrt$1255+1)^(0+128),w
  5847  173F  1D03               	btfss	3,2
  5848  1740  2F0E               	goto	l6677
  5849  1741                     l6685:	
  5850                           
  5851                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  5852  1741  0020               	movlb	0	; select bank0
  5853  1742  0859               	movf	vfpfcnvrt@fmt,w
  5854  1743  0086               	movwf	6
  5855  1744  0187               	clrf	7
  5856  1745  3F40               	moviw [0]fsr1
  5857  1746  00DB               	movwf	??_vfpfcnvrt
  5858  1747  3F41               	moviw [1]fsr1
  5859  1748  00DC               	movwf	??_vfpfcnvrt+1
  5860  1749  085B               	movf	??_vfpfcnvrt,w
  5861  174A  0084               	movwf	4
  5862  174B  085C               	movf	??_vfpfcnvrt+1,w
  5863  174C  0085               	movwf	5
  5864  174D  0012               	moviw fsr0++
  5865  174E  3A2E               	xorlw	46
  5866  174F  1D03               	btfss	3,2
  5867  1750  2FC5               	goto	l6707
  5868                           
  5869                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  5870  1751  0022               	movlb	2	; select bank2
  5871  1752  01C4               	clrf	_prec^(0+256)
  5872  1753  01C5               	clrf	(_prec+1)^(0+256)
  5873                           
  5874                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  5875  1754  0020               	movlb	0	; select bank0
  5876  1755  0859               	movf	vfpfcnvrt@fmt,w
  5877  1756  0086               	movwf	6
  5878  1757  0187               	clrf	7
  5879  1758  3001               	movlw	1
  5880  1759  0781               	addwf	1,f
  5881  175A  3141               	addfsr 1,1
  5882  175B  1803               	skipnc
  5883  175C  0A81               	incf	1,f
  5884                           
  5885                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  5886  175D  0859               	movf	vfpfcnvrt@fmt,w
  5887  175E  0086               	movwf	6
  5888  175F  0187               	clrf	7
  5889  1760  3F40               	moviw [0]fsr1
  5890  1761  00DB               	movwf	??_vfpfcnvrt
  5891  1762  3F41               	moviw [1]fsr1
  5892  1763  00DC               	movwf	??_vfpfcnvrt+1
  5893  1764  085B               	movf	??_vfpfcnvrt,w
  5894  1765  0084               	movwf	4
  5895  1766  085C               	movf	??_vfpfcnvrt+1,w
  5896  1767  0085               	movwf	5
  5897  1768  0012               	moviw fsr0++
  5898  1769  3A2A               	xorlw	42
  5899  176A  1D03               	btfss	3,2
  5900  176B  2F82               	goto	l6697
  5901                           
  5902                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  5903  176C  0859               	movf	vfpfcnvrt@fmt,w
  5904  176D  0086               	movwf	6
  5905  176E  0187               	clrf	7
  5906  176F  3001               	movlw	1
  5907  1770  0781               	addwf	1,f
  5908  1771  3141               	addfsr 1,1
  5909  1772  1803               	skipnc
  5910  1773  0A81               	incf	1,f
  5911                           
  5912                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  5913  1774  085A               	movf	vfpfcnvrt@ap,w
  5914  1775  0086               	movwf	6
  5915  1776  0187               	clrf	7
  5916  1777  0801               	movf	1,w
  5917  1778  0084               	movwf	4
  5918  1779  0185               	clrf	5
  5919  177A  3002               	movlw	2
  5920  177B  0781               	addwf	1,f
  5921  177C  3F00               	moviw [0]fsr0
  5922  177D  0022               	movlb	2	; select bank2
  5923  177E  00C4               	movwf	_prec^(0+256)
  5924  177F  3F01               	moviw [1]fsr0
  5925  1780  00C5               	movwf	(_prec+1)^(0+256)
  5926                           
  5927                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  5928  1781  2FC5               	goto	l6707
  5929  1782                     l6697:	
  5930                           
  5931                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  5932  1782  0859               	movf	vfpfcnvrt@fmt,w
  5933  1783  0086               	movwf	6
  5934  1784  0187               	clrf	7
  5935  1785  3F40               	moviw [0]fsr1
  5936  1786  00F7               	movwf	atoi@s
  5937  1787  3F41               	moviw [1]fsr1
  5938  1788  00F8               	movwf	atoi@s+1
  5939  1789  31A7  275F  3196   	fcall	_atoi
  5940  178C  0878               	movf	?_atoi+1,w
  5941  178D  0022               	movlb	2	; select bank2
  5942  178E  00C5               	movwf	(_prec+1)^(0+256)
  5943  178F  0877               	movf	?_atoi,w
  5944  1790  00C4               	movwf	_prec^(0+256)
  5945                           
  5946                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5947  1791  2F9B               	goto	l6701
  5948  1792                     l6699:	
  5949                           
  5950                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  5951  1792  0020               	movlb	0	; select bank0
  5952  1793  0859               	movf	vfpfcnvrt@fmt,w
  5953  1794  0086               	movwf	6
  5954  1795  0187               	clrf	7
  5955  1796  3001               	movlw	1
  5956  1797  0781               	addwf	1,f
  5957  1798  3141               	addfsr 1,1
  5958  1799  1803               	skipnc
  5959  179A  0A81               	incf	1,f
  5960  179B                     l6701:	
  5961  179B  0020               	movlb	0	; select bank0
  5962  179C  0859               	movf	vfpfcnvrt@fmt,w
  5963  179D  0086               	movwf	6
  5964  179E  0187               	clrf	7
  5965  179F  3F40               	moviw [0]fsr1
  5966  17A0  00DB               	movwf	??_vfpfcnvrt
  5967  17A1  3F41               	moviw [1]fsr1
  5968  17A2  00DC               	movwf	??_vfpfcnvrt+1
  5969  17A3  085B               	movf	??_vfpfcnvrt,w
  5970  17A4  0084               	movwf	4
  5971  17A5  085C               	movf	??_vfpfcnvrt+1,w
  5972  17A6  0085               	movwf	5
  5973  17A7  0800               	movf	0,w	;code access
  5974  17A8  3ED0               	addlw	208
  5975  17A9  00DD               	movwf	??_vfpfcnvrt+2
  5976  17AA  30FF               	movlw	255
  5977  17AB  1803               	skipnc
  5978  17AC  3000               	movlw	0
  5979  17AD  00DE               	movwf	??_vfpfcnvrt+3
  5980  17AE  3000               	movlw	0
  5981  17AF  025E               	subwf	??_vfpfcnvrt+3,w
  5982  17B0  300A               	movlw	10
  5983  17B1  1903               	skipnz
  5984  17B2  025D               	subwf	??_vfpfcnvrt+2,w
  5985  17B3  1803               	btfsc	3,0
  5986  17B4  2FB7               	goto	u9000
  5987  17B5  3001               	movlw	1
  5988  17B6  2FB8               	goto	u9010
  5989  17B7                     u9000:	
  5990  17B7  3000               	movlw	0
  5991  17B8                     u9010:	
  5992  17B8  00DF               	movwf	??_vfpfcnvrt+4
  5993  17B9  01E0               	clrf	??_vfpfcnvrt+5
  5994  17BA  085F               	movf	??_vfpfcnvrt+4,w
  5995  17BB  0021               	movlb	1	; select bank1
  5996  17BC  00A6               	movwf	_vfpfcnvrt$1256^(0+128)
  5997  17BD  0020               	movlb	0	; select bank0
  5998  17BE  0860               	movf	??_vfpfcnvrt+5,w
  5999  17BF  0021               	movlb	1	; select bank1
  6000  17C0  00A7               	movwf	(_vfpfcnvrt$1256+1)^(0+128)
  6001  17C1  0826               	movf	_vfpfcnvrt$1256^(0+128),w
  6002  17C2  0427               	iorwf	(_vfpfcnvrt$1256+1)^(0+128),w
  6003  17C3  1D03               	btfss	3,2
  6004  17C4  2F92               	goto	l6699
  6005  17C5                     l6707:	
  6006                           
  6007                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  6008  17C5  0020               	movlb	0	; select bank0
  6009  17C6  0859               	movf	vfpfcnvrt@fmt,w
  6010  17C7  0086               	movwf	6
  6011  17C8  0187               	clrf	7
  6012  17C9  3F40               	moviw [0]fsr1
  6013  17CA  00DB               	movwf	??_vfpfcnvrt
  6014  17CB  3F41               	moviw [1]fsr1
  6015  17CC  00DC               	movwf	??_vfpfcnvrt+1
  6016  17CD  085B               	movf	??_vfpfcnvrt,w
  6017  17CE  0084               	movwf	4
  6018  17CF  085C               	movf	??_vfpfcnvrt+1,w
  6019  17D0  0085               	movwf	5
  6020  17D1  0012               	moviw fsr0++
  6021  17D2  3A63               	xorlw	99
  6022  17D3  319F  1D03         	btfss	3,2
  6023  17D5  2F06               	goto	l6717
  6024                           
  6025                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  6026  17D6  0859               	movf	vfpfcnvrt@fmt,w
  6027  17D7  0086               	movwf	6
  6028  17D8  0187               	clrf	7
  6029  17D9  3001               	movlw	1
  6030  17DA  0781               	addwf	1,f
  6031  17DB  3141               	addfsr 1,1
  6032  17DC  1803               	skipnc
  6033  17DD  0A81               	incf	1,f
  6034                           
  6035                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6036  17DE  085A               	movf	vfpfcnvrt@ap,w
  6037  17DF  0086               	movwf	6
  6038  17E0  0187               	clrf	7
  6039  17E1  0801               	movf	1,w
  6040  17E2  0084               	movwf	4
  6041  17E3  0185               	clrf	5
  6042  17E4  3002               	movlw	2
  6043  17E5  0781               	addwf	1,f
  6044  17E6  0800               	movf	0,w
  6045  17E7  00DB               	movwf	??_vfpfcnvrt
  6046  17E8  085B               	movf	??_vfpfcnvrt,w
  6047  17E9  0021               	movlb	1	; select bank1
  6048  17EA  00B2               	movwf	vfpfcnvrt@c^(0+128)
  6049                           
  6050                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  6051  17EB  0020               	movlb	0	; select bank0
  6052  17EC  0858               	movf	vfpfcnvrt@fp+1,w
  6053  17ED  00B1               	movwf	ctoa@fp+1
  6054  17EE  0857               	movf	vfpfcnvrt@fp,w
  6055  17EF  00B0               	movwf	ctoa@fp
  6056  17F0  0021               	movlb	1	; select bank1
  6057  17F1  0832               	movf	vfpfcnvrt@c^(0+128),w
  6058  17F2  0020               	movlb	0	; select bank0
  6059  17F3  00DB               	movwf	??_vfpfcnvrt
  6060  17F4  085B               	movf	??_vfpfcnvrt,w
  6061  17F5  00B2               	movwf	ctoa@c
  6062  17F6  31A0  2051         	fcall	_ctoa
  6063  17F8  0020               	movlb	0	; select bank0
  6064  17F9  0831               	movf	?_ctoa+1,w
  6065  17FA  00D8               	movwf	?_vfpfcnvrt+1
  6066  17FB  0830               	movf	?_ctoa,w
  6067  17FC  00D7               	movwf	?_vfpfcnvrt
  6068  17FD  0008               	return
  6069  17FE                     L7:	
  6070  17FE                     L6:	
  6071  17FE  318F  2FDD         	ljmp	l6985
  6072                           
  6073                           	psect	text9
  6074  1384                     __ptext9:	
  6075 ;; *************** function _xtoa *****************
  6076 ;; Defined at:
  6077 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6078 ;; Parameters:    Size  Location     Type
  6079 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  6080 ;;		 -> vsnprintf@f(6), 
  6081 ;;  d               8   18[BANK0 ] unsigned long long 
  6082 ;;  x               1   26[BANK0 ] unsigned char 
  6083 ;; Auto vars:     Size  Location     Type
  6084 ;;  n               8   43[BANK0 ] unsigned long long 
  6085 ;;  c               2   53[BANK0 ] int 
  6086 ;;  i               2   51[BANK0 ] int 
  6087 ;;  w               2   41[BANK0 ] int 
  6088 ;;  p               2   39[BANK0 ] int 
  6089 ;; Return value:  Size  Location     Type
  6090 ;;                  2   16[BANK0 ] int 
  6091 ;; Registers used:
  6092 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6093 ;; Tracked objects:
  6094 ;;		On entry : 0/0
  6095 ;;		On exit  : 0/0
  6096 ;;		Unchanged: 0/0
  6097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6098 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6099 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6100 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6101 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6102 ;;Total ram usage:       39 bytes
  6103 ;; Hardware stack levels used:    1
  6104 ;; Hardware stack levels required when called:    5
  6105 ;; This function calls:
  6106 ;;		_isalpha
  6107 ;;		_isupper
  6108 ;;		_pad
  6109 ;;		_toupper
  6110 ;; This function is called by:
  6111 ;;		_vfpfcnvrt
  6112 ;; This function uses a non-reentrant model
  6113 ;;
  6114                           
  6115                           
  6116                           ;psect for function _xtoa
  6117  1384                     _xtoa:	
  6118                           
  6119                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  6120                           
  6121                           ;incstack = 0
  6122                           ; Regs used in _xtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6123  1384  0022               	movlb	2	; select bank2
  6124  1385  1BC5               	btfsc	(_prec+1)^(0+256),7
  6125  1386  2B8C               	goto	l727
  6126                           
  6127                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  6128  1387  30FD               	movlw	253
  6129  1388  0021               	movlb	1	; select bank1
  6130  1389  05ED               	andwf	_flags^(0+128),f
  6131  138A  30FF               	movlw	255
  6132  138B  05EE               	andwf	(_flags+1)^(0+128),f
  6133  138C                     l727:	
  6134                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 631:     }
  6135                           
  6136                           
  6137                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  6138  138C  0022               	movlb	2	; select bank2
  6139  138D  0845               	movf	(_prec+1)^(0+256),w
  6140  138E  3A80               	xorlw	128
  6141  138F  0020               	movlb	0	; select bank0
  6142  1390  00BB               	movwf	??_xtoa
  6143  1391  3080               	movlw	128
  6144  1392  023B               	subwf	??_xtoa,w
  6145  1393  1D03               	skipz
  6146  1394  2B98               	goto	u8625
  6147  1395  3001               	movlw	1
  6148  1396  0022               	movlb	2	; select bank2
  6149  1397  0244               	subwf	_prec^(0+256),w
  6150  1398                     u8625:	
  6151  1398  1803               	skipnc
  6152  1399  2BA0               	goto	l6507
  6153  139A  3001               	movlw	1
  6154  139B  0020               	movlb	0	; select bank0
  6155  139C  00C7               	movwf	xtoa@p
  6156  139D  3000               	movlw	0
  6157  139E  00C8               	movwf	xtoa@p+1
  6158  139F  2BA8               	goto	l731
  6159  13A0                     l6507:	
  6160  13A0  0022               	movlb	2	; select bank2
  6161  13A1  0845               	movf	(_prec+1)^(0+256),w
  6162  13A2  0020               	movlb	0	; select bank0
  6163  13A3  00C8               	movwf	xtoa@p+1
  6164  13A4  0022               	movlb	2	; select bank2
  6165  13A5  0844               	movf	_prec^(0+256),w
  6166  13A6  0020               	movlb	0	; select bank0
  6167  13A7  00C7               	movwf	xtoa@p
  6168  13A8                     l731:	
  6169                           
  6170                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  6171  13A8  0022               	movlb	2	; select bank2
  6172  13A9  0843               	movf	(_width+1)^(0+256),w
  6173  13AA  0020               	movlb	0	; select bank0
  6174  13AB  00CA               	movwf	xtoa@w+1
  6175  13AC  0022               	movlb	2	; select bank2
  6176  13AD  0842               	movf	_width^(0+256),w
  6177  13AE  0020               	movlb	0	; select bank0
  6178  13AF  00C9               	movwf	xtoa@w
  6179                           
  6180                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  6181  13B0  0021               	movlb	1	; select bank1
  6182  13B1  1E6D               	btfss	_flags^(0+128),4
  6183  13B2  2BB8               	goto	l6513
  6184                           
  6185                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  6186  13B3  30FE               	movlw	254
  6187  13B4  0020               	movlb	0	; select bank0
  6188  13B5  07C9               	addwf	xtoa@w,f
  6189  13B6  30FF               	movlw	255
  6190  13B7  3DCA               	addwfc	xtoa@w+1,f
  6191  13B8                     l6513:	
  6192                           
  6193                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  6194  13B8  0020               	movlb	0	; select bank0
  6195  13B9  0832               	movf	xtoa@d,w
  6196  13BA  00CB               	movwf	xtoa@n
  6197  13BB  0833               	movf	xtoa@d+1,w
  6198  13BC  00CC               	movwf	xtoa@n+1
  6199  13BD  0834               	movf	xtoa@d+2,w
  6200  13BE  00CD               	movwf	xtoa@n+2
  6201  13BF  0835               	movf	xtoa@d+3,w
  6202  13C0  00CE               	movwf	xtoa@n+3
  6203  13C1  0836               	movf	xtoa@d+4,w
  6204  13C2  00CF               	movwf	xtoa@n+4
  6205  13C3  0837               	movf	xtoa@d+5,w
  6206  13C4  00D0               	movwf	xtoa@n+5
  6207  13C5  0838               	movf	xtoa@d+6,w
  6208  13C6  00D1               	movwf	xtoa@n+6
  6209  13C7  0839               	movf	xtoa@d+7,w
  6210  13C8  00D2               	movwf	xtoa@n+7
  6211                           
  6212                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  6213  13C9  301F               	movlw	31
  6214  13CA  00D3               	movwf	xtoa@i
  6215  13CB  3000               	movlw	0
  6216  13CC  00D4               	movwf	xtoa@i+1
  6217                           
  6218                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  6219  13CD  0023               	movlb	3	; select bank3
  6220  13CE  01BF               	clrf	(_dbuf^(0+384)+31)
  6221                           
  6222                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6223  13CF  2C7A               	goto	l6545
  6224  13D0                     l6517:	
  6225                           
  6226                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  6227  13D0  30FF               	movlw	255
  6228  13D1  0020               	movlb	0	; select bank0
  6229  13D2  07D3               	addwf	xtoa@i,f
  6230  13D3  30FF               	movlw	255
  6231  13D4  3DD4               	addwfc	xtoa@i+1,f
  6232                           
  6233                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  6234  13D5  300F               	movlw	15
  6235  13D6  054B               	andwf	xtoa@n,w
  6236  13D7  00D5               	movwf	xtoa@c
  6237  13D8  3000               	movlw	0
  6238  13D9  054C               	andwf	xtoa@n+1,w
  6239  13DA  00D6               	movwf	xtoa@c+1
  6240                           
  6241                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  6242  13DB  0856               	movf	xtoa@c+1,w
  6243  13DC  3A80               	xorlw	128
  6244  13DD  00BB               	movwf	??_xtoa
  6245  13DE  3080               	movlw	128
  6246  13DF  023B               	subwf	??_xtoa,w
  6247  13E0  1D03               	skipz
  6248  13E1  2BE4               	goto	u8645
  6249  13E2  300A               	movlw	10
  6250  13E3  0255               	subwf	xtoa@c,w
  6251  13E4                     u8645:	
  6252  13E4  1C03               	skipc
  6253  13E5  2BEA               	goto	l6521
  6254  13E6  0020               	movlb	0	; select bank0
  6255  13E7  0855               	movf	xtoa@c,w
  6256  13E8  3E57               	addlw	87
  6257  13E9  2BED               	goto	L1
  6258  13EA                     l6521:	
  6259  13EA  0020               	movlb	0	; select bank0
  6260  13EB  0855               	movf	xtoa@c,w
  6261  13EC  3E30               	addlw	48
  6262  13ED                     L1:	
  6263  13ED  00D5               	movwf	xtoa@c
  6264  13EE  3000               	movlw	0
  6265  13EF  3D56               	addwfc	xtoa@c+1,w
  6266  13F0  00D6               	movwf	xtoa@c+1
  6267  13F1  083A               	movf	xtoa@x,w
  6268  13F2  3EBF               	addlw	191
  6269  13F3  00BB               	movwf	??_xtoa
  6270  13F4  30FF               	movlw	255
  6271  13F5  1803               	skipnc
  6272  13F6  3000               	movlw	0
  6273  13F7  00BC               	movwf	??_xtoa+1
  6274  13F8  3000               	movlw	0
  6275  13F9  023C               	subwf	??_xtoa+1,w
  6276  13FA  301A               	movlw	26
  6277  13FB  1903               	skipnz
  6278  13FC  023B               	subwf	??_xtoa,w
  6279  13FD  1803               	btfsc	3,0
  6280  13FE  2C01               	goto	u8650
  6281  13FF  3001               	movlw	1
  6282  1400  2C02               	goto	u8660
  6283  1401                     u8650:	
  6284  1401  3000               	movlw	0
  6285  1402                     u8660:	
  6286  1402  00BD               	movwf	??_xtoa+2
  6287  1403  01BE               	clrf	??_xtoa+3
  6288  1404  083D               	movf	??_xtoa+2,w
  6289  1405  00C3               	movwf	_xtoa$1240
  6290  1406  083E               	movf	??_xtoa+3,w
  6291  1407  00C4               	movwf	_xtoa$1240+1
  6292  1408  0843               	movf	_xtoa$1240,w
  6293  1409  0444               	iorwf	_xtoa$1240+1,w
  6294  140A  1903               	btfsc	3,2
  6295  140B  2C38               	goto	l6537
  6296  140C  3020               	movlw	32
  6297  140D  0455               	iorwf	xtoa@c,w
  6298  140E  00BB               	movwf	??_xtoa
  6299  140F  3000               	movlw	0
  6300  1410  0456               	iorwf	xtoa@c+1,w
  6301  1411  00BC               	movwf	??_xtoa+1
  6302  1412  083B               	movf	??_xtoa,w
  6303  1413  3E9F               	addlw	159
  6304  1414  00BD               	movwf	??_xtoa+2
  6305  1415  30FF               	movlw	255
  6306  1416  3D3C               	addwfc	??_xtoa+1,w
  6307  1417  00BE               	movwf	??_xtoa+3
  6308  1418  3000               	movlw	0
  6309  1419  023E               	subwf	??_xtoa+3,w
  6310  141A  301A               	movlw	26
  6311  141B  1903               	skipnz
  6312  141C  023D               	subwf	??_xtoa+2,w
  6313  141D  1803               	btfsc	3,0
  6314  141E  2C21               	goto	u8680
  6315  141F  3001               	movlw	1
  6316  1420  2C22               	goto	u8690
  6317  1421                     u8680:	
  6318  1421  3000               	movlw	0
  6319  1422                     u8690:	
  6320  1422  00BF               	movwf	??_xtoa+4
  6321  1423  01C0               	clrf	??_xtoa+5
  6322  1424  083F               	movf	??_xtoa+4,w
  6323  1425  00C5               	movwf	_xtoa$1241
  6324  1426  0840               	movf	??_xtoa+5,w
  6325  1427  00C6               	movwf	_xtoa$1241+1
  6326  1428  0845               	movf	_xtoa$1241,w
  6327  1429  0446               	iorwf	_xtoa$1241+1,w
  6328  142A  1903               	btfsc	3,2
  6329  142B  2C38               	goto	l6537
  6330                           
  6331                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  6332  142C  0856               	movf	xtoa@c+1,w
  6333  142D  00F8               	movwf	toupper@c+1
  6334  142E  0855               	movf	xtoa@c,w
  6335  142F  00F7               	movwf	toupper@c
  6336  1430  31A0  2009  3193   	fcall	_toupper
  6337  1433  0878               	movf	?_toupper+1,w
  6338  1434  0020               	movlb	0	; select bank0
  6339  1435  00D6               	movwf	xtoa@c+1
  6340  1436  0877               	movf	?_toupper,w
  6341  1437  00D5               	movwf	xtoa@c
  6342  1438                     l6537:	
  6343                           
  6344                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  6345  1438  0855               	movf	xtoa@c,w
  6346  1439  00BB               	movwf	??_xtoa
  6347  143A  0853               	movf	xtoa@i,w
  6348  143B  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6349  143C  0086               	movwf	6
  6350  143D  3001               	movlw	1	; select bank3/4
  6351  143E  0087               	movwf	7
  6352  143F  083B               	movf	??_xtoa,w
  6353  1440  0081               	movwf	1
  6354                           
  6355                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  6356  1441  30FF               	movlw	255
  6357  1442  07C7               	addwf	xtoa@p,f
  6358  1443  30FF               	movlw	255
  6359  1444  3DC8               	addwfc	xtoa@p+1,f
  6360                           
  6361                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  6362  1445  30FF               	movlw	255
  6363  1446  07C9               	addwf	xtoa@w,f
  6364  1447  30FF               	movlw	255
  6365  1448  3DCA               	addwfc	xtoa@w+1,f
  6366                           
  6367                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  6368  1449  304B               	movlw	low xtoa@n
  6369  144A  0086               	movwf	6
  6370  144B  3000               	movlw	high xtoa@n
  6371  144C  0087               	movwf	7
  6372  144D  3F40               	moviw [0]fsr1
  6373  144E  00BB               	movwf	??_xtoa
  6374  144F  3F41               	moviw [1]fsr1
  6375  1450  00BC               	movwf	??_xtoa+1
  6376  1451  3F42               	moviw [2]fsr1
  6377  1452  00BD               	movwf	??_xtoa+2
  6378  1453  3F43               	moviw [3]fsr1
  6379  1454  00BE               	movwf	??_xtoa+3
  6380  1455  3F44               	moviw [4]fsr1
  6381  1456  00BF               	movwf	??_xtoa+4
  6382  1457  3F45               	moviw [5]fsr1
  6383  1458  00C0               	movwf	??_xtoa+5
  6384  1459  3F46               	moviw [6]fsr1
  6385  145A  00C1               	movwf	??_xtoa+6
  6386  145B  3F47               	moviw [7]fsr1
  6387  145C  00C2               	movwf	??_xtoa+7
  6388  145D  3004               	movlw	4
  6389  145E                     u8715:	
  6390  145E  0020               	movlb	0	; select bank0
  6391  145F  36C2               	lsrf	??_xtoa+7,f
  6392  1460  0CC1               	rrf	??_xtoa+6,f
  6393  1461  0CC0               	rrf	??_xtoa+5,f
  6394  1462  0CBF               	rrf	??_xtoa+4,f
  6395  1463  0CBE               	rrf	??_xtoa+3,f
  6396  1464  0CBD               	rrf	??_xtoa+2,f
  6397  1465  0CBC               	rrf	??_xtoa+1,f
  6398  1466  0CBB               	rrf	??_xtoa,f
  6399  1467  0B89               	decfsz	9,f
  6400  1468  2C5E               	goto	u8715
  6401  1469  0020               	movlb	0	; select bank0
  6402  146A  0842               	movf	??_xtoa+7,w
  6403  146B  00D2               	movwf	xtoa@n+7
  6404  146C  0841               	movf	??_xtoa+6,w
  6405  146D  00D1               	movwf	xtoa@n+6
  6406  146E  0840               	movf	??_xtoa+5,w
  6407  146F  00D0               	movwf	xtoa@n+5
  6408  1470  083F               	movf	??_xtoa+4,w
  6409  1471  00CF               	movwf	xtoa@n+4
  6410  1472  083E               	movf	??_xtoa+3,w
  6411  1473  00CE               	movwf	xtoa@n+3
  6412  1474  083D               	movf	??_xtoa+2,w
  6413  1475  00CD               	movwf	xtoa@n+2
  6414  1476  083C               	movf	??_xtoa+1,w
  6415  1477  00CC               	movwf	xtoa@n+1
  6416  1478  083B               	movf	??_xtoa,w
  6417  1479  00CB               	movwf	xtoa@n
  6418  147A                     l6545:	
  6419                           
  6420                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6421  147A  0020               	movlb	0	; select bank0
  6422  147B  0854               	movf	xtoa@i+1,w
  6423  147C  3A80               	xorlw	128
  6424  147D  00BB               	movwf	??_xtoa
  6425  147E  3080               	movlw	128
  6426  147F  023B               	subwf	??_xtoa,w
  6427  1480  1D03               	skipz
  6428  1481  2C84               	goto	u8725
  6429  1482  3002               	movlw	2
  6430  1483  0253               	subwf	xtoa@i,w
  6431  1484                     u8725:	
  6432  1484  1C03               	skipc
  6433  1485  2CAB               	goto	l752
  6434  1486  0020               	movlb	0	; select bank0
  6435  1487  084B               	movf	xtoa@n,w
  6436  1488  044C               	iorwf	xtoa@n+1,w
  6437  1489  044D               	iorwf	xtoa@n+2,w
  6438  148A  044E               	iorwf	xtoa@n+3,w
  6439  148B  044F               	iorwf	xtoa@n+4,w
  6440  148C  0450               	iorwf	xtoa@n+5,w
  6441  148D  0451               	iorwf	xtoa@n+6,w
  6442  148E  0452               	iorwf	xtoa@n+7,w
  6443  148F  1D03               	skipz
  6444  1490  2BD0               	goto	l6517
  6445  1491  0848               	movf	xtoa@p+1,w
  6446  1492  3A80               	xorlw	128
  6447  1493  00BB               	movwf	??_xtoa
  6448  1494  3080               	movlw	128
  6449  1495  023B               	subwf	??_xtoa,w
  6450  1496  1D03               	skipz
  6451  1497  2C9A               	goto	u8745
  6452  1498  3001               	movlw	1
  6453  1499  0247               	subwf	xtoa@p,w
  6454  149A                     u8745:	
  6455  149A  1803               	skipnc
  6456  149B  2BD0               	goto	l6517
  6457  149C  0020               	movlb	0	; select bank0
  6458  149D  084A               	movf	xtoa@w+1,w
  6459  149E  3A80               	xorlw	128
  6460  149F  00BB               	movwf	??_xtoa
  6461  14A0  3080               	movlw	128
  6462  14A1  023B               	subwf	??_xtoa,w
  6463  14A2  1D03               	skipz
  6464  14A3  2CA6               	goto	u8755
  6465  14A4  3001               	movlw	1
  6466  14A5  0249               	subwf	xtoa@w,w
  6467  14A6                     u8755:	
  6468  14A6  1C03               	skipc
  6469  14A7  2CAB               	goto	l752
  6470  14A8  0021               	movlb	1	; select bank1
  6471  14A9  18ED               	btfsc	_flags^(0+128),1
  6472  14AA  2BD0               	goto	l6517
  6473  14AB                     l752:	
  6474                           
  6475                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  6476  14AB  0021               	movlb	1	; select bank1
  6477  14AC  1E6D               	btfss	_flags^(0+128),4
  6478  14AD  2CC9               	goto	l6561
  6479                           
  6480                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  6481  14AE  30FF               	movlw	255
  6482  14AF  0020               	movlb	0	; select bank0
  6483  14B0  07D3               	addwf	xtoa@i,f
  6484  14B1  30FF               	movlw	255
  6485  14B2  3DD4               	addwfc	xtoa@i+1,f
  6486                           
  6487                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  6488  14B3  083A               	movf	xtoa@x,w
  6489  14B4  00BB               	movwf	??_xtoa
  6490  14B5  0853               	movf	xtoa@i,w
  6491  14B6  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6492  14B7  0086               	movwf	6
  6493  14B8  3001               	movlw	1	; select bank3/4
  6494  14B9  0087               	movwf	7
  6495  14BA  083B               	movf	??_xtoa,w
  6496  14BB  0081               	movwf	1
  6497                           
  6498                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  6499  14BC  30FF               	movlw	255
  6500  14BD  07D3               	addwf	xtoa@i,f
  6501  14BE  30FF               	movlw	255
  6502  14BF  3DD4               	addwfc	xtoa@i+1,f
  6503                           
  6504                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  6505  14C0  3030               	movlw	48
  6506  14C1  00BB               	movwf	??_xtoa
  6507  14C2  0853               	movf	xtoa@i,w
  6508  14C3  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6509  14C4  0086               	movwf	6
  6510  14C5  3001               	movlw	1	; select bank3/4
  6511  14C6  0087               	movwf	7
  6512  14C7  083B               	movf	??_xtoa,w
  6513  14C8  0081               	movwf	1
  6514  14C9                     l6561:	
  6515                           
  6516                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  6517  14C9  0020               	movlb	0	; select bank0
  6518  14CA  0831               	movf	xtoa@fp+1,w
  6519  14CB  00A7               	movwf	pad@fp+1
  6520  14CC  0830               	movf	xtoa@fp,w
  6521  14CD  00A6               	movwf	pad@fp
  6522  14CE  0853               	movf	xtoa@i,w
  6523  14CF  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6524  14D0  00BB               	movwf	??_xtoa
  6525  14D1  083B               	movf	??_xtoa,w
  6526  14D2  00A8               	movwf	pad@buf
  6527  14D3  084A               	movf	xtoa@w+1,w
  6528  14D4  00AA               	movwf	pad@p+1
  6529  14D5  0849               	movf	xtoa@w,w
  6530  14D6  00A9               	movwf	pad@p
  6531  14D7  31A1  21BB         	fcall	_pad
  6532  14D9  0020               	movlb	0	; select bank0
  6533  14DA  0827               	movf	?_pad+1,w
  6534  14DB  00B1               	movwf	?_xtoa+1
  6535  14DC  0826               	movf	?_pad,w
  6536  14DD  00B0               	movwf	?_xtoa
  6537  14DE  0008               	return
  6538  14DF                     __end_of_xtoa:	
  6539                           
  6540                           	psect	text10
  6541  2009                     __ptext10:	
  6542 ;; *************** function _toupper *****************
  6543 ;; Defined at:
  6544 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  6545 ;; Parameters:    Size  Location     Type
  6546 ;;  c               2    7[COMMON] int 
  6547 ;; Auto vars:     Size  Location     Type
  6548 ;;		None
  6549 ;; Return value:  Size  Location     Type
  6550 ;;                  2    7[COMMON] int 
  6551 ;; Registers used:
  6552 ;;		wreg, status,2, status,0
  6553 ;; Tracked objects:
  6554 ;;		On entry : 0/0
  6555 ;;		On exit  : 0/0
  6556 ;;		Unchanged: 0/0
  6557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6558 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6559 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6560 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6561 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6562 ;;Total ram usage:        8 bytes
  6563 ;; Hardware stack levels used:    1
  6564 ;; Hardware stack levels required when called:    2
  6565 ;; This function calls:
  6566 ;;		_islower
  6567 ;; This function is called by:
  6568 ;;		_xtoa
  6569 ;; This function uses a non-reentrant model
  6570 ;;
  6571                           
  6572                           
  6573                           ;psect for function _toupper
  6574  2009                     _toupper:	
  6575                           
  6576                           ;incstack = 0
  6577                           ; Regs used in _toupper: [wreg+status,2+status,0]
  6578  2009  0877               	movf	toupper@c,w
  6579  200A  3E9F               	addlw	159
  6580  200B  0020               	movlb	0	; select bank0
  6581  200C  00A0               	movwf	??_toupper
  6582  200D  30FF               	movlw	255
  6583  200E  3D78               	addwfc	toupper@c+1,w
  6584  200F  00A1               	movwf	??_toupper+1
  6585  2010  3000               	movlw	0
  6586  2011  0221               	subwf	??_toupper+1,w
  6587  2012  301A               	movlw	26
  6588  2013  1903               	skipnz
  6589  2014  0220               	subwf	??_toupper,w
  6590  2015  1803               	btfsc	3,0
  6591  2016  2819               	goto	u7770
  6592  2017  3001               	movlw	1
  6593  2018  281A               	goto	u7780
  6594  2019                     u7770:	
  6595  2019  3000               	movlw	0
  6596  201A                     u7780:	
  6597  201A  00A2               	movwf	??_toupper+2
  6598  201B  01A3               	clrf	??_toupper+3
  6599  201C  0822               	movf	??_toupper+2,w
  6600  201D  00F9               	movwf	_toupper$1790
  6601  201E  0823               	movf	??_toupper+3,w
  6602  201F  00FA               	movwf	_toupper$1790+1
  6603  2020  0879               	movf	_toupper$1790,w
  6604  2021  047A               	iorwf	_toupper$1790+1,w
  6605  2022  1903               	btfsc	3,2
  6606  2023  0008               	return
  6607  2024  305F               	movlw	95
  6608  2025  0577               	andwf	toupper@c,w
  6609  2026  00F7               	movwf	?_toupper
  6610  2027  3000               	movlw	0
  6611  2028  0578               	andwf	toupper@c+1,w
  6612  2029  00F8               	movwf	?_toupper+1
  6613  202A  0008               	return
  6614  202B                     __end_of_toupper:	
  6615                           
  6616                           	psect	text11
  6617  2EC8                     __ptext11:	
  6618 ;; *************** function _islower *****************
  6619 ;; Defined at:
  6620 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  6621 ;; Parameters:    Size  Location     Type
  6622 ;;  c               2    1[COMMON] int 
  6623 ;; Auto vars:     Size  Location     Type
  6624 ;;		None
  6625 ;; Return value:  Size  Location     Type
  6626 ;;                  2    1[COMMON] int 
  6627 ;; Registers used:
  6628 ;;		wreg, status,2, status,0
  6629 ;; Tracked objects:
  6630 ;;		On entry : 0/0
  6631 ;;		On exit  : 0/0
  6632 ;;		Unchanged: 0/0
  6633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6634 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6636 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6637 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6638 ;;Total ram usage:        6 bytes
  6639 ;; Hardware stack levels used:    1
  6640 ;; Hardware stack levels required when called:    1
  6641 ;; This function calls:
  6642 ;;		Nothing
  6643 ;; This function is called by:
  6644 ;;		_toupper
  6645 ;; This function uses a non-reentrant model
  6646 ;;
  6647                           
  6648                           
  6649                           ;psect for function _islower
  6650  2EC8                     _islower:	
  6651                           
  6652                           ;incstack = 0
  6653                           ; Regs used in _islower: [wreg+status,2+status,0]
  6654  2EC8  0871               	movf	islower@c,w
  6655  2EC9  3E9F               	addlw	159
  6656  2ECA  00F3               	movwf	??_islower
  6657  2ECB  30FF               	movlw	255
  6658  2ECC  3D72               	addwfc	islower@c+1,w
  6659  2ECD  00F4               	movwf	??_islower+1
  6660  2ECE  3000               	movlw	0
  6661  2ECF  0274               	subwf	??_islower+1,w
  6662  2ED0  301A               	movlw	26
  6663  2ED1  1903               	skipnz
  6664  2ED2  0273               	subwf	??_islower,w
  6665  2ED3  1803               	btfsc	3,0
  6666  2ED4  2ED7               	goto	u7660
  6667  2ED5  3001               	movlw	1
  6668  2ED6  2ED8               	goto	u7670
  6669  2ED7                     u7660:	
  6670  2ED7  3000               	movlw	0
  6671  2ED8                     u7670:	
  6672  2ED8  00F5               	movwf	??_islower+2
  6673  2ED9  01F6               	clrf	??_islower+3
  6674  2EDA  0875               	movf	??_islower+2,w
  6675  2EDB  00F1               	movwf	?_islower
  6676  2EDC  0876               	movf	??_islower+3,w
  6677  2EDD  00F2               	movwf	?_islower+1
  6678  2EDE  0008               	return
  6679  2EDF                     __end_of_islower:	
  6680                           
  6681                           	psect	text12
  6682  2EB1                     __ptext12:	
  6683 ;; *************** function _isupper *****************
  6684 ;; Defined at:
  6685 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  6686 ;; Parameters:    Size  Location     Type
  6687 ;;  c               2    1[COMMON] int 
  6688 ;; Auto vars:     Size  Location     Type
  6689 ;;		None
  6690 ;; Return value:  Size  Location     Type
  6691 ;;                  2    1[COMMON] int 
  6692 ;; Registers used:
  6693 ;;		wreg, status,2, status,0
  6694 ;; Tracked objects:
  6695 ;;		On entry : 0/0
  6696 ;;		On exit  : 0/0
  6697 ;;		Unchanged: 0/0
  6698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6699 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6701 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6702 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6703 ;;Total ram usage:        6 bytes
  6704 ;; Hardware stack levels used:    1
  6705 ;; Hardware stack levels required when called:    1
  6706 ;; This function calls:
  6707 ;;		Nothing
  6708 ;; This function is called by:
  6709 ;;		_xtoa
  6710 ;; This function uses a non-reentrant model
  6711 ;;
  6712                           
  6713                           
  6714                           ;psect for function _isupper
  6715  2EB1                     _isupper:	
  6716                           
  6717                           ;incstack = 0
  6718                           ; Regs used in _isupper: [wreg+status,2+status,0]
  6719  2EB1  0871               	movf	isupper@c,w
  6720  2EB2  3EBF               	addlw	191
  6721  2EB3  00F3               	movwf	??_isupper
  6722  2EB4  30FF               	movlw	255
  6723  2EB5  3D72               	addwfc	isupper@c+1,w
  6724  2EB6  00F4               	movwf	??_isupper+1
  6725  2EB7  3000               	movlw	0
  6726  2EB8  0274               	subwf	??_isupper+1,w
  6727  2EB9  301A               	movlw	26
  6728  2EBA  1903               	skipnz
  6729  2EBB  0273               	subwf	??_isupper,w
  6730  2EBC  1803               	btfsc	3,0
  6731  2EBD  2EC0               	goto	u7730
  6732  2EBE  3001               	movlw	1
  6733  2EBF  2EC1               	goto	u7740
  6734  2EC0                     u7730:	
  6735  2EC0  3000               	movlw	0
  6736  2EC1                     u7740:	
  6737  2EC1  00F5               	movwf	??_isupper+2
  6738  2EC2  01F6               	clrf	??_isupper+3
  6739  2EC3  0875               	movf	??_isupper+2,w
  6740  2EC4  00F1               	movwf	?_isupper
  6741  2EC5  0876               	movf	??_isupper+3,w
  6742  2EC6  00F2               	movwf	?_isupper+1
  6743  2EC7  0008               	return
  6744  2EC8                     __end_of_isupper:	
  6745                           
  6746                           	psect	text13
  6747  2F63                     __ptext13:	
  6748 ;; *************** function _isalpha *****************
  6749 ;; Defined at:
  6750 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  6751 ;; Parameters:    Size  Location     Type
  6752 ;;  c               2    1[COMMON] int 
  6753 ;; Auto vars:     Size  Location     Type
  6754 ;;		None
  6755 ;; Return value:  Size  Location     Type
  6756 ;;                  2    1[COMMON] int 
  6757 ;; Registers used:
  6758 ;;		wreg, status,2, status,0
  6759 ;; Tracked objects:
  6760 ;;		On entry : 0/0
  6761 ;;		On exit  : 0/0
  6762 ;;		Unchanged: 0/0
  6763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6764 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6766 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6767 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6768 ;;Total ram usage:        8 bytes
  6769 ;; Hardware stack levels used:    1
  6770 ;; Hardware stack levels required when called:    1
  6771 ;; This function calls:
  6772 ;;		Nothing
  6773 ;; This function is called by:
  6774 ;;		_xtoa
  6775 ;; This function uses a non-reentrant model
  6776 ;;
  6777                           
  6778                           
  6779                           ;psect for function _isalpha
  6780  2F63                     _isalpha:	
  6781                           
  6782                           ;incstack = 0
  6783                           ; Regs used in _isalpha: [wreg+status,2+status,0]
  6784  2F63  3020               	movlw	32
  6785  2F64  0471               	iorwf	isalpha@c,w
  6786  2F65  00F3               	movwf	??_isalpha
  6787  2F66  3000               	movlw	0
  6788  2F67  0472               	iorwf	isalpha@c+1,w
  6789  2F68  00F4               	movwf	??_isalpha+1
  6790  2F69  0873               	movf	??_isalpha,w
  6791  2F6A  3E9F               	addlw	159
  6792  2F6B  00F5               	movwf	??_isalpha+2
  6793  2F6C  30FF               	movlw	255
  6794  2F6D  3D74               	addwfc	??_isalpha+1,w
  6795  2F6E  00F6               	movwf	??_isalpha+3
  6796  2F6F  3000               	movlw	0
  6797  2F70  0276               	subwf	??_isalpha+3,w
  6798  2F71  301A               	movlw	26
  6799  2F72  1903               	skipnz
  6800  2F73  0275               	subwf	??_isalpha+2,w
  6801  2F74  1803               	btfsc	3,0
  6802  2F75  2F78               	goto	u7750
  6803  2F76  3001               	movlw	1
  6804  2F77  2F79               	goto	u7760
  6805  2F78                     u7750:	
  6806  2F78  3000               	movlw	0
  6807  2F79                     u7760:	
  6808  2F79  00F7               	movwf	??_isalpha+4
  6809  2F7A  01F8               	clrf	??_isalpha+5
  6810  2F7B  0877               	movf	??_isalpha+4,w
  6811  2F7C  00F1               	movwf	?_isalpha
  6812  2F7D  0878               	movf	??_isalpha+5,w
  6813  2F7E  00F2               	movwf	?_isalpha+1
  6814  2F7F  0008               	return
  6815  2F80                     __end_of_isalpha:	
  6816                           
  6817                           	psect	text14
  6818  1C3D                     __ptext14:	
  6819 ;; *************** function _utoa *****************
  6820 ;; Defined at:
  6821 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6822 ;; Parameters:    Size  Location     Type
  6823 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  6824 ;;		 -> vsnprintf@f(6), 
  6825 ;;  d               8   18[BANK0 ] unsigned long long 
  6826 ;; Auto vars:     Size  Location     Type
  6827 ;;  n               8   31[BANK0 ] unsigned long long 
  6828 ;;  i               2   39[BANK0 ] int 
  6829 ;;  w               2   29[BANK0 ] int 
  6830 ;;  p               2   27[BANK0 ] int 
  6831 ;; Return value:  Size  Location     Type
  6832 ;;                  2   16[BANK0 ] int 
  6833 ;; Registers used:
  6834 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6835 ;; Tracked objects:
  6836 ;;		On entry : 0/0
  6837 ;;		On exit  : 0/0
  6838 ;;		Unchanged: 0/0
  6839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6840 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6841 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6842 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6843 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6844 ;;Total ram usage:       25 bytes
  6845 ;; Hardware stack levels used:    1
  6846 ;; Hardware stack levels required when called:    5
  6847 ;; This function calls:
  6848 ;;		___lodiv
  6849 ;;		___lomod
  6850 ;;		_pad
  6851 ;; This function is called by:
  6852 ;;		_vfpfcnvrt
  6853 ;; This function uses a non-reentrant model
  6854 ;;
  6855                           
  6856                           
  6857                           ;psect for function _utoa
  6858  1C3D                     _utoa:	
  6859                           
  6860                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  6861                           
  6862                           ;incstack = 0
  6863                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6864  1C3D  0022               	movlb	2	; select bank2
  6865  1C3E  1BC5               	btfsc	(_prec+1)^(0+256),7
  6866  1C3F  2C45               	goto	l712
  6867                           
  6868                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  6869  1C40  30FD               	movlw	253
  6870  1C41  0021               	movlb	1	; select bank1
  6871  1C42  05ED               	andwf	_flags^(0+128),f
  6872  1C43  30FF               	movlw	255
  6873  1C44  05EE               	andwf	(_flags+1)^(0+128),f
  6874  1C45                     l712:	
  6875                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 601:     }
  6876                           
  6877                           
  6878                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  6879  1C45  0022               	movlb	2	; select bank2
  6880  1C46  0845               	movf	(_prec+1)^(0+256),w
  6881  1C47  3A80               	xorlw	128
  6882  1C48  0020               	movlb	0	; select bank0
  6883  1C49  00BA               	movwf	??_utoa
  6884  1C4A  3080               	movlw	128
  6885  1C4B  023A               	subwf	??_utoa,w
  6886  1C4C  1D03               	skipz
  6887  1C4D  2C51               	goto	u8555
  6888  1C4E  3001               	movlw	1
  6889  1C4F  0022               	movlb	2	; select bank2
  6890  1C50  0244               	subwf	_prec^(0+256),w
  6891  1C51                     u8555:	
  6892  1C51  1803               	skipnc
  6893  1C52  2C59               	goto	l6471
  6894  1C53  3001               	movlw	1
  6895  1C54  0020               	movlb	0	; select bank0
  6896  1C55  00BB               	movwf	utoa@p
  6897  1C56  3000               	movlw	0
  6898  1C57  00BC               	movwf	utoa@p+1
  6899  1C58  2C61               	goto	l716
  6900  1C59                     l6471:	
  6901  1C59  0022               	movlb	2	; select bank2
  6902  1C5A  0845               	movf	(_prec+1)^(0+256),w
  6903  1C5B  0020               	movlb	0	; select bank0
  6904  1C5C  00BC               	movwf	utoa@p+1
  6905  1C5D  0022               	movlb	2	; select bank2
  6906  1C5E  0844               	movf	_prec^(0+256),w
  6907  1C5F  0020               	movlb	0	; select bank0
  6908  1C60  00BB               	movwf	utoa@p
  6909  1C61                     l716:	
  6910                           
  6911                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  6912  1C61  0022               	movlb	2	; select bank2
  6913  1C62  0843               	movf	(_width+1)^(0+256),w
  6914  1C63  0020               	movlb	0	; select bank0
  6915  1C64  00BE               	movwf	utoa@w+1
  6916  1C65  0022               	movlb	2	; select bank2
  6917  1C66  0842               	movf	_width^(0+256),w
  6918  1C67  0020               	movlb	0	; select bank0
  6919  1C68  00BD               	movwf	utoa@w
  6920                           
  6921                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  6922  1C69  0832               	movf	utoa@d,w
  6923  1C6A  00BF               	movwf	utoa@n
  6924  1C6B  0833               	movf	utoa@d+1,w
  6925  1C6C  00C0               	movwf	utoa@n+1
  6926  1C6D  0834               	movf	utoa@d+2,w
  6927  1C6E  00C1               	movwf	utoa@n+2
  6928  1C6F  0835               	movf	utoa@d+3,w
  6929  1C70  00C2               	movwf	utoa@n+3
  6930  1C71  0836               	movf	utoa@d+4,w
  6931  1C72  00C3               	movwf	utoa@n+4
  6932  1C73  0837               	movf	utoa@d+5,w
  6933  1C74  00C4               	movwf	utoa@n+5
  6934  1C75  0838               	movf	utoa@d+6,w
  6935  1C76  00C5               	movwf	utoa@n+6
  6936  1C77  0839               	movf	utoa@d+7,w
  6937  1C78  00C6               	movwf	utoa@n+7
  6938                           
  6939                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  6940  1C79  301F               	movlw	31
  6941  1C7A  00C7               	movwf	utoa@i
  6942  1C7B  3000               	movlw	0
  6943  1C7C  00C8               	movwf	utoa@i+1
  6944                           
  6945                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  6946  1C7D  0023               	movlb	3	; select bank3
  6947  1C7E  01BF               	clrf	(_dbuf^(0+384)+31)
  6948                           
  6949                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6950  1C7F  2D05               	goto	l6487
  6951  1C80                     l6489:	
  6952  1C80  083F               	movf	utoa@n,w
  6953  1C81  0440               	iorwf	utoa@n+1,w
  6954  1C82  0441               	iorwf	utoa@n+2,w
  6955  1C83  0442               	iorwf	utoa@n+3,w
  6956  1C84  0443               	iorwf	utoa@n+4,w
  6957  1C85  0444               	iorwf	utoa@n+5,w
  6958  1C86  0445               	iorwf	utoa@n+6,w
  6959  1C87  0446               	iorwf	utoa@n+7,w
  6960  1C88  1D03               	skipz
  6961  1C89  2CA4               	goto	l6477
  6962  1C8A  083C               	movf	utoa@p+1,w
  6963  1C8B  3A80               	xorlw	128
  6964  1C8C  00BA               	movwf	??_utoa
  6965  1C8D  3080               	movlw	128
  6966  1C8E  023A               	subwf	??_utoa,w
  6967  1C8F  1D03               	skipz
  6968  1C90  2C93               	goto	u8585
  6969  1C91  3001               	movlw	1
  6970  1C92  023B               	subwf	utoa@p,w
  6971  1C93                     u8585:	
  6972  1C93  1803               	skipnc
  6973  1C94  2CA4               	goto	l6477
  6974  1C95  0020               	movlb	0	; select bank0
  6975  1C96  083E               	movf	utoa@w+1,w
  6976  1C97  3A80               	xorlw	128
  6977  1C98  00BA               	movwf	??_utoa
  6978  1C99  3080               	movlw	128
  6979  1C9A  023A               	subwf	??_utoa,w
  6980  1C9B  1D03               	skipz
  6981  1C9C  2C9F               	goto	u8595
  6982  1C9D  3001               	movlw	1
  6983  1C9E  023D               	subwf	utoa@w,w
  6984  1C9F                     u8595:	
  6985  1C9F  1C03               	skipc
  6986  1CA0  2D0A               	goto	l6497
  6987  1CA1  0021               	movlb	1	; select bank1
  6988  1CA2  1CED               	btfss	_flags^(0+128),1
  6989  1CA3  2D0A               	goto	l6497
  6990  1CA4                     l6477:	
  6991                           
  6992                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  6993  1CA4  30FF               	movlw	255
  6994  1CA5  0020               	movlb	0	; select bank0
  6995  1CA6  07C7               	addwf	utoa@i,f
  6996  1CA7  30FF               	movlw	255
  6997  1CA8  3DC8               	addwfc	utoa@i+1,f
  6998                           
  6999                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  7000  1CA9  300A               	movlw	10
  7001  1CAA  00A0               	movwf	___lomod@divisor
  7002  1CAB  01A1               	clrf	___lomod@divisor+1
  7003  1CAC  01A2               	clrf	___lomod@divisor+2
  7004  1CAD  01A3               	clrf	___lomod@divisor+3
  7005  1CAE  01A4               	clrf	___lomod@divisor+4
  7006  1CAF  01A5               	clrf	___lomod@divisor+5
  7007  1CB0  01A6               	clrf	___lomod@divisor+6
  7008  1CB1  01A7               	clrf	___lomod@divisor+7
  7009  1CB2  083F               	movf	utoa@n,w
  7010  1CB3  00A8               	movwf	___lomod@dividend
  7011  1CB4  0840               	movf	utoa@n+1,w
  7012  1CB5  00A9               	movwf	___lomod@dividend+1
  7013  1CB6  0841               	movf	utoa@n+2,w
  7014  1CB7  00AA               	movwf	___lomod@dividend+2
  7015  1CB8  0842               	movf	utoa@n+3,w
  7016  1CB9  00AB               	movwf	___lomod@dividend+3
  7017  1CBA  0843               	movf	utoa@n+4,w
  7018  1CBB  00AC               	movwf	___lomod@dividend+4
  7019  1CBC  0844               	movf	utoa@n+5,w
  7020  1CBD  00AD               	movwf	___lomod@dividend+5
  7021  1CBE  0845               	movf	utoa@n+6,w
  7022  1CBF  00AE               	movwf	___lomod@dividend+6
  7023  1CC0  0846               	movf	utoa@n+7,w
  7024  1CC1  00AF               	movwf	___lomod@dividend+7
  7025  1CC2  31A3  23CB  319C   	fcall	___lomod
  7026  1CC5  0020               	movlb	0	; select bank0
  7027  1CC6  0820               	movf	?___lomod,w
  7028  1CC7  3E30               	addlw	48
  7029  1CC8  00BA               	movwf	??_utoa
  7030  1CC9  0847               	movf	utoa@i,w
  7031  1CCA  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7032  1CCB  0086               	movwf	6
  7033  1CCC  3001               	movlw	1	; select bank3/4
  7034  1CCD  0087               	movwf	7
  7035  1CCE  083A               	movf	??_utoa,w
  7036  1CCF  0081               	movwf	1
  7037                           
  7038                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  7039  1CD0  30FF               	movlw	255
  7040  1CD1  07BB               	addwf	utoa@p,f
  7041  1CD2  30FF               	movlw	255
  7042  1CD3  3DBC               	addwfc	utoa@p+1,f
  7043                           
  7044                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  7045  1CD4  30FF               	movlw	255
  7046  1CD5  07BD               	addwf	utoa@w,f
  7047  1CD6  30FF               	movlw	255
  7048  1CD7  3DBE               	addwfc	utoa@w+1,f
  7049                           
  7050                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  7051  1CD8  300A               	movlw	10
  7052  1CD9  00A0               	movwf	___lodiv@divisor
  7053  1CDA  01A1               	clrf	___lodiv@divisor+1
  7054  1CDB  01A2               	clrf	___lodiv@divisor+2
  7055  1CDC  01A3               	clrf	___lodiv@divisor+3
  7056  1CDD  01A4               	clrf	___lodiv@divisor+4
  7057  1CDE  01A5               	clrf	___lodiv@divisor+5
  7058  1CDF  01A6               	clrf	___lodiv@divisor+6
  7059  1CE0  01A7               	clrf	___lodiv@divisor+7
  7060  1CE1  083F               	movf	utoa@n,w
  7061  1CE2  00A8               	movwf	___lodiv@dividend
  7062  1CE3  0840               	movf	utoa@n+1,w
  7063  1CE4  00A9               	movwf	___lodiv@dividend+1
  7064  1CE5  0841               	movf	utoa@n+2,w
  7065  1CE6  00AA               	movwf	___lodiv@dividend+2
  7066  1CE7  0842               	movf	utoa@n+3,w
  7067  1CE8  00AB               	movwf	___lodiv@dividend+3
  7068  1CE9  0843               	movf	utoa@n+4,w
  7069  1CEA  00AC               	movwf	___lodiv@dividend+4
  7070  1CEB  0844               	movf	utoa@n+5,w
  7071  1CEC  00AD               	movwf	___lodiv@dividend+5
  7072  1CED  0845               	movf	utoa@n+6,w
  7073  1CEE  00AE               	movwf	___lodiv@dividend+6
  7074  1CEF  0846               	movf	utoa@n+7,w
  7075  1CF0  00AF               	movwf	___lodiv@dividend+7
  7076  1CF1  31A4  24B0  319C   	fcall	___lodiv
  7077  1CF4  0020               	movlb	0	; select bank0
  7078  1CF5  0820               	movf	?___lodiv,w
  7079  1CF6  00BF               	movwf	utoa@n
  7080  1CF7  0821               	movf	?___lodiv+1,w
  7081  1CF8  00C0               	movwf	utoa@n+1
  7082  1CF9  0822               	movf	?___lodiv+2,w
  7083  1CFA  00C1               	movwf	utoa@n+2
  7084  1CFB  0823               	movf	?___lodiv+3,w
  7085  1CFC  00C2               	movwf	utoa@n+3
  7086  1CFD  0824               	movf	?___lodiv+4,w
  7087  1CFE  00C3               	movwf	utoa@n+4
  7088  1CFF  0825               	movf	?___lodiv+5,w
  7089  1D00  00C4               	movwf	utoa@n+5
  7090  1D01  0826               	movf	?___lodiv+6,w
  7091  1D02  00C5               	movwf	utoa@n+6
  7092  1D03  0827               	movf	?___lodiv+7,w
  7093  1D04  00C6               	movwf	utoa@n+7
  7094  1D05                     l6487:	
  7095                           
  7096                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7097  1D05  0020               	movlb	0	; select bank0
  7098  1D06  0847               	movf	utoa@i,w
  7099  1D07  0448               	iorwf	utoa@i+1,w
  7100  1D08  1D03               	btfss	3,2
  7101  1D09  2C80               	goto	l6489
  7102  1D0A                     l6497:	
  7103                           
  7104                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  7105  1D0A  0020               	movlb	0	; select bank0
  7106  1D0B  0831               	movf	utoa@fp+1,w
  7107  1D0C  00A7               	movwf	pad@fp+1
  7108  1D0D  0830               	movf	utoa@fp,w
  7109  1D0E  00A6               	movwf	pad@fp
  7110  1D0F  0847               	movf	utoa@i,w
  7111  1D10  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7112  1D11  00BA               	movwf	??_utoa
  7113  1D12  083A               	movf	??_utoa,w
  7114  1D13  00A8               	movwf	pad@buf
  7115  1D14  083E               	movf	utoa@w+1,w
  7116  1D15  00AA               	movwf	pad@p+1
  7117  1D16  083D               	movf	utoa@w,w
  7118  1D17  00A9               	movwf	pad@p
  7119  1D18  31A1  21BB         	fcall	_pad
  7120  1D1A  0020               	movlb	0	; select bank0
  7121  1D1B  0827               	movf	?_pad+1,w
  7122  1D1C  00B1               	movwf	?_utoa+1
  7123  1D1D  0826               	movf	?_pad,w
  7124  1D1E  00B0               	movwf	?_utoa
  7125  1D1F  0008               	return
  7126  1D20                     __end_of_utoa:	
  7127                           
  7128                           	psect	text15
  7129  23CB                     __ptext15:	
  7130 ;; *************** function ___lomod *****************
  7131 ;; Defined at:
  7132 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lomod.c"
  7133 ;; Parameters:    Size  Location     Type
  7134 ;;  divisor         8    0[BANK0 ] unsigned long long 
  7135 ;;  dividend        8    8[BANK0 ] unsigned long long 
  7136 ;; Auto vars:     Size  Location     Type
  7137 ;;  counter         1    2[COMMON] unsigned char 
  7138 ;; Return value:  Size  Location     Type
  7139 ;;                  8    0[BANK0 ] unsigned long long 
  7140 ;; Registers used:
  7141 ;;		wreg, status,2, status,0
  7142 ;; Tracked objects:
  7143 ;;		On entry : 0/0
  7144 ;;		On exit  : 0/0
  7145 ;;		Unchanged: 0/0
  7146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7147 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7148 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7149 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7150 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7151 ;;Total ram usage:       18 bytes
  7152 ;; Hardware stack levels used:    1
  7153 ;; Hardware stack levels required when called:    1
  7154 ;; This function calls:
  7155 ;;		Nothing
  7156 ;; This function is called by:
  7157 ;;		_utoa
  7158 ;; This function uses a non-reentrant model
  7159 ;;
  7160                           
  7161                           
  7162                           ;psect for function ___lomod
  7163  23CB                     ___lomod:	
  7164                           
  7165                           ;incstack = 0
  7166                           ; Regs used in ___lomod: [wreg+status,2+status,0]
  7167  23CB  0020               	movlb	0	; select bank0
  7168  23CC  0820               	movf	___lomod@divisor,w
  7169  23CD  0421               	iorwf	___lomod@divisor+1,w
  7170  23CE  0422               	iorwf	___lomod@divisor+2,w
  7171  23CF  0423               	iorwf	___lomod@divisor+3,w
  7172  23D0  0424               	iorwf	___lomod@divisor+4,w
  7173  23D1  0425               	iorwf	___lomod@divisor+5,w
  7174  23D2  0426               	iorwf	___lomod@divisor+6,w
  7175  23D3  0427               	iorwf	___lomod@divisor+7,w
  7176  23D4  1903               	skipnz
  7177  23D5  2C23               	goto	l1083
  7178  23D6  01F2               	clrf	___lomod@counter
  7179  23D7  0AF2               	incf	___lomod@counter,f
  7180  23D8                     l6279:	
  7181  23D8  1BA7               	btfsc	___lomod@divisor+7,7
  7182  23D9  2BE7               	goto	l6281
  7183  23DA  35A0               	lslf	___lomod@divisor,f
  7184  23DB  0DA1               	rlf	___lomod@divisor+1,f
  7185  23DC  0DA2               	rlf	___lomod@divisor+2,f
  7186  23DD  0DA3               	rlf	___lomod@divisor+3,f
  7187  23DE  0DA4               	rlf	___lomod@divisor+4,f
  7188  23DF  0DA5               	rlf	___lomod@divisor+5,f
  7189  23E0  0DA6               	rlf	___lomod@divisor+6,f
  7190  23E1  0DA7               	rlf	___lomod@divisor+7,f
  7191  23E2  3001               	movlw	1
  7192  23E3  00F1               	movwf	??___lomod
  7193  23E4  0871               	movf	??___lomod,w
  7194  23E5  07F2               	addwf	___lomod@counter,f
  7195  23E6  2BD8               	goto	l6279
  7196  23E7                     l6281:	
  7197  23E7  0827               	movf	___lomod@divisor+7,w
  7198  23E8  022F               	subwf	___lomod@dividend+7,w
  7199  23E9  1D03               	skipz
  7200  23EA  2C05               	goto	u8145
  7201  23EB  0826               	movf	___lomod@divisor+6,w
  7202  23EC  022E               	subwf	___lomod@dividend+6,w
  7203  23ED  1D03               	skipz
  7204  23EE  2C05               	goto	u8145
  7205  23EF  0825               	movf	___lomod@divisor+5,w
  7206  23F0  022D               	subwf	___lomod@dividend+5,w
  7207  23F1  1D03               	skipz
  7208  23F2  2C05               	goto	u8145
  7209  23F3  0824               	movf	___lomod@divisor+4,w
  7210  23F4  022C               	subwf	___lomod@dividend+4,w
  7211  23F5  1D03               	skipz
  7212  23F6  2C05               	goto	u8145
  7213  23F7  0823               	movf	___lomod@divisor+3,w
  7214  23F8  022B               	subwf	___lomod@dividend+3,w
  7215  23F9  1D03               	skipz
  7216  23FA  2C05               	goto	u8145
  7217  23FB  0822               	movf	___lomod@divisor+2,w
  7218  23FC  022A               	subwf	___lomod@dividend+2,w
  7219  23FD  1D03               	skipz
  7220  23FE  2C05               	goto	u8145
  7221  23FF  0821               	movf	___lomod@divisor+1,w
  7222  2400  0229               	subwf	___lomod@dividend+1,w
  7223  2401  1D03               	skipz
  7224  2402  2C05               	goto	u8145
  7225  2403  0820               	movf	___lomod@divisor,w
  7226  2404  0228               	subwf	___lomod@dividend,w
  7227  2405                     u8145:	
  7228  2405  1C03               	skipc
  7229  2406  2C17               	goto	l6285
  7230  2407  0820               	movf	___lomod@divisor,w
  7231  2408  02A8               	subwf	___lomod@dividend,f
  7232  2409  0821               	movf	___lomod@divisor+1,w
  7233  240A  3BA9               	subwfb	___lomod@dividend+1,f
  7234  240B  0822               	movf	___lomod@divisor+2,w
  7235  240C  3BAA               	subwfb	___lomod@dividend+2,f
  7236  240D  0823               	movf	___lomod@divisor+3,w
  7237  240E  3BAB               	subwfb	___lomod@dividend+3,f
  7238  240F  0824               	movf	___lomod@divisor+4,w
  7239  2410  3BAC               	subwfb	___lomod@dividend+4,f
  7240  2411  0825               	movf	___lomod@divisor+5,w
  7241  2412  3BAD               	subwfb	___lomod@dividend+5,f
  7242  2413  0826               	movf	___lomod@divisor+6,w
  7243  2414  3BAE               	subwfb	___lomod@dividend+6,f
  7244  2415  0827               	movf	___lomod@divisor+7,w
  7245  2416  3BAF               	subwfb	___lomod@dividend+7,f
  7246  2417                     l6285:	
  7247  2417  36A7               	lsrf	___lomod@divisor+7,f
  7248  2418  0CA6               	rrf	___lomod@divisor+6,f
  7249  2419  0CA5               	rrf	___lomod@divisor+5,f
  7250  241A  0CA4               	rrf	___lomod@divisor+4,f
  7251  241B  0CA3               	rrf	___lomod@divisor+3,f
  7252  241C  0CA2               	rrf	___lomod@divisor+2,f
  7253  241D  0CA1               	rrf	___lomod@divisor+1,f
  7254  241E  0CA0               	rrf	___lomod@divisor,f
  7255  241F  3001               	movlw	1
  7256  2420  02F2               	subwf	___lomod@counter,f
  7257  2421  1D03               	btfss	3,2
  7258  2422  2BE7               	goto	l6281
  7259  2423                     l1083:	
  7260  2423  0828               	movf	___lomod@dividend,w
  7261  2424  00A0               	movwf	?___lomod
  7262  2425  0829               	movf	___lomod@dividend+1,w
  7263  2426  00A1               	movwf	?___lomod+1
  7264  2427  082A               	movf	___lomod@dividend+2,w
  7265  2428  00A2               	movwf	?___lomod+2
  7266  2429  082B               	movf	___lomod@dividend+3,w
  7267  242A  00A3               	movwf	?___lomod+3
  7268  242B  082C               	movf	___lomod@dividend+4,w
  7269  242C  00A4               	movwf	?___lomod+4
  7270  242D  082D               	movf	___lomod@dividend+5,w
  7271  242E  00A5               	movwf	?___lomod+5
  7272  242F  082E               	movf	___lomod@dividend+6,w
  7273  2430  00A6               	movwf	?___lomod+6
  7274  2431  082F               	movf	___lomod@dividend+7,w
  7275  2432  00A7               	movwf	?___lomod+7
  7276  2433  0008               	return
  7277  2434                     __end_of___lomod:	
  7278                           
  7279                           	psect	text16
  7280  24B0                     __ptext16:	
  7281 ;; *************** function ___lodiv *****************
  7282 ;; Defined at:
  7283 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lodiv.c"
  7284 ;; Parameters:    Size  Location     Type
  7285 ;;  divisor         8    0[BANK0 ] unsigned long long 
  7286 ;;  dividend        8    8[BANK0 ] unsigned long long 
  7287 ;; Auto vars:     Size  Location     Type
  7288 ;;  quotient        8    2[COMMON] unsigned long long 
  7289 ;;  counter         1   10[COMMON] unsigned char 
  7290 ;; Return value:  Size  Location     Type
  7291 ;;                  8    0[BANK0 ] unsigned long long 
  7292 ;; Registers used:
  7293 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7294 ;; Tracked objects:
  7295 ;;		On entry : 0/0
  7296 ;;		On exit  : 0/0
  7297 ;;		Unchanged: 0/0
  7298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7299 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7300 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7301 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7302 ;;      Totals:        10      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7303 ;;Total ram usage:       26 bytes
  7304 ;; Hardware stack levels used:    1
  7305 ;; Hardware stack levels required when called:    1
  7306 ;; This function calls:
  7307 ;;		Nothing
  7308 ;; This function is called by:
  7309 ;;		_utoa
  7310 ;; This function uses a non-reentrant model
  7311 ;;
  7312                           
  7313                           
  7314                           ;psect for function ___lodiv
  7315  24B0                     ___lodiv:	
  7316                           
  7317                           ;incstack = 0
  7318                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  7319  24B0  3072               	movlw	low ___lodiv@quotient
  7320  24B1  0086               	movwf	6
  7321  24B2  3000               	movlw	high ___lodiv@quotient
  7322  24B3  0087               	movwf	7
  7323  24B4  3008               	movlw	8
  7324  24B5  00F1               	movwf	??___lodiv
  7325  24B6  3000               	movlw	0
  7326  24B7                     u8070:	
  7327  24B7  001E               	movwi fsr1++
  7328  24B8  0BF1               	decfsz	??___lodiv,f
  7329  24B9  2CB7               	goto	u8070
  7330  24BA  0020               	movlb	0	; select bank0
  7331  24BB  0820               	movf	___lodiv@divisor,w
  7332  24BC  0421               	iorwf	___lodiv@divisor+1,w
  7333  24BD  0422               	iorwf	___lodiv@divisor+2,w
  7334  24BE  0423               	iorwf	___lodiv@divisor+3,w
  7335  24BF  0424               	iorwf	___lodiv@divisor+4,w
  7336  24C0  0425               	iorwf	___lodiv@divisor+5,w
  7337  24C1  0426               	iorwf	___lodiv@divisor+6,w
  7338  24C2  0427               	iorwf	___lodiv@divisor+7,w
  7339  24C3  1903               	skipnz
  7340  24C4  2D1B               	goto	l1073
  7341  24C5  01FA               	clrf	___lodiv@counter
  7342  24C6  0AFA               	incf	___lodiv@counter,f
  7343  24C7                     l6259:	
  7344  24C7  1BA7               	btfsc	___lodiv@divisor+7,7
  7345  24C8  2CD6               	goto	l6261
  7346  24C9  35A0               	lslf	___lodiv@divisor,f
  7347  24CA  0DA1               	rlf	___lodiv@divisor+1,f
  7348  24CB  0DA2               	rlf	___lodiv@divisor+2,f
  7349  24CC  0DA3               	rlf	___lodiv@divisor+3,f
  7350  24CD  0DA4               	rlf	___lodiv@divisor+4,f
  7351  24CE  0DA5               	rlf	___lodiv@divisor+5,f
  7352  24CF  0DA6               	rlf	___lodiv@divisor+6,f
  7353  24D0  0DA7               	rlf	___lodiv@divisor+7,f
  7354  24D1  3001               	movlw	1
  7355  24D2  00F1               	movwf	??___lodiv
  7356  24D3  0871               	movf	??___lodiv,w
  7357  24D4  07FA               	addwf	___lodiv@counter,f
  7358  24D5  2CC7               	goto	l6259
  7359  24D6                     l6261:	
  7360  24D6  35F2               	lslf	___lodiv@quotient,f
  7361  24D7  0DF3               	rlf	___lodiv@quotient+1,f
  7362  24D8  0DF4               	rlf	___lodiv@quotient+2,f
  7363  24D9  0DF5               	rlf	___lodiv@quotient+3,f
  7364  24DA  0DF6               	rlf	___lodiv@quotient+4,f
  7365  24DB  0DF7               	rlf	___lodiv@quotient+5,f
  7366  24DC  0DF8               	rlf	___lodiv@quotient+6,f
  7367  24DD  0DF9               	rlf	___lodiv@quotient+7,f
  7368  24DE  0827               	movf	___lodiv@divisor+7,w
  7369  24DF  022F               	subwf	___lodiv@dividend+7,w
  7370  24E0  1D03               	skipz
  7371  24E1  2CFC               	goto	u8105
  7372  24E2  0826               	movf	___lodiv@divisor+6,w
  7373  24E3  022E               	subwf	___lodiv@dividend+6,w
  7374  24E4  1D03               	skipz
  7375  24E5  2CFC               	goto	u8105
  7376  24E6  0825               	movf	___lodiv@divisor+5,w
  7377  24E7  022D               	subwf	___lodiv@dividend+5,w
  7378  24E8  1D03               	skipz
  7379  24E9  2CFC               	goto	u8105
  7380  24EA  0824               	movf	___lodiv@divisor+4,w
  7381  24EB  022C               	subwf	___lodiv@dividend+4,w
  7382  24EC  1D03               	skipz
  7383  24ED  2CFC               	goto	u8105
  7384  24EE  0823               	movf	___lodiv@divisor+3,w
  7385  24EF  022B               	subwf	___lodiv@dividend+3,w
  7386  24F0  1D03               	skipz
  7387  24F1  2CFC               	goto	u8105
  7388  24F2  0822               	movf	___lodiv@divisor+2,w
  7389  24F3  022A               	subwf	___lodiv@dividend+2,w
  7390  24F4  1D03               	skipz
  7391  24F5  2CFC               	goto	u8105
  7392  24F6  0821               	movf	___lodiv@divisor+1,w
  7393  24F7  0229               	subwf	___lodiv@dividend+1,w
  7394  24F8  1D03               	skipz
  7395  24F9  2CFC               	goto	u8105
  7396  24FA  0820               	movf	___lodiv@divisor,w
  7397  24FB  0228               	subwf	___lodiv@dividend,w
  7398  24FC                     u8105:	
  7399  24FC  1C03               	skipc
  7400  24FD  2D0F               	goto	l6269
  7401  24FE  0820               	movf	___lodiv@divisor,w
  7402  24FF  02A8               	subwf	___lodiv@dividend,f
  7403  2500  0821               	movf	___lodiv@divisor+1,w
  7404  2501  3BA9               	subwfb	___lodiv@dividend+1,f
  7405  2502  0822               	movf	___lodiv@divisor+2,w
  7406  2503  3BAA               	subwfb	___lodiv@dividend+2,f
  7407  2504  0823               	movf	___lodiv@divisor+3,w
  7408  2505  3BAB               	subwfb	___lodiv@dividend+3,f
  7409  2506  0824               	movf	___lodiv@divisor+4,w
  7410  2507  3BAC               	subwfb	___lodiv@dividend+4,f
  7411  2508  0825               	movf	___lodiv@divisor+5,w
  7412  2509  3BAD               	subwfb	___lodiv@dividend+5,f
  7413  250A  0826               	movf	___lodiv@divisor+6,w
  7414  250B  3BAE               	subwfb	___lodiv@dividend+6,f
  7415  250C  0827               	movf	___lodiv@divisor+7,w
  7416  250D  3BAF               	subwfb	___lodiv@dividend+7,f
  7417  250E  1472               	bsf	___lodiv@quotient,0
  7418  250F                     l6269:	
  7419  250F  36A7               	lsrf	___lodiv@divisor+7,f
  7420  2510  0CA6               	rrf	___lodiv@divisor+6,f
  7421  2511  0CA5               	rrf	___lodiv@divisor+5,f
  7422  2512  0CA4               	rrf	___lodiv@divisor+4,f
  7423  2513  0CA3               	rrf	___lodiv@divisor+3,f
  7424  2514  0CA2               	rrf	___lodiv@divisor+2,f
  7425  2515  0CA1               	rrf	___lodiv@divisor+1,f
  7426  2516  0CA0               	rrf	___lodiv@divisor,f
  7427  2517  3001               	movlw	1
  7428  2518  02FA               	subwf	___lodiv@counter,f
  7429  2519  1D03               	btfss	3,2
  7430  251A  2CD6               	goto	l6261
  7431  251B                     l1073:	
  7432  251B  0872               	movf	___lodiv@quotient,w
  7433  251C  00A0               	movwf	?___lodiv
  7434  251D  0873               	movf	___lodiv@quotient+1,w
  7435  251E  00A1               	movwf	?___lodiv+1
  7436  251F  0874               	movf	___lodiv@quotient+2,w
  7437  2520  00A2               	movwf	?___lodiv+2
  7438  2521  0875               	movf	___lodiv@quotient+3,w
  7439  2522  00A3               	movwf	?___lodiv+3
  7440  2523  0876               	movf	___lodiv@quotient+4,w
  7441  2524  00A4               	movwf	?___lodiv+4
  7442  2525  0877               	movf	___lodiv@quotient+5,w
  7443  2526  00A5               	movwf	?___lodiv+5
  7444  2527  0878               	movf	___lodiv@quotient+6,w
  7445  2528  00A6               	movwf	?___lodiv+6
  7446  2529  0879               	movf	___lodiv@quotient+7,w
  7447  252A  00A7               	movwf	?___lodiv+7
  7448  252B  0008               	return
  7449  252C                     __end_of___lodiv:	
  7450                           
  7451                           	psect	text17
  7452  220C                     __ptext17:	
  7453 ;; *************** function _strncmp *****************
  7454 ;; Defined at:
  7455 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  7456 ;; Parameters:    Size  Location     Type
  7457 ;;  _l              2    1[COMMON] PTR const unsigned char 
  7458 ;;		 -> STR_16(18), STR_15(18), STR_14(19), STR_13(20), 
  7459 ;;		 -> STR_12(20), STR_11(21), STR_10(21), STR_9(21), 
  7460 ;;		 -> STR_8(22), STR_7(22), STR_6(21), STR_5(21), 
  7461 ;;		 -> STR_2(22), STR_1(71), 
  7462 ;;  _r              2    3[COMMON] PTR const unsigned char 
  7463 ;;		 -> STR_114(3), STR_110(3), STR_105(3), STR_101(3), 
  7464 ;;		 -> STR_96(4), STR_92(4), STR_87(3), STR_82(3), 
  7465 ;;		 -> STR_77(4), STR_72(3), STR_67(3), STR_62(4), 
  7466 ;;		 -> STR_57(3), STR_52(3), STR_47(4), STR_42(3), 
  7467 ;;		 -> STR_38(3), STR_33(3), STR_29(3), STR_24(4), 
  7468 ;;		 -> STR_20(4), 
  7469 ;;  n               2    5[COMMON] unsigned int 
  7470 ;; Auto vars:     Size  Location     Type
  7471 ;;  r               2   10[COMMON] PTR const unsigned char 
  7472 ;;		 -> STR_114(3), STR_110(3), STR_105(3), STR_101(3), 
  7473 ;;		 -> STR_96(4), STR_92(4), STR_87(3), STR_82(3), 
  7474 ;;		 -> STR_77(4), STR_72(3), STR_67(3), STR_62(4), 
  7475 ;;		 -> STR_57(3), STR_52(3), STR_47(4), STR_42(3), 
  7476 ;;		 -> STR_38(3), STR_33(3), STR_29(3), STR_24(4), 
  7477 ;;		 -> STR_20(4), 
  7478 ;;  l               2    8[COMMON] PTR const unsigned char 
  7479 ;;		 -> STR_16(18), STR_15(18), STR_14(19), STR_13(20), 
  7480 ;;		 -> STR_12(20), STR_11(21), STR_10(21), STR_9(21), 
  7481 ;;		 -> STR_8(22), STR_7(22), STR_6(21), STR_5(21), 
  7482 ;;		 -> STR_2(22), STR_1(71), 
  7483 ;; Return value:  Size  Location     Type
  7484 ;;                  2    1[COMMON] int 
  7485 ;; Registers used:
  7486 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  7487 ;; Tracked objects:
  7488 ;;		On entry : 0/0
  7489 ;;		On exit  : 0/0
  7490 ;;		Unchanged: 0/0
  7491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7492 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7493 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7494 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7495 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7496 ;;Total ram usage:       11 bytes
  7497 ;; Hardware stack levels used:    1
  7498 ;; Hardware stack levels required when called:    1
  7499 ;; This function calls:
  7500 ;;		Nothing
  7501 ;; This function is called by:
  7502 ;;		_vfpfcnvrt
  7503 ;; This function uses a non-reentrant model
  7504 ;;
  7505                           
  7506                           
  7507                           ;psect for function _strncmp
  7508  220C                     _strncmp:	
  7509                           
  7510                           ;incstack = 0
  7511                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  7512  220C  0872               	movf	strncmp@_l+1,w
  7513  220D  00F9               	movwf	strncmp@l+1
  7514  220E  0871               	movf	strncmp@_l,w
  7515  220F  00F8               	movwf	strncmp@l
  7516  2210  0874               	movf	strncmp@_r+1,w
  7517  2211  00FB               	movwf	strncmp@r+1
  7518  2212  0873               	movf	strncmp@_r,w
  7519  2213  00FA               	movwf	strncmp@r
  7520  2214  3001               	movlw	1
  7521  2215  02F5               	subwf	strncmp@n,f
  7522  2216  3000               	movlw	0
  7523  2217  3BF6               	subwfb	strncmp@n+1,f
  7524  2218  0A75               	incf	strncmp@n,w
  7525  2219  1D03               	skipz
  7526  221A  2A46               	goto	l6621
  7527  221B  0A76               	incf	strncmp@n+1,w
  7528  221C  1D03               	btfss	3,2
  7529  221D  2A46               	goto	l6621
  7530  221E  01F1               	clrf	?_strncmp
  7531  221F  01F2               	clrf	?_strncmp+1
  7532  2220  0008               	return
  7533  2221                     l6623:	
  7534  2221  087A               	movf	strncmp@r,w
  7535  2222  0084               	movwf	4
  7536  2223  087B               	movf	strncmp@r+1,w
  7537  2224  0085               	movwf	5
  7538  2225  0012               	moviw fsr0++
  7539  2226  1903               	btfsc	3,2
  7540  2227  2A4D               	goto	l6629
  7541  2228  0875               	movf	strncmp@n,w
  7542  2229  0476               	iorwf	strncmp@n+1,w
  7543  222A  1903               	btfsc	3,2
  7544  222B  2A4D               	goto	l6629
  7545  222C  087A               	movf	strncmp@r,w
  7546  222D  0084               	movwf	4
  7547  222E  087B               	movf	strncmp@r+1,w
  7548  222F  0085               	movwf	5
  7549  2230  0800               	movf	0,w	;code access
  7550  2231  00F7               	movwf	??_strncmp
  7551  2232  0878               	movf	strncmp@l,w
  7552  2233  0084               	movwf	4
  7553  2234  0879               	movf	strncmp@l+1,w
  7554  2235  0085               	movwf	5
  7555  2236  0800               	movf	0,w	;code access
  7556  2237  0677               	xorwf	??_strncmp,w
  7557  2238  1D03               	btfss	3,2
  7558  2239  2A4D               	goto	l6629
  7559  223A  3001               	movlw	1
  7560  223B  07F8               	addwf	strncmp@l,f
  7561  223C  3000               	movlw	0
  7562  223D  3DF9               	addwfc	strncmp@l+1,f
  7563  223E  3001               	movlw	1
  7564  223F  07FA               	addwf	strncmp@r,f
  7565  2240  3000               	movlw	0
  7566  2241  3DFB               	addwfc	strncmp@r+1,f
  7567  2242  3001               	movlw	1
  7568  2243  02F5               	subwf	strncmp@n,f
  7569  2244  3000               	movlw	0
  7570  2245  3BF6               	subwfb	strncmp@n+1,f
  7571  2246                     l6621:	
  7572  2246  0878               	movf	strncmp@l,w
  7573  2247  0084               	movwf	4
  7574  2248  0879               	movf	strncmp@l+1,w
  7575  2249  0085               	movwf	5
  7576  224A  0012               	moviw fsr0++
  7577  224B  1D03               	btfss	3,2
  7578  224C  2A21               	goto	l6623
  7579  224D                     l6629:	
  7580  224D  0878               	movf	strncmp@l,w
  7581  224E  0084               	movwf	4
  7582  224F  0879               	movf	strncmp@l+1,w
  7583  2250  0085               	movwf	5
  7584  2251  0800               	movf	0,w	;code access
  7585  2252  00F7               	movwf	??_strncmp
  7586  2253  087A               	movf	strncmp@r,w
  7587  2254  0084               	movwf	4
  7588  2255  087B               	movf	strncmp@r+1,w
  7589  2256  0085               	movwf	5
  7590  2257  0800               	movf	0,w	;code access
  7591  2258  0277               	subwf	??_strncmp,w
  7592  2259  00F1               	movwf	?_strncmp
  7593  225A  01F2               	clrf	?_strncmp+1
  7594  225B  1C03               	skipc
  7595  225C  03F2               	decf	?_strncmp+1,f
  7596  225D  0008               	return
  7597  225E                     __end_of_strncmp:	
  7598                           
  7599                           	psect	text18
  7600  18ED                     __ptext18:	
  7601 ;; *************** function _stoa *****************
  7602 ;; Defined at:
  7603 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7604 ;; Parameters:    Size  Location     Type
  7605 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  7606 ;;		 -> vsnprintf@f(6), 
  7607 ;;  s               2    2[BANK0 ] PTR unsigned char 
  7608 ;;		 -> ?_snprintf(2), thermistorBetaValue(2), adcGain(2), 
  7609 ;; Auto vars:     Size  Location     Type
  7610 ;;  nuls            7    4[BANK0 ] unsigned char [7]
  7611 ;;  l               2   19[BANK0 ] int 
  7612 ;;  p               2   17[BANK0 ] int 
  7613 ;;  cp              2   15[BANK0 ] PTR unsigned char 
  7614 ;;		 -> ?_snprintf(2), stoa@nuls(7), thermistorBetaValue(2), adcGain(2), 
  7615 ;;  w               2   13[BANK0 ] int 
  7616 ;;  i               2   11[BANK0 ] int 
  7617 ;; Return value:  Size  Location     Type
  7618 ;;                  2    0[BANK0 ] int 
  7619 ;; Registers used:
  7620 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7621 ;; Tracked objects:
  7622 ;;		On entry : 0/0
  7623 ;;		On exit  : 0/0
  7624 ;;		Unchanged: 0/0
  7625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7626 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7627 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7628 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7629 ;;      Totals:         2      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7630 ;;Total ram usage:       23 bytes
  7631 ;; Hardware stack levels used:    1
  7632 ;; Hardware stack levels required when called:    3
  7633 ;; This function calls:
  7634 ;;		_fputc
  7635 ;;		_strlen
  7636 ;; This function is called by:
  7637 ;;		_vfpfcnvrt
  7638 ;; This function uses a non-reentrant model
  7639 ;;
  7640                           
  7641                           
  7642                           ;psect for function _stoa
  7643  18ED                     _stoa:	
  7644                           
  7645                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  7646                           
  7647                           ;incstack = 0
  7648                           ; Regs used in _stoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7649  18ED  3060               	movlw	low stoa@F1152
  7650  18EE  0086               	movwf	6
  7651  18EF  3001               	movlw	high stoa@F1152
  7652  18F0  0087               	movwf	7
  7653  18F1  3024               	movlw	low stoa@nuls
  7654  18F2  0084               	movwf	4
  7655  18F3  3000               	movlw	high stoa@nuls
  7656  18F4  0085               	movwf	5
  7657  18F5  3007               	movlw	7
  7658  18F6  00FA               	movwf	??_stoa
  7659  18F7                     u8450:	
  7660  18F7  0016               	moviw fsr1++
  7661  18F8  001A               	movwi fsr0++
  7662  18F9  0BFA               	decfsz	??_stoa,f
  7663  18FA  28F7               	goto	u8450
  7664                           
  7665                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  7666  18FB  0020               	movlb	0	; select bank0
  7667  18FC  0823               	movf	stoa@s+1,w
  7668  18FD  00B0               	movwf	stoa@cp+1
  7669  18FE  0822               	movf	stoa@s,w
  7670  18FF  00AF               	movwf	stoa@cp
  7671                           
  7672                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  7673  1900  082F               	movf	stoa@cp,w
  7674  1901  0430               	iorwf	stoa@cp+1,w
  7675  1902  1D03               	btfss	3,2
  7676  1903  2908               	goto	l6423
  7677                           
  7678                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  7679  1904  3024               	movlw	low stoa@nuls
  7680  1905  00AF               	movwf	stoa@cp
  7681  1906  3000               	movlw	high stoa@nuls
  7682  1907  00B0               	movwf	stoa@cp+1
  7683  1908                     l6423:	
  7684                           
  7685                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  7686  1908  0830               	movf	stoa@cp+1,w
  7687  1909  00F2               	movwf	strlen@s+1
  7688  190A  082F               	movf	stoa@cp,w
  7689  190B  00F1               	movwf	strlen@s
  7690  190C  31AE  2683  3198   	fcall	_strlen
  7691  190F  0872               	movf	?_strlen+1,w
  7692  1910  0020               	movlb	0	; select bank0
  7693  1911  00B4               	movwf	stoa@l+1
  7694  1912  0871               	movf	?_strlen,w
  7695  1913  00B3               	movwf	stoa@l
  7696                           
  7697                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  7698  1914  0022               	movlb	2	; select bank2
  7699  1915  0845               	movf	(_prec+1)^(0+256),w
  7700  1916  0020               	movlb	0	; select bank0
  7701  1917  00B2               	movwf	stoa@p+1
  7702  1918  0022               	movlb	2	; select bank2
  7703  1919  0844               	movf	_prec^(0+256),w
  7704  191A  0020               	movlb	0	; select bank0
  7705  191B  00B1               	movwf	stoa@p
  7706                           
  7707                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  7708  191C  1BB2               	btfsc	stoa@p+1,7
  7709  191D  292F               	goto	l695
  7710  191E  0832               	movf	stoa@p+1,w
  7711  191F  3A80               	xorlw	128
  7712  1920  00FA               	movwf	??_stoa
  7713  1921  0834               	movf	stoa@l+1,w
  7714  1922  3A80               	xorlw	128
  7715  1923  027A               	subwf	??_stoa,w
  7716  1924  1D03               	skipz
  7717  1925  2928               	goto	u8485
  7718  1926  0833               	movf	stoa@l,w
  7719  1927  0231               	subwf	stoa@p,w
  7720  1928                     u8485:	
  7721  1928  1803               	btfsc	3,0
  7722  1929  292F               	goto	l695
  7723  192A  0020               	movlb	0	; select bank0
  7724  192B  0832               	movf	stoa@p+1,w
  7725  192C  00B4               	movwf	stoa@l+1
  7726  192D  0831               	movf	stoa@p,w
  7727  192E  00B3               	movwf	stoa@l
  7728  192F                     l695:	
  7729                           
  7730                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  7731  192F  0020               	movlb	0	; select bank0
  7732  1930  0834               	movf	stoa@l+1,w
  7733  1931  00B2               	movwf	stoa@p+1
  7734  1932  0833               	movf	stoa@l,w
  7735  1933  00B1               	movwf	stoa@p
  7736                           
  7737                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  7738  1934  0022               	movlb	2	; select bank2
  7739  1935  0843               	movf	(_width+1)^(0+256),w
  7740  1936  0020               	movlb	0	; select bank0
  7741  1937  00AE               	movwf	stoa@w+1
  7742  1938  0022               	movlb	2	; select bank2
  7743  1939  0842               	movf	_width^(0+256),w
  7744  193A  0020               	movlb	0	; select bank0
  7745  193B  00AD               	movwf	stoa@w
  7746                           
  7747                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  7748  193C  0021               	movlb	1	; select bank1
  7749  193D  1C6D               	btfss	_flags^(0+128),0
  7750  193E  2951               	goto	l6441
  7751  193F  295E               	goto	l6443
  7752  1940                     l6437:	
  7753                           
  7754                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  7755  1940  3020               	movlw	32
  7756  1941  00F1               	movwf	fputc@c
  7757  1942  3000               	movlw	0
  7758  1943  00F2               	movwf	fputc@c+1
  7759  1944  0020               	movlb	0	; select bank0
  7760  1945  0821               	movf	stoa@fp+1,w
  7761  1946  00F4               	movwf	fputc@fp+1
  7762  1947  0820               	movf	stoa@fp,w
  7763  1948  00F3               	movwf	fputc@fp
  7764  1949  31A2  225E  3198   	fcall	_fputc
  7765                           
  7766                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  7767  194C  3001               	movlw	1
  7768  194D  0020               	movlb	0	; select bank0
  7769  194E  07B3               	addwf	stoa@l,f
  7770  194F  3000               	movlw	0
  7771  1950  3DB4               	addwfc	stoa@l+1,f
  7772  1951                     l6441:	
  7773                           
  7774                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  7775  1951  0020               	movlb	0	; select bank0
  7776  1952  0834               	movf	stoa@l+1,w
  7777  1953  3A80               	xorlw	128
  7778  1954  00FA               	movwf	??_stoa
  7779  1955  082E               	movf	stoa@w+1,w
  7780  1956  3A80               	xorlw	128
  7781  1957  027A               	subwf	??_stoa,w
  7782  1958  1D03               	skipz
  7783  1959  295C               	goto	u8505
  7784  195A  082D               	movf	stoa@w,w
  7785  195B  0233               	subwf	stoa@l,w
  7786  195C                     u8505:	
  7787  195C  1C03               	skipc
  7788  195D  2940               	goto	l6437
  7789  195E                     l6443:	
  7790                           
  7791                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  7792  195E  0020               	movlb	0	; select bank0
  7793  195F  01AB               	clrf	stoa@i
  7794  1960  01AC               	clrf	stoa@i+1
  7795  1961                     l6451:	
  7796                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  7797                           
  7798                           
  7799                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  7800  1961  082C               	movf	stoa@i+1,w
  7801  1962  3A80               	xorlw	128
  7802  1963  00FA               	movwf	??_stoa
  7803  1964  0832               	movf	stoa@p+1,w
  7804  1965  3A80               	xorlw	128
  7805  1966  027A               	subwf	??_stoa,w
  7806  1967  1D03               	skipz
  7807  1968  296B               	goto	u8515
  7808  1969  0831               	movf	stoa@p,w
  7809  196A  022B               	subwf	stoa@i,w
  7810  196B                     u8515:	
  7811  196B  1803               	btfsc	3,0
  7812  196C  298A               	goto	l704
  7813                           
  7814                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  7815  196D  0020               	movlb	0	; select bank0
  7816  196E  082F               	movf	stoa@cp,w
  7817  196F  0086               	movwf	6
  7818  1970  0830               	movf	stoa@cp+1,w
  7819  1971  0087               	movwf	7
  7820  1972  0801               	movf	1,w
  7821  1973  00FA               	movwf	??_stoa
  7822  1974  01FB               	clrf	??_stoa+1
  7823  1975  087A               	movf	??_stoa,w
  7824  1976  00F1               	movwf	fputc@c
  7825  1977  087B               	movf	??_stoa+1,w
  7826  1978  00F2               	movwf	fputc@c+1
  7827  1979  0821               	movf	stoa@fp+1,w
  7828  197A  00F4               	movwf	fputc@fp+1
  7829  197B  0820               	movf	stoa@fp,w
  7830  197C  00F3               	movwf	fputc@fp
  7831  197D  31A2  225E  3198   	fcall	_fputc
  7832                           
  7833                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  7834  1980  3001               	movlw	1
  7835  1981  0020               	movlb	0	; select bank0
  7836  1982  07AF               	addwf	stoa@cp,f
  7837  1983  3000               	movlw	0
  7838  1984  3DB0               	addwfc	stoa@cp+1,f
  7839                           
  7840                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  7841  1985  3001               	movlw	1
  7842  1986  07AB               	addwf	stoa@i,f
  7843  1987  3000               	movlw	0
  7844  1988  3DAC               	addwfc	stoa@i+1,f
  7845  1989  2961               	goto	l6451
  7846  198A                     l704:	
  7847                           
  7848                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  7849  198A  0021               	movlb	1	; select bank1
  7850  198B  186D               	btfsc	_flags^(0+128),0
  7851  198C  299F               	goto	l6459
  7852  198D  29AC               	goto	l6461
  7853  198E                     l6455:	
  7854                           
  7855                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  7856  198E  3020               	movlw	32
  7857  198F  00F1               	movwf	fputc@c
  7858  1990  3000               	movlw	0
  7859  1991  00F2               	movwf	fputc@c+1
  7860  1992  0020               	movlb	0	; select bank0
  7861  1993  0821               	movf	stoa@fp+1,w
  7862  1994  00F4               	movwf	fputc@fp+1
  7863  1995  0820               	movf	stoa@fp,w
  7864  1996  00F3               	movwf	fputc@fp
  7865  1997  31A2  225E  3198   	fcall	_fputc
  7866                           
  7867                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  7868  199A  3001               	movlw	1
  7869  199B  0020               	movlb	0	; select bank0
  7870  199C  07B3               	addwf	stoa@l,f
  7871  199D  3000               	movlw	0
  7872  199E  3DB4               	addwfc	stoa@l+1,f
  7873  199F                     l6459:	
  7874                           
  7875                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  7876  199F  0020               	movlb	0	; select bank0
  7877  19A0  0834               	movf	stoa@l+1,w
  7878  19A1  3A80               	xorlw	128
  7879  19A2  00FA               	movwf	??_stoa
  7880  19A3  082E               	movf	stoa@w+1,w
  7881  19A4  3A80               	xorlw	128
  7882  19A5  027A               	subwf	??_stoa,w
  7883  19A6  1D03               	skipz
  7884  19A7  29AA               	goto	u8535
  7885  19A8  082D               	movf	stoa@w,w
  7886  19A9  0233               	subwf	stoa@l,w
  7887  19AA                     u8535:	
  7888  19AA  1C03               	skipc
  7889  19AB  298E               	goto	l6455
  7890  19AC                     l6461:	
  7891                           
  7892                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  7893  19AC  0020               	movlb	0	; select bank0
  7894  19AD  0834               	movf	stoa@l+1,w
  7895  19AE  00A1               	movwf	?_stoa+1
  7896  19AF  0833               	movf	stoa@l,w
  7897  19B0  00A0               	movwf	?_stoa
  7898  19B1  0008               	return
  7899  19B2                     __end_of_stoa:	
  7900                           
  7901                           	psect	text19
  7902  1E13                     __ptext19:	
  7903 ;; *************** function _otoa *****************
  7904 ;; Defined at:
  7905 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7906 ;; Parameters:    Size  Location     Type
  7907 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  7908 ;;		 -> vsnprintf@f(6), 
  7909 ;;  d               8   18[BANK0 ] unsigned long long 
  7910 ;; Auto vars:     Size  Location     Type
  7911 ;;  n               8   40[BANK0 ] unsigned long long 
  7912 ;;  i               2   48[BANK0 ] int 
  7913 ;;  w               2   38[BANK0 ] int 
  7914 ;;  t               2   36[BANK0 ] int 
  7915 ;;  p               2   34[BANK0 ] int 
  7916 ;; Return value:  Size  Location     Type
  7917 ;;                  2   16[BANK0 ] int 
  7918 ;; Registers used:
  7919 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7920 ;; Tracked objects:
  7921 ;;		On entry : 0/0
  7922 ;;		On exit  : 0/0
  7923 ;;		Unchanged: 0/0
  7924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7925 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7926 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7927 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7928 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7929 ;;Total ram usage:       34 bytes
  7930 ;; Hardware stack levels used:    1
  7931 ;; Hardware stack levels required when called:    5
  7932 ;; This function calls:
  7933 ;;		_pad
  7934 ;; This function is called by:
  7935 ;;		_vfpfcnvrt
  7936 ;; This function uses a non-reentrant model
  7937 ;;
  7938                           
  7939                           
  7940                           ;psect for function _otoa
  7941  1E13                     _otoa:	
  7942                           
  7943                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  7944                           
  7945                           ;incstack = 0
  7946                           ; Regs used in _otoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7947  1E13  0022               	movlb	2	; select bank2
  7948  1E14  1BC5               	btfsc	(_prec+1)^(0+256),7
  7949  1E15  2E1B               	goto	l673
  7950                           
  7951                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
  7952  1E16  30FD               	movlw	253
  7953  1E17  0021               	movlb	1	; select bank1
  7954  1E18  05ED               	andwf	_flags^(0+128),f
  7955  1E19  30FF               	movlw	255
  7956  1E1A  05EE               	andwf	(_flags+1)^(0+128),f
  7957  1E1B                     l673:	
  7958                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 515:     }
  7959                           
  7960                           
  7961                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
  7962  1E1B  0022               	movlb	2	; select bank2
  7963  1E1C  0845               	movf	(_prec+1)^(0+256),w
  7964  1E1D  3A80               	xorlw	128
  7965  1E1E  0020               	movlb	0	; select bank0
  7966  1E1F  00BA               	movwf	??_otoa
  7967  1E20  3080               	movlw	128
  7968  1E21  023A               	subwf	??_otoa,w
  7969  1E22  1D03               	skipz
  7970  1E23  2E27               	goto	u8365
  7971  1E24  3001               	movlw	1
  7972  1E25  0022               	movlb	2	; select bank2
  7973  1E26  0244               	subwf	_prec^(0+256),w
  7974  1E27                     u8365:	
  7975  1E27  1803               	skipnc
  7976  1E28  2E2F               	goto	l6377
  7977  1E29  3001               	movlw	1
  7978  1E2A  0020               	movlb	0	; select bank0
  7979  1E2B  00C2               	movwf	otoa@p
  7980  1E2C  3000               	movlw	0
  7981  1E2D  00C3               	movwf	otoa@p+1
  7982  1E2E  2E37               	goto	l677
  7983  1E2F                     l6377:	
  7984  1E2F  0022               	movlb	2	; select bank2
  7985  1E30  0845               	movf	(_prec+1)^(0+256),w
  7986  1E31  0020               	movlb	0	; select bank0
  7987  1E32  00C3               	movwf	otoa@p+1
  7988  1E33  0022               	movlb	2	; select bank2
  7989  1E34  0844               	movf	_prec^(0+256),w
  7990  1E35  0020               	movlb	0	; select bank0
  7991  1E36  00C2               	movwf	otoa@p
  7992  1E37                     l677:	
  7993                           
  7994                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
  7995  1E37  0022               	movlb	2	; select bank2
  7996  1E38  0843               	movf	(_width+1)^(0+256),w
  7997  1E39  0020               	movlb	0	; select bank0
  7998  1E3A  00C7               	movwf	otoa@w+1
  7999  1E3B  0022               	movlb	2	; select bank2
  8000  1E3C  0842               	movf	_width^(0+256),w
  8001  1E3D  0020               	movlb	0	; select bank0
  8002  1E3E  00C6               	movwf	otoa@w
  8003                           
  8004                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
  8005  1E3F  0832               	movf	otoa@d,w
  8006  1E40  00C8               	movwf	otoa@n
  8007  1E41  0833               	movf	otoa@d+1,w
  8008  1E42  00C9               	movwf	otoa@n+1
  8009  1E43  0834               	movf	otoa@d+2,w
  8010  1E44  00CA               	movwf	otoa@n+2
  8011  1E45  0835               	movf	otoa@d+3,w
  8012  1E46  00CB               	movwf	otoa@n+3
  8013  1E47  0836               	movf	otoa@d+4,w
  8014  1E48  00CC               	movwf	otoa@n+4
  8015  1E49  0837               	movf	otoa@d+5,w
  8016  1E4A  00CD               	movwf	otoa@n+5
  8017  1E4B  0838               	movf	otoa@d+6,w
  8018  1E4C  00CE               	movwf	otoa@n+6
  8019  1E4D  0839               	movf	otoa@d+7,w
  8020  1E4E  00CF               	movwf	otoa@n+7
  8021                           
  8022                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
  8023  1E4F  301F               	movlw	31
  8024  1E50  00D0               	movwf	otoa@i
  8025  1E51  3000               	movlw	0
  8026  1E52  00D1               	movwf	otoa@i+1
  8027                           
  8028                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
  8029  1E53  0023               	movlb	3	; select bank3
  8030  1E54  01BF               	clrf	(_dbuf^(0+384)+31)
  8031                           
  8032                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
  8033  1E55  0020               	movlb	0	; select bank0
  8034  1E56  01C4               	clrf	otoa@t
  8035  1E57  01C5               	clrf	otoa@t+1
  8036                           
  8037                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8038  1E58  2ECC               	goto	l678
  8039  1E59                     l6395:	
  8040  1E59  0020               	movlb	0	; select bank0
  8041  1E5A  0848               	movf	otoa@n,w
  8042  1E5B  0449               	iorwf	otoa@n+1,w
  8043  1E5C  044A               	iorwf	otoa@n+2,w
  8044  1E5D  044B               	iorwf	otoa@n+3,w
  8045  1E5E  044C               	iorwf	otoa@n+4,w
  8046  1E5F  044D               	iorwf	otoa@n+5,w
  8047  1E60  044E               	iorwf	otoa@n+6,w
  8048  1E61  044F               	iorwf	otoa@n+7,w
  8049  1E62  1D03               	skipz
  8050  1E63  2E7E               	goto	l6385
  8051  1E64  0843               	movf	otoa@p+1,w
  8052  1E65  3A80               	xorlw	128
  8053  1E66  00BA               	movwf	??_otoa
  8054  1E67  3080               	movlw	128
  8055  1E68  023A               	subwf	??_otoa,w
  8056  1E69  1D03               	skipz
  8057  1E6A  2E6D               	goto	u8405
  8058  1E6B  3001               	movlw	1
  8059  1E6C  0242               	subwf	otoa@p,w
  8060  1E6D                     u8405:	
  8061  1E6D  1803               	skipnc
  8062  1E6E  2E7E               	goto	l6385
  8063  1E6F  0020               	movlb	0	; select bank0
  8064  1E70  0847               	movf	otoa@w+1,w
  8065  1E71  3A80               	xorlw	128
  8066  1E72  00BA               	movwf	??_otoa
  8067  1E73  3080               	movlw	128
  8068  1E74  023A               	subwf	??_otoa,w
  8069  1E75  1D03               	skipz
  8070  1E76  2E79               	goto	u8415
  8071  1E77  3001               	movlw	1
  8072  1E78  0246               	subwf	otoa@w,w
  8073  1E79                     u8415:	
  8074  1E79  1C03               	skipc
  8075  1E7A  2ED7               	goto	l684
  8076  1E7B  0021               	movlb	1	; select bank1
  8077  1E7C  1CED               	btfss	_flags^(0+128),1
  8078  1E7D  2ED7               	goto	l684
  8079  1E7E                     l6385:	
  8080                           
  8081                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
  8082  1E7E  30FF               	movlw	255
  8083  1E7F  0020               	movlb	0	; select bank0
  8084  1E80  07D0               	addwf	otoa@i,f
  8085  1E81  30FF               	movlw	255
  8086  1E82  3DD1               	addwfc	otoa@i+1,f
  8087                           
  8088                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
  8089  1E83  3007               	movlw	7
  8090  1E84  0548               	andwf	otoa@n,w
  8091  1E85  00C4               	movwf	otoa@t
  8092  1E86  3000               	movlw	0
  8093  1E87  0549               	andwf	otoa@n+1,w
  8094  1E88  00C5               	movwf	otoa@t+1
  8095                           
  8096                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
  8097  1E89  0844               	movf	otoa@t,w
  8098  1E8A  3E30               	addlw	48
  8099  1E8B  00BA               	movwf	??_otoa
  8100  1E8C  0850               	movf	otoa@i,w
  8101  1E8D  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8102  1E8E  0086               	movwf	6
  8103  1E8F  3001               	movlw	1	; select bank3/4
  8104  1E90  0087               	movwf	7
  8105  1E91  083A               	movf	??_otoa,w
  8106  1E92  0081               	movwf	1
  8107                           
  8108                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
  8109  1E93  30FF               	movlw	255
  8110  1E94  07C2               	addwf	otoa@p,f
  8111  1E95  30FF               	movlw	255
  8112  1E96  3DC3               	addwfc	otoa@p+1,f
  8113                           
  8114                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
  8115  1E97  30FF               	movlw	255
  8116  1E98  07C6               	addwf	otoa@w,f
  8117  1E99  30FF               	movlw	255
  8118  1E9A  3DC7               	addwfc	otoa@w+1,f
  8119                           
  8120                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
  8121  1E9B  3048               	movlw	low otoa@n
  8122  1E9C  0086               	movwf	6
  8123  1E9D  3000               	movlw	high otoa@n
  8124  1E9E  0087               	movwf	7
  8125  1E9F  3F40               	moviw [0]fsr1
  8126  1EA0  00BA               	movwf	??_otoa
  8127  1EA1  3F41               	moviw [1]fsr1
  8128  1EA2  00BB               	movwf	??_otoa+1
  8129  1EA3  3F42               	moviw [2]fsr1
  8130  1EA4  00BC               	movwf	??_otoa+2
  8131  1EA5  3F43               	moviw [3]fsr1
  8132  1EA6  00BD               	movwf	??_otoa+3
  8133  1EA7  3F44               	moviw [4]fsr1
  8134  1EA8  00BE               	movwf	??_otoa+4
  8135  1EA9  3F45               	moviw [5]fsr1
  8136  1EAA  00BF               	movwf	??_otoa+5
  8137  1EAB  3F46               	moviw [6]fsr1
  8138  1EAC  00C0               	movwf	??_otoa+6
  8139  1EAD  3F47               	moviw [7]fsr1
  8140  1EAE  00C1               	movwf	??_otoa+7
  8141  1EAF  3003               	movlw	3
  8142  1EB0                     u8375:	
  8143  1EB0  0020               	movlb	0	; select bank0
  8144  1EB1  36C1               	lsrf	??_otoa+7,f
  8145  1EB2  0CC0               	rrf	??_otoa+6,f
  8146  1EB3  0CBF               	rrf	??_otoa+5,f
  8147  1EB4  0CBE               	rrf	??_otoa+4,f
  8148  1EB5  0CBD               	rrf	??_otoa+3,f
  8149  1EB6  0CBC               	rrf	??_otoa+2,f
  8150  1EB7  0CBB               	rrf	??_otoa+1,f
  8151  1EB8  0CBA               	rrf	??_otoa,f
  8152  1EB9  0B89               	decfsz	9,f
  8153  1EBA  2EB0               	goto	u8375
  8154  1EBB  0020               	movlb	0	; select bank0
  8155  1EBC  0841               	movf	??_otoa+7,w
  8156  1EBD  00CF               	movwf	otoa@n+7
  8157  1EBE  0840               	movf	??_otoa+6,w
  8158  1EBF  00CE               	movwf	otoa@n+6
  8159  1EC0  083F               	movf	??_otoa+5,w
  8160  1EC1  00CD               	movwf	otoa@n+5
  8161  1EC2  083E               	movf	??_otoa+4,w
  8162  1EC3  00CC               	movwf	otoa@n+4
  8163  1EC4  083D               	movf	??_otoa+3,w
  8164  1EC5  00CB               	movwf	otoa@n+3
  8165  1EC6  083C               	movf	??_otoa+2,w
  8166  1EC7  00CA               	movwf	otoa@n+2
  8167  1EC8  083B               	movf	??_otoa+1,w
  8168  1EC9  00C9               	movwf	otoa@n+1
  8169  1ECA  083A               	movf	??_otoa,w
  8170  1ECB  00C8               	movwf	otoa@n
  8171  1ECC                     l678:	
  8172                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 531:     }
  8173                           
  8174                           
  8175                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8176  1ECC  0851               	movf	otoa@i+1,w
  8177  1ECD  3A80               	xorlw	128
  8178  1ECE  00BA               	movwf	??_otoa
  8179  1ECF  3080               	movlw	128
  8180  1ED0  023A               	subwf	??_otoa,w
  8181  1ED1  1D03               	skipz
  8182  1ED2  2ED5               	goto	u8385
  8183  1ED3  3001               	movlw	1
  8184  1ED4  0250               	subwf	otoa@i,w
  8185  1ED5                     u8385:	
  8186  1ED5  1803               	btfsc	3,0
  8187  1ED6  2E59               	goto	l6395
  8188  1ED7                     l684:	
  8189                           
  8190                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
  8191  1ED7  0021               	movlb	1	; select bank1
  8192  1ED8  1E6D               	btfss	_flags^(0+128),4
  8193  1ED9  2EF0               	goto	l6411
  8194  1EDA  0020               	movlb	0	; select bank0
  8195  1EDB  0844               	movf	otoa@t,w
  8196  1EDC  0445               	iorwf	otoa@t+1,w
  8197  1EDD  1903               	btfsc	3,2
  8198  1EDE  2EF0               	goto	l6411
  8199                           
  8200                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
  8201  1EDF  30FF               	movlw	255
  8202  1EE0  07D0               	addwf	otoa@i,f
  8203  1EE1  30FF               	movlw	255
  8204  1EE2  3DD1               	addwfc	otoa@i+1,f
  8205                           
  8206                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
  8207  1EE3  3030               	movlw	48
  8208  1EE4  00BA               	movwf	??_otoa
  8209  1EE5  0850               	movf	otoa@i,w
  8210  1EE6  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8211  1EE7  0086               	movwf	6
  8212  1EE8  3001               	movlw	1	; select bank3/4
  8213  1EE9  0087               	movwf	7
  8214  1EEA  083A               	movf	??_otoa,w
  8215  1EEB  0081               	movwf	1
  8216                           
  8217                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
  8218  1EEC  30FF               	movlw	255
  8219  1EED  07C6               	addwf	otoa@w,f
  8220  1EEE  30FF               	movlw	255
  8221  1EEF  3DC7               	addwfc	otoa@w+1,f
  8222  1EF0                     l6411:	
  8223                           
  8224                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
  8225  1EF0  0020               	movlb	0	; select bank0
  8226  1EF1  0831               	movf	otoa@fp+1,w
  8227  1EF2  00A7               	movwf	pad@fp+1
  8228  1EF3  0830               	movf	otoa@fp,w
  8229  1EF4  00A6               	movwf	pad@fp
  8230  1EF5  0850               	movf	otoa@i,w
  8231  1EF6  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8232  1EF7  00BA               	movwf	??_otoa
  8233  1EF8  083A               	movf	??_otoa,w
  8234  1EF9  00A8               	movwf	pad@buf
  8235  1EFA  0847               	movf	otoa@w+1,w
  8236  1EFB  00AA               	movwf	pad@p+1
  8237  1EFC  0846               	movf	otoa@w,w
  8238  1EFD  00A9               	movwf	pad@p
  8239  1EFE  31A1  21BB         	fcall	_pad
  8240  1F00  0020               	movlb	0	; select bank0
  8241  1F01  0827               	movf	?_pad+1,w
  8242  1F02  00B1               	movwf	?_otoa+1
  8243  1F03  0826               	movf	?_pad,w
  8244  1F04  00B0               	movwf	?_otoa
  8245  1F05  0008               	return
  8246  1F06                     __end_of_otoa:	
  8247                           
  8248                           	psect	text20
  8249  122F                     __ptext20:	
  8250 ;; *************** function _dtoa *****************
  8251 ;; Defined at:
  8252 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8253 ;; Parameters:    Size  Location     Type
  8254 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  8255 ;;		 -> vsnprintf@f(6), 
  8256 ;;  d               8   18[BANK0 ] long long 
  8257 ;; Auto vars:     Size  Location     Type
  8258 ;;  n               8   37[BANK0 ] long long 
  8259 ;;  i               2   45[BANK0 ] int 
  8260 ;;  s               2   35[BANK0 ] int 
  8261 ;;  w               2   33[BANK0 ] int 
  8262 ;;  p               2   31[BANK0 ] int 
  8263 ;; Return value:  Size  Location     Type
  8264 ;;                  2   16[BANK0 ] int 
  8265 ;; Registers used:
  8266 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8267 ;; Tracked objects:
  8268 ;;		On entry : 0/0
  8269 ;;		On exit  : 0/0
  8270 ;;		Unchanged: 0/0
  8271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8272 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8273 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8274 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8275 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8276 ;;Total ram usage:       31 bytes
  8277 ;; Hardware stack levels used:    1
  8278 ;; Hardware stack levels required when called:    5
  8279 ;; This function calls:
  8280 ;;		___aodiv
  8281 ;;		___aomod
  8282 ;;		_abs
  8283 ;;		_pad
  8284 ;; This function is called by:
  8285 ;;		_vfpfcnvrt
  8286 ;; This function uses a non-reentrant model
  8287 ;;
  8288                           
  8289                           
  8290                           ;psect for function _dtoa
  8291  122F                     _dtoa:	
  8292                           
  8293                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  8294                           
  8295                           ;incstack = 0
  8296                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8297  122F  0020               	movlb	0	; select bank0
  8298  1230  0832               	movf	dtoa@d,w
  8299  1231  00C5               	movwf	dtoa@n
  8300  1232  0833               	movf	dtoa@d+1,w
  8301  1233  00C6               	movwf	dtoa@n+1
  8302  1234  0834               	movf	dtoa@d+2,w
  8303  1235  00C7               	movwf	dtoa@n+2
  8304  1236  0835               	movf	dtoa@d+3,w
  8305  1237  00C8               	movwf	dtoa@n+3
  8306  1238  0836               	movf	dtoa@d+4,w
  8307  1239  00C9               	movwf	dtoa@n+4
  8308  123A  0837               	movf	dtoa@d+5,w
  8309  123B  00CA               	movwf	dtoa@n+5
  8310  123C  0838               	movf	dtoa@d+6,w
  8311  123D  00CB               	movwf	dtoa@n+6
  8312  123E  0839               	movf	dtoa@d+7,w
  8313  123F  00CC               	movwf	dtoa@n+7
  8314                           
  8315                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  8316  1240  3045               	movlw	low dtoa@n
  8317  1241  0086               	movwf	6
  8318  1242  3000               	movlw	high dtoa@n
  8319  1243  0087               	movwf	7
  8320  1244  3F47               	moviw [7]fsr1
  8321  1245  00BA               	movwf	??_dtoa
  8322  1246  1FBA               	btfss	??_dtoa,7
  8323  1247  2A4A               	goto	u8190
  8324  1248  3001               	movlw	1
  8325  1249  2A4B               	goto	u8200
  8326  124A                     u8190:	
  8327  124A  3000               	movlw	0
  8328  124B                     u8200:	
  8329  124B  0020               	movlb	0	; select bank0
  8330  124C  00BB               	movwf	??_dtoa+1
  8331  124D  01BC               	clrf	??_dtoa+2
  8332  124E  083B               	movf	??_dtoa+1,w
  8333  124F  00C3               	movwf	dtoa@s
  8334  1250  083C               	movf	??_dtoa+2,w
  8335  1251  00C4               	movwf	dtoa@s+1
  8336                           
  8337                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  8338  1252  0843               	movf	dtoa@s,w
  8339  1253  0444               	iorwf	dtoa@s+1,w
  8340  1254  1903               	btfsc	3,2
  8341  1255  2A74               	goto	l647
  8342                           
  8343                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  8344  1256  09C5               	comf	dtoa@n,f
  8345  1257  09C6               	comf	dtoa@n+1,f
  8346  1258  09C7               	comf	dtoa@n+2,f
  8347  1259  09C8               	comf	dtoa@n+3,f
  8348  125A  09C9               	comf	dtoa@n+4,f
  8349  125B  09CA               	comf	dtoa@n+5,f
  8350  125C  09CB               	comf	dtoa@n+6,f
  8351  125D  09CC               	comf	dtoa@n+7,f
  8352  125E  0AC5               	incf	dtoa@n,f
  8353  125F  1D03               	skipz
  8354  1260  2A74               	goto	l647
  8355  1261  0AC6               	incf	dtoa@n+1,f
  8356  1262  1D03               	skipz
  8357  1263  2A74               	goto	l647
  8358  1264  0AC7               	incf	dtoa@n+2,f
  8359  1265  1D03               	skipz
  8360  1266  2A74               	goto	l647
  8361  1267  0AC8               	incf	dtoa@n+3,f
  8362  1268  1D03               	skipz
  8363  1269  2A74               	goto	l647
  8364  126A  0AC9               	incf	dtoa@n+4,f
  8365  126B  1D03               	skipz
  8366  126C  2A74               	goto	l647
  8367  126D  0ACA               	incf	dtoa@n+5,f
  8368  126E  1D03               	skipz
  8369  126F  2A74               	goto	l647
  8370  1270  0ACB               	incf	dtoa@n+6,f
  8371  1271  1D03               	skipz
  8372  1272  2A74               	goto	l647
  8373  1273  0ACC               	incf	dtoa@n+7,f
  8374  1274                     l647:	
  8375                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
  8376                           
  8377                           
  8378                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  8379  1274  0022               	movlb	2	; select bank2
  8380  1275  1BC5               	btfsc	(_prec+1)^(0+256),7
  8381  1276  2A7C               	goto	l648
  8382                           
  8383                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  8384  1277  30FD               	movlw	253
  8385  1278  0021               	movlb	1	; select bank1
  8386  1279  05ED               	andwf	_flags^(0+128),f
  8387  127A  30FF               	movlw	255
  8388  127B  05EE               	andwf	(_flags+1)^(0+128),f
  8389  127C                     l648:	
  8390                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
  8391                           
  8392                           
  8393                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  8394  127C  0022               	movlb	2	; select bank2
  8395  127D  0845               	movf	(_prec+1)^(0+256),w
  8396  127E  3A80               	xorlw	128
  8397  127F  0020               	movlb	0	; select bank0
  8398  1280  00BA               	movwf	??_dtoa
  8399  1281  3080               	movlw	128
  8400  1282  023A               	subwf	??_dtoa,w
  8401  1283  1D03               	skipz
  8402  1284  2A88               	goto	u8245
  8403  1285  3001               	movlw	1
  8404  1286  0022               	movlb	2	; select bank2
  8405  1287  0244               	subwf	_prec^(0+256),w
  8406  1288                     u8245:	
  8407  1288  1803               	skipnc
  8408  1289  2A90               	goto	l6325
  8409  128A  3001               	movlw	1
  8410  128B  0020               	movlb	0	; select bank0
  8411  128C  00BF               	movwf	dtoa@p
  8412  128D  3000               	movlw	0
  8413  128E  00C0               	movwf	dtoa@p+1
  8414  128F  2A98               	goto	l652
  8415  1290                     l6325:	
  8416  1290  0022               	movlb	2	; select bank2
  8417  1291  0845               	movf	(_prec+1)^(0+256),w
  8418  1292  0020               	movlb	0	; select bank0
  8419  1293  00C0               	movwf	dtoa@p+1
  8420  1294  0022               	movlb	2	; select bank2
  8421  1295  0844               	movf	_prec^(0+256),w
  8422  1296  0020               	movlb	0	; select bank0
  8423  1297  00BF               	movwf	dtoa@p
  8424  1298                     l652:	
  8425                           
  8426                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  8427  1298  0022               	movlb	2	; select bank2
  8428  1299  0843               	movf	(_width+1)^(0+256),w
  8429  129A  0020               	movlb	0	; select bank0
  8430  129B  00C2               	movwf	dtoa@w+1
  8431  129C  0022               	movlb	2	; select bank2
  8432  129D  0842               	movf	_width^(0+256),w
  8433  129E  0020               	movlb	0	; select bank0
  8434  129F  00C1               	movwf	dtoa@w
  8435                           
  8436                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  8437  12A0  0843               	movf	dtoa@s,w
  8438  12A1  0444               	iorwf	dtoa@s+1,w
  8439  12A2  1D03               	btfss	3,2
  8440  12A3  2AA7               	goto	l6331
  8441  12A4  0021               	movlb	1	; select bank1
  8442  12A5  1D6D               	btfss	_flags^(0+128),2
  8443  12A6  2AAC               	goto	l653
  8444  12A7                     l6331:	
  8445                           
  8446                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  8447  12A7  30FF               	movlw	255
  8448  12A8  0020               	movlb	0	; select bank0
  8449  12A9  07C1               	addwf	dtoa@w,f
  8450  12AA  30FF               	movlw	255
  8451  12AB  3DC2               	addwfc	dtoa@w+1,f
  8452  12AC                     l653:	
  8453                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
  8454                           
  8455                           
  8456                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  8457  12AC  301F               	movlw	31
  8458  12AD  0020               	movlb	0	; select bank0
  8459  12AE  00CD               	movwf	dtoa@i
  8460  12AF  3000               	movlw	0
  8461  12B0  00CE               	movwf	dtoa@i+1
  8462                           
  8463                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  8464  12B1  0023               	movlb	3	; select bank3
  8465  12B2  01BF               	clrf	(_dbuf^(0+384)+31)
  8466                           
  8467                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8468  12B3  2B42               	goto	l656
  8469  12B4                     l6345:	
  8470  12B4  0020               	movlb	0	; select bank0
  8471  12B5  0845               	movf	dtoa@n,w
  8472  12B6  0446               	iorwf	dtoa@n+1,w
  8473  12B7  0447               	iorwf	dtoa@n+2,w
  8474  12B8  0448               	iorwf	dtoa@n+3,w
  8475  12B9  0449               	iorwf	dtoa@n+4,w
  8476  12BA  044A               	iorwf	dtoa@n+5,w
  8477  12BB  044B               	iorwf	dtoa@n+6,w
  8478  12BC  044C               	iorwf	dtoa@n+7,w
  8479  12BD  1D03               	skipz
  8480  12BE  2AD9               	goto	l6335
  8481  12BF  0840               	movf	dtoa@p+1,w
  8482  12C0  3A80               	xorlw	128
  8483  12C1  00BA               	movwf	??_dtoa
  8484  12C2  3080               	movlw	128
  8485  12C3  023A               	subwf	??_dtoa,w
  8486  12C4  1D03               	skipz
  8487  12C5  2AC8               	goto	u8295
  8488  12C6  3001               	movlw	1
  8489  12C7  023F               	subwf	dtoa@p,w
  8490  12C8                     u8295:	
  8491  12C8  1803               	skipnc
  8492  12C9  2AD9               	goto	l6335
  8493  12CA  0020               	movlb	0	; select bank0
  8494  12CB  0842               	movf	dtoa@w+1,w
  8495  12CC  3A80               	xorlw	128
  8496  12CD  00BA               	movwf	??_dtoa
  8497  12CE  3080               	movlw	128
  8498  12CF  023A               	subwf	??_dtoa,w
  8499  12D0  1D03               	skipz
  8500  12D1  2AD4               	goto	u8305
  8501  12D2  3001               	movlw	1
  8502  12D3  0241               	subwf	dtoa@w,w
  8503  12D4                     u8305:	
  8504  12D4  1C03               	skipc
  8505  12D5  2B4E               	goto	l6353
  8506  12D6  0021               	movlb	1	; select bank1
  8507  12D7  1CED               	btfss	_flags^(0+128),1
  8508  12D8  2B4E               	goto	l6353
  8509  12D9                     l6335:	
  8510                           
  8511                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  8512  12D9  30FF               	movlw	255
  8513  12DA  0020               	movlb	0	; select bank0
  8514  12DB  07CD               	addwf	dtoa@i,f
  8515  12DC  30FF               	movlw	255
  8516  12DD  3DCE               	addwfc	dtoa@i+1,f
  8517                           
  8518                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  8519  12DE  300A               	movlw	10
  8520  12DF  00A0               	movwf	___aomod@divisor
  8521  12E0  01A1               	clrf	___aomod@divisor+1
  8522  12E1  01A2               	clrf	___aomod@divisor+2
  8523  12E2  01A3               	clrf	___aomod@divisor+3
  8524  12E3  01A4               	clrf	___aomod@divisor+4
  8525  12E4  01A5               	clrf	___aomod@divisor+5
  8526  12E5  01A6               	clrf	___aomod@divisor+6
  8527  12E6  01A7               	clrf	___aomod@divisor+7
  8528  12E7  0845               	movf	dtoa@n,w
  8529  12E8  00A8               	movwf	___aomod@dividend
  8530  12E9  0846               	movf	dtoa@n+1,w
  8531  12EA  00A9               	movwf	___aomod@dividend+1
  8532  12EB  0847               	movf	dtoa@n+2,w
  8533  12EC  00AA               	movwf	___aomod@dividend+2
  8534  12ED  0848               	movf	dtoa@n+3,w
  8535  12EE  00AB               	movwf	___aomod@dividend+3
  8536  12EF  0849               	movf	dtoa@n+4,w
  8537  12F0  00AC               	movwf	___aomod@dividend+4
  8538  12F1  084A               	movf	dtoa@n+5,w
  8539  12F2  00AD               	movwf	___aomod@dividend+5
  8540  12F3  084B               	movf	dtoa@n+6,w
  8541  12F4  00AE               	movwf	___aomod@dividend+6
  8542  12F5  084C               	movf	dtoa@n+7,w
  8543  12F6  00AF               	movwf	___aomod@dividend+7
  8544  12F7  319B  2361  3192   	fcall	___aomod
  8545  12FA  0020               	movlb	0	; select bank0
  8546  12FB  0821               	movf	?___aomod+1,w
  8547  12FC  00F5               	movwf	abs@a+1
  8548  12FD  0820               	movf	?___aomod,w
  8549  12FE  00F4               	movwf	abs@a
  8550  12FF  31AE  269A  3192   	fcall	_abs
  8551  1302  0874               	movf	?_abs,w
  8552  1303  3E30               	addlw	48
  8553  1304  0020               	movlb	0	; select bank0
  8554  1305  00BA               	movwf	??_dtoa
  8555  1306  084D               	movf	dtoa@i,w
  8556  1307  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8557  1308  0086               	movwf	6
  8558  1309  3001               	movlw	1	; select bank3/4
  8559  130A  0087               	movwf	7
  8560  130B  083A               	movf	??_dtoa,w
  8561  130C  0081               	movwf	1
  8562                           
  8563                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  8564  130D  30FF               	movlw	255
  8565  130E  07BF               	addwf	dtoa@p,f
  8566  130F  30FF               	movlw	255
  8567  1310  3DC0               	addwfc	dtoa@p+1,f
  8568                           
  8569                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  8570  1311  30FF               	movlw	255
  8571  1312  07C1               	addwf	dtoa@w,f
  8572  1313  30FF               	movlw	255
  8573  1314  3DC2               	addwfc	dtoa@w+1,f
  8574                           
  8575                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  8576  1315  300A               	movlw	10
  8577  1316  00A0               	movwf	___aodiv@divisor
  8578  1317  01A1               	clrf	___aodiv@divisor+1
  8579  1318  01A2               	clrf	___aodiv@divisor+2
  8580  1319  01A3               	clrf	___aodiv@divisor+3
  8581  131A  01A4               	clrf	___aodiv@divisor+4
  8582  131B  01A5               	clrf	___aodiv@divisor+5
  8583  131C  01A6               	clrf	___aodiv@divisor+6
  8584  131D  01A7               	clrf	___aodiv@divisor+7
  8585  131E  0845               	movf	dtoa@n,w
  8586  131F  00A8               	movwf	___aodiv@dividend
  8587  1320  0846               	movf	dtoa@n+1,w
  8588  1321  00A9               	movwf	___aodiv@dividend+1
  8589  1322  0847               	movf	dtoa@n+2,w
  8590  1323  00AA               	movwf	___aodiv@dividend+2
  8591  1324  0848               	movf	dtoa@n+3,w
  8592  1325  00AB               	movwf	___aodiv@dividend+3
  8593  1326  0849               	movf	dtoa@n+4,w
  8594  1327  00AC               	movwf	___aodiv@dividend+4
  8595  1328  084A               	movf	dtoa@n+5,w
  8596  1329  00AD               	movwf	___aodiv@dividend+5
  8597  132A  084B               	movf	dtoa@n+6,w
  8598  132B  00AE               	movwf	___aodiv@dividend+6
  8599  132C  084C               	movf	dtoa@n+7,w
  8600  132D  00AF               	movwf	___aodiv@dividend+7
  8601  132E  319D  2520  3192   	fcall	___aodiv
  8602  1331  0020               	movlb	0	; select bank0
  8603  1332  0820               	movf	?___aodiv,w
  8604  1333  00C5               	movwf	dtoa@n
  8605  1334  0821               	movf	?___aodiv+1,w
  8606  1335  00C6               	movwf	dtoa@n+1
  8607  1336  0822               	movf	?___aodiv+2,w
  8608  1337  00C7               	movwf	dtoa@n+2
  8609  1338  0823               	movf	?___aodiv+3,w
  8610  1339  00C8               	movwf	dtoa@n+3
  8611  133A  0824               	movf	?___aodiv+4,w
  8612  133B  00C9               	movwf	dtoa@n+4
  8613  133C  0825               	movf	?___aodiv+5,w
  8614  133D  00CA               	movwf	dtoa@n+5
  8615  133E  0826               	movf	?___aodiv+6,w
  8616  133F  00CB               	movwf	dtoa@n+6
  8617  1340  0827               	movf	?___aodiv+7,w
  8618  1341  00CC               	movwf	dtoa@n+7
  8619  1342                     l656:	
  8620                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
  8621                           
  8622                           
  8623                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8624  1342  0020               	movlb	0	; select bank0
  8625  1343  084E               	movf	dtoa@i+1,w
  8626  1344  3A80               	xorlw	128
  8627  1345  00BA               	movwf	??_dtoa
  8628  1346  3080               	movlw	128
  8629  1347  023A               	subwf	??_dtoa,w
  8630  1348  1D03               	skipz
  8631  1349  2B4C               	goto	u8275
  8632  134A  3001               	movlw	1
  8633  134B  024D               	subwf	dtoa@i,w
  8634  134C                     u8275:	
  8635  134C  1803               	btfsc	3,0
  8636  134D  2AB4               	goto	l6345
  8637  134E                     l6353:	
  8638                           
  8639                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  8640  134E  0020               	movlb	0	; select bank0
  8641  134F  0843               	movf	dtoa@s,w
  8642  1350  0444               	iorwf	dtoa@s+1,w
  8643  1351  1D03               	btfss	3,2
  8644  1352  2B56               	goto	l6357
  8645  1353  0021               	movlb	1	; select bank1
  8646  1354  1D6D               	btfss	_flags^(0+128),2
  8647  1355  2B6E               	goto	l6367
  8648  1356                     l6357:	
  8649                           
  8650                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  8651  1356  30FF               	movlw	255
  8652  1357  0020               	movlb	0	; select bank0
  8653  1358  07CD               	addwf	dtoa@i,f
  8654  1359  30FF               	movlw	255
  8655  135A  3DCE               	addwfc	dtoa@i+1,f
  8656                           
  8657                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  8658  135B  0843               	movf	dtoa@s,w
  8659  135C  0444               	iorwf	dtoa@s+1,w
  8660  135D  1D03               	btfss	3,2
  8661  135E  2B61               	goto	l6363
  8662  135F  302B               	movlw	43
  8663  1360  2B62               	goto	L2
  8664  1361                     l6363:	
  8665  1361  302D               	movlw	45
  8666  1362                     L2:	
  8667  1362  00BD               	movwf	_dtoa$1204
  8668  1363  3000               	movlw	0
  8669  1364  00BE               	movwf	_dtoa$1204+1
  8670  1365  083D               	movf	_dtoa$1204,w
  8671  1366  00BA               	movwf	??_dtoa
  8672  1367  084D               	movf	dtoa@i,w
  8673  1368  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8674  1369  0086               	movwf	6
  8675  136A  3001               	movlw	1	; select bank3/4
  8676  136B  0087               	movwf	7
  8677  136C  083A               	movf	??_dtoa,w
  8678  136D  0081               	movwf	1
  8679  136E                     l6367:	
  8680                           
  8681                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  8682  136E  0020               	movlb	0	; select bank0
  8683  136F  0831               	movf	dtoa@fp+1,w
  8684  1370  00A7               	movwf	pad@fp+1
  8685  1371  0830               	movf	dtoa@fp,w
  8686  1372  00A6               	movwf	pad@fp
  8687  1373  084D               	movf	dtoa@i,w
  8688  1374  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8689  1375  00BA               	movwf	??_dtoa
  8690  1376  083A               	movf	??_dtoa,w
  8691  1377  00A8               	movwf	pad@buf
  8692  1378  0842               	movf	dtoa@w+1,w
  8693  1379  00AA               	movwf	pad@p+1
  8694  137A  0841               	movf	dtoa@w,w
  8695  137B  00A9               	movwf	pad@p
  8696  137C  31A1  21BB         	fcall	_pad
  8697  137E  0020               	movlb	0	; select bank0
  8698  137F  0827               	movf	?_pad+1,w
  8699  1380  00B1               	movwf	?_dtoa+1
  8700  1381  0826               	movf	?_pad,w
  8701  1382  00B0               	movwf	?_dtoa
  8702  1383  0008               	return
  8703  1384                     __end_of_dtoa:	
  8704                           
  8705                           	psect	text21
  8706  2E9A                     __ptext21:	
  8707 ;; *************** function _abs *****************
  8708 ;; Defined at:
  8709 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  8710 ;; Parameters:    Size  Location     Type
  8711 ;;  a               2    4[COMMON] int 
  8712 ;; Auto vars:     Size  Location     Type
  8713 ;;		None
  8714 ;; Return value:  Size  Location     Type
  8715 ;;                  2    4[COMMON] int 
  8716 ;; Registers used:
  8717 ;;		wreg, status,2, status,0
  8718 ;; Tracked objects:
  8719 ;;		On entry : 0/0
  8720 ;;		On exit  : 0/0
  8721 ;;		Unchanged: 0/0
  8722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8723 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8725 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8726 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8727 ;;Total ram usage:        4 bytes
  8728 ;; Hardware stack levels used:    1
  8729 ;; Hardware stack levels required when called:    1
  8730 ;; This function calls:
  8731 ;;		Nothing
  8732 ;; This function is called by:
  8733 ;;		_dtoa
  8734 ;; This function uses a non-reentrant model
  8735 ;;
  8736                           
  8737                           
  8738                           ;psect for function _abs
  8739  2E9A                     _abs:	
  8740                           
  8741                           ;incstack = 0
  8742                           ; Regs used in _abs: [wreg+status,2+status,0]
  8743  2E9A  0875               	movf	abs@a+1,w
  8744  2E9B  3A80               	xorlw	128
  8745  2E9C  00F6               	movwf	??_abs
  8746  2E9D  3080               	movlw	128
  8747  2E9E  0276               	subwf	??_abs,w
  8748  2E9F  1D03               	skipz
  8749  2EA0  2EA3               	goto	u7725
  8750  2EA1  3001               	movlw	1
  8751  2EA2  0274               	subwf	abs@a,w
  8752  2EA3                     u7725:	
  8753  2EA3  1803               	skipnc
  8754  2EA4  0008               	return
  8755  2EA5  0974               	comf	abs@a,w
  8756  2EA6  00F6               	movwf	??_abs
  8757  2EA7  0975               	comf	abs@a+1,w
  8758  2EA8  00F7               	movwf	??_abs+1
  8759  2EA9  0AF6               	incf	??_abs,f
  8760  2EAA  1903               	skipnz
  8761  2EAB  0AF7               	incf	??_abs+1,f
  8762  2EAC  0876               	movf	??_abs,w
  8763  2EAD  00F4               	movwf	?_abs
  8764  2EAE  0877               	movf	??_abs+1,w
  8765  2EAF  00F5               	movwf	?_abs+1
  8766  2EB0  0008               	return
  8767  2EB1                     __end_of_abs:	
  8768                           
  8769                           	psect	text22
  8770  1B61                     __ptext22:	
  8771 ;; *************** function ___aomod *****************
  8772 ;; Defined at:
  8773 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  8774 ;; Parameters:    Size  Location     Type
  8775 ;;  divisor         8    0[BANK0 ] long long 
  8776 ;;  dividend        8    8[BANK0 ] long long 
  8777 ;; Auto vars:     Size  Location     Type
  8778 ;;  sign            1    3[COMMON] unsigned char 
  8779 ;;  counter         1    2[COMMON] unsigned char 
  8780 ;; Return value:  Size  Location     Type
  8781 ;;                  8    0[BANK0 ] long long 
  8782 ;; Registers used:
  8783 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8784 ;; Tracked objects:
  8785 ;;		On entry : 0/0
  8786 ;;		On exit  : 0/0
  8787 ;;		Unchanged: 0/0
  8788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8789 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8790 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8791 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8792 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8793 ;;Total ram usage:       19 bytes
  8794 ;; Hardware stack levels used:    1
  8795 ;; Hardware stack levels required when called:    1
  8796 ;; This function calls:
  8797 ;;		Nothing
  8798 ;; This function is called by:
  8799 ;;		_dtoa
  8800 ;; This function uses a non-reentrant model
  8801 ;;
  8802                           
  8803                           
  8804                           ;psect for function ___aomod
  8805  1B61                     ___aomod:	
  8806                           
  8807                           ;incstack = 0
  8808                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  8809  1B61  01F3               	clrf	___aomod@sign
  8810  1B62  3028               	movlw	low ___aomod@dividend
  8811  1B63  0086               	movwf	6
  8812  1B64  3000               	movlw	high ___aomod@dividend
  8813  1B65  0087               	movwf	7
  8814  1B66  3F47               	moviw [7]fsr1
  8815  1B67  00F1               	movwf	??___aomod
  8816  1B68  1FF1               	btfss	??___aomod,7
  8817  1B69  2B8B               	goto	l6225
  8818  1B6A  0020               	movlb	0	; select bank0
  8819  1B6B  09A8               	comf	___aomod@dividend,f
  8820  1B6C  09A9               	comf	___aomod@dividend+1,f
  8821  1B6D  09AA               	comf	___aomod@dividend+2,f
  8822  1B6E  09AB               	comf	___aomod@dividend+3,f
  8823  1B6F  09AC               	comf	___aomod@dividend+4,f
  8824  1B70  09AD               	comf	___aomod@dividend+5,f
  8825  1B71  09AE               	comf	___aomod@dividend+6,f
  8826  1B72  09AF               	comf	___aomod@dividend+7,f
  8827  1B73  0AA8               	incf	___aomod@dividend,f
  8828  1B74  1D03               	skipz
  8829  1B75  2B89               	goto	u798lld
  8830  1B76  0AA9               	incf	___aomod@dividend+1,f
  8831  1B77  1D03               	skipz
  8832  1B78  2B89               	goto	u798lld
  8833  1B79  0AAA               	incf	___aomod@dividend+2,f
  8834  1B7A  1D03               	skipz
  8835  1B7B  2B89               	goto	u798lld
  8836  1B7C  0AAB               	incf	___aomod@dividend+3,f
  8837  1B7D  1D03               	skipz
  8838  1B7E  2B89               	goto	u798lld
  8839  1B7F  0AAC               	incf	___aomod@dividend+4,f
  8840  1B80  1D03               	skipz
  8841  1B81  2B89               	goto	u798lld
  8842  1B82  0AAD               	incf	___aomod@dividend+5,f
  8843  1B83  1D03               	skipz
  8844  1B84  2B89               	goto	u798lld
  8845  1B85  0AAE               	incf	___aomod@dividend+6,f
  8846  1B86  1D03               	skipz
  8847  1B87  2B89               	goto	u798lld
  8848  1B88  0AAF               	incf	___aomod@dividend+7,f
  8849  1B89                     u798lld:	
  8850  1B89  01F3               	clrf	___aomod@sign
  8851  1B8A  0AF3               	incf	___aomod@sign,f
  8852  1B8B                     l6225:	
  8853  1B8B  3020               	movlw	low ___aomod@divisor
  8854  1B8C  0086               	movwf	6
  8855  1B8D  3000               	movlw	high ___aomod@divisor
  8856  1B8E  0087               	movwf	7
  8857  1B8F  3F47               	moviw [7]fsr1
  8858  1B90  00F1               	movwf	??___aomod
  8859  1B91  1FF1               	btfss	??___aomod,7
  8860  1B92  2BB2               	goto	l6229
  8861  1B93  0020               	movlb	0	; select bank0
  8862  1B94  09A0               	comf	___aomod@divisor,f
  8863  1B95  09A1               	comf	___aomod@divisor+1,f
  8864  1B96  09A2               	comf	___aomod@divisor+2,f
  8865  1B97  09A3               	comf	___aomod@divisor+3,f
  8866  1B98  09A4               	comf	___aomod@divisor+4,f
  8867  1B99  09A5               	comf	___aomod@divisor+5,f
  8868  1B9A  09A6               	comf	___aomod@divisor+6,f
  8869  1B9B  09A7               	comf	___aomod@divisor+7,f
  8870  1B9C  0AA0               	incf	___aomod@divisor,f
  8871  1B9D  1D03               	skipz
  8872  1B9E  2BB2               	goto	l6229
  8873  1B9F  0AA1               	incf	___aomod@divisor+1,f
  8874  1BA0  1D03               	skipz
  8875  1BA1  2BB2               	goto	l6229
  8876  1BA2  0AA2               	incf	___aomod@divisor+2,f
  8877  1BA3  1D03               	skipz
  8878  1BA4  2BB2               	goto	l6229
  8879  1BA5  0AA3               	incf	___aomod@divisor+3,f
  8880  1BA6  1D03               	skipz
  8881  1BA7  2BB2               	goto	l6229
  8882  1BA8  0AA4               	incf	___aomod@divisor+4,f
  8883  1BA9  1D03               	skipz
  8884  1BAA  2BB2               	goto	l6229
  8885  1BAB  0AA5               	incf	___aomod@divisor+5,f
  8886  1BAC  1D03               	skipz
  8887  1BAD  2BB2               	goto	l6229
  8888  1BAE  0AA6               	incf	___aomod@divisor+6,f
  8889  1BAF  1D03               	skipz
  8890  1BB0  2BB2               	goto	l6229
  8891  1BB1  0AA7               	incf	___aomod@divisor+7,f
  8892  1BB2                     l6229:	
  8893  1BB2  0020               	movlb	0	; select bank0
  8894  1BB3  0820               	movf	___aomod@divisor,w
  8895  1BB4  0421               	iorwf	___aomod@divisor+1,w
  8896  1BB5  0422               	iorwf	___aomod@divisor+2,w
  8897  1BB6  0423               	iorwf	___aomod@divisor+3,w
  8898  1BB7  0424               	iorwf	___aomod@divisor+4,w
  8899  1BB8  0425               	iorwf	___aomod@divisor+5,w
  8900  1BB9  0426               	iorwf	___aomod@divisor+6,w
  8901  1BBA  0427               	iorwf	___aomod@divisor+7,w
  8902  1BBB  1903               	skipnz
  8903  1BBC  2C0A               	goto	l6245
  8904  1BBD  01F2               	clrf	___aomod@counter
  8905  1BBE  0AF2               	incf	___aomod@counter,f
  8906  1BBF                     l6237:	
  8907  1BBF  1BA7               	btfsc	___aomod@divisor+7,7
  8908  1BC0  2BCE               	goto	l6239
  8909  1BC1  35A0               	lslf	___aomod@divisor,f
  8910  1BC2  0DA1               	rlf	___aomod@divisor+1,f
  8911  1BC3  0DA2               	rlf	___aomod@divisor+2,f
  8912  1BC4  0DA3               	rlf	___aomod@divisor+3,f
  8913  1BC5  0DA4               	rlf	___aomod@divisor+4,f
  8914  1BC6  0DA5               	rlf	___aomod@divisor+5,f
  8915  1BC7  0DA6               	rlf	___aomod@divisor+6,f
  8916  1BC8  0DA7               	rlf	___aomod@divisor+7,f
  8917  1BC9  3001               	movlw	1
  8918  1BCA  00F1               	movwf	??___aomod
  8919  1BCB  0871               	movf	??___aomod,w
  8920  1BCC  07F2               	addwf	___aomod@counter,f
  8921  1BCD  2BBF               	goto	l6237
  8922  1BCE                     l6239:	
  8923  1BCE  0827               	movf	___aomod@divisor+7,w
  8924  1BCF  022F               	subwf	___aomod@dividend+7,w
  8925  1BD0  1D03               	skipz
  8926  1BD1  2BEC               	goto	u8035
  8927  1BD2  0826               	movf	___aomod@divisor+6,w
  8928  1BD3  022E               	subwf	___aomod@dividend+6,w
  8929  1BD4  1D03               	skipz
  8930  1BD5  2BEC               	goto	u8035
  8931  1BD6  0825               	movf	___aomod@divisor+5,w
  8932  1BD7  022D               	subwf	___aomod@dividend+5,w
  8933  1BD8  1D03               	skipz
  8934  1BD9  2BEC               	goto	u8035
  8935  1BDA  0824               	movf	___aomod@divisor+4,w
  8936  1BDB  022C               	subwf	___aomod@dividend+4,w
  8937  1BDC  1D03               	skipz
  8938  1BDD  2BEC               	goto	u8035
  8939  1BDE  0823               	movf	___aomod@divisor+3,w
  8940  1BDF  022B               	subwf	___aomod@dividend+3,w
  8941  1BE0  1D03               	skipz
  8942  1BE1  2BEC               	goto	u8035
  8943  1BE2  0822               	movf	___aomod@divisor+2,w
  8944  1BE3  022A               	subwf	___aomod@dividend+2,w
  8945  1BE4  1D03               	skipz
  8946  1BE5  2BEC               	goto	u8035
  8947  1BE6  0821               	movf	___aomod@divisor+1,w
  8948  1BE7  0229               	subwf	___aomod@dividend+1,w
  8949  1BE8  1D03               	skipz
  8950  1BE9  2BEC               	goto	u8035
  8951  1BEA  0820               	movf	___aomod@divisor,w
  8952  1BEB  0228               	subwf	___aomod@dividend,w
  8953  1BEC                     u8035:	
  8954  1BEC  1C03               	skipc
  8955  1BED  2BFE               	goto	l6243
  8956  1BEE  0820               	movf	___aomod@divisor,w
  8957  1BEF  02A8               	subwf	___aomod@dividend,f
  8958  1BF0  0821               	movf	___aomod@divisor+1,w
  8959  1BF1  3BA9               	subwfb	___aomod@dividend+1,f
  8960  1BF2  0822               	movf	___aomod@divisor+2,w
  8961  1BF3  3BAA               	subwfb	___aomod@dividend+2,f
  8962  1BF4  0823               	movf	___aomod@divisor+3,w
  8963  1BF5  3BAB               	subwfb	___aomod@dividend+3,f
  8964  1BF6  0824               	movf	___aomod@divisor+4,w
  8965  1BF7  3BAC               	subwfb	___aomod@dividend+4,f
  8966  1BF8  0825               	movf	___aomod@divisor+5,w
  8967  1BF9  3BAD               	subwfb	___aomod@dividend+5,f
  8968  1BFA  0826               	movf	___aomod@divisor+6,w
  8969  1BFB  3BAE               	subwfb	___aomod@dividend+6,f
  8970  1BFC  0827               	movf	___aomod@divisor+7,w
  8971  1BFD  3BAF               	subwfb	___aomod@dividend+7,f
  8972  1BFE                     l6243:	
  8973  1BFE  36A7               	lsrf	___aomod@divisor+7,f
  8974  1BFF  0CA6               	rrf	___aomod@divisor+6,f
  8975  1C00  0CA5               	rrf	___aomod@divisor+5,f
  8976  1C01  0CA4               	rrf	___aomod@divisor+4,f
  8977  1C02  0CA3               	rrf	___aomod@divisor+3,f
  8978  1C03  0CA2               	rrf	___aomod@divisor+2,f
  8979  1C04  0CA1               	rrf	___aomod@divisor+1,f
  8980  1C05  0CA0               	rrf	___aomod@divisor,f
  8981  1C06  3001               	movlw	1
  8982  1C07  02F2               	subwf	___aomod@counter,f
  8983  1C08  1D03               	btfss	3,2
  8984  1C09  2BCE               	goto	l6239
  8985  1C0A                     l6245:	
  8986  1C0A  0873               	movf	___aomod@sign,w
  8987  1C0B  1903               	btfsc	3,2
  8988  1C0C  2C2B               	goto	l953
  8989  1C0D  09A8               	comf	___aomod@dividend,f
  8990  1C0E  09A9               	comf	___aomod@dividend+1,f
  8991  1C0F  09AA               	comf	___aomod@dividend+2,f
  8992  1C10  09AB               	comf	___aomod@dividend+3,f
  8993  1C11  09AC               	comf	___aomod@dividend+4,f
  8994  1C12  09AD               	comf	___aomod@dividend+5,f
  8995  1C13  09AE               	comf	___aomod@dividend+6,f
  8996  1C14  09AF               	comf	___aomod@dividend+7,f
  8997  1C15  0AA8               	incf	___aomod@dividend,f
  8998  1C16  1D03               	skipz
  8999  1C17  2C2B               	goto	l953
  9000  1C18  0AA9               	incf	___aomod@dividend+1,f
  9001  1C19  1D03               	skipz
  9002  1C1A  2C2B               	goto	l953
  9003  1C1B  0AAA               	incf	___aomod@dividend+2,f
  9004  1C1C  1D03               	skipz
  9005  1C1D  2C2B               	goto	l953
  9006  1C1E  0AAB               	incf	___aomod@dividend+3,f
  9007  1C1F  1D03               	skipz
  9008  1C20  2C2B               	goto	l953
  9009  1C21  0AAC               	incf	___aomod@dividend+4,f
  9010  1C22  1D03               	skipz
  9011  1C23  2C2B               	goto	l953
  9012  1C24  0AAD               	incf	___aomod@dividend+5,f
  9013  1C25  1D03               	skipz
  9014  1C26  2C2B               	goto	l953
  9015  1C27  0AAE               	incf	___aomod@dividend+6,f
  9016  1C28  1D03               	skipz
  9017  1C29  2C2B               	goto	l953
  9018  1C2A  0AAF               	incf	___aomod@dividend+7,f
  9019  1C2B                     l953:	
  9020  1C2B  0020               	movlb	0	; select bank0
  9021  1C2C  0828               	movf	___aomod@dividend,w
  9022  1C2D  00A0               	movwf	?___aomod
  9023  1C2E  0829               	movf	___aomod@dividend+1,w
  9024  1C2F  00A1               	movwf	?___aomod+1
  9025  1C30  082A               	movf	___aomod@dividend+2,w
  9026  1C31  00A2               	movwf	?___aomod+2
  9027  1C32  082B               	movf	___aomod@dividend+3,w
  9028  1C33  00A3               	movwf	?___aomod+3
  9029  1C34  082C               	movf	___aomod@dividend+4,w
  9030  1C35  00A4               	movwf	?___aomod+4
  9031  1C36  082D               	movf	___aomod@dividend+5,w
  9032  1C37  00A5               	movwf	?___aomod+5
  9033  1C38  082E               	movf	___aomod@dividend+6,w
  9034  1C39  00A6               	movwf	?___aomod+6
  9035  1C3A  082F               	movf	___aomod@dividend+7,w
  9036  1C3B  00A7               	movwf	?___aomod+7
  9037  1C3C  0008               	return
  9038  1C3D                     __end_of___aomod:	
  9039                           
  9040                           	psect	text23
  9041  1D20                     __ptext23:	
  9042 ;; *************** function ___aodiv *****************
  9043 ;; Defined at:
  9044 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  9045 ;; Parameters:    Size  Location     Type
  9046 ;;  divisor         8    0[BANK0 ] long long 
  9047 ;;  dividend        8    8[BANK0 ] long long 
  9048 ;; Auto vars:     Size  Location     Type
  9049 ;;  quotient        8    4[COMMON] long long 
  9050 ;;  sign            1    3[COMMON] unsigned char 
  9051 ;;  counter         1    2[COMMON] unsigned char 
  9052 ;; Return value:  Size  Location     Type
  9053 ;;                  8    0[BANK0 ] long long 
  9054 ;; Registers used:
  9055 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9056 ;; Tracked objects:
  9057 ;;		On entry : 0/0
  9058 ;;		On exit  : 0/0
  9059 ;;		Unchanged: 0/0
  9060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9061 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9062 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9063 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9064 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9065 ;;Total ram usage:       27 bytes
  9066 ;; Hardware stack levels used:    1
  9067 ;; Hardware stack levels required when called:    1
  9068 ;; This function calls:
  9069 ;;		Nothing
  9070 ;; This function is called by:
  9071 ;;		_dtoa
  9072 ;; This function uses a non-reentrant model
  9073 ;;
  9074                           
  9075                           
  9076                           ;psect for function ___aodiv
  9077  1D20                     ___aodiv:	
  9078                           
  9079                           ;incstack = 0
  9080                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  9081  1D20  01F3               	clrf	___aodiv@sign
  9082  1D21  3020               	movlw	low ___aodiv@divisor
  9083  1D22  0086               	movwf	6
  9084  1D23  3000               	movlw	high ___aodiv@divisor
  9085  1D24  0087               	movwf	7
  9086  1D25  3F47               	moviw [7]fsr1
  9087  1D26  00F1               	movwf	??___aodiv
  9088  1D27  1FF1               	btfss	??___aodiv,7
  9089  1D28  2D4A               	goto	l6187
  9090  1D29  0020               	movlb	0	; select bank0
  9091  1D2A  09A0               	comf	___aodiv@divisor,f
  9092  1D2B  09A1               	comf	___aodiv@divisor+1,f
  9093  1D2C  09A2               	comf	___aodiv@divisor+2,f
  9094  1D2D  09A3               	comf	___aodiv@divisor+3,f
  9095  1D2E  09A4               	comf	___aodiv@divisor+4,f
  9096  1D2F  09A5               	comf	___aodiv@divisor+5,f
  9097  1D30  09A6               	comf	___aodiv@divisor+6,f
  9098  1D31  09A7               	comf	___aodiv@divisor+7,f
  9099  1D32  0AA0               	incf	___aodiv@divisor,f
  9100  1D33  1D03               	skipz
  9101  1D34  2D48               	goto	u787lld
  9102  1D35  0AA1               	incf	___aodiv@divisor+1,f
  9103  1D36  1D03               	skipz
  9104  1D37  2D48               	goto	u787lld
  9105  1D38  0AA2               	incf	___aodiv@divisor+2,f
  9106  1D39  1D03               	skipz
  9107  1D3A  2D48               	goto	u787lld
  9108  1D3B  0AA3               	incf	___aodiv@divisor+3,f
  9109  1D3C  1D03               	skipz
  9110  1D3D  2D48               	goto	u787lld
  9111  1D3E  0AA4               	incf	___aodiv@divisor+4,f
  9112  1D3F  1D03               	skipz
  9113  1D40  2D48               	goto	u787lld
  9114  1D41  0AA5               	incf	___aodiv@divisor+5,f
  9115  1D42  1D03               	skipz
  9116  1D43  2D48               	goto	u787lld
  9117  1D44  0AA6               	incf	___aodiv@divisor+6,f
  9118  1D45  1D03               	skipz
  9119  1D46  2D48               	goto	u787lld
  9120  1D47  0AA7               	incf	___aodiv@divisor+7,f
  9121  1D48                     u787lld:	
  9122  1D48  01F3               	clrf	___aodiv@sign
  9123  1D49  0AF3               	incf	___aodiv@sign,f
  9124  1D4A                     l6187:	
  9125  1D4A  3028               	movlw	low ___aodiv@dividend
  9126  1D4B  0086               	movwf	6
  9127  1D4C  3000               	movlw	high ___aodiv@dividend
  9128  1D4D  0087               	movwf	7
  9129  1D4E  3F47               	moviw [7]fsr1
  9130  1D4F  00F1               	movwf	??___aodiv
  9131  1D50  1FF1               	btfss	??___aodiv,7
  9132  1D51  2D75               	goto	l6193
  9133  1D52  0020               	movlb	0	; select bank0
  9134  1D53  09A8               	comf	___aodiv@dividend,f
  9135  1D54  09A9               	comf	___aodiv@dividend+1,f
  9136  1D55  09AA               	comf	___aodiv@dividend+2,f
  9137  1D56  09AB               	comf	___aodiv@dividend+3,f
  9138  1D57  09AC               	comf	___aodiv@dividend+4,f
  9139  1D58  09AD               	comf	___aodiv@dividend+5,f
  9140  1D59  09AE               	comf	___aodiv@dividend+6,f
  9141  1D5A  09AF               	comf	___aodiv@dividend+7,f
  9142  1D5B  0AA8               	incf	___aodiv@dividend,f
  9143  1D5C  1D03               	skipz
  9144  1D5D  2D71               	goto	l6191
  9145  1D5E  0AA9               	incf	___aodiv@dividend+1,f
  9146  1D5F  1D03               	skipz
  9147  1D60  2D71               	goto	l6191
  9148  1D61  0AAA               	incf	___aodiv@dividend+2,f
  9149  1D62  1D03               	skipz
  9150  1D63  2D71               	goto	l6191
  9151  1D64  0AAB               	incf	___aodiv@dividend+3,f
  9152  1D65  1D03               	skipz
  9153  1D66  2D71               	goto	l6191
  9154  1D67  0AAC               	incf	___aodiv@dividend+4,f
  9155  1D68  1D03               	skipz
  9156  1D69  2D71               	goto	l6191
  9157  1D6A  0AAD               	incf	___aodiv@dividend+5,f
  9158  1D6B  1D03               	skipz
  9159  1D6C  2D71               	goto	l6191
  9160  1D6D  0AAE               	incf	___aodiv@dividend+6,f
  9161  1D6E  1D03               	skipz
  9162  1D6F  2D71               	goto	l6191
  9163  1D70  0AAF               	incf	___aodiv@dividend+7,f
  9164  1D71                     l6191:	
  9165  1D71  3001               	movlw	1
  9166  1D72  00F1               	movwf	??___aodiv
  9167  1D73  0871               	movf	??___aodiv,w
  9168  1D74  06F3               	xorwf	___aodiv@sign,f
  9169  1D75                     l6193:	
  9170  1D75  3074               	movlw	low ___aodiv@quotient
  9171  1D76  0086               	movwf	6
  9172  1D77  3000               	movlw	high ___aodiv@quotient
  9173  1D78  0087               	movwf	7
  9174  1D79  3008               	movlw	8
  9175  1D7A  00F1               	movwf	??___aodiv
  9176  1D7B  3000               	movlw	0
  9177  1D7C                     u7900:	
  9178  1D7C  001E               	movwi fsr1++
  9179  1D7D  0BF1               	decfsz	??___aodiv,f
  9180  1D7E  2D7C               	goto	u7900
  9181  1D7F  0020               	movlb	0	; select bank0
  9182  1D80  0820               	movf	___aodiv@divisor,w
  9183  1D81  0421               	iorwf	___aodiv@divisor+1,w
  9184  1D82  0422               	iorwf	___aodiv@divisor+2,w
  9185  1D83  0423               	iorwf	___aodiv@divisor+3,w
  9186  1D84  0424               	iorwf	___aodiv@divisor+4,w
  9187  1D85  0425               	iorwf	___aodiv@divisor+5,w
  9188  1D86  0426               	iorwf	___aodiv@divisor+6,w
  9189  1D87  0427               	iorwf	___aodiv@divisor+7,w
  9190  1D88  1903               	skipnz
  9191  1D89  2DE0               	goto	l6215
  9192  1D8A  01F2               	clrf	___aodiv@counter
  9193  1D8B  0AF2               	incf	___aodiv@counter,f
  9194  1D8C                     l6203:	
  9195  1D8C  1BA7               	btfsc	___aodiv@divisor+7,7
  9196  1D8D  2D9B               	goto	l6205
  9197  1D8E  35A0               	lslf	___aodiv@divisor,f
  9198  1D8F  0DA1               	rlf	___aodiv@divisor+1,f
  9199  1D90  0DA2               	rlf	___aodiv@divisor+2,f
  9200  1D91  0DA3               	rlf	___aodiv@divisor+3,f
  9201  1D92  0DA4               	rlf	___aodiv@divisor+4,f
  9202  1D93  0DA5               	rlf	___aodiv@divisor+5,f
  9203  1D94  0DA6               	rlf	___aodiv@divisor+6,f
  9204  1D95  0DA7               	rlf	___aodiv@divisor+7,f
  9205  1D96  3001               	movlw	1
  9206  1D97  00F1               	movwf	??___aodiv
  9207  1D98  0871               	movf	??___aodiv,w
  9208  1D99  07F2               	addwf	___aodiv@counter,f
  9209  1D9A  2D8C               	goto	l6203
  9210  1D9B                     l6205:	
  9211  1D9B  35F4               	lslf	___aodiv@quotient,f
  9212  1D9C  0DF5               	rlf	___aodiv@quotient+1,f
  9213  1D9D  0DF6               	rlf	___aodiv@quotient+2,f
  9214  1D9E  0DF7               	rlf	___aodiv@quotient+3,f
  9215  1D9F  0DF8               	rlf	___aodiv@quotient+4,f
  9216  1DA0  0DF9               	rlf	___aodiv@quotient+5,f
  9217  1DA1  0DFA               	rlf	___aodiv@quotient+6,f
  9218  1DA2  0DFB               	rlf	___aodiv@quotient+7,f
  9219  1DA3  0827               	movf	___aodiv@divisor+7,w
  9220  1DA4  022F               	subwf	___aodiv@dividend+7,w
  9221  1DA5  1D03               	skipz
  9222  1DA6  2DC1               	goto	u7935
  9223  1DA7  0826               	movf	___aodiv@divisor+6,w
  9224  1DA8  022E               	subwf	___aodiv@dividend+6,w
  9225  1DA9  1D03               	skipz
  9226  1DAA  2DC1               	goto	u7935
  9227  1DAB  0825               	movf	___aodiv@divisor+5,w
  9228  1DAC  022D               	subwf	___aodiv@dividend+5,w
  9229  1DAD  1D03               	skipz
  9230  1DAE  2DC1               	goto	u7935
  9231  1DAF  0824               	movf	___aodiv@divisor+4,w
  9232  1DB0  022C               	subwf	___aodiv@dividend+4,w
  9233  1DB1  1D03               	skipz
  9234  1DB2  2DC1               	goto	u7935
  9235  1DB3  0823               	movf	___aodiv@divisor+3,w
  9236  1DB4  022B               	subwf	___aodiv@dividend+3,w
  9237  1DB5  1D03               	skipz
  9238  1DB6  2DC1               	goto	u7935
  9239  1DB7  0822               	movf	___aodiv@divisor+2,w
  9240  1DB8  022A               	subwf	___aodiv@dividend+2,w
  9241  1DB9  1D03               	skipz
  9242  1DBA  2DC1               	goto	u7935
  9243  1DBB  0821               	movf	___aodiv@divisor+1,w
  9244  1DBC  0229               	subwf	___aodiv@dividend+1,w
  9245  1DBD  1D03               	skipz
  9246  1DBE  2DC1               	goto	u7935
  9247  1DBF  0820               	movf	___aodiv@divisor,w
  9248  1DC0  0228               	subwf	___aodiv@dividend,w
  9249  1DC1                     u7935:	
  9250  1DC1  1C03               	skipc
  9251  1DC2  2DD4               	goto	l6213
  9252  1DC3  0820               	movf	___aodiv@divisor,w
  9253  1DC4  02A8               	subwf	___aodiv@dividend,f
  9254  1DC5  0821               	movf	___aodiv@divisor+1,w
  9255  1DC6  3BA9               	subwfb	___aodiv@dividend+1,f
  9256  1DC7  0822               	movf	___aodiv@divisor+2,w
  9257  1DC8  3BAA               	subwfb	___aodiv@dividend+2,f
  9258  1DC9  0823               	movf	___aodiv@divisor+3,w
  9259  1DCA  3BAB               	subwfb	___aodiv@dividend+3,f
  9260  1DCB  0824               	movf	___aodiv@divisor+4,w
  9261  1DCC  3BAC               	subwfb	___aodiv@dividend+4,f
  9262  1DCD  0825               	movf	___aodiv@divisor+5,w
  9263  1DCE  3BAD               	subwfb	___aodiv@dividend+5,f
  9264  1DCF  0826               	movf	___aodiv@divisor+6,w
  9265  1DD0  3BAE               	subwfb	___aodiv@dividend+6,f
  9266  1DD1  0827               	movf	___aodiv@divisor+7,w
  9267  1DD2  3BAF               	subwfb	___aodiv@dividend+7,f
  9268  1DD3  1474               	bsf	___aodiv@quotient,0
  9269  1DD4                     l6213:	
  9270  1DD4  36A7               	lsrf	___aodiv@divisor+7,f
  9271  1DD5  0CA6               	rrf	___aodiv@divisor+6,f
  9272  1DD6  0CA5               	rrf	___aodiv@divisor+5,f
  9273  1DD7  0CA4               	rrf	___aodiv@divisor+4,f
  9274  1DD8  0CA3               	rrf	___aodiv@divisor+3,f
  9275  1DD9  0CA2               	rrf	___aodiv@divisor+2,f
  9276  1DDA  0CA1               	rrf	___aodiv@divisor+1,f
  9277  1DDB  0CA0               	rrf	___aodiv@divisor,f
  9278  1DDC  3001               	movlw	1
  9279  1DDD  02F2               	subwf	___aodiv@counter,f
  9280  1DDE  1D03               	btfss	3,2
  9281  1DDF  2D9B               	goto	l6205
  9282  1DE0                     l6215:	
  9283  1DE0  0873               	movf	___aodiv@sign,w
  9284  1DE1  1903               	btfsc	3,2
  9285  1DE2  2E01               	goto	l940
  9286  1DE3  09F4               	comf	___aodiv@quotient,f
  9287  1DE4  09F5               	comf	___aodiv@quotient+1,f
  9288  1DE5  09F6               	comf	___aodiv@quotient+2,f
  9289  1DE6  09F7               	comf	___aodiv@quotient+3,f
  9290  1DE7  09F8               	comf	___aodiv@quotient+4,f
  9291  1DE8  09F9               	comf	___aodiv@quotient+5,f
  9292  1DE9  09FA               	comf	___aodiv@quotient+6,f
  9293  1DEA  09FB               	comf	___aodiv@quotient+7,f
  9294  1DEB  0AF4               	incf	___aodiv@quotient,f
  9295  1DEC  1D03               	skipz
  9296  1DED  2E01               	goto	l940
  9297  1DEE  0AF5               	incf	___aodiv@quotient+1,f
  9298  1DEF  1D03               	skipz
  9299  1DF0  2E01               	goto	l940
  9300  1DF1  0AF6               	incf	___aodiv@quotient+2,f
  9301  1DF2  1D03               	skipz
  9302  1DF3  2E01               	goto	l940
  9303  1DF4  0AF7               	incf	___aodiv@quotient+3,f
  9304  1DF5  1D03               	skipz
  9305  1DF6  2E01               	goto	l940
  9306  1DF7  0AF8               	incf	___aodiv@quotient+4,f
  9307  1DF8  1D03               	skipz
  9308  1DF9  2E01               	goto	l940
  9309  1DFA  0AF9               	incf	___aodiv@quotient+5,f
  9310  1DFB  1D03               	skipz
  9311  1DFC  2E01               	goto	l940
  9312  1DFD  0AFA               	incf	___aodiv@quotient+6,f
  9313  1DFE  1D03               	skipz
  9314  1DFF  2E01               	goto	l940
  9315  1E00  0AFB               	incf	___aodiv@quotient+7,f
  9316  1E01                     l940:	
  9317  1E01  0874               	movf	___aodiv@quotient,w
  9318  1E02  0020               	movlb	0	; select bank0
  9319  1E03  00A0               	movwf	?___aodiv
  9320  1E04  0875               	movf	___aodiv@quotient+1,w
  9321  1E05  00A1               	movwf	?___aodiv+1
  9322  1E06  0876               	movf	___aodiv@quotient+2,w
  9323  1E07  00A2               	movwf	?___aodiv+2
  9324  1E08  0877               	movf	___aodiv@quotient+3,w
  9325  1E09  00A3               	movwf	?___aodiv+3
  9326  1E0A  0878               	movf	___aodiv@quotient+4,w
  9327  1E0B  00A4               	movwf	?___aodiv+4
  9328  1E0C  0879               	movf	___aodiv@quotient+5,w
  9329  1E0D  00A5               	movwf	?___aodiv+5
  9330  1E0E  087A               	movf	___aodiv@quotient+6,w
  9331  1E0F  00A6               	movwf	?___aodiv+6
  9332  1E10  087B               	movf	___aodiv@quotient+7,w
  9333  1E11  00A7               	movwf	?___aodiv+7
  9334  1E12  0008               	return
  9335  1E13                     __end_of___aodiv:	
  9336                           
  9337                           	psect	text24
  9338  2051                     __ptext24:	
  9339 ;; *************** function _ctoa *****************
  9340 ;; Defined at:
  9341 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9342 ;; Parameters:    Size  Location     Type
  9343 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  9344 ;;		 -> vsnprintf@f(6), 
  9345 ;;  c               1   18[BANK0 ] unsigned char 
  9346 ;; Auto vars:     Size  Location     Type
  9347 ;;  w               2   20[BANK0 ] int 
  9348 ;;  l               2    0        int 
  9349 ;; Return value:  Size  Location     Type
  9350 ;;                  2   16[BANK0 ] int 
  9351 ;; Registers used:
  9352 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9353 ;; Tracked objects:
  9354 ;;		On entry : 0/0
  9355 ;;		On exit  : 0/0
  9356 ;;		Unchanged: 0/0
  9357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9358 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9359 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9360 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9361 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9362 ;;Total ram usage:        6 bytes
  9363 ;; Hardware stack levels used:    1
  9364 ;; Hardware stack levels required when called:    5
  9365 ;; This function calls:
  9366 ;;		_pad
  9367 ;; This function is called by:
  9368 ;;		_vfpfcnvrt
  9369 ;; This function uses a non-reentrant model
  9370 ;;
  9371                           
  9372                           
  9373                           ;psect for function _ctoa
  9374  2051                     _ctoa:	
  9375                           
  9376                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  9377                           
  9378                           ;incstack = 0
  9379                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9380  2051  0022               	movlb	2	; select bank2
  9381  2052  0842               	movf	_width^(0+256),w
  9382  2053  0443               	iorwf	(_width+1)^(0+256),w
  9383  2054  1D03               	btfss	3,2
  9384  2055  285E               	goto	l6303
  9385  2056  0843               	movf	(_width+1)^(0+256),w
  9386  2057  0020               	movlb	0	; select bank0
  9387  2058  00B5               	movwf	ctoa@w+1
  9388  2059  0022               	movlb	2	; select bank2
  9389  205A  0842               	movf	_width^(0+256),w
  9390  205B  0020               	movlb	0	; select bank0
  9391  205C  00B4               	movwf	ctoa@w
  9392  205D  2867               	goto	l6305
  9393  205E                     l6303:	
  9394  205E  0842               	movf	_width^(0+256),w
  9395  205F  3EFF               	addlw	255
  9396  2060  0020               	movlb	0	; select bank0
  9397  2061  00B4               	movwf	ctoa@w
  9398  2062  30FF               	movlw	255
  9399  2063  0022               	movlb	2	; select bank2
  9400  2064  3D43               	addwfc	(_width+1)^(0+256),w
  9401  2065  0020               	movlb	0	; select bank0
  9402  2066  00B5               	movwf	ctoa@w+1
  9403  2067                     l6305:	
  9404                           
  9405                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  9406  2067  0832               	movf	ctoa@c,w
  9407  2068  00B3               	movwf	??_ctoa
  9408  2069  0833               	movf	??_ctoa,w
  9409  206A  0023               	movlb	3	; select bank3
  9410  206B  00A0               	movwf	_dbuf^(0+384)
  9411                           
  9412                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  9413  206C  01A1               	clrf	(_dbuf^(0+384)+1)
  9414                           
  9415                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  9416  206D  0020               	movlb	0	; select bank0
  9417  206E  0831               	movf	ctoa@fp+1,w
  9418  206F  00A7               	movwf	pad@fp+1
  9419  2070  0830               	movf	ctoa@fp,w
  9420  2071  00A6               	movwf	pad@fp
  9421  2072  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
  9422  2073  00B3               	movwf	??_ctoa
  9423  2074  0833               	movf	??_ctoa,w
  9424  2075  00A8               	movwf	pad@buf
  9425  2076  0835               	movf	ctoa@w+1,w
  9426  2077  00AA               	movwf	pad@p+1
  9427  2078  0834               	movf	ctoa@w,w
  9428  2079  00A9               	movwf	pad@p
  9429  207A  31A1  21BB         	fcall	_pad
  9430  207C  0020               	movlb	0	; select bank0
  9431  207D  0827               	movf	?_pad+1,w
  9432  207E  00B1               	movwf	?_ctoa+1
  9433  207F  0826               	movf	?_pad,w
  9434  2080  00B0               	movwf	?_ctoa
  9435  2081  0008               	return
  9436  2082                     __end_of_ctoa:	
  9437                           
  9438                           	psect	text25
  9439  21BB                     __ptext25:	
  9440 ;; *************** function _pad *****************
  9441 ;; Defined at:
  9442 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9443 ;; Parameters:    Size  Location     Type
  9444 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
  9445 ;;		 -> vsnprintf@f(6), 
  9446 ;;  buf             1    8[BANK0 ] PTR unsigned char 
  9447 ;;		 -> dbuf(32), 
  9448 ;;  p               2    9[BANK0 ] int 
  9449 ;; Auto vars:     Size  Location     Type
  9450 ;;  w               2   14[BANK0 ] int 
  9451 ;;  i               2   12[BANK0 ] int 
  9452 ;; Return value:  Size  Location     Type
  9453 ;;                  2    6[BANK0 ] int 
  9454 ;; Registers used:
  9455 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9456 ;; Tracked objects:
  9457 ;;		On entry : 0/0
  9458 ;;		On exit  : 0/0
  9459 ;;		Unchanged: 0/0
  9460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9461 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9462 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9463 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9464 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9465 ;;Total ram usage:       10 bytes
  9466 ;; Hardware stack levels used:    1
  9467 ;; Hardware stack levels required when called:    4
  9468 ;; This function calls:
  9469 ;;		_fputc
  9470 ;;		_fputs
  9471 ;;		_strlen
  9472 ;; This function is called by:
  9473 ;;		_ctoa
  9474 ;;		_dtoa
  9475 ;;		_otoa
  9476 ;;		_utoa
  9477 ;;		_xtoa
  9478 ;; This function uses a non-reentrant model
  9479 ;;
  9480                           
  9481                           
  9482                           ;psect for function _pad
  9483  21BB                     _pad:	
  9484                           
  9485                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  9486                           
  9487                           ;incstack = 0
  9488                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9489  21BB  0021               	movlb	1	; select bank1
  9490  21BC  1C6D               	btfss	_flags^(0+128),0
  9491  21BD  29C7               	goto	l6123
  9492                           
  9493                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  9494  21BE  0020               	movlb	0	; select bank0
  9495  21BF  0827               	movf	pad@fp+1,w
  9496  21C0  00FB               	movwf	fputs@fp+1
  9497  21C1  0826               	movf	pad@fp,w
  9498  21C2  00FA               	movwf	fputs@fp
  9499  21C3  0828               	movf	pad@buf,w
  9500  21C4  31A0  202B  31A1   	fcall	_fputs
  9501  21C7                     l6123:	
  9502                           
  9503                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  9504  21C7  0020               	movlb	0	; select bank0
  9505  21C8  1BAA               	btfsc	pad@p+1,7
  9506  21C9  29CF               	goto	l6127
  9507  21CA  082A               	movf	pad@p+1,w
  9508  21CB  00AF               	movwf	pad@w+1
  9509  21CC  0829               	movf	pad@p,w
  9510  21CD  00AE               	movwf	pad@w
  9511  21CE  29D1               	goto	l632
  9512  21CF                     l6127:	
  9513  21CF  01AE               	clrf	pad@w
  9514  21D0  01AF               	clrf	pad@w+1
  9515  21D1                     l632:	
  9516                           
  9517                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  9518  21D1  01AC               	clrf	pad@i
  9519  21D2  01AD               	clrf	pad@i+1
  9520  21D3                     l6133:	
  9521                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  9522                           
  9523                           
  9524                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  9525  21D3  082D               	movf	pad@i+1,w
  9526  21D4  3A80               	xorlw	128
  9527  21D5  00AB               	movwf	??_pad
  9528  21D6  082F               	movf	pad@w+1,w
  9529  21D7  3A80               	xorlw	128
  9530  21D8  022B               	subwf	??_pad,w
  9531  21D9  1D03               	skipz
  9532  21DA  29DD               	goto	u7705
  9533  21DB  082E               	movf	pad@w,w
  9534  21DC  022C               	subwf	pad@i,w
  9535  21DD                     u7705:	
  9536  21DD  1803               	btfsc	3,0
  9537  21DE  29F1               	goto	l635
  9538                           
  9539                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  9540  21DF  3020               	movlw	32
  9541  21E0  00F1               	movwf	fputc@c
  9542  21E1  3000               	movlw	0
  9543  21E2  00F2               	movwf	fputc@c+1
  9544  21E3  0020               	movlb	0	; select bank0
  9545  21E4  0827               	movf	pad@fp+1,w
  9546  21E5  00F4               	movwf	fputc@fp+1
  9547  21E6  0826               	movf	pad@fp,w
  9548  21E7  00F3               	movwf	fputc@fp
  9549  21E8  31A2  225E  31A1   	fcall	_fputc
  9550                           
  9551                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  9552  21EB  3001               	movlw	1
  9553  21EC  0020               	movlb	0	; select bank0
  9554  21ED  07AC               	addwf	pad@i,f
  9555  21EE  3000               	movlw	0
  9556  21EF  3DAD               	addwfc	pad@i+1,f
  9557  21F0  29D3               	goto	l6133
  9558  21F1                     l635:	
  9559                           
  9560                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  9561  21F1  0021               	movlb	1	; select bank1
  9562  21F2  186D               	btfsc	_flags^(0+128),0
  9563  21F3  29FD               	goto	l6137
  9564                           
  9565                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  9566  21F4  0020               	movlb	0	; select bank0
  9567  21F5  0827               	movf	pad@fp+1,w
  9568  21F6  00FB               	movwf	fputs@fp+1
  9569  21F7  0826               	movf	pad@fp,w
  9570  21F8  00FA               	movwf	fputs@fp
  9571  21F9  0828               	movf	pad@buf,w
  9572  21FA  31A0  202B  31A1   	fcall	_fputs
  9573  21FD                     l6137:	
  9574                           
  9575                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  9576  21FD  0020               	movlb	0	; select bank0
  9577  21FE  0828               	movf	pad@buf,w
  9578  21FF  00F1               	movwf	strlen@s
  9579  2200  3001               	movlw	1
  9580  2201  00F2               	movwf	strlen@s+1
  9581  2202  31AE  2683         	fcall	_strlen
  9582  2204  0020               	movlb	0	; select bank0
  9583  2205  082E               	movf	pad@w,w
  9584  2206  0771               	addwf	?_strlen,w
  9585  2207  00A6               	movwf	?_pad
  9586  2208  082F               	movf	pad@w+1,w
  9587  2209  3D72               	addwfc	?_strlen+1,w
  9588  220A  00A7               	movwf	?_pad+1
  9589  220B  0008               	return
  9590  220C                     __end_of_pad:	
  9591                           
  9592                           	psect	text26
  9593  2E83                     __ptext26:	
  9594 ;; *************** function _strlen *****************
  9595 ;; Defined at:
  9596 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  9597 ;; Parameters:    Size  Location     Type
  9598 ;;  s               2    1[COMMON] PTR const unsigned char 
  9599 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(32), thermistorBetaValue(2), 
  9600 ;;		 -> adcGain(2), 
  9601 ;; Auto vars:     Size  Location     Type
  9602 ;;  a               2    3[COMMON] PTR const unsigned char 
  9603 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(32), thermistorBetaValue(2), 
  9604 ;;		 -> adcGain(2), 
  9605 ;; Return value:  Size  Location     Type
  9606 ;;                  2    1[COMMON] unsigned int 
  9607 ;; Registers used:
  9608 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9609 ;; Tracked objects:
  9610 ;;		On entry : 0/0
  9611 ;;		On exit  : 0/0
  9612 ;;		Unchanged: 0/0
  9613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9614 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9615 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9617 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9618 ;;Total ram usage:        4 bytes
  9619 ;; Hardware stack levels used:    1
  9620 ;; Hardware stack levels required when called:    1
  9621 ;; This function calls:
  9622 ;;		Nothing
  9623 ;; This function is called by:
  9624 ;;		_pad
  9625 ;;		_stoa
  9626 ;; This function uses a non-reentrant model
  9627 ;;
  9628                           
  9629                           
  9630                           ;psect for function _strlen
  9631  2E83                     _strlen:	
  9632                           
  9633                           ;incstack = 0
  9634                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  9635  2E83  0872               	movf	strlen@s+1,w
  9636  2E84  00F4               	movwf	strlen@a+1
  9637  2E85  0871               	movf	strlen@s,w
  9638  2E86  00F3               	movwf	strlen@a
  9639  2E87                     l6109:	
  9640  2E87  0871               	movf	strlen@s,w
  9641  2E88  0086               	movwf	6
  9642  2E89  0872               	movf	strlen@s+1,w
  9643  2E8A  0087               	movwf	7
  9644  2E8B  0801               	movf	1,w
  9645  2E8C  1903               	btfsc	3,2
  9646  2E8D  2E93               	goto	l6111
  9647  2E8E  3001               	movlw	1
  9648  2E8F  07F1               	addwf	strlen@s,f
  9649  2E90  3000               	movlw	0
  9650  2E91  3DF2               	addwfc	strlen@s+1,f
  9651  2E92  2E87               	goto	l6109
  9652  2E93                     l6111:	
  9653  2E93  0873               	movf	strlen@a,w
  9654  2E94  0271               	subwf	strlen@s,w
  9655  2E95  00F1               	movwf	?_strlen
  9656  2E96  0874               	movf	strlen@a+1,w
  9657  2E97  3B72               	subwfb	strlen@s+1,w
  9658  2E98  00F2               	movwf	?_strlen+1
  9659  2E99  0008               	return
  9660  2E9A                     __end_of_strlen:	
  9661                           
  9662                           	psect	text27
  9663  202B                     __ptext27:	
  9664 ;; *************** function _fputs *****************
  9665 ;; Defined at:
  9666 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  9667 ;; Parameters:    Size  Location     Type
  9668 ;;  s               1    wreg     PTR const unsigned char 
  9669 ;;		 -> dbuf(32), 
  9670 ;;  fp              2   10[COMMON] PTR struct _IO_FILE
  9671 ;;		 -> vsnprintf@f(6), 
  9672 ;; Auto vars:     Size  Location     Type
  9673 ;;  s               1    5[BANK0 ] PTR const unsigned char 
  9674 ;;		 -> dbuf(32), 
  9675 ;;  i               2    3[BANK0 ] int 
  9676 ;;  c               1    2[BANK0 ] unsigned char 
  9677 ;; Return value:  Size  Location     Type
  9678 ;;                  2   10[COMMON] int 
  9679 ;; Registers used:
  9680 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9681 ;; Tracked objects:
  9682 ;;		On entry : 0/0
  9683 ;;		On exit  : 0/0
  9684 ;;		Unchanged: 0/0
  9685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9686 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9687 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9688 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9689 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9690 ;;Total ram usage:        8 bytes
  9691 ;; Hardware stack levels used:    1
  9692 ;; Hardware stack levels required when called:    3
  9693 ;; This function calls:
  9694 ;;		_fputc
  9695 ;; This function is called by:
  9696 ;;		_pad
  9697 ;; This function uses a non-reentrant model
  9698 ;;
  9699                           
  9700                           
  9701                           ;psect for function _fputs
  9702  202B                     _fputs:	
  9703                           
  9704                           ;incstack = 0
  9705                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9706                           ;fputs@s stored from wreg
  9707  202B  0020               	movlb	0	; select bank0
  9708  202C  00A5               	movwf	fputs@s
  9709  202D  01A3               	clrf	fputs@i
  9710  202E  01A4               	clrf	fputs@i+1
  9711  202F                     l6103:	
  9712  202F  0823               	movf	fputs@i,w
  9713  2030  0725               	addwf	fputs@s,w
  9714  2031  00A0               	movwf	??_fputs
  9715  2032  0820               	movf	??_fputs,w
  9716  2033  0086               	movwf	6
  9717  2034  3001               	movlw	1	; select bank2/3
  9718  2035  0087               	movwf	7
  9719  2036  0801               	movf	1,w
  9720  2037  00A1               	movwf	??_fputs+1
  9721  2038  0821               	movf	??_fputs+1,w
  9722  2039  00A2               	movwf	fputs@c
  9723  203A  0822               	movf	fputs@c,w
  9724  203B  1903               	btfsc	3,2
  9725  203C  0008               	return
  9726  203D  0822               	movf	fputs@c,w
  9727  203E  00A0               	movwf	??_fputs
  9728  203F  01A1               	clrf	??_fputs+1
  9729  2040  0820               	movf	??_fputs,w
  9730  2041  00F1               	movwf	fputc@c
  9731  2042  0821               	movf	??_fputs+1,w
  9732  2043  00F2               	movwf	fputc@c+1
  9733  2044  087B               	movf	fputs@fp+1,w
  9734  2045  00F4               	movwf	fputc@fp+1
  9735  2046  087A               	movf	fputs@fp,w
  9736  2047  00F3               	movwf	fputc@fp
  9737  2048  31A2  225E  31A0   	fcall	_fputc
  9738  204B  3001               	movlw	1
  9739  204C  0020               	movlb	0	; select bank0
  9740  204D  07A3               	addwf	fputs@i,f
  9741  204E  3000               	movlw	0
  9742  204F  3DA4               	addwfc	fputs@i+1,f
  9743  2050  282F               	goto	l6103
  9744  2051                     __end_of_fputs:	
  9745                           
  9746                           	psect	text28
  9747  225E                     __ptext28:	
  9748 ;; *************** function _fputc *****************
  9749 ;; Defined at:
  9750 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  9751 ;; Parameters:    Size  Location     Type
  9752 ;;  c               2    1[COMMON] int 
  9753 ;;  fp              2    3[COMMON] PTR struct _IO_FILE
  9754 ;;		 -> vsnprintf@f(6), 
  9755 ;; Auto vars:     Size  Location     Type
  9756 ;;		None
  9757 ;; Return value:  Size  Location     Type
  9758 ;;                  2    1[COMMON] int 
  9759 ;; Registers used:
  9760 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9761 ;; Tracked objects:
  9762 ;;		On entry : 0/0
  9763 ;;		On exit  : 0/0
  9764 ;;		Unchanged: 0/0
  9765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9766 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9768 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9769 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9770 ;;Total ram usage:        9 bytes
  9771 ;; Hardware stack levels used:    1
  9772 ;; Hardware stack levels required when called:    2
  9773 ;; This function calls:
  9774 ;;		_putch
  9775 ;; This function is called by:
  9776 ;;		_pad
  9777 ;;		_stoa
  9778 ;;		_vfpfcnvrt
  9779 ;;		_fputs
  9780 ;; This function uses a non-reentrant model
  9781 ;;
  9782                           
  9783                           
  9784                           ;psect for function _fputc
  9785  225E                     _fputc:	
  9786                           
  9787                           ;incstack = 0
  9788                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9789  225E  0873               	movf	fputc@fp,w
  9790  225F  0474               	iorwf	fputc@fp+1,w
  9791  2260  1903               	btfsc	3,2
  9792  2261  2A66               	goto	l6085
  9793  2262  0873               	movf	fputc@fp,w
  9794  2263  0474               	iorwf	fputc@fp+1,w
  9795  2264  1D03               	btfss	3,2
  9796  2265  2A6A               	goto	l6087
  9797  2266                     l6085:	
  9798  2266  0871               	movf	fputc@c,w
  9799  2267  3180  2003         	fcall	_putch
  9800  2269  0008               	return
  9801  226A                     l6087:	
  9802  226A  0873               	movf	fputc@fp,w
  9803  226B  0086               	movwf	6
  9804  226C  0874               	movf	fputc@fp+1,w
  9805  226D  0087               	movwf	7
  9806  226E  3144               	addfsr 1,4
  9807  226F  0016               	moviw fsr1++
  9808  2270  0401               	iorwf	1,w
  9809  2271  1903               	btfsc	3,2
  9810  2272  2A91               	goto	l6091
  9811  2273  0873               	movf	fputc@fp,w
  9812  2274  0086               	movwf	6
  9813  2275  0874               	movf	fputc@fp+1,w
  9814  2276  0087               	movwf	7
  9815  2277  3144               	addfsr 1,4
  9816  2278  3F40               	moviw [0]fsr1
  9817  2279  00F5               	movwf	??_fputc
  9818  227A  3F41               	moviw [1]fsr1
  9819  227B  00F6               	movwf	??_fputc+1
  9820  227C  0873               	movf	fputc@fp,w
  9821  227D  0086               	movwf	6
  9822  227E  0874               	movf	fputc@fp+1,w
  9823  227F  0087               	movwf	7
  9824  2280  3142               	addfsr 1,2
  9825  2281  3F40               	moviw [0]fsr1
  9826  2282  00F7               	movwf	??_fputc+2
  9827  2283  3F41               	moviw [1]fsr1
  9828  2284  00F8               	movwf	??_fputc+3
  9829  2285  0878               	movf	??_fputc+3,w
  9830  2286  3A80               	xorlw	128
  9831  2287  00F9               	movwf	??_fputc+4
  9832  2288  0876               	movf	??_fputc+1,w
  9833  2289  3A80               	xorlw	128
  9834  228A  0279               	subwf	??_fputc+4,w
  9835  228B  1D03               	skipz
  9836  228C  2A8F               	goto	u7635
  9837  228D  0875               	movf	??_fputc,w
  9838  228E  0277               	subwf	??_fputc+2,w
  9839  228F                     u7635:	
  9840  228F  1803               	skipnc
  9841  2290  0008               	return
  9842  2291                     l6091:	
  9843  2291  0873               	movf	fputc@fp,w
  9844  2292  0086               	movwf	6
  9845  2293  0874               	movf	fputc@fp+1,w
  9846  2294  0087               	movwf	7
  9847  2295  3142               	addfsr 1,2
  9848  2296  0873               	movf	fputc@fp,w
  9849  2297  0084               	movwf	4
  9850  2298  0874               	movf	fputc@fp+1,w
  9851  2299  0085               	movwf	5
  9852  229A  3F40               	moviw [0]fsr1
  9853  229B  0700               	addwf	0,w
  9854  229C  00F5               	movwf	??_fputc
  9855  229D  3101               	addfsr 0,1
  9856  229E  3F41               	moviw [1]fsr1
  9857  229F  3D00               	addwfc	0,w
  9858  22A0  00F6               	movwf	??_fputc+1
  9859  22A1  0875               	movf	??_fputc,w
  9860  22A2  0086               	movwf	6
  9861  22A3  0876               	movf	??_fputc+1,w
  9862  22A4  0087               	movwf	7
  9863  22A5  0871               	movf	fputc@c,w
  9864  22A6  0081               	movwf	1
  9865  22A7  0873               	movf	fputc@fp,w
  9866  22A8  0086               	movwf	6
  9867  22A9  0874               	movf	fputc@fp+1,w
  9868  22AA  0087               	movwf	7
  9869  22AB  3142               	addfsr 1,2
  9870  22AC  3001               	movlw	1
  9871  22AD  0781               	addwf	1,f
  9872  22AE  3141               	addfsr 1,1
  9873  22AF  1803               	skipnc
  9874  22B0  0A81               	incf	1,f
  9875  22B1  0008               	return
  9876  22B2                     __end_of_fputc:	
  9877                           
  9878                           	psect	text29
  9879  0003                     __ptext29:	
  9880 ;; *************** function _putch *****************
  9881 ;; Defined at:
  9882 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
  9883 ;; Parameters:    Size  Location     Type
  9884 ;;  c               1    wreg     unsigned char 
  9885 ;; Auto vars:     Size  Location     Type
  9886 ;;  c               1    0[COMMON] unsigned char 
  9887 ;; Return value:  Size  Location     Type
  9888 ;;                  1    wreg      void 
  9889 ;; Registers used:
  9890 ;;		wreg
  9891 ;; Tracked objects:
  9892 ;;		On entry : 0/0
  9893 ;;		On exit  : 0/0
  9894 ;;		Unchanged: 0/0
  9895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9900 ;;Total ram usage:        0 bytes
  9901 ;; Hardware stack levels used:    1
  9902 ;; Hardware stack levels required when called:    1
  9903 ;; This function calls:
  9904 ;;		Nothing
  9905 ;; This function is called by:
  9906 ;;		_fputc
  9907 ;; This function uses a non-reentrant model
  9908 ;;
  9909                           
  9910                           
  9911                           ;psect for function _putch
  9912  0003                     _putch:	
  9913                           
  9914                           ;incstack = 0
  9915                           ; Regs used in _putch: [wreg]
  9916  0003  0008               	return
  9917  0004                     __end_of_putch:	
  9918                           
  9919                           	psect	text30
  9920  275F                     __ptext30:	
  9921 ;; *************** function _atoi *****************
  9922 ;; Defined at:
  9923 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  9924 ;; Parameters:    Size  Location     Type
  9925 ;;  s               2    7[COMMON] PTR const unsigned char 
  9926 ;;		 -> STR_16(18), STR_15(18), STR_14(19), STR_13(20), 
  9927 ;;		 -> STR_12(20), STR_11(21), STR_10(21), STR_9(21), 
  9928 ;;		 -> STR_8(22), STR_7(22), STR_6(21), STR_5(21), 
  9929 ;;		 -> STR_2(22), STR_1(71), 
  9930 ;; Auto vars:     Size  Location     Type
  9931 ;;  n               2   11[BANK0 ] int 
  9932 ;;  neg             2    4[BANK0 ] int 
  9933 ;; Return value:  Size  Location     Type
  9934 ;;                  2    7[COMMON] int 
  9935 ;; Registers used:
  9936 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9937 ;; Tracked objects:
  9938 ;;		On entry : 0/0
  9939 ;;		On exit  : 0/0
  9940 ;;		Unchanged: 0/0
  9941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9942 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9943 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9944 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9945 ;;      Totals:         2      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9946 ;;Total ram usage:       15 bytes
  9947 ;; Hardware stack levels used:    1
  9948 ;; Hardware stack levels required when called:    2
  9949 ;; This function calls:
  9950 ;;		___wmul
  9951 ;;		_isdigit
  9952 ;;		_isspace
  9953 ;; This function is called by:
  9954 ;;		_vfpfcnvrt
  9955 ;; This function uses a non-reentrant model
  9956 ;;
  9957                           
  9958                           
  9959                           ;psect for function _atoi
  9960  275F                     _atoi:	
  9961                           
  9962                           ;incstack = 0
  9963                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9964  275F  0020               	movlb	0	; select bank0
  9965  2760  01AB               	clrf	atoi@n
  9966  2761  01AC               	clrf	atoi@n+1
  9967  2762  01A4               	clrf	atoi@neg
  9968  2763  01A5               	clrf	atoi@neg+1
  9969  2764                     l6569:	
  9970  2764  01AA               	clrf	_atoi$1656
  9971  2765  0AAA               	incf	_atoi$1656,f
  9972  2766  0877               	movf	atoi@s,w
  9973  2767  0084               	movwf	4
  9974  2768  0878               	movf	atoi@s+1,w
  9975  2769  0085               	movwf	5
  9976  276A  0012               	moviw fsr0++
  9977  276B  3A20               	xorlw	32
  9978  276C  1903               	btfsc	3,2
  9979  276D  2F80               	goto	l6577
  9980  276E  0877               	movf	atoi@s,w
  9981  276F  0084               	movwf	4
  9982  2770  0878               	movf	atoi@s+1,w
  9983  2771  0085               	movwf	5
  9984  2772  0800               	movf	0,w	;code access
  9985  2773  3EF7               	addlw	247
  9986  2774  00A0               	movwf	??_atoi
  9987  2775  30FF               	movlw	255
  9988  2776  1803               	skipnc
  9989  2777  3000               	movlw	0
  9990  2778  00A1               	movwf	??_atoi+1
  9991  2779  3000               	movlw	0
  9992  277A  0221               	subwf	??_atoi+1,w
  9993  277B  3005               	movlw	5
  9994  277C  1903               	skipnz
  9995  277D  0220               	subwf	??_atoi,w
  9996  277E  1803               	btfsc	3,0
  9997  277F  01AA               	clrf	_atoi$1656
  9998  2780                     l6577:	
  9999  2780  082A               	movf	_atoi$1656,w
 10000  2781  00A0               	movwf	??_atoi
 10001  2782  01A1               	clrf	??_atoi+1
 10002  2783  0820               	movf	??_atoi,w
 10003  2784  00A6               	movwf	_atoi$1655
 10004  2785  0821               	movf	??_atoi+1,w
 10005  2786  00A7               	movwf	_atoi$1655+1
 10006  2787  0826               	movf	_atoi$1655,w
 10007  2788  0427               	iorwf	_atoi$1655+1,w
 10008  2789  1903               	btfsc	3,2
 10009  278A  2F95               	goto	l6585
 10010  278B  3001               	movlw	1
 10011  278C  07F7               	addwf	atoi@s,f
 10012  278D  3000               	movlw	0
 10013  278E  3DF8               	addwfc	atoi@s+1,f
 10014  278F  2F64               	goto	l6569
 10015  2790                     l6583:	
 10016  2790  3001               	movlw	1
 10017  2791  00A4               	movwf	atoi@neg
 10018  2792  3000               	movlw	0
 10019  2793  00A5               	movwf	atoi@neg+1
 10020  2794  2FC8               	goto	l1315
 10021  2795                     l6585:	
 10022  2795  0877               	movf	atoi@s,w
 10023  2796  0084               	movwf	4
 10024  2797  0878               	movf	atoi@s+1,w
 10025  2798  0085               	movwf	5
 10026  2799  0800               	movf	0,w	;code access
 10027  279A  00A0               	movwf	??_atoi
 10028  279B  01A1               	clrf	??_atoi+1
 10029                           
 10030                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10031                           ; Switch size 1, requested type "simple"
 10032                           ; Number of cases is 1, Range of values is 0 to 0
 10033                           ; switch strategies available:
 10034                           ; Name         Instructions Cycles
 10035                           ; simple_byte            4     3 (average)
 10036                           ; direct_byte            8     6 (fixed)
 10037                           ; jumptable            260     6 (fixed)
 10038                           ;	Chosen strategy is simple_byte
 10039  279C  0821               	movf	??_atoi+1,w
 10040  279D  3A00               	xorlw	0	; case 0
 10041  279E  1903               	skipnz
 10042  279F  2FA1               	goto	l8385
 10043  27A0  2FCC               	goto	l6591
 10044  27A1                     l8385:	
 10045                           
 10046                           ; Switch size 1, requested type "simple"
 10047                           ; Number of cases is 2, Range of values is 43 to 45
 10048                           ; switch strategies available:
 10049                           ; Name         Instructions Cycles
 10050                           ; simple_byte            7     4 (average)
 10051                           ; direct_byte           15     9 (fixed)
 10052                           ; jumptable            263     9 (fixed)
 10053                           ;	Chosen strategy is simple_byte
 10054  27A1  0820               	movf	??_atoi,w
 10055  27A2  3A2B               	xorlw	43	; case 43
 10056  27A3  1903               	skipnz
 10057  27A4  2FC8               	goto	l1315
 10058  27A5  3A06               	xorlw	6	; case 45
 10059  27A6  1903               	skipnz
 10060  27A7  2F90               	goto	l6583
 10061  27A8  2FCC               	goto	l6591
 10062  27A9                     l6587:	
 10063  27A9  0877               	movf	atoi@s,w
 10064  27AA  0084               	movwf	4
 10065  27AB  0878               	movf	atoi@s+1,w
 10066  27AC  0085               	movwf	5
 10067  27AD  0800               	movf	0,w	;code access
 10068  27AE  00A0               	movwf	??_atoi
 10069  27AF  082C               	movf	atoi@n+1,w
 10070  27B0  00F2               	movwf	___wmul@multiplier+1
 10071  27B1  082B               	movf	atoi@n,w
 10072  27B2  00F1               	movwf	___wmul@multiplier
 10073  27B3  300A               	movlw	10
 10074  27B4  00F3               	movwf	___wmul@multiplicand
 10075  27B5  3000               	movlw	0
 10076  27B6  00F4               	movwf	___wmul@multiplicand+1
 10077  27B7  31AF  2711  31A7   	fcall	___wmul
 10078  27BA  0872               	movf	?___wmul+1,w
 10079  27BB  0020               	movlb	0	; select bank0
 10080  27BC  00A2               	movwf	??_atoi+2
 10081  27BD  0820               	movf	??_atoi,w
 10082  27BE  0271               	subwf	?___wmul,w
 10083  27BF  00A1               	movwf	??_atoi+1
 10084  27C0  1C03               	skipc
 10085  27C1  03A2               	decf	??_atoi+2,f
 10086  27C2  0821               	movf	??_atoi+1,w
 10087  27C3  3E30               	addlw	48
 10088  27C4  00AB               	movwf	atoi@n
 10089  27C5  3000               	movlw	0
 10090  27C6  3D22               	addwfc	??_atoi+2,w
 10091  27C7  00AC               	movwf	atoi@n+1
 10092  27C8                     l1315:	
 10093  27C8  3001               	movlw	1
 10094  27C9  07F7               	addwf	atoi@s,f
 10095  27CA  3000               	movlw	0
 10096  27CB  3DF8               	addwfc	atoi@s+1,f
 10097  27CC                     l6591:	
 10098  27CC  0877               	movf	atoi@s,w
 10099  27CD  0084               	movwf	4
 10100  27CE  0878               	movf	atoi@s+1,w
 10101  27CF  0085               	movwf	5
 10102  27D0  0800               	movf	0,w	;code access
 10103  27D1  3ED0               	addlw	208
 10104  27D2  00A0               	movwf	??_atoi
 10105  27D3  30FF               	movlw	255
 10106  27D4  1803               	skipnc
 10107  27D5  3000               	movlw	0
 10108  27D6  00A1               	movwf	??_atoi+1
 10109  27D7  3000               	movlw	0
 10110  27D8  0221               	subwf	??_atoi+1,w
 10111  27D9  300A               	movlw	10
 10112  27DA  1903               	skipnz
 10113  27DB  0220               	subwf	??_atoi,w
 10114  27DC  1803               	btfsc	3,0
 10115  27DD  2FE0               	goto	u8810
 10116  27DE  3001               	movlw	1
 10117  27DF  2FE1               	goto	u8820
 10118  27E0                     u8810:	
 10119  27E0  3000               	movlw	0
 10120  27E1                     u8820:	
 10121  27E1  00A2               	movwf	??_atoi+2
 10122  27E2  01A3               	clrf	??_atoi+3
 10123  27E3  0822               	movf	??_atoi+2,w
 10124  27E4  00A8               	movwf	_atoi$1657
 10125  27E5  0823               	movf	??_atoi+3,w
 10126  27E6  00A9               	movwf	_atoi$1657+1
 10127  27E7  0828               	movf	_atoi$1657,w
 10128  27E8  0429               	iorwf	_atoi$1657+1,w
 10129  27E9  1D03               	btfss	3,2
 10130  27EA  2FA9               	goto	l6587
 10131  27EB  0824               	movf	atoi@neg,w
 10132  27EC  0425               	iorwf	atoi@neg+1,w
 10133  27ED  1D03               	btfss	3,2
 10134  27EE  2FFB               	goto	l6601
 10135  27EF  092B               	comf	atoi@n,w
 10136  27F0  00A0               	movwf	??_atoi
 10137  27F1  092C               	comf	atoi@n+1,w
 10138  27F2  00A1               	movwf	??_atoi+1
 10139  27F3  0AA0               	incf	??_atoi,f
 10140  27F4  1903               	skipnz
 10141  27F5  0AA1               	incf	??_atoi+1,f
 10142  27F6  0820               	movf	??_atoi,w
 10143  27F7  00F7               	movwf	?_atoi
 10144  27F8  0821               	movf	??_atoi+1,w
 10145  27F9  00F8               	movwf	?_atoi+1
 10146  27FA  0008               	return
 10147  27FB                     l6601:	
 10148  27FB  082C               	movf	atoi@n+1,w
 10149  27FC  00F8               	movwf	?_atoi+1
 10150  27FD  082B               	movf	atoi@n,w
 10151  27FE  00F7               	movwf	?_atoi
 10152  27FF  0008               	return
 10153  2800                     __end_of_atoi:	
 10154                           
 10155                           	psect	text31
 10156  2F47                     __ptext31:	
 10157 ;; *************** function _isspace *****************
 10158 ;; Defined at:
 10159 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 10160 ;; Parameters:    Size  Location     Type
 10161 ;;  c               2    1[COMMON] int 
 10162 ;; Auto vars:     Size  Location     Type
 10163 ;;		None
 10164 ;; Return value:  Size  Location     Type
 10165 ;;                  2    1[COMMON] int 
 10166 ;; Registers used:
 10167 ;;		wreg, status,2, status,0
 10168 ;; Tracked objects:
 10169 ;;		On entry : 0/0
 10170 ;;		On exit  : 0/0
 10171 ;;		Unchanged: 0/0
 10172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10173 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10174 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10175 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10176 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10177 ;;Total ram usage:        5 bytes
 10178 ;; Hardware stack levels used:    1
 10179 ;; Hardware stack levels required when called:    1
 10180 ;; This function calls:
 10181 ;;		Nothing
 10182 ;; This function is called by:
 10183 ;;		_atoi
 10184 ;; This function uses a non-reentrant model
 10185 ;;
 10186                           
 10187                           
 10188                           ;psect for function _isspace
 10189  2F47                     _isspace:	
 10190                           
 10191                           ;incstack = 0
 10192                           ; Regs used in _isspace: [wreg+status,2+status,0]
 10193  2F47  01F5               	clrf	_isspace$1682
 10194  2F48  0AF5               	incf	_isspace$1682,f
 10195  2F49  3020               	movlw	32
 10196  2F4A  0671               	xorwf	isspace@c,w
 10197  2F4B  0472               	iorwf	isspace@c+1,w
 10198  2F4C  1903               	btfsc	3,2
 10199  2F4D  2F5B               	goto	l6295
 10200  2F4E  0871               	movf	isspace@c,w
 10201  2F4F  3EF7               	addlw	247
 10202  2F50  00F3               	movwf	??_isspace
 10203  2F51  30FF               	movlw	255
 10204  2F52  3D72               	addwfc	isspace@c+1,w
 10205  2F53  00F4               	movwf	??_isspace+1
 10206  2F54  3000               	movlw	0
 10207  2F55  0274               	subwf	??_isspace+1,w
 10208  2F56  3005               	movlw	5
 10209  2F57  1903               	skipnz
 10210  2F58  0273               	subwf	??_isspace,w
 10211  2F59  1803               	btfsc	3,0
 10212  2F5A  01F5               	clrf	_isspace$1682
 10213  2F5B                     l6295:	
 10214  2F5B  0875               	movf	_isspace$1682,w
 10215  2F5C  00F3               	movwf	??_isspace
 10216  2F5D  01F4               	clrf	??_isspace+1
 10217  2F5E  0873               	movf	??_isspace,w
 10218  2F5F  00F1               	movwf	?_isspace
 10219  2F60  0874               	movf	??_isspace+1,w
 10220  2F61  00F2               	movwf	?_isspace+1
 10221  2F62  0008               	return
 10222  2F63                     __end_of_isspace:	
 10223                           
 10224                           	psect	text32
 10225  2E6C                     __ptext32:	
 10226 ;; *************** function _isdigit *****************
 10227 ;; Defined at:
 10228 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 10229 ;; Parameters:    Size  Location     Type
 10230 ;;  c               2    1[COMMON] int 
 10231 ;; Auto vars:     Size  Location     Type
 10232 ;;		None
 10233 ;; Return value:  Size  Location     Type
 10234 ;;                  2    1[COMMON] int 
 10235 ;; Registers used:
 10236 ;;		wreg, status,2, status,0
 10237 ;; Tracked objects:
 10238 ;;		On entry : 0/0
 10239 ;;		On exit  : 0/0
 10240 ;;		Unchanged: 0/0
 10241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10242 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10244 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10245 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10246 ;;Total ram usage:        6 bytes
 10247 ;; Hardware stack levels used:    1
 10248 ;; Hardware stack levels required when called:    1
 10249 ;; This function calls:
 10250 ;;		Nothing
 10251 ;; This function is called by:
 10252 ;;		_vfpfcnvrt
 10253 ;;		_atoi
 10254 ;; This function uses a non-reentrant model
 10255 ;;
 10256                           
 10257                           
 10258                           ;psect for function _isdigit
 10259  2E6C                     _isdigit:	
 10260                           
 10261                           ;incstack = 0
 10262                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 10263  2E6C  0871               	movf	isdigit@c,w
 10264  2E6D  3ED0               	addlw	208
 10265  2E6E  00F3               	movwf	??_isdigit
 10266  2E6F  30FF               	movlw	255
 10267  2E70  3D72               	addwfc	isdigit@c+1,w
 10268  2E71  00F4               	movwf	??_isdigit+1
 10269  2E72  3000               	movlw	0
 10270  2E73  0274               	subwf	??_isdigit+1,w
 10271  2E74  300A               	movlw	10
 10272  2E75  1903               	skipnz
 10273  2E76  0273               	subwf	??_isdigit,w
 10274  2E77  1803               	btfsc	3,0
 10275  2E78  2E7B               	goto	u7800
 10276  2E79  3001               	movlw	1
 10277  2E7A  2E7C               	goto	u7810
 10278  2E7B                     u7800:	
 10279  2E7B  3000               	movlw	0
 10280  2E7C                     u7810:	
 10281  2E7C  00F5               	movwf	??_isdigit+2
 10282  2E7D  01F6               	clrf	??_isdigit+3
 10283  2E7E  0875               	movf	??_isdigit+2,w
 10284  2E7F  00F1               	movwf	?_isdigit
 10285  2E80  0876               	movf	??_isdigit+3,w
 10286  2E81  00F2               	movwf	?_isdigit+1
 10287  2E82  0008               	return
 10288  2E83                     __end_of_isdigit:	
 10289                           
 10290                           	psect	text33
 10291  2EF7                     __ptext33:	
 10292 ;; *************** function _EUSART_Write_Text *****************
 10293 ;; Defined at:
 10294 ;;		line 75 in file "EUSART.c"
 10295 ;; Parameters:    Size  Location     Type
 10296 ;;  text            2    2[COMMON] PTR unsigned char 
 10297 ;;		 -> STR_17(3), STR_4(3), STR_3(38), messageBuffer(127), 
 10298 ;; Auto vars:     Size  Location     Type
 10299 ;;  i               2    5[COMMON] int 
 10300 ;; Return value:  Size  Location     Type
 10301 ;;                  1    wreg      void 
 10302 ;; Registers used:
 10303 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10304 ;; Tracked objects:
 10305 ;;		On entry : 0/0
 10306 ;;		On exit  : 0/0
 10307 ;;		Unchanged: 0/0
 10308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10309 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10310 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10311 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10312 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10313 ;;Total ram usage:        5 bytes
 10314 ;; Hardware stack levels used:    1
 10315 ;; Hardware stack levels required when called:    2
 10316 ;; This function calls:
 10317 ;;		_EUSART_Write
 10318 ;; This function is called by:
 10319 ;;		_printcellParameters
 10320 ;;		_printotAFERegisters
 10321 ;; This function uses a non-reentrant model
 10322 ;;
 10323                           
 10324                           
 10325                           ;psect for function _EUSART_Write_Text
 10326  2EF7                     _EUSART_Write_Text:	
 10327                           
 10328                           ;EUSART.c: 75: void EUSART_Write_Text(char *text);EUSART.c: 76: {;EUSART.c: 77:   int i;
      +                          ;EUSART.c: 78:   for(i=0;text[i]!='\0';i++)
 10329                           
 10330                           ;incstack = 0
 10331                           ; Regs used in _EUSART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10332  2EF7  01F5               	clrf	EUSART_Write_Text@i
 10333  2EF8  01F6               	clrf	EUSART_Write_Text@i+1
 10334  2EF9                     l7751:	
 10335  2EF9  0872               	movf	EUSART_Write_Text@text,w
 10336  2EFA  0775               	addwf	EUSART_Write_Text@i,w
 10337  2EFB  0084               	movwf	4
 10338  2EFC  0873               	movf	EUSART_Write_Text@text+1,w
 10339  2EFD  3D76               	addwfc	EUSART_Write_Text@i+1,w
 10340  2EFE  0085               	movwf	5
 10341  2EFF  0012               	moviw fsr0++
 10342  2F00  1903               	btfsc	3,2
 10343  2F01  0008               	return
 10344                           
 10345                           ;EUSART.c: 79:    EUSART_Write(text[i]);
 10346  2F02  0872               	movf	EUSART_Write_Text@text,w
 10347  2F03  0775               	addwf	EUSART_Write_Text@i,w
 10348  2F04  0084               	movwf	4
 10349  2F05  0873               	movf	EUSART_Write_Text@text+1,w
 10350  2F06  3D76               	addwfc	EUSART_Write_Text@i+1,w
 10351  2F07  0085               	movwf	5
 10352  2F08  0800               	movf	0,w	;code access
 10353  2F09  3188  2000  31AE   	fcall	_EUSART_Write
 10354  2F0C  3001               	movlw	1
 10355  2F0D  07F5               	addwf	EUSART_Write_Text@i,f
 10356  2F0E  3000               	movlw	0
 10357  2F0F  3DF6               	addwfc	EUSART_Write_Text@i+1,f
 10358  2F10  2EF9               	goto	l7751
 10359  2F11                     __end_of_EUSART_Write_Text:	
 10360                           
 10361                           	psect	text34
 10362  0800                     __ptext34:	
 10363 ;; *************** function _EUSART_Write *****************
 10364 ;; Defined at:
 10365 ;;		line 56 in file "EUSART.c"
 10366 ;; Parameters:    Size  Location     Type
 10367 ;;  txData          1    wreg     unsigned char 
 10368 ;; Auto vars:     Size  Location     Type
 10369 ;;  txData          1    1[COMMON] unsigned char 
 10370 ;; Return value:  Size  Location     Type
 10371 ;;                  1    wreg      void 
 10372 ;; Registers used:
 10373 ;;		wreg
 10374 ;; Tracked objects:
 10375 ;;		On entry : 0/0
 10376 ;;		On exit  : 0/0
 10377 ;;		Unchanged: 0/0
 10378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10380 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10382 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10383 ;;Total ram usage:        1 bytes
 10384 ;; Hardware stack levels used:    1
 10385 ;; Hardware stack levels required when called:    1
 10386 ;; This function calls:
 10387 ;;		Nothing
 10388 ;; This function is called by:
 10389 ;;		_EUSART_Write_Text
 10390 ;; This function uses a non-reentrant model
 10391 ;;
 10392                           
 10393                           
 10394                           ;psect for function _EUSART_Write
 10395  0800                     _EUSART_Write:	
 10396                           
 10397                           ;incstack = 0
 10398                           ; Regs used in _EUSART_Write: [wreg]
 10399                           ;EUSART_Write@txData stored from wreg
 10400  0800  00F1               	movwf	EUSART_Write@txData
 10401  0801                     l238:	
 10402                           ;EUSART.c: 59:     {;EUSART.c: 60:     }
 10403                           
 10404                           
 10405                           ;EUSART.c: 58:     while(0 == PIR1bits.TXIF)
 10406  0801  0020               	movlb	0	; select bank0
 10407  0802  1E11               	btfss	17,4	;volatile
 10408  0803  2801               	goto	l238
 10409                           
 10410                           ;EUSART.c: 62:     TX1REG = txData;
 10411  0804  0871               	movf	EUSART_Write@txData,w
 10412  0805  0023               	movlb	3	; select bank3
 10413  0806  009A               	movwf	26	;volatile
 10414  0807  0008               	return
 10415  0808                     __end_of_EUSART_Write:	
 10416                           
 10417                           	psect	text35
 10418  22B2                     __ptext35:	
 10419 ;; *************** function _init_AFE *****************
 10420 ;; Defined at:
 10421 ;;		line 3 in file "BQ76920.c"
 10422 ;; Parameters:    Size  Location     Type
 10423 ;;		None
 10424 ;; Auto vars:     Size  Location     Type
 10425 ;;		None
 10426 ;; Return value:  Size  Location     Type
 10427 ;;                  1    wreg      void 
 10428 ;; Registers used:
 10429 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10430 ;; Tracked objects:
 10431 ;;		On entry : 0/0
 10432 ;;		On exit  : 0/0
 10433 ;;		Unchanged: 0/0
 10434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10439 ;;Total ram usage:        0 bytes
 10440 ;; Hardware stack levels used:    1
 10441 ;; Hardware stack levels required when called:    4
 10442 ;; This function calls:
 10443 ;;		_setCellOvervoltageProtection
 10444 ;;		_setCellUndervoltageProtection
 10445 ;;		_setOverCurrentDischargeProtection
 10446 ;;		_setShortCircuitProtection
 10447 ;;		_setShuntResistorValue
 10448 ;;		_setTemperatureLimitsint
 10449 ;; This function is called by:
 10450 ;;		_statemachine
 10451 ;; This function uses a non-reentrant model
 10452 ;;
 10453                           
 10454                           
 10455                           ;psect for function _init_AFE
 10456  22B2                     _init_AFE:	
 10457                           
 10458                           ;BQ76920.c: 5:     setTemperatureLimitsint(-20, 45, 0, 45);
 10459                           
 10460                           ;incstack = 0
 10461                           ; Regs used in _init_AFE: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10462  22B2  30EC               	movlw	236
 10463  22B3  0020               	movlb	0	; select bank0
 10464  22B4  00A0               	movwf	setTemperatureLimitsint@minDischarge_degC
 10465  22B5  30FF               	movlw	255
 10466  22B6  00A1               	movwf	setTemperatureLimitsint@minDischarge_degC+1
 10467  22B7  302D               	movlw	45
 10468  22B8  00A2               	movwf	setTemperatureLimitsint@maxDischarge_degC
 10469  22B9  3000               	movlw	0
 10470  22BA  00A3               	movwf	setTemperatureLimitsint@maxDischarge_degC+1
 10471  22BB  3000               	movlw	0
 10472  22BC  00A4               	movwf	setTemperatureLimitsint@minCharge_degC
 10473  22BD  00A5               	movwf	setTemperatureLimitsint@minCharge_degC+1
 10474  22BE  302D               	movlw	45
 10475  22BF  00A6               	movwf	setTemperatureLimitsint@maxCharge_degC
 10476  22C0  3000               	movlw	0
 10477  22C1  00A7               	movwf	setTemperatureLimitsint@maxCharge_degC+1
 10478  22C2  3198  2000  31A2   	fcall	_setTemperatureLimitsint
 10479                           
 10480                           ;BQ76920.c: 6:     setShuntResistorValue(0.02);
 10481  22C5  303C               	movlw	60
 10482  22C6  00F4               	movwf	setShuntResistorValue@res_mOhm+3
 10483  22C7  30A3               	movlw	163
 10484  22C8  00F3               	movwf	setShuntResistorValue@res_mOhm+2
 10485  22C9  30D7               	movlw	215
 10486  22CA  00F2               	movwf	setShuntResistorValue@res_mOhm+1
 10487  22CB  300A               	movlw	10
 10488  22CC  00F1               	movwf	setShuntResistorValue@res_mOhm
 10489  22CD  31AE  261A  31A2   	fcall	_setShuntResistorValue
 10490                           
 10491                           ;BQ76920.c: 7:     setShortCircuitProtection(2500, 200);
 10492  22D0  3000               	movlw	0
 10493  22D1  0020               	movlb	0	; select bank0
 10494  22D2  00E9               	movwf	setShortCircuitProtection@current_mA+3
 10495  22D3  3000               	movlw	0
 10496  22D4  00E8               	movwf	setShortCircuitProtection@current_mA+2
 10497  22D5  3009               	movlw	9
 10498  22D6  00E7               	movwf	setShortCircuitProtection@current_mA+1
 10499  22D7  30C4               	movlw	196
 10500  22D8  00E6               	movwf	setShortCircuitProtection@current_mA
 10501  22D9  30C8               	movlw	200
 10502  22DA  00EA               	movwf	setShortCircuitProtection@delay_us
 10503  22DB  3000               	movlw	0
 10504  22DC  00EB               	movwf	setShortCircuitProtection@delay_us+1
 10505  22DD  3191  2118  31A2   	fcall	_setShortCircuitProtection
 10506                           
 10507                           ;BQ76920.c: 9:     setOverCurrentDischargeProtection(20000, 320);
 10508  22E0  3000               	movlw	0
 10509  22E1  0020               	movlb	0	; select bank0
 10510  22E2  00E9               	movwf	setOverCurrentDischargeProtection@current_mA+3
 10511  22E3  3000               	movlw	0
 10512  22E4  00E8               	movwf	setOverCurrentDischargeProtection@current_mA+2
 10513  22E5  304E               	movlw	78
 10514  22E6  00E7               	movwf	setOverCurrentDischargeProtection@current_mA+1
 10515  22E7  3020               	movlw	32
 10516  22E8  00E6               	movwf	setOverCurrentDischargeProtection@current_mA
 10517  22E9  3040               	movlw	64
 10518  22EA  00EA               	movwf	setOverCurrentDischargeProtection@delay_ms
 10519  22EB  3001               	movlw	1
 10520  22EC  00EB               	movwf	setOverCurrentDischargeProtection@delay_ms+1
 10521  22ED  3190  2003  31A2   	fcall	_setOverCurrentDischargeProtection
 10522                           
 10523                           ;BQ76920.c: 10:     setCellUndervoltageProtection(2900, 2);
 10524  22F0  3054               	movlw	84
 10525  22F1  0020               	movlb	0	; select bank0
 10526  22F2  00B2               	movwf	setCellUndervoltageProtection@voltage_mV
 10527  22F3  300B               	movlw	11
 10528  22F4  00B3               	movwf	setCellUndervoltageProtection@voltage_mV+1
 10529  22F5  3002               	movlw	2
 10530  22F6  00B4               	movwf	setCellUndervoltageProtection@delay_s
 10531  22F7  3000               	movlw	0
 10532  22F8  00B5               	movwf	setCellUndervoltageProtection@delay_s+1
 10533  22F9  319A  2286  31A2   	fcall	_setCellUndervoltageProtection
 10534                           
 10535                           ;BQ76920.c: 11:     setCellOvervoltageProtection(4100,2);
 10536  22FC  3004               	movlw	4
 10537  22FD  0020               	movlb	0	; select bank0
 10538  22FE  00B2               	movwf	setCellOvervoltageProtection@voltage_mV
 10539  22FF  3010               	movlw	16
 10540  2300  00B3               	movwf	setCellOvervoltageProtection@voltage_mV+1
 10541  2301  3002               	movlw	2
 10542  2302  00B4               	movwf	setCellOvervoltageProtection@delay_s
 10543  2303  3000               	movlw	0
 10544  2304  00B5               	movwf	setCellOvervoltageProtection@delay_s+1
 10545  2305  3199  21B2         	fcall	_setCellOvervoltageProtection
 10546  2307  0008               	return
 10547  2308                     __end_of_init_AFE:	
 10548                           
 10549                           	psect	text36
 10550  1800                     __ptext36:	
 10551 ;; *************** function _setTemperatureLimitsint *****************
 10552 ;; Defined at:
 10553 ;;		line 56 in file "BQ76920.c"
 10554 ;; Parameters:    Size  Location     Type
 10555 ;;  minDischarge    2    0[BANK0 ] int 
 10556 ;;  maxDischarge    2    2[BANK0 ] int 
 10557 ;;  minCharge_de    2    4[BANK0 ] int 
 10558 ;;  maxCharge_de    2    6[BANK0 ] int 
 10559 ;; Auto vars:     Size  Location     Type
 10560 ;;		None
 10561 ;; Return value:  Size  Location     Type
 10562 ;;                  1    wreg      void 
 10563 ;; Registers used:
 10564 ;;		wreg, status,2, status,0, pclath, cstack
 10565 ;; Tracked objects:
 10566 ;;		On entry : 0/0
 10567 ;;		On exit  : 0/0
 10568 ;;		Unchanged: 0/0
 10569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10570 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10573 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10574 ;;Total ram usage:        8 bytes
 10575 ;; Hardware stack levels used:    1
 10576 ;; Hardware stack levels required when called:    2
 10577 ;; This function calls:
 10578 ;;		___wmul
 10579 ;; This function is called by:
 10580 ;;		_init_AFE
 10581 ;; This function uses a non-reentrant model
 10582 ;;
 10583                           
 10584                           
 10585                           ;psect for function _setTemperatureLimitsint
 10586  1800                     _setTemperatureLimitsint:	
 10587                           
 10588                           ;BQ76920.c: 58:     minCellTempDischarge = minDischarge_degC * 10;
 10589                           
 10590                           ;incstack = 0
 10591                           ; Regs used in _setTemperatureLimitsint: [wreg+status,2+status,0+pclath+cstack]
 10592  1800  0020               	movlb	0	; select bank0
 10593  1801  0821               	movf	setTemperatureLimitsint@minDischarge_degC+1,w
 10594  1802  00F2               	movwf	___wmul@multiplier+1
 10595  1803  0820               	movf	setTemperatureLimitsint@minDischarge_degC,w
 10596  1804  00F1               	movwf	___wmul@multiplier
 10597  1805  300A               	movlw	10
 10598  1806  00F3               	movwf	___wmul@multiplicand
 10599  1807  3000               	movlw	0
 10600  1808  00F4               	movwf	___wmul@multiplicand+1
 10601  1809  31AF  2711  3198   	fcall	___wmul
 10602  180C  0872               	movf	?___wmul+1,w
 10603  180D  0022               	movlb	2	; select bank2
 10604  180E  00D1               	movwf	(_minCellTempDischarge+1)^(0+256)
 10605  180F  0871               	movf	?___wmul,w
 10606  1810  00D0               	movwf	_minCellTempDischarge^(0+256)
 10607                           
 10608                           ;BQ76920.c: 59:     maxCellTempDischarge = maxDischarge_degC * 10;
 10609  1811  0020               	movlb	0	; select bank0
 10610  1812  0823               	movf	setTemperatureLimitsint@maxDischarge_degC+1,w
 10611  1813  00F2               	movwf	___wmul@multiplier+1
 10612  1814  0822               	movf	setTemperatureLimitsint@maxDischarge_degC,w
 10613  1815  00F1               	movwf	___wmul@multiplier
 10614  1816  300A               	movlw	10
 10615  1817  00F3               	movwf	___wmul@multiplicand
 10616  1818  3000               	movlw	0
 10617  1819  00F4               	movwf	___wmul@multiplicand+1
 10618  181A  31AF  2711  3198   	fcall	___wmul
 10619  181D  0872               	movf	?___wmul+1,w
 10620  181E  0022               	movlb	2	; select bank2
 10621  181F  00CD               	movwf	(_maxCellTempDischarge+1)^(0+256)
 10622  1820  0871               	movf	?___wmul,w
 10623  1821  00CC               	movwf	_maxCellTempDischarge^(0+256)
 10624                           
 10625                           ;BQ76920.c: 60:     minCellTempCharge = minCharge_degC * 10;
 10626  1822  0020               	movlb	0	; select bank0
 10627  1823  0825               	movf	setTemperatureLimitsint@minCharge_degC+1,w
 10628  1824  00F2               	movwf	___wmul@multiplier+1
 10629  1825  0824               	movf	setTemperatureLimitsint@minCharge_degC,w
 10630  1826  00F1               	movwf	___wmul@multiplier
 10631  1827  300A               	movlw	10
 10632  1828  00F3               	movwf	___wmul@multiplicand
 10633  1829  3000               	movlw	0
 10634  182A  00F4               	movwf	___wmul@multiplicand+1
 10635  182B  31AF  2711  3198   	fcall	___wmul
 10636  182E  0872               	movf	?___wmul+1,w
 10637  182F  0022               	movlb	2	; select bank2
 10638  1830  00D3               	movwf	(_minCellTempCharge+1)^(0+256)
 10639  1831  0871               	movf	?___wmul,w
 10640  1832  00D2               	movwf	_minCellTempCharge^(0+256)
 10641                           
 10642                           ;BQ76920.c: 61:     maxCellTempCharge = maxCharge_degC * 10;
 10643  1833  0020               	movlb	0	; select bank0
 10644  1834  0827               	movf	setTemperatureLimitsint@maxCharge_degC+1,w
 10645  1835  00F2               	movwf	___wmul@multiplier+1
 10646  1836  0826               	movf	setTemperatureLimitsint@maxCharge_degC,w
 10647  1837  00F1               	movwf	___wmul@multiplier
 10648  1838  300A               	movlw	10
 10649  1839  00F3               	movwf	___wmul@multiplicand
 10650  183A  3000               	movlw	0
 10651  183B  00F4               	movwf	___wmul@multiplicand+1
 10652  183C  31AF  2711         	fcall	___wmul
 10653  183E  0872               	movf	?___wmul+1,w
 10654  183F  0022               	movlb	2	; select bank2
 10655  1840  00CF               	movwf	(_maxCellTempCharge+1)^(0+256)
 10656  1841  0871               	movf	?___wmul,w
 10657  1842  00CE               	movwf	_maxCellTempCharge^(0+256)
 10658  1843  0008               	return
 10659  1844                     __end_of_setTemperatureLimitsint:	
 10660                           
 10661                           	psect	text37
 10662  2F11                     __ptext37:	
 10663 ;; *************** function ___wmul *****************
 10664 ;; Defined at:
 10665 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 10666 ;; Parameters:    Size  Location     Type
 10667 ;;  multiplier      2    1[COMMON] unsigned int 
 10668 ;;  multiplicand    2    3[COMMON] unsigned int 
 10669 ;; Auto vars:     Size  Location     Type
 10670 ;;  product         2    5[COMMON] unsigned int 
 10671 ;; Return value:  Size  Location     Type
 10672 ;;                  2    1[COMMON] unsigned int 
 10673 ;; Registers used:
 10674 ;;		wreg, status,2, status,0
 10675 ;; Tracked objects:
 10676 ;;		On entry : 0/0
 10677 ;;		On exit  : 0/0
 10678 ;;		Unchanged: 0/0
 10679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10680 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10681 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10683 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10684 ;;Total ram usage:        6 bytes
 10685 ;; Hardware stack levels used:    1
 10686 ;; Hardware stack levels required when called:    1
 10687 ;; This function calls:
 10688 ;;		Nothing
 10689 ;; This function is called by:
 10690 ;;		_setTemperatureLimitsint
 10691 ;;		_atoi
 10692 ;; This function uses a non-reentrant model
 10693 ;;
 10694                           
 10695                           
 10696                           ;psect for function ___wmul
 10697  2F11                     ___wmul:	
 10698                           
 10699                           ;incstack = 0
 10700                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10701  2F11  01F5               	clrf	___wmul@product
 10702  2F12  01F6               	clrf	___wmul@product+1
 10703  2F13                     l6169:	
 10704  2F13  1C71               	btfss	___wmul@multiplier,0
 10705  2F14  2F19               	goto	l840
 10706  2F15  0873               	movf	___wmul@multiplicand,w
 10707  2F16  07F5               	addwf	___wmul@product,f
 10708  2F17  0874               	movf	___wmul@multiplicand+1,w
 10709  2F18  3DF6               	addwfc	___wmul@product+1,f
 10710  2F19                     l840:	
 10711  2F19  3001               	movlw	1
 10712  2F1A                     u7835:	
 10713  2F1A  35F3               	lslf	___wmul@multiplicand,f
 10714  2F1B  0DF4               	rlf	___wmul@multiplicand+1,f
 10715  2F1C  0B89               	decfsz	9,f
 10716  2F1D  2F1A               	goto	u7835
 10717  2F1E  3001               	movlw	1
 10718  2F1F                     u7845:	
 10719  2F1F  36F2               	lsrf	___wmul@multiplier+1,f
 10720  2F20  0CF1               	rrf	___wmul@multiplier,f
 10721  2F21  0B89               	decfsz	9,f
 10722  2F22  2F1F               	goto	u7845
 10723  2F23  0871               	movf	___wmul@multiplier,w
 10724  2F24  0472               	iorwf	___wmul@multiplier+1,w
 10725  2F25  1D03               	btfss	3,2
 10726  2F26  2F13               	goto	l6169
 10727  2F27  0876               	movf	___wmul@product+1,w
 10728  2F28  00F2               	movwf	?___wmul+1
 10729  2F29  0875               	movf	___wmul@product,w
 10730  2F2A  00F1               	movwf	?___wmul
 10731  2F2B  0008               	return
 10732  2F2C                     __end_of___wmul:	
 10733                           
 10734                           	psect	text38
 10735  2E1A                     __ptext38:	
 10736 ;; *************** function _setShuntResistorValue *****************
 10737 ;; Defined at:
 10738 ;;		line 68 in file "BQ76920.c"
 10739 ;; Parameters:    Size  Location     Type
 10740 ;;  res_mOhm        4    1[COMMON] float 
 10741 ;; Auto vars:     Size  Location     Type
 10742 ;;		None
 10743 ;; Return value:  Size  Location     Type
 10744 ;;                  1    wreg      void 
 10745 ;; Registers used:
 10746 ;;		wreg
 10747 ;; Tracked objects:
 10748 ;;		On entry : 0/0
 10749 ;;		On exit  : 0/0
 10750 ;;		Unchanged: 0/0
 10751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10752 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10755 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10756 ;;Total ram usage:        4 bytes
 10757 ;; Hardware stack levels used:    1
 10758 ;; Hardware stack levels required when called:    1
 10759 ;; This function calls:
 10760 ;;		Nothing
 10761 ;; This function is called by:
 10762 ;;		_init_AFE
 10763 ;; This function uses a non-reentrant model
 10764 ;;
 10765                           
 10766                           
 10767                           ;psect for function _setShuntResistorValue
 10768  2E1A                     _setShuntResistorValue:	
 10769                           
 10770                           ;BQ76920.c: 69:     shuntResistorValue_mOhm = res_mOhm;
 10771                           
 10772                           ;incstack = 0
 10773                           ; Regs used in _setShuntResistorValue: [wreg]
 10774  2E1A  0874               	movf	setShuntResistorValue@res_mOhm+3,w
 10775  2E1B  0022               	movlb	2	; select bank2
 10776  2E1C  00B1               	movwf	(BQ76920@shuntResistorValue_mOhm+3)^(0+256)
 10777  2E1D  0873               	movf	setShuntResistorValue@res_mOhm+2,w
 10778  2E1E  00B0               	movwf	(BQ76920@shuntResistorValue_mOhm+2)^(0+256)
 10779  2E1F  0872               	movf	setShuntResistorValue@res_mOhm+1,w
 10780  2E20  00AF               	movwf	(BQ76920@shuntResistorValue_mOhm+1)^(0+256)
 10781  2E21  0871               	movf	setShuntResistorValue@res_mOhm,w
 10782  2E22  00AE               	movwf	BQ76920@shuntResistorValue_mOhm^(0+256)
 10783  2E23  0008               	return
 10784  2E24                     __end_of_setShuntResistorValue:	
 10785                           
 10786                           	psect	text39
 10787  1118                     __ptext39:	
 10788 ;; *************** function _setShortCircuitProtection *****************
 10789 ;; Defined at:
 10790 ;;		line 76 in file "BQ76920.c"
 10791 ;; Parameters:    Size  Location     Type
 10792 ;;  current_mA      4   70[BANK0 ] long 
 10793 ;;  delay_us        2   74[BANK0 ] int 
 10794 ;; Auto vars:     Size  Location     Type
 10795 ;;  i               2   10[BANK1 ] int 
 10796 ;;  i               2    8[BANK1 ] int 
 10797 ;;  scaler          4    0[BANK1 ] float 
 10798 ;; Return value:  Size  Location     Type
 10799 ;;                  1    wreg      void 
 10800 ;; Registers used:
 10801 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10802 ;; Tracked objects:
 10803 ;;		On entry : 0/0
 10804 ;;		On exit  : 0/0
 10805 ;;		Unchanged: 0/0
 10806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10807 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10808 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10809 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10810 ;;      Totals:         0       9      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10811 ;;Total ram usage:       21 bytes
 10812 ;; Hardware stack levels used:    1
 10813 ;; Hardware stack levels required when called:    3
 10814 ;; This function calls:
 10815 ;;		_I2C_writeRegister
 10816 ;;		___fldiv
 10817 ;;		___flge
 10818 ;;		___flmul
 10819 ;;		___xxtofl
 10820 ;; This function is called by:
 10821 ;;		_init_AFE
 10822 ;; This function uses a non-reentrant model
 10823 ;;
 10824                           
 10825                           
 10826                           ;psect for function _setShortCircuitProtection
 10827  1118                     _setShortCircuitProtection:	
 10828                           
 10829                           ;BQ76920.c: 81:     float scaler = 1000.0;
 10830                           
 10831                           ;incstack = 0
 10832                           ; Regs used in _setShortCircuitProtection: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10833  1118  3044               	movlw	68
 10834  1119  0021               	movlb	1	; select bank1
 10835  111A  00A3               	movwf	(setShortCircuitProtection@scaler+3)^(0+128)
 10836  111B  307A               	movlw	122
 10837  111C  00A2               	movwf	(setShortCircuitProtection@scaler+2)^(0+128)
 10838  111D  3000               	movlw	0
 10839  111E  00A1               	movwf	(setShortCircuitProtection@scaler+1)^(0+128)
 10840  111F  3000               	movlw	0
 10841  1120  00A0               	movwf	setShortCircuitProtection@scaler^(0+128)
 10842                           
 10843                           ;BQ76920.c: 82:     protect1.bits.SCD_THRESH = 0;
 10844  1121  30F8               	movlw	-8
 10845  1122  0022               	movlb	2	; select bank2
 10846  1123  05D8               	andwf	BQ76920@protect1^(0+256),f
 10847                           
 10848                           ;BQ76920.c: 83:     for (int i = 0; i < (sizeof(SCD_threshold_setting) / sizeof((SCD_thr
      +                          eshold_setting)[0])) - 1; i++) {
 10849  1124  0021               	movlb	1	; select bank1
 10850  1125  01A8               	clrf	setShortCircuitProtection@i^(0+128)
 10851  1126  01A9               	clrf	(setShortCircuitProtection@i+1)^(0+128)
 10852  1127                     l7767:	
 10853                           
 10854                           ;BQ76920.c: 84:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) >
      +                          = SCD_threshold_setting[i]) {
 10855  1127  0022               	movlb	2	; select bank2
 10856  1128  0831               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+256),w
 10857  1129  0020               	movlb	0	; select bank0
 10858  112A  00A9               	movwf	___flmul@b+3
 10859  112B  0022               	movlb	2	; select bank2
 10860  112C  0830               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+256),w
 10861  112D  0020               	movlb	0	; select bank0
 10862  112E  00A8               	movwf	___flmul@b+2
 10863  112F  0022               	movlb	2	; select bank2
 10864  1130  082F               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+256),w
 10865  1131  0020               	movlb	0	; select bank0
 10866  1132  00A7               	movwf	___flmul@b+1
 10867  1133  0022               	movlb	2	; select bank2
 10868  1134  082E               	movf	BQ76920@shuntResistorValue_mOhm^(0+256),w
 10869  1135  0020               	movlb	0	; select bank0
 10870  1136  00A6               	movwf	___flmul@b
 10871  1137  0869               	movf	setShortCircuitProtection@current_mA+3,w
 10872  1138  00F4               	movwf	___xxtofl@val+3
 10873  1139  0868               	movf	setShortCircuitProtection@current_mA+2,w
 10874  113A  00F3               	movwf	___xxtofl@val+2
 10875  113B  0867               	movf	setShortCircuitProtection@current_mA+1,w
 10876  113C  00F2               	movwf	___xxtofl@val+1
 10877  113D  0866               	movf	setShortCircuitProtection@current_mA,w
 10878  113E  00F1               	movwf	___xxtofl@val
 10879  113F  3001               	movlw	1
 10880  1140  31A6  262B  3191   	fcall	___xxtofl
 10881  1143  0874               	movf	?___xxtofl+3,w
 10882  1144  0020               	movlb	0	; select bank0
 10883  1145  00AD               	movwf	___flmul@a+3
 10884  1146  0873               	movf	?___xxtofl+2,w
 10885  1147  00AC               	movwf	___flmul@a+2
 10886  1148  0872               	movf	?___xxtofl+1,w
 10887  1149  00AB               	movwf	___flmul@a+1
 10888  114A  0871               	movf	?___xxtofl,w
 10889  114B  00AA               	movwf	___flmul@a
 10890  114C  3183  2335  3191   	fcall	___flmul
 10891  114F  0020               	movlb	0	; select bank0
 10892  1150  0829               	movf	?___flmul+3,w
 10893  1151  0021               	movlb	1	; select bank1
 10894  1152  00A7               	movwf	(_setShortCircuitProtection$2039+3)^(0+128)
 10895  1153  0020               	movlb	0	; select bank0
 10896  1154  0828               	movf	?___flmul+2,w
 10897  1155  0021               	movlb	1	; select bank1
 10898  1156  00A6               	movwf	(_setShortCircuitProtection$2039+2)^(0+128)
 10899  1157  0020               	movlb	0	; select bank0
 10900  1158  0827               	movf	?___flmul+1,w
 10901  1159  0021               	movlb	1	; select bank1
 10902  115A  00A5               	movwf	(_setShortCircuitProtection$2039+1)^(0+128)
 10903  115B  0020               	movlb	0	; select bank0
 10904  115C  0826               	movf	?___flmul,w
 10905  115D  0021               	movlb	1	; select bank1
 10906  115E  00A4               	movwf	_setShortCircuitProtection$2039^(0+128)
 10907                           
 10908                           ;BQ76920.c: 84:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) >
      +                          = SCD_threshold_setting[i]) {
 10909  115F  3044               	movlw	68
 10910  1160  0020               	movlb	0	; select bank0
 10911  1161  00C3               	movwf	___fldiv@a+3
 10912  1162  307A               	movlw	122
 10913  1163  00C2               	movwf	___fldiv@a+2
 10914  1164  3000               	movlw	0
 10915  1165  00C1               	movwf	___fldiv@a+1
 10916  1166  3000               	movlw	0
 10917  1167  00C0               	movwf	___fldiv@a
 10918  1168  0021               	movlb	1	; select bank1
 10919  1169  0823               	movf	(setShortCircuitProtection@scaler+3)^(0+128),w
 10920  116A  0020               	movlb	0	; select bank0
 10921  116B  00A9               	movwf	___flmul@b+3
 10922  116C  0021               	movlb	1	; select bank1
 10923  116D  0822               	movf	(setShortCircuitProtection@scaler+2)^(0+128),w
 10924  116E  0020               	movlb	0	; select bank0
 10925  116F  00A8               	movwf	___flmul@b+2
 10926  1170  0021               	movlb	1	; select bank1
 10927  1171  0821               	movf	(setShortCircuitProtection@scaler+1)^(0+128),w
 10928  1172  0020               	movlb	0	; select bank0
 10929  1173  00A7               	movwf	___flmul@b+1
 10930  1174  0021               	movlb	1	; select bank1
 10931  1175  0820               	movf	setShortCircuitProtection@scaler^(0+128),w
 10932  1176  0020               	movlb	0	; select bank0
 10933  1177  00A6               	movwf	___flmul@b
 10934  1178  0021               	movlb	1	; select bank1
 10935  1179  0827               	movf	(_setShortCircuitProtection$2039+3)^(0+128),w
 10936  117A  0020               	movlb	0	; select bank0
 10937  117B  00AD               	movwf	___flmul@a+3
 10938  117C  0021               	movlb	1	; select bank1
 10939  117D  0826               	movf	(_setShortCircuitProtection$2039+2)^(0+128),w
 10940  117E  0020               	movlb	0	; select bank0
 10941  117F  00AC               	movwf	___flmul@a+2
 10942  1180  0021               	movlb	1	; select bank1
 10943  1181  0825               	movf	(_setShortCircuitProtection$2039+1)^(0+128),w
 10944  1182  0020               	movlb	0	; select bank0
 10945  1183  00AB               	movwf	___flmul@a+1
 10946  1184  0021               	movlb	1	; select bank1
 10947  1185  0824               	movf	_setShortCircuitProtection$2039^(0+128),w
 10948  1186  0020               	movlb	0	; select bank0
 10949  1187  00AA               	movwf	___flmul@a
 10950  1188  3183  2335  3191   	fcall	___flmul
 10951  118B  0020               	movlb	0	; select bank0
 10952  118C  0829               	movf	?___flmul+3,w
 10953  118D  00C7               	movwf	___fldiv@b+3
 10954  118E  0828               	movf	?___flmul+2,w
 10955  118F  00C6               	movwf	___fldiv@b+2
 10956  1190  0827               	movf	?___flmul+1,w
 10957  1191  00C5               	movwf	___fldiv@b+1
 10958  1192  0826               	movf	?___flmul,w
 10959  1193  00C4               	movwf	___fldiv@b
 10960  1194  3194  24DF  3191   	fcall	___fldiv
 10961  1197  0020               	movlb	0	; select bank0
 10962  1198  0843               	movf	?___fldiv+3,w
 10963  1199  00DD               	movwf	___flge@ff1+3
 10964  119A  0842               	movf	?___fldiv+2,w
 10965  119B  00DC               	movwf	___flge@ff1+2
 10966  119C  0841               	movf	?___fldiv+1,w
 10967  119D  00DB               	movwf	___flge@ff1+1
 10968  119E  0840               	movf	?___fldiv,w
 10969  119F  00DA               	movwf	___flge@ff1
 10970  11A0  0021               	movlb	1	; select bank1
 10971  11A1  0829               	movf	(setShortCircuitProtection@i+1)^(0+128),w
 10972  11A2  0085               	movwf	5
 10973  11A3  0828               	movf	setShortCircuitProtection@i^(0+128),w
 10974  11A4  0084               	movwf	4
 10975  11A5  3584               	lslf	4,f
 10976  11A6  0D85               	rlf	5,f
 10977  11A7  3024               	movlw	low (_SCD_threshold_setting| (0+32768))
 10978  11A8  0784               	addwf	4,f
 10979  11A9  30B1               	movlw	high (_SCD_threshold_setting| (0+32768))
 10980  11AA  3D85               	addwfc	5,f
 10981  11AB  3F00               	moviw [0]fsr0
 10982  11AC  0020               	movlb	0	; select bank0
 10983  11AD  00EC               	movwf	??_setShortCircuitProtection
 10984  11AE  3F01               	moviw [1]fsr0
 10985  11AF  00ED               	movwf	??_setShortCircuitProtection+1
 10986  11B0  086C               	movf	??_setShortCircuitProtection,w
 10987  11B1  00F1               	movwf	___xxtofl@val
 10988  11B2  086D               	movf	??_setShortCircuitProtection+1,w
 10989  11B3  00F2               	movwf	___xxtofl@val+1
 10990  11B4  0D89               	rlf	9,f
 10991  11B5  3B89               	subwfb	9,f
 10992  11B6  0989               	comf	9,f
 10993  11B7  00F3               	movwf	___xxtofl@val+2
 10994  11B8  00F4               	movwf	___xxtofl@val+3
 10995  11B9  3001               	movlw	1
 10996  11BA  31A6  262B  3191   	fcall	___xxtofl
 10997  11BD  0874               	movf	?___xxtofl+3,w
 10998  11BE  0020               	movlb	0	; select bank0
 10999  11BF  00E1               	movwf	___flge@ff2+3
 11000  11C0  0873               	movf	?___xxtofl+2,w
 11001  11C1  00E0               	movwf	___flge@ff2+2
 11002  11C2  0872               	movf	?___xxtofl+1,w
 11003  11C3  00DF               	movwf	___flge@ff2+1
 11004  11C4  0871               	movf	?___xxtofl,w
 11005  11C5  00DE               	movwf	___flge@ff2
 11006  11C6  31A4  2434  3191   	fcall	___flge
 11007  11C9  1C03               	btfss	3,0
 11008  11CA  29D3               	goto	l7773
 11009                           
 11010                           ;BQ76920.c: 85:             protect1.bits.SCD_THRESH = i;
 11011  11CB  0022               	movlb	2	; select bank2
 11012  11CC  0858               	movf	BQ76920@protect1^(0+256),w
 11013  11CD  0021               	movlb	1	; select bank1
 11014  11CE  0628               	xorwf	setShortCircuitProtection@i^(0+128),w
 11015  11CF  39F8               	andlw	-8
 11016  11D0  0628               	xorwf	setShortCircuitProtection@i^(0+128),w
 11017  11D1  0022               	movlb	2	; select bank2
 11018  11D2  00D8               	movwf	BQ76920@protect1^(0+256)
 11019  11D3                     l7773:	
 11020                           
 11021                           ;BQ76920.c: 87:     }
 11022  11D3  3001               	movlw	1
 11023  11D4  0021               	movlb	1	; select bank1
 11024  11D5  07A8               	addwf	setShortCircuitProtection@i^(0+128),f
 11025  11D6  3000               	movlw	0
 11026  11D7  3DA9               	addwfc	(setShortCircuitProtection@i+1)^(0+128),f
 11027  11D8  3000               	movlw	0
 11028  11D9  0229               	subwf	(setShortCircuitProtection@i+1)^(0+128),w
 11029  11DA  3007               	movlw	7
 11030  11DB  1903               	skipnz
 11031  11DC  0228               	subwf	setShortCircuitProtection@i^(0+128),w
 11032  11DD  1C03               	skipc
 11033  11DE  2927               	goto	l7767
 11034                           
 11035                           ;BQ76920.c: 89:     protect1.bits.SCD_DELAY = 0;
 11036  11DF  30E7               	movlw	-25
 11037  11E0  0022               	movlb	2	; select bank2
 11038  11E1  05D8               	andwf	BQ76920@protect1^(0+256),f
 11039                           
 11040                           ;BQ76920.c: 90:     for (int i = 0; i < (sizeof(SCD_threshold_setting) / sizeof((SCD_thr
      +                          eshold_setting)[0])) - 1; i++) {
 11041  11E2  0021               	movlb	1	; select bank1
 11042  11E3  01AA               	clrf	setShortCircuitProtection@i_955^(0+128)
 11043  11E4  01AB               	clrf	(setShortCircuitProtection@i_955+1)^(0+128)
 11044  11E5                     l7785:	
 11045                           
 11046                           ;BQ76920.c: 91:         if (delay_us >= SCD_delay_setting[i]) {
 11047  11E5  082B               	movf	(setShortCircuitProtection@i_955+1)^(0+128),w
 11048  11E6  0085               	movwf	5
 11049  11E7  082A               	movf	setShortCircuitProtection@i_955^(0+128),w
 11050  11E8  0084               	movwf	4
 11051  11E9  3584               	lslf	4,f
 11052  11EA  0D85               	rlf	5,f
 11053  11EB  3044               	movlw	low (_SCD_delay_setting| (0+32768))
 11054  11EC  0784               	addwf	4,f
 11055  11ED  30B1               	movlw	high (_SCD_delay_setting| (0+32768))
 11056  11EE  3D85               	addwfc	5,f
 11057  11EF  3F00               	moviw [0]fsr0
 11058  11F0  0020               	movlb	0	; select bank0
 11059  11F1  00EC               	movwf	??_setShortCircuitProtection
 11060  11F2  3F01               	moviw [1]fsr0
 11061  11F3  00ED               	movwf	??_setShortCircuitProtection+1
 11062  11F4  086B               	movf	setShortCircuitProtection@delay_us+1,w
 11063  11F5  3A80               	xorlw	128
 11064  11F6  00EE               	movwf	??_setShortCircuitProtection+2
 11065  11F7  086D               	movf	??_setShortCircuitProtection+1,w
 11066  11F8  3A80               	xorlw	128
 11067  11F9  026E               	subwf	??_setShortCircuitProtection+2,w
 11068  11FA  1D03               	skipz
 11069  11FB  29FE               	goto	u10955
 11070  11FC  086C               	movf	??_setShortCircuitProtection,w
 11071  11FD  026A               	subwf	setShortCircuitProtection@delay_us,w
 11072  11FE                     u10955:	
 11073  11FE  1C03               	skipc
 11074  11FF  2A0F               	goto	l7789
 11075                           
 11076                           ;BQ76920.c: 92:             protect1.bits.SCD_DELAY = i;
 11077  1200  0021               	movlb	1	; select bank1
 11078  1201  082A               	movf	setShortCircuitProtection@i_955^(0+128),w
 11079  1202  0020               	movlb	0	; select bank0
 11080  1203  00EC               	movwf	??_setShortCircuitProtection
 11081  1204  0DEC               	rlf	??_setShortCircuitProtection,f
 11082  1205  0DEC               	rlf	??_setShortCircuitProtection,f
 11083  1206  0DEC               	rlf	??_setShortCircuitProtection,f
 11084  1207  0022               	movlb	2	; select bank2
 11085  1208  0858               	movf	BQ76920@protect1^(0+256),w
 11086  1209  0020               	movlb	0	; select bank0
 11087  120A  066C               	xorwf	??_setShortCircuitProtection,w
 11088  120B  39E7               	andlw	-25
 11089  120C  066C               	xorwf	??_setShortCircuitProtection,w
 11090  120D  0022               	movlb	2	; select bank2
 11091  120E  00D8               	movwf	BQ76920@protect1^(0+256)
 11092  120F                     l7789:	
 11093                           
 11094                           ;BQ76920.c: 94:     }
 11095  120F  3001               	movlw	1
 11096  1210  0021               	movlb	1	; select bank1
 11097  1211  07AA               	addwf	setShortCircuitProtection@i_955^(0+128),f
 11098  1212  3000               	movlw	0
 11099  1213  3DAB               	addwfc	(setShortCircuitProtection@i_955+1)^(0+128),f
 11100  1214  3000               	movlw	0
 11101  1215  022B               	subwf	(setShortCircuitProtection@i_955+1)^(0+128),w
 11102  1216  3007               	movlw	7
 11103  1217  1903               	skipnz
 11104  1218  022A               	subwf	setShortCircuitProtection@i_955^(0+128),w
 11105  1219  1C03               	skipc
 11106  121A  29E5               	goto	l7785
 11107                           
 11108                           ;BQ76920.c: 96:     I2C_writeRegister(0x18, 0x06, protect1.regByte);
 11109  121B  3018               	movlw	24
 11110  121C  00F5               	movwf	I2C_writeRegister@slaveAddress
 11111  121D  3000               	movlw	0
 11112  121E  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 11113  121F  3006               	movlw	6
 11114  1220  00F7               	movwf	I2C_writeRegister@regAddress
 11115  1221  3000               	movlw	0
 11116  1222  00F8               	movwf	I2C_writeRegister@regAddress+1
 11117  1223  0022               	movlb	2	; select bank2
 11118  1224  0858               	movf	BQ76920@protect1^(0+256),w
 11119  1225  0020               	movlb	0	; select bank0
 11120  1226  00EC               	movwf	??_setShortCircuitProtection
 11121  1227  01ED               	clrf	??_setShortCircuitProtection+1
 11122  1228  086C               	movf	??_setShortCircuitProtection,w
 11123  1229  00F9               	movwf	I2C_writeRegister@data
 11124  122A  086D               	movf	??_setShortCircuitProtection+1,w
 11125  122B  00FA               	movwf	I2C_writeRegister@data+1
 11126  122C  31AF  2780         	fcall	_I2C_writeRegister
 11127  122E  0008               	return
 11128  122F                     __end_of_setShortCircuitProtection:	
 11129                           
 11130                           	psect	text40
 11131  1003                     __ptext40:	
 11132 ;; *************** function _setOverCurrentDischargeProtection *****************
 11133 ;; Defined at:
 11134 ;;		line 103 in file "BQ76920.c"
 11135 ;; Parameters:    Size  Location     Type
 11136 ;;  current_mA      4   70[BANK0 ] long 
 11137 ;;  delay_ms        2   74[BANK0 ] int 
 11138 ;; Auto vars:     Size  Location     Type
 11139 ;;  i               2   10[BANK1 ] int 
 11140 ;;  i               2    8[BANK1 ] int 
 11141 ;;  scaler          4    0[BANK1 ] float 
 11142 ;; Return value:  Size  Location     Type
 11143 ;;                  1    wreg      void 
 11144 ;; Registers used:
 11145 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11146 ;; Tracked objects:
 11147 ;;		On entry : 0/0
 11148 ;;		On exit  : 0/0
 11149 ;;		Unchanged: 0/0
 11150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11151 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11152 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11153 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11154 ;;      Totals:         0       9      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11155 ;;Total ram usage:       21 bytes
 11156 ;; Hardware stack levels used:    1
 11157 ;; Hardware stack levels required when called:    3
 11158 ;; This function calls:
 11159 ;;		_I2C_writeRegister
 11160 ;;		___fldiv
 11161 ;;		___flge
 11162 ;;		___flmul
 11163 ;;		___xxtofl
 11164 ;; This function is called by:
 11165 ;;		_init_AFE
 11166 ;; This function uses a non-reentrant model
 11167 ;;
 11168                           
 11169                           
 11170                           ;psect for function _setOverCurrentDischargeProtection
 11171  1003                     _setOverCurrentDischargeProtection:	
 11172                           
 11173                           ;BQ76920.c: 106:     float scaler = 1000.0;
 11174                           
 11175                           ;incstack = 0
 11176                           ; Regs used in _setOverCurrentDischargeProtection: [wreg-fsr0h+status,2+status,0+pclath+
      +                          cstack]
 11177  1003  3044               	movlw	68
 11178  1004  0021               	movlb	1	; select bank1
 11179  1005  00A3               	movwf	(setOverCurrentDischargeProtection@scaler+3)^(0+128)
 11180  1006  307A               	movlw	122
 11181  1007  00A2               	movwf	(setOverCurrentDischargeProtection@scaler+2)^(0+128)
 11182  1008  3000               	movlw	0
 11183  1009  00A1               	movwf	(setOverCurrentDischargeProtection@scaler+1)^(0+128)
 11184  100A  3000               	movlw	0
 11185  100B  00A0               	movwf	setOverCurrentDischargeProtection@scaler^(0+128)
 11186                           
 11187                           ;BQ76920.c: 107:     protect2.bits.OCD_THRESH = 0;
 11188  100C  30F0               	movlw	-16
 11189  100D  0022               	movlb	2	; select bank2
 11190  100E  05D7               	andwf	BQ76920@protect2^(0+256),f
 11191                           
 11192                           ;BQ76920.c: 108:     for (int i = 0; i < (sizeof(OCD_threshold_setting) / sizeof((OCD_th
      +                          reshold_setting)[0])) - 1; i++) {
 11193  100F  0021               	movlb	1	; select bank1
 11194  1010  01A8               	clrf	setOverCurrentDischargeProtection@i^(0+128)
 11195  1011  01A9               	clrf	(setOverCurrentDischargeProtection@i+1)^(0+128)
 11196  1012                     l7805:	
 11197                           
 11198                           ;BQ76920.c: 109:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) 
      +                          >= OCD_threshold_setting[i]) {
 11199  1012  0022               	movlb	2	; select bank2
 11200  1013  0831               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+256),w
 11201  1014  0020               	movlb	0	; select bank0
 11202  1015  00A9               	movwf	___flmul@b+3
 11203  1016  0022               	movlb	2	; select bank2
 11204  1017  0830               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+256),w
 11205  1018  0020               	movlb	0	; select bank0
 11206  1019  00A8               	movwf	___flmul@b+2
 11207  101A  0022               	movlb	2	; select bank2
 11208  101B  082F               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+256),w
 11209  101C  0020               	movlb	0	; select bank0
 11210  101D  00A7               	movwf	___flmul@b+1
 11211  101E  0022               	movlb	2	; select bank2
 11212  101F  082E               	movf	BQ76920@shuntResistorValue_mOhm^(0+256),w
 11213  1020  0020               	movlb	0	; select bank0
 11214  1021  00A6               	movwf	___flmul@b
 11215  1022  0869               	movf	setOverCurrentDischargeProtection@current_mA+3,w
 11216  1023  00F4               	movwf	___xxtofl@val+3
 11217  1024  0868               	movf	setOverCurrentDischargeProtection@current_mA+2,w
 11218  1025  00F3               	movwf	___xxtofl@val+2
 11219  1026  0867               	movf	setOverCurrentDischargeProtection@current_mA+1,w
 11220  1027  00F2               	movwf	___xxtofl@val+1
 11221  1028  0866               	movf	setOverCurrentDischargeProtection@current_mA,w
 11222  1029  00F1               	movwf	___xxtofl@val
 11223  102A  3001               	movlw	1
 11224  102B  31A6  262B  3190   	fcall	___xxtofl
 11225  102E  0874               	movf	?___xxtofl+3,w
 11226  102F  0020               	movlb	0	; select bank0
 11227  1030  00AD               	movwf	___flmul@a+3
 11228  1031  0873               	movf	?___xxtofl+2,w
 11229  1032  00AC               	movwf	___flmul@a+2
 11230  1033  0872               	movf	?___xxtofl+1,w
 11231  1034  00AB               	movwf	___flmul@a+1
 11232  1035  0871               	movf	?___xxtofl,w
 11233  1036  00AA               	movwf	___flmul@a
 11234  1037  3183  2335  3190   	fcall	___flmul
 11235  103A  0020               	movlb	0	; select bank0
 11236  103B  0829               	movf	?___flmul+3,w
 11237  103C  0021               	movlb	1	; select bank1
 11238  103D  00A7               	movwf	(_setOverCurrentDischargeProtection$2040+3)^(0+128)
 11239  103E  0020               	movlb	0	; select bank0
 11240  103F  0828               	movf	?___flmul+2,w
 11241  1040  0021               	movlb	1	; select bank1
 11242  1041  00A6               	movwf	(_setOverCurrentDischargeProtection$2040+2)^(0+128)
 11243  1042  0020               	movlb	0	; select bank0
 11244  1043  0827               	movf	?___flmul+1,w
 11245  1044  0021               	movlb	1	; select bank1
 11246  1045  00A5               	movwf	(_setOverCurrentDischargeProtection$2040+1)^(0+128)
 11247  1046  0020               	movlb	0	; select bank0
 11248  1047  0826               	movf	?___flmul,w
 11249  1048  0021               	movlb	1	; select bank1
 11250  1049  00A4               	movwf	_setOverCurrentDischargeProtection$2040^(0+128)
 11251                           
 11252                           ;BQ76920.c: 109:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) 
      +                          >= OCD_threshold_setting[i]) {
 11253  104A  3044               	movlw	68
 11254  104B  0020               	movlb	0	; select bank0
 11255  104C  00C3               	movwf	___fldiv@a+3
 11256  104D  307A               	movlw	122
 11257  104E  00C2               	movwf	___fldiv@a+2
 11258  104F  3000               	movlw	0
 11259  1050  00C1               	movwf	___fldiv@a+1
 11260  1051  3000               	movlw	0
 11261  1052  00C0               	movwf	___fldiv@a
 11262  1053  0021               	movlb	1	; select bank1
 11263  1054  0823               	movf	(setOverCurrentDischargeProtection@scaler+3)^(0+128),w
 11264  1055  0020               	movlb	0	; select bank0
 11265  1056  00A9               	movwf	___flmul@b+3
 11266  1057  0021               	movlb	1	; select bank1
 11267  1058  0822               	movf	(setOverCurrentDischargeProtection@scaler+2)^(0+128),w
 11268  1059  0020               	movlb	0	; select bank0
 11269  105A  00A8               	movwf	___flmul@b+2
 11270  105B  0021               	movlb	1	; select bank1
 11271  105C  0821               	movf	(setOverCurrentDischargeProtection@scaler+1)^(0+128),w
 11272  105D  0020               	movlb	0	; select bank0
 11273  105E  00A7               	movwf	___flmul@b+1
 11274  105F  0021               	movlb	1	; select bank1
 11275  1060  0820               	movf	setOverCurrentDischargeProtection@scaler^(0+128),w
 11276  1061  0020               	movlb	0	; select bank0
 11277  1062  00A6               	movwf	___flmul@b
 11278  1063  0021               	movlb	1	; select bank1
 11279  1064  0827               	movf	(_setOverCurrentDischargeProtection$2040+3)^(0+128),w
 11280  1065  0020               	movlb	0	; select bank0
 11281  1066  00AD               	movwf	___flmul@a+3
 11282  1067  0021               	movlb	1	; select bank1
 11283  1068  0826               	movf	(_setOverCurrentDischargeProtection$2040+2)^(0+128),w
 11284  1069  0020               	movlb	0	; select bank0
 11285  106A  00AC               	movwf	___flmul@a+2
 11286  106B  0021               	movlb	1	; select bank1
 11287  106C  0825               	movf	(_setOverCurrentDischargeProtection$2040+1)^(0+128),w
 11288  106D  0020               	movlb	0	; select bank0
 11289  106E  00AB               	movwf	___flmul@a+1
 11290  106F  0021               	movlb	1	; select bank1
 11291  1070  0824               	movf	_setOverCurrentDischargeProtection$2040^(0+128),w
 11292  1071  0020               	movlb	0	; select bank0
 11293  1072  00AA               	movwf	___flmul@a
 11294  1073  3183  2335  3190   	fcall	___flmul
 11295  1076  0020               	movlb	0	; select bank0
 11296  1077  0829               	movf	?___flmul+3,w
 11297  1078  00C7               	movwf	___fldiv@b+3
 11298  1079  0828               	movf	?___flmul+2,w
 11299  107A  00C6               	movwf	___fldiv@b+2
 11300  107B  0827               	movf	?___flmul+1,w
 11301  107C  00C5               	movwf	___fldiv@b+1
 11302  107D  0826               	movf	?___flmul,w
 11303  107E  00C4               	movwf	___fldiv@b
 11304  107F  3194  24DF  3190   	fcall	___fldiv
 11305  1082  0020               	movlb	0	; select bank0
 11306  1083  0843               	movf	?___fldiv+3,w
 11307  1084  00DD               	movwf	___flge@ff1+3
 11308  1085  0842               	movf	?___fldiv+2,w
 11309  1086  00DC               	movwf	___flge@ff1+2
 11310  1087  0841               	movf	?___fldiv+1,w
 11311  1088  00DB               	movwf	___flge@ff1+1
 11312  1089  0840               	movf	?___fldiv,w
 11313  108A  00DA               	movwf	___flge@ff1
 11314  108B  0021               	movlb	1	; select bank1
 11315  108C  0829               	movf	(setOverCurrentDischargeProtection@i+1)^(0+128),w
 11316  108D  0085               	movwf	5
 11317  108E  0828               	movf	setOverCurrentDischargeProtection@i^(0+128),w
 11318  108F  0084               	movwf	4
 11319  1090  3584               	lslf	4,f
 11320  1091  0D85               	rlf	5,f
 11321  1092  3000               	movlw	low (_OCD_threshold_setting| (0+32768))
 11322  1093  0784               	addwf	4,f
 11323  1094  30B0               	movlw	high (_OCD_threshold_setting| (0+32768))
 11324  1095  3D85               	addwfc	5,f
 11325  1096  3F00               	moviw [0]fsr0
 11326  1097  0020               	movlb	0	; select bank0
 11327  1098  00EC               	movwf	??_setOverCurrentDischargeProtection
 11328  1099  3F01               	moviw [1]fsr0
 11329  109A  00ED               	movwf	??_setOverCurrentDischargeProtection+1
 11330  109B  086C               	movf	??_setOverCurrentDischargeProtection,w
 11331  109C  00F1               	movwf	___xxtofl@val
 11332  109D  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 11333  109E  00F2               	movwf	___xxtofl@val+1
 11334  109F  0D89               	rlf	9,f
 11335  10A0  3B89               	subwfb	9,f
 11336  10A1  0989               	comf	9,f
 11337  10A2  00F3               	movwf	___xxtofl@val+2
 11338  10A3  00F4               	movwf	___xxtofl@val+3
 11339  10A4  3001               	movlw	1
 11340  10A5  31A6  262B  3190   	fcall	___xxtofl
 11341  10A8  0874               	movf	?___xxtofl+3,w
 11342  10A9  0020               	movlb	0	; select bank0
 11343  10AA  00E1               	movwf	___flge@ff2+3
 11344  10AB  0873               	movf	?___xxtofl+2,w
 11345  10AC  00E0               	movwf	___flge@ff2+2
 11346  10AD  0872               	movf	?___xxtofl+1,w
 11347  10AE  00DF               	movwf	___flge@ff2+1
 11348  10AF  0871               	movf	?___xxtofl,w
 11349  10B0  00DE               	movwf	___flge@ff2
 11350  10B1  31A4  2434  3190   	fcall	___flge
 11351  10B4  1C03               	btfss	3,0
 11352  10B5  28BE               	goto	l7811
 11353                           
 11354                           ;BQ76920.c: 110:             protect2.bits.OCD_THRESH = i;
 11355  10B6  0022               	movlb	2	; select bank2
 11356  10B7  0857               	movf	BQ76920@protect2^(0+256),w
 11357  10B8  0021               	movlb	1	; select bank1
 11358  10B9  0628               	xorwf	setOverCurrentDischargeProtection@i^(0+128),w
 11359  10BA  39F0               	andlw	-16
 11360  10BB  0628               	xorwf	setOverCurrentDischargeProtection@i^(0+128),w
 11361  10BC  0022               	movlb	2	; select bank2
 11362  10BD  00D7               	movwf	BQ76920@protect2^(0+256)
 11363  10BE                     l7811:	
 11364                           
 11365                           ;BQ76920.c: 112:     }
 11366  10BE  3001               	movlw	1
 11367  10BF  0021               	movlb	1	; select bank1
 11368  10C0  07A8               	addwf	setOverCurrentDischargeProtection@i^(0+128),f
 11369  10C1  3000               	movlw	0
 11370  10C2  3DA9               	addwfc	(setOverCurrentDischargeProtection@i+1)^(0+128),f
 11371  10C3  3000               	movlw	0
 11372  10C4  0229               	subwf	(setOverCurrentDischargeProtection@i+1)^(0+128),w
 11373  10C5  300F               	movlw	15
 11374  10C6  1903               	skipnz
 11375  10C7  0228               	subwf	setOverCurrentDischargeProtection@i^(0+128),w
 11376  10C8  1C03               	skipc
 11377  10C9  2812               	goto	l7805
 11378                           
 11379                           ;BQ76920.c: 114:     protect2.bits.OCD_DELAY = 0;
 11380  10CA  308F               	movlw	-113
 11381  10CB  0022               	movlb	2	; select bank2
 11382  10CC  05D7               	andwf	BQ76920@protect2^(0+256),f
 11383                           
 11384                           ;BQ76920.c: 115:     for (int i = 0; i < (sizeof(OCD_delay_setting) / sizeof((OCD_delay_
      +                          setting)[0])) - 1; i++) {
 11385  10CD  0021               	movlb	1	; select bank1
 11386  10CE  01AA               	clrf	setOverCurrentDischargeProtection@i_964^(0+128)
 11387  10CF  01AB               	clrf	(setOverCurrentDischargeProtection@i_964+1)^(0+128)
 11388  10D0                     l7823:	
 11389                           
 11390                           ;BQ76920.c: 116:         if (delay_ms >= OCD_delay_setting[i]) {
 11391  10D0  082B               	movf	(setOverCurrentDischargeProtection@i_964+1)^(0+128),w
 11392  10D1  0085               	movwf	5
 11393  10D2  082A               	movf	setOverCurrentDischargeProtection@i_964^(0+128),w
 11394  10D3  0084               	movwf	4
 11395  10D4  3584               	lslf	4,f
 11396  10D5  0D85               	rlf	5,f
 11397  10D6  3014               	movlw	low (_OCD_delay_setting| (0+32768))
 11398  10D7  0784               	addwf	4,f
 11399  10D8  30B1               	movlw	high (_OCD_delay_setting| (0+32768))
 11400  10D9  3D85               	addwfc	5,f
 11401  10DA  3F00               	moviw [0]fsr0
 11402  10DB  0020               	movlb	0	; select bank0
 11403  10DC  00EC               	movwf	??_setOverCurrentDischargeProtection
 11404  10DD  3F01               	moviw [1]fsr0
 11405  10DE  00ED               	movwf	??_setOverCurrentDischargeProtection+1
 11406  10DF  086B               	movf	setOverCurrentDischargeProtection@delay_ms+1,w
 11407  10E0  3A80               	xorlw	128
 11408  10E1  00EE               	movwf	??_setOverCurrentDischargeProtection+2
 11409  10E2  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 11410  10E3  3A80               	xorlw	128
 11411  10E4  026E               	subwf	??_setOverCurrentDischargeProtection+2,w
 11412  10E5  1D03               	skipz
 11413  10E6  28E9               	goto	u10995
 11414  10E7  086C               	movf	??_setOverCurrentDischargeProtection,w
 11415  10E8  026A               	subwf	setOverCurrentDischargeProtection@delay_ms,w
 11416  10E9                     u10995:	
 11417  10E9  1C03               	skipc
 11418  10EA  28F8               	goto	l7827
 11419                           
 11420                           ;BQ76920.c: 117:             protect2.bits.OCD_DELAY = i;
 11421  10EB  0021               	movlb	1	; select bank1
 11422  10EC  082A               	movf	setOverCurrentDischargeProtection@i_964^(0+128),w
 11423  10ED  0020               	movlb	0	; select bank0
 11424  10EE  00EC               	movwf	??_setOverCurrentDischargeProtection
 11425  10EF  0EEC               	swapf	??_setOverCurrentDischargeProtection,f
 11426  10F0  0022               	movlb	2	; select bank2
 11427  10F1  0857               	movf	BQ76920@protect2^(0+256),w
 11428  10F2  0020               	movlb	0	; select bank0
 11429  10F3  066C               	xorwf	??_setOverCurrentDischargeProtection,w
 11430  10F4  398F               	andlw	-113
 11431  10F5  066C               	xorwf	??_setOverCurrentDischargeProtection,w
 11432  10F6  0022               	movlb	2	; select bank2
 11433  10F7  00D7               	movwf	BQ76920@protect2^(0+256)
 11434  10F8                     l7827:	
 11435                           
 11436                           ;BQ76920.c: 119:     }
 11437  10F8  3001               	movlw	1
 11438  10F9  0021               	movlb	1	; select bank1
 11439  10FA  07AA               	addwf	setOverCurrentDischargeProtection@i_964^(0+128),f
 11440  10FB  3000               	movlw	0
 11441  10FC  3DAB               	addwfc	(setOverCurrentDischargeProtection@i_964+1)^(0+128),f
 11442  10FD  3000               	movlw	0
 11443  10FE  022B               	subwf	(setOverCurrentDischargeProtection@i_964+1)^(0+128),w
 11444  10FF  3007               	movlw	7
 11445  1100  1903               	skipnz
 11446  1101  022A               	subwf	setOverCurrentDischargeProtection@i_964^(0+128),w
 11447  1102  1C03               	skipc
 11448  1103  28D0               	goto	l7823
 11449                           
 11450                           ;BQ76920.c: 121:     I2C_writeRegister(0x18, 0x07, protect2.regByte);
 11451  1104  3018               	movlw	24
 11452  1105  00F5               	movwf	I2C_writeRegister@slaveAddress
 11453  1106  3000               	movlw	0
 11454  1107  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 11455  1108  3007               	movlw	7
 11456  1109  00F7               	movwf	I2C_writeRegister@regAddress
 11457  110A  3000               	movlw	0
 11458  110B  00F8               	movwf	I2C_writeRegister@regAddress+1
 11459  110C  0022               	movlb	2	; select bank2
 11460  110D  0857               	movf	BQ76920@protect2^(0+256),w
 11461  110E  0020               	movlb	0	; select bank0
 11462  110F  00EC               	movwf	??_setOverCurrentDischargeProtection
 11463  1110  01ED               	clrf	??_setOverCurrentDischargeProtection+1
 11464  1111  086C               	movf	??_setOverCurrentDischargeProtection,w
 11465  1112  00F9               	movwf	I2C_writeRegister@data
 11466  1113  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 11467  1114  00FA               	movwf	I2C_writeRegister@data+1
 11468  1115  31AF  2780         	fcall	_I2C_writeRegister
 11469  1117  0008               	return
 11470  1118                     __end_of_setOverCurrentDischargeProtection:	
 11471                           
 11472                           	psect	text41
 11473  2434                     __ptext41:	
 11474 ;; *************** function ___flge *****************
 11475 ;; Defined at:
 11476 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
 11477 ;; Parameters:    Size  Location     Type
 11478 ;;  ff1             4   58[BANK0 ] void 
 11479 ;;  ff2             4   62[BANK0 ] void 
 11480 ;; Auto vars:     Size  Location     Type
 11481 ;;		None
 11482 ;; Return value:  Size  Location     Type
 11483 ;;		None               void
 11484 ;; Registers used:
 11485 ;;		wreg, status,2, status,0
 11486 ;; Tracked objects:
 11487 ;;		On entry : 0/0
 11488 ;;		On exit  : 0/0
 11489 ;;		Unchanged: 0/0
 11490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11491 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11493 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11494 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11495 ;;Total ram usage:       12 bytes
 11496 ;; Hardware stack levels used:    1
 11497 ;; Hardware stack levels required when called:    1
 11498 ;; This function calls:
 11499 ;;		Nothing
 11500 ;; This function is called by:
 11501 ;;		_setShortCircuitProtection
 11502 ;;		_setOverCurrentDischargeProtection
 11503 ;; This function uses a non-reentrant model
 11504 ;;
 11505                           
 11506                           
 11507                           ;psect for function ___flge
 11508  2434                     ___flge:	
 11509                           
 11510                           ;incstack = 0
 11511                           ; Regs used in ___flge: [wreg+status,2+status,0]
 11512  2434  3000               	movlw	0
 11513  2435  0020               	movlb	0	; select bank0
 11514  2436  055A               	andwf	___flge@ff1,w
 11515  2437  00E2               	movwf	??___flge
 11516  2438  3000               	movlw	0
 11517  2439  055B               	andwf	___flge@ff1+1,w
 11518  243A  00E3               	movwf	??___flge+1
 11519  243B  3080               	movlw	128
 11520  243C  055C               	andwf	___flge@ff1+2,w
 11521  243D  00E4               	movwf	??___flge+2
 11522  243E  307F               	movlw	127
 11523  243F  055D               	andwf	___flge@ff1+3,w
 11524  2440  00E5               	movwf	??___flge+3
 11525  2441  0865               	movf	??___flge+3,w
 11526  2442  0464               	iorwf	??___flge+2,w
 11527  2443  0463               	iorwf	??___flge+1,w
 11528  2444  0462               	iorwf	??___flge,w
 11529  2445  1D03               	skipz
 11530  2446  2C4F               	goto	l1018
 11531  2447  3000               	movlw	0
 11532  2448  00DD               	movwf	___flge@ff1+3
 11533  2449  3000               	movlw	0
 11534  244A  00DC               	movwf	___flge@ff1+2
 11535  244B  3000               	movlw	0
 11536  244C  00DB               	movwf	___flge@ff1+1
 11537  244D  3000               	movlw	0
 11538  244E  00DA               	movwf	___flge@ff1
 11539  244F                     l1018:	
 11540  244F  3000               	movlw	0
 11541  2450  055E               	andwf	___flge@ff2,w
 11542  2451  00E2               	movwf	??___flge
 11543  2452  3000               	movlw	0
 11544  2453  055F               	andwf	___flge@ff2+1,w
 11545  2454  00E3               	movwf	??___flge+1
 11546  2455  3080               	movlw	128
 11547  2456  0560               	andwf	___flge@ff2+2,w
 11548  2457  00E4               	movwf	??___flge+2
 11549  2458  307F               	movlw	127
 11550  2459  0561               	andwf	___flge@ff2+3,w
 11551  245A  00E5               	movwf	??___flge+3
 11552  245B  0865               	movf	??___flge+3,w
 11553  245C  0464               	iorwf	??___flge+2,w
 11554  245D  0463               	iorwf	??___flge+1,w
 11555  245E  0462               	iorwf	??___flge,w
 11556  245F  1D03               	skipz
 11557  2460  2C69               	goto	l7135
 11558  2461  3000               	movlw	0
 11559  2462  00E1               	movwf	___flge@ff2+3
 11560  2463  3000               	movlw	0
 11561  2464  00E0               	movwf	___flge@ff2+2
 11562  2465  3000               	movlw	0
 11563  2466  00DF               	movwf	___flge@ff2+1
 11564  2467  3000               	movlw	0
 11565  2468  00DE               	movwf	___flge@ff2
 11566  2469                     l7135:	
 11567  2469  1FDD               	btfss	___flge@ff1+3,7
 11568  246A  2C83               	goto	l7139
 11569  246B  3000               	movlw	0
 11570  246C  00E2               	movwf	??___flge
 11571  246D  3000               	movlw	0
 11572  246E  00E3               	movwf	??___flge+1
 11573  246F  3000               	movlw	0
 11574  2470  00E4               	movwf	??___flge+2
 11575  2471  3080               	movlw	128
 11576  2472  00E5               	movwf	??___flge+3
 11577  2473  085A               	movf	___flge@ff1,w
 11578  2474  02E2               	subwf	??___flge,f
 11579  2475  085B               	movf	___flge@ff1+1,w
 11580  2476  3BE3               	subwfb	??___flge+1,f
 11581  2477  085C               	movf	___flge@ff1+2,w
 11582  2478  3BE4               	subwfb	??___flge+2,f
 11583  2479  085D               	movf	___flge@ff1+3,w
 11584  247A  3BE5               	subwfb	??___flge+3,f
 11585  247B  0865               	movf	??___flge+3,w
 11586  247C  00DD               	movwf	___flge@ff1+3
 11587  247D  0864               	movf	??___flge+2,w
 11588  247E  00DC               	movwf	___flge@ff1+2
 11589  247F  0863               	movf	??___flge+1,w
 11590  2480  00DB               	movwf	___flge@ff1+1
 11591  2481  0862               	movf	??___flge,w
 11592  2482  00DA               	movwf	___flge@ff1
 11593  2483                     l7139:	
 11594  2483  1FE1               	btfss	___flge@ff2+3,7
 11595  2484  2C9D               	goto	l1021
 11596  2485  3000               	movlw	0
 11597  2486  00E2               	movwf	??___flge
 11598  2487  3000               	movlw	0
 11599  2488  00E3               	movwf	??___flge+1
 11600  2489  3000               	movlw	0
 11601  248A  00E4               	movwf	??___flge+2
 11602  248B  3080               	movlw	128
 11603  248C  00E5               	movwf	??___flge+3
 11604  248D  085E               	movf	___flge@ff2,w
 11605  248E  02E2               	subwf	??___flge,f
 11606  248F  085F               	movf	___flge@ff2+1,w
 11607  2490  3BE3               	subwfb	??___flge+1,f
 11608  2491  0860               	movf	___flge@ff2+2,w
 11609  2492  3BE4               	subwfb	??___flge+2,f
 11610  2493  0861               	movf	___flge@ff2+3,w
 11611  2494  3BE5               	subwfb	??___flge+3,f
 11612  2495  0865               	movf	??___flge+3,w
 11613  2496  00E1               	movwf	___flge@ff2+3
 11614  2497  0864               	movf	??___flge+2,w
 11615  2498  00E0               	movwf	___flge@ff2+2
 11616  2499  0863               	movf	??___flge+1,w
 11617  249A  00DF               	movwf	___flge@ff2+1
 11618  249B  0862               	movf	??___flge,w
 11619  249C  00DE               	movwf	___flge@ff2
 11620  249D                     l1021:	
 11621  249D  3080               	movlw	128
 11622  249E  06DD               	xorwf	___flge@ff1+3,f
 11623  249F  3080               	movlw	128
 11624  24A0  06E1               	xorwf	___flge@ff2+3,f
 11625  24A1  0861               	movf	___flge@ff2+3,w
 11626  24A2  025D               	subwf	___flge@ff1+3,w
 11627  24A3  1D03               	skipz
 11628  24A4  0008               	return
 11629  24A5  0860               	movf	___flge@ff2+2,w
 11630  24A6  025C               	subwf	___flge@ff1+2,w
 11631  24A7  1D03               	skipz
 11632  24A8  0008               	return
 11633  24A9  085F               	movf	___flge@ff2+1,w
 11634  24AA  025B               	subwf	___flge@ff1+1,w
 11635  24AB  1D03               	skipz
 11636  24AC  0008               	return
 11637  24AD  085E               	movf	___flge@ff2,w
 11638  24AE  025A               	subwf	___flge@ff1,w
 11639  24AF  0008               	return
 11640  24B0                     __end_of___flge:	
 11641                           
 11642                           	psect	text42
 11643  1A86                     __ptext42:	
 11644 ;; *************** function _setCellUndervoltageProtection *****************
 11645 ;; Defined at:
 11646 ;;		line 127 in file "BQ76920.c"
 11647 ;; Parameters:    Size  Location     Type
 11648 ;;  voltage_mV      2   18[BANK0 ] int 
 11649 ;;  delay_s         2   20[BANK0 ] int 
 11650 ;; Auto vars:     Size  Location     Type
 11651 ;;  i               2   37[BANK0 ] int 
 11652 ;;  uv_trip         1   36[BANK0 ] unsigned char 
 11653 ;; Return value:  Size  Location     Type
 11654 ;;                  1    wreg      void 
 11655 ;; Registers used:
 11656 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11657 ;; Tracked objects:
 11658 ;;		On entry : 0/0
 11659 ;;		On exit  : 0/0
 11660 ;;		Unchanged: 0/0
 11661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11662 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11663 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11664 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11665 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11666 ;;Total ram usage:       21 bytes
 11667 ;; Hardware stack levels used:    1
 11668 ;; Hardware stack levels required when called:    3
 11669 ;; This function calls:
 11670 ;;		_I2C_writeRegister
 11671 ;;		___aldiv
 11672 ;;		___lmul
 11673 ;;		_readRegister
 11674 ;; This function is called by:
 11675 ;;		_init_AFE
 11676 ;; This function uses a non-reentrant model
 11677 ;;
 11678                           
 11679                           
 11680                           ;psect for function _setCellUndervoltageProtection
 11681  1A86                     _setCellUndervoltageProtection:	
 11682                           
 11683                           ;BQ76920.c: 129:     minCellVoltage = voltage_mV;
 11684                           
 11685                           ;incstack = 0
 11686                           ; Regs used in _setCellUndervoltageProtection: [wreg-fsr0h+status,2+status,0+pclath+csta
      +                          ck]
 11687  1A86  0020               	movlb	0	; select bank0
 11688  1A87  0833               	movf	setCellUndervoltageProtection@voltage_mV+1,w
 11689  1A88  0022               	movlb	2	; select bank2
 11690  1A89  00C9               	movwf	(_minCellVoltage+1)^(0+256)
 11691  1A8A  0020               	movlb	0	; select bank0
 11692  1A8B  0832               	movf	setCellUndervoltageProtection@voltage_mV,w
 11693  1A8C  0022               	movlb	2	; select bank2
 11694  1A8D  00C8               	movwf	_minCellVoltage^(0+256)
 11695                           
 11696                           ;BQ76920.c: 131:     protect3.regByte = readRegister(0x18, 0x08);
 11697  1A8E  3018               	movlw	24
 11698  1A8F  00F5               	movwf	readRegister@slaveAddress
 11699  1A90  3000               	movlw	0
 11700  1A91  00F6               	movwf	readRegister@slaveAddress+1
 11701  1A92  3008               	movlw	8
 11702  1A93  00F7               	movwf	readRegister@regAddress
 11703  1A94  3000               	movlw	0
 11704  1A95  00F8               	movwf	readRegister@regAddress+1
 11705  1A96  31A1  2117  319A   	fcall	_readRegister
 11706  1A99  0875               	movf	?_readRegister,w
 11707  1A9A  0020               	movlb	0	; select bank0
 11708  1A9B  00B6               	movwf	??_setCellUndervoltageProtection
 11709  1A9C  0836               	movf	??_setCellUndervoltageProtection,w
 11710  1A9D  0022               	movlb	2	; select bank2
 11711  1A9E  00D6               	movwf	BQ76920@protect3^(0+256)
 11712                           
 11713                           ;BQ76920.c: 132:     uv_trip = ((((long) voltage_mV - adcOffset) * 1000 / adcGain) >> 4)
      +                           & 0x00FF;
 11714  1A9F  085E               	movf	_adcGain^(0+256),w
 11715  1AA0  0020               	movlb	0	; select bank0
 11716  1AA1  00A4               	movwf	___aldiv@divisor
 11717  1AA2  0022               	movlb	2	; select bank2
 11718  1AA3  085F               	movf	(_adcGain+1)^(0+256),w
 11719  1AA4  0020               	movlb	0	; select bank0
 11720  1AA5  00A5               	movwf	___aldiv@divisor+1
 11721  1AA6  0D89               	rlf	9,f
 11722  1AA7  3B89               	subwfb	9,f
 11723  1AA8  0989               	comf	9,f
 11724  1AA9  00A6               	movwf	___aldiv@divisor+2
 11725  1AAA  00A7               	movwf	___aldiv@divisor+3
 11726  1AAB  0022               	movlb	2	; select bank2
 11727  1AAC  0854               	movf	_adcOffset^(0+256),w
 11728  1AAD  0020               	movlb	0	; select bank0
 11729  1AAE  00B6               	movwf	??_setCellUndervoltageProtection
 11730  1AAF  0022               	movlb	2	; select bank2
 11731  1AB0  0855               	movf	(_adcOffset+1)^(0+256),w
 11732  1AB1  0020               	movlb	0	; select bank0
 11733  1AB2  00B7               	movwf	??_setCellUndervoltageProtection+1
 11734  1AB3  3000               	movlw	0
 11735  1AB4  1BB7               	btfsc	??_setCellUndervoltageProtection+1,7
 11736  1AB5  30FF               	movlw	255
 11737  1AB6  00B8               	movwf	??_setCellUndervoltageProtection+2
 11738  1AB7  00B9               	movwf	??_setCellUndervoltageProtection+3
 11739  1AB8  0832               	movf	setCellUndervoltageProtection@voltage_mV,w
 11740  1AB9  00BA               	movwf	??_setCellUndervoltageProtection+4
 11741  1ABA  0833               	movf	setCellUndervoltageProtection@voltage_mV+1,w
 11742  1ABB  00BB               	movwf	??_setCellUndervoltageProtection+5
 11743  1ABC  3000               	movlw	0
 11744  1ABD  1BBB               	btfsc	??_setCellUndervoltageProtection+5,7
 11745  1ABE  30FF               	movlw	255
 11746  1ABF  00BC               	movwf	??_setCellUndervoltageProtection+6
 11747  1AC0  00BD               	movwf	??_setCellUndervoltageProtection+7
 11748  1AC1  0836               	movf	??_setCellUndervoltageProtection,w
 11749  1AC2  02BA               	subwf	??_setCellUndervoltageProtection+4,f
 11750  1AC3  0837               	movf	??_setCellUndervoltageProtection+1,w
 11751  1AC4  3BBB               	subwfb	??_setCellUndervoltageProtection+5,f
 11752  1AC5  0838               	movf	??_setCellUndervoltageProtection+2,w
 11753  1AC6  3BBC               	subwfb	??_setCellUndervoltageProtection+6,f
 11754  1AC7  0839               	movf	??_setCellUndervoltageProtection+3,w
 11755  1AC8  3BBD               	subwfb	??_setCellUndervoltageProtection+7,f
 11756  1AC9  083D               	movf	??_setCellUndervoltageProtection+7,w
 11757  1ACA  00F4               	movwf	___lmul@multiplier+3
 11758  1ACB  083C               	movf	??_setCellUndervoltageProtection+6,w
 11759  1ACC  00F3               	movwf	___lmul@multiplier+2
 11760  1ACD  083B               	movf	??_setCellUndervoltageProtection+5,w
 11761  1ACE  00F2               	movwf	___lmul@multiplier+1
 11762  1ACF  083A               	movf	??_setCellUndervoltageProtection+4,w
 11763  1AD0  00F1               	movwf	___lmul@multiplier
 11764  1AD1  3000               	movlw	0
 11765  1AD2  00F8               	movwf	___lmul@multiplicand+3
 11766  1AD3  3000               	movlw	0
 11767  1AD4  00F7               	movwf	___lmul@multiplicand+2
 11768  1AD5  3003               	movlw	3
 11769  1AD6  00F6               	movwf	___lmul@multiplicand+1
 11770  1AD7  30E8               	movlw	232
 11771  1AD8  00F5               	movwf	___lmul@multiplicand
 11772  1AD9  31A0  20B3  319A   	fcall	___lmul
 11773  1ADC  0874               	movf	?___lmul+3,w
 11774  1ADD  0020               	movlb	0	; select bank0
 11775  1ADE  00AB               	movwf	___aldiv@dividend+3
 11776  1ADF  0873               	movf	?___lmul+2,w
 11777  1AE0  00AA               	movwf	___aldiv@dividend+2
 11778  1AE1  0872               	movf	?___lmul+1,w
 11779  1AE2  00A9               	movwf	___aldiv@dividend+1
 11780  1AE3  0871               	movf	?___lmul,w
 11781  1AE4  00A8               	movwf	___aldiv@dividend
 11782  1AE5  31A5  25A9  319A   	fcall	___aldiv
 11783  1AE8  0020               	movlb	0	; select bank0
 11784  1AE9  0824               	movf	?___aldiv,w
 11785  1AEA  00BE               	movwf	??_setCellUndervoltageProtection+8
 11786  1AEB  0825               	movf	?___aldiv+1,w
 11787  1AEC  00BF               	movwf	??_setCellUndervoltageProtection+9
 11788  1AED  0826               	movf	?___aldiv+2,w
 11789  1AEE  00C0               	movwf	??_setCellUndervoltageProtection+10
 11790  1AEF  0827               	movf	?___aldiv+3,w
 11791  1AF0  00C1               	movwf	??_setCellUndervoltageProtection+11
 11792  1AF1  3004               	movlw	4
 11793  1AF2  00C2               	movwf	??_setCellUndervoltageProtection+12
 11794  1AF3                     u11015:	
 11795  1AF3  37C1               	asrf	??_setCellUndervoltageProtection+11,f
 11796  1AF4  0CC0               	rrf	??_setCellUndervoltageProtection+10,f
 11797  1AF5  0CBF               	rrf	??_setCellUndervoltageProtection+9,f
 11798  1AF6  0CBE               	rrf	??_setCellUndervoltageProtection+8,f
 11799  1AF7  0BC2               	decfsz	??_setCellUndervoltageProtection+12,f
 11800  1AF8  2AF3               	goto	u11015
 11801  1AF9  083E               	movf	??_setCellUndervoltageProtection+8,w
 11802  1AFA  00C3               	movwf	??_setCellUndervoltageProtection+13
 11803  1AFB  0843               	movf	??_setCellUndervoltageProtection+13,w
 11804  1AFC  00C4               	movwf	setCellUndervoltageProtection@uv_trip
 11805                           
 11806                           ;BQ76920.c: 133:     uv_trip += 1;
 11807  1AFD  3001               	movlw	1
 11808  1AFE  00B6               	movwf	??_setCellUndervoltageProtection
 11809  1AFF  0836               	movf	??_setCellUndervoltageProtection,w
 11810  1B00  07C4               	addwf	setCellUndervoltageProtection@uv_trip,f
 11811                           
 11812                           ;BQ76920.c: 134:     I2C_writeRegister(0x18, 0x0A, uv_trip);
 11813  1B01  3018               	movlw	24
 11814  1B02  00F5               	movwf	I2C_writeRegister@slaveAddress
 11815  1B03  3000               	movlw	0
 11816  1B04  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 11817  1B05  300A               	movlw	10
 11818  1B06  00F7               	movwf	I2C_writeRegister@regAddress
 11819  1B07  3000               	movlw	0
 11820  1B08  00F8               	movwf	I2C_writeRegister@regAddress+1
 11821  1B09  0844               	movf	setCellUndervoltageProtection@uv_trip,w
 11822  1B0A  00B6               	movwf	??_setCellUndervoltageProtection
 11823  1B0B  01B7               	clrf	??_setCellUndervoltageProtection+1
 11824  1B0C  0836               	movf	??_setCellUndervoltageProtection,w
 11825  1B0D  00F9               	movwf	I2C_writeRegister@data
 11826  1B0E  0837               	movf	??_setCellUndervoltageProtection+1,w
 11827  1B0F  00FA               	movwf	I2C_writeRegister@data+1
 11828  1B10  31AF  2780  319A   	fcall	_I2C_writeRegister
 11829                           
 11830                           ;BQ76920.c: 136:     protect3.bits.UV_DELAY = 0;
 11831  1B13  303F               	movlw	-193
 11832  1B14  0022               	movlb	2	; select bank2
 11833  1B15  05D6               	andwf	BQ76920@protect3^(0+256),f
 11834                           
 11835                           ;BQ76920.c: 137:     for (int i = 0; i < (sizeof(UV_delay_setting) / sizeof((UV_delay_se
      +                          tting)[0])) - 1; i++) {
 11836  1B16  0020               	movlb	0	; select bank0
 11837  1B17  01C5               	clrf	setCellUndervoltageProtection@i
 11838  1B18  01C6               	clrf	setCellUndervoltageProtection@i+1
 11839  1B19                     l7853:	
 11840                           
 11841                           ;BQ76920.c: 138:         if (delay_s >= UV_delay_setting[i]) {
 11842  1B19  0846               	movf	setCellUndervoltageProtection@i+1,w
 11843  1B1A  0085               	movwf	5
 11844  1B1B  0845               	movf	setCellUndervoltageProtection@i,w
 11845  1B1C  0084               	movwf	4
 11846  1B1D  3584               	lslf	4,f
 11847  1B1E  0D85               	rlf	5,f
 11848  1B1F  303C               	movlw	low (_UV_delay_setting| (0+32768))
 11849  1B20  0784               	addwf	4,f
 11850  1B21  30B1               	movlw	high (_UV_delay_setting| (0+32768))
 11851  1B22  3D85               	addwfc	5,f
 11852  1B23  3F00               	moviw [0]fsr0
 11853  1B24  00B6               	movwf	??_setCellUndervoltageProtection
 11854  1B25  3F01               	moviw [1]fsr0
 11855  1B26  00B7               	movwf	??_setCellUndervoltageProtection+1
 11856  1B27  0835               	movf	setCellUndervoltageProtection@delay_s+1,w
 11857  1B28  3A80               	xorlw	128
 11858  1B29  00B8               	movwf	??_setCellUndervoltageProtection+2
 11859  1B2A  0837               	movf	??_setCellUndervoltageProtection+1,w
 11860  1B2B  3A80               	xorlw	128
 11861  1B2C  0238               	subwf	??_setCellUndervoltageProtection+2,w
 11862  1B2D  1D03               	skipz
 11863  1B2E  2B31               	goto	u11025
 11864  1B2F  0836               	movf	??_setCellUndervoltageProtection,w
 11865  1B30  0234               	subwf	setCellUndervoltageProtection@delay_s,w
 11866  1B31                     u11025:	
 11867  1B31  1C03               	skipc
 11868  1B32  2B41               	goto	l7857
 11869                           
 11870                           ;BQ76920.c: 139:             protect3.bits.UV_DELAY = i;
 11871  1B33  0020               	movlb	0	; select bank0
 11872  1B34  0845               	movf	setCellUndervoltageProtection@i,w
 11873  1B35  00B6               	movwf	??_setCellUndervoltageProtection
 11874  1B36  0EB6               	swapf	??_setCellUndervoltageProtection,f
 11875  1B37  0DB6               	rlf	??_setCellUndervoltageProtection,f
 11876  1B38  0DB6               	rlf	??_setCellUndervoltageProtection,f
 11877  1B39  0022               	movlb	2	; select bank2
 11878  1B3A  0856               	movf	BQ76920@protect3^(0+256),w
 11879  1B3B  0020               	movlb	0	; select bank0
 11880  1B3C  0636               	xorwf	??_setCellUndervoltageProtection,w
 11881  1B3D  393F               	andlw	-193
 11882  1B3E  0636               	xorwf	??_setCellUndervoltageProtection,w
 11883  1B3F  0022               	movlb	2	; select bank2
 11884  1B40  00D6               	movwf	BQ76920@protect3^(0+256)
 11885  1B41                     l7857:	
 11886                           
 11887                           ;BQ76920.c: 141:     }
 11888  1B41  3001               	movlw	1
 11889  1B42  0020               	movlb	0	; select bank0
 11890  1B43  07C5               	addwf	setCellUndervoltageProtection@i,f
 11891  1B44  3000               	movlw	0
 11892  1B45  3DC6               	addwfc	setCellUndervoltageProtection@i+1,f
 11893  1B46  3000               	movlw	0
 11894  1B47  0246               	subwf	setCellUndervoltageProtection@i+1,w
 11895  1B48  3003               	movlw	3
 11896  1B49  1903               	skipnz
 11897  1B4A  0245               	subwf	setCellUndervoltageProtection@i,w
 11898  1B4B  1C03               	skipc
 11899  1B4C  2B19               	goto	l7853
 11900                           
 11901                           ;BQ76920.c: 142:     I2C_writeRegister(0x18, 0x08, protect3.regByte);
 11902  1B4D  3018               	movlw	24
 11903  1B4E  00F5               	movwf	I2C_writeRegister@slaveAddress
 11904  1B4F  3000               	movlw	0
 11905  1B50  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 11906  1B51  3008               	movlw	8
 11907  1B52  00F7               	movwf	I2C_writeRegister@regAddress
 11908  1B53  3000               	movlw	0
 11909  1B54  00F8               	movwf	I2C_writeRegister@regAddress+1
 11910  1B55  0022               	movlb	2	; select bank2
 11911  1B56  0856               	movf	BQ76920@protect3^(0+256),w
 11912  1B57  0020               	movlb	0	; select bank0
 11913  1B58  00B6               	movwf	??_setCellUndervoltageProtection
 11914  1B59  01B7               	clrf	??_setCellUndervoltageProtection+1
 11915  1B5A  0836               	movf	??_setCellUndervoltageProtection,w
 11916  1B5B  00F9               	movwf	I2C_writeRegister@data
 11917  1B5C  0837               	movf	??_setCellUndervoltageProtection+1,w
 11918  1B5D  00FA               	movwf	I2C_writeRegister@data+1
 11919  1B5E  31AF  2780         	fcall	_I2C_writeRegister
 11920  1B60  0008               	return
 11921  1B61                     __end_of_setCellUndervoltageProtection:	
 11922                           
 11923                           	psect	text43
 11924  19B2                     __ptext43:	
 11925 ;; *************** function _setCellOvervoltageProtection *****************
 11926 ;; Defined at:
 11927 ;;		line 148 in file "BQ76920.c"
 11928 ;; Parameters:    Size  Location     Type
 11929 ;;  voltage_mV      2   18[BANK0 ] int 
 11930 ;;  delay_s         2   20[BANK0 ] int 
 11931 ;; Auto vars:     Size  Location     Type
 11932 ;;  i               2   37[BANK0 ] int 
 11933 ;;  ov_trip         1   36[BANK0 ] unsigned char 
 11934 ;; Return value:  Size  Location     Type
 11935 ;;                  1    wreg      void 
 11936 ;; Registers used:
 11937 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11938 ;; Tracked objects:
 11939 ;;		On entry : 0/0
 11940 ;;		On exit  : 0/0
 11941 ;;		Unchanged: 0/0
 11942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11943 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11944 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11945 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11946 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11947 ;;Total ram usage:       21 bytes
 11948 ;; Hardware stack levels used:    1
 11949 ;; Hardware stack levels required when called:    3
 11950 ;; This function calls:
 11951 ;;		_I2C_writeRegister
 11952 ;;		___aldiv
 11953 ;;		___lmul
 11954 ;;		_readRegister
 11955 ;; This function is called by:
 11956 ;;		_init_AFE
 11957 ;; This function uses a non-reentrant model
 11958 ;;
 11959                           
 11960                           
 11961                           ;psect for function _setCellOvervoltageProtection
 11962  19B2                     _setCellOvervoltageProtection:	
 11963                           
 11964                           ;BQ76920.c: 150:     maxCellVoltage = voltage_mV;
 11965                           
 11966                           ;incstack = 0
 11967                           ; Regs used in _setCellOvervoltageProtection: [wreg-fsr0h+status,2+status,0+pclath+cstac
      +                          k]
 11968  19B2  0020               	movlb	0	; select bank0
 11969  19B3  0833               	movf	setCellOvervoltageProtection@voltage_mV+1,w
 11970  19B4  0022               	movlb	2	; select bank2
 11971  19B5  00CB               	movwf	(_maxCellVoltage+1)^(0+256)
 11972  19B6  0020               	movlb	0	; select bank0
 11973  19B7  0832               	movf	setCellOvervoltageProtection@voltage_mV,w
 11974  19B8  0022               	movlb	2	; select bank2
 11975  19B9  00CA               	movwf	_maxCellVoltage^(0+256)
 11976                           
 11977                           ;BQ76920.c: 151:     protect3.regByte = readRegister(0x18, 0x08);
 11978  19BA  3018               	movlw	24
 11979  19BB  00F5               	movwf	readRegister@slaveAddress
 11980  19BC  3000               	movlw	0
 11981  19BD  00F6               	movwf	readRegister@slaveAddress+1
 11982  19BE  3008               	movlw	8
 11983  19BF  00F7               	movwf	readRegister@regAddress
 11984  19C0  3000               	movlw	0
 11985  19C1  00F8               	movwf	readRegister@regAddress+1
 11986  19C2  31A1  2117  3199   	fcall	_readRegister
 11987  19C5  0875               	movf	?_readRegister,w
 11988  19C6  0020               	movlb	0	; select bank0
 11989  19C7  00B6               	movwf	??_setCellOvervoltageProtection
 11990  19C8  0836               	movf	??_setCellOvervoltageProtection,w
 11991  19C9  0022               	movlb	2	; select bank2
 11992  19CA  00D6               	movwf	BQ76920@protect3^(0+256)
 11993                           
 11994                           ;BQ76920.c: 152:     ov_trip = ((((long) voltage_mV - adcOffset) * 1000 / adcGain) >> 4)
      +                           & 0x00FF;
 11995  19CB  085E               	movf	_adcGain^(0+256),w
 11996  19CC  0020               	movlb	0	; select bank0
 11997  19CD  00A4               	movwf	___aldiv@divisor
 11998  19CE  0022               	movlb	2	; select bank2
 11999  19CF  085F               	movf	(_adcGain+1)^(0+256),w
 12000  19D0  0020               	movlb	0	; select bank0
 12001  19D1  00A5               	movwf	___aldiv@divisor+1
 12002  19D2  0D89               	rlf	9,f
 12003  19D3  3B89               	subwfb	9,f
 12004  19D4  0989               	comf	9,f
 12005  19D5  00A6               	movwf	___aldiv@divisor+2
 12006  19D6  00A7               	movwf	___aldiv@divisor+3
 12007  19D7  0022               	movlb	2	; select bank2
 12008  19D8  0854               	movf	_adcOffset^(0+256),w
 12009  19D9  0020               	movlb	0	; select bank0
 12010  19DA  00B6               	movwf	??_setCellOvervoltageProtection
 12011  19DB  0022               	movlb	2	; select bank2
 12012  19DC  0855               	movf	(_adcOffset+1)^(0+256),w
 12013  19DD  0020               	movlb	0	; select bank0
 12014  19DE  00B7               	movwf	??_setCellOvervoltageProtection+1
 12015  19DF  3000               	movlw	0
 12016  19E0  1BB7               	btfsc	??_setCellOvervoltageProtection+1,7
 12017  19E1  30FF               	movlw	255
 12018  19E2  00B8               	movwf	??_setCellOvervoltageProtection+2
 12019  19E3  00B9               	movwf	??_setCellOvervoltageProtection+3
 12020  19E4  0832               	movf	setCellOvervoltageProtection@voltage_mV,w
 12021  19E5  00BA               	movwf	??_setCellOvervoltageProtection+4
 12022  19E6  0833               	movf	setCellOvervoltageProtection@voltage_mV+1,w
 12023  19E7  00BB               	movwf	??_setCellOvervoltageProtection+5
 12024  19E8  3000               	movlw	0
 12025  19E9  1BBB               	btfsc	??_setCellOvervoltageProtection+5,7
 12026  19EA  30FF               	movlw	255
 12027  19EB  00BC               	movwf	??_setCellOvervoltageProtection+6
 12028  19EC  00BD               	movwf	??_setCellOvervoltageProtection+7
 12029  19ED  0836               	movf	??_setCellOvervoltageProtection,w
 12030  19EE  02BA               	subwf	??_setCellOvervoltageProtection+4,f
 12031  19EF  0837               	movf	??_setCellOvervoltageProtection+1,w
 12032  19F0  3BBB               	subwfb	??_setCellOvervoltageProtection+5,f
 12033  19F1  0838               	movf	??_setCellOvervoltageProtection+2,w
 12034  19F2  3BBC               	subwfb	??_setCellOvervoltageProtection+6,f
 12035  19F3  0839               	movf	??_setCellOvervoltageProtection+3,w
 12036  19F4  3BBD               	subwfb	??_setCellOvervoltageProtection+7,f
 12037  19F5  083D               	movf	??_setCellOvervoltageProtection+7,w
 12038  19F6  00F4               	movwf	___lmul@multiplier+3
 12039  19F7  083C               	movf	??_setCellOvervoltageProtection+6,w
 12040  19F8  00F3               	movwf	___lmul@multiplier+2
 12041  19F9  083B               	movf	??_setCellOvervoltageProtection+5,w
 12042  19FA  00F2               	movwf	___lmul@multiplier+1
 12043  19FB  083A               	movf	??_setCellOvervoltageProtection+4,w
 12044  19FC  00F1               	movwf	___lmul@multiplier
 12045  19FD  3000               	movlw	0
 12046  19FE  00F8               	movwf	___lmul@multiplicand+3
 12047  19FF  3000               	movlw	0
 12048  1A00  00F7               	movwf	___lmul@multiplicand+2
 12049  1A01  3003               	movlw	3
 12050  1A02  00F6               	movwf	___lmul@multiplicand+1
 12051  1A03  30E8               	movlw	232
 12052  1A04  00F5               	movwf	___lmul@multiplicand
 12053  1A05  31A0  20B3  3199   	fcall	___lmul
 12054  1A08  0874               	movf	?___lmul+3,w
 12055  1A09  0020               	movlb	0	; select bank0
 12056  1A0A  00AB               	movwf	___aldiv@dividend+3
 12057  1A0B  0873               	movf	?___lmul+2,w
 12058  1A0C  00AA               	movwf	___aldiv@dividend+2
 12059  1A0D  0872               	movf	?___lmul+1,w
 12060  1A0E  00A9               	movwf	___aldiv@dividend+1
 12061  1A0F  0871               	movf	?___lmul,w
 12062  1A10  00A8               	movwf	___aldiv@dividend
 12063  1A11  31A5  25A9  3199   	fcall	___aldiv
 12064  1A14  0020               	movlb	0	; select bank0
 12065  1A15  0824               	movf	?___aldiv,w
 12066  1A16  00BE               	movwf	??_setCellOvervoltageProtection+8
 12067  1A17  0825               	movf	?___aldiv+1,w
 12068  1A18  00BF               	movwf	??_setCellOvervoltageProtection+9
 12069  1A19  0826               	movf	?___aldiv+2,w
 12070  1A1A  00C0               	movwf	??_setCellOvervoltageProtection+10
 12071  1A1B  0827               	movf	?___aldiv+3,w
 12072  1A1C  00C1               	movwf	??_setCellOvervoltageProtection+11
 12073  1A1D  3004               	movlw	4
 12074  1A1E  00C2               	movwf	??_setCellOvervoltageProtection+12
 12075  1A1F                     u11045:	
 12076  1A1F  37C1               	asrf	??_setCellOvervoltageProtection+11,f
 12077  1A20  0CC0               	rrf	??_setCellOvervoltageProtection+10,f
 12078  1A21  0CBF               	rrf	??_setCellOvervoltageProtection+9,f
 12079  1A22  0CBE               	rrf	??_setCellOvervoltageProtection+8,f
 12080  1A23  0BC2               	decfsz	??_setCellOvervoltageProtection+12,f
 12081  1A24  2A1F               	goto	u11045
 12082  1A25  083E               	movf	??_setCellOvervoltageProtection+8,w
 12083  1A26  00C3               	movwf	??_setCellOvervoltageProtection+13
 12084  1A27  0843               	movf	??_setCellOvervoltageProtection+13,w
 12085  1A28  00C4               	movwf	setCellOvervoltageProtection@ov_trip
 12086                           
 12087                           ;BQ76920.c: 153:     I2C_writeRegister(0x18, 0x09, ov_trip);
 12088  1A29  3018               	movlw	24
 12089  1A2A  00F5               	movwf	I2C_writeRegister@slaveAddress
 12090  1A2B  3000               	movlw	0
 12091  1A2C  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12092  1A2D  3009               	movlw	9
 12093  1A2E  00F7               	movwf	I2C_writeRegister@regAddress
 12094  1A2F  3000               	movlw	0
 12095  1A30  00F8               	movwf	I2C_writeRegister@regAddress+1
 12096  1A31  0844               	movf	setCellOvervoltageProtection@ov_trip,w
 12097  1A32  00B6               	movwf	??_setCellOvervoltageProtection
 12098  1A33  01B7               	clrf	??_setCellOvervoltageProtection+1
 12099  1A34  0836               	movf	??_setCellOvervoltageProtection,w
 12100  1A35  00F9               	movwf	I2C_writeRegister@data
 12101  1A36  0837               	movf	??_setCellOvervoltageProtection+1,w
 12102  1A37  00FA               	movwf	I2C_writeRegister@data+1
 12103  1A38  31AF  2780  3199   	fcall	_I2C_writeRegister
 12104                           
 12105                           ;BQ76920.c: 155:     for (int i = 0; i < (sizeof(OV_delay_setting) / sizeof((OV_delay_se
      +                          tting)[0])) - 1; i++) {
 12106  1A3B  0020               	movlb	0	; select bank0
 12107  1A3C  01C5               	clrf	setCellOvervoltageProtection@i
 12108  1A3D  01C6               	clrf	setCellOvervoltageProtection@i+1
 12109  1A3E                     l7879:	
 12110                           
 12111                           ;BQ76920.c: 156:         if (delay_s >= OV_delay_setting[i]) {
 12112  1A3E  0846               	movf	setCellOvervoltageProtection@i+1,w
 12113  1A3F  0085               	movwf	5
 12114  1A40  0845               	movf	setCellOvervoltageProtection@i,w
 12115  1A41  0084               	movwf	4
 12116  1A42  3584               	lslf	4,f
 12117  1A43  0D85               	rlf	5,f
 12118  1A44  3034               	movlw	low (_OV_delay_setting| (0+32768))
 12119  1A45  0784               	addwf	4,f
 12120  1A46  30B1               	movlw	high (_OV_delay_setting| (0+32768))
 12121  1A47  3D85               	addwfc	5,f
 12122  1A48  3F00               	moviw [0]fsr0
 12123  1A49  00B6               	movwf	??_setCellOvervoltageProtection
 12124  1A4A  3F01               	moviw [1]fsr0
 12125  1A4B  00B7               	movwf	??_setCellOvervoltageProtection+1
 12126  1A4C  0835               	movf	setCellOvervoltageProtection@delay_s+1,w
 12127  1A4D  3A80               	xorlw	128
 12128  1A4E  00B8               	movwf	??_setCellOvervoltageProtection+2
 12129  1A4F  0837               	movf	??_setCellOvervoltageProtection+1,w
 12130  1A50  3A80               	xorlw	128
 12131  1A51  0238               	subwf	??_setCellOvervoltageProtection+2,w
 12132  1A52  1D03               	skipz
 12133  1A53  2A56               	goto	u11055
 12134  1A54  0836               	movf	??_setCellOvervoltageProtection,w
 12135  1A55  0234               	subwf	setCellOvervoltageProtection@delay_s,w
 12136  1A56                     u11055:	
 12137  1A56  1C03               	skipc
 12138  1A57  2A66               	goto	l7883
 12139                           
 12140                           ;BQ76920.c: 157:             protect3.bits.UV_DELAY = i;
 12141  1A58  0020               	movlb	0	; select bank0
 12142  1A59  0845               	movf	setCellOvervoltageProtection@i,w
 12143  1A5A  00B6               	movwf	??_setCellOvervoltageProtection
 12144  1A5B  0EB6               	swapf	??_setCellOvervoltageProtection,f
 12145  1A5C  0DB6               	rlf	??_setCellOvervoltageProtection,f
 12146  1A5D  0DB6               	rlf	??_setCellOvervoltageProtection,f
 12147  1A5E  0022               	movlb	2	; select bank2
 12148  1A5F  0856               	movf	BQ76920@protect3^(0+256),w
 12149  1A60  0020               	movlb	0	; select bank0
 12150  1A61  0636               	xorwf	??_setCellOvervoltageProtection,w
 12151  1A62  393F               	andlw	-193
 12152  1A63  0636               	xorwf	??_setCellOvervoltageProtection,w
 12153  1A64  0022               	movlb	2	; select bank2
 12154  1A65  00D6               	movwf	BQ76920@protect3^(0+256)
 12155  1A66                     l7883:	
 12156                           
 12157                           ;BQ76920.c: 159:     }
 12158  1A66  3001               	movlw	1
 12159  1A67  0020               	movlb	0	; select bank0
 12160  1A68  07C5               	addwf	setCellOvervoltageProtection@i,f
 12161  1A69  3000               	movlw	0
 12162  1A6A  3DC6               	addwfc	setCellOvervoltageProtection@i+1,f
 12163  1A6B  3000               	movlw	0
 12164  1A6C  0246               	subwf	setCellOvervoltageProtection@i+1,w
 12165  1A6D  3003               	movlw	3
 12166  1A6E  1903               	skipnz
 12167  1A6F  0245               	subwf	setCellOvervoltageProtection@i,w
 12168  1A70  1C03               	skipc
 12169  1A71  2A3E               	goto	l7879
 12170                           
 12171                           ;BQ76920.c: 160:     I2C_writeRegister(0x18,0x08, protect3.regByte);
 12172  1A72  3018               	movlw	24
 12173  1A73  00F5               	movwf	I2C_writeRegister@slaveAddress
 12174  1A74  3000               	movlw	0
 12175  1A75  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12176  1A76  3008               	movlw	8
 12177  1A77  00F7               	movwf	I2C_writeRegister@regAddress
 12178  1A78  3000               	movlw	0
 12179  1A79  00F8               	movwf	I2C_writeRegister@regAddress+1
 12180  1A7A  0022               	movlb	2	; select bank2
 12181  1A7B  0856               	movf	BQ76920@protect3^(0+256),w
 12182  1A7C  0020               	movlb	0	; select bank0
 12183  1A7D  00B6               	movwf	??_setCellOvervoltageProtection
 12184  1A7E  01B7               	clrf	??_setCellOvervoltageProtection+1
 12185  1A7F  0836               	movf	??_setCellOvervoltageProtection,w
 12186  1A80  00F9               	movwf	I2C_writeRegister@data
 12187  1A81  0837               	movf	??_setCellOvervoltageProtection+1,w
 12188  1A82  00FA               	movwf	I2C_writeRegister@data+1
 12189  1A83  31AF  2780         	fcall	_I2C_writeRegister
 12190  1A85  0008               	return
 12191  1A86                     __end_of_setCellOvervoltageProtection:	
 12192                           
 12193                           	psect	text44
 12194  0743                     __ptext44:	
 12195 ;; *************** function _beginAFEcommunication *****************
 12196 ;; Defined at:
 12197 ;;		line 23 in file "BQ76920.c"
 12198 ;; Parameters:    Size  Location     Type
 12199 ;;		None
 12200 ;; Auto vars:     Size  Location     Type
 12201 ;;  i               2   13[BANK0 ] int 
 12202 ;;  commSuccess     2   11[BANK0 ] int 
 12203 ;; Return value:  Size  Location     Type
 12204 ;;                  2    0[BANK0 ] int 
 12205 ;; Registers used:
 12206 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12207 ;; Tracked objects:
 12208 ;;		On entry : 0/0
 12209 ;;		On exit  : 0/0
 12210 ;;		Unchanged: 0/0
 12211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12212 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12213 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12214 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12215 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12216 ;;Total ram usage:       15 bytes
 12217 ;; Hardware stack levels used:    1
 12218 ;; Hardware stack levels required when called:    3
 12219 ;; This function calls:
 12220 ;;		_I2C_writeRegister
 12221 ;;		_readRegister
 12222 ;; This function is called by:
 12223 ;;		_statemachine
 12224 ;; This function uses a non-reentrant model
 12225 ;;
 12226                           
 12227                           
 12228                           ;psect for function _beginAFEcommunication
 12229  0743                     _beginAFEcommunication:	
 12230                           
 12231                           ;BQ76920.c: 25:     int commSuccess = 0;
 12232                           
 12233                           ;incstack = 0
 12234                           ; Regs used in _beginAFEcommunication: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 12235  0743  0020               	movlb	0	; select bank0
 12236  0744  01AB               	clrf	beginAFEcommunication@commSuccess
 12237  0745  01AC               	clrf	beginAFEcommunication@commSuccess+1
 12238                           
 12239                           ;BQ76920.c: 28:     for (int i = 0; i < 4; i++) {
 12240  0746  01AD               	clrf	beginAFEcommunication@i
 12241  0747  01AE               	clrf	beginAFEcommunication@i+1
 12242  0748                     l7955:	
 12243                           
 12244                           ;BQ76920.c: 29:         cellVoltages[i] = 0;
 12245  0748  0020               	movlb	0	; select bank0
 12246  0749  352D               	lslf	beginAFEcommunication@i,w
 12247  074A  3E20               	addlw	(low (_cellVoltages| (0+256)))& (0+255)
 12248  074B  0086               	movwf	6
 12249  074C  3001               	movlw	1	; select bank2/3
 12250  074D  0087               	movwf	7
 12251  074E  3000               	movlw	0
 12252  074F  3FC0               	movwi [0]fsr1
 12253  0750  3FC1               	movwi [1]fsr1
 12254                           
 12255                           ;BQ76920.c: 30:     }
 12256  0751  3001               	movlw	1
 12257  0752  07AD               	addwf	beginAFEcommunication@i,f
 12258  0753  3000               	movlw	0
 12259  0754  3DAE               	addwfc	beginAFEcommunication@i+1,f
 12260  0755  082E               	movf	beginAFEcommunication@i+1,w
 12261  0756  3A80               	xorlw	128
 12262  0757  00A2               	movwf	??_beginAFEcommunication
 12263  0758  3080               	movlw	128
 12264  0759  0222               	subwf	??_beginAFEcommunication,w
 12265  075A  1D03               	skipz
 12266  075B  2F5E               	goto	u11145
 12267  075C  3004               	movlw	4
 12268  075D  022D               	subwf	beginAFEcommunication@i,w
 12269  075E                     u11145:	
 12270  075E  1C03               	skipc
 12271  075F  2F48               	goto	l7955
 12272                           
 12273                           ;BQ76920.c: 33:     I2C_writeRegister(0x18, 0x0B, 0x19);
 12274  0760  3018               	movlw	24
 12275  0761  00F5               	movwf	I2C_writeRegister@slaveAddress
 12276  0762  3000               	movlw	0
 12277  0763  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12278  0764  300B               	movlw	11
 12279  0765  00F7               	movwf	I2C_writeRegister@regAddress
 12280  0766  3000               	movlw	0
 12281  0767  00F8               	movwf	I2C_writeRegister@regAddress+1
 12282  0768  3019               	movlw	25
 12283  0769  00F9               	movwf	I2C_writeRegister@data
 12284  076A  3000               	movlw	0
 12285  076B  00FA               	movwf	I2C_writeRegister@data+1
 12286  076C  31AF  2780  3187   	fcall	_I2C_writeRegister
 12287                           
 12288                           ;BQ76920.c: 35:     if (readRegister(0x18, 0x0B) == 0x19) {
 12289  076F  3018               	movlw	24
 12290  0770  00F5               	movwf	readRegister@slaveAddress
 12291  0771  3000               	movlw	0
 12292  0772  00F6               	movwf	readRegister@slaveAddress+1
 12293  0773  300B               	movlw	11
 12294  0774  00F7               	movwf	readRegister@regAddress
 12295  0775  3000               	movlw	0
 12296  0776  00F8               	movwf	readRegister@regAddress+1
 12297  0777  31A1  2117  3187   	fcall	_readRegister
 12298  077A  3019               	movlw	25
 12299  077B  0675               	xorwf	?_readRegister,w
 12300  077C  0476               	iorwf	?_readRegister+1,w
 12301  077D  1D03               	btfss	3,2
 12302  077E  2FF1               	goto	l434
 12303                           
 12304                           ;BQ76920.c: 36:         commSuccess = 1;
 12305  077F  3001               	movlw	1
 12306  0780  0020               	movlb	0	; select bank0
 12307  0781  00AB               	movwf	beginAFEcommunication@commSuccess
 12308  0782  3000               	movlw	0
 12309  0783  00AC               	movwf	beginAFEcommunication@commSuccess+1
 12310                           
 12311                           ;BQ76920.c: 40:         I2C_writeRegister(0x18, 0x04, 0x18);
 12312  0784  3018               	movlw	24
 12313  0785  00F5               	movwf	I2C_writeRegister@slaveAddress
 12314  0786  3000               	movlw	0
 12315  0787  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12316  0788  3004               	movlw	4
 12317  0789  00F7               	movwf	I2C_writeRegister@regAddress
 12318  078A  3000               	movlw	0
 12319  078B  00F8               	movwf	I2C_writeRegister@regAddress+1
 12320  078C  3018               	movlw	24
 12321  078D  00F9               	movwf	I2C_writeRegister@data
 12322  078E  3000               	movlw	0
 12323  078F  00FA               	movwf	I2C_writeRegister@data+1
 12324  0790  31AF  2780  3187   	fcall	_I2C_writeRegister
 12325                           
 12326                           ;BQ76920.c: 41:         I2C_writeRegister(0x18, 0x05, 0x40);
 12327  0793  3018               	movlw	24
 12328  0794  00F5               	movwf	I2C_writeRegister@slaveAddress
 12329  0795  3000               	movlw	0
 12330  0796  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12331  0797  3005               	movlw	5
 12332  0798  00F7               	movwf	I2C_writeRegister@regAddress
 12333  0799  3000               	movlw	0
 12334  079A  00F8               	movwf	I2C_writeRegister@regAddress+1
 12335  079B  3040               	movlw	64
 12336  079C  00F9               	movwf	I2C_writeRegister@data
 12337  079D  3000               	movlw	0
 12338  079E  00FA               	movwf	I2C_writeRegister@data+1
 12339  079F  31AF  2780  3187   	fcall	_I2C_writeRegister
 12340                           
 12341                           ;BQ76920.c: 44:         adcOffset = (signed int) readRegister(0x18, 0x51);
 12342  07A2  3018               	movlw	24
 12343  07A3  00F5               	movwf	readRegister@slaveAddress
 12344  07A4  3000               	movlw	0
 12345  07A5  00F6               	movwf	readRegister@slaveAddress+1
 12346  07A6  3051               	movlw	81
 12347  07A7  00F7               	movwf	readRegister@regAddress
 12348  07A8  3000               	movlw	0
 12349  07A9  00F8               	movwf	readRegister@regAddress+1
 12350  07AA  31A1  2117  3187   	fcall	_readRegister
 12351  07AD  0876               	movf	?_readRegister+1,w
 12352  07AE  0022               	movlb	2	; select bank2
 12353  07AF  00D5               	movwf	(_adcOffset+1)^(0+256)
 12354  07B0  0875               	movf	?_readRegister,w
 12355  07B1  00D4               	movwf	_adcOffset^(0+256)
 12356                           
 12357                           ;BQ76920.c: 45:         adcGain = 365 + (((readRegister(0x18, 0x50) & 0x0C) << 1) |
 12358  07B2  3018               	movlw	24
 12359  07B3  00F5               	movwf	readRegister@slaveAddress
 12360  07B4  3000               	movlw	0
 12361  07B5  00F6               	movwf	readRegister@slaveAddress+1
 12362  07B6  3059               	movlw	89
 12363  07B7  00F7               	movwf	readRegister@regAddress
 12364  07B8  3000               	movlw	0
 12365  07B9  00F8               	movwf	readRegister@regAddress+1
 12366  07BA  31A1  2117  3187   	fcall	_readRegister
 12367  07BD  0875               	movf	?_readRegister,w
 12368  07BE  0020               	movlb	0	; select bank0
 12369  07BF  00A2               	movwf	??_beginAFEcommunication
 12370  07C0  0876               	movf	?_readRegister+1,w
 12371  07C1  00A3               	movwf	??_beginAFEcommunication+1
 12372  07C2  3005               	movlw	5
 12373  07C3  00A4               	movwf	??_beginAFEcommunication+2
 12374  07C4                     u11165:	
 12375  07C4  0D23               	rlf	??_beginAFEcommunication+1,w
 12376  07C5  0CA3               	rrf	??_beginAFEcommunication+1,f
 12377  07C6  0CA2               	rrf	??_beginAFEcommunication,f
 12378  07C7  0BA4               	decfsz	??_beginAFEcommunication+2,f
 12379  07C8  2FC4               	goto	u11165
 12380  07C9  3007               	movlw	7
 12381  07CA  0522               	andwf	??_beginAFEcommunication,w
 12382  07CB  00A5               	movwf	??_beginAFEcommunication+3
 12383  07CC  3000               	movlw	0
 12384  07CD  0523               	andwf	??_beginAFEcommunication+1,w
 12385  07CE  00A6               	movwf	??_beginAFEcommunication+4
 12386  07CF  3018               	movlw	24
 12387  07D0  00F5               	movwf	readRegister@slaveAddress
 12388  07D1  3000               	movlw	0
 12389  07D2  00F6               	movwf	readRegister@slaveAddress+1
 12390  07D3  3050               	movlw	80
 12391  07D4  00F7               	movwf	readRegister@regAddress
 12392  07D5  3000               	movlw	0
 12393  07D6  00F8               	movwf	readRegister@regAddress+1
 12394  07D7  31A1  2117         	fcall	_readRegister
 12395  07D9  300C               	movlw	12
 12396  07DA  0575               	andwf	?_readRegister,w
 12397  07DB  0020               	movlb	0	; select bank0
 12398  07DC  00A7               	movwf	??_beginAFEcommunication+5
 12399  07DD  3000               	movlw	0
 12400  07DE  0576               	andwf	?_readRegister+1,w
 12401  07DF  00A8               	movwf	??_beginAFEcommunication+6
 12402  07E0  35A7               	lslf	??_beginAFEcommunication+5,f
 12403  07E1  0DA8               	rlf	??_beginAFEcommunication+6,f
 12404  07E2  0825               	movf	??_beginAFEcommunication+3,w
 12405  07E3  0427               	iorwf	??_beginAFEcommunication+5,w
 12406  07E4  00A9               	movwf	??_beginAFEcommunication+7
 12407  07E5  0826               	movf	??_beginAFEcommunication+4,w
 12408  07E6  0428               	iorwf	??_beginAFEcommunication+6,w
 12409  07E7  00AA               	movwf	??_beginAFEcommunication+8
 12410  07E8  0829               	movf	??_beginAFEcommunication+7,w
 12411  07E9  3E6D               	addlw	109
 12412  07EA  0022               	movlb	2	; select bank2
 12413  07EB  00DE               	movwf	_adcGain^(0+256)
 12414  07EC  3001               	movlw	1
 12415  07ED  0020               	movlb	0	; select bank0
 12416  07EE  3D2A               	addwfc	??_beginAFEcommunication+8,w
 12417  07EF  0022               	movlb	2	; select bank2
 12418  07F0  00DF               	movwf	(_adcGain+1)^(0+256)
 12419  07F1                     l434:	
 12420                           ;BQ76920.c: 48:     }
 12421                           
 12422                           
 12423                           ;BQ76920.c: 49:     return commSuccess;
 12424  07F1  0020               	movlb	0	; select bank0
 12425  07F2  082C               	movf	beginAFEcommunication@commSuccess+1,w
 12426  07F3  00A1               	movwf	?_beginAFEcommunication+1
 12427  07F4  082B               	movf	beginAFEcommunication@commSuccess,w
 12428  07F5  00A0               	movwf	?_beginAFEcommunication
 12429  07F6  0008               	return
 12430  07F7                     __end_of_beginAFEcommunication:	
 12431                           
 12432                           	psect	text45
 12433  2FDE                     __ptext45:	
 12434 ;; *************** function _RGB_AWAIT_AFE_CONN *****************
 12435 ;; Defined at:
 12436 ;;		line 43 in file "RGB.c"
 12437 ;; Parameters:    Size  Location     Type
 12438 ;;		None
 12439 ;; Auto vars:     Size  Location     Type
 12440 ;;		None
 12441 ;; Return value:  Size  Location     Type
 12442 ;;                  1    wreg      void 
 12443 ;; Registers used:
 12444 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12445 ;; Tracked objects:
 12446 ;;		On entry : 0/0
 12447 ;;		On exit  : 0/0
 12448 ;;		Unchanged: 0/0
 12449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12452 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12453 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12454 ;;Total ram usage:        1 bytes
 12455 ;; Hardware stack levels used:    1
 12456 ;; Hardware stack levels required when called:    2
 12457 ;; This function calls:
 12458 ;;		_RGB_color
 12459 ;; This function is called by:
 12460 ;;		_statemachine
 12461 ;; This function uses a non-reentrant model
 12462 ;;
 12463                           
 12464                           
 12465                           ;psect for function _RGB_AWAIT_AFE_CONN
 12466  2FDE                     _RGB_AWAIT_AFE_CONN:	
 12467                           
 12468                           ;RGB.c: 45:     if (toggleColor) {
 12469                           
 12470                           ;incstack = 0
 12471                           ; Regs used in _RGB_AWAIT_AFE_CONN: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12472  2FDE  087C               	movf	_toggleColor,w
 12473  2FDF  1903               	btfsc	3,2
 12474  2FE0  2FF0               	goto	l7945
 12475                           
 12476                           ;RGB.c: 46:         toggleColor = !toggleColor;
 12477  2FE1  087C               	movf	_toggleColor,w
 12478  2FE2  1D03               	btfss	3,2
 12479  2FE3  2FE6               	goto	u11100
 12480  2FE4  3001               	movlw	1
 12481  2FE5  2FE7               	goto	u11110
 12482  2FE6                     u11100:	
 12483  2FE6  3000               	movlw	0
 12484  2FE7                     u11110:	
 12485  2FE7  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 12486  2FE8  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 12487  2FE9  00FC               	movwf	_toggleColor
 12488                           
 12489                           ;RGB.c: 47:         RGB_color(0);
 12490  2FEA  3000               	movlw	0
 12491  2FEB  00F1               	movwf	RGB_color@color
 12492  2FEC  00F2               	movwf	RGB_color@color+1
 12493  2FED  31AF  27BD         	fcall	_RGB_color
 12494                           
 12495                           ;RGB.c: 48:     } else {
 12496  2FEF  0008               	return
 12497  2FF0                     l7945:	
 12498                           
 12499                           ;RGB.c: 49:         toggleColor = !toggleColor;
 12500  2FF0  087C               	movf	_toggleColor,w
 12501  2FF1  1D03               	btfss	3,2
 12502  2FF2  2FF5               	goto	u11120
 12503  2FF3  3001               	movlw	1
 12504  2FF4  2FF6               	goto	u11130
 12505  2FF5                     u11120:	
 12506  2FF5  3000               	movlw	0
 12507  2FF6                     u11130:	
 12508  2FF6  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 12509  2FF7  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 12510  2FF8  00FC               	movwf	_toggleColor
 12511                           
 12512                           ;RGB.c: 50:         RGB_color(1);
 12513  2FF9  3001               	movlw	1
 12514  2FFA  00F1               	movwf	RGB_color@color
 12515  2FFB  3000               	movlw	0
 12516  2FFC  00F2               	movwf	RGB_color@color+1
 12517  2FFD  31AF  27BD         	fcall	_RGB_color
 12518  2FFF  0008               	return
 12519  3000                     __end_of_RGB_AWAIT_AFE_CONN:	
 12520                           
 12521                           	psect	text46
 12522  2FBD                     __ptext46:	
 12523 ;; *************** function _RGB_color *****************
 12524 ;; Defined at:
 12525 ;;		line 17 in file "RGB.c"
 12526 ;; Parameters:    Size  Location     Type
 12527 ;;  color           2    1[COMMON] int 
 12528 ;; Auto vars:     Size  Location     Type
 12529 ;;		None
 12530 ;; Return value:  Size  Location     Type
 12531 ;;                  1    wreg      void 
 12532 ;; Registers used:
 12533 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 12534 ;; Tracked objects:
 12535 ;;		On entry : 0/0
 12536 ;;		On exit  : 0/0
 12537 ;;		Unchanged: 0/0
 12538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12539 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12542 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12543 ;;Total ram usage:        2 bytes
 12544 ;; Hardware stack levels used:    1
 12545 ;; Hardware stack levels required when called:    1
 12546 ;; This function calls:
 12547 ;;		Nothing
 12548 ;; This function is called by:
 12549 ;;		_statemachine
 12550 ;;		_RGB_AWAIT_AFE_CONN
 12551 ;;		_watchdog_timeout_shutdown
 12552 ;; This function uses a non-reentrant model
 12553 ;;
 12554                           
 12555                           
 12556                           ;psect for function _RGB_color
 12557  2FBD                     _RGB_color:	
 12558                           
 12559                           ;RGB.c: 19:     switch (color) {
 12560                           
 12561                           ;incstack = 0
 12562                           ; Regs used in _RGB_color: [wreg-fsr0h+status,2+status,0]
 12563  2FBD  2FCD               	goto	l7739
 12564  2FBE                     l337:	
 12565                           ;RGB.c: 20:         case 0:
 12566                           
 12567                           
 12568                           ;RGB.c: 21:             LATAbits.LATA4 = 0;
 12569  2FBE  0022               	movlb	2	; select bank2
 12570  2FBF  120C               	bcf	12,4	;volatile
 12571                           
 12572                           ;RGB.c: 22:             LATAbits.LATA5 = 1;
 12573  2FC0  168C               	bsf	12,5	;volatile
 12574                           
 12575                           ;RGB.c: 23:             LATEbits.LATE0 = 1;
 12576  2FC1  1410               	bsf	16,0	;volatile
 12577                           
 12578                           ;RGB.c: 24:             break;
 12579  2FC2  0008               	return
 12580  2FC3                     l339:	
 12581                           ;RGB.c: 25:         case 1:
 12582                           
 12583                           
 12584                           ;RGB.c: 26:             LATAbits.LATA4 = 1;
 12585  2FC3  0022               	movlb	2	; select bank2
 12586  2FC4  160C               	bsf	12,4	;volatile
 12587                           
 12588                           ;RGB.c: 27:             LATAbits.LATA5 = 0;
 12589  2FC5  128C               	bcf	12,5	;volatile
 12590                           
 12591                           ;RGB.c: 28:             LATEbits.LATE0 = 1;
 12592  2FC6  1410               	bsf	16,0	;volatile
 12593                           
 12594                           ;RGB.c: 29:             break;
 12595  2FC7  0008               	return
 12596  2FC8                     l340:	
 12597                           ;RGB.c: 30:         case 2:
 12598                           
 12599                           
 12600                           ;RGB.c: 31:             LATAbits.LATA4 = 1;
 12601  2FC8  0022               	movlb	2	; select bank2
 12602  2FC9  160C               	bsf	12,4	;volatile
 12603                           
 12604                           ;RGB.c: 32:             LATAbits.LATA5 = 1;
 12605  2FCA  168C               	bsf	12,5	;volatile
 12606                           
 12607                           ;RGB.c: 33:             LATEbits.LATE0 = 0;
 12608  2FCB  1010               	bcf	16,0	;volatile
 12609                           
 12610                           ;RGB.c: 34:             break;
 12611  2FCC  0008               	return
 12612  2FCD                     l7739:	
 12613                           
 12614                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12615                           ; Switch size 1, requested type "simple"
 12616                           ; Number of cases is 1, Range of values is 0 to 0
 12617                           ; switch strategies available:
 12618                           ; Name         Instructions Cycles
 12619                           ; simple_byte            4     3 (average)
 12620                           ; direct_byte            8     6 (fixed)
 12621                           ; jumptable            260     6 (fixed)
 12622                           ;	Chosen strategy is simple_byte
 12623  2FCD  0872               	movf	RGB_color@color+1,w
 12624  2FCE  3A00               	xorlw	0	; case 0
 12625  2FCF  1903               	skipnz
 12626  2FD0  2FD2               	goto	l8387
 12627  2FD1  2FDD               	goto	l341
 12628  2FD2                     l8387:	
 12629                           
 12630                           ; Switch size 1, requested type "simple"
 12631                           ; Number of cases is 3, Range of values is 0 to 2
 12632                           ; switch strategies available:
 12633                           ; Name         Instructions Cycles
 12634                           ; simple_byte           10     6 (average)
 12635                           ; direct_byte           12     6 (fixed)
 12636                           ; jumptable            260     6 (fixed)
 12637                           ;	Chosen strategy is simple_byte
 12638  2FD2  0871               	movf	RGB_color@color,w
 12639  2FD3  3A00               	xorlw	0	; case 0
 12640  2FD4  1903               	skipnz
 12641  2FD5  2FBE               	goto	l337
 12642  2FD6  3A01               	xorlw	1	; case 1
 12643  2FD7  1903               	skipnz
 12644  2FD8  2FC3               	goto	l339
 12645  2FD9  3A03               	xorlw	3	; case 2
 12646  2FDA  1903               	skipnz
 12647  2FDB  2FC8               	goto	l340
 12648  2FDC  2FDD               	goto	l341
 12649  2FDD                     l341:	
 12650  2FDD  0008               	return
 12651  2FDE                     __end_of_RGB_color:	
 12652                           
 12653                           	psect	text47
 12654  2E5B                     __ptext47:	
 12655 ;; *************** function _AFE_UPDATE *****************
 12656 ;; Defined at:
 12657 ;;		line 166 in file "BQ76920.c"
 12658 ;; Parameters:    Size  Location     Type
 12659 ;;		None
 12660 ;; Auto vars:     Size  Location     Type
 12661 ;;		None
 12662 ;; Return value:  Size  Location     Type
 12663 ;;                  1    wreg      void 
 12664 ;; Registers used:
 12665 ;;		wreg, status,2, status,0, pclath, cstack
 12666 ;; Tracked objects:
 12667 ;;		On entry : 0/0
 12668 ;;		On exit  : 0/0
 12669 ;;		Unchanged: 0/0
 12670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12675 ;;Total ram usage:        0 bytes
 12676 ;; Hardware stack levels used:    1
 12677 ;; Hardware stack levels required when called:    4
 12678 ;; This function calls:
 12679 ;;		_enableCharging
 12680 ;;		_enableDischarging
 12681 ;;		_updateVoltages
 12682 ;; This function is called by:
 12683 ;;		_statemachine
 12684 ;; This function uses a non-reentrant model
 12685 ;;
 12686                           
 12687                           
 12688                           ;psect for function _AFE_UPDATE
 12689  2E5B                     _AFE_UPDATE:	
 12690                           
 12691                           ;BQ76920.c: 168:     updateVoltages();
 12692                           
 12693                           ;incstack = 0
 12694                           ; Regs used in _AFE_UPDATE: [wreg+status,2+status,0+pclath+cstack]
 12695  2E5B  3180  2062  31AE   	fcall	_updateVoltages
 12696                           
 12697                           ;BQ76920.c: 172:     enableDischarging(0);
 12698  2E5E  3000               	movlw	0
 12699  2E5F  0020               	movlb	0	; select bank0
 12700  2E60  00A0               	movwf	enableDischarging@enable
 12701  2E61  00A1               	movwf	enableDischarging@enable+1
 12702  2E62  31A1  2184  31AE   	fcall	_enableDischarging
 12703                           
 12704                           ;BQ76920.c: 173:     enableCharging(0);
 12705  2E65  3000               	movlw	0
 12706  2E66  0020               	movlb	0	; select bank0
 12707  2E67  00A0               	movwf	enableCharging@enable
 12708  2E68  00A1               	movwf	enableCharging@enable+1
 12709  2E69  31A1  214D         	fcall	_enableCharging
 12710  2E6B  0008               	return
 12711  2E6C                     __end_of_AFE_UPDATE:	
 12712                           
 12713                           	psect	text48
 12714  0062                     __ptext48:	
 12715 ;; *************** function _updateVoltages *****************
 12716 ;; Defined at:
 12717 ;;		line 203 in file "BQ76920.c"
 12718 ;; Parameters:    Size  Location     Type
 12719 ;;		None
 12720 ;; Auto vars:     Size  Location     Type
 12721 ;;  adcVal          4   16[BANK1 ] long 
 12722 ;; Return value:  Size  Location     Type
 12723 ;;                  1    wreg      void 
 12724 ;; Registers used:
 12725 ;;		wreg, status,2, status,0, pclath, cstack
 12726 ;; Tracked objects:
 12727 ;;		On entry : 0/0
 12728 ;;		On exit  : 0/0
 12729 ;;		Unchanged: 0/0
 12730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12732 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12733 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12734 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12735 ;;Total ram usage:       11 bytes
 12736 ;; Hardware stack levels used:    1
 12737 ;; Hardware stack levels required when called:    3
 12738 ;; This function calls:
 12739 ;;		___aldiv
 12740 ;;		___fladd
 12741 ;;		___fldiv
 12742 ;;		___flmul
 12743 ;;		___fltol
 12744 ;;		___lmul
 12745 ;;		___xxtofl
 12746 ;;		_readRegister
 12747 ;; This function is called by:
 12748 ;;		_AFE_UPDATE
 12749 ;; This function uses a non-reentrant model
 12750 ;;
 12751                           
 12752                           
 12753                           ;psect for function _updateVoltages
 12754  0062                     _updateVoltages:	
 12755                           
 12756                           ;BQ76920.c: 207:   adcVal = (readRegister(0x18, 0x2A) << 8) | readRegister(0x18, 0x2B);
 12757                           
 12758                           ;incstack = 0
 12759                           ; Regs used in _updateVoltages: [wreg+status,2+status,0+pclath+cstack]
 12760  0062  3018               	movlw	24
 12761  0063  00F5               	movwf	readRegister@slaveAddress
 12762  0064  3000               	movlw	0
 12763  0065  00F6               	movwf	readRegister@slaveAddress+1
 12764  0066  302A               	movlw	42
 12765  0067  00F7               	movwf	readRegister@regAddress
 12766  0068  3000               	movlw	0
 12767  0069  00F8               	movwf	readRegister@regAddress+1
 12768  006A  31A1  2117  3180   	fcall	_readRegister
 12769  006D  0875               	movf	?_readRegister,w
 12770  006E  0021               	movlb	1	; select bank1
 12771  006F  00A9               	movwf	??_updateVoltages^(0+128)
 12772  0070  0876               	movf	?_readRegister+1,w
 12773  0071  00AA               	movwf	(??_updateVoltages^(0+128)+1)
 12774  0072  0829               	movf	??_updateVoltages^(0+128),w
 12775  0073  00AA               	movwf	(??_updateVoltages^(0+128)+1)
 12776  0074  01A9               	clrf	??_updateVoltages^(0+128)
 12777  0075  3018               	movlw	24
 12778  0076  00F5               	movwf	readRegister@slaveAddress
 12779  0077  3000               	movlw	0
 12780  0078  00F6               	movwf	readRegister@slaveAddress+1
 12781  0079  302B               	movlw	43
 12782  007A  00F7               	movwf	readRegister@regAddress
 12783  007B  3000               	movlw	0
 12784  007C  00F8               	movwf	readRegister@regAddress+1
 12785  007D  31A1  2117  3180   	fcall	_readRegister
 12786  0080  0875               	movf	?_readRegister,w
 12787  0081  0021               	movlb	1	; select bank1
 12788  0082  0429               	iorwf	??_updateVoltages^(0+128),w
 12789  0083  00B0               	movwf	updateVoltages@adcVal^(0+128)
 12790  0084  0876               	movf	?_readRegister+1,w
 12791  0085  042A               	iorwf	(??_updateVoltages+1)^(0+128),w
 12792  0086  00B1               	movwf	(updateVoltages@adcVal+1)^(0+128)
 12793  0087  01B2               	clrf	(updateVoltages@adcVal^(0+128)+2)
 12794  0088  1BB1               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 12795  0089  03B2               	decf	(updateVoltages@adcVal+2)^(0+128),f
 12796  008A  0832               	movf	(updateVoltages@adcVal^(0+128)+2),w
 12797  008B  00B3               	movwf	(updateVoltages@adcVal+3)^(0+128)
 12798                           
 12799                           ;BQ76920.c: 208:   batVoltage = 4.0 * adcGain * adcVal / 1000.0 + 4 * adcOffset;
 12800  008C  0022               	movlb	2	; select bank2
 12801  008D  085E               	movf	_adcGain^(0+256),w
 12802  008E  00F1               	movwf	___xxtofl@val
 12803  008F  085F               	movf	(_adcGain+1)^(0+256),w
 12804  0090  00F2               	movwf	___xxtofl@val+1
 12805  0091  0D89               	rlf	9,f
 12806  0092  3B89               	subwfb	9,f
 12807  0093  0989               	comf	9,f
 12808  0094  00F3               	movwf	___xxtofl@val+2
 12809  0095  00F4               	movwf	___xxtofl@val+3
 12810  0096  3001               	movlw	1
 12811  0097  31A6  262B  3180   	fcall	___xxtofl
 12812  009A  0874               	movf	?___xxtofl+3,w
 12813  009B  0020               	movlb	0	; select bank0
 12814  009C  00AD               	movwf	___flmul@a+3
 12815  009D  0873               	movf	?___xxtofl+2,w
 12816  009E  00AC               	movwf	___flmul@a+2
 12817  009F  0872               	movf	?___xxtofl+1,w
 12818  00A0  00AB               	movwf	___flmul@a+1
 12819  00A1  0871               	movf	?___xxtofl,w
 12820  00A2  00AA               	movwf	___flmul@a
 12821  00A3  3040               	movlw	64
 12822  00A4  00A9               	movwf	___flmul@b+3
 12823  00A5  3080               	movlw	128
 12824  00A6  00A8               	movwf	___flmul@b+2
 12825  00A7  3000               	movlw	0
 12826  00A8  00A7               	movwf	___flmul@b+1
 12827  00A9  3000               	movlw	0
 12828  00AA  00A6               	movwf	___flmul@b
 12829  00AB  3183  2335  3180   	fcall	___flmul
 12830  00AE  0020               	movlb	0	; select bank0
 12831  00AF  0829               	movf	?___flmul+3,w
 12832  00B0  0021               	movlb	1	; select bank1
 12833  00B1  00AF               	movwf	(_updateVoltages$2041+3)^(0+128)
 12834  00B2  0020               	movlb	0	; select bank0
 12835  00B3  0828               	movf	?___flmul+2,w
 12836  00B4  0021               	movlb	1	; select bank1
 12837  00B5  00AE               	movwf	(_updateVoltages$2041+2)^(0+128)
 12838  00B6  0020               	movlb	0	; select bank0
 12839  00B7  0827               	movf	?___flmul+1,w
 12840  00B8  0021               	movlb	1	; select bank1
 12841  00B9  00AD               	movwf	(_updateVoltages$2041+1)^(0+128)
 12842  00BA  0020               	movlb	0	; select bank0
 12843  00BB  0826               	movf	?___flmul,w
 12844  00BC  0021               	movlb	1	; select bank1
 12845  00BD  00AC               	movwf	_updateVoltages$2041^(0+128)
 12846                           
 12847                           ;BQ76920.c: 208:   batVoltage = 4.0 * adcGain * adcVal / 1000.0 + 4 * adcOffset;
 12848  00BE  082F               	movf	(_updateVoltages$2041+3)^(0+128),w
 12849  00BF  0020               	movlb	0	; select bank0
 12850  00C0  00AD               	movwf	___flmul@a+3
 12851  00C1  0021               	movlb	1	; select bank1
 12852  00C2  082E               	movf	(_updateVoltages$2041+2)^(0+128),w
 12853  00C3  0020               	movlb	0	; select bank0
 12854  00C4  00AC               	movwf	___flmul@a+2
 12855  00C5  0021               	movlb	1	; select bank1
 12856  00C6  082D               	movf	(_updateVoltages$2041+1)^(0+128),w
 12857  00C7  0020               	movlb	0	; select bank0
 12858  00C8  00AB               	movwf	___flmul@a+1
 12859  00C9  0021               	movlb	1	; select bank1
 12860  00CA  082C               	movf	_updateVoltages$2041^(0+128),w
 12861  00CB  0020               	movlb	0	; select bank0
 12862  00CC  00AA               	movwf	___flmul@a
 12863  00CD  0021               	movlb	1	; select bank1
 12864  00CE  0833               	movf	(updateVoltages@adcVal+3)^(0+128),w
 12865  00CF  00F4               	movwf	___xxtofl@val+3
 12866  00D0  0832               	movf	(updateVoltages@adcVal+2)^(0+128),w
 12867  00D1  00F3               	movwf	___xxtofl@val+2
 12868  00D2  0831               	movf	(updateVoltages@adcVal+1)^(0+128),w
 12869  00D3  00F2               	movwf	___xxtofl@val+1
 12870  00D4  0830               	movf	updateVoltages@adcVal^(0+128),w
 12871  00D5  00F1               	movwf	___xxtofl@val
 12872  00D6  3001               	movlw	1
 12873  00D7  31A6  262B  3180   	fcall	___xxtofl
 12874  00DA  0874               	movf	?___xxtofl+3,w
 12875  00DB  0020               	movlb	0	; select bank0
 12876  00DC  00A9               	movwf	___flmul@b+3
 12877  00DD  0873               	movf	?___xxtofl+2,w
 12878  00DE  00A8               	movwf	___flmul@b+2
 12879  00DF  0872               	movf	?___xxtofl+1,w
 12880  00E0  00A7               	movwf	___flmul@b+1
 12881  00E1  0871               	movf	?___xxtofl,w
 12882  00E2  00A6               	movwf	___flmul@b
 12883  00E3  3183  2335  3180   	fcall	___flmul
 12884  00E6  0020               	movlb	0	; select bank0
 12885  00E7  0829               	movf	?___flmul+3,w
 12886  00E8  00C7               	movwf	___fldiv@b+3
 12887  00E9  0828               	movf	?___flmul+2,w
 12888  00EA  00C6               	movwf	___fldiv@b+2
 12889  00EB  0827               	movf	?___flmul+1,w
 12890  00EC  00C5               	movwf	___fldiv@b+1
 12891  00ED  0826               	movf	?___flmul,w
 12892  00EE  00C4               	movwf	___fldiv@b
 12893  00EF  3044               	movlw	68
 12894  00F0  00C3               	movwf	___fldiv@a+3
 12895  00F1  307A               	movlw	122
 12896  00F2  00C2               	movwf	___fldiv@a+2
 12897  00F3  3000               	movlw	0
 12898  00F4  00C1               	movwf	___fldiv@a+1
 12899  00F5  3000               	movlw	0
 12900  00F6  00C0               	movwf	___fldiv@a
 12901  00F7  3194  24DF  3180   	fcall	___fldiv
 12902  00FA  0020               	movlb	0	; select bank0
 12903  00FB  0843               	movf	?___fldiv+3,w
 12904  00FC  00E1               	movwf	___fladd@a+3
 12905  00FD  0842               	movf	?___fldiv+2,w
 12906  00FE  00E0               	movwf	___fladd@a+2
 12907  00FF  0841               	movf	?___fldiv+1,w
 12908  0100  00DF               	movwf	___fladd@a+1
 12909  0101  0840               	movf	?___fldiv,w
 12910  0102  00DE               	movwf	___fladd@a
 12911  0103  0022               	movlb	2	; select bank2
 12912  0104  0855               	movf	(_adcOffset+1)^(0+256),w
 12913  0105  0021               	movlb	1	; select bank1
 12914  0106  00AA               	movwf	(??_updateVoltages^(0+128)+1)
 12915  0107  0022               	movlb	2	; select bank2
 12916  0108  0854               	movf	_adcOffset^(0+256),w
 12917  0109  0021               	movlb	1	; select bank1
 12918  010A  00A9               	movwf	??_updateVoltages^(0+128)
 12919  010B  35A9               	lslf	??_updateVoltages^(0+128),f
 12920  010C  0DAA               	rlf	(??_updateVoltages^(0+128)+1),f
 12921  010D  35A9               	lslf	??_updateVoltages^(0+128),f
 12922  010E  0DAA               	rlf	(??_updateVoltages^(0+128)+1),f
 12923  010F  0829               	movf	??_updateVoltages^(0+128),w
 12924  0110  00F1               	movwf	___xxtofl@val
 12925  0111  082A               	movf	(??_updateVoltages+1)^(0+128),w
 12926  0112  00F2               	movwf	___xxtofl@val+1
 12927  0113  0D89               	rlf	9,f
 12928  0114  3B89               	subwfb	9,f
 12929  0115  0989               	comf	9,f
 12930  0116  00F3               	movwf	___xxtofl@val+2
 12931  0117  00F4               	movwf	___xxtofl@val+3
 12932  0118  3001               	movlw	1
 12933  0119  31A6  262B  3180   	fcall	___xxtofl
 12934  011C  0874               	movf	?___xxtofl+3,w
 12935  011D  0020               	movlb	0	; select bank0
 12936  011E  00DD               	movwf	___fladd@b+3
 12937  011F  0873               	movf	?___xxtofl+2,w
 12938  0120  00DC               	movwf	___fladd@b+2
 12939  0121  0872               	movf	?___xxtofl+1,w
 12940  0122  00DB               	movwf	___fladd@b+1
 12941  0123  0871               	movf	?___xxtofl,w
 12942  0124  00DA               	movwf	___fladd@b
 12943  0125  3185  2561  3180   	fcall	___fladd
 12944  0128  0020               	movlb	0	; select bank0
 12945  0129  085D               	movf	?___fladd+3,w
 12946  012A  0021               	movlb	1	; select bank1
 12947  012B  00A3               	movwf	(___fltol@f1+3)^(0+128)
 12948  012C  0020               	movlb	0	; select bank0
 12949  012D  085C               	movf	?___fladd+2,w
 12950  012E  0021               	movlb	1	; select bank1
 12951  012F  00A2               	movwf	(___fltol@f1+2)^(0+128)
 12952  0130  0020               	movlb	0	; select bank0
 12953  0131  085B               	movf	?___fladd+1,w
 12954  0132  0021               	movlb	1	; select bank1
 12955  0133  00A1               	movwf	(___fltol@f1+1)^(0+128)
 12956  0134  0020               	movlb	0	; select bank0
 12957  0135  085A               	movf	?___fladd,w
 12958  0136  0021               	movlb	1	; select bank1
 12959  0137  00A0               	movwf	___fltol@f1^(0+128)
 12960  0138  31A3  2365  3180   	fcall	___fltol
 12961  013B  0021               	movlb	1	; select bank1
 12962  013C  0823               	movf	(?___fltol+3)^(0+128),w
 12963  013D  0022               	movlb	2	; select bank2
 12964  013E  00BD               	movwf	(_batVoltage+3)^(0+256)
 12965  013F  0021               	movlb	1	; select bank1
 12966  0140  0822               	movf	(?___fltol+2)^(0+128),w
 12967  0141  0022               	movlb	2	; select bank2
 12968  0142  00BC               	movwf	(_batVoltage+2)^(0+256)
 12969  0143  0021               	movlb	1	; select bank1
 12970  0144  0821               	movf	(?___fltol+1)^(0+128),w
 12971  0145  0022               	movlb	2	; select bank2
 12972  0146  00BB               	movwf	(_batVoltage+1)^(0+256)
 12973  0147  0021               	movlb	1	; select bank1
 12974  0148  0820               	movf	?___fltol^(0+128),w
 12975  0149  0022               	movlb	2	; select bank2
 12976  014A  00BA               	movwf	_batVoltage^(0+256)
 12977                           
 12978                           ;BQ76920.c: 231:     adcVal = ((readRegister(0x18, 0x0C) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x0D);
 12979  014B  3018               	movlw	24
 12980  014C  00F5               	movwf	readRegister@slaveAddress
 12981  014D  3000               	movlw	0
 12982  014E  00F6               	movwf	readRegister@slaveAddress+1
 12983  014F  300C               	movlw	12
 12984  0150  00F7               	movwf	readRegister@regAddress
 12985  0151  3000               	movlw	0
 12986  0152  00F8               	movwf	readRegister@regAddress+1
 12987  0153  31A1  2117  3180   	fcall	_readRegister
 12988  0156  303F               	movlw	63
 12989  0157  0575               	andwf	?_readRegister,w
 12990  0158  0021               	movlb	1	; select bank1
 12991  0159  00A9               	movwf	??_updateVoltages^(0+128)
 12992  015A  3000               	movlw	0
 12993  015B  0576               	andwf	?_readRegister+1,w
 12994  015C  00AA               	movwf	(??_updateVoltages+1)^(0+128)
 12995  015D  0829               	movf	??_updateVoltages^(0+128),w
 12996  015E  00AA               	movwf	(??_updateVoltages^(0+128)+1)
 12997  015F  01A9               	clrf	??_updateVoltages^(0+128)
 12998  0160  3018               	movlw	24
 12999  0161  00F5               	movwf	readRegister@slaveAddress
 13000  0162  3000               	movlw	0
 13001  0163  00F6               	movwf	readRegister@slaveAddress+1
 13002  0164  300D               	movlw	13
 13003  0165  00F7               	movwf	readRegister@regAddress
 13004  0166  3000               	movlw	0
 13005  0167  00F8               	movwf	readRegister@regAddress+1
 13006  0168  31A1  2117  3180   	fcall	_readRegister
 13007  016B  0875               	movf	?_readRegister,w
 13008  016C  0021               	movlb	1	; select bank1
 13009  016D  0429               	iorwf	??_updateVoltages^(0+128),w
 13010  016E  00B0               	movwf	updateVoltages@adcVal^(0+128)
 13011  016F  0876               	movf	?_readRegister+1,w
 13012  0170  042A               	iorwf	(??_updateVoltages+1)^(0+128),w
 13013  0171  00B1               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13014  0172  01B2               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13015  0173  1BB1               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13016  0174  03B2               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13017  0175  0832               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13018  0176  00B3               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13019                           
 13020                           ;BQ76920.c: 232:     cellVoltages[0] = (adcVal * adcGain / 1000) + adcOffset;
 13021  0177  3000               	movlw	0
 13022  0178  0020               	movlb	0	; select bank0
 13023  0179  00A7               	movwf	___aldiv@divisor+3
 13024  017A  3000               	movlw	0
 13025  017B  00A6               	movwf	___aldiv@divisor+2
 13026  017C  3003               	movlw	3
 13027  017D  00A5               	movwf	___aldiv@divisor+1
 13028  017E  30E8               	movlw	232
 13029  017F  00A4               	movwf	___aldiv@divisor
 13030  0180  0022               	movlb	2	; select bank2
 13031  0181  085E               	movf	_adcGain^(0+256),w
 13032  0182  00F1               	movwf	___lmul@multiplier
 13033  0183  085F               	movf	(_adcGain+1)^(0+256),w
 13034  0184  00F2               	movwf	___lmul@multiplier+1
 13035  0185  0D89               	rlf	9,f
 13036  0186  3B89               	subwfb	9,f
 13037  0187  0989               	comf	9,f
 13038  0188  00F3               	movwf	___lmul@multiplier+2
 13039  0189  00F4               	movwf	___lmul@multiplier+3
 13040  018A  0021               	movlb	1	; select bank1
 13041  018B  0833               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13042  018C  00F8               	movwf	___lmul@multiplicand+3
 13043  018D  0832               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13044  018E  00F7               	movwf	___lmul@multiplicand+2
 13045  018F  0831               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13046  0190  00F6               	movwf	___lmul@multiplicand+1
 13047  0191  0830               	movf	updateVoltages@adcVal^(0+128),w
 13048  0192  00F5               	movwf	___lmul@multiplicand
 13049  0193  31A0  20B3  3180   	fcall	___lmul
 13050  0196  0874               	movf	?___lmul+3,w
 13051  0197  0020               	movlb	0	; select bank0
 13052  0198  00AB               	movwf	___aldiv@dividend+3
 13053  0199  0873               	movf	?___lmul+2,w
 13054  019A  00AA               	movwf	___aldiv@dividend+2
 13055  019B  0872               	movf	?___lmul+1,w
 13056  019C  00A9               	movwf	___aldiv@dividend+1
 13057  019D  0871               	movf	?___lmul,w
 13058  019E  00A8               	movwf	___aldiv@dividend
 13059  019F  31A5  25A9  3180   	fcall	___aldiv
 13060  01A2  0022               	movlb	2	; select bank2
 13061  01A3  0854               	movf	_adcOffset^(0+256),w
 13062  01A4  0020               	movlb	0	; select bank0
 13063  01A5  0724               	addwf	?___aldiv,w
 13064  01A6  0022               	movlb	2	; select bank2
 13065  01A7  00A0               	movwf	_cellVoltages^(0+256)
 13066  01A8  0855               	movf	(_adcOffset+1)^(0+256),w
 13067  01A9  0020               	movlb	0	; select bank0
 13068  01AA  3D25               	addwfc	?___aldiv+1,w
 13069  01AB  0022               	movlb	2	; select bank2
 13070  01AC  00A1               	movwf	(_cellVoltages+1)^(0+256)
 13071                           
 13072                           ;BQ76920.c: 233:     adcVal = ((readRegister(0x18, 0x0E) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x0F);
 13073  01AD  3018               	movlw	24
 13074  01AE  00F5               	movwf	readRegister@slaveAddress
 13075  01AF  3000               	movlw	0
 13076  01B0  00F6               	movwf	readRegister@slaveAddress+1
 13077  01B1  300E               	movlw	14
 13078  01B2  00F7               	movwf	readRegister@regAddress
 13079  01B3  3000               	movlw	0
 13080  01B4  00F8               	movwf	readRegister@regAddress+1
 13081  01B5  31A1  2117  3180   	fcall	_readRegister
 13082  01B8  303F               	movlw	63
 13083  01B9  0575               	andwf	?_readRegister,w
 13084  01BA  0021               	movlb	1	; select bank1
 13085  01BB  00A9               	movwf	??_updateVoltages^(0+128)
 13086  01BC  3000               	movlw	0
 13087  01BD  0576               	andwf	?_readRegister+1,w
 13088  01BE  00AA               	movwf	(??_updateVoltages+1)^(0+128)
 13089  01BF  0829               	movf	??_updateVoltages^(0+128),w
 13090  01C0  00AA               	movwf	(??_updateVoltages^(0+128)+1)
 13091  01C1  01A9               	clrf	??_updateVoltages^(0+128)
 13092  01C2  3018               	movlw	24
 13093  01C3  00F5               	movwf	readRegister@slaveAddress
 13094  01C4  3000               	movlw	0
 13095  01C5  00F6               	movwf	readRegister@slaveAddress+1
 13096  01C6  300F               	movlw	15
 13097  01C7  00F7               	movwf	readRegister@regAddress
 13098  01C8  3000               	movlw	0
 13099  01C9  00F8               	movwf	readRegister@regAddress+1
 13100  01CA  31A1  2117  3180   	fcall	_readRegister
 13101  01CD  0875               	movf	?_readRegister,w
 13102  01CE  0021               	movlb	1	; select bank1
 13103  01CF  0429               	iorwf	??_updateVoltages^(0+128),w
 13104  01D0  00B0               	movwf	updateVoltages@adcVal^(0+128)
 13105  01D1  0876               	movf	?_readRegister+1,w
 13106  01D2  042A               	iorwf	(??_updateVoltages+1)^(0+128),w
 13107  01D3  00B1               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13108  01D4  01B2               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13109  01D5  1BB1               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13110  01D6  03B2               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13111  01D7  0832               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13112  01D8  00B3               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13113                           
 13114                           ;BQ76920.c: 234:     cellVoltages[1] = (adcVal * adcGain / 1000) + adcOffset;
 13115  01D9  3000               	movlw	0
 13116  01DA  0020               	movlb	0	; select bank0
 13117  01DB  00A7               	movwf	___aldiv@divisor+3
 13118  01DC  3000               	movlw	0
 13119  01DD  00A6               	movwf	___aldiv@divisor+2
 13120  01DE  3003               	movlw	3
 13121  01DF  00A5               	movwf	___aldiv@divisor+1
 13122  01E0  30E8               	movlw	232
 13123  01E1  00A4               	movwf	___aldiv@divisor
 13124  01E2  0022               	movlb	2	; select bank2
 13125  01E3  085E               	movf	_adcGain^(0+256),w
 13126  01E4  00F1               	movwf	___lmul@multiplier
 13127  01E5  085F               	movf	(_adcGain+1)^(0+256),w
 13128  01E6  00F2               	movwf	___lmul@multiplier+1
 13129  01E7  0D89               	rlf	9,f
 13130  01E8  3B89               	subwfb	9,f
 13131  01E9  0989               	comf	9,f
 13132  01EA  00F3               	movwf	___lmul@multiplier+2
 13133  01EB  00F4               	movwf	___lmul@multiplier+3
 13134  01EC  0021               	movlb	1	; select bank1
 13135  01ED  0833               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13136  01EE  00F8               	movwf	___lmul@multiplicand+3
 13137  01EF  0832               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13138  01F0  00F7               	movwf	___lmul@multiplicand+2
 13139  01F1  0831               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13140  01F2  00F6               	movwf	___lmul@multiplicand+1
 13141  01F3  0830               	movf	updateVoltages@adcVal^(0+128),w
 13142  01F4  00F5               	movwf	___lmul@multiplicand
 13143  01F5  31A0  20B3  3180   	fcall	___lmul
 13144  01F8  0874               	movf	?___lmul+3,w
 13145  01F9  0020               	movlb	0	; select bank0
 13146  01FA  00AB               	movwf	___aldiv@dividend+3
 13147  01FB  0873               	movf	?___lmul+2,w
 13148  01FC  00AA               	movwf	___aldiv@dividend+2
 13149  01FD  0872               	movf	?___lmul+1,w
 13150  01FE  00A9               	movwf	___aldiv@dividend+1
 13151  01FF  0871               	movf	?___lmul,w
 13152  0200  00A8               	movwf	___aldiv@dividend
 13153  0201  31A5  25A9  3180   	fcall	___aldiv
 13154  0204  0022               	movlb	2	; select bank2
 13155  0205  0854               	movf	_adcOffset^(0+256),w
 13156  0206  0020               	movlb	0	; select bank0
 13157  0207  0724               	addwf	?___aldiv,w
 13158  0208  0022               	movlb	2	; select bank2
 13159  0209  00A2               	movwf	(_cellVoltages^(0+256)+2)
 13160  020A  0855               	movf	(_adcOffset+1)^(0+256),w
 13161  020B  0020               	movlb	0	; select bank0
 13162  020C  3D25               	addwfc	?___aldiv+1,w
 13163  020D  0022               	movlb	2	; select bank2
 13164  020E  00A3               	movwf	((_cellVoltages+1)^(0+256)+2)
 13165                           
 13166                           ;BQ76920.c: 235:     adcVal = ((readRegister(0x18, 0x10) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x11);
 13167  020F  3018               	movlw	24
 13168  0210  00F5               	movwf	readRegister@slaveAddress
 13169  0211  3000               	movlw	0
 13170  0212  00F6               	movwf	readRegister@slaveAddress+1
 13171  0213  3010               	movlw	16
 13172  0214  00F7               	movwf	readRegister@regAddress
 13173  0215  3000               	movlw	0
 13174  0216  00F8               	movwf	readRegister@regAddress+1
 13175  0217  31A1  2117  3180   	fcall	_readRegister
 13176  021A  303F               	movlw	63
 13177  021B  0575               	andwf	?_readRegister,w
 13178  021C  0021               	movlb	1	; select bank1
 13179  021D  00A9               	movwf	??_updateVoltages^(0+128)
 13180  021E  3000               	movlw	0
 13181  021F  0576               	andwf	?_readRegister+1,w
 13182  0220  00AA               	movwf	(??_updateVoltages+1)^(0+128)
 13183  0221  0829               	movf	??_updateVoltages^(0+128),w
 13184  0222  00AA               	movwf	(??_updateVoltages^(0+128)+1)
 13185  0223  01A9               	clrf	??_updateVoltages^(0+128)
 13186  0224  3018               	movlw	24
 13187  0225  00F5               	movwf	readRegister@slaveAddress
 13188  0226  3000               	movlw	0
 13189  0227  00F6               	movwf	readRegister@slaveAddress+1
 13190  0228  3011               	movlw	17
 13191  0229  00F7               	movwf	readRegister@regAddress
 13192  022A  3000               	movlw	0
 13193  022B  00F8               	movwf	readRegister@regAddress+1
 13194  022C  31A1  2117  3180   	fcall	_readRegister
 13195  022F  0875               	movf	?_readRegister,w
 13196  0230  0021               	movlb	1	; select bank1
 13197  0231  0429               	iorwf	??_updateVoltages^(0+128),w
 13198  0232  00B0               	movwf	updateVoltages@adcVal^(0+128)
 13199  0233  0876               	movf	?_readRegister+1,w
 13200  0234  042A               	iorwf	(??_updateVoltages+1)^(0+128),w
 13201  0235  00B1               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13202  0236  01B2               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13203  0237  1BB1               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13204  0238  03B2               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13205  0239  0832               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13206  023A  00B3               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13207                           
 13208                           ;BQ76920.c: 236:     cellVoltages[2] = (adcVal * adcGain / 1000) + adcOffset;
 13209  023B  3000               	movlw	0
 13210  023C  0020               	movlb	0	; select bank0
 13211  023D  00A7               	movwf	___aldiv@divisor+3
 13212  023E  3000               	movlw	0
 13213  023F  00A6               	movwf	___aldiv@divisor+2
 13214  0240  3003               	movlw	3
 13215  0241  00A5               	movwf	___aldiv@divisor+1
 13216  0242  30E8               	movlw	232
 13217  0243  00A4               	movwf	___aldiv@divisor
 13218  0244  0022               	movlb	2	; select bank2
 13219  0245  085E               	movf	_adcGain^(0+256),w
 13220  0246  00F1               	movwf	___lmul@multiplier
 13221  0247  085F               	movf	(_adcGain+1)^(0+256),w
 13222  0248  00F2               	movwf	___lmul@multiplier+1
 13223  0249  0D89               	rlf	9,f
 13224  024A  3B89               	subwfb	9,f
 13225  024B  0989               	comf	9,f
 13226  024C  00F3               	movwf	___lmul@multiplier+2
 13227  024D  00F4               	movwf	___lmul@multiplier+3
 13228  024E  0021               	movlb	1	; select bank1
 13229  024F  0833               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13230  0250  00F8               	movwf	___lmul@multiplicand+3
 13231  0251  0832               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13232  0252  00F7               	movwf	___lmul@multiplicand+2
 13233  0253  0831               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13234  0254  00F6               	movwf	___lmul@multiplicand+1
 13235  0255  0830               	movf	updateVoltages@adcVal^(0+128),w
 13236  0256  00F5               	movwf	___lmul@multiplicand
 13237  0257  31A0  20B3  3180   	fcall	___lmul
 13238  025A  0874               	movf	?___lmul+3,w
 13239  025B  0020               	movlb	0	; select bank0
 13240  025C  00AB               	movwf	___aldiv@dividend+3
 13241  025D  0873               	movf	?___lmul+2,w
 13242  025E  00AA               	movwf	___aldiv@dividend+2
 13243  025F  0872               	movf	?___lmul+1,w
 13244  0260  00A9               	movwf	___aldiv@dividend+1
 13245  0261  0871               	movf	?___lmul,w
 13246  0262  00A8               	movwf	___aldiv@dividend
 13247  0263  31A5  25A9  3180   	fcall	___aldiv
 13248  0266  0022               	movlb	2	; select bank2
 13249  0267  0854               	movf	_adcOffset^(0+256),w
 13250  0268  0020               	movlb	0	; select bank0
 13251  0269  0724               	addwf	?___aldiv,w
 13252  026A  0022               	movlb	2	; select bank2
 13253  026B  00A4               	movwf	(_cellVoltages^(0+256)+4)
 13254  026C  0855               	movf	(_adcOffset+1)^(0+256),w
 13255  026D  0020               	movlb	0	; select bank0
 13256  026E  3D25               	addwfc	?___aldiv+1,w
 13257  026F  0022               	movlb	2	; select bank2
 13258  0270  00A5               	movwf	((_cellVoltages+1)^(0+256)+4)
 13259                           
 13260                           ;BQ76920.c: 237:     adcVal = ((readRegister(0x18, 0x12) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x13);
 13261  0271  3018               	movlw	24
 13262  0272  00F5               	movwf	readRegister@slaveAddress
 13263  0273  3000               	movlw	0
 13264  0274  00F6               	movwf	readRegister@slaveAddress+1
 13265  0275  3012               	movlw	18
 13266  0276  00F7               	movwf	readRegister@regAddress
 13267  0277  3000               	movlw	0
 13268  0278  00F8               	movwf	readRegister@regAddress+1
 13269  0279  31A1  2117  3180   	fcall	_readRegister
 13270  027C  303F               	movlw	63
 13271  027D  0575               	andwf	?_readRegister,w
 13272  027E  0021               	movlb	1	; select bank1
 13273  027F  00A9               	movwf	??_updateVoltages^(0+128)
 13274  0280  3000               	movlw	0
 13275  0281  0576               	andwf	?_readRegister+1,w
 13276  0282  00AA               	movwf	(??_updateVoltages+1)^(0+128)
 13277  0283  0829               	movf	??_updateVoltages^(0+128),w
 13278  0284  00AA               	movwf	(??_updateVoltages^(0+128)+1)
 13279  0285  01A9               	clrf	??_updateVoltages^(0+128)
 13280  0286  3018               	movlw	24
 13281  0287  00F5               	movwf	readRegister@slaveAddress
 13282  0288  3000               	movlw	0
 13283  0289  00F6               	movwf	readRegister@slaveAddress+1
 13284  028A  3013               	movlw	19
 13285  028B  00F7               	movwf	readRegister@regAddress
 13286  028C  3000               	movlw	0
 13287  028D  00F8               	movwf	readRegister@regAddress+1
 13288  028E  31A1  2117  3180   	fcall	_readRegister
 13289  0291  0875               	movf	?_readRegister,w
 13290  0292  0021               	movlb	1	; select bank1
 13291  0293  0429               	iorwf	??_updateVoltages^(0+128),w
 13292  0294  00B0               	movwf	updateVoltages@adcVal^(0+128)
 13293  0295  0876               	movf	?_readRegister+1,w
 13294  0296  042A               	iorwf	(??_updateVoltages+1)^(0+128),w
 13295  0297  00B1               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13296  0298  01B2               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13297  0299  1BB1               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13298  029A  03B2               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13299  029B  0832               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13300  029C  00B3               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13301                           
 13302                           ;BQ76920.c: 238:     cellVoltages[3] = (adcVal * adcGain / 1000) + adcOffset;
 13303  029D  3000               	movlw	0
 13304  029E  0020               	movlb	0	; select bank0
 13305  029F  00A7               	movwf	___aldiv@divisor+3
 13306  02A0  3000               	movlw	0
 13307  02A1  00A6               	movwf	___aldiv@divisor+2
 13308  02A2  3003               	movlw	3
 13309  02A3  00A5               	movwf	___aldiv@divisor+1
 13310  02A4  30E8               	movlw	232
 13311  02A5  00A4               	movwf	___aldiv@divisor
 13312  02A6  0022               	movlb	2	; select bank2
 13313  02A7  085E               	movf	_adcGain^(0+256),w
 13314  02A8  00F1               	movwf	___lmul@multiplier
 13315  02A9  085F               	movf	(_adcGain+1)^(0+256),w
 13316  02AA  00F2               	movwf	___lmul@multiplier+1
 13317  02AB  0D89               	rlf	9,f
 13318  02AC  3B89               	subwfb	9,f
 13319  02AD  0989               	comf	9,f
 13320  02AE  00F3               	movwf	___lmul@multiplier+2
 13321  02AF  00F4               	movwf	___lmul@multiplier+3
 13322  02B0  0021               	movlb	1	; select bank1
 13323  02B1  0833               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13324  02B2  00F8               	movwf	___lmul@multiplicand+3
 13325  02B3  0832               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13326  02B4  00F7               	movwf	___lmul@multiplicand+2
 13327  02B5  0831               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13328  02B6  00F6               	movwf	___lmul@multiplicand+1
 13329  02B7  0830               	movf	updateVoltages@adcVal^(0+128),w
 13330  02B8  00F5               	movwf	___lmul@multiplicand
 13331  02B9  31A0  20B3  3180   	fcall	___lmul
 13332  02BC  0874               	movf	?___lmul+3,w
 13333  02BD  0020               	movlb	0	; select bank0
 13334  02BE  00AB               	movwf	___aldiv@dividend+3
 13335  02BF  0873               	movf	?___lmul+2,w
 13336  02C0  00AA               	movwf	___aldiv@dividend+2
 13337  02C1  0872               	movf	?___lmul+1,w
 13338  02C2  00A9               	movwf	___aldiv@dividend+1
 13339  02C3  0871               	movf	?___lmul,w
 13340  02C4  00A8               	movwf	___aldiv@dividend
 13341  02C5  31A5  25A9  3180   	fcall	___aldiv
 13342  02C8  0022               	movlb	2	; select bank2
 13343  02C9  0854               	movf	_adcOffset^(0+256),w
 13344  02CA  0020               	movlb	0	; select bank0
 13345  02CB  0724               	addwf	?___aldiv,w
 13346  02CC  0022               	movlb	2	; select bank2
 13347  02CD  00A6               	movwf	(_cellVoltages^(0+256)+6)
 13348  02CE  0855               	movf	(_adcOffset+1)^(0+256),w
 13349  02CF  0020               	movlb	0	; select bank0
 13350  02D0  3D25               	addwfc	?___aldiv+1,w
 13351  02D1  0022               	movlb	2	; select bank2
 13352  02D2  00A7               	movwf	((_cellVoltages+1)^(0+256)+6)
 13353                           
 13354                           ;BQ76920.c: 239:     adcVal = ((readRegister(0x18, 0x14) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x15);
 13355  02D3  3018               	movlw	24
 13356  02D4  00F5               	movwf	readRegister@slaveAddress
 13357  02D5  3000               	movlw	0
 13358  02D6  00F6               	movwf	readRegister@slaveAddress+1
 13359  02D7  3014               	movlw	20
 13360  02D8  00F7               	movwf	readRegister@regAddress
 13361  02D9  3000               	movlw	0
 13362  02DA  00F8               	movwf	readRegister@regAddress+1
 13363  02DB  31A1  2117  3180   	fcall	_readRegister
 13364  02DE  303F               	movlw	63
 13365  02DF  0575               	andwf	?_readRegister,w
 13366  02E0  0021               	movlb	1	; select bank1
 13367  02E1  00A9               	movwf	??_updateVoltages^(0+128)
 13368  02E2  3000               	movlw	0
 13369  02E3  0576               	andwf	?_readRegister+1,w
 13370  02E4  00AA               	movwf	(??_updateVoltages+1)^(0+128)
 13371  02E5  0829               	movf	??_updateVoltages^(0+128),w
 13372  02E6  00AA               	movwf	(??_updateVoltages^(0+128)+1)
 13373  02E7  01A9               	clrf	??_updateVoltages^(0+128)
 13374  02E8  3018               	movlw	24
 13375  02E9  00F5               	movwf	readRegister@slaveAddress
 13376  02EA  3000               	movlw	0
 13377  02EB  00F6               	movwf	readRegister@slaveAddress+1
 13378  02EC  3015               	movlw	21
 13379  02ED  00F7               	movwf	readRegister@regAddress
 13380  02EE  3000               	movlw	0
 13381  02EF  00F8               	movwf	readRegister@regAddress+1
 13382  02F0  31A1  2117  3180   	fcall	_readRegister
 13383  02F3  0875               	movf	?_readRegister,w
 13384  02F4  0021               	movlb	1	; select bank1
 13385  02F5  0429               	iorwf	??_updateVoltages^(0+128),w
 13386  02F6  00B0               	movwf	updateVoltages@adcVal^(0+128)
 13387  02F7  0876               	movf	?_readRegister+1,w
 13388  02F8  042A               	iorwf	(??_updateVoltages+1)^(0+128),w
 13389  02F9  00B1               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13390  02FA  01B2               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13391  02FB  1BB1               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13392  02FC  03B2               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13393  02FD  0832               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13394  02FE  00B3               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13395                           
 13396                           ;BQ76920.c: 240:     cellVoltages[4] = (adcVal * adcGain / 1000) + adcOffset;
 13397  02FF  3000               	movlw	0
 13398  0300  0020               	movlb	0	; select bank0
 13399  0301  00A7               	movwf	___aldiv@divisor+3
 13400  0302  3000               	movlw	0
 13401  0303  00A6               	movwf	___aldiv@divisor+2
 13402  0304  3003               	movlw	3
 13403  0305  00A5               	movwf	___aldiv@divisor+1
 13404  0306  30E8               	movlw	232
 13405  0307  00A4               	movwf	___aldiv@divisor
 13406  0308  0022               	movlb	2	; select bank2
 13407  0309  085E               	movf	_adcGain^(0+256),w
 13408  030A  00F1               	movwf	___lmul@multiplier
 13409  030B  085F               	movf	(_adcGain+1)^(0+256),w
 13410  030C  00F2               	movwf	___lmul@multiplier+1
 13411  030D  0D89               	rlf	9,f
 13412  030E  3B89               	subwfb	9,f
 13413  030F  0989               	comf	9,f
 13414  0310  00F3               	movwf	___lmul@multiplier+2
 13415  0311  00F4               	movwf	___lmul@multiplier+3
 13416  0312  0021               	movlb	1	; select bank1
 13417  0313  0833               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13418  0314  00F8               	movwf	___lmul@multiplicand+3
 13419  0315  0832               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13420  0316  00F7               	movwf	___lmul@multiplicand+2
 13421  0317  0831               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13422  0318  00F6               	movwf	___lmul@multiplicand+1
 13423  0319  0830               	movf	updateVoltages@adcVal^(0+128),w
 13424  031A  00F5               	movwf	___lmul@multiplicand
 13425  031B  31A0  20B3  3180   	fcall	___lmul
 13426  031E  0874               	movf	?___lmul+3,w
 13427  031F  0020               	movlb	0	; select bank0
 13428  0320  00AB               	movwf	___aldiv@dividend+3
 13429  0321  0873               	movf	?___lmul+2,w
 13430  0322  00AA               	movwf	___aldiv@dividend+2
 13431  0323  0872               	movf	?___lmul+1,w
 13432  0324  00A9               	movwf	___aldiv@dividend+1
 13433  0325  0871               	movf	?___lmul,w
 13434  0326  00A8               	movwf	___aldiv@dividend
 13435  0327  31A5  25A9         	fcall	___aldiv
 13436  0329  0022               	movlb	2	; select bank2
 13437  032A  0854               	movf	_adcOffset^(0+256),w
 13438  032B  0020               	movlb	0	; select bank0
 13439  032C  0724               	addwf	?___aldiv,w
 13440  032D  0022               	movlb	2	; select bank2
 13441  032E  00A8               	movwf	(_cellVoltages^(0+256)+8)
 13442  032F  0855               	movf	(_adcOffset+1)^(0+256),w
 13443  0330  0020               	movlb	0	; select bank0
 13444  0331  3D25               	addwfc	?___aldiv+1,w
 13445  0332  0022               	movlb	2	; select bank2
 13446  0333  00A9               	movwf	((_cellVoltages+1)^(0+256)+8)
 13447  0334  0008               	return
 13448  0335                     __end_of_updateVoltages:	
 13449                           
 13450                           	psect	text49
 13451  262B                     __ptext49:	
 13452 ;; *************** function ___xxtofl *****************
 13453 ;; Defined at:
 13454 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 13455 ;; Parameters:    Size  Location     Type
 13456 ;;  sign            1    wreg     unsigned char 
 13457 ;;  val             4    1[COMMON] long 
 13458 ;; Auto vars:     Size  Location     Type
 13459 ;;  sign            1    0[BANK0 ] unsigned char 
 13460 ;;  arg             4    2[BANK0 ] unsigned long 
 13461 ;;  exp             1    1[BANK0 ] unsigned char 
 13462 ;; Return value:  Size  Location     Type
 13463 ;;                  4    1[COMMON] unsigned char 
 13464 ;; Registers used:
 13465 ;;		wreg, status,2, status,0
 13466 ;; Tracked objects:
 13467 ;;		On entry : 0/0
 13468 ;;		On exit  : 0/0
 13469 ;;		Unchanged: 0/0
 13470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13471 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13472 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13473 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13474 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13475 ;;Total ram usage:       14 bytes
 13476 ;; Hardware stack levels used:    1
 13477 ;; Hardware stack levels required when called:    1
 13478 ;; This function calls:
 13479 ;;		Nothing
 13480 ;; This function is called by:
 13481 ;;		_setShortCircuitProtection
 13482 ;;		_setOverCurrentDischargeProtection
 13483 ;;		_updateVoltages
 13484 ;;		_updateCurrent
 13485 ;;		_updateTemperatures
 13486 ;;		_AFE_getSetShortCircuitCurrent
 13487 ;;		_AFE_getOverCurrentDischargeCurrent
 13488 ;;		_logf
 13489 ;; This function uses a non-reentrant model
 13490 ;;
 13491                           
 13492                           
 13493                           ;psect for function ___xxtofl
 13494  262B                     ___xxtofl:	
 13495                           
 13496                           ;incstack = 0
 13497                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 13498                           ;___xxtofl@sign stored from wreg
 13499  262B  0020               	movlb	0	; select bank0
 13500  262C  00A0               	movwf	___xxtofl@sign
 13501  262D  0820               	movf	___xxtofl@sign,w
 13502  262E  1D03               	btfss	3,2
 13503  262F  1FF4               	btfss	___xxtofl@val+3,7
 13504  2630  2E41               	goto	l7665
 13505  2631  0971               	comf	___xxtofl@val,w
 13506  2632  00A2               	movwf	___xxtofl@arg
 13507  2633  0972               	comf	___xxtofl@val+1,w
 13508  2634  00A3               	movwf	___xxtofl@arg+1
 13509  2635  0973               	comf	___xxtofl@val+2,w
 13510  2636  00A4               	movwf	___xxtofl@arg+2
 13511  2637  0974               	comf	___xxtofl@val+3,w
 13512  2638  00A5               	movwf	___xxtofl@arg+3
 13513  2639  0AA2               	incf	___xxtofl@arg,f
 13514  263A  1903               	skipnz
 13515  263B  0AA3               	incf	___xxtofl@arg+1,f
 13516  263C  1903               	skipnz
 13517  263D  0AA4               	incf	___xxtofl@arg+2,f
 13518  263E  1903               	skipnz
 13519  263F  0AA5               	incf	___xxtofl@arg+3,f
 13520  2640  2E49               	goto	l1275
 13521  2641                     l7665:	
 13522  2641  0874               	movf	___xxtofl@val+3,w
 13523  2642  00A5               	movwf	___xxtofl@arg+3
 13524  2643  0873               	movf	___xxtofl@val+2,w
 13525  2644  00A4               	movwf	___xxtofl@arg+2
 13526  2645  0872               	movf	___xxtofl@val+1,w
 13527  2646  00A3               	movwf	___xxtofl@arg+1
 13528  2647  0871               	movf	___xxtofl@val,w
 13529  2648  00A2               	movwf	___xxtofl@arg
 13530  2649                     l1275:	
 13531  2649  0874               	movf	___xxtofl@val+3,w
 13532  264A  0473               	iorwf	___xxtofl@val+2,w
 13533  264B  0472               	iorwf	___xxtofl@val+1,w
 13534  264C  0471               	iorwf	___xxtofl@val,w
 13535  264D  1D03               	skipz
 13536  264E  2E58               	goto	l7671
 13537  264F  3000               	movlw	0
 13538  2650  00F4               	movwf	?___xxtofl+3
 13539  2651  3000               	movlw	0
 13540  2652  00F3               	movwf	?___xxtofl+2
 13541  2653  3000               	movlw	0
 13542  2654  00F2               	movwf	?___xxtofl+1
 13543  2655  3000               	movlw	0
 13544  2656  00F1               	movwf	?___xxtofl
 13545  2657  0008               	return
 13546  2658                     l7671:	
 13547  2658  3096               	movlw	150
 13548  2659  00F5               	movwf	??___xxtofl
 13549  265A  0875               	movf	??___xxtofl,w
 13550  265B  00A1               	movwf	___xxtofl@exp
 13551  265C                     l7675:	
 13552  265C  30FE               	movlw	254
 13553  265D  0525               	andwf	___xxtofl@arg+3,w
 13554  265E  1903               	btfsc	3,2
 13555  265F  2E7F               	goto	l1281
 13556  2660  3001               	movlw	1
 13557  2661  00F5               	movwf	??___xxtofl
 13558  2662  0875               	movf	??___xxtofl,w
 13559  2663  07A1               	addwf	___xxtofl@exp,f
 13560  2664  3001               	movlw	1
 13561  2665                     u10765:	
 13562  2665  36A5               	lsrf	___xxtofl@arg+3,f
 13563  2666  0CA4               	rrf	___xxtofl@arg+2,f
 13564  2667  0CA3               	rrf	___xxtofl@arg+1,f
 13565  2668  0CA2               	rrf	___xxtofl@arg,f
 13566  2669  0B89               	decfsz	9,f
 13567  266A  2E65               	goto	u10765
 13568  266B  2E5C               	goto	l7675
 13569  266C                     l7677:	
 13570  266C  3001               	movlw	1
 13571  266D  00F5               	movwf	??___xxtofl
 13572  266E  0875               	movf	??___xxtofl,w
 13573  266F  07A1               	addwf	___xxtofl@exp,f
 13574  2670  3001               	movlw	1
 13575  2671  07A2               	addwf	___xxtofl@arg,f
 13576  2672  3000               	movlw	0
 13577  2673  3DA3               	addwfc	___xxtofl@arg+1,f
 13578  2674  3000               	movlw	0
 13579  2675  3DA4               	addwfc	___xxtofl@arg+2,f
 13580  2676  3000               	movlw	0
 13581  2677  3DA5               	addwfc	___xxtofl@arg+3,f
 13582  2678  3001               	movlw	1
 13583  2679                     u10785:	
 13584  2679  36A5               	lsrf	___xxtofl@arg+3,f
 13585  267A  0CA4               	rrf	___xxtofl@arg+2,f
 13586  267B  0CA3               	rrf	___xxtofl@arg+1,f
 13587  267C  0CA2               	rrf	___xxtofl@arg,f
 13588  267D  0B89               	decfsz	9,f
 13589  267E  2E79               	goto	u10785
 13590  267F                     l1281:	
 13591  267F  30FF               	movlw	255
 13592  2680  0525               	andwf	___xxtofl@arg+3,w
 13593  2681  1903               	btfsc	3,2
 13594  2682  2E91               	goto	l7685
 13595  2683  2E6C               	goto	l7677
 13596  2684                     l7687:	
 13597  2684  3002               	movlw	2
 13598  2685  0221               	subwf	___xxtofl@exp,w
 13599  2686  1C03               	btfss	3,0
 13600  2687  2E93               	goto	l1288
 13601  2688  3001               	movlw	1
 13602  2689  02A1               	subwf	___xxtofl@exp,f
 13603  268A  3001               	movlw	1
 13604  268B                     u10805:	
 13605  268B  35A2               	lslf	___xxtofl@arg,f
 13606  268C  0DA3               	rlf	___xxtofl@arg+1,f
 13607  268D  0DA4               	rlf	___xxtofl@arg+2,f
 13608  268E  0DA5               	rlf	___xxtofl@arg+3,f
 13609  268F  0B89               	decfsz	9,f
 13610  2690  2E8B               	goto	u10805
 13611  2691                     l7685:	
 13612  2691  1FA4               	btfss	___xxtofl@arg+2,7
 13613  2692  2E84               	goto	l7687
 13614  2693                     l1288:	
 13615  2693  1821               	btfsc	___xxtofl@exp,0
 13616  2694  2E9D               	goto	l1289
 13617  2695  30FF               	movlw	255
 13618  2696  05A2               	andwf	___xxtofl@arg,f
 13619  2697  30FF               	movlw	255
 13620  2698  05A3               	andwf	___xxtofl@arg+1,f
 13621  2699  307F               	movlw	127
 13622  269A  05A4               	andwf	___xxtofl@arg+2,f
 13623  269B  30FF               	movlw	255
 13624  269C  05A5               	andwf	___xxtofl@arg+3,f
 13625  269D                     l1289:	
 13626  269D  1003               	clrc
 13627  269E  0CA1               	rrf	___xxtofl@exp,f
 13628  269F  0821               	movf	___xxtofl@exp,w
 13629  26A0  00F5               	movwf	??___xxtofl
 13630  26A1  01F6               	clrf	??___xxtofl+1
 13631  26A2  01F7               	clrf	??___xxtofl+2
 13632  26A3  01F8               	clrf	??___xxtofl+3
 13633  26A4  3018               	movlw	24
 13634  26A5                     u10845:	
 13635  26A5  35F5               	lslf	??___xxtofl,f
 13636  26A6  0DF6               	rlf	??___xxtofl+1,f
 13637  26A7  0DF7               	rlf	??___xxtofl+2,f
 13638  26A8  0DF8               	rlf	??___xxtofl+3,f
 13639  26A9  0B89               	decfsz	9,f
 13640  26AA  2EA5               	goto	u10845
 13641  26AB  0875               	movf	??___xxtofl,w
 13642  26AC  04A2               	iorwf	___xxtofl@arg,f
 13643  26AD  0876               	movf	??___xxtofl+1,w
 13644  26AE  04A3               	iorwf	___xxtofl@arg+1,f
 13645  26AF  0877               	movf	??___xxtofl+2,w
 13646  26B0  04A4               	iorwf	___xxtofl@arg+2,f
 13647  26B1  0878               	movf	??___xxtofl+3,w
 13648  26B2  04A5               	iorwf	___xxtofl@arg+3,f
 13649  26B3  0820               	movf	___xxtofl@sign,w
 13650  26B4  1D03               	btfss	3,2
 13651  26B5  1FF4               	btfss	___xxtofl@val+3,7
 13652  26B6  2EB8               	goto	l7699
 13653  26B7  17A5               	bsf	___xxtofl@arg+3,7
 13654  26B8                     l7699:	
 13655  26B8  0825               	movf	___xxtofl@arg+3,w
 13656  26B9  00F4               	movwf	?___xxtofl+3
 13657  26BA  0824               	movf	___xxtofl@arg+2,w
 13658  26BB  00F3               	movwf	?___xxtofl+2
 13659  26BC  0823               	movf	___xxtofl@arg+1,w
 13660  26BD  00F2               	movwf	?___xxtofl+1
 13661  26BE  0822               	movf	___xxtofl@arg,w
 13662  26BF  00F1               	movwf	?___xxtofl
 13663  26C0  0008               	return
 13664  26C1                     __end_of___xxtofl:	
 13665                           
 13666                           	psect	text50
 13667  20B3                     __ptext50:	
 13668 ;; *************** function ___lmul *****************
 13669 ;; Defined at:
 13670 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c"
 13671 ;; Parameters:    Size  Location     Type
 13672 ;;  multiplier      4    1[COMMON] unsigned long 
 13673 ;;  multiplicand    4    5[COMMON] unsigned long 
 13674 ;; Auto vars:     Size  Location     Type
 13675 ;;  product         4    0[BANK0 ] unsigned long 
 13676 ;; Return value:  Size  Location     Type
 13677 ;;                  4    1[COMMON] unsigned long 
 13678 ;; Registers used:
 13679 ;;		wreg, status,2, status,0
 13680 ;; Tracked objects:
 13681 ;;		On entry : 0/0
 13682 ;;		On exit  : 0/0
 13683 ;;		Unchanged: 0/0
 13684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13685 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13686 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13688 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13689 ;;Total ram usage:       12 bytes
 13690 ;; Hardware stack levels used:    1
 13691 ;; Hardware stack levels required when called:    1
 13692 ;; This function calls:
 13693 ;;		Nothing
 13694 ;; This function is called by:
 13695 ;;		_setCellUndervoltageProtection
 13696 ;;		_setCellOvervoltageProtection
 13697 ;;		_updateVoltages
 13698 ;; This function uses a non-reentrant model
 13699 ;;
 13700                           
 13701                           
 13702                           ;psect for function ___lmul
 13703  20B3                     ___lmul:	
 13704                           
 13705                           ;incstack = 0
 13706                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 13707  20B3  3000               	movlw	0
 13708  20B4  0020               	movlb	0	; select bank0
 13709  20B5  00A3               	movwf	___lmul@product+3
 13710  20B6  3000               	movlw	0
 13711  20B7  00A2               	movwf	___lmul@product+2
 13712  20B8  3000               	movlw	0
 13713  20B9  00A1               	movwf	___lmul@product+1
 13714  20BA  3000               	movlw	0
 13715  20BB  00A0               	movwf	___lmul@product
 13716  20BC                     l7077:	
 13717  20BC  1C71               	btfss	___lmul@multiplier,0
 13718  20BD  28C7               	goto	l7081
 13719  20BE  0875               	movf	___lmul@multiplicand,w
 13720  20BF  0020               	movlb	0	; select bank0
 13721  20C0  07A0               	addwf	___lmul@product,f
 13722  20C1  0876               	movf	___lmul@multiplicand+1,w
 13723  20C2  3DA1               	addwfc	___lmul@product+1,f
 13724  20C3  0877               	movf	___lmul@multiplicand+2,w
 13725  20C4  3DA2               	addwfc	___lmul@product+2,f
 13726  20C5  0878               	movf	___lmul@multiplicand+3,w
 13727  20C6  3DA3               	addwfc	___lmul@product+3,f
 13728  20C7                     l7081:	
 13729  20C7  3001               	movlw	1
 13730  20C8                     u9475:	
 13731  20C8  35F5               	lslf	___lmul@multiplicand,f
 13732  20C9  0DF6               	rlf	___lmul@multiplicand+1,f
 13733  20CA  0DF7               	rlf	___lmul@multiplicand+2,f
 13734  20CB  0DF8               	rlf	___lmul@multiplicand+3,f
 13735  20CC  0B89               	decfsz	9,f
 13736  20CD  28C8               	goto	u9475
 13737  20CE  3001               	movlw	1
 13738  20CF                     u9485:	
 13739  20CF  36F4               	lsrf	___lmul@multiplier+3,f
 13740  20D0  0CF3               	rrf	___lmul@multiplier+2,f
 13741  20D1  0CF2               	rrf	___lmul@multiplier+1,f
 13742  20D2  0CF1               	rrf	___lmul@multiplier,f
 13743  20D3  0B89               	decfsz	9,f
 13744  20D4  28CF               	goto	u9485
 13745  20D5  0874               	movf	___lmul@multiplier+3,w
 13746  20D6  0473               	iorwf	___lmul@multiplier+2,w
 13747  20D7  0472               	iorwf	___lmul@multiplier+1,w
 13748  20D8  0471               	iorwf	___lmul@multiplier,w
 13749  20D9  1D03               	skipz
 13750  20DA  28BC               	goto	l7077
 13751  20DB  0020               	movlb	0	; select bank0
 13752  20DC  0823               	movf	___lmul@product+3,w
 13753  20DD  00F4               	movwf	?___lmul+3
 13754  20DE  0822               	movf	___lmul@product+2,w
 13755  20DF  00F3               	movwf	?___lmul+2
 13756  20E0  0821               	movf	___lmul@product+1,w
 13757  20E1  00F2               	movwf	?___lmul+1
 13758  20E2  0820               	movf	___lmul@product,w
 13759  20E3  00F1               	movwf	?___lmul
 13760  20E4  0008               	return
 13761  20E5                     __end_of___lmul:	
 13762                           
 13763                           	psect	text51
 13764  2365                     __ptext51:	
 13765 ;; *************** function ___fltol *****************
 13766 ;; Defined at:
 13767 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 13768 ;; Parameters:    Size  Location     Type
 13769 ;;  f1              4    0[BANK1 ] unsigned long 
 13770 ;; Auto vars:     Size  Location     Type
 13771 ;;  exp1            1   11[COMMON] unsigned char 
 13772 ;;  sign1           1   10[COMMON] unsigned char 
 13773 ;; Return value:  Size  Location     Type
 13774 ;;                  4    0[BANK1 ] long 
 13775 ;; Registers used:
 13776 ;;		wreg, status,2, status,0
 13777 ;; Tracked objects:
 13778 ;;		On entry : 0/0
 13779 ;;		On exit  : 0/0
 13780 ;;		Unchanged: 0/0
 13781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13782 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13783 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13784 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13785 ;;      Totals:         2       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13786 ;;Total ram usage:       11 bytes
 13787 ;; Hardware stack levels used:    1
 13788 ;; Hardware stack levels required when called:    1
 13789 ;; This function calls:
 13790 ;;		Nothing
 13791 ;; This function is called by:
 13792 ;;		_updateVoltages
 13793 ;;		_updateCurrent
 13794 ;;		_updateTemperatures
 13795 ;;		_AFE_getSetShortCircuitCurrent
 13796 ;;		_AFE_getOverCurrentDischargeCurrent
 13797 ;; This function uses a non-reentrant model
 13798 ;;
 13799                           
 13800                           
 13801                           ;psect for function ___fltol
 13802  2365                     ___fltol:	
 13803                           
 13804                           ;incstack = 0
 13805                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 13806  2365  1003               	clrc
 13807  2366  0021               	movlb	1	; select bank1
 13808  2367  0D22               	rlf	(___fltol@f1+2)^(0+128),w
 13809  2368  0D23               	rlf	(___fltol@f1+3)^(0+128),w
 13810  2369  00A4               	movwf	??___fltol^(0+128)
 13811  236A  0824               	movf	??___fltol^(0+128),w
 13812  236B  00FB               	movwf	___fltol@exp1
 13813  236C  087B               	movf	___fltol@exp1,w
 13814  236D  1D03               	btfss	3,2
 13815  236E  2B78               	goto	l7155
 13816  236F                     l7151:	
 13817  236F  3000               	movlw	0
 13818  2370  00A3               	movwf	(?___fltol+3)^(0+128)
 13819  2371  3000               	movlw	0
 13820  2372  00A2               	movwf	(?___fltol+2)^(0+128)
 13821  2373  3000               	movlw	0
 13822  2374  00A1               	movwf	(?___fltol+1)^(0+128)
 13823  2375  3000               	movlw	0
 13824  2376  00A0               	movwf	?___fltol^(0+128)
 13825  2377  0008               	return
 13826  2378                     l7155:	
 13827  2378  0820               	movf	___fltol@f1^(0+128),w
 13828  2379  00A4               	movwf	??___fltol^(0+128)
 13829  237A  0821               	movf	(___fltol@f1+1)^(0+128),w
 13830  237B  00A5               	movwf	(??___fltol^(0+128)+1)
 13831  237C  0822               	movf	(___fltol@f1+2)^(0+128),w
 13832  237D  00A6               	movwf	(??___fltol^(0+128)+2)
 13833  237E  0823               	movf	(___fltol@f1+3)^(0+128),w
 13834  237F  00A7               	movwf	(??___fltol^(0+128)+3)
 13835  2380  301F               	movlw	31
 13836  2381                     u9665:	
 13837  2381  36A7               	lsrf	(??___fltol^(0+128)+3),f
 13838  2382  0CA6               	rrf	(??___fltol^(0+128)+2),f
 13839  2383  0CA5               	rrf	(??___fltol^(0+128)+1),f
 13840  2384  0CA4               	rrf	??___fltol^(0+128),f
 13841  2385  0B89               	decfsz	9,f
 13842  2386  2B81               	goto	u9665
 13843  2387  0824               	movf	??___fltol^(0+128),w
 13844  2388  00A8               	movwf	(??___fltol+4)^(0+128)
 13845  2389  0828               	movf	(??___fltol+4)^(0+128),w
 13846  238A  00FA               	movwf	___fltol@sign1
 13847  238B  17A2               	bsf	(___fltol@f1^(0+128)+2),7
 13848  238C  30FF               	movlw	255
 13849  238D  05A0               	andwf	___fltol@f1^(0+128),f
 13850  238E  30FF               	movlw	255
 13851  238F  05A1               	andwf	(___fltol@f1+1)^(0+128),f
 13852  2390  30FF               	movlw	255
 13853  2391  05A2               	andwf	(___fltol@f1+2)^(0+128),f
 13854  2392  3000               	movlw	0
 13855  2393  05A3               	andwf	(___fltol@f1+3)^(0+128),f
 13856  2394  3096               	movlw	150
 13857  2395  02FB               	subwf	___fltol@exp1,f
 13858  2396  1FFB               	btfss	___fltol@exp1,7
 13859  2397  2BAB               	goto	l7173
 13860  2398  087B               	movf	___fltol@exp1,w
 13861  2399  3A80               	xorlw	128
 13862  239A  3E97               	addlw	151
 13863  239B  1C03               	btfss	3,0
 13864  239C  2B6F               	goto	l7151
 13865  239D                     l7171:	
 13866  239D  3001               	movlw	1
 13867  239E                     u9695:	
 13868  239E  36A3               	lsrf	(___fltol@f1+3)^(0+128),f
 13869  239F  0CA2               	rrf	(___fltol@f1+2)^(0+128),f
 13870  23A0  0CA1               	rrf	(___fltol@f1+1)^(0+128),f
 13871  23A1  0CA0               	rrf	___fltol@f1^(0+128),f
 13872  23A2  0B89               	decfsz	9,f
 13873  23A3  2B9E               	goto	u9695
 13874  23A4  3001               	movlw	1
 13875  23A5  00A4               	movwf	??___fltol^(0+128)
 13876  23A6  0824               	movf	??___fltol^(0+128),w
 13877  23A7  07FB               	addwf	___fltol@exp1,f
 13878  23A8  1903               	btfsc	3,2
 13879  23A9  2BBC               	goto	l7181
 13880  23AA  2B9D               	goto	l7171
 13881  23AB                     l7173:	
 13882  23AB  3020               	movlw	32
 13883  23AC  027B               	subwf	___fltol@exp1,w
 13884  23AD  1803               	btfsc	3,0
 13885  23AE  2B6F               	goto	l7151
 13886  23AF                     l1041:	
 13887  23AF  087B               	movf	___fltol@exp1,w
 13888  23B0  1903               	btfsc	3,2
 13889  23B1  2BBC               	goto	l7181
 13890  23B2  3001               	movlw	1
 13891  23B3                     u9725:	
 13892  23B3  35A0               	lslf	___fltol@f1^(0+128),f
 13893  23B4  0DA1               	rlf	(___fltol@f1+1)^(0+128),f
 13894  23B5  0DA2               	rlf	(___fltol@f1+2)^(0+128),f
 13895  23B6  0DA3               	rlf	(___fltol@f1+3)^(0+128),f
 13896  23B7  0B89               	decfsz	9,f
 13897  23B8  2BB3               	goto	u9725
 13898  23B9  3001               	movlw	1
 13899  23BA  02FB               	subwf	___fltol@exp1,f
 13900  23BB  2BAF               	goto	l1041
 13901  23BC                     l7181:	
 13902  23BC  087A               	movf	___fltol@sign1,w
 13903  23BD  1903               	btfsc	3,2
 13904  23BE  0008               	return
 13905  23BF  09A0               	comf	___fltol@f1^(0+128),f
 13906  23C0  09A1               	comf	(___fltol@f1+1)^(0+128),f
 13907  23C1  09A2               	comf	(___fltol@f1+2)^(0+128),f
 13908  23C2  09A3               	comf	(___fltol@f1+3)^(0+128),f
 13909  23C3  0AA0               	incf	___fltol@f1^(0+128),f
 13910  23C4  1903               	skipnz
 13911  23C5  0AA1               	incf	(___fltol@f1+1)^(0+128),f
 13912  23C6  1903               	skipnz
 13913  23C7  0AA2               	incf	(___fltol@f1+2)^(0+128),f
 13914  23C8  1903               	skipnz
 13915  23C9  0AA3               	incf	(___fltol@f1+3)^(0+128),f
 13916  23CA  0008               	return
 13917  23CB                     __end_of___fltol:	
 13918                           
 13919                           	psect	text52
 13920  0335                     __ptext52:	
 13921 ;; *************** function ___flmul *****************
 13922 ;; Defined at:
 13923 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
 13924 ;; Parameters:    Size  Location     Type
 13925 ;;  b               4    6[BANK0 ] long 
 13926 ;;  a               4   10[BANK0 ] long 
 13927 ;; Auto vars:     Size  Location     Type
 13928 ;;  prod            4   26[BANK0 ] struct .
 13929 ;;  grs             4   21[BANK0 ] unsigned long 
 13930 ;;  temp            2   30[BANK0 ] struct .
 13931 ;;  bexp            1   25[BANK0 ] unsigned char 
 13932 ;;  aexp            1   20[BANK0 ] unsigned char 
 13933 ;;  sign            1   19[BANK0 ] unsigned char 
 13934 ;; Return value:  Size  Location     Type
 13935 ;;                  4    6[BANK0 ] unsigned char 
 13936 ;; Registers used:
 13937 ;;		wreg, status,2, status,0, pclath, cstack
 13938 ;; Tracked objects:
 13939 ;;		On entry : 0/0
 13940 ;;		On exit  : 0/0
 13941 ;;		Unchanged: 0/0
 13942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13943 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13944 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13945 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13946 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13947 ;;Total ram usage:       26 bytes
 13948 ;; Hardware stack levels used:    1
 13949 ;; Hardware stack levels required when called:    2
 13950 ;; This function calls:
 13951 ;;		__Umul8_16
 13952 ;; This function is called by:
 13953 ;;		_setShortCircuitProtection
 13954 ;;		_setOverCurrentDischargeProtection
 13955 ;;		_updateVoltages
 13956 ;;		_updateCurrent
 13957 ;;		_updateTemperatures
 13958 ;;		_logf
 13959 ;; This function uses a non-reentrant model
 13960 ;;
 13961                           
 13962                           
 13963                           ;psect for function ___flmul
 13964  0335                     ___flmul:	
 13965                           
 13966                           ;incstack = 0
 13967                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 13968  0335  0020               	movlb	0	; select bank0
 13969  0336  0829               	movf	___flmul@b+3,w
 13970  0337  3980               	andlw	128
 13971  0338  00AE               	movwf	??___flmul
 13972  0339  082E               	movf	??___flmul,w
 13973  033A  00B3               	movwf	___flmul@sign
 13974  033B  3529               	lslf	___flmul@b+3,w
 13975  033C  00AE               	movwf	??___flmul
 13976  033D  082E               	movf	??___flmul,w
 13977  033E  00B9               	movwf	___flmul@bexp
 13978  033F  1BA8               	btfsc	___flmul@b+2,7
 13979  0340  1439               	bsf	___flmul@bexp,0
 13980  0341  0839               	movf	___flmul@bexp,w
 13981  0342  1903               	btfsc	3,2
 13982  0343  2B51               	goto	l7535
 13983  0344  0A39               	incf	___flmul@bexp,w
 13984  0345  1D03               	btfss	3,2
 13985  0346  2B4F               	goto	l7533
 13986  0347  3000               	movlw	0
 13987  0348  00A9               	movwf	___flmul@b+3
 13988  0349  3000               	movlw	0
 13989  034A  00A8               	movwf	___flmul@b+2
 13990  034B  3000               	movlw	0
 13991  034C  00A7               	movwf	___flmul@b+1
 13992  034D  3000               	movlw	0
 13993  034E  00A6               	movwf	___flmul@b
 13994  034F                     l7533:	
 13995  034F  17A8               	bsf	___flmul@b+2,7
 13996  0350  2B59               	goto	l7537
 13997  0351                     l7535:	
 13998  0351  3000               	movlw	0
 13999  0352  00A9               	movwf	___flmul@b+3
 14000  0353  3000               	movlw	0
 14001  0354  00A8               	movwf	___flmul@b+2
 14002  0355  3000               	movlw	0
 14003  0356  00A7               	movwf	___flmul@b+1
 14004  0357  3000               	movlw	0
 14005  0358  00A6               	movwf	___flmul@b
 14006  0359                     l7537:	
 14007  0359  082D               	movf	___flmul@a+3,w
 14008  035A  3980               	andlw	128
 14009  035B  00AE               	movwf	??___flmul
 14010  035C  082E               	movf	??___flmul,w
 14011  035D  06B3               	xorwf	___flmul@sign,f
 14012  035E  352D               	lslf	___flmul@a+3,w
 14013  035F  00AE               	movwf	??___flmul
 14014  0360  082E               	movf	??___flmul,w
 14015  0361  00B4               	movwf	___flmul@aexp
 14016  0362  1BAC               	btfsc	___flmul@a+2,7
 14017  0363  1434               	bsf	___flmul@aexp,0
 14018  0364  0834               	movf	___flmul@aexp,w
 14019  0365  1903               	btfsc	3,2
 14020  0366  2B74               	goto	l7553
 14021  0367  0A34               	incf	___flmul@aexp,w
 14022  0368  1D03               	btfss	3,2
 14023  0369  2B72               	goto	l7551
 14024  036A  3000               	movlw	0
 14025  036B  00AD               	movwf	___flmul@a+3
 14026  036C  3000               	movlw	0
 14027  036D  00AC               	movwf	___flmul@a+2
 14028  036E  3000               	movlw	0
 14029  036F  00AB               	movwf	___flmul@a+1
 14030  0370  3000               	movlw	0
 14031  0371  00AA               	movwf	___flmul@a
 14032  0372                     l7551:	
 14033  0372  17AC               	bsf	___flmul@a+2,7
 14034  0373  2B7C               	goto	l7555
 14035  0374                     l7553:	
 14036  0374  3000               	movlw	0
 14037  0375  00AD               	movwf	___flmul@a+3
 14038  0376  3000               	movlw	0
 14039  0377  00AC               	movwf	___flmul@a+2
 14040  0378  3000               	movlw	0
 14041  0379  00AB               	movwf	___flmul@a+1
 14042  037A  3000               	movlw	0
 14043  037B  00AA               	movwf	___flmul@a
 14044  037C                     l7555:	
 14045  037C  0834               	movf	___flmul@aexp,w
 14046  037D  1D03               	btfss	3,2
 14047  037E  0839               	movf	___flmul@bexp,w
 14048  037F  1D03               	btfss	3,2
 14049  0380  2B8A               	goto	l7563
 14050  0381  3000               	movlw	0
 14051  0382  00A9               	movwf	?___flmul+3
 14052  0383  3000               	movlw	0
 14053  0384  00A8               	movwf	?___flmul+2
 14054  0385  3000               	movlw	0
 14055  0386  00A7               	movwf	?___flmul+1
 14056  0387  3000               	movlw	0
 14057  0388  00A6               	movwf	?___flmul
 14058  0389  0008               	return
 14059  038A                     l7563:	
 14060  038A  0826               	movf	___flmul@b,w
 14061  038B  00AE               	movwf	??___flmul
 14062  038C  082E               	movf	??___flmul,w
 14063  038D  00F1               	movwf	__Umul8_16@multiplicand
 14064  038E  082C               	movf	___flmul@a+2,w
 14065  038F  31AF  279E  3183   	fcall	__Umul8_16
 14066  0392  0872               	movf	?__Umul8_16+1,w
 14067  0393  0020               	movlb	0	; select bank0
 14068  0394  00BF               	movwf	___flmul@temp+1
 14069  0395  0871               	movf	?__Umul8_16,w
 14070  0396  00BE               	movwf	___flmul@temp
 14071  0397  083E               	movf	___flmul@temp,w
 14072  0398  00AE               	movwf	??___flmul
 14073  0399  01AF               	clrf	??___flmul+1
 14074  039A  01B0               	clrf	??___flmul+2
 14075  039B  01B1               	clrf	??___flmul+3
 14076  039C  0831               	movf	??___flmul+3,w
 14077  039D  00B8               	movwf	___flmul@grs+3
 14078  039E  0830               	movf	??___flmul+2,w
 14079  039F  00B7               	movwf	___flmul@grs+2
 14080  03A0  082F               	movf	??___flmul+1,w
 14081  03A1  00B6               	movwf	___flmul@grs+1
 14082  03A2  082E               	movf	??___flmul,w
 14083  03A3  00B5               	movwf	___flmul@grs
 14084  03A4  083F               	movf	___flmul@temp+1,w
 14085  03A5  00AE               	movwf	??___flmul
 14086  03A6  01AF               	clrf	??___flmul+1
 14087  03A7  01B0               	clrf	??___flmul+2
 14088  03A8  01B1               	clrf	??___flmul+3
 14089  03A9  0831               	movf	??___flmul+3,w
 14090  03AA  00BD               	movwf	___flmul@prod+3
 14091  03AB  0830               	movf	??___flmul+2,w
 14092  03AC  00BC               	movwf	___flmul@prod+2
 14093  03AD  082F               	movf	??___flmul+1,w
 14094  03AE  00BB               	movwf	___flmul@prod+1
 14095  03AF  082E               	movf	??___flmul,w
 14096  03B0  00BA               	movwf	___flmul@prod
 14097  03B1  0827               	movf	___flmul@b+1,w
 14098  03B2  00AE               	movwf	??___flmul
 14099  03B3  082E               	movf	??___flmul,w
 14100  03B4  00F1               	movwf	__Umul8_16@multiplicand
 14101  03B5  082B               	movf	___flmul@a+1,w
 14102  03B6  31AF  279E  3183   	fcall	__Umul8_16
 14103  03B9  0872               	movf	?__Umul8_16+1,w
 14104  03BA  0020               	movlb	0	; select bank0
 14105  03BB  00BF               	movwf	___flmul@temp+1
 14106  03BC  0871               	movf	?__Umul8_16,w
 14107  03BD  00BE               	movwf	___flmul@temp
 14108  03BE  083E               	movf	___flmul@temp,w
 14109  03BF  00AE               	movwf	??___flmul
 14110  03C0  01AF               	clrf	??___flmul+1
 14111  03C1  01B0               	clrf	??___flmul+2
 14112  03C2  01B1               	clrf	??___flmul+3
 14113  03C3  082E               	movf	??___flmul,w
 14114  03C4  07B5               	addwf	___flmul@grs,f
 14115  03C5  082F               	movf	??___flmul+1,w
 14116  03C6  3DB6               	addwfc	___flmul@grs+1,f
 14117  03C7  0830               	movf	??___flmul+2,w
 14118  03C8  3DB7               	addwfc	___flmul@grs+2,f
 14119  03C9  0831               	movf	??___flmul+3,w
 14120  03CA  3DB8               	addwfc	___flmul@grs+3,f
 14121  03CB  083F               	movf	___flmul@temp+1,w
 14122  03CC  00AE               	movwf	??___flmul
 14123  03CD  01AF               	clrf	??___flmul+1
 14124  03CE  01B0               	clrf	??___flmul+2
 14125  03CF  01B1               	clrf	??___flmul+3
 14126  03D0  082E               	movf	??___flmul,w
 14127  03D1  07BA               	addwf	___flmul@prod,f
 14128  03D2  082F               	movf	??___flmul+1,w
 14129  03D3  3DBB               	addwfc	___flmul@prod+1,f
 14130  03D4  0830               	movf	??___flmul+2,w
 14131  03D5  3DBC               	addwfc	___flmul@prod+2,f
 14132  03D6  0831               	movf	??___flmul+3,w
 14133  03D7  3DBD               	addwfc	___flmul@prod+3,f
 14134  03D8  0828               	movf	___flmul@b+2,w
 14135  03D9  00AE               	movwf	??___flmul
 14136  03DA  082E               	movf	??___flmul,w
 14137  03DB  00F1               	movwf	__Umul8_16@multiplicand
 14138  03DC  082A               	movf	___flmul@a,w
 14139  03DD  31AF  279E  3183   	fcall	__Umul8_16
 14140  03E0  0872               	movf	?__Umul8_16+1,w
 14141  03E1  0020               	movlb	0	; select bank0
 14142  03E2  00BF               	movwf	___flmul@temp+1
 14143  03E3  0871               	movf	?__Umul8_16,w
 14144  03E4  00BE               	movwf	___flmul@temp
 14145  03E5  083E               	movf	___flmul@temp,w
 14146  03E6  00AE               	movwf	??___flmul
 14147  03E7  01AF               	clrf	??___flmul+1
 14148  03E8  01B0               	clrf	??___flmul+2
 14149  03E9  01B1               	clrf	??___flmul+3
 14150  03EA  082E               	movf	??___flmul,w
 14151  03EB  07B5               	addwf	___flmul@grs,f
 14152  03EC  082F               	movf	??___flmul+1,w
 14153  03ED  3DB6               	addwfc	___flmul@grs+1,f
 14154  03EE  0830               	movf	??___flmul+2,w
 14155  03EF  3DB7               	addwfc	___flmul@grs+2,f
 14156  03F0  0831               	movf	??___flmul+3,w
 14157  03F1  3DB8               	addwfc	___flmul@grs+3,f
 14158  03F2  083F               	movf	___flmul@temp+1,w
 14159  03F3  00AE               	movwf	??___flmul
 14160  03F4  01AF               	clrf	??___flmul+1
 14161  03F5  01B0               	clrf	??___flmul+2
 14162  03F6  01B1               	clrf	??___flmul+3
 14163  03F7  082E               	movf	??___flmul,w
 14164  03F8  07BA               	addwf	___flmul@prod,f
 14165  03F9  082F               	movf	??___flmul+1,w
 14166  03FA  3DBB               	addwfc	___flmul@prod+1,f
 14167  03FB  0830               	movf	??___flmul+2,w
 14168  03FC  3DBC               	addwfc	___flmul@prod+2,f
 14169  03FD  0831               	movf	??___flmul+3,w
 14170  03FE  3DBD               	addwfc	___flmul@prod+3,f
 14171  03FF  3008               	movlw	8
 14172  0400                     u10555:	
 14173  0400  35B5               	lslf	___flmul@grs,f
 14174  0401  0DB6               	rlf	___flmul@grs+1,f
 14175  0402  0DB7               	rlf	___flmul@grs+2,f
 14176  0403  0DB8               	rlf	___flmul@grs+3,f
 14177  0404  0B89               	decfsz	9,f
 14178  0405  2C00               	goto	u10555
 14179  0406  0827               	movf	___flmul@b+1,w
 14180  0407  00AE               	movwf	??___flmul
 14181  0408  082E               	movf	??___flmul,w
 14182  0409  00F1               	movwf	__Umul8_16@multiplicand
 14183  040A  082A               	movf	___flmul@a,w
 14184  040B  31AF  279E  3183   	fcall	__Umul8_16
 14185  040E  0872               	movf	?__Umul8_16+1,w
 14186  040F  0020               	movlb	0	; select bank0
 14187  0410  00BF               	movwf	___flmul@temp+1
 14188  0411  0871               	movf	?__Umul8_16,w
 14189  0412  00BE               	movwf	___flmul@temp
 14190  0413  083E               	movf	___flmul@temp,w
 14191  0414  07B5               	addwf	___flmul@grs,f
 14192  0415  083F               	movf	___flmul@temp+1,w
 14193  0416  3DB6               	addwfc	___flmul@grs+1,f
 14194  0417  3000               	movlw	0
 14195  0418  3DB7               	addwfc	___flmul@grs+2,f
 14196  0419  3DB8               	addwfc	___flmul@grs+3,f
 14197  041A  0826               	movf	___flmul@b,w
 14198  041B  00AE               	movwf	??___flmul
 14199  041C  082E               	movf	??___flmul,w
 14200  041D  00F1               	movwf	__Umul8_16@multiplicand
 14201  041E  082B               	movf	___flmul@a+1,w
 14202  041F  31AF  279E  3183   	fcall	__Umul8_16
 14203  0422  0872               	movf	?__Umul8_16+1,w
 14204  0423  0020               	movlb	0	; select bank0
 14205  0424  00BF               	movwf	___flmul@temp+1
 14206  0425  0871               	movf	?__Umul8_16,w
 14207  0426  00BE               	movwf	___flmul@temp
 14208  0427  083E               	movf	___flmul@temp,w
 14209  0428  07B5               	addwf	___flmul@grs,f
 14210  0429  083F               	movf	___flmul@temp+1,w
 14211  042A  3DB6               	addwfc	___flmul@grs+1,f
 14212  042B  3000               	movlw	0
 14213  042C  3DB7               	addwfc	___flmul@grs+2,f
 14214  042D  3DB8               	addwfc	___flmul@grs+3,f
 14215  042E  3008               	movlw	8
 14216  042F                     u10565:	
 14217  042F  35B5               	lslf	___flmul@grs,f
 14218  0430  0DB6               	rlf	___flmul@grs+1,f
 14219  0431  0DB7               	rlf	___flmul@grs+2,f
 14220  0432  0DB8               	rlf	___flmul@grs+3,f
 14221  0433  0B89               	decfsz	9,f
 14222  0434  2C2F               	goto	u10565
 14223  0435  0826               	movf	___flmul@b,w
 14224  0436  00AE               	movwf	??___flmul
 14225  0437  082E               	movf	??___flmul,w
 14226  0438  00F1               	movwf	__Umul8_16@multiplicand
 14227  0439  082A               	movf	___flmul@a,w
 14228  043A  31AF  279E  3183   	fcall	__Umul8_16
 14229  043D  0872               	movf	?__Umul8_16+1,w
 14230  043E  0020               	movlb	0	; select bank0
 14231  043F  00BF               	movwf	___flmul@temp+1
 14232  0440  0871               	movf	?__Umul8_16,w
 14233  0441  00BE               	movwf	___flmul@temp
 14234  0442  083E               	movf	___flmul@temp,w
 14235  0443  07B5               	addwf	___flmul@grs,f
 14236  0444  083F               	movf	___flmul@temp+1,w
 14237  0445  3DB6               	addwfc	___flmul@grs+1,f
 14238  0446  3000               	movlw	0
 14239  0447  3DB7               	addwfc	___flmul@grs+2,f
 14240  0448  3DB8               	addwfc	___flmul@grs+3,f
 14241  0449  0827               	movf	___flmul@b+1,w
 14242  044A  00AE               	movwf	??___flmul
 14243  044B  082E               	movf	??___flmul,w
 14244  044C  00F1               	movwf	__Umul8_16@multiplicand
 14245  044D  082C               	movf	___flmul@a+2,w
 14246  044E  31AF  279E  3183   	fcall	__Umul8_16
 14247  0451  0872               	movf	?__Umul8_16+1,w
 14248  0452  0020               	movlb	0	; select bank0
 14249  0453  00BF               	movwf	___flmul@temp+1
 14250  0454  0871               	movf	?__Umul8_16,w
 14251  0455  00BE               	movwf	___flmul@temp
 14252  0456  083E               	movf	___flmul@temp,w
 14253  0457  07BA               	addwf	___flmul@prod,f
 14254  0458  083F               	movf	___flmul@temp+1,w
 14255  0459  3DBB               	addwfc	___flmul@prod+1,f
 14256  045A  3000               	movlw	0
 14257  045B  3DBC               	addwfc	___flmul@prod+2,f
 14258  045C  3DBD               	addwfc	___flmul@prod+3,f
 14259  045D  0828               	movf	___flmul@b+2,w
 14260  045E  00AE               	movwf	??___flmul
 14261  045F  082E               	movf	??___flmul,w
 14262  0460  00F1               	movwf	__Umul8_16@multiplicand
 14263  0461  082B               	movf	___flmul@a+1,w
 14264  0462  31AF  279E  3183   	fcall	__Umul8_16
 14265  0465  0872               	movf	?__Umul8_16+1,w
 14266  0466  0020               	movlb	0	; select bank0
 14267  0467  00BF               	movwf	___flmul@temp+1
 14268  0468  0871               	movf	?__Umul8_16,w
 14269  0469  00BE               	movwf	___flmul@temp
 14270  046A  083E               	movf	___flmul@temp,w
 14271  046B  07BA               	addwf	___flmul@prod,f
 14272  046C  083F               	movf	___flmul@temp+1,w
 14273  046D  3DBB               	addwfc	___flmul@prod+1,f
 14274  046E  3000               	movlw	0
 14275  046F  3DBC               	addwfc	___flmul@prod+2,f
 14276  0470  3DBD               	addwfc	___flmul@prod+3,f
 14277  0471  0828               	movf	___flmul@b+2,w
 14278  0472  00AE               	movwf	??___flmul
 14279  0473  082E               	movf	??___flmul,w
 14280  0474  00F1               	movwf	__Umul8_16@multiplicand
 14281  0475  082C               	movf	___flmul@a+2,w
 14282  0476  31AF  279E  3183   	fcall	__Umul8_16
 14283  0479  0872               	movf	?__Umul8_16+1,w
 14284  047A  0020               	movlb	0	; select bank0
 14285  047B  00BF               	movwf	___flmul@temp+1
 14286  047C  0871               	movf	?__Umul8_16,w
 14287  047D  00BE               	movwf	___flmul@temp
 14288  047E  083E               	movf	___flmul@temp,w
 14289  047F  00AE               	movwf	??___flmul
 14290  0480  083F               	movf	___flmul@temp+1,w
 14291  0481  00AF               	movwf	??___flmul+1
 14292  0482  01B0               	clrf	??___flmul+2
 14293  0483  01B1               	clrf	??___flmul+3
 14294  0484  3008               	movlw	8
 14295  0485                     u10575:	
 14296  0485  35AE               	lslf	??___flmul,f
 14297  0486  0DAF               	rlf	??___flmul+1,f
 14298  0487  0DB0               	rlf	??___flmul+2,f
 14299  0488  0DB1               	rlf	??___flmul+3,f
 14300  0489  0B89               	decfsz	9,f
 14301  048A  2C85               	goto	u10575
 14302  048B  082E               	movf	??___flmul,w
 14303  048C  07BA               	addwf	___flmul@prod,f
 14304  048D  082F               	movf	??___flmul+1,w
 14305  048E  3DBB               	addwfc	___flmul@prod+1,f
 14306  048F  0830               	movf	??___flmul+2,w
 14307  0490  3DBC               	addwfc	___flmul@prod+2,f
 14308  0491  0831               	movf	??___flmul+3,w
 14309  0492  3DBD               	addwfc	___flmul@prod+3,f
 14310  0493  0835               	movf	___flmul@grs,w
 14311  0494  00AE               	movwf	??___flmul
 14312  0495  0836               	movf	___flmul@grs+1,w
 14313  0496  00AF               	movwf	??___flmul+1
 14314  0497  0837               	movf	___flmul@grs+2,w
 14315  0498  00B0               	movwf	??___flmul+2
 14316  0499  0838               	movf	___flmul@grs+3,w
 14317  049A  00B1               	movwf	??___flmul+3
 14318  049B  3018               	movlw	24
 14319  049C                     u10585:	
 14320  049C  36B1               	lsrf	??___flmul+3,f
 14321  049D  0CB0               	rrf	??___flmul+2,f
 14322  049E  0CAF               	rrf	??___flmul+1,f
 14323  049F  0CAE               	rrf	??___flmul,f
 14324  04A0  0B89               	decfsz	9,f
 14325  04A1  2C9C               	goto	u10585
 14326  04A2  082E               	movf	??___flmul,w
 14327  04A3  07BA               	addwf	___flmul@prod,f
 14328  04A4  082F               	movf	??___flmul+1,w
 14329  04A5  3DBB               	addwfc	___flmul@prod+1,f
 14330  04A6  0830               	movf	??___flmul+2,w
 14331  04A7  3DBC               	addwfc	___flmul@prod+2,f
 14332  04A8  0831               	movf	??___flmul+3,w
 14333  04A9  3DBD               	addwfc	___flmul@prod+3,f
 14334  04AA  3008               	movlw	8
 14335  04AB                     u10595:	
 14336  04AB  35B5               	lslf	___flmul@grs,f
 14337  04AC  0DB6               	rlf	___flmul@grs+1,f
 14338  04AD  0DB7               	rlf	___flmul@grs+2,f
 14339  04AE  0DB8               	rlf	___flmul@grs+3,f
 14340  04AF  0B89               	decfsz	9,f
 14341  04B0  2CAB               	goto	u10595
 14342  04B1  0839               	movf	___flmul@bexp,w
 14343  04B2  0734               	addwf	___flmul@aexp,w
 14344  04B3  00AE               	movwf	??___flmul
 14345  04B4  01AF               	clrf	??___flmul+1
 14346  04B5  0DAF               	rlf	??___flmul+1,f
 14347  04B6  082E               	movf	??___flmul,w
 14348  04B7  3E82               	addlw	130
 14349  04B8  00BE               	movwf	___flmul@temp
 14350  04B9  30FF               	movlw	255
 14351  04BA  3D2F               	addwfc	??___flmul+1,w
 14352  04BB  00BF               	movwf	___flmul@temp+1
 14353  04BC                     l7615:	
 14354  04BC  1BBC               	btfsc	___flmul@prod+2,7
 14355  04BD  2CD3               	goto	l7617
 14356  04BE  3001               	movlw	1
 14357  04BF                     u10605:	
 14358  04BF  35BA               	lslf	___flmul@prod,f
 14359  04C0  0DBB               	rlf	___flmul@prod+1,f
 14360  04C1  0DBC               	rlf	___flmul@prod+2,f
 14361  04C2  0DBD               	rlf	___flmul@prod+3,f
 14362  04C3  0B89               	decfsz	9,f
 14363  04C4  2CBF               	goto	u10605
 14364  04C5  1BB8               	btfsc	___flmul@grs+3,7
 14365  04C6  143A               	bsf	___flmul@prod,0
 14366  04C7  3001               	movlw	1
 14367  04C8                     u10625:	
 14368  04C8  35B5               	lslf	___flmul@grs,f
 14369  04C9  0DB6               	rlf	___flmul@grs+1,f
 14370  04CA  0DB7               	rlf	___flmul@grs+2,f
 14371  04CB  0DB8               	rlf	___flmul@grs+3,f
 14372  04CC  0B89               	decfsz	9,f
 14373  04CD  2CC8               	goto	u10625
 14374  04CE  30FF               	movlw	255
 14375  04CF  07BE               	addwf	___flmul@temp,f
 14376  04D0  30FF               	movlw	255
 14377  04D1  3DBF               	addwfc	___flmul@temp+1,f
 14378  04D2  2CBC               	goto	l7615
 14379  04D3                     l7617:	
 14380  04D3  01B4               	clrf	___flmul@aexp
 14381  04D4  1FB8               	btfss	___flmul@grs+3,7
 14382  04D5  2CEC               	goto	l7627
 14383  04D6  30FF               	movlw	255
 14384  04D7  0535               	andwf	___flmul@grs,w
 14385  04D8  00AE               	movwf	??___flmul
 14386  04D9  30FF               	movlw	255
 14387  04DA  0536               	andwf	___flmul@grs+1,w
 14388  04DB  00AF               	movwf	??___flmul+1
 14389  04DC  30FF               	movlw	255
 14390  04DD  0537               	andwf	___flmul@grs+2,w
 14391  04DE  00B0               	movwf	??___flmul+2
 14392  04DF  307F               	movlw	127
 14393  04E0  0538               	andwf	___flmul@grs+3,w
 14394  04E1  00B1               	movwf	??___flmul+3
 14395  04E2  0831               	movf	??___flmul+3,w
 14396  04E3  0430               	iorwf	??___flmul+2,w
 14397  04E4  042F               	iorwf	??___flmul+1,w
 14398  04E5  042E               	iorwf	??___flmul,w
 14399  04E6  1903               	skipnz
 14400  04E7  183A               	btfsc	___flmul@prod,0
 14401  04E8  2CEA               	goto	l7623
 14402  04E9  2CEC               	goto	l7627
 14403  04EA                     l7623:	
 14404  04EA  01B4               	clrf	___flmul@aexp
 14405  04EB  0AB4               	incf	___flmul@aexp,f
 14406  04EC                     l7627:	
 14407  04EC  0834               	movf	___flmul@aexp,w
 14408  04ED  1903               	btfsc	3,2
 14409  04EE  2D15               	goto	l7637
 14410  04EF  3001               	movlw	1
 14411  04F0  07BA               	addwf	___flmul@prod,f
 14412  04F1  3000               	movlw	0
 14413  04F2  3DBB               	addwfc	___flmul@prod+1,f
 14414  04F3  3000               	movlw	0
 14415  04F4  3DBC               	addwfc	___flmul@prod+2,f
 14416  04F5  3000               	movlw	0
 14417  04F6  3DBD               	addwfc	___flmul@prod+3,f
 14418  04F7  1C3D               	btfss	___flmul@prod+3,0
 14419  04F8  2D15               	goto	l7637
 14420  04F9  083A               	movf	___flmul@prod,w
 14421  04FA  00AE               	movwf	??___flmul
 14422  04FB  083B               	movf	___flmul@prod+1,w
 14423  04FC  00AF               	movwf	??___flmul+1
 14424  04FD  083C               	movf	___flmul@prod+2,w
 14425  04FE  00B0               	movwf	??___flmul+2
 14426  04FF  083D               	movf	___flmul@prod+3,w
 14427  0500  00B1               	movwf	??___flmul+3
 14428  0501  3001               	movlw	1
 14429  0502  00B2               	movwf	??___flmul+4
 14430  0503                     u10695:	
 14431  0503  37B1               	asrf	??___flmul+3,f
 14432  0504  0CB0               	rrf	??___flmul+2,f
 14433  0505  0CAF               	rrf	??___flmul+1,f
 14434  0506  0CAE               	rrf	??___flmul,f
 14435  0507  0BB2               	decfsz	??___flmul+4,f
 14436  0508  2D03               	goto	u10695
 14437  0509  0831               	movf	??___flmul+3,w
 14438  050A  00BD               	movwf	___flmul@prod+3
 14439  050B  0830               	movf	??___flmul+2,w
 14440  050C  00BC               	movwf	___flmul@prod+2
 14441  050D  082F               	movf	??___flmul+1,w
 14442  050E  00BB               	movwf	___flmul@prod+1
 14443  050F  082E               	movf	??___flmul,w
 14444  0510  00BA               	movwf	___flmul@prod
 14445  0511  3001               	movlw	1
 14446  0512  07BE               	addwf	___flmul@temp,f
 14447  0513  3000               	movlw	0
 14448  0514  3DBF               	addwfc	___flmul@temp+1,f
 14449  0515                     l7637:	
 14450  0515  083F               	movf	___flmul@temp+1,w
 14451  0516  3A80               	xorlw	128
 14452  0517  00AE               	movwf	??___flmul
 14453  0518  3080               	movlw	128
 14454  0519  022E               	subwf	??___flmul,w
 14455  051A  1D03               	skipz
 14456  051B  2D1E               	goto	u10705
 14457  051C  30FF               	movlw	255
 14458  051D  023E               	subwf	___flmul@temp,w
 14459  051E                     u10705:	
 14460  051E  1C03               	skipc
 14461  051F  2D2A               	goto	l7641
 14462  0520  307F               	movlw	127
 14463  0521  0020               	movlb	0	; select bank0
 14464  0522  00BD               	movwf	___flmul@prod+3
 14465  0523  3080               	movlw	128
 14466  0524  00BC               	movwf	___flmul@prod+2
 14467  0525  3000               	movlw	0
 14468  0526  00BB               	movwf	___flmul@prod+1
 14469  0527  3000               	movlw	0
 14470  0528  00BA               	movwf	___flmul@prod
 14471  0529  2D54               	goto	l1249
 14472  052A                     l7641:	
 14473  052A  0020               	movlb	0	; select bank0
 14474  052B  083F               	movf	___flmul@temp+1,w
 14475  052C  3A80               	xorlw	128
 14476  052D  00AE               	movwf	??___flmul
 14477  052E  3080               	movlw	128
 14478  052F  022E               	subwf	??___flmul,w
 14479  0530  1D03               	skipz
 14480  0531  2D34               	goto	u10715
 14481  0532  3001               	movlw	1
 14482  0533  023E               	subwf	___flmul@temp,w
 14483  0534                     u10715:	
 14484  0534  1803               	skipnc
 14485  0535  2D41               	goto	l7647
 14486  0536  3000               	movlw	0
 14487  0537  0020               	movlb	0	; select bank0
 14488  0538  00BD               	movwf	___flmul@prod+3
 14489  0539  3000               	movlw	0
 14490  053A  00BC               	movwf	___flmul@prod+2
 14491  053B  3000               	movlw	0
 14492  053C  00BB               	movwf	___flmul@prod+1
 14493  053D  3000               	movlw	0
 14494  053E  00BA               	movwf	___flmul@prod
 14495  053F  01B3               	clrf	___flmul@sign
 14496  0540  2D54               	goto	l1249
 14497  0541                     l7647:	
 14498  0541  0020               	movlb	0	; select bank0
 14499  0542  083E               	movf	___flmul@temp,w
 14500  0543  00AE               	movwf	??___flmul
 14501  0544  082E               	movf	??___flmul,w
 14502  0545  00B9               	movwf	___flmul@bexp
 14503  0546  30FF               	movlw	255
 14504  0547  05BA               	andwf	___flmul@prod,f
 14505  0548  30FF               	movlw	255
 14506  0549  05BB               	andwf	___flmul@prod+1,f
 14507  054A  307F               	movlw	127
 14508  054B  05BC               	andwf	___flmul@prod+2,f
 14509  054C  3000               	movlw	0
 14510  054D  05BD               	andwf	___flmul@prod+3,f
 14511  054E  1839               	btfsc	___flmul@bexp,0
 14512  054F  17BC               	bsf	___flmul@prod+2,7
 14513  0550  3639               	lsrf	___flmul@bexp,w
 14514  0551  00AE               	movwf	??___flmul
 14515  0552  082E               	movf	??___flmul,w
 14516  0553  00BD               	movwf	___flmul@prod+3
 14517  0554                     l1249:	
 14518  0554  0833               	movf	___flmul@sign,w
 14519  0555  00AE               	movwf	??___flmul
 14520  0556  082E               	movf	??___flmul,w
 14521  0557  04BD               	iorwf	___flmul@prod+3,f
 14522  0558  083D               	movf	___flmul@prod+3,w
 14523  0559  00A9               	movwf	?___flmul+3
 14524  055A  083C               	movf	___flmul@prod+2,w
 14525  055B  00A8               	movwf	?___flmul+2
 14526  055C  083B               	movf	___flmul@prod+1,w
 14527  055D  00A7               	movwf	?___flmul+1
 14528  055E  083A               	movf	___flmul@prod,w
 14529  055F  00A6               	movwf	?___flmul
 14530  0560  0008               	return
 14531  0561                     __end_of___flmul:	
 14532                           
 14533                           	psect	text53
 14534  2F9E                     __ptext53:	
 14535 ;; *************** function __Umul8_16 *****************
 14536 ;; Defined at:
 14537 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
 14538 ;; Parameters:    Size  Location     Type
 14539 ;;  multiplier      1    wreg     unsigned char 
 14540 ;;  multiplicand    1    1[COMMON] unsigned char 
 14541 ;; Auto vars:     Size  Location     Type
 14542 ;;  multiplier      1    9[COMMON] unsigned char 
 14543 ;;  word_mpld       2    7[COMMON] unsigned int 
 14544 ;;  product         2    5[COMMON] unsigned int 
 14545 ;; Return value:  Size  Location     Type
 14546 ;;                  2    1[COMMON] unsigned int 
 14547 ;; Registers used:
 14548 ;;		wreg, status,2, status,0
 14549 ;; Tracked objects:
 14550 ;;		On entry : 0/0
 14551 ;;		On exit  : 0/0
 14552 ;;		Unchanged: 0/0
 14553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14554 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14555 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14556 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14557 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14558 ;;Total ram usage:        9 bytes
 14559 ;; Hardware stack levels used:    1
 14560 ;; Hardware stack levels required when called:    1
 14561 ;; This function calls:
 14562 ;;		Nothing
 14563 ;; This function is called by:
 14564 ;;		___flmul
 14565 ;; This function uses a non-reentrant model
 14566 ;;
 14567                           
 14568                           
 14569                           ;psect for function __Umul8_16
 14570  2F9E                     __Umul8_16:	
 14571                           
 14572                           ;incstack = 0
 14573                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 14574                           ;__Umul8_16@multiplier stored from wreg
 14575  2F9E  00F9               	movwf	__Umul8_16@multiplier
 14576  2F9F  01F5               	clrf	__Umul8_16@product
 14577  2FA0  01F6               	clrf	__Umul8_16@product+1
 14578  2FA1  0871               	movf	__Umul8_16@multiplicand,w
 14579  2FA2  00F3               	movwf	??__Umul8_16
 14580  2FA3  01F4               	clrf	??__Umul8_16+1
 14581  2FA4  0873               	movf	??__Umul8_16,w
 14582  2FA5  00F7               	movwf	__Umul8_16@word_mpld
 14583  2FA6  0874               	movf	??__Umul8_16+1,w
 14584  2FA7  00F8               	movwf	__Umul8_16@word_mpld+1
 14585  2FA8                     l7033:	
 14586  2FA8  1C79               	btfss	__Umul8_16@multiplier,0
 14587  2FA9  2FAE               	goto	l1442
 14588  2FAA  0877               	movf	__Umul8_16@word_mpld,w
 14589  2FAB  07F5               	addwf	__Umul8_16@product,f
 14590  2FAC  0878               	movf	__Umul8_16@word_mpld+1,w
 14591  2FAD  3DF6               	addwfc	__Umul8_16@product+1,f
 14592  2FAE                     l1442:	
 14593  2FAE  3001               	movlw	1
 14594  2FAF                     u9435:	
 14595  2FAF  35F7               	lslf	__Umul8_16@word_mpld,f
 14596  2FB0  0DF8               	rlf	__Umul8_16@word_mpld+1,f
 14597  2FB1  0B89               	decfsz	9,f
 14598  2FB2  2FAF               	goto	u9435
 14599  2FB3  1003               	clrc
 14600  2FB4  0CF9               	rrf	__Umul8_16@multiplier,f
 14601  2FB5  0879               	movf	__Umul8_16@multiplier,w
 14602  2FB6  1D03               	btfss	3,2
 14603  2FB7  2FA8               	goto	l7033
 14604  2FB8  0876               	movf	__Umul8_16@product+1,w
 14605  2FB9  00F2               	movwf	?__Umul8_16+1
 14606  2FBA  0875               	movf	__Umul8_16@product,w
 14607  2FBB  00F1               	movwf	?__Umul8_16
 14608  2FBC  0008               	return
 14609  2FBD                     __end_of__Umul8_16:	
 14610                           
 14611                           	psect	text54
 14612  14DF                     __ptext54:	
 14613 ;; *************** function ___fldiv *****************
 14614 ;; Defined at:
 14615 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 14616 ;; Parameters:    Size  Location     Type
 14617 ;;  a               4   32[BANK0 ] unsigned int 
 14618 ;;  b               4   36[BANK0 ] unsigned int 
 14619 ;; Auto vars:     Size  Location     Type
 14620 ;;  grs             4   52[BANK0 ] unsigned long 
 14621 ;;  rem             4   45[BANK0 ] unsigned long 
 14622 ;;  new_exp         2   50[BANK0 ] int 
 14623 ;;  aexp            1   57[BANK0 ] unsigned char 
 14624 ;;  bexp            1   56[BANK0 ] unsigned char 
 14625 ;;  sign            1   49[BANK0 ] unsigned char 
 14626 ;; Return value:  Size  Location     Type
 14627 ;;                  4   32[BANK0 ] unsigned char 
 14628 ;; Registers used:
 14629 ;;		wreg, status,2, status,0
 14630 ;; Tracked objects:
 14631 ;;		On entry : 0/0
 14632 ;;		On exit  : 0/0
 14633 ;;		Unchanged: 0/0
 14634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14635 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14636 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14637 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14638 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14639 ;;Total ram usage:       26 bytes
 14640 ;; Hardware stack levels used:    1
 14641 ;; Hardware stack levels required when called:    1
 14642 ;; This function calls:
 14643 ;;		Nothing
 14644 ;; This function is called by:
 14645 ;;		_setShortCircuitProtection
 14646 ;;		_setOverCurrentDischargeProtection
 14647 ;;		_updateVoltages
 14648 ;;		_updateCurrent
 14649 ;;		_updateTemperatures
 14650 ;;		_AFE_getSetShortCircuitCurrent
 14651 ;;		_AFE_getOverCurrentDischargeCurrent
 14652 ;;		_logf
 14653 ;; This function uses a non-reentrant model
 14654 ;;
 14655                           
 14656                           
 14657                           ;psect for function ___fldiv
 14658  14DF                     ___fldiv:	
 14659                           
 14660                           ;incstack = 0
 14661                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 14662  14DF  0020               	movlb	0	; select bank0
 14663  14E0  0847               	movf	___fldiv@b+3,w
 14664  14E1  3980               	andlw	128
 14665  14E2  00C8               	movwf	??___fldiv
 14666  14E3  0848               	movf	??___fldiv,w
 14667  14E4  00D1               	movwf	___fldiv@sign
 14668  14E5  3547               	lslf	___fldiv@b+3,w
 14669  14E6  00C8               	movwf	??___fldiv
 14670  14E7  0848               	movf	??___fldiv,w
 14671  14E8  00D8               	movwf	___fldiv@bexp
 14672  14E9  1BC6               	btfsc	___fldiv@b+2,7
 14673  14EA  1458               	bsf	___fldiv@bexp,0
 14674  14EB  0858               	movf	___fldiv@bexp,w
 14675  14EC  1903               	btfsc	3,2
 14676  14ED  2CFC               	goto	l7397
 14677  14EE  0A58               	incf	___fldiv@bexp,w
 14678  14EF  1D03               	btfss	3,2
 14679  14F0  2CF9               	goto	l7393
 14680  14F1  3000               	movlw	0
 14681  14F2  00C7               	movwf	___fldiv@b+3
 14682  14F3  3000               	movlw	0
 14683  14F4  00C6               	movwf	___fldiv@b+2
 14684  14F5  3000               	movlw	0
 14685  14F6  00C5               	movwf	___fldiv@b+1
 14686  14F7  3000               	movlw	0
 14687  14F8  00C4               	movwf	___fldiv@b
 14688  14F9                     l7393:	
 14689  14F9  17C6               	bsf	___fldiv@b+2,7
 14690  14FA  01C7               	clrf	___fldiv@b+3
 14691  14FB  2D04               	goto	l7399
 14692  14FC                     l7397:	
 14693  14FC  3000               	movlw	0
 14694  14FD  00C7               	movwf	___fldiv@b+3
 14695  14FE  3000               	movlw	0
 14696  14FF  00C6               	movwf	___fldiv@b+2
 14697  1500  3000               	movlw	0
 14698  1501  00C5               	movwf	___fldiv@b+1
 14699  1502  3000               	movlw	0
 14700  1503  00C4               	movwf	___fldiv@b
 14701  1504                     l7399:	
 14702  1504  0843               	movf	___fldiv@a+3,w
 14703  1505  3980               	andlw	128
 14704  1506  00C8               	movwf	??___fldiv
 14705  1507  0848               	movf	??___fldiv,w
 14706  1508  06D1               	xorwf	___fldiv@sign,f
 14707  1509  3543               	lslf	___fldiv@a+3,w
 14708  150A  00C8               	movwf	??___fldiv
 14709  150B  0848               	movf	??___fldiv,w
 14710  150C  00D9               	movwf	___fldiv@aexp
 14711  150D  1BC2               	btfsc	___fldiv@a+2,7
 14712  150E  1459               	bsf	___fldiv@aexp,0
 14713  150F  0859               	movf	___fldiv@aexp,w
 14714  1510  1903               	btfsc	3,2
 14715  1511  2D20               	goto	l7417
 14716  1512  0A59               	incf	___fldiv@aexp,w
 14717  1513  1D03               	btfss	3,2
 14718  1514  2D1D               	goto	l7413
 14719  1515  3000               	movlw	0
 14720  1516  00C3               	movwf	___fldiv@a+3
 14721  1517  3000               	movlw	0
 14722  1518  00C2               	movwf	___fldiv@a+2
 14723  1519  3000               	movlw	0
 14724  151A  00C1               	movwf	___fldiv@a+1
 14725  151B  3000               	movlw	0
 14726  151C  00C0               	movwf	___fldiv@a
 14727  151D                     l7413:	
 14728  151D  17C2               	bsf	___fldiv@a+2,7
 14729  151E  01C3               	clrf	___fldiv@a+3
 14730  151F  2D28               	goto	l1197
 14731  1520                     l7417:	
 14732  1520  3000               	movlw	0
 14733  1521  00C3               	movwf	___fldiv@a+3
 14734  1522  3000               	movlw	0
 14735  1523  00C2               	movwf	___fldiv@a+2
 14736  1524  3000               	movlw	0
 14737  1525  00C1               	movwf	___fldiv@a+1
 14738  1526  3000               	movlw	0
 14739  1527  00C0               	movwf	___fldiv@a
 14740  1528                     l1197:	
 14741  1528  0843               	movf	___fldiv@a+3,w
 14742  1529  0442               	iorwf	___fldiv@a+2,w
 14743  152A  0441               	iorwf	___fldiv@a+1,w
 14744  152B  0440               	iorwf	___fldiv@a,w
 14745  152C  1D03               	skipz
 14746  152D  2D47               	goto	l7427
 14747  152E  3000               	movlw	0
 14748  152F  00C7               	movwf	___fldiv@b+3
 14749  1530  3000               	movlw	0
 14750  1531  00C6               	movwf	___fldiv@b+2
 14751  1532  3000               	movlw	0
 14752  1533  00C5               	movwf	___fldiv@b+1
 14753  1534  3000               	movlw	0
 14754  1535  00C4               	movwf	___fldiv@b
 14755  1536  3080               	movlw	128
 14756  1537  04C6               	iorwf	___fldiv@b+2,f
 14757  1538  307F               	movlw	127
 14758  1539  04C7               	iorwf	___fldiv@b+3,f
 14759  153A                     L4:	
 14760  153A  0851               	movf	___fldiv@sign,w
 14761  153B  00C8               	movwf	??___fldiv
 14762  153C  0848               	movf	??___fldiv,w
 14763  153D  04C7               	iorwf	___fldiv@b+3,f
 14764  153E  0847               	movf	___fldiv@b+3,w
 14765  153F  00C3               	movwf	?___fldiv+3
 14766  1540  0846               	movf	___fldiv@b+2,w
 14767  1541  00C2               	movwf	?___fldiv+2
 14768  1542  0845               	movf	___fldiv@b+1,w
 14769  1543  00C1               	movwf	?___fldiv+1
 14770  1544  0844               	movf	___fldiv@b,w
 14771  1545  00C0               	movwf	?___fldiv
 14772  1546  0008               	return
 14773  1547                     l7427:	
 14774  1547  0858               	movf	___fldiv@bexp,w
 14775  1548  1D03               	btfss	3,2
 14776  1549  2D53               	goto	l7433
 14777  154A  3000               	movlw	0
 14778  154B  00C3               	movwf	?___fldiv+3
 14779  154C  3000               	movlw	0
 14780  154D  00C2               	movwf	?___fldiv+2
 14781  154E  3000               	movlw	0
 14782  154F  00C1               	movwf	?___fldiv+1
 14783  1550  3000               	movlw	0
 14784  1551  00C0               	movwf	?___fldiv
 14785  1552  0008               	return
 14786  1553                     l7433:	
 14787  1553  0858               	movf	___fldiv@bexp,w
 14788  1554  00C8               	movwf	??___fldiv
 14789  1555  01C9               	clrf	??___fldiv+1
 14790  1556  0849               	movf	??___fldiv+1,w
 14791  1557  00CB               	movwf	??___fldiv+3
 14792  1558  0859               	movf	___fldiv@aexp,w
 14793  1559  0248               	subwf	??___fldiv,w
 14794  155A  00CA               	movwf	??___fldiv+2
 14795  155B  1C03               	skipc
 14796  155C  03CB               	decf	??___fldiv+3,f
 14797  155D  084A               	movf	??___fldiv+2,w
 14798  155E  3E7F               	addlw	127
 14799  155F  00D2               	movwf	___fldiv@new_exp
 14800  1560  3000               	movlw	0
 14801  1561  3D4B               	addwfc	??___fldiv+3,w
 14802  1562  00D3               	movwf	___fldiv@new_exp+1
 14803  1563  0847               	movf	___fldiv@b+3,w
 14804  1564  00D0               	movwf	___fldiv@rem+3
 14805  1565  0846               	movf	___fldiv@b+2,w
 14806  1566  00CF               	movwf	___fldiv@rem+2
 14807  1567  0845               	movf	___fldiv@b+1,w
 14808  1568  00CE               	movwf	___fldiv@rem+1
 14809  1569  0844               	movf	___fldiv@b,w
 14810  156A  00CD               	movwf	___fldiv@rem
 14811  156B  3000               	movlw	0
 14812  156C  00C7               	movwf	___fldiv@b+3
 14813  156D  3000               	movlw	0
 14814  156E  00C6               	movwf	___fldiv@b+2
 14815  156F  3000               	movlw	0
 14816  1570  00C5               	movwf	___fldiv@b+1
 14817  1571  3000               	movlw	0
 14818  1572  00C4               	movwf	___fldiv@b
 14819  1573  3000               	movlw	0
 14820  1574  00D7               	movwf	___fldiv@grs+3
 14821  1575  3000               	movlw	0
 14822  1576  00D6               	movwf	___fldiv@grs+2
 14823  1577  3000               	movlw	0
 14824  1578  00D5               	movwf	___fldiv@grs+1
 14825  1579  3000               	movlw	0
 14826  157A  00D4               	movwf	___fldiv@grs
 14827  157B  01D9               	clrf	___fldiv@aexp
 14828  157C                     l7461:	
 14829  157C  301A               	movlw	26
 14830  157D  0259               	subwf	___fldiv@aexp,w
 14831  157E  1803               	btfsc	3,0
 14832  157F  2DB8               	goto	l7463
 14833  1580  0859               	movf	___fldiv@aexp,w
 14834  1581  1903               	btfsc	3,2
 14835  1582  2D9A               	goto	l7453
 14836  1583  3001               	movlw	1
 14837  1584                     u10275:	
 14838  1584  35CD               	lslf	___fldiv@rem,f
 14839  1585  0DCE               	rlf	___fldiv@rem+1,f
 14840  1586  0DCF               	rlf	___fldiv@rem+2,f
 14841  1587  0DD0               	rlf	___fldiv@rem+3,f
 14842  1588  0B89               	decfsz	9,f
 14843  1589  2D84               	goto	u10275
 14844  158A  3001               	movlw	1
 14845  158B                     u10285:	
 14846  158B  35C4               	lslf	___fldiv@b,f
 14847  158C  0DC5               	rlf	___fldiv@b+1,f
 14848  158D  0DC6               	rlf	___fldiv@b+2,f
 14849  158E  0DC7               	rlf	___fldiv@b+3,f
 14850  158F  0B89               	decfsz	9,f
 14851  1590  2D8B               	goto	u10285
 14852  1591  1BD7               	btfsc	___fldiv@grs+3,7
 14853  1592  1444               	bsf	___fldiv@b,0
 14854  1593  3001               	movlw	1
 14855  1594                     u10305:	
 14856  1594  35D4               	lslf	___fldiv@grs,f
 14857  1595  0DD5               	rlf	___fldiv@grs+1,f
 14858  1596  0DD6               	rlf	___fldiv@grs+2,f
 14859  1597  0DD7               	rlf	___fldiv@grs+3,f
 14860  1598  0B89               	decfsz	9,f
 14861  1599  2D94               	goto	u10305
 14862  159A                     l7453:	
 14863  159A  0843               	movf	___fldiv@a+3,w
 14864  159B  0250               	subwf	___fldiv@rem+3,w
 14865  159C  1D03               	skipz
 14866  159D  2DA8               	goto	u10315
 14867  159E  0842               	movf	___fldiv@a+2,w
 14868  159F  024F               	subwf	___fldiv@rem+2,w
 14869  15A0  1D03               	skipz
 14870  15A1  2DA8               	goto	u10315
 14871  15A2  0841               	movf	___fldiv@a+1,w
 14872  15A3  024E               	subwf	___fldiv@rem+1,w
 14873  15A4  1D03               	skipz
 14874  15A5  2DA8               	goto	u10315
 14875  15A6  0840               	movf	___fldiv@a,w
 14876  15A7  024D               	subwf	___fldiv@rem,w
 14877  15A8                     u10315:	
 14878  15A8  1C03               	skipc
 14879  15A9  2DB3               	goto	l7459
 14880  15AA  1757               	bsf	___fldiv@grs+3,6
 14881  15AB  0840               	movf	___fldiv@a,w
 14882  15AC  02CD               	subwf	___fldiv@rem,f
 14883  15AD  0841               	movf	___fldiv@a+1,w
 14884  15AE  3BCE               	subwfb	___fldiv@rem+1,f
 14885  15AF  0842               	movf	___fldiv@a+2,w
 14886  15B0  3BCF               	subwfb	___fldiv@rem+2,f
 14887  15B1  0843               	movf	___fldiv@a+3,w
 14888  15B2  3BD0               	subwfb	___fldiv@rem+3,f
 14889  15B3                     l7459:	
 14890  15B3  3001               	movlw	1
 14891  15B4  00C8               	movwf	??___fldiv
 14892  15B5  0848               	movf	??___fldiv,w
 14893  15B6  07D9               	addwf	___fldiv@aexp,f
 14894  15B7  2D7C               	goto	l7461
 14895  15B8                     l7463:	
 14896  15B8  0850               	movf	___fldiv@rem+3,w
 14897  15B9  044F               	iorwf	___fldiv@rem+2,w
 14898  15BA  044E               	iorwf	___fldiv@rem+1,w
 14899  15BB  044D               	iorwf	___fldiv@rem,w
 14900  15BC  1D03               	btfss	3,2
 14901  15BD  1454               	bsf	___fldiv@grs,0
 14902  15BE                     l7477:	
 14903  15BE  1BC6               	btfsc	___fldiv@b+2,7
 14904  15BF  2DD5               	goto	l7479
 14905  15C0  3001               	movlw	1
 14906  15C1                     u10345:	
 14907  15C1  35C4               	lslf	___fldiv@b,f
 14908  15C2  0DC5               	rlf	___fldiv@b+1,f
 14909  15C3  0DC6               	rlf	___fldiv@b+2,f
 14910  15C4  0DC7               	rlf	___fldiv@b+3,f
 14911  15C5  0B89               	decfsz	9,f
 14912  15C6  2DC1               	goto	u10345
 14913  15C7  1BD7               	btfsc	___fldiv@grs+3,7
 14914  15C8  1444               	bsf	___fldiv@b,0
 14915  15C9  3001               	movlw	1
 14916  15CA                     u10365:	
 14917  15CA  35D4               	lslf	___fldiv@grs,f
 14918  15CB  0DD5               	rlf	___fldiv@grs+1,f
 14919  15CC  0DD6               	rlf	___fldiv@grs+2,f
 14920  15CD  0DD7               	rlf	___fldiv@grs+3,f
 14921  15CE  0B89               	decfsz	9,f
 14922  15CF  2DCA               	goto	u10365
 14923  15D0  30FF               	movlw	255
 14924  15D1  07D2               	addwf	___fldiv@new_exp,f
 14925  15D2  30FF               	movlw	255
 14926  15D3  3DD3               	addwfc	___fldiv@new_exp+1,f
 14927  15D4  2DBE               	goto	l7477
 14928  15D5                     l7479:	
 14929  15D5  01D9               	clrf	___fldiv@aexp
 14930  15D6  1FD7               	btfss	___fldiv@grs+3,7
 14931  15D7  2DEE               	goto	l7489
 14932  15D8  30FF               	movlw	255
 14933  15D9  0554               	andwf	___fldiv@grs,w
 14934  15DA  00C8               	movwf	??___fldiv
 14935  15DB  30FF               	movlw	255
 14936  15DC  0555               	andwf	___fldiv@grs+1,w
 14937  15DD  00C9               	movwf	??___fldiv+1
 14938  15DE  30FF               	movlw	255
 14939  15DF  0556               	andwf	___fldiv@grs+2,w
 14940  15E0  00CA               	movwf	??___fldiv+2
 14941  15E1  307F               	movlw	127
 14942  15E2  0557               	andwf	___fldiv@grs+3,w
 14943  15E3  00CB               	movwf	??___fldiv+3
 14944  15E4  084B               	movf	??___fldiv+3,w
 14945  15E5  044A               	iorwf	??___fldiv+2,w
 14946  15E6  0449               	iorwf	??___fldiv+1,w
 14947  15E7  0448               	iorwf	??___fldiv,w
 14948  15E8  1903               	skipnz
 14949  15E9  1844               	btfsc	___fldiv@b,0
 14950  15EA  2DEC               	goto	l7485
 14951  15EB  2DEE               	goto	l7489
 14952  15EC                     l7485:	
 14953  15EC  01D9               	clrf	___fldiv@aexp
 14954  15ED  0AD9               	incf	___fldiv@aexp,f
 14955  15EE                     l7489:	
 14956  15EE  0859               	movf	___fldiv@aexp,w
 14957  15EF  1903               	btfsc	3,2
 14958  15F0  2E17               	goto	l7499
 14959  15F1  3001               	movlw	1
 14960  15F2  07C4               	addwf	___fldiv@b,f
 14961  15F3  3000               	movlw	0
 14962  15F4  3DC5               	addwfc	___fldiv@b+1,f
 14963  15F5  3000               	movlw	0
 14964  15F6  3DC6               	addwfc	___fldiv@b+2,f
 14965  15F7  3000               	movlw	0
 14966  15F8  3DC7               	addwfc	___fldiv@b+3,f
 14967  15F9  1C47               	btfss	___fldiv@b+3,0
 14968  15FA  2E17               	goto	l7499
 14969  15FB  0844               	movf	___fldiv@b,w
 14970  15FC  00C8               	movwf	??___fldiv
 14971  15FD  0845               	movf	___fldiv@b+1,w
 14972  15FE  00C9               	movwf	??___fldiv+1
 14973  15FF  0846               	movf	___fldiv@b+2,w
 14974  1600  00CA               	movwf	??___fldiv+2
 14975  1601  0847               	movf	___fldiv@b+3,w
 14976  1602  00CB               	movwf	??___fldiv+3
 14977  1603  3001               	movlw	1
 14978  1604  00CC               	movwf	??___fldiv+4
 14979  1605                     u10435:	
 14980  1605  37CB               	asrf	??___fldiv+3,f
 14981  1606  0CCA               	rrf	??___fldiv+2,f
 14982  1607  0CC9               	rrf	??___fldiv+1,f
 14983  1608  0CC8               	rrf	??___fldiv,f
 14984  1609  0BCC               	decfsz	??___fldiv+4,f
 14985  160A  2E05               	goto	u10435
 14986  160B  084B               	movf	??___fldiv+3,w
 14987  160C  00C7               	movwf	___fldiv@b+3
 14988  160D  084A               	movf	??___fldiv+2,w
 14989  160E  00C6               	movwf	___fldiv@b+2
 14990  160F  0849               	movf	??___fldiv+1,w
 14991  1610  00C5               	movwf	___fldiv@b+1
 14992  1611  0848               	movf	??___fldiv,w
 14993  1612  00C4               	movwf	___fldiv@b
 14994  1613  3001               	movlw	1
 14995  1614  07D2               	addwf	___fldiv@new_exp,f
 14996  1615  3000               	movlw	0
 14997  1616  3DD3               	addwfc	___fldiv@new_exp+1,f
 14998  1617                     l7499:	
 14999  1617  0853               	movf	___fldiv@new_exp+1,w
 15000  1618  3A80               	xorlw	128
 15001  1619  00C8               	movwf	??___fldiv
 15002  161A  3080               	movlw	128
 15003  161B  0248               	subwf	??___fldiv,w
 15004  161C  1D03               	skipz
 15005  161D  2E20               	goto	u10445
 15006  161E  30FF               	movlw	255
 15007  161F  0252               	subwf	___fldiv@new_exp,w
 15008  1620                     u10445:	
 15009  1620  1C03               	skipc
 15010  1621  2E2F               	goto	l1218
 15011  1622  30FF               	movlw	255
 15012  1623  0020               	movlb	0	; select bank0
 15013  1624  00D2               	movwf	___fldiv@new_exp
 15014  1625  3000               	movlw	0
 15015  1626  00D3               	movwf	___fldiv@new_exp+1
 15016  1627  3000               	movlw	0
 15017  1628  00C7               	movwf	___fldiv@b+3
 15018  1629  3000               	movlw	0
 15019  162A  00C6               	movwf	___fldiv@b+2
 15020  162B  3000               	movlw	0
 15021  162C  00C5               	movwf	___fldiv@b+1
 15022  162D  3000               	movlw	0
 15023  162E  00C4               	movwf	___fldiv@b
 15024  162F                     l1218:	
 15025  162F  0020               	movlb	0	; select bank0
 15026  1630  0853               	movf	___fldiv@new_exp+1,w
 15027  1631  3A80               	xorlw	128
 15028  1632  00C8               	movwf	??___fldiv
 15029  1633  3080               	movlw	128
 15030  1634  0248               	subwf	??___fldiv,w
 15031  1635  1D03               	skipz
 15032  1636  2E39               	goto	u10455
 15033  1637  3001               	movlw	1
 15034  1638  0252               	subwf	___fldiv@new_exp,w
 15035  1639                     u10455:	
 15036  1639  1803               	skipnc
 15037  163A  2E47               	goto	l1219
 15038  163B  0020               	movlb	0	; select bank0
 15039  163C  01D2               	clrf	___fldiv@new_exp
 15040  163D  01D3               	clrf	___fldiv@new_exp+1
 15041  163E  3000               	movlw	0
 15042  163F  00C7               	movwf	___fldiv@b+3
 15043  1640  3000               	movlw	0
 15044  1641  00C6               	movwf	___fldiv@b+2
 15045  1642  3000               	movlw	0
 15046  1643  00C5               	movwf	___fldiv@b+1
 15047  1644  3000               	movlw	0
 15048  1645  00C4               	movwf	___fldiv@b
 15049  1646  01D1               	clrf	___fldiv@sign
 15050  1647                     l1219:	
 15051  1647  0020               	movlb	0	; select bank0
 15052  1648  0852               	movf	___fldiv@new_exp,w
 15053  1649  00C8               	movwf	??___fldiv
 15054  164A  0848               	movf	??___fldiv,w
 15055  164B  00D8               	movwf	___fldiv@bexp
 15056  164C  1C58               	btfss	___fldiv@bexp,0
 15057  164D  2E50               	goto	l7513
 15058  164E  17C6               	bsf	___fldiv@b+2,7
 15059  164F  2E54               	goto	l1221
 15060  1650                     l7513:	
 15061  1650  307F               	movlw	127
 15062  1651  00C8               	movwf	??___fldiv
 15063  1652  0848               	movf	??___fldiv,w
 15064  1653  05C6               	andwf	___fldiv@b+2,f
 15065  1654                     l1221:	
 15066  1654  3658               	lsrf	___fldiv@bexp,w
 15067  1655  00C8               	movwf	??___fldiv
 15068  1656  0848               	movf	??___fldiv,w
 15069  1657  00C7               	movwf	___fldiv@b+3
 15070  1658  2D3A               	goto	L4
 15071  1659                     __end_of___fldiv:	
 15072                           
 15073                           	psect	text55
 15074  0561                     __ptext55:	
 15075 ;; *************** function ___fladd *****************
 15076 ;; Defined at:
 15077 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 15078 ;; Parameters:    Size  Location     Type
 15079 ;;  b               4   58[BANK0 ] unsigned char 
 15080 ;;  a               4   62[BANK0 ] unsigned char 
 15081 ;; Auto vars:     Size  Location     Type
 15082 ;;  grs             1   77[BANK0 ] unsigned char 
 15083 ;;  bexp            1   76[BANK0 ] unsigned char 
 15084 ;;  aexp            1   75[BANK0 ] unsigned char 
 15085 ;;  signs           1   74[BANK0 ] unsigned char 
 15086 ;; Return value:  Size  Location     Type
 15087 ;;                  4   58[BANK0 ] unsigned char 
 15088 ;; Registers used:
 15089 ;;		wreg, status,2, status,0
 15090 ;; Tracked objects:
 15091 ;;		On entry : 0/0
 15092 ;;		On exit  : 0/0
 15093 ;;		Unchanged: 0/0
 15094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15095 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15096 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15097 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15098 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15099 ;;Total ram usage:       20 bytes
 15100 ;; Hardware stack levels used:    1
 15101 ;; Hardware stack levels required when called:    1
 15102 ;; This function calls:
 15103 ;;		Nothing
 15104 ;; This function is called by:
 15105 ;;		_updateVoltages
 15106 ;;		_updateTemperatures
 15107 ;;		_logf
 15108 ;;		___flsub
 15109 ;; This function uses a non-reentrant model
 15110 ;;
 15111                           
 15112                           
 15113                           ;psect for function ___fladd
 15114  0561                     ___fladd:	
 15115                           
 15116                           ;incstack = 0
 15117                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 15118  0561  0020               	movlb	0	; select bank0
 15119  0562  085D               	movf	___fladd@b+3,w
 15120  0563  3980               	andlw	128
 15121  0564  00E2               	movwf	??___fladd
 15122  0565  0862               	movf	??___fladd,w
 15123  0566  00EA               	movwf	___fladd@signs
 15124  0567  355D               	lslf	___fladd@b+3,w
 15125  0568  00E2               	movwf	??___fladd
 15126  0569  0862               	movf	??___fladd,w
 15127  056A  00EC               	movwf	___fladd@bexp
 15128  056B  1BDC               	btfsc	___fladd@b+2,7
 15129  056C  146C               	bsf	___fladd@bexp,0
 15130  056D  086C               	movf	___fladd@bexp,w
 15131  056E  1903               	btfsc	3,2
 15132  056F  2D7E               	goto	l7203
 15133  0570  0A6C               	incf	___fladd@bexp,w
 15134  0571  1D03               	btfss	3,2
 15135  0572  2D7B               	goto	l7199
 15136  0573  3000               	movlw	0
 15137  0574  00DD               	movwf	___fladd@b+3
 15138  0575  3000               	movlw	0
 15139  0576  00DC               	movwf	___fladd@b+2
 15140  0577  3000               	movlw	0
 15141  0578  00DB               	movwf	___fladd@b+1
 15142  0579  3000               	movlw	0
 15143  057A  00DA               	movwf	___fladd@b
 15144  057B                     l7199:	
 15145  057B  17DC               	bsf	___fladd@b+2,7
 15146  057C  01DD               	clrf	___fladd@b+3
 15147  057D  2D86               	goto	l7205
 15148  057E                     l7203:	
 15149  057E  3000               	movlw	0
 15150  057F  00DD               	movwf	___fladd@b+3
 15151  0580  3000               	movlw	0
 15152  0581  00DC               	movwf	___fladd@b+2
 15153  0582  3000               	movlw	0
 15154  0583  00DB               	movwf	___fladd@b+1
 15155  0584  3000               	movlw	0
 15156  0585  00DA               	movwf	___fladd@b
 15157  0586                     l7205:	
 15158  0586  0861               	movf	___fladd@a+3,w
 15159  0587  3980               	andlw	128
 15160  0588  00E2               	movwf	??___fladd
 15161  0589  0862               	movf	??___fladd,w
 15162  058A  00EB               	movwf	___fladd@aexp
 15163  058B  086B               	movf	___fladd@aexp,w
 15164  058C  066A               	xorwf	___fladd@signs,w
 15165  058D  1D03               	btfss	3,2
 15166  058E  176A               	bsf	___fladd@signs,6
 15167  058F  3561               	lslf	___fladd@a+3,w
 15168  0590  00E2               	movwf	??___fladd
 15169  0591  0862               	movf	??___fladd,w
 15170  0592  00EB               	movwf	___fladd@aexp
 15171  0593  1BE0               	btfsc	___fladd@a+2,7
 15172  0594  146B               	bsf	___fladd@aexp,0
 15173  0595  086B               	movf	___fladd@aexp,w
 15174  0596  1903               	btfsc	3,2
 15175  0597  2DA6               	goto	l7227
 15176  0598  0A6B               	incf	___fladd@aexp,w
 15177  0599  1D03               	btfss	3,2
 15178  059A  2DA3               	goto	l7223
 15179  059B  3000               	movlw	0
 15180  059C  00E1               	movwf	___fladd@a+3
 15181  059D  3000               	movlw	0
 15182  059E  00E0               	movwf	___fladd@a+2
 15183  059F  3000               	movlw	0
 15184  05A0  00DF               	movwf	___fladd@a+1
 15185  05A1  3000               	movlw	0
 15186  05A2  00DE               	movwf	___fladd@a
 15187  05A3                     l7223:	
 15188  05A3  17E0               	bsf	___fladd@a+2,7
 15189  05A4  01E1               	clrf	___fladd@a+3
 15190  05A5  2DAE               	goto	l1141
 15191  05A6                     l7227:	
 15192  05A6  3000               	movlw	0
 15193  05A7  00E1               	movwf	___fladd@a+3
 15194  05A8  3000               	movlw	0
 15195  05A9  00E0               	movwf	___fladd@a+2
 15196  05AA  3000               	movlw	0
 15197  05AB  00DF               	movwf	___fladd@a+1
 15198  05AC  3000               	movlw	0
 15199  05AD  00DE               	movwf	___fladd@a
 15200  05AE                     l1141:	
 15201  05AE  086C               	movf	___fladd@bexp,w
 15202  05AF  026B               	subwf	___fladd@aexp,w
 15203  05B0  1803               	skipnc
 15204  05B1  2DF4               	goto	l7263
 15205  05B2  1F6A               	btfss	___fladd@signs,6
 15206  05B3  2DB8               	goto	l7233
 15207  05B4  3080               	movlw	128
 15208  05B5  00E2               	movwf	??___fladd
 15209  05B6  0862               	movf	??___fladd,w
 15210  05B7  06EA               	xorwf	___fladd@signs,f
 15211  05B8                     l7233:	
 15212  05B8  086C               	movf	___fladd@bexp,w
 15213  05B9  00E2               	movwf	??___fladd
 15214  05BA  0862               	movf	??___fladd,w
 15215  05BB  00ED               	movwf	___fladd@grs
 15216  05BC  086B               	movf	___fladd@aexp,w
 15217  05BD  00E2               	movwf	??___fladd
 15218  05BE  0862               	movf	??___fladd,w
 15219  05BF  00EC               	movwf	___fladd@bexp
 15220  05C0  086D               	movf	___fladd@grs,w
 15221  05C1  00E2               	movwf	??___fladd
 15222  05C2  0862               	movf	??___fladd,w
 15223  05C3  00EB               	movwf	___fladd@aexp
 15224  05C4  085A               	movf	___fladd@b,w
 15225  05C5  00E2               	movwf	??___fladd
 15226  05C6  0862               	movf	??___fladd,w
 15227  05C7  00ED               	movwf	___fladd@grs
 15228  05C8  085E               	movf	___fladd@a,w
 15229  05C9  00E2               	movwf	??___fladd
 15230  05CA  0862               	movf	??___fladd,w
 15231  05CB  00DA               	movwf	___fladd@b
 15232  05CC  086D               	movf	___fladd@grs,w
 15233  05CD  00E2               	movwf	??___fladd
 15234  05CE  0862               	movf	??___fladd,w
 15235  05CF  00DE               	movwf	___fladd@a
 15236  05D0  085B               	movf	___fladd@b+1,w
 15237  05D1  00E2               	movwf	??___fladd
 15238  05D2  0862               	movf	??___fladd,w
 15239  05D3  00ED               	movwf	___fladd@grs
 15240  05D4  085F               	movf	___fladd@a+1,w
 15241  05D5  00E2               	movwf	??___fladd
 15242  05D6  0862               	movf	??___fladd,w
 15243  05D7  00DB               	movwf	___fladd@b+1
 15244  05D8  086D               	movf	___fladd@grs,w
 15245  05D9  00E2               	movwf	??___fladd
 15246  05DA  0862               	movf	??___fladd,w
 15247  05DB  00DF               	movwf	___fladd@a+1
 15248  05DC  085C               	movf	___fladd@b+2,w
 15249  05DD  00E2               	movwf	??___fladd
 15250  05DE  0862               	movf	??___fladd,w
 15251  05DF  00ED               	movwf	___fladd@grs
 15252  05E0  0860               	movf	___fladd@a+2,w
 15253  05E1  00E2               	movwf	??___fladd
 15254  05E2  0862               	movf	??___fladd,w
 15255  05E3  00DC               	movwf	___fladd@b+2
 15256  05E4  086D               	movf	___fladd@grs,w
 15257  05E5  00E2               	movwf	??___fladd
 15258  05E6  0862               	movf	??___fladd,w
 15259  05E7  00E0               	movwf	___fladd@a+2
 15260  05E8  085D               	movf	___fladd@b+3,w
 15261  05E9  00E2               	movwf	??___fladd
 15262  05EA  0862               	movf	??___fladd,w
 15263  05EB  00ED               	movwf	___fladd@grs
 15264  05EC  0861               	movf	___fladd@a+3,w
 15265  05ED  00E2               	movwf	??___fladd
 15266  05EE  0862               	movf	??___fladd,w
 15267  05EF  00DD               	movwf	___fladd@b+3
 15268  05F0  086D               	movf	___fladd@grs,w
 15269  05F1  00E2               	movwf	??___fladd
 15270  05F2  0862               	movf	??___fladd,w
 15271  05F3  00E1               	movwf	___fladd@a+3
 15272  05F4                     l7263:	
 15273  05F4  01ED               	clrf	___fladd@grs
 15274  05F5  086B               	movf	___fladd@aexp,w
 15275  05F6  00E2               	movwf	??___fladd
 15276  05F7  01E3               	clrf	??___fladd+1
 15277  05F8  0863               	movf	??___fladd+1,w
 15278  05F9  00E5               	movwf	??___fladd+3
 15279  05FA  086C               	movf	___fladd@bexp,w
 15280  05FB  0262               	subwf	??___fladd,w
 15281  05FC  00E4               	movwf	??___fladd+2
 15282  05FD  1C03               	skipc
 15283  05FE  03E5               	decf	??___fladd+3,f
 15284  05FF  0865               	movf	??___fladd+3,w
 15285  0600  3A80               	xorlw	128
 15286  0601  00E6               	movwf	??___fladd+4
 15287  0602  3080               	movlw	128
 15288  0603  0266               	subwf	??___fladd+4,w
 15289  0604  1D03               	skipz
 15290  0605  2E08               	goto	u9845
 15291  0606  301A               	movlw	26
 15292  0607  0264               	subwf	??___fladd+2,w
 15293  0608                     u9845:	
 15294  0608  1C03               	skipc
 15295  0609  2E3C               	goto	l7281
 15296  060A  0020               	movlb	0	; select bank0
 15297  060B  085D               	movf	___fladd@b+3,w
 15298  060C  045C               	iorwf	___fladd@b+2,w
 15299  060D  045B               	iorwf	___fladd@b+1,w
 15300  060E  045A               	iorwf	___fladd@b,w
 15301  060F  1903               	btfsc	3,2
 15302  0610  2E13               	goto	u9850
 15303  0611  3001               	movlw	1
 15304  0612  2E14               	goto	u9860
 15305  0613                     u9850:	
 15306  0613  3000               	movlw	0
 15307  0614                     u9860:	
 15308  0614  00E2               	movwf	??___fladd
 15309  0615  0862               	movf	??___fladd,w
 15310  0616  00ED               	movwf	___fladd@grs
 15311  0617  3000               	movlw	0
 15312  0618  00DD               	movwf	___fladd@b+3
 15313  0619  3000               	movlw	0
 15314  061A  00DC               	movwf	___fladd@b+2
 15315  061B  3000               	movlw	0
 15316  061C  00DB               	movwf	___fladd@b+1
 15317  061D  3000               	movlw	0
 15318  061E  00DA               	movwf	___fladd@b
 15319  061F  086B               	movf	___fladd@aexp,w
 15320  0620  00E2               	movwf	??___fladd
 15321  0621  0862               	movf	??___fladd,w
 15322  0622  00EC               	movwf	___fladd@bexp
 15323  0623  2E41               	goto	l1145
 15324  0624                     l1147:	
 15325  0624  1C6D               	btfss	___fladd@grs,0
 15326  0625  2E2C               	goto	l7271
 15327  0626  366D               	lsrf	___fladd@grs,w
 15328  0627  3801               	iorlw	1
 15329  0628  00E2               	movwf	??___fladd
 15330  0629  0862               	movf	??___fladd,w
 15331  062A  00ED               	movwf	___fladd@grs
 15332  062B  2E2E               	goto	l7273
 15333  062C                     l7271:	
 15334  062C  1003               	clrc
 15335  062D  0CED               	rrf	___fladd@grs,f
 15336  062E                     l7273:	
 15337  062E  185A               	btfsc	___fladd@b,0
 15338  062F  17ED               	bsf	___fladd@grs,7
 15339  0630  3001               	movlw	1
 15340  0631  00E2               	movwf	??___fladd
 15341  0632                     u9895:	
 15342  0632  37DD               	asrf	___fladd@b+3,f
 15343  0633  0CDC               	rrf	___fladd@b+2,f
 15344  0634  0CDB               	rrf	___fladd@b+1,f
 15345  0635  0CDA               	rrf	___fladd@b,f
 15346  0636  0BE2               	decfsz	??___fladd& (0+127),f
 15347  0637  2E32               	goto	u9895
 15348  0638  3001               	movlw	1
 15349  0639  00E2               	movwf	??___fladd
 15350  063A  0862               	movf	??___fladd,w
 15351  063B  07EC               	addwf	___fladd@bexp,f
 15352  063C                     l7281:	
 15353  063C  0020               	movlb	0	; select bank0
 15354  063D  086B               	movf	___fladd@aexp,w
 15355  063E  026C               	subwf	___fladd@bexp,w
 15356  063F  1C03               	skipc
 15357  0640  2E24               	goto	l1147
 15358  0641                     l1145:	
 15359  0641  1B6A               	btfsc	___fladd@signs,6
 15360  0642  2E72               	goto	l7307
 15361  0643  086C               	movf	___fladd@bexp,w
 15362  0644  1D03               	btfss	3,2
 15363  0645  2E4F               	goto	l7289
 15364  0646  3000               	movlw	0
 15365  0647  00DD               	movwf	?___fladd+3
 15366  0648  3000               	movlw	0
 15367  0649  00DC               	movwf	?___fladd+2
 15368  064A  3000               	movlw	0
 15369  064B  00DB               	movwf	?___fladd+1
 15370  064C  3000               	movlw	0
 15371  064D  00DA               	movwf	?___fladd
 15372  064E  0008               	return
 15373  064F                     l7289:	
 15374  064F  085E               	movf	___fladd@a,w
 15375  0650  07DA               	addwf	___fladd@b,f
 15376  0651  085F               	movf	___fladd@a+1,w
 15377  0652  3DDB               	addwfc	___fladd@b+1,f
 15378  0653  0860               	movf	___fladd@a+2,w
 15379  0654  3DDC               	addwfc	___fladd@b+2,f
 15380  0655  0861               	movf	___fladd@a+3,w
 15381  0656  3DDD               	addwfc	___fladd@b+3,f
 15382  0657  1C5D               	btfss	___fladd@b+3,0
 15383  0658  2EEC               	goto	l7341
 15384  0659  1C6D               	btfss	___fladd@grs,0
 15385  065A  2E61               	goto	l7297
 15386  065B  366D               	lsrf	___fladd@grs,w
 15387  065C  3801               	iorlw	1
 15388  065D  00E2               	movwf	??___fladd
 15389  065E  0862               	movf	??___fladd,w
 15390  065F  00ED               	movwf	___fladd@grs
 15391  0660  2E63               	goto	l7299
 15392  0661                     l7297:	
 15393  0661  1003               	clrc
 15394  0662  0CED               	rrf	___fladd@grs,f
 15395  0663                     l7299:	
 15396  0663  185A               	btfsc	___fladd@b,0
 15397  0664  17ED               	bsf	___fladd@grs,7
 15398  0665  3001               	movlw	1
 15399  0666  00E2               	movwf	??___fladd
 15400  0667                     u9965:	
 15401  0667  37DD               	asrf	___fladd@b+3,f
 15402  0668  0CDC               	rrf	___fladd@b+2,f
 15403  0669  0CDB               	rrf	___fladd@b+1,f
 15404  066A  0CDA               	rrf	___fladd@b,f
 15405  066B  0BE2               	decfsz	??___fladd& (0+127),f
 15406  066C  2E67               	goto	u9965
 15407  066D  3001               	movlw	1
 15408  066E  00E2               	movwf	??___fladd
 15409  066F  0862               	movf	??___fladd,w
 15410  0670  07EC               	addwf	___fladd@bexp,f
 15411  0671  2EEC               	goto	l7341
 15412  0672                     l7307:	
 15413  0672  085D               	movf	___fladd@b+3,w
 15414  0673  3A80               	xorlw	128
 15415  0674  00E2               	movwf	??___fladd
 15416  0675  0861               	movf	___fladd@a+3,w
 15417  0676  3A80               	xorlw	128
 15418  0677  0262               	subwf	??___fladd,w
 15419  0678  1D03               	skipz
 15420  0679  2E84               	goto	u9973
 15421  067A  0860               	movf	___fladd@a+2,w
 15422  067B  025C               	subwf	___fladd@b+2,w
 15423  067C  1D03               	skipz
 15424  067D  2E84               	goto	u9973
 15425  067E  085F               	movf	___fladd@a+1,w
 15426  067F  025B               	subwf	___fladd@b+1,w
 15427  0680  1D03               	skipz
 15428  0681  2E84               	goto	u9973
 15429  0682  085E               	movf	___fladd@a,w
 15430  0683  025A               	subwf	___fladd@b,w
 15431  0684                     u9973:	
 15432  0684  1803               	skipnc
 15433  0685  2EBC               	goto	l7317
 15434  0686  30FF               	movlw	255
 15435  0687  00E2               	movwf	??___fladd
 15436  0688  30FF               	movlw	255
 15437  0689  00E3               	movwf	??___fladd+1
 15438  068A  30FF               	movlw	255
 15439  068B  00E4               	movwf	??___fladd+2
 15440  068C  30FF               	movlw	255
 15441  068D  00E5               	movwf	??___fladd+3
 15442  068E  085A               	movf	___fladd@b,w
 15443  068F  025E               	subwf	___fladd@a,w
 15444  0690  00E6               	movwf	??___fladd+4
 15445  0691  085B               	movf	___fladd@b+1,w
 15446  0692  3B5F               	subwfb	___fladd@a+1,w
 15447  0693  00E7               	movwf	??___fladd+5
 15448  0694  085C               	movf	___fladd@b+2,w
 15449  0695  3B60               	subwfb	___fladd@a+2,w
 15450  0696  00E8               	movwf	??___fladd+6
 15451  0697  085D               	movf	___fladd@b+3,w
 15452  0698  3B61               	subwfb	___fladd@a+3,w
 15453  0699  00E9               	movwf	??___fladd+7
 15454  069A  0866               	movf	??___fladd+4,w
 15455  069B  07E2               	addwf	??___fladd,f
 15456  069C  0867               	movf	??___fladd+5,w
 15457  069D  3DE3               	addwfc	??___fladd+1,f
 15458  069E  0868               	movf	??___fladd+6,w
 15459  069F  3DE4               	addwfc	??___fladd+2,f
 15460  06A0  0869               	movf	??___fladd+7,w
 15461  06A1  3DE5               	addwfc	??___fladd+3,f
 15462  06A2  0865               	movf	??___fladd+3,w
 15463  06A3  00DD               	movwf	___fladd@b+3
 15464  06A4  0864               	movf	??___fladd+2,w
 15465  06A5  00DC               	movwf	___fladd@b+2
 15466  06A6  0863               	movf	??___fladd+1,w
 15467  06A7  00DB               	movwf	___fladd@b+1
 15468  06A8  0862               	movf	??___fladd,w
 15469  06A9  00DA               	movwf	___fladd@b
 15470  06AA  3080               	movlw	128
 15471  06AB  00E2               	movwf	??___fladd
 15472  06AC  0862               	movf	??___fladd,w
 15473  06AD  06EA               	xorwf	___fladd@signs,f
 15474  06AE  09ED               	comf	___fladd@grs,f
 15475  06AF  0AED               	incf	___fladd@grs,f
 15476  06B0  086D               	movf	___fladd@grs,w
 15477  06B1  1D03               	btfss	3,2
 15478  06B2  2EC4               	goto	l1162
 15479  06B3  3001               	movlw	1
 15480  06B4  07DA               	addwf	___fladd@b,f
 15481  06B5  3000               	movlw	0
 15482  06B6  3DDB               	addwfc	___fladd@b+1,f
 15483  06B7  3000               	movlw	0
 15484  06B8  3DDC               	addwfc	___fladd@b+2,f
 15485  06B9  3000               	movlw	0
 15486  06BA  3DDD               	addwfc	___fladd@b+3,f
 15487  06BB  2EC4               	goto	l1162
 15488  06BC                     l7317:	
 15489  06BC  085E               	movf	___fladd@a,w
 15490  06BD  02DA               	subwf	___fladd@b,f
 15491  06BE  085F               	movf	___fladd@a+1,w
 15492  06BF  3BDB               	subwfb	___fladd@b+1,f
 15493  06C0  0860               	movf	___fladd@a+2,w
 15494  06C1  3BDC               	subwfb	___fladd@b+2,f
 15495  06C2  0861               	movf	___fladd@a+3,w
 15496  06C3  3BDD               	subwfb	___fladd@b+3,f
 15497  06C4                     l1162:	
 15498  06C4  085D               	movf	___fladd@b+3,w
 15499  06C5  045C               	iorwf	___fladd@b+2,w
 15500  06C6  045B               	iorwf	___fladd@b+1,w
 15501  06C7  045A               	iorwf	___fladd@b,w
 15502  06C8  1D03               	skipz
 15503  06C9  2EEA               	goto	l7339
 15504  06CA  086D               	movf	___fladd@grs,w
 15505  06CB  1D03               	btfss	3,2
 15506  06CC  2EEA               	goto	l7339
 15507  06CD  3000               	movlw	0
 15508  06CE  00DD               	movwf	?___fladd+3
 15509  06CF  3000               	movlw	0
 15510  06D0  00DC               	movwf	?___fladd+2
 15511  06D1  3000               	movlw	0
 15512  06D2  00DB               	movwf	?___fladd+1
 15513  06D3  3000               	movlw	0
 15514  06D4  00DA               	movwf	?___fladd
 15515  06D5  0008               	return
 15516  06D6                     l7325:	
 15517  06D6  3001               	movlw	1
 15518  06D7                     u10015:	
 15519  06D7  35DA               	lslf	___fladd@b,f
 15520  06D8  0DDB               	rlf	___fladd@b+1,f
 15521  06D9  0DDC               	rlf	___fladd@b+2,f
 15522  06DA  0DDD               	rlf	___fladd@b+3,f
 15523  06DB  0B89               	decfsz	9,f
 15524  06DC  2ED7               	goto	u10015
 15525  06DD  1BED               	btfsc	___fladd@grs,7
 15526  06DE  145A               	bsf	___fladd@b,0
 15527  06DF  1C6D               	btfss	___fladd@grs,0
 15528  06E0  2EE3               	goto	l7333
 15529  06E1  1403               	setc
 15530  06E2  2EE4               	goto	L5
 15531  06E3                     l7333:	
 15532  06E3  1003               	clrc
 15533  06E4                     L5:	
 15534  06E4  0DED               	rlf	___fladd@grs,f
 15535  06E5  086C               	movf	___fladd@bexp,w
 15536  06E6  1903               	btfsc	3,2
 15537  06E7  2EEA               	goto	l7339
 15538  06E8  3001               	movlw	1
 15539  06E9  02EC               	subwf	___fladd@bexp,f
 15540  06EA                     l7339:	
 15541  06EA  1FDC               	btfss	___fladd@b+2,7
 15542  06EB  2ED6               	goto	l7325
 15543  06EC                     l7341:	
 15544  06EC  01EB               	clrf	___fladd@aexp
 15545  06ED  1FED               	btfss	___fladd@grs,7
 15546  06EE  2EF7               	goto	l7351
 15547  06EF  086D               	movf	___fladd@grs,w
 15548  06F0  397F               	andlw	127
 15549  06F1  1903               	btfsc	3,2
 15550  06F2  185A               	btfsc	___fladd@b,0
 15551  06F3  2EF5               	goto	l7347
 15552  06F4  2EF7               	goto	l7351
 15553  06F5                     l7347:	
 15554  06F5  01EB               	clrf	___fladd@aexp
 15555  06F6  0AEB               	incf	___fladd@aexp,f
 15556  06F7                     l7351:	
 15557  06F7  086B               	movf	___fladd@aexp,w
 15558  06F8  1903               	btfsc	3,2
 15559  06F9  2F23               	goto	l1175
 15560  06FA  3001               	movlw	1
 15561  06FB  07DA               	addwf	___fladd@b,f
 15562  06FC  3000               	movlw	0
 15563  06FD  3DDB               	addwfc	___fladd@b+1,f
 15564  06FE  3000               	movlw	0
 15565  06FF  3DDC               	addwfc	___fladd@b+2,f
 15566  0700  3000               	movlw	0
 15567  0701  3DDD               	addwfc	___fladd@b+3,f
 15568  0702  1C5D               	btfss	___fladd@b+3,0
 15569  0703  2F23               	goto	l1175
 15570  0704  085A               	movf	___fladd@b,w
 15571  0705  00E2               	movwf	??___fladd
 15572  0706  085B               	movf	___fladd@b+1,w
 15573  0707  00E3               	movwf	??___fladd+1
 15574  0708  085C               	movf	___fladd@b+2,w
 15575  0709  00E4               	movwf	??___fladd+2
 15576  070A  085D               	movf	___fladd@b+3,w
 15577  070B  00E5               	movwf	??___fladd+3
 15578  070C  3001               	movlw	1
 15579  070D  00E6               	movwf	??___fladd+4
 15580  070E                     u10115:	
 15581  070E  37E5               	asrf	??___fladd+3,f
 15582  070F  0CE4               	rrf	??___fladd+2,f
 15583  0710  0CE3               	rrf	??___fladd+1,f
 15584  0711  0CE2               	rrf	??___fladd,f
 15585  0712  0BE6               	decfsz	??___fladd+4,f
 15586  0713  2F0E               	goto	u10115
 15587  0714  0865               	movf	??___fladd+3,w
 15588  0715  00DD               	movwf	___fladd@b+3
 15589  0716  0864               	movf	??___fladd+2,w
 15590  0717  00DC               	movwf	___fladd@b+2
 15591  0718  0863               	movf	??___fladd+1,w
 15592  0719  00DB               	movwf	___fladd@b+1
 15593  071A  0862               	movf	??___fladd,w
 15594  071B  00DA               	movwf	___fladd@b
 15595  071C  0A6C               	incf	___fladd@bexp,w
 15596  071D  1903               	btfsc	3,2
 15597  071E  2F23               	goto	l1175
 15598  071F  3001               	movlw	1
 15599  0720  00E2               	movwf	??___fladd
 15600  0721  0862               	movf	??___fladd,w
 15601  0722  07EC               	addwf	___fladd@bexp,f
 15602  0723                     l1175:	
 15603  0723  0A6C               	incf	___fladd@bexp,w
 15604  0724  1D03               	btfss	3,2
 15605  0725  086C               	movf	___fladd@bexp,w
 15606  0726  1D03               	btfss	3,2
 15607  0727  2F33               	goto	l7369
 15608  0728  3000               	movlw	0
 15609  0729  00DD               	movwf	___fladd@b+3
 15610  072A  3000               	movlw	0
 15611  072B  00DC               	movwf	___fladd@b+2
 15612  072C  3000               	movlw	0
 15613  072D  00DB               	movwf	___fladd@b+1
 15614  072E  3000               	movlw	0
 15615  072F  00DA               	movwf	___fladd@b
 15616  0730  086C               	movf	___fladd@bexp,w
 15617  0731  1903               	btfsc	3,2
 15618  0732  01EA               	clrf	___fladd@signs
 15619  0733                     l7369:	
 15620  0733  1C6C               	btfss	___fladd@bexp,0
 15621  0734  2F37               	goto	l7373
 15622  0735  17DC               	bsf	___fladd@b+2,7
 15623  0736  2F3B               	goto	l1183
 15624  0737                     l7373:	
 15625  0737  307F               	movlw	127
 15626  0738  00E2               	movwf	??___fladd
 15627  0739  0862               	movf	??___fladd,w
 15628  073A  05DC               	andwf	___fladd@b+2,f
 15629  073B                     l1183:	
 15630  073B  366C               	lsrf	___fladd@bexp,w
 15631  073C  00E2               	movwf	??___fladd
 15632  073D  0862               	movf	??___fladd,w
 15633  073E  00DD               	movwf	___fladd@b+3
 15634  073F  1FEA               	btfss	___fladd@signs,7
 15635  0740  0008               	return
 15636  0741  17DD               	bsf	___fladd@b+3,7
 15637  0742  0008               	return
 15638  0743                     __end_of___fladd:	
 15639                           
 15640                           	psect	text56
 15641  2184                     __ptext56:	
 15642 ;; *************** function _enableDischarging *****************
 15643 ;; Defined at:
 15644 ;;		line 267 in file "BQ76920.c"
 15645 ;; Parameters:    Size  Location     Type
 15646 ;;  enable          2    0[BANK0 ] unsigned int 
 15647 ;; Auto vars:     Size  Location     Type
 15648 ;;  sys_ctrl2       1   11[COMMON] unsigned char 
 15649 ;; Return value:  Size  Location     Type
 15650 ;;                  1    wreg      void 
 15651 ;; Registers used:
 15652 ;;		wreg, status,2, status,0, pclath, cstack
 15653 ;; Tracked objects:
 15654 ;;		On entry : 0/0
 15655 ;;		On exit  : 0/0
 15656 ;;		Unchanged: 0/0
 15657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15658 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15659 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15660 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15661 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15662 ;;Total ram usage:        5 bytes
 15663 ;; Hardware stack levels used:    1
 15664 ;; Hardware stack levels required when called:    3
 15665 ;; This function calls:
 15666 ;;		_I2C_writeRegister
 15667 ;;		_readRegister
 15668 ;; This function is called by:
 15669 ;;		_AFE_UPDATE
 15670 ;; This function uses a non-reentrant model
 15671 ;;
 15672                           
 15673                           
 15674                           ;psect for function _enableDischarging
 15675  2184                     _enableDischarging:	
 15676                           
 15677                           ;BQ76920.c: 268:     uint8_t sys_ctrl2;;BQ76920.c: 269:     sys_ctrl2 = readRegister(0x1
      +                          8, 0x05);
 15678                           
 15679                           ;incstack = 0
 15680                           ; Regs used in _enableDischarging: [wreg+status,2+status,0+pclath+cstack]
 15681  2184  3018               	movlw	24
 15682  2185  00F5               	movwf	readRegister@slaveAddress
 15683  2186  3000               	movlw	0
 15684  2187  00F6               	movwf	readRegister@slaveAddress+1
 15685  2188  3005               	movlw	5
 15686  2189  00F7               	movwf	readRegister@regAddress
 15687  218A  3000               	movlw	0
 15688  218B  00F8               	movwf	readRegister@regAddress+1
 15689  218C  31A1  2117  31A1   	fcall	_readRegister
 15690  218F  0875               	movf	?_readRegister,w
 15691  2190  0020               	movlb	0	; select bank0
 15692  2191  00A2               	movwf	??_enableDischarging
 15693  2192  0822               	movf	??_enableDischarging,w
 15694  2193  00FB               	movwf	enableDischarging@sys_ctrl2
 15695                           
 15696                           ;BQ76920.c: 270:     if(enable){
 15697  2194  0820               	movf	enableDischarging@enable,w
 15698  2195  0421               	iorwf	enableDischarging@enable+1,w
 15699  2196  1903               	btfsc	3,2
 15700  2197  29A8               	goto	l7923
 15701                           
 15702                           ;BQ76920.c: 271:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 | 0x02);
 15703  2198  3018               	movlw	24
 15704  2199  00F5               	movwf	I2C_writeRegister@slaveAddress
 15705  219A  3000               	movlw	0
 15706  219B  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 15707  219C  3005               	movlw	5
 15708  219D  00F7               	movwf	I2C_writeRegister@regAddress
 15709  219E  3000               	movlw	0
 15710  219F  00F8               	movwf	I2C_writeRegister@regAddress+1
 15711  21A0  3002               	movlw	2
 15712  21A1  047B               	iorwf	enableDischarging@sys_ctrl2,w
 15713  21A2  00F9               	movwf	I2C_writeRegister@data
 15714  21A3  3000               	movlw	0
 15715  21A4  00FA               	movwf	I2C_writeRegister@data+1
 15716  21A5  31AF  2780         	fcall	_I2C_writeRegister
 15717                           
 15718                           ;BQ76920.c: 272:     }else{
 15719  21A7  0008               	return
 15720  21A8                     l7923:	
 15721                           
 15722                           ;BQ76920.c: 273:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 & ~(0x02));
 15723  21A8  3018               	movlw	24
 15724  21A9  00F5               	movwf	I2C_writeRegister@slaveAddress
 15725  21AA  3000               	movlw	0
 15726  21AB  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 15727  21AC  3005               	movlw	5
 15728  21AD  00F7               	movwf	I2C_writeRegister@regAddress
 15729  21AE  3000               	movlw	0
 15730  21AF  00F8               	movwf	I2C_writeRegister@regAddress+1
 15731  21B0  087B               	movf	enableDischarging@sys_ctrl2,w
 15732  21B1  39FD               	andlw	253
 15733  21B2  00A2               	movwf	??_enableDischarging
 15734  21B3  01A3               	clrf	??_enableDischarging+1
 15735  21B4  0822               	movf	??_enableDischarging,w
 15736  21B5  00F9               	movwf	I2C_writeRegister@data
 15737  21B6  0823               	movf	??_enableDischarging+1,w
 15738  21B7  00FA               	movwf	I2C_writeRegister@data+1
 15739  21B8  31AF  2780         	fcall	_I2C_writeRegister
 15740  21BA  0008               	return
 15741  21BB                     __end_of_enableDischarging:	
 15742                           
 15743                           	psect	text57
 15744  214D                     __ptext57:	
 15745 ;; *************** function _enableCharging *****************
 15746 ;; Defined at:
 15747 ;;		line 277 in file "BQ76920.c"
 15748 ;; Parameters:    Size  Location     Type
 15749 ;;  enable          2    0[BANK0 ] unsigned int 
 15750 ;; Auto vars:     Size  Location     Type
 15751 ;;  sys_ctrl2       1   11[COMMON] unsigned char 
 15752 ;; Return value:  Size  Location     Type
 15753 ;;                  1    wreg      void 
 15754 ;; Registers used:
 15755 ;;		wreg, status,2, status,0, pclath, cstack
 15756 ;; Tracked objects:
 15757 ;;		On entry : 0/0
 15758 ;;		On exit  : 0/0
 15759 ;;		Unchanged: 0/0
 15760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15761 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15762 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15763 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15764 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15765 ;;Total ram usage:        5 bytes
 15766 ;; Hardware stack levels used:    1
 15767 ;; Hardware stack levels required when called:    3
 15768 ;; This function calls:
 15769 ;;		_I2C_writeRegister
 15770 ;;		_readRegister
 15771 ;; This function is called by:
 15772 ;;		_AFE_UPDATE
 15773 ;; This function uses a non-reentrant model
 15774 ;;
 15775                           
 15776                           
 15777                           ;psect for function _enableCharging
 15778  214D                     _enableCharging:	
 15779                           
 15780                           ;BQ76920.c: 278:     uint8_t sys_ctrl2;;BQ76920.c: 279:     sys_ctrl2 = readRegister(0x1
      +                          8, 0x05);
 15781                           
 15782                           ;incstack = 0
 15783                           ; Regs used in _enableCharging: [wreg+status,2+status,0+pclath+cstack]
 15784  214D  3018               	movlw	24
 15785  214E  00F5               	movwf	readRegister@slaveAddress
 15786  214F  3000               	movlw	0
 15787  2150  00F6               	movwf	readRegister@slaveAddress+1
 15788  2151  3005               	movlw	5
 15789  2152  00F7               	movwf	readRegister@regAddress
 15790  2153  3000               	movlw	0
 15791  2154  00F8               	movwf	readRegister@regAddress+1
 15792  2155  31A1  2117  31A1   	fcall	_readRegister
 15793  2158  0875               	movf	?_readRegister,w
 15794  2159  0020               	movlb	0	; select bank0
 15795  215A  00A2               	movwf	??_enableCharging
 15796  215B  0822               	movf	??_enableCharging,w
 15797  215C  00FB               	movwf	enableCharging@sys_ctrl2
 15798                           
 15799                           ;BQ76920.c: 280:     if(enable){
 15800  215D  0820               	movf	enableCharging@enable,w
 15801  215E  0421               	iorwf	enableCharging@enable+1,w
 15802  215F  1903               	btfsc	3,2
 15803  2160  2971               	goto	l7931
 15804                           
 15805                           ;BQ76920.c: 281:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 | 0x01);
 15806  2161  3018               	movlw	24
 15807  2162  00F5               	movwf	I2C_writeRegister@slaveAddress
 15808  2163  3000               	movlw	0
 15809  2164  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 15810  2165  3005               	movlw	5
 15811  2166  00F7               	movwf	I2C_writeRegister@regAddress
 15812  2167  3000               	movlw	0
 15813  2168  00F8               	movwf	I2C_writeRegister@regAddress+1
 15814  2169  3001               	movlw	1
 15815  216A  047B               	iorwf	enableCharging@sys_ctrl2,w
 15816  216B  00F9               	movwf	I2C_writeRegister@data
 15817  216C  3000               	movlw	0
 15818  216D  00FA               	movwf	I2C_writeRegister@data+1
 15819  216E  31AF  2780         	fcall	_I2C_writeRegister
 15820                           
 15821                           ;BQ76920.c: 282:     }else{
 15822  2170  0008               	return
 15823  2171                     l7931:	
 15824                           
 15825                           ;BQ76920.c: 283:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 & ~(0x01));
 15826  2171  3018               	movlw	24
 15827  2172  00F5               	movwf	I2C_writeRegister@slaveAddress
 15828  2173  3000               	movlw	0
 15829  2174  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 15830  2175  3005               	movlw	5
 15831  2176  00F7               	movwf	I2C_writeRegister@regAddress
 15832  2177  3000               	movlw	0
 15833  2178  00F8               	movwf	I2C_writeRegister@regAddress+1
 15834  2179  087B               	movf	enableCharging@sys_ctrl2,w
 15835  217A  39FE               	andlw	254
 15836  217B  00A2               	movwf	??_enableCharging
 15837  217C  01A3               	clrf	??_enableCharging+1
 15838  217D  0822               	movf	??_enableCharging,w
 15839  217E  00F9               	movwf	I2C_writeRegister@data
 15840  217F  0823               	movf	??_enableCharging+1,w
 15841  2180  00FA               	movwf	I2C_writeRegister@data+1
 15842  2181  31AF  2780         	fcall	_I2C_writeRegister
 15843  2183  0008               	return
 15844  2184                     __end_of_enableCharging:	
 15845                           
 15846                           	psect	text58
 15847  2117                     __ptext58:	
 15848 ;; *************** function _readRegister *****************
 15849 ;; Defined at:
 15850 ;;		line 115 in file "I2C.c"
 15851 ;; Parameters:    Size  Location     Type
 15852 ;;  slaveAddress    2    5[COMMON] int 
 15853 ;;  regAddress      2    7[COMMON] int 
 15854 ;; Auto vars:     Size  Location     Type
 15855 ;;  recievedData    2    9[COMMON] int 
 15856 ;; Return value:  Size  Location     Type
 15857 ;;                  2    5[COMMON] int 
 15858 ;; Registers used:
 15859 ;;		wreg, status,2, status,0, pclath, cstack
 15860 ;; Tracked objects:
 15861 ;;		On entry : 0/0
 15862 ;;		On exit  : 0/0
 15863 ;;		Unchanged: 0/0
 15864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15865 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15866 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15868 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15869 ;;Total ram usage:        6 bytes
 15870 ;; Hardware stack levels used:    1
 15871 ;; Hardware stack levels required when called:    2
 15872 ;; This function calls:
 15873 ;;		_read_I2C_data
 15874 ;;		_send_I2C_NACK
 15875 ;;		_send_I2C_controlByte
 15876 ;;		_send_I2C_data
 15877 ;;		_send_I2C_startBit
 15878 ;;		_send_I2C_stopBit
 15879 ;; This function is called by:
 15880 ;;		_beginAFEcommunication
 15881 ;;		_setCellUndervoltageProtection
 15882 ;;		_setCellOvervoltageProtection
 15883 ;;		_updateVoltages
 15884 ;;		_enableDischarging
 15885 ;;		_enableCharging
 15886 ;;		_printcellParameters
 15887 ;;		_updateCurrent
 15888 ;;		_updateTemperatures
 15889 ;;		_printotAFERegisters
 15890 ;; This function uses a non-reentrant model
 15891 ;;
 15892                           
 15893                           
 15894                           ;psect for function _readRegister
 15895  2117                     _readRegister:	
 15896                           
 15897                           ;I2C.c: 116:     int recievedData;;I2C.c: 117:     send_I2C_startBit();
 15898                           
 15899                           ;incstack = 0
 15900                           ; Regs used in _readRegister: [wreg+status,2+status,0+pclath+cstack]
 15901  2117  31AD  25EE  31A1   	fcall	_send_I2C_startBit
 15902                           
 15903                           ;I2C.c: 118:     send_I2C_controlByte(slaveAddress, 0);
 15904  211A  0876               	movf	readRegister@slaveAddress+1,w
 15905  211B  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 15906  211C  0875               	movf	readRegister@slaveAddress,w
 15907  211D  00F1               	movwf	send_I2C_controlByte@BlockAddress
 15908  211E  3000               	movlw	0
 15909  211F  00F3               	movwf	send_I2C_controlByte@RW_bit
 15910  2120  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 15911  2121  31AE  2610  31A1   	fcall	_send_I2C_controlByte
 15912                           
 15913                           ;I2C.c: 119:     send_I2C_data(regAddress);
 15914  2124  0878               	movf	readRegister@regAddress+1,w
 15915  2125  00F2               	movwf	send_I2C_data@databyte+1
 15916  2126  0877               	movf	readRegister@regAddress,w
 15917  2127  00F1               	movwf	send_I2C_data@databyte
 15918  2128  31AE  2607  31A1   	fcall	_send_I2C_data
 15919                           
 15920                           ;I2C.c: 120:     send_I2C_stopBit();
 15921  212B  31AD  25F6  31A1   	fcall	_send_I2C_stopBit
 15922                           
 15923                           ;I2C.c: 121:     send_I2C_startBit();
 15924  212E  31AD  25EE  31A1   	fcall	_send_I2C_startBit
 15925                           
 15926                           ;I2C.c: 122:     send_I2C_controlByte(slaveAddress, 1);
 15927  2131  0876               	movf	readRegister@slaveAddress+1,w
 15928  2132  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 15929  2133  0875               	movf	readRegister@slaveAddress,w
 15930  2134  00F1               	movwf	send_I2C_controlByte@BlockAddress
 15931  2135  3001               	movlw	1
 15932  2136  00F3               	movwf	send_I2C_controlByte@RW_bit
 15933  2137  3000               	movlw	0
 15934  2138  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 15935  2139  31AE  2610  31A1   	fcall	_send_I2C_controlByte
 15936                           
 15937                           ;I2C.c: 123:     recievedData = read_I2C_data();
 15938  213C  31AE  264B  31A1   	fcall	_read_I2C_data
 15939  213F  0872               	movf	?_read_I2C_data+1,w
 15940  2140  00FA               	movwf	readRegister@recievedData+1
 15941  2141  0871               	movf	?_read_I2C_data,w
 15942  2142  00F9               	movwf	readRegister@recievedData
 15943                           
 15944                           ;I2C.c: 124:     send_I2C_NACK();
 15945  2143  31A0  2000  31A1   	fcall	_send_I2C_NACK
 15946                           
 15947                           ;I2C.c: 125:     send_I2C_stopBit();
 15948  2146  31AD  25F6         	fcall	_send_I2C_stopBit
 15949                           
 15950                           ;I2C.c: 126:     return recievedData;
 15951  2148  087A               	movf	readRegister@recievedData+1,w
 15952  2149  00F6               	movwf	?_readRegister+1
 15953  214A  0879               	movf	readRegister@recievedData,w
 15954  214B  00F5               	movwf	?_readRegister
 15955  214C  0008               	return
 15956  214D                     __end_of_readRegister:	
 15957                           
 15958                           	psect	text59
 15959  2000                     __ptext59:	
 15960 ;; *************** function _send_I2C_NACK *****************
 15961 ;; Defined at:
 15962 ;;		line 91 in file "I2C.c"
 15963 ;; Parameters:    Size  Location     Type
 15964 ;;		None
 15965 ;; Auto vars:     Size  Location     Type
 15966 ;;		None
 15967 ;; Return value:  Size  Location     Type
 15968 ;;                  1    wreg      void 
 15969 ;; Registers used:
 15970 ;;		None
 15971 ;; Tracked objects:
 15972 ;;		On entry : 0/0
 15973 ;;		On exit  : 0/0
 15974 ;;		Unchanged: 0/0
 15975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15980 ;;Total ram usage:        0 bytes
 15981 ;; Hardware stack levels used:    1
 15982 ;; Hardware stack levels required when called:    1
 15983 ;; This function calls:
 15984 ;;		Nothing
 15985 ;; This function is called by:
 15986 ;;		_readRegister
 15987 ;; This function uses a non-reentrant model
 15988 ;;
 15989                           
 15990                           
 15991                           ;psect for function _send_I2C_NACK
 15992  2000                     _send_I2C_NACK:	
 15993                           
 15994                           ;I2C.c: 92:     PIR1bits.SSP1IF = 0;
 15995                           
 15996                           ;incstack = 0
 15997                           ; Regs used in _send_I2C_NACK: []
 15998  2000  0020               	movlb	0	; select bank0
 15999  2001  1191               	bcf	17,3	;volatile
 16000                           
 16001                           ;I2C.c: 93:     SSPCON2bits.ACKDT = 1;
 16002  2002  0024               	movlb	4	; select bank4
 16003  2003  1696               	bsf	22,5	;volatile
 16004                           
 16005                           ;I2C.c: 94:     SSPCON2bits.ACKEN = 1;
 16006  2004  1616               	bsf	22,4	;volatile
 16007  2005                     l315:	
 16008                           ;I2C.c: 95:     while (!PIR1bits.SSP1IF);
 16009                           
 16010  2005  0020               	movlb	0	; select bank0
 16011  2006  1991               	btfsc	17,3	;volatile
 16012  2007  0008               	return
 16013  2008  2805               	goto	l315
 16014  2009                     __end_of_send_I2C_NACK:	
 16015                           
 16016                           	psect	text60
 16017  2E4B                     __ptext60:	
 16018 ;; *************** function _read_I2C_data *****************
 16019 ;; Defined at:
 16020 ;;		line 43 in file "I2C.c"
 16021 ;; Parameters:    Size  Location     Type
 16022 ;;		None
 16023 ;; Auto vars:     Size  Location     Type
 16024 ;;		None
 16025 ;; Return value:  Size  Location     Type
 16026 ;;                  2    1[COMMON] unsigned int 
 16027 ;; Registers used:
 16028 ;;		wreg
 16029 ;; Tracked objects:
 16030 ;;		On entry : 0/0
 16031 ;;		On exit  : 0/0
 16032 ;;		Unchanged: 0/0
 16033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16034 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16036 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16037 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16038 ;;Total ram usage:        4 bytes
 16039 ;; Hardware stack levels used:    1
 16040 ;; Hardware stack levels required when called:    1
 16041 ;; This function calls:
 16042 ;;		Nothing
 16043 ;; This function is called by:
 16044 ;;		_readRegister
 16045 ;; This function uses a non-reentrant model
 16046 ;;
 16047                           
 16048                           
 16049                           ;psect for function _read_I2C_data
 16050  2E4B                     _read_I2C_data:	
 16051                           
 16052                           ;I2C.c: 44:     PIR1bits.SSP1IF = 0;
 16053                           
 16054                           ;incstack = 0
 16055                           ; Regs used in _read_I2C_data: [wreg]
 16056  2E4B  0020               	movlb	0	; select bank0
 16057  2E4C  1191               	bcf	17,3	;volatile
 16058                           
 16059                           ;I2C.c: 45:     SSPCON2bits.RCEN = 1;
 16060  2E4D  0024               	movlb	4	; select bank4
 16061  2E4E  1596               	bsf	22,3	;volatile
 16062  2E4F                     l279:	
 16063                           ;I2C.c: 46:     while (!PIR1bits.SSP1IF);
 16064                           
 16065  2E4F  0020               	movlb	0	; select bank0
 16066  2E50  1D91               	btfss	17,3	;volatile
 16067  2E51  2E4F               	goto	l279
 16068                           
 16069                           ;I2C.c: 47:     return (SSPBUF);
 16070  2E52  0024               	movlb	4	; select bank4
 16071  2E53  0811               	movf	17,w	;volatile
 16072  2E54  00F3               	movwf	??_read_I2C_data
 16073  2E55  01F4               	clrf	??_read_I2C_data+1
 16074  2E56  0873               	movf	??_read_I2C_data,w
 16075  2E57  00F1               	movwf	?_read_I2C_data
 16076  2E58  0874               	movf	??_read_I2C_data+1,w
 16077  2E59  00F2               	movwf	?_read_I2C_data+1
 16078  2E5A  0008               	return
 16079  2E5B                     __end_of_read_I2C_data:	
 16080                           
 16081                           	psect	text61
 16082  2F80                     __ptext61:	
 16083 ;; *************** function _I2C_writeRegister *****************
 16084 ;; Defined at:
 16085 ;;		line 104 in file "I2C.c"
 16086 ;; Parameters:    Size  Location     Type
 16087 ;;  slaveAddress    2    5[COMMON] int 
 16088 ;;  regAddress      2    7[COMMON] int 
 16089 ;;  data            2    9[COMMON] int 
 16090 ;; Auto vars:     Size  Location     Type
 16091 ;;		None
 16092 ;; Return value:  Size  Location     Type
 16093 ;;                  1    wreg      void 
 16094 ;; Registers used:
 16095 ;;		wreg, status,2, status,0, pclath, cstack
 16096 ;; Tracked objects:
 16097 ;;		On entry : 0/0
 16098 ;;		On exit  : 0/0
 16099 ;;		Unchanged: 0/0
 16100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16101 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16104 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16105 ;;Total ram usage:        6 bytes
 16106 ;; Hardware stack levels used:    1
 16107 ;; Hardware stack levels required when called:    2
 16108 ;; This function calls:
 16109 ;;		_send_I2C_controlByte
 16110 ;;		_send_I2C_data
 16111 ;;		_send_I2C_startBit
 16112 ;;		_send_I2C_stopBit
 16113 ;; This function is called by:
 16114 ;;		_beginAFEcommunication
 16115 ;;		_setShortCircuitProtection
 16116 ;;		_setOverCurrentDischargeProtection
 16117 ;;		_setCellUndervoltageProtection
 16118 ;;		_setCellOvervoltageProtection
 16119 ;;		_enableDischarging
 16120 ;;		_enableCharging
 16121 ;;		_updateCurrent
 16122 ;; This function uses a non-reentrant model
 16123 ;;
 16124                           
 16125                           
 16126                           ;psect for function _I2C_writeRegister
 16127  2F80                     _I2C_writeRegister:	
 16128                           
 16129                           ;I2C.c: 105:     send_I2C_startBit();
 16130                           
 16131                           ;incstack = 0
 16132                           ; Regs used in _I2C_writeRegister: [wreg+status,2+status,0+pclath+cstack]
 16133  2F80  31AD  25EE  31AF   	fcall	_send_I2C_startBit
 16134                           
 16135                           ;I2C.c: 106:     send_I2C_controlByte(slaveAddress, 0);
 16136  2F83  0876               	movf	I2C_writeRegister@slaveAddress+1,w
 16137  2F84  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 16138  2F85  0875               	movf	I2C_writeRegister@slaveAddress,w
 16139  2F86  00F1               	movwf	send_I2C_controlByte@BlockAddress
 16140  2F87  3000               	movlw	0
 16141  2F88  00F3               	movwf	send_I2C_controlByte@RW_bit
 16142  2F89  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 16143  2F8A  31AE  2610  31AF   	fcall	_send_I2C_controlByte
 16144                           
 16145                           ;I2C.c: 107:     send_I2C_data(regAddress);
 16146  2F8D  0878               	movf	I2C_writeRegister@regAddress+1,w
 16147  2F8E  00F2               	movwf	send_I2C_data@databyte+1
 16148  2F8F  0877               	movf	I2C_writeRegister@regAddress,w
 16149  2F90  00F1               	movwf	send_I2C_data@databyte
 16150  2F91  31AE  2607  31AF   	fcall	_send_I2C_data
 16151                           
 16152                           ;I2C.c: 108:     send_I2C_data(data);
 16153  2F94  087A               	movf	I2C_writeRegister@data+1,w
 16154  2F95  00F2               	movwf	send_I2C_data@databyte+1
 16155  2F96  0879               	movf	I2C_writeRegister@data,w
 16156  2F97  00F1               	movwf	send_I2C_data@databyte
 16157  2F98  31AE  2607  31AF   	fcall	_send_I2C_data
 16158                           
 16159                           ;I2C.c: 109:     send_I2C_stopBit();
 16160  2F9B  31AD  25F6         	fcall	_send_I2C_stopBit
 16161  2F9D  0008               	return
 16162  2F9E                     __end_of_I2C_writeRegister:	
 16163                           
 16164                           	psect	text62
 16165  2DF6                     __ptext62:	
 16166 ;; *************** function _send_I2C_stopBit *****************
 16167 ;; Defined at:
 16168 ;;		line 78 in file "I2C.c"
 16169 ;; Parameters:    Size  Location     Type
 16170 ;;		None
 16171 ;; Auto vars:     Size  Location     Type
 16172 ;;		None
 16173 ;; Return value:  Size  Location     Type
 16174 ;;                  1    wreg      void 
 16175 ;; Registers used:
 16176 ;;		None
 16177 ;; Tracked objects:
 16178 ;;		On entry : 0/0
 16179 ;;		On exit  : 0/0
 16180 ;;		Unchanged: 0/0
 16181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16186 ;;Total ram usage:        0 bytes
 16187 ;; Hardware stack levels used:    1
 16188 ;; Hardware stack levels required when called:    1
 16189 ;; This function calls:
 16190 ;;		Nothing
 16191 ;; This function is called by:
 16192 ;;		_I2C_writeRegister
 16193 ;;		_readRegister
 16194 ;; This function uses a non-reentrant model
 16195 ;;
 16196                           
 16197                           
 16198                           ;psect for function _send_I2C_stopBit
 16199  2DF6                     _send_I2C_stopBit:	
 16200                           
 16201                           ;I2C.c: 79:     PIR1bits.SSP1IF = 0;
 16202                           
 16203                           ;incstack = 0
 16204                           ; Regs used in _send_I2C_stopBit: []
 16205  2DF6  0020               	movlb	0	; select bank0
 16206  2DF7  1191               	bcf	17,3	;volatile
 16207                           
 16208                           ;I2C.c: 80:     SSPCON2bits.PEN = 1;
 16209  2DF8  0024               	movlb	4	; select bank4
 16210  2DF9  1516               	bsf	22,2	;volatile
 16211  2DFA                     l303:	
 16212                           ;I2C.c: 81:     while (!PIR1bits.SSP1IF);
 16213                           
 16214  2DFA  0020               	movlb	0	; select bank0
 16215  2DFB  1991               	btfsc	17,3	;volatile
 16216  2DFC  0008               	return
 16217  2DFD  2DFA               	goto	l303
 16218  2DFE                     __end_of_send_I2C_stopBit:	
 16219                           
 16220                           	psect	text63
 16221  2DEE                     __ptext63:	
 16222 ;; *************** function _send_I2C_startBit *****************
 16223 ;; Defined at:
 16224 ;;		line 65 in file "I2C.c"
 16225 ;; Parameters:    Size  Location     Type
 16226 ;;		None
 16227 ;; Auto vars:     Size  Location     Type
 16228 ;;		None
 16229 ;; Return value:  Size  Location     Type
 16230 ;;                  1    wreg      void 
 16231 ;; Registers used:
 16232 ;;		None
 16233 ;; Tracked objects:
 16234 ;;		On entry : 0/0
 16235 ;;		On exit  : 0/0
 16236 ;;		Unchanged: 0/0
 16237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16242 ;;Total ram usage:        0 bytes
 16243 ;; Hardware stack levels used:    1
 16244 ;; Hardware stack levels required when called:    1
 16245 ;; This function calls:
 16246 ;;		Nothing
 16247 ;; This function is called by:
 16248 ;;		_I2C_writeRegister
 16249 ;;		_readRegister
 16250 ;; This function uses a non-reentrant model
 16251 ;;
 16252                           
 16253                           
 16254                           ;psect for function _send_I2C_startBit
 16255  2DEE                     _send_I2C_startBit:	
 16256                           
 16257                           ;I2C.c: 66:     PIR1bits.SSP1IF = 0;
 16258                           
 16259                           ;incstack = 0
 16260                           ; Regs used in _send_I2C_startBit: []
 16261  2DEE  0020               	movlb	0	; select bank0
 16262  2DEF  1191               	bcf	17,3	;volatile
 16263                           
 16264                           ;I2C.c: 67:     SSPCON2bits.SEN = 1;
 16265  2DF0  0024               	movlb	4	; select bank4
 16266  2DF1  1416               	bsf	22,0	;volatile
 16267  2DF2                     l291:	
 16268                           ;I2C.c: 68:     while (!PIR1bits.SSP1IF);
 16269                           
 16270  2DF2  0020               	movlb	0	; select bank0
 16271  2DF3  1991               	btfsc	17,3	;volatile
 16272  2DF4  0008               	return
 16273  2DF5  2DF2               	goto	l291
 16274  2DF6                     __end_of_send_I2C_startBit:	
 16275                           
 16276                           	psect	text64
 16277  2E07                     __ptext64:	
 16278 ;; *************** function _send_I2C_data *****************
 16279 ;; Defined at:
 16280 ;;		line 33 in file "I2C.c"
 16281 ;; Parameters:    Size  Location     Type
 16282 ;;  databyte        2    1[COMMON] unsigned int 
 16283 ;; Auto vars:     Size  Location     Type
 16284 ;;		None
 16285 ;; Return value:  Size  Location     Type
 16286 ;;                  1    wreg      void 
 16287 ;; Registers used:
 16288 ;;		wreg
 16289 ;; Tracked objects:
 16290 ;;		On entry : 0/0
 16291 ;;		On exit  : 0/0
 16292 ;;		Unchanged: 0/0
 16293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16294 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16297 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16298 ;;Total ram usage:        2 bytes
 16299 ;; Hardware stack levels used:    1
 16300 ;; Hardware stack levels required when called:    1
 16301 ;; This function calls:
 16302 ;;		Nothing
 16303 ;; This function is called by:
 16304 ;;		_I2C_writeRegister
 16305 ;;		_readRegister
 16306 ;; This function uses a non-reentrant model
 16307 ;;
 16308                           
 16309                           
 16310                           ;psect for function _send_I2C_data
 16311  2E07                     _send_I2C_data:	
 16312                           
 16313                           ;I2C.c: 34:     PIR1bits.SSP1IF = 0;
 16314                           
 16315                           ;incstack = 0
 16316                           ; Regs used in _send_I2C_data: [wreg]
 16317  2E07  0020               	movlb	0	; select bank0
 16318  2E08  1191               	bcf	17,3	;volatile
 16319                           
 16320                           ;I2C.c: 35:     SSPBUF = databyte;
 16321  2E09  0871               	movf	send_I2C_data@databyte,w
 16322  2E0A  0024               	movlb	4	; select bank4
 16323  2E0B  0091               	movwf	17	;volatile
 16324  2E0C                     l273:	
 16325                           ;I2C.c: 37:     while (!PIR1bits.SSP1IF);
 16326                           
 16327  2E0C  0020               	movlb	0	; select bank0
 16328  2E0D  1991               	btfsc	17,3	;volatile
 16329  2E0E  0008               	return
 16330  2E0F  2E0C               	goto	l273
 16331  2E10                     __end_of_send_I2C_data:	
 16332                           
 16333                           	psect	text65
 16334  2E10                     __ptext65:	
 16335 ;; *************** function _send_I2C_controlByte *****************
 16336 ;; Defined at:
 16337 ;;		line 53 in file "I2C.c"
 16338 ;; Parameters:    Size  Location     Type
 16339 ;;  BlockAddress    2    1[COMMON] unsigned int 
 16340 ;;  RW_bit          2    3[COMMON] unsigned int 
 16341 ;; Auto vars:     Size  Location     Type
 16342 ;;		None
 16343 ;; Return value:  Size  Location     Type
 16344 ;;                  1    wreg      void 
 16345 ;; Registers used:
 16346 ;;		wreg, status,2, status,0
 16347 ;; Tracked objects:
 16348 ;;		On entry : 0/0
 16349 ;;		On exit  : 0/0
 16350 ;;		Unchanged: 0/0
 16351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16352 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16355 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16356 ;;Total ram usage:        4 bytes
 16357 ;; Hardware stack levels used:    1
 16358 ;; Hardware stack levels required when called:    1
 16359 ;; This function calls:
 16360 ;;		Nothing
 16361 ;; This function is called by:
 16362 ;;		_I2C_writeRegister
 16363 ;;		_readRegister
 16364 ;; This function uses a non-reentrant model
 16365 ;;
 16366                           
 16367                           
 16368                           ;psect for function _send_I2C_controlByte
 16369  2E10                     _send_I2C_controlByte:	
 16370                           
 16371                           ;I2C.c: 54:     PIR1bits.SSP1IF = 0;
 16372                           
 16373                           ;incstack = 0
 16374                           ; Regs used in _send_I2C_controlByte: [wreg+status,2+status,0]
 16375  2E10  0020               	movlb	0	; select bank0
 16376  2E11  1191               	bcf	17,3	;volatile
 16377                           
 16378                           ;I2C.c: 60:     SSPBUF = (((0b0000 << 4) | (BlockAddress << 1)) + RW_bit);
 16379  2E12  3571               	lslf	send_I2C_controlByte@BlockAddress,w
 16380  2E13  0773               	addwf	send_I2C_controlByte@RW_bit,w
 16381  2E14  0024               	movlb	4	; select bank4
 16382  2E15  0091               	movwf	17	;volatile
 16383  2E16                     l285:	
 16384                           ;I2C.c: 62:     while (!PIR1bits.SSP1IF);
 16385                           
 16386  2E16  0020               	movlb	0	; select bank0
 16387  2E17  1991               	btfsc	17,3	;volatile
 16388  2E18  0008               	return
 16389  2E19  2E16               	goto	l285
 16390  2E1A                     __end_of_send_I2C_controlByte:	
 16391                           
 16392                           	psect	text66
 16393  2E24                     __ptext66:	
 16394 ;; *************** function _init_TMR1 *****************
 16395 ;; Defined at:
 16396 ;;		line 187 in file "main.c"
 16397 ;; Parameters:    Size  Location     Type
 16398 ;;		None
 16399 ;; Auto vars:     Size  Location     Type
 16400 ;;		None
 16401 ;; Return value:  Size  Location     Type
 16402 ;;                  1    wreg      void 
 16403 ;; Registers used:
 16404 ;;		wreg, status,2, status,0
 16405 ;; Tracked objects:
 16406 ;;		On entry : 0/0
 16407 ;;		On exit  : 0/0
 16408 ;;		Unchanged: 0/0
 16409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16414 ;;Total ram usage:        0 bytes
 16415 ;; Hardware stack levels used:    1
 16416 ;; Hardware stack levels required when called:    1
 16417 ;; This function calls:
 16418 ;;		Nothing
 16419 ;; This function is called by:
 16420 ;;		_main
 16421 ;; This function uses a non-reentrant model
 16422 ;;
 16423                           
 16424                           
 16425                           ;psect for function _init_TMR1
 16426  2E24                     _init_TMR1:	
 16427                           
 16428                           ;main.c: 190:     T1CONbits.T1CKPS = 0b00;
 16429                           
 16430                           ;incstack = 0
 16431                           ; Regs used in _init_TMR1: [wreg+status,2+status,0]
 16432  2E24  30CF               	movlw	-49
 16433  2E25  0020               	movlb	0	; select bank0
 16434  2E26  0598               	andwf	24,f	;volatile
 16435                           
 16436                           ;main.c: 192:     TMR1 = 0;
 16437  2E27  0196               	clrf	22	;volatile
 16438  2E28  0197               	clrf	23	;volatile
 16439                           
 16440                           ;main.c: 194:     T1CONbits.TMR1ON = 1;
 16441  2E29  1418               	bsf	24,0	;volatile
 16442                           
 16443                           ;main.c: 196:     PIE1bits.TMR1IE = 1;
 16444  2E2A  0021               	movlb	1	; select bank1
 16445  2E2B  1411               	bsf	17,0	;volatile
 16446                           
 16447                           ;main.c: 198:     INTCONbits.PEIE = 1;
 16448  2E2C  170B               	bsf	11,6	;volatile
 16449                           
 16450                           ;main.c: 200:     (INTCONbits.GIE = 1);
 16451  2E2D  178B               	bsf	11,7	;volatile
 16452  2E2E  0008               	return
 16453  2E2F                     __end_of_init_TMR1:	
 16454                           
 16455                           	psect	text67
 16456  2DE3                     __ptext67:	
 16457 ;; *************** function _init_RGB *****************
 16458 ;; Defined at:
 16459 ;;		line 6 in file "RGB.c"
 16460 ;; Parameters:    Size  Location     Type
 16461 ;;		None
 16462 ;; Auto vars:     Size  Location     Type
 16463 ;;		None
 16464 ;; Return value:  Size  Location     Type
 16465 ;;                  1    wreg      void 
 16466 ;; Registers used:
 16467 ;;		None
 16468 ;; Tracked objects:
 16469 ;;		On entry : 0/0
 16470 ;;		On exit  : 0/0
 16471 ;;		Unchanged: 0/0
 16472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16477 ;;Total ram usage:        0 bytes
 16478 ;; Hardware stack levels used:    1
 16479 ;; Hardware stack levels required when called:    1
 16480 ;; This function calls:
 16481 ;;		Nothing
 16482 ;; This function is called by:
 16483 ;;		_main
 16484 ;; This function uses a non-reentrant model
 16485 ;;
 16486                           
 16487                           
 16488                           ;psect for function _init_RGB
 16489  2DE3                     _init_RGB:	
 16490                           
 16491                           ;RGB.c: 8:     LATAbits.LATA4 = 1;
 16492                           
 16493                           ;incstack = 0
 16494                           ; Regs used in _init_RGB: []
 16495  2DE3  0022               	movlb	2	; select bank2
 16496  2DE4  160C               	bsf	12,4	;volatile
 16497                           
 16498                           ;RGB.c: 9:     LATAbits.LATA5 = 1;
 16499  2DE5  168C               	bsf	12,5	;volatile
 16500                           
 16501                           ;RGB.c: 10:     LATEbits.LATE0 = 1;
 16502  2DE6  1410               	bsf	16,0	;volatile
 16503  2DE7  0008               	return
 16504  2DE8                     __end_of_init_RGB:	
 16505                           
 16506                           	psect	text68
 16507  2E3B                     __ptext68:	
 16508 ;; *************** function _init_I2C *****************
 16509 ;; Defined at:
 16510 ;;		line 10 in file "I2C.c"
 16511 ;; Parameters:    Size  Location     Type
 16512 ;;		None
 16513 ;; Auto vars:     Size  Location     Type
 16514 ;;		None
 16515 ;; Return value:  Size  Location     Type
 16516 ;;                  1    wreg      void 
 16517 ;; Registers used:
 16518 ;;		wreg, status,2, status,0
 16519 ;; Tracked objects:
 16520 ;;		On entry : 0/0
 16521 ;;		On exit  : 0/0
 16522 ;;		Unchanged: 0/0
 16523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16526 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16527 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16528 ;;Total ram usage:        1 bytes
 16529 ;; Hardware stack levels used:    1
 16530 ;; Hardware stack levels required when called:    1
 16531 ;; This function calls:
 16532 ;;		Nothing
 16533 ;; This function is called by:
 16534 ;;		_main
 16535 ;; This function uses a non-reentrant model
 16536 ;;
 16537                           
 16538                           
 16539                           ;psect for function _init_I2C
 16540  2E3B                     _init_I2C:	
 16541                           
 16542                           ;I2C.c: 14:     SSPCONbits.SSPM = 0x08;
 16543                           
 16544                           ;incstack = 0
 16545                           ; Regs used in _init_I2C: [wreg+status,2+status,0]
 16546  2E3B  0024               	movlb	4	; select bank4
 16547  2E3C  0815               	movf	21,w	;volatile
 16548  2E3D  39F0               	andlw	-16
 16549  2E3E  3808               	iorlw	8
 16550  2E3F  0095               	movwf	21	;volatile
 16551                           
 16552                           ;I2C.c: 15:     SSPCONbits.SSPEN = 1;
 16553  2E40  1695               	bsf	21,5	;volatile
 16554                           
 16555                           ;I2C.c: 24:     SSPADD = 39;
 16556  2E41  3027               	movlw	39
 16557  2E42  0092               	movwf	18	;volatile
 16558                           
 16559                           ;I2C.c: 27:     _delay((unsigned long)((10)*(16000000/4000.0)));
 16560  2E43  3034               	movlw	52
 16561  2E44  00F1               	movwf	??_init_I2C
 16562  2E45  30F2               	movlw	242
 16563  2E46                     u11427:	
 16564  2E46  0B89               	decfsz	9,f
 16565  2E47  2E46               	goto	u11427
 16566  2E48  0BF1               	decfsz	??_init_I2C,f
 16567  2E49  2E46               	goto	u11427
 16568  2E4A  0008               	return
 16569  2E4B                     __end_of_init_I2C:	
 16570                           
 16571                           	psect	text69
 16572  0808                     __ptext69:	
 16573 ;; *************** function _init_GPIO *****************
 16574 ;; Defined at:
 16575 ;;		line 204 in file "main.c"
 16576 ;; Parameters:    Size  Location     Type
 16577 ;;		None
 16578 ;; Auto vars:     Size  Location     Type
 16579 ;;		None
 16580 ;; Return value:  Size  Location     Type
 16581 ;;                  1    wreg      void 
 16582 ;; Registers used:
 16583 ;;		wreg, status,2, status,0
 16584 ;; Tracked objects:
 16585 ;;		On entry : 0/0
 16586 ;;		On exit  : 0/0
 16587 ;;		Unchanged: 0/0
 16588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16593 ;;Total ram usage:        0 bytes
 16594 ;; Hardware stack levels used:    1
 16595 ;; Hardware stack levels required when called:    1
 16596 ;; This function calls:
 16597 ;;		Nothing
 16598 ;; This function is called by:
 16599 ;;		_main
 16600 ;; This function uses a non-reentrant model
 16601 ;;
 16602                           
 16603                           
 16604                           ;psect for function _init_GPIO
 16605  0808                     _init_GPIO:	
 16606                           
 16607                           ;main.c: 210:     TRISBbits.TRISB2 = 0;
 16608                           
 16609                           ;incstack = 0
 16610                           ; Regs used in _init_GPIO: [wreg+status,2+status,0]
 16611  0808  0021               	movlb	1	; select bank1
 16612  0809  110D               	bcf	13,2	;volatile
 16613                           
 16614                           ;main.c: 211:     ANSELBbits.ANSB2 = 0;
 16615  080A  0023               	movlb	3	; select bank3
 16616  080B  110D               	bcf	13,2	;volatile
 16617                           
 16618                           ;main.c: 212:     TRISBbits.TRISB3 = 1;
 16619  080C  0021               	movlb	1	; select bank1
 16620  080D  158D               	bsf	13,3	;volatile
 16621                           
 16622                           ;main.c: 213:     ANSELBbits.ANSB3 = 0;
 16623  080E  0023               	movlb	3	; select bank3
 16624  080F  118D               	bcf	13,3	;volatile
 16625                           
 16626                           ;main.c: 218:     ANSELCbits.ANSC4 = 0;
 16627  0810  120E               	bcf	14,4	;volatile
 16628                           
 16629                           ;main.c: 219:     ANSELCbits.ANSC5 = 0;
 16630  0811  128E               	bcf	14,5	;volatile
 16631                           
 16632                           ;main.c: 220:     TRISCbits.TRISC4 = 1;
 16633  0812  0021               	movlb	1	; select bank1
 16634  0813  160E               	bsf	14,4	;volatile
 16635                           
 16636                           ;main.c: 221:     TRISCbits.TRISC5 = 1;
 16637  0814  168E               	bsf	14,5	;volatile
 16638                           
 16639                           ;main.c: 230:     TRISAbits.TRISA4 = 0;
 16640  0815  120C               	bcf	12,4	;volatile
 16641                           
 16642                           ;main.c: 231:     TRISAbits.TRISA5 = 0;
 16643  0816  128C               	bcf	12,5	;volatile
 16644                           
 16645                           ;main.c: 232:     TRISEbits.TRISE0 = 0;
 16646  0817  1010               	bcf	16,0	;volatile
 16647                           
 16648                           ;main.c: 237:     TRISAbits.TRISA3 = 0;
 16649  0818  118C               	bcf	12,3	;volatile
 16650                           
 16651                           ;main.c: 238:     LATAbits.LATA3 = 0;
 16652  0819  0022               	movlb	2	; select bank2
 16653  081A  118C               	bcf	12,3	;volatile
 16654                           
 16655                           ;main.c: 244:     PPSLOCK = 0x55;
 16656  081B  3055               	movlw	85
 16657  081C  003C               	movlb	28	; select bank28
 16658  081D  008F               	movwf	15	;volsfr
 16659                           
 16660                           ;main.c: 245:     PPSLOCK = 0xAA;
 16661  081E  30AA               	movlw	170
 16662  081F  008F               	movwf	15	;volsfr
 16663                           
 16664                           ;main.c: 246:     PPSLOCKbits.PPSLOCKED = 0x00;
 16665  0820  100F               	bcf	15,0	;volsfr
 16666                           
 16667                           ;main.c: 250:     RC4PPSbits.RC4PPS = 0x0011;
 16668  0821  003D               	movlb	29	; select bank29
 16669  0822  0824               	movf	36,w	;volatile
 16670  0823  39E0               	andlw	-32
 16671  0824  3811               	iorlw	17
 16672  0825  00A4               	movwf	36	;volatile
 16673                           
 16674                           ;main.c: 251:     SSPDATPPSbits.SSPDATPPS = 0x0014;
 16675  0826  003C               	movlb	28	; select bank28
 16676  0827  0821               	movf	33,w	;volatile
 16677  0828  39E0               	andlw	-32
 16678  0829  3814               	iorlw	20
 16679  082A  00A1               	movwf	33	;volatile
 16680                           
 16681                           ;main.c: 252:     SSPCLKPPSbits.SSPCLKPPS = 0x0015;
 16682  082B  0820               	movf	32,w	;volatile
 16683  082C  39E0               	andlw	-32
 16684  082D  3815               	iorlw	21
 16685  082E  00A0               	movwf	32	;volatile
 16686                           
 16687                           ;main.c: 253:     RC5PPSbits.RC5PPS = 0x0010;
 16688  082F  003D               	movlb	29	; select bank29
 16689  0830  0825               	movf	37,w	;volatile
 16690  0831  39E0               	andlw	-32
 16691  0832  3810               	iorlw	16
 16692  0833  00A5               	movwf	37	;volatile
 16693                           
 16694                           ;main.c: 256:     RB2PPSbits.RB2PPS = 0x14;
 16695  0834  081A               	movf	26,w	;volatile
 16696  0835  39E0               	andlw	-32
 16697  0836  3814               	iorlw	20
 16698  0837  009A               	movwf	26	;volatile
 16699                           
 16700                           ;main.c: 257:     RXPPSbits.RXPPS = 0x0B;
 16701  0838  003C               	movlb	28	; select bank28
 16702  0839  0824               	movf	36,w	;volatile
 16703  083A  39E0               	andlw	-32
 16704  083B  380B               	iorlw	11
 16705  083C  00A4               	movwf	36	;volatile
 16706                           
 16707                           ;main.c: 259:     PPSLOCK = 0x55;
 16708  083D  3055               	movlw	85
 16709  083E  008F               	movwf	15	;volsfr
 16710                           
 16711                           ;main.c: 260:     PPSLOCK = 0xAA;
 16712  083F  30AA               	movlw	170
 16713  0840  008F               	movwf	15	;volsfr
 16714                           
 16715                           ;main.c: 261:     PPSLOCKbits.PPSLOCKED = 0x01;
 16716  0841  140F               	bsf	15,0	;volsfr
 16717  0842  0008               	return
 16718  0843                     __end_of_init_GPIO:	
 16719                           
 16720                           	psect	text70
 16721  2DE8                     __ptext70:	
 16722 ;; *************** function _initWDT *****************
 16723 ;; Defined at:
 16724 ;;		line 265 in file "main.c"
 16725 ;; Parameters:    Size  Location     Type
 16726 ;;		None
 16727 ;; Auto vars:     Size  Location     Type
 16728 ;;		None
 16729 ;; Return value:  Size  Location     Type
 16730 ;;                  1    wreg      void 
 16731 ;; Registers used:
 16732 ;;		wreg, status,2, status,0
 16733 ;; Tracked objects:
 16734 ;;		On entry : 0/0
 16735 ;;		On exit  : 0/0
 16736 ;;		Unchanged: 0/0
 16737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16742 ;;Total ram usage:        0 bytes
 16743 ;; Hardware stack levels used:    1
 16744 ;; Hardware stack levels required when called:    1
 16745 ;; This function calls:
 16746 ;;		Nothing
 16747 ;; This function is called by:
 16748 ;;		_main
 16749 ;; This function uses a non-reentrant model
 16750 ;;
 16751                           
 16752                           
 16753                           ;psect for function _initWDT
 16754  2DE8                     _initWDT:	
 16755                           
 16756                           ;main.c: 267:     WDTCONbits.WDTPS = 0b01101;
 16757                           
 16758                           ;incstack = 0
 16759                           ; Regs used in _initWDT: [wreg+status,2+status,0]
 16760  2DE8  0021               	movlb	1	; select bank1
 16761  2DE9  0817               	movf	23,w	;volatile
 16762  2DEA  39C1               	andlw	-63
 16763  2DEB  381A               	iorlw	26
 16764  2DEC  0097               	movwf	23	;volatile
 16765  2DED  0008               	return
 16766  2DEE                     __end_of_initWDT:	
 16767                           
 16768                           	psect	text71
 16769  2DE0                     __ptext71:	
 16770 ;; *************** function _initClock *****************
 16771 ;; Defined at:
 16772 ;;		line 178 in file "main.c"
 16773 ;; Parameters:    Size  Location     Type
 16774 ;;		None
 16775 ;; Auto vars:     Size  Location     Type
 16776 ;;		None
 16777 ;; Return value:  Size  Location     Type
 16778 ;;                  1    wreg      void 
 16779 ;; Registers used:
 16780 ;;		status,2, status,0, pclath, cstack
 16781 ;; Tracked objects:
 16782 ;;		On entry : 0/0
 16783 ;;		On exit  : 0/0
 16784 ;;		Unchanged: 0/0
 16785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16790 ;;Total ram usage:        0 bytes
 16791 ;; Hardware stack levels used:    1
 16792 ;; Hardware stack levels required when called:    2
 16793 ;; This function calls:
 16794 ;;		_internal_16
 16795 ;; This function is called by:
 16796 ;;		_main
 16797 ;; This function uses a non-reentrant model
 16798 ;;
 16799                           
 16800                           
 16801                           ;psect for function _initClock
 16802  2DE0                     _initClock:	
 16803                           
 16804                           ;main.c: 180:     internal_16();
 16805                           
 16806                           ;incstack = 0
 16807                           ; Regs used in _initClock: [status,2+status,0+pclath+cstack]
 16808  2DE0  31AD  25FE         	fcall	_internal_16
 16809  2DE2  0008               	return
 16810  2DE3                     __end_of_initClock:	
 16811                           
 16812                           	psect	text72
 16813  2DFE                     __ptext72:	
 16814 ;; *************** function _internal_16 *****************
 16815 ;; Defined at:
 16816 ;;		line 26 in file "pic16f1719_internals.c"
 16817 ;; Parameters:    Size  Location     Type
 16818 ;;		None
 16819 ;; Auto vars:     Size  Location     Type
 16820 ;;		None
 16821 ;; Return value:  Size  Location     Type
 16822 ;;                  1    wreg      void 
 16823 ;; Registers used:
 16824 ;;		None
 16825 ;; Tracked objects:
 16826 ;;		On entry : 0/0
 16827 ;;		On exit  : 0/0
 16828 ;;		Unchanged: 0/0
 16829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16834 ;;Total ram usage:        0 bytes
 16835 ;; Hardware stack levels used:    1
 16836 ;; Hardware stack levels required when called:    1
 16837 ;; This function calls:
 16838 ;;		Nothing
 16839 ;; This function is called by:
 16840 ;;		_initClock
 16841 ;; This function uses a non-reentrant model
 16842 ;;
 16843                           
 16844                           
 16845                           ;psect for function _internal_16
 16846  2DFE                     _internal_16:	
 16847                           
 16848                           ;pic16f1719_internals.c: 28: SCS0 = 0;
 16849                           
 16850                           ;incstack = 0
 16851                           ; Regs used in _internal_16: []
 16852  2DFE  0021               	movlb	1	; select bank1
 16853  2DFF  1019               	bcf	25,0	;volatile
 16854                           
 16855                           ;pic16f1719_internals.c: 29: SCS1 = 0;
 16856  2E00  1099               	bcf	25,1	;volatile
 16857                           
 16858                           ;pic16f1719_internals.c: 31: IRCF0 = 1;
 16859  2E01  1599               	bsf	25,3	;volatile
 16860                           
 16861                           ;pic16f1719_internals.c: 32: IRCF1 = 1;
 16862  2E02  1619               	bsf	25,4	;volatile
 16863                           
 16864                           ;pic16f1719_internals.c: 33: IRCF2 = 1;
 16865  2E03  1699               	bsf	25,5	;volatile
 16866                           
 16867                           ;pic16f1719_internals.c: 34: IRCF3 = 1;
 16868  2E04  1719               	bsf	25,6	;volatile
 16869                           
 16870                           ;pic16f1719_internals.c: 36: SPLLEN = 0;
 16871  2E05  1399               	bcf	25,7	;volatile
 16872  2E06  0008               	return
 16873  2E07                     __end_of_internal_16:	
 16874                           
 16875                           	psect	text73
 16876  1844                     __ptext73:	
 16877 ;; *************** function _EUSART_Initialize *****************
 16878 ;; Defined at:
 16879 ;;		line 6 in file "EUSART.c"
 16880 ;; Parameters:    Size  Location     Type
 16881 ;;  baudrate        4   18[BANK0 ] const long 
 16882 ;; Auto vars:     Size  Location     Type
 16883 ;;  x               2   10[COMMON] unsigned int 
 16884 ;; Return value:  Size  Location     Type
 16885 ;;                  1    wreg      unsigned char 
 16886 ;; Registers used:
 16887 ;;		wreg, status,2, status,0, pclath, cstack
 16888 ;; Tracked objects:
 16889 ;;		On entry : 0/0
 16890 ;;		On exit  : 0/0
 16891 ;;		Unchanged: 0/0
 16892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16893 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16894 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16895 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16896 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16897 ;;Total ram usage:       18 bytes
 16898 ;; Hardware stack levels used:    1
 16899 ;; Hardware stack levels required when called:    2
 16900 ;; This function calls:
 16901 ;;		___aldiv
 16902 ;; This function is called by:
 16903 ;;		_main
 16904 ;; This function uses a non-reentrant model
 16905 ;;
 16906                           
 16907                           
 16908                           ;psect for function _EUSART_Initialize
 16909  1844                     _EUSART_Initialize:	
 16910                           
 16911                           ;EUSART.c: 6: char EUSART_Initialize(const long int baudrate);EUSART.c: 7: {;EUSART.c: 8
      +                          :  unsigned int x;;EUSART.c: 9:  x = (16000000 - baudrate*64)/(baudrate*64);
 16912                           
 16913                           ;incstack = 0
 16914                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16915  1844  0020               	movlb	0	; select bank0
 16916  1845  0832               	movf	EUSART_Initialize@baudrate,w
 16917  1846  00B6               	movwf	??_EUSART_Initialize
 16918  1847  0833               	movf	EUSART_Initialize@baudrate+1,w
 16919  1848  00B7               	movwf	??_EUSART_Initialize+1
 16920  1849  0834               	movf	EUSART_Initialize@baudrate+2,w
 16921  184A  00B8               	movwf	??_EUSART_Initialize+2
 16922  184B  0835               	movf	EUSART_Initialize@baudrate+3,w
 16923  184C  00B9               	movwf	??_EUSART_Initialize+3
 16924  184D  3006               	movlw	6
 16925  184E                     u11175:	
 16926  184E  35B6               	lslf	??_EUSART_Initialize,f
 16927  184F  0DB7               	rlf	??_EUSART_Initialize+1,f
 16928  1850  0DB8               	rlf	??_EUSART_Initialize+2,f
 16929  1851  0DB9               	rlf	??_EUSART_Initialize+3,f
 16930  1852  0B89               	decfsz	9,f
 16931  1853  284E               	goto	u11175
 16932  1854  0839               	movf	??_EUSART_Initialize+3,w
 16933  1855  00A7               	movwf	___aldiv@divisor+3
 16934  1856  0838               	movf	??_EUSART_Initialize+2,w
 16935  1857  00A6               	movwf	___aldiv@divisor+2
 16936  1858  0837               	movf	??_EUSART_Initialize+1,w
 16937  1859  00A5               	movwf	___aldiv@divisor+1
 16938  185A  0836               	movf	??_EUSART_Initialize,w
 16939  185B  00A4               	movwf	___aldiv@divisor
 16940  185C  0832               	movf	EUSART_Initialize@baudrate,w
 16941  185D  00BA               	movwf	??_EUSART_Initialize+4
 16942  185E  0833               	movf	EUSART_Initialize@baudrate+1,w
 16943  185F  00BB               	movwf	??_EUSART_Initialize+5
 16944  1860  0834               	movf	EUSART_Initialize@baudrate+2,w
 16945  1861  00BC               	movwf	??_EUSART_Initialize+6
 16946  1862  0835               	movf	EUSART_Initialize@baudrate+3,w
 16947  1863  00BD               	movwf	??_EUSART_Initialize+7
 16948  1864  3006               	movlw	6
 16949  1865                     u11185:	
 16950  1865  35BA               	lslf	??_EUSART_Initialize+4,f
 16951  1866  0DBB               	rlf	??_EUSART_Initialize+5,f
 16952  1867  0DBC               	rlf	??_EUSART_Initialize+6,f
 16953  1868  0DBD               	rlf	??_EUSART_Initialize+7,f
 16954  1869  0B89               	decfsz	9,f
 16955  186A  2865               	goto	u11185
 16956  186B  3000               	movlw	0
 16957  186C  00BE               	movwf	??_EUSART_Initialize+8
 16958  186D  3024               	movlw	36
 16959  186E  00BF               	movwf	??_EUSART_Initialize+9
 16960  186F  30F4               	movlw	244
 16961  1870  00C0               	movwf	??_EUSART_Initialize+10
 16962  1871  3000               	movlw	0
 16963  1872  00C1               	movwf	??_EUSART_Initialize+11
 16964  1873  083A               	movf	??_EUSART_Initialize+4,w
 16965  1874  02BE               	subwf	??_EUSART_Initialize+8,f
 16966  1875  083B               	movf	??_EUSART_Initialize+5,w
 16967  1876  3BBF               	subwfb	??_EUSART_Initialize+9,f
 16968  1877  083C               	movf	??_EUSART_Initialize+6,w
 16969  1878  3BC0               	subwfb	??_EUSART_Initialize+10,f
 16970  1879  083D               	movf	??_EUSART_Initialize+7,w
 16971  187A  3BC1               	subwfb	??_EUSART_Initialize+11,f
 16972  187B  0841               	movf	??_EUSART_Initialize+11,w
 16973  187C  00AB               	movwf	___aldiv@dividend+3
 16974  187D  0840               	movf	??_EUSART_Initialize+10,w
 16975  187E  00AA               	movwf	___aldiv@dividend+2
 16976  187F  083F               	movf	??_EUSART_Initialize+9,w
 16977  1880  00A9               	movwf	___aldiv@dividend+1
 16978  1881  083E               	movf	??_EUSART_Initialize+8,w
 16979  1882  00A8               	movwf	___aldiv@dividend
 16980  1883  31A5  25A9  3198   	fcall	___aldiv
 16981  1886  0020               	movlb	0	; select bank0
 16982  1887  0825               	movf	?___aldiv+1,w
 16983  1888  00FB               	movwf	EUSART_Initialize@x+1
 16984  1889  0824               	movf	?___aldiv,w
 16985  188A  00FA               	movwf	EUSART_Initialize@x
 16986                           
 16987                           ;EUSART.c: 10:  if(x>255)
 16988  188B  3001               	movlw	1
 16989  188C  027B               	subwf	EUSART_Initialize@x+1,w
 16990  188D  3000               	movlw	0
 16991  188E  1903               	skipnz
 16992  188F  027A               	subwf	EUSART_Initialize@x,w
 16993  1890  1C03               	skipc
 16994  1891  28DA               	goto	l8001
 16995                           
 16996                           ;EUSART.c: 11:  {;EUSART.c: 12:   x = (16000000 - baudrate*16)/(baudrate*16);
 16997  1892  0832               	movf	EUSART_Initialize@baudrate,w
 16998  1893  00B6               	movwf	??_EUSART_Initialize
 16999  1894  0833               	movf	EUSART_Initialize@baudrate+1,w
 17000  1895  00B7               	movwf	??_EUSART_Initialize+1
 17001  1896  0834               	movf	EUSART_Initialize@baudrate+2,w
 17002  1897  00B8               	movwf	??_EUSART_Initialize+2
 17003  1898  0835               	movf	EUSART_Initialize@baudrate+3,w
 17004  1899  00B9               	movwf	??_EUSART_Initialize+3
 17005  189A  3004               	movlw	4
 17006  189B                     u11205:	
 17007  189B  35B6               	lslf	??_EUSART_Initialize,f
 17008  189C  0DB7               	rlf	??_EUSART_Initialize+1,f
 17009  189D  0DB8               	rlf	??_EUSART_Initialize+2,f
 17010  189E  0DB9               	rlf	??_EUSART_Initialize+3,f
 17011  189F  0B89               	decfsz	9,f
 17012  18A0  289B               	goto	u11205
 17013  18A1  0839               	movf	??_EUSART_Initialize+3,w
 17014  18A2  00A7               	movwf	___aldiv@divisor+3
 17015  18A3  0838               	movf	??_EUSART_Initialize+2,w
 17016  18A4  00A6               	movwf	___aldiv@divisor+2
 17017  18A5  0837               	movf	??_EUSART_Initialize+1,w
 17018  18A6  00A5               	movwf	___aldiv@divisor+1
 17019  18A7  0836               	movf	??_EUSART_Initialize,w
 17020  18A8  00A4               	movwf	___aldiv@divisor
 17021  18A9  0832               	movf	EUSART_Initialize@baudrate,w
 17022  18AA  00BA               	movwf	??_EUSART_Initialize+4
 17023  18AB  0833               	movf	EUSART_Initialize@baudrate+1,w
 17024  18AC  00BB               	movwf	??_EUSART_Initialize+5
 17025  18AD  0834               	movf	EUSART_Initialize@baudrate+2,w
 17026  18AE  00BC               	movwf	??_EUSART_Initialize+6
 17027  18AF  0835               	movf	EUSART_Initialize@baudrate+3,w
 17028  18B0  00BD               	movwf	??_EUSART_Initialize+7
 17029  18B1  3004               	movlw	4
 17030  18B2                     u11215:	
 17031  18B2  35BA               	lslf	??_EUSART_Initialize+4,f
 17032  18B3  0DBB               	rlf	??_EUSART_Initialize+5,f
 17033  18B4  0DBC               	rlf	??_EUSART_Initialize+6,f
 17034  18B5  0DBD               	rlf	??_EUSART_Initialize+7,f
 17035  18B6  0B89               	decfsz	9,f
 17036  18B7  28B2               	goto	u11215
 17037  18B8  3000               	movlw	0
 17038  18B9  00BE               	movwf	??_EUSART_Initialize+8
 17039  18BA  3024               	movlw	36
 17040  18BB  00BF               	movwf	??_EUSART_Initialize+9
 17041  18BC  30F4               	movlw	244
 17042  18BD  00C0               	movwf	??_EUSART_Initialize+10
 17043  18BE  3000               	movlw	0
 17044  18BF  00C1               	movwf	??_EUSART_Initialize+11
 17045  18C0  083A               	movf	??_EUSART_Initialize+4,w
 17046  18C1  02BE               	subwf	??_EUSART_Initialize+8,f
 17047  18C2  083B               	movf	??_EUSART_Initialize+5,w
 17048  18C3  3BBF               	subwfb	??_EUSART_Initialize+9,f
 17049  18C4  083C               	movf	??_EUSART_Initialize+6,w
 17050  18C5  3BC0               	subwfb	??_EUSART_Initialize+10,f
 17051  18C6  083D               	movf	??_EUSART_Initialize+7,w
 17052  18C7  3BC1               	subwfb	??_EUSART_Initialize+11,f
 17053  18C8  0841               	movf	??_EUSART_Initialize+11,w
 17054  18C9  00AB               	movwf	___aldiv@dividend+3
 17055  18CA  0840               	movf	??_EUSART_Initialize+10,w
 17056  18CB  00AA               	movwf	___aldiv@dividend+2
 17057  18CC  083F               	movf	??_EUSART_Initialize+9,w
 17058  18CD  00A9               	movwf	___aldiv@dividend+1
 17059  18CE  083E               	movf	??_EUSART_Initialize+8,w
 17060  18CF  00A8               	movwf	___aldiv@dividend
 17061  18D0  31A5  25A9  3198   	fcall	___aldiv
 17062  18D3  0020               	movlb	0	; select bank0
 17063  18D4  0825               	movf	?___aldiv+1,w
 17064  18D5  00FB               	movwf	EUSART_Initialize@x+1
 17065  18D6  0824               	movf	?___aldiv,w
 17066  18D7  00FA               	movwf	EUSART_Initialize@x
 17067                           
 17068                           ;EUSART.c: 13:   BRGH = 1;
 17069  18D8  0023               	movlb	3	; select bank3
 17070  18D9  151E               	bsf	30,2	;volatile
 17071  18DA                     l8001:	
 17072                           
 17073                           ;EUSART.c: 15:  if(x<256)
 17074  18DA  3001               	movlw	1
 17075  18DB  027B               	subwf	EUSART_Initialize@x+1,w
 17076  18DC  3000               	movlw	0
 17077  18DD  1903               	skipnz
 17078  18DE  027A               	subwf	EUSART_Initialize@x,w
 17079  18DF  1803               	skipnc
 17080  18E0  0008               	return
 17081                           
 17082                           ;EUSART.c: 16:  {;EUSART.c: 17:    SPBRG = x;
 17083  18E1  087A               	movf	EUSART_Initialize@x,w
 17084  18E2  0023               	movlb	3	; select bank3
 17085  18E3  009B               	movwf	27	;volatile
 17086                           
 17087                           ;EUSART.c: 18:    SYNC = 0;
 17088  18E4  121E               	bcf	30,4	;volatile
 17089                           
 17090                           ;EUSART.c: 19:    SPEN = 1;
 17091  18E5  179D               	bsf	29,7	;volatile
 17092                           
 17093                           ;EUSART.c: 20:           TRISC7 = 1;
 17094  18E6  0021               	movlb	1	; select bank1
 17095  18E7  178E               	bsf	14,7	;volatile
 17096                           
 17097                           ;EUSART.c: 21:           TRISC6 = 1;
 17098  18E8  170E               	bsf	14,6	;volatile
 17099                           
 17100                           ;EUSART.c: 22:           CREN = 1;
 17101  18E9  0023               	movlb	3	; select bank3
 17102  18EA  161D               	bsf	29,4	;volatile
 17103                           
 17104                           ;EUSART.c: 23:           TXEN = 1;
 17105  18EB  169E               	bsf	30,5	;volatile
 17106  18EC  0008               	return
 17107  18ED                     __end_of_EUSART_Initialize:	
 17108                           
 17109                           	psect	text74
 17110  25A9                     __ptext74:	
 17111 ;; *************** function ___aldiv *****************
 17112 ;; Defined at:
 17113 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
 17114 ;; Parameters:    Size  Location     Type
 17115 ;;  divisor         4    4[BANK0 ] long 
 17116 ;;  dividend        4    8[BANK0 ] long 
 17117 ;; Auto vars:     Size  Location     Type
 17118 ;;  quotient        4   14[BANK0 ] long 
 17119 ;;  sign            1   13[BANK0 ] unsigned char 
 17120 ;;  counter         1   12[BANK0 ] unsigned char 
 17121 ;; Return value:  Size  Location     Type
 17122 ;;                  4    4[BANK0 ] long 
 17123 ;; Registers used:
 17124 ;;		wreg, status,2, status,0
 17125 ;; Tracked objects:
 17126 ;;		On entry : 0/0
 17127 ;;		On exit  : 0/0
 17128 ;;		Unchanged: 0/0
 17129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17130 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17131 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17132 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17133 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17134 ;;Total ram usage:       15 bytes
 17135 ;; Hardware stack levels used:    1
 17136 ;; Hardware stack levels required when called:    1
 17137 ;; This function calls:
 17138 ;;		Nothing
 17139 ;; This function is called by:
 17140 ;;		_EUSART_Initialize
 17141 ;;		_setCellUndervoltageProtection
 17142 ;;		_setCellOvervoltageProtection
 17143 ;;		_updateVoltages
 17144 ;; This function uses a non-reentrant model
 17145 ;;
 17146                           
 17147                           
 17148                           ;psect for function ___aldiv
 17149  25A9                     ___aldiv:	
 17150                           
 17151                           ;incstack = 0
 17152                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 17153  25A9  0020               	movlb	0	; select bank0
 17154  25AA  01AD               	clrf	___aldiv@sign
 17155  25AB  1FA7               	btfss	___aldiv@divisor+3,7
 17156  25AC  2DBA               	goto	l905
 17157  25AD  09A4               	comf	___aldiv@divisor,f
 17158  25AE  09A5               	comf	___aldiv@divisor+1,f
 17159  25AF  09A6               	comf	___aldiv@divisor+2,f
 17160  25B0  09A7               	comf	___aldiv@divisor+3,f
 17161  25B1  0AA4               	incf	___aldiv@divisor,f
 17162  25B2  1903               	skipnz
 17163  25B3  0AA5               	incf	___aldiv@divisor+1,f
 17164  25B4  1903               	skipnz
 17165  25B5  0AA6               	incf	___aldiv@divisor+2,f
 17166  25B6  1903               	skipnz
 17167  25B7  0AA7               	incf	___aldiv@divisor+3,f
 17168  25B8  01AD               	clrf	___aldiv@sign
 17169  25B9  0AAD               	incf	___aldiv@sign,f
 17170  25BA                     l905:	
 17171  25BA  1FAB               	btfss	___aldiv@dividend+3,7
 17172  25BB  2DCB               	goto	l7099
 17173  25BC  09A8               	comf	___aldiv@dividend,f
 17174  25BD  09A9               	comf	___aldiv@dividend+1,f
 17175  25BE  09AA               	comf	___aldiv@dividend+2,f
 17176  25BF  09AB               	comf	___aldiv@dividend+3,f
 17177  25C0  0AA8               	incf	___aldiv@dividend,f
 17178  25C1  1903               	skipnz
 17179  25C2  0AA9               	incf	___aldiv@dividend+1,f
 17180  25C3  1903               	skipnz
 17181  25C4  0AAA               	incf	___aldiv@dividend+2,f
 17182  25C5  1903               	skipnz
 17183  25C6  0AAB               	incf	___aldiv@dividend+3,f
 17184  25C7  3001               	movlw	1
 17185  25C8  00F9               	movwf	??___aldiv
 17186  25C9  0879               	movf	??___aldiv,w
 17187  25CA  06AD               	xorwf	___aldiv@sign,f
 17188  25CB                     l7099:	
 17189  25CB  3000               	movlw	0
 17190  25CC  00B1               	movwf	___aldiv@quotient+3
 17191  25CD  3000               	movlw	0
 17192  25CE  00B0               	movwf	___aldiv@quotient+2
 17193  25CF  3000               	movlw	0
 17194  25D0  00AF               	movwf	___aldiv@quotient+1
 17195  25D1  3000               	movlw	0
 17196  25D2  00AE               	movwf	___aldiv@quotient
 17197  25D3  0827               	movf	___aldiv@divisor+3,w
 17198  25D4  0426               	iorwf	___aldiv@divisor+2,w
 17199  25D5  0425               	iorwf	___aldiv@divisor+1,w
 17200  25D6  0424               	iorwf	___aldiv@divisor,w
 17201  25D7  1903               	skipnz
 17202  25D8  2E14               	goto	l7121
 17203  25D9  01AC               	clrf	___aldiv@counter
 17204  25DA  0AAC               	incf	___aldiv@counter,f
 17205  25DB                     l7107:	
 17206  25DB  1BA7               	btfsc	___aldiv@divisor+3,7
 17207  25DC  2DE9               	goto	l7109
 17208  25DD  3001               	movlw	1
 17209  25DE                     u9535:	
 17210  25DE  35A4               	lslf	___aldiv@divisor,f
 17211  25DF  0DA5               	rlf	___aldiv@divisor+1,f
 17212  25E0  0DA6               	rlf	___aldiv@divisor+2,f
 17213  25E1  0DA7               	rlf	___aldiv@divisor+3,f
 17214  25E2  0B89               	decfsz	9,f
 17215  25E3  2DDE               	goto	u9535
 17216  25E4  3001               	movlw	1
 17217  25E5  00F9               	movwf	??___aldiv
 17218  25E6  0879               	movf	??___aldiv,w
 17219  25E7  07AC               	addwf	___aldiv@counter,f
 17220  25E8  2DDB               	goto	l7107
 17221  25E9                     l7109:	
 17222  25E9  3001               	movlw	1
 17223  25EA                     u9555:	
 17224  25EA  35AE               	lslf	___aldiv@quotient,f
 17225  25EB  0DAF               	rlf	___aldiv@quotient+1,f
 17226  25EC  0DB0               	rlf	___aldiv@quotient+2,f
 17227  25ED  0DB1               	rlf	___aldiv@quotient+3,f
 17228  25EE  0B89               	decfsz	9,f
 17229  25EF  2DEA               	goto	u9555
 17230  25F0  0827               	movf	___aldiv@divisor+3,w
 17231  25F1  022B               	subwf	___aldiv@dividend+3,w
 17232  25F2  1D03               	skipz
 17233  25F3  2DFE               	goto	u9565
 17234  25F4  0826               	movf	___aldiv@divisor+2,w
 17235  25F5  022A               	subwf	___aldiv@dividend+2,w
 17236  25F6  1D03               	skipz
 17237  25F7  2DFE               	goto	u9565
 17238  25F8  0825               	movf	___aldiv@divisor+1,w
 17239  25F9  0229               	subwf	___aldiv@dividend+1,w
 17240  25FA  1D03               	skipz
 17241  25FB  2DFE               	goto	u9565
 17242  25FC  0824               	movf	___aldiv@divisor,w
 17243  25FD  0228               	subwf	___aldiv@dividend,w
 17244  25FE                     u9565:	
 17245  25FE  1C03               	skipc
 17246  25FF  2E09               	goto	l7117
 17247  2600  0824               	movf	___aldiv@divisor,w
 17248  2601  02A8               	subwf	___aldiv@dividend,f
 17249  2602  0825               	movf	___aldiv@divisor+1,w
 17250  2603  3BA9               	subwfb	___aldiv@dividend+1,f
 17251  2604  0826               	movf	___aldiv@divisor+2,w
 17252  2605  3BAA               	subwfb	___aldiv@dividend+2,f
 17253  2606  0827               	movf	___aldiv@divisor+3,w
 17254  2607  3BAB               	subwfb	___aldiv@dividend+3,f
 17255  2608  142E               	bsf	___aldiv@quotient,0
 17256  2609                     l7117:	
 17257  2609  3001               	movlw	1
 17258  260A                     u9575:	
 17259  260A  36A7               	lsrf	___aldiv@divisor+3,f
 17260  260B  0CA6               	rrf	___aldiv@divisor+2,f
 17261  260C  0CA5               	rrf	___aldiv@divisor+1,f
 17262  260D  0CA4               	rrf	___aldiv@divisor,f
 17263  260E  0B89               	decfsz	9,f
 17264  260F  2E0A               	goto	u9575
 17265  2610  3001               	movlw	1
 17266  2611  02AC               	subwf	___aldiv@counter,f
 17267  2612  1D03               	btfss	3,2
 17268  2613  2DE9               	goto	l7109
 17269  2614                     l7121:	
 17270  2614  082D               	movf	___aldiv@sign,w
 17271  2615  1903               	btfsc	3,2
 17272  2616  2E22               	goto	l7125
 17273  2617  09AE               	comf	___aldiv@quotient,f
 17274  2618  09AF               	comf	___aldiv@quotient+1,f
 17275  2619  09B0               	comf	___aldiv@quotient+2,f
 17276  261A  09B1               	comf	___aldiv@quotient+3,f
 17277  261B  0AAE               	incf	___aldiv@quotient,f
 17278  261C  1903               	skipnz
 17279  261D  0AAF               	incf	___aldiv@quotient+1,f
 17280  261E  1903               	skipnz
 17281  261F  0AB0               	incf	___aldiv@quotient+2,f
 17282  2620  1903               	skipnz
 17283  2621  0AB1               	incf	___aldiv@quotient+3,f
 17284  2622                     l7125:	
 17285  2622  0831               	movf	___aldiv@quotient+3,w
 17286  2623  00A7               	movwf	?___aldiv+3
 17287  2624  0830               	movf	___aldiv@quotient+2,w
 17288  2625  00A6               	movwf	?___aldiv+2
 17289  2626  082F               	movf	___aldiv@quotient+1,w
 17290  2627  00A5               	movwf	?___aldiv+1
 17291  2628  082E               	movf	___aldiv@quotient,w
 17292  2629  00A4               	movwf	?___aldiv
 17293  262A  0008               	return
 17294  262B                     __end_of___aldiv:	
 17295                           
 17296                           	psect	intentry
 17297  0004                     __pintentry:	
 17298 ;; *************** function _myIsr *****************
 17299 ;; Defined at:
 17300 ;;		line 59 in file "main.c"
 17301 ;; Parameters:    Size  Location     Type
 17302 ;;		None
 17303 ;; Auto vars:     Size  Location     Type
 17304 ;;		None
 17305 ;; Return value:  Size  Location     Type
 17306 ;;                  1    wreg      void 
 17307 ;; Registers used:
 17308 ;;		wreg, status,2, status,0
 17309 ;; Tracked objects:
 17310 ;;		On entry : 0/0
 17311 ;;		On exit  : 0/0
 17312 ;;		Unchanged: 0/0
 17313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17316 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17317 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17318 ;;Total ram usage:        1 bytes
 17319 ;; Hardware stack levels used:    1
 17320 ;; This function calls:
 17321 ;;		Nothing
 17322 ;; This function is called by:
 17323 ;;		Interrupt level 1
 17324 ;; This function uses a non-reentrant model
 17325 ;;
 17326                           
 17327  0004                     _myIsr:	
 17328                           
 17329                           ;incstack = 0
 17330  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 17331                           
 17332                           ; Regs used in _myIsr: [wreg+status,2+status,0]
 17333  0005  3180               	pagesel	$
 17334                           
 17335                           ;main.c: 61:     static uint8_t count = 0;;main.c: 63:     if (PIR1bits.TMR1IF && PIE1bi
      +                          ts.TMR1IE) {
 17336  0006  0020               	movlb	0	; select bank0
 17337  0007  1C11               	btfss	17,0	;volatile
 17338  0008  281E               	goto	i1l141
 17339  0009  0021               	movlb	1	; select bank1
 17340  000A  1C11               	btfss	17,0	;volatile
 17341  000B  281E               	goto	i1l141
 17342                           
 17343                           ;main.c: 64:         PIR1bits.TMR1IF = 0;
 17344  000C  0020               	movlb	0	; select bank0
 17345  000D  1011               	bcf	17,0	;volatile
 17346                           
 17347                           ;main.c: 65:         count++;
 17348  000E  3001               	movlw	1
 17349  000F  00F0               	movwf	??_myIsr
 17350  0010  0870               	movf	??_myIsr,w
 17351  0011  0022               	movlb	2	; select bank2
 17352  0012  07D9               	addwf	myIsr@count^(0+256),f
 17353                           
 17354                           ;main.c: 68:         if (count == 61) {
 17355  0013  303D               	movlw	61
 17356  0014  0659               	xorwf	myIsr@count^(0+256),w
 17357  0015  1D03               	btfss	3,2
 17358  0016  281E               	goto	i1l141
 17359                           
 17360                           ;main.c: 69:             tmr1_flag = 1;
 17361  0017  3001               	movlw	1
 17362  0018  00F0               	movwf	??_myIsr
 17363  0019  0870               	movf	??_myIsr,w
 17364  001A  0021               	movlb	1	; select bank1
 17365  001B  00EF               	movwf	_tmr1_flag^(0+128)	;volatile
 17366                           
 17367                           ;main.c: 70:             count = 0;
 17368  001C  0022               	movlb	2	; select bank2
 17369  001D  01D9               	clrf	myIsr@count^(0+256)
 17370  001E                     i1l141:	
 17371  001E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 17372  001F  0009               	retfie
 17373  0020                     __end_of_myIsr:	
 17374  007E                     btemp	set	126	;btemp
 17375  007E                     int$flags	set	126
 17376  007E                     wtemp0	set	126
 17377  2771                     
 17378                           	psect	text8_split_1
 17379  1F06                     l6717:	
 17380                           
 17381                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
 17382  1F06  0859               	movf	vfpfcnvrt@fmt,w
 17383  1F07  0086               	movwf	6
 17384  1F08  0187               	clrf	7
 17385  1F09  3F40               	moviw [0]fsr1
 17386  1F0A  00F1               	movwf	strncmp@_l
 17387  1F0B  3F41               	moviw [1]fsr1
 17388  1F0C  00F2               	movwf	strncmp@_l+1
 17389  1F0D  3068               	movlw	low (STR_18| (0+32768))
 17390  1F0E  00F3               	movwf	strncmp@_r
 17391  1F0F  30B1               	movlw	high (STR_18| (0+32768))
 17392  1F10  00F4               	movwf	strncmp@_r+1
 17393  1F11  3003               	movlw	3
 17394  1F12  00F5               	movwf	strncmp@n
 17395  1F13  3000               	movlw	0
 17396  1F14  00F6               	movwf	strncmp@n+1
 17397  1F15  31A2  220C  319F   	fcall	_strncmp
 17398  1F18  0871               	movf	?_strncmp,w
 17399  1F19  0472               	iorwf	?_strncmp+1,w
 17400  1F1A  1903               	btfsc	3,2
 17401  1F1B  2F33               	goto	l6721
 17402  1F1C  0020               	movlb	0	; select bank0
 17403  1F1D  0859               	movf	vfpfcnvrt@fmt,w
 17404  1F1E  0086               	movwf	6
 17405  1F1F  0187               	clrf	7
 17406  1F20  3F40               	moviw [0]fsr1
 17407  1F21  00F1               	movwf	strncmp@_l
 17408  1F22  3F41               	moviw [1]fsr1
 17409  1F23  00F2               	movwf	strncmp@_l+1
 17410  1F24  306C               	movlw	low (STR_22| (0+32768))
 17411  1F25  00F3               	movwf	strncmp@_r
 17412  1F26  30B1               	movlw	high (STR_22| (0+32768))
 17413  1F27  00F4               	movwf	strncmp@_r+1
 17414  1F28  3003               	movlw	3
 17415  1F29  00F5               	movwf	strncmp@n
 17416  1F2A  3000               	movlw	0
 17417  1F2B  00F6               	movwf	strncmp@n+1
 17418  1F2C  31A2  220C  319F   	fcall	_strncmp
 17419  1F2F  0871               	movf	?_strncmp,w
 17420  1F30  0472               	iorwf	?_strncmp+1,w
 17421  1F31  1D03               	btfss	3,2
 17422  1F32  2F7E               	goto	l6729
 17423  1F33                     l6721:	
 17424                           
 17425                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
 17426  1F33  0020               	movlb	0	; select bank0
 17427  1F34  0859               	movf	vfpfcnvrt@fmt,w
 17428  1F35  0086               	movwf	6
 17429  1F36  0187               	clrf	7
 17430  1F37  3003               	movlw	3
 17431  1F38  0781               	addwf	1,f
 17432  1F39  3141               	addfsr 1,1
 17433  1F3A  1803               	skipnc
 17434  1F3B  0A81               	incf	1,f
 17435                           
 17436                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
 17437  1F3C  085A               	movf	vfpfcnvrt@ap,w
 17438  1F3D  0086               	movwf	6
 17439  1F3E  0187               	clrf	7
 17440  1F3F  0801               	movf	1,w
 17441  1F40  0084               	movwf	4
 17442  1F41  0185               	clrf	5
 17443  1F42  3002               	movlw	2
 17444  1F43  0781               	addwf	1,f
 17445  1F44  0800               	movf	0,w
 17446  1F45  0021               	movlb	1	; select bank1
 17447  1F46  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 17448  1F47  3980               	andlw	128
 17449  1F48  1D03               	skipz
 17450  1F49  30FF               	movlw	255
 17451  1F4A  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 17452  1F4B  00AA               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 17453  1F4C  00AB               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 17454  1F4D  00AC               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 17455  1F4E  00AD               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 17456  1F4F  00AE               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 17457  1F50  00AF               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 17458                           
 17459                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
 17460  1F51  0020               	movlb	0	; select bank0
 17461  1F52  0858               	movf	vfpfcnvrt@fp+1,w
 17462  1F53  00B1               	movwf	dtoa@fp+1
 17463  1F54  0857               	movf	vfpfcnvrt@fp,w
 17464  1F55  00B0               	movwf	dtoa@fp
 17465  1F56  0021               	movlb	1	; select bank1
 17466  1F57  0828               	movf	vfpfcnvrt@ll^(0+128),w
 17467  1F58  0020               	movlb	0	; select bank0
 17468  1F59  00B2               	movwf	dtoa@d
 17469  1F5A  0021               	movlb	1	; select bank1
 17470  1F5B  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 17471  1F5C  0020               	movlb	0	; select bank0
 17472  1F5D  00B3               	movwf	dtoa@d+1
 17473  1F5E  0021               	movlb	1	; select bank1
 17474  1F5F  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 17475  1F60  0020               	movlb	0	; select bank0
 17476  1F61  00B4               	movwf	dtoa@d+2
 17477  1F62  0021               	movlb	1	; select bank1
 17478  1F63  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 17479  1F64  0020               	movlb	0	; select bank0
 17480  1F65  00B5               	movwf	dtoa@d+3
 17481  1F66  0021               	movlb	1	; select bank1
 17482  1F67  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 17483  1F68  0020               	movlb	0	; select bank0
 17484  1F69  00B6               	movwf	dtoa@d+4
 17485  1F6A  0021               	movlb	1	; select bank1
 17486  1F6B  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 17487  1F6C  0020               	movlb	0	; select bank0
 17488  1F6D  00B7               	movwf	dtoa@d+5
 17489  1F6E  0021               	movlb	1	; select bank1
 17490  1F6F  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 17491  1F70  0020               	movlb	0	; select bank0
 17492  1F71  00B8               	movwf	dtoa@d+6
 17493  1F72  0021               	movlb	1	; select bank1
 17494  1F73  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 17495  1F74  0020               	movlb	0	; select bank0
 17496  1F75  00B9               	movwf	dtoa@d+7
 17497  1F76  3192  222F         	fcall	_dtoa
 17498  1F78  0020               	movlb	0	; select bank0
 17499  1F79  0831               	movf	?_dtoa+1,w
 17500  1F7A  00D8               	movwf	?_vfpfcnvrt+1
 17501  1F7B  0830               	movf	?_dtoa,w
 17502  1F7C  00D7               	movwf	?_vfpfcnvrt
 17503  1F7D  0008               	return
 17504  1F7E                     l6729:	
 17505                           
 17506                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
 17507  1F7E  0020               	movlb	0	; select bank0
 17508  1F7F  0859               	movf	vfpfcnvrt@fmt,w
 17509  1F80  0086               	movwf	6
 17510  1F81  0187               	clrf	7
 17511  1F82  3F40               	moviw [0]fsr1
 17512  1F83  00F1               	movwf	strncmp@_l
 17513  1F84  3F41               	moviw [1]fsr1
 17514  1F85  00F2               	movwf	strncmp@_l+1
 17515  1F86  3069               	movlw	low ((STR_18+1)| (0+32768))
 17516  1F87  00F3               	movwf	strncmp@_r
 17517  1F88  30B1               	movlw	high ((STR_18+1)| (0+32768))
 17518  1F89  00F4               	movwf	strncmp@_r+1
 17519  1F8A  3002               	movlw	2
 17520  1F8B  00F5               	movwf	strncmp@n
 17521  1F8C  3000               	movlw	0
 17522  1F8D  00F6               	movwf	strncmp@n+1
 17523  1F8E  31A2  220C  319F   	fcall	_strncmp
 17524  1F91  0871               	movf	?_strncmp,w
 17525  1F92  0472               	iorwf	?_strncmp+1,w
 17526  1F93  1903               	btfsc	3,2
 17527  1F94  2FAC               	goto	l6733
 17528  1F95  0020               	movlb	0	; select bank0
 17529  1F96  0859               	movf	vfpfcnvrt@fmt,w
 17530  1F97  0086               	movwf	6
 17531  1F98  0187               	clrf	7
 17532  1F99  3F40               	moviw [0]fsr1
 17533  1F9A  00F1               	movwf	strncmp@_l
 17534  1F9B  3F41               	moviw [1]fsr1
 17535  1F9C  00F2               	movwf	strncmp@_l+1
 17536  1F9D  306D               	movlw	low ((STR_22+1)| (0+32768))
 17537  1F9E  00F3               	movwf	strncmp@_r
 17538  1F9F  30B1               	movlw	high ((STR_22+1)| (0+32768))
 17539  1FA0  00F4               	movwf	strncmp@_r+1
 17540  1FA1  3002               	movlw	2
 17541  1FA2  00F5               	movwf	strncmp@n
 17542  1FA3  3000               	movlw	0
 17543  1FA4  00F6               	movwf	strncmp@n+1
 17544  1FA5  31A2  220C  319F   	fcall	_strncmp
 17545  1FA8  0871               	movf	?_strncmp,w
 17546  1FA9  0472               	iorwf	?_strncmp+1,w
 17547  1FAA  1D03               	btfss	3,2
 17548  1FAB  2FFE               	goto	L9
 17549  1FAC                     l6733:	
 17550                           
 17551                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
 17552  1FAC  0020               	movlb	0	; select bank0
 17553  1FAD  0859               	movf	vfpfcnvrt@fmt,w
 17554  1FAE  0086               	movwf	6
 17555  1FAF  0187               	clrf	7
 17556  1FB0  3002               	movlw	2
 17557  1FB1  0781               	addwf	1,f
 17558  1FB2  3141               	addfsr 1,1
 17559  1FB3  1803               	skipnc
 17560  1FB4  0A81               	incf	1,f
 17561                           
 17562                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
 17563  1FB5  085A               	movf	vfpfcnvrt@ap,w
 17564  1FB6  0086               	movwf	6
 17565  1FB7  0187               	clrf	7
 17566  1FB8  0801               	movf	1,w
 17567  1FB9  0084               	movwf	4
 17568  1FBA  0185               	clrf	5
 17569  1FBB  3002               	movlw	2
 17570  1FBC  0781               	addwf	1,f
 17571  1FBD  3F00               	moviw [0]fsr0
 17572  1FBE  00DB               	movwf	??_vfpfcnvrt
 17573  1FBF  3F01               	moviw [1]fsr0
 17574  1FC0  00DC               	movwf	??_vfpfcnvrt+1
 17575  1FC1  085B               	movf	??_vfpfcnvrt,w
 17576  1FC2  0021               	movlb	1	; select bank1
 17577  1FC3  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 17578  1FC4  0020               	movlb	0	; select bank0
 17579  1FC5  085C               	movf	??_vfpfcnvrt+1,w
 17580  1FC6  0021               	movlb	1	; select bank1
 17581  1FC7  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 17582  1FC8  0D89               	rlf	9,f
 17583  1FC9  3B89               	subwfb	9,f
 17584  1FCA  0989               	comf	9,f
 17585  1FCB  00AA               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 17586  1FCC  00AB               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 17587  1FCD  00AC               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 17588  1FCE  00AD               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 17589  1FCF  00AE               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 17590  1FD0  00AF               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 17591                           
 17592                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 820:       
      +                                return dtoa(fp, ll);
 17593  1FD1  0020               	movlb	0	; select bank0
 17594  1FD2  0858               	movf	vfpfcnvrt@fp+1,w
 17595  1FD3  00B1               	movwf	dtoa@fp+1
 17596  1FD4  0857               	movf	vfpfcnvrt@fp,w
 17597  1FD5  00B0               	movwf	dtoa@fp
 17598  1FD6  0021               	movlb	1	; select bank1
 17599  1FD7  0828               	movf	vfpfcnvrt@ll^(0+128),w
 17600  1FD8  0020               	movlb	0	; select bank0
 17601  1FD9  00B2               	movwf	dtoa@d
 17602  1FDA  0021               	movlb	1	; select bank1
 17603  1FDB  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 17604  1FDC  0020               	movlb	0	; select bank0
 17605  1FDD  00B3               	movwf	dtoa@d+1
 17606  1FDE  0021               	movlb	1	; select bank1
 17607  1FDF  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 17608  1FE0  0020               	movlb	0	; select bank0
 17609  1FE1  00B4               	movwf	dtoa@d+2
 17610  1FE2  0021               	movlb	1	; select bank1
 17611  1FE3  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 17612  1FE4  0020               	movlb	0	; select bank0
 17613  1FE5  00B5               	movwf	dtoa@d+3
 17614  1FE6  0021               	movlb	1	; select bank1
 17615  1FE7  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 17616  1FE8  0020               	movlb	0	; select bank0
 17617  1FE9  00B6               	movwf	dtoa@d+4
 17618  1FEA  0021               	movlb	1	; select bank1
 17619  1FEB  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 17620  1FEC  0020               	movlb	0	; select bank0
 17621  1FED  00B7               	movwf	dtoa@d+5
 17622  1FEE  0021               	movlb	1	; select bank1
 17623  1FEF  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 17624  1FF0  0020               	movlb	0	; select bank0
 17625  1FF1  00B8               	movwf	dtoa@d+6
 17626  1FF2  0021               	movlb	1	; select bank1
 17627  1FF3  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 17628  1FF4  0020               	movlb	0	; select bank0
 17629  1FF5  00B9               	movwf	dtoa@d+7
 17630  1FF6  3192  222F         	fcall	_dtoa
 17631  1FF8  0020               	movlb	0	; select bank0
 17632  1FF9  0831               	movf	?_dtoa+1,w
 17633  1FFA  00D8               	movwf	?_vfpfcnvrt+1
 17634  1FFB  0830               	movf	?_dtoa,w
 17635  1FFC  00D7               	movwf	?_vfpfcnvrt
 17636  1FFD  0008               	return
 17637  1FFE                     L9:	
 17638  1FFE                     L8:	
 17639  1FFE  3188  2843         	ljmp	l6741
 17640                           
 17641                           	psect	text8_split_2
 17642  0843                     l6741:	
 17643                           
 17644                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 17645  0843  0020               	movlb	0	; select bank0
 17646  0844  0859               	movf	vfpfcnvrt@fmt,w
 17647  0845  0086               	movwf	6
 17648  0846  0187               	clrf	7
 17649  0847  3F40               	moviw [0]fsr1
 17650  0848  00DB               	movwf	??_vfpfcnvrt
 17651  0849  3F41               	moviw [1]fsr1
 17652  084A  00DC               	movwf	??_vfpfcnvrt+1
 17653  084B  085B               	movf	??_vfpfcnvrt,w
 17654  084C  0084               	movwf	4
 17655  084D  085C               	movf	??_vfpfcnvrt+1,w
 17656  084E  0085               	movwf	5
 17657  084F  0012               	moviw fsr0++
 17658  0850  3A64               	xorlw	100
 17659  0851  1903               	btfsc	3,2
 17660  0852  2862               	goto	l6745
 17661  0853  0859               	movf	vfpfcnvrt@fmt,w
 17662  0854  0086               	movwf	6
 17663  0855  0187               	clrf	7
 17664  0856  3F40               	moviw [0]fsr1
 17665  0857  00DB               	movwf	??_vfpfcnvrt
 17666  0858  3F41               	moviw [1]fsr1
 17667  0859  00DC               	movwf	??_vfpfcnvrt+1
 17668  085A  085B               	movf	??_vfpfcnvrt,w
 17669  085B  0084               	movwf	4
 17670  085C  085C               	movf	??_vfpfcnvrt+1,w
 17671  085D  0085               	movwf	5
 17672  085E  0012               	moviw fsr0++
 17673  085F  3A69               	xorlw	105
 17674  0860  1D03               	btfss	3,2
 17675  0861  28B3               	goto	l6753
 17676  0862                     l6745:	
 17677                           
 17678                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 17679  0862  0859               	movf	vfpfcnvrt@fmt,w
 17680  0863  0086               	movwf	6
 17681  0864  0187               	clrf	7
 17682  0865  3001               	movlw	1
 17683  0866  0781               	addwf	1,f
 17684  0867  3141               	addfsr 1,1
 17685  0868  1803               	skipnc
 17686  0869  0A81               	incf	1,f
 17687                           
 17688                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 17689  086A  085A               	movf	vfpfcnvrt@ap,w
 17690  086B  0086               	movwf	6
 17691  086C  0187               	clrf	7
 17692  086D  0801               	movf	1,w
 17693  086E  0084               	movwf	4
 17694  086F  0185               	clrf	5
 17695  0870  3002               	movlw	2
 17696  0871  0781               	addwf	1,f
 17697  0872  3F00               	moviw [0]fsr0
 17698  0873  00DB               	movwf	??_vfpfcnvrt
 17699  0874  3F01               	moviw [1]fsr0
 17700  0875  00DC               	movwf	??_vfpfcnvrt+1
 17701  0876  085B               	movf	??_vfpfcnvrt,w
 17702  0877  0021               	movlb	1	; select bank1
 17703  0878  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 17704  0879  0020               	movlb	0	; select bank0
 17705  087A  085C               	movf	??_vfpfcnvrt+1,w
 17706  087B  0021               	movlb	1	; select bank1
 17707  087C  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 17708  087D  0D89               	rlf	9,f
 17709  087E  3B89               	subwfb	9,f
 17710  087F  0989               	comf	9,f
 17711  0880  00AA               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 17712  0881  00AB               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 17713  0882  00AC               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 17714  0883  00AD               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 17715  0884  00AE               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 17716  0885  00AF               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 17717                           
 17718                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 17719  0886  0020               	movlb	0	; select bank0
 17720  0887  0858               	movf	vfpfcnvrt@fp+1,w
 17721  0888  00B1               	movwf	dtoa@fp+1
 17722  0889  0857               	movf	vfpfcnvrt@fp,w
 17723  088A  00B0               	movwf	dtoa@fp
 17724  088B  0021               	movlb	1	; select bank1
 17725  088C  0828               	movf	vfpfcnvrt@ll^(0+128),w
 17726  088D  0020               	movlb	0	; select bank0
 17727  088E  00B2               	movwf	dtoa@d
 17728  088F  0021               	movlb	1	; select bank1
 17729  0890  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 17730  0891  0020               	movlb	0	; select bank0
 17731  0892  00B3               	movwf	dtoa@d+1
 17732  0893  0021               	movlb	1	; select bank1
 17733  0894  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 17734  0895  0020               	movlb	0	; select bank0
 17735  0896  00B4               	movwf	dtoa@d+2
 17736  0897  0021               	movlb	1	; select bank1
 17737  0898  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 17738  0899  0020               	movlb	0	; select bank0
 17739  089A  00B5               	movwf	dtoa@d+3
 17740  089B  0021               	movlb	1	; select bank1
 17741  089C  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 17742  089D  0020               	movlb	0	; select bank0
 17743  089E  00B6               	movwf	dtoa@d+4
 17744  089F  0021               	movlb	1	; select bank1
 17745  08A0  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 17746  08A1  0020               	movlb	0	; select bank0
 17747  08A2  00B7               	movwf	dtoa@d+5
 17748  08A3  0021               	movlb	1	; select bank1
 17749  08A4  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 17750  08A5  0020               	movlb	0	; select bank0
 17751  08A6  00B8               	movwf	dtoa@d+6
 17752  08A7  0021               	movlb	1	; select bank1
 17753  08A8  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 17754  08A9  0020               	movlb	0	; select bank0
 17755  08AA  00B9               	movwf	dtoa@d+7
 17756  08AB  3192  222F         	fcall	_dtoa
 17757  08AD  0020               	movlb	0	; select bank0
 17758  08AE  0831               	movf	?_dtoa+1,w
 17759  08AF  00D8               	movwf	?_vfpfcnvrt+1
 17760  08B0  0830               	movf	?_dtoa,w
 17761  08B1  00D7               	movwf	?_vfpfcnvrt
 17762  08B2  0008               	return
 17763  08B3                     l6753:	
 17764                           
 17765                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
 17766  08B3  0859               	movf	vfpfcnvrt@fmt,w
 17767  08B4  0086               	movwf	6
 17768  08B5  0187               	clrf	7
 17769  08B6  3F40               	moviw [0]fsr1
 17770  08B7  00F1               	movwf	strncmp@_l
 17771  08B8  3F41               	moviw [1]fsr1
 17772  08B9  00F2               	movwf	strncmp@_l+1
 17773  08BA  3083               	movlw	low (STR_36| (0+32768))
 17774  08BB  00F3               	movwf	strncmp@_r
 17775  08BC  30B1               	movlw	high (STR_36| (0+32768))
 17776  08BD  00F4               	movwf	strncmp@_r+1
 17777  08BE  3002               	movlw	2
 17778  08BF  00F5               	movwf	strncmp@n
 17779  08C0  3000               	movlw	0
 17780  08C1  00F6               	movwf	strncmp@n+1
 17781  08C2  31A2  220C  3188   	fcall	_strncmp
 17782  08C5  0871               	movf	?_strncmp,w
 17783  08C6  0472               	iorwf	?_strncmp+1,w
 17784  08C7  1903               	btfsc	3,2
 17785  08C8  28E0               	goto	l6757
 17786  08C9  0020               	movlb	0	; select bank0
 17787  08CA  0859               	movf	vfpfcnvrt@fmt,w
 17788  08CB  0086               	movwf	6
 17789  08CC  0187               	clrf	7
 17790  08CD  3F40               	moviw [0]fsr1
 17791  08CE  00F1               	movwf	strncmp@_l
 17792  08CF  3F41               	moviw [1]fsr1
 17793  08D0  00F2               	movwf	strncmp@_l+1
 17794  08D1  3086               	movlw	low (STR_40| (0+32768))
 17795  08D2  00F3               	movwf	strncmp@_r
 17796  08D3  30B1               	movlw	high (STR_40| (0+32768))
 17797  08D4  00F4               	movwf	strncmp@_r+1
 17798  08D5  3002               	movlw	2
 17799  08D6  00F5               	movwf	strncmp@n
 17800  08D7  3000               	movlw	0
 17801  08D8  00F6               	movwf	strncmp@n+1
 17802  08D9  31A2  220C  3188   	fcall	_strncmp
 17803  08DC  0871               	movf	?_strncmp,w
 17804  08DD  0472               	iorwf	?_strncmp+1,w
 17805  08DE  1D03               	btfss	3,2
 17806  08DF  2929               	goto	l6765
 17807  08E0                     l6757:	
 17808                           
 17809                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
 17810  08E0  0020               	movlb	0	; select bank0
 17811  08E1  0859               	movf	vfpfcnvrt@fmt,w
 17812  08E2  0086               	movwf	6
 17813  08E3  0187               	clrf	7
 17814  08E4  3002               	movlw	2
 17815  08E5  0781               	addwf	1,f
 17816  08E6  3141               	addfsr 1,1
 17817  08E7  1803               	skipnc
 17818  08E8  0A81               	incf	1,f
 17819                           
 17820                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 17821  08E9  085A               	movf	vfpfcnvrt@ap,w
 17822  08EA  0086               	movwf	6
 17823  08EB  0187               	clrf	7
 17824  08EC  0801               	movf	1,w
 17825  08ED  0084               	movwf	4
 17826  08EE  0185               	clrf	5
 17827  08EF  3002               	movlw	2
 17828  08F0  0781               	addwf	1,f
 17829  08F1  3F00               	moviw [0]fsr0
 17830  08F2  0021               	movlb	1	; select bank1
 17831  08F3  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 17832  08F4  3F01               	moviw [1]fsr0
 17833  08F5  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 17834  08F6  01AA               	clrf	(vfpfcnvrt@ll+2)^(0+128)
 17835  08F7  01AB               	clrf	(vfpfcnvrt@ll+3)^(0+128)
 17836  08F8  01AC               	clrf	(vfpfcnvrt@ll+4)^(0+128)
 17837  08F9  01AD               	clrf	(vfpfcnvrt@ll+5)^(0+128)
 17838  08FA  01AE               	clrf	(vfpfcnvrt@ll+6)^(0+128)
 17839  08FB  01AF               	clrf	(vfpfcnvrt@ll+7)^(0+128)
 17840                           
 17841                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 889:       
      +                                return dtoa(fp, ll);
 17842  08FC  0020               	movlb	0	; select bank0
 17843  08FD  0858               	movf	vfpfcnvrt@fp+1,w
 17844  08FE  00B1               	movwf	dtoa@fp+1
 17845  08FF  0857               	movf	vfpfcnvrt@fp,w
 17846  0900  00B0               	movwf	dtoa@fp
 17847  0901  0021               	movlb	1	; select bank1
 17848  0902  0828               	movf	vfpfcnvrt@ll^(0+128),w
 17849  0903  0020               	movlb	0	; select bank0
 17850  0904  00B2               	movwf	dtoa@d
 17851  0905  0021               	movlb	1	; select bank1
 17852  0906  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 17853  0907  0020               	movlb	0	; select bank0
 17854  0908  00B3               	movwf	dtoa@d+1
 17855  0909  0021               	movlb	1	; select bank1
 17856  090A  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 17857  090B  0020               	movlb	0	; select bank0
 17858  090C  00B4               	movwf	dtoa@d+2
 17859  090D  0021               	movlb	1	; select bank1
 17860  090E  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 17861  090F  0020               	movlb	0	; select bank0
 17862  0910  00B5               	movwf	dtoa@d+3
 17863  0911  0021               	movlb	1	; select bank1
 17864  0912  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 17865  0913  0020               	movlb	0	; select bank0
 17866  0914  00B6               	movwf	dtoa@d+4
 17867  0915  0021               	movlb	1	; select bank1
 17868  0916  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 17869  0917  0020               	movlb	0	; select bank0
 17870  0918  00B7               	movwf	dtoa@d+5
 17871  0919  0021               	movlb	1	; select bank1
 17872  091A  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 17873  091B  0020               	movlb	0	; select bank0
 17874  091C  00B8               	movwf	dtoa@d+6
 17875  091D  0021               	movlb	1	; select bank1
 17876  091E  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 17877  091F  0020               	movlb	0	; select bank0
 17878  0920  00B9               	movwf	dtoa@d+7
 17879  0921  3192  222F         	fcall	_dtoa
 17880  0923  0020               	movlb	0	; select bank0
 17881  0924  0831               	movf	?_dtoa+1,w
 17882  0925  00D8               	movwf	?_vfpfcnvrt+1
 17883  0926  0830               	movf	?_dtoa,w
 17884  0927  00D7               	movwf	?_vfpfcnvrt
 17885  0928  0008               	return
 17886  0929                     l6765:	
 17887                           
 17888                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
 17889  0929  0020               	movlb	0	; select bank0
 17890  092A  0859               	movf	vfpfcnvrt@fmt,w
 17891  092B  0086               	movwf	6
 17892  092C  0187               	clrf	7
 17893  092D  3F40               	moviw [0]fsr1
 17894  092E  00F1               	movwf	strncmp@_l
 17895  092F  3F41               	moviw [1]fsr1
 17896  0930  00F2               	movwf	strncmp@_l+1
 17897  0931  3074               	movlw	low (STR_45| (0+32768))
 17898  0932  00F3               	movwf	strncmp@_r
 17899  0933  30B1               	movlw	high (STR_45| (0+32768))
 17900  0934  00F4               	movwf	strncmp@_r+1
 17901  0935  3003               	movlw	3
 17902  0936  00F5               	movwf	strncmp@n
 17903  0937  3000               	movlw	0
 17904  0938  00F6               	movwf	strncmp@n+1
 17905  0939  31A2  220C  3188   	fcall	_strncmp
 17906  093C  0871               	movf	?_strncmp,w
 17907  093D  0472               	iorwf	?_strncmp+1,w
 17908  093E  1D03               	btfss	3,2
 17909  093F  2988               	goto	l6775
 17910                           
 17911                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
 17912  0940  0020               	movlb	0	; select bank0
 17913  0941  0859               	movf	vfpfcnvrt@fmt,w
 17914  0942  0086               	movwf	6
 17915  0943  0187               	clrf	7
 17916  0944  3003               	movlw	3
 17917  0945  0781               	addwf	1,f
 17918  0946  3141               	addfsr 1,1
 17919  0947  1803               	skipnc
 17920  0948  0A81               	incf	1,f
 17921                           
 17922                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 17923  0949  085A               	movf	vfpfcnvrt@ap,w
 17924  094A  0086               	movwf	6
 17925  094B  0187               	clrf	7
 17926  094C  0801               	movf	1,w
 17927  094D  0084               	movwf	4
 17928  094E  0185               	clrf	5
 17929  094F  3002               	movlw	2
 17930  0950  0781               	addwf	1,f
 17931  0951  0800               	movf	0,w
 17932  0952  0021               	movlb	1	; select bank1
 17933  0953  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 17934  0954  01B4               	clrf	(vfpfcnvrt@llu+1)^(0+128)
 17935  0955  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 17936  0956  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 17937  0957  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 17938  0958  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 17939  0959  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 17940  095A  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 17941                           
 17942                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
 17943  095B  0020               	movlb	0	; select bank0
 17944  095C  0858               	movf	vfpfcnvrt@fp+1,w
 17945  095D  00B1               	movwf	otoa@fp+1
 17946  095E  0857               	movf	vfpfcnvrt@fp,w
 17947  095F  00B0               	movwf	otoa@fp
 17948  0960  0021               	movlb	1	; select bank1
 17949  0961  0833               	movf	vfpfcnvrt@llu^(0+128),w
 17950  0962  0020               	movlb	0	; select bank0
 17951  0963  00B2               	movwf	otoa@d
 17952  0964  0021               	movlb	1	; select bank1
 17953  0965  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 17954  0966  0020               	movlb	0	; select bank0
 17955  0967  00B3               	movwf	otoa@d+1
 17956  0968  0021               	movlb	1	; select bank1
 17957  0969  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 17958  096A  0020               	movlb	0	; select bank0
 17959  096B  00B4               	movwf	otoa@d+2
 17960  096C  0021               	movlb	1	; select bank1
 17961  096D  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 17962  096E  0020               	movlb	0	; select bank0
 17963  096F  00B5               	movwf	otoa@d+3
 17964  0970  0021               	movlb	1	; select bank1
 17965  0971  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 17966  0972  0020               	movlb	0	; select bank0
 17967  0973  00B6               	movwf	otoa@d+4
 17968  0974  0021               	movlb	1	; select bank1
 17969  0975  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 17970  0976  0020               	movlb	0	; select bank0
 17971  0977  00B7               	movwf	otoa@d+5
 17972  0978  0021               	movlb	1	; select bank1
 17973  0979  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 17974  097A  0020               	movlb	0	; select bank0
 17975  097B  00B8               	movwf	otoa@d+6
 17976  097C  0021               	movlb	1	; select bank1
 17977  097D  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 17978  097E  0020               	movlb	0	; select bank0
 17979  097F  00B9               	movwf	otoa@d+7
 17980  0980  319E  2613         	fcall	_otoa
 17981  0982  0020               	movlb	0	; select bank0
 17982  0983  0831               	movf	?_otoa+1,w
 17983  0984  00D8               	movwf	?_vfpfcnvrt+1
 17984  0985  0830               	movf	?_otoa,w
 17985  0986  00D7               	movwf	?_vfpfcnvrt
 17986  0987  0008               	return
 17987  0988                     l6775:	
 17988                           
 17989                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
 17990  0988  0020               	movlb	0	; select bank0
 17991  0989  0859               	movf	vfpfcnvrt@fmt,w
 17992  098A  0086               	movwf	6
 17993  098B  0187               	clrf	7
 17994  098C  3F40               	moviw [0]fsr1
 17995  098D  00F1               	movwf	strncmp@_l
 17996  098E  3F41               	moviw [1]fsr1
 17997  098F  00F2               	movwf	strncmp@_l+1
 17998  0990  3075               	movlw	low ((STR_45+1)| (0+32768))
 17999  0991  00F3               	movwf	strncmp@_r
 18000  0992  30B1               	movlw	high ((STR_45+1)| (0+32768))
 18001  0993  00F4               	movwf	strncmp@_r+1
 18002  0994  3002               	movlw	2
 18003  0995  00F5               	movwf	strncmp@n
 18004  0996  3000               	movlw	0
 18005  0997  00F6               	movwf	strncmp@n+1
 18006  0998  31A2  220C  3188   	fcall	_strncmp
 18007  099B  0871               	movf	?_strncmp,w
 18008  099C  0472               	iorwf	?_strncmp+1,w
 18009  099D  1D03               	btfss	3,2
 18010  099E  29E8               	goto	l6785
 18011                           
 18012                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
 18013  099F  0020               	movlb	0	; select bank0
 18014  09A0  0859               	movf	vfpfcnvrt@fmt,w
 18015  09A1  0086               	movwf	6
 18016  09A2  0187               	clrf	7
 18017  09A3  3002               	movlw	2
 18018  09A4  0781               	addwf	1,f
 18019  09A5  3141               	addfsr 1,1
 18020  09A6  1803               	skipnc
 18021  09A7  0A81               	incf	1,f
 18022                           
 18023                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
 18024  09A8  085A               	movf	vfpfcnvrt@ap,w
 18025  09A9  0086               	movwf	6
 18026  09AA  0187               	clrf	7
 18027  09AB  0801               	movf	1,w
 18028  09AC  0084               	movwf	4
 18029  09AD  0185               	clrf	5
 18030  09AE  3002               	movlw	2
 18031  09AF  0781               	addwf	1,f
 18032  09B0  3F00               	moviw [0]fsr0
 18033  09B1  0021               	movlb	1	; select bank1
 18034  09B2  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 18035  09B3  3F01               	moviw [1]fsr0
 18036  09B4  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 18037  09B5  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 18038  09B6  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 18039  09B7  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 18040  09B8  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 18041  09B9  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 18042  09BA  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 18043                           
 18044                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 985:       
      +                                return otoa(fp, llu);
 18045  09BB  0020               	movlb	0	; select bank0
 18046  09BC  0858               	movf	vfpfcnvrt@fp+1,w
 18047  09BD  00B1               	movwf	otoa@fp+1
 18048  09BE  0857               	movf	vfpfcnvrt@fp,w
 18049  09BF  00B0               	movwf	otoa@fp
 18050  09C0  0021               	movlb	1	; select bank1
 18051  09C1  0833               	movf	vfpfcnvrt@llu^(0+128),w
 18052  09C2  0020               	movlb	0	; select bank0
 18053  09C3  00B2               	movwf	otoa@d
 18054  09C4  0021               	movlb	1	; select bank1
 18055  09C5  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 18056  09C6  0020               	movlb	0	; select bank0
 18057  09C7  00B3               	movwf	otoa@d+1
 18058  09C8  0021               	movlb	1	; select bank1
 18059  09C9  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 18060  09CA  0020               	movlb	0	; select bank0
 18061  09CB  00B4               	movwf	otoa@d+2
 18062  09CC  0021               	movlb	1	; select bank1
 18063  09CD  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 18064  09CE  0020               	movlb	0	; select bank0
 18065  09CF  00B5               	movwf	otoa@d+3
 18066  09D0  0021               	movlb	1	; select bank1
 18067  09D1  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 18068  09D2  0020               	movlb	0	; select bank0
 18069  09D3  00B6               	movwf	otoa@d+4
 18070  09D4  0021               	movlb	1	; select bank1
 18071  09D5  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 18072  09D6  0020               	movlb	0	; select bank0
 18073  09D7  00B7               	movwf	otoa@d+5
 18074  09D8  0021               	movlb	1	; select bank1
 18075  09D9  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 18076  09DA  0020               	movlb	0	; select bank0
 18077  09DB  00B8               	movwf	otoa@d+6
 18078  09DC  0021               	movlb	1	; select bank1
 18079  09DD  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 18080  09DE  0020               	movlb	0	; select bank0
 18081  09DF  00B9               	movwf	otoa@d+7
 18082  09E0  319E  2613         	fcall	_otoa
 18083  09E2  0020               	movlb	0	; select bank0
 18084  09E3  0831               	movf	?_otoa+1,w
 18085  09E4  00D8               	movwf	?_vfpfcnvrt+1
 18086  09E5  0830               	movf	?_otoa,w
 18087  09E6  00D7               	movwf	?_vfpfcnvrt
 18088  09E7  0008               	return
 18089  09E8                     l6785:	
 18090                           
 18091                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
 18092  09E8  0020               	movlb	0	; select bank0
 18093  09E9  0859               	movf	vfpfcnvrt@fmt,w
 18094  09EA  0086               	movwf	6
 18095  09EB  0187               	clrf	7
 18096  09EC  3F40               	moviw [0]fsr1
 18097  09ED  00DB               	movwf	??_vfpfcnvrt
 18098  09EE  3F41               	moviw [1]fsr1
 18099  09EF  00DC               	movwf	??_vfpfcnvrt+1
 18100  09F0  085B               	movf	??_vfpfcnvrt,w
 18101  09F1  0084               	movwf	4
 18102  09F2  085C               	movf	??_vfpfcnvrt+1,w
 18103  09F3  0085               	movwf	5
 18104  09F4  0012               	moviw fsr0++
 18105  09F5  3A6F               	xorlw	111
 18106  09F6  1D03               	btfss	3,2
 18107  09F7  2A40               	goto	l6795
 18108                           
 18109                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
 18110  09F8  0859               	movf	vfpfcnvrt@fmt,w
 18111  09F9  0086               	movwf	6
 18112  09FA  0187               	clrf	7
 18113  09FB  3001               	movlw	1
 18114  09FC  0781               	addwf	1,f
 18115  09FD  3141               	addfsr 1,1
 18116  09FE  1803               	skipnc
 18117  09FF  0A81               	incf	1,f
 18118                           
 18119                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
 18120  0A00  085A               	movf	vfpfcnvrt@ap,w
 18121  0A01  0086               	movwf	6
 18122  0A02  0187               	clrf	7
 18123  0A03  0801               	movf	1,w
 18124  0A04  0084               	movwf	4
 18125  0A05  0185               	clrf	5
 18126  0A06  3002               	movlw	2
 18127  0A07  0781               	addwf	1,f
 18128  0A08  3F00               	moviw [0]fsr0
 18129  0A09  0021               	movlb	1	; select bank1
 18130  0A0A  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 18131  0A0B  3F01               	moviw [1]fsr0
 18132  0A0C  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 18133  0A0D  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 18134  0A0E  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 18135  0A0F  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 18136  0A10  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 18137  0A11  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 18138  0A12  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 18139                           
 18140                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 995:       
      +                                return otoa(fp, llu);
 18141  0A13  0020               	movlb	0	; select bank0
 18142  0A14  0858               	movf	vfpfcnvrt@fp+1,w
 18143  0A15  00B1               	movwf	otoa@fp+1
 18144  0A16  0857               	movf	vfpfcnvrt@fp,w
 18145  0A17  00B0               	movwf	otoa@fp
 18146  0A18  0021               	movlb	1	; select bank1
 18147  0A19  0833               	movf	vfpfcnvrt@llu^(0+128),w
 18148  0A1A  0020               	movlb	0	; select bank0
 18149  0A1B  00B2               	movwf	otoa@d
 18150  0A1C  0021               	movlb	1	; select bank1
 18151  0A1D  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 18152  0A1E  0020               	movlb	0	; select bank0
 18153  0A1F  00B3               	movwf	otoa@d+1
 18154  0A20  0021               	movlb	1	; select bank1
 18155  0A21  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 18156  0A22  0020               	movlb	0	; select bank0
 18157  0A23  00B4               	movwf	otoa@d+2
 18158  0A24  0021               	movlb	1	; select bank1
 18159  0A25  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 18160  0A26  0020               	movlb	0	; select bank0
 18161  0A27  00B5               	movwf	otoa@d+3
 18162  0A28  0021               	movlb	1	; select bank1
 18163  0A29  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 18164  0A2A  0020               	movlb	0	; select bank0
 18165  0A2B  00B6               	movwf	otoa@d+4
 18166  0A2C  0021               	movlb	1	; select bank1
 18167  0A2D  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 18168  0A2E  0020               	movlb	0	; select bank0
 18169  0A2F  00B7               	movwf	otoa@d+5
 18170  0A30  0021               	movlb	1	; select bank1
 18171  0A31  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 18172  0A32  0020               	movlb	0	; select bank0
 18173  0A33  00B8               	movwf	otoa@d+6
 18174  0A34  0021               	movlb	1	; select bank1
 18175  0A35  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 18176  0A36  0020               	movlb	0	; select bank0
 18177  0A37  00B9               	movwf	otoa@d+7
 18178  0A38  319E  2613         	fcall	_otoa
 18179  0A3A  0020               	movlb	0	; select bank0
 18180  0A3B  0831               	movf	?_otoa+1,w
 18181  0A3C  00D8               	movwf	?_vfpfcnvrt+1
 18182  0A3D  0830               	movf	?_otoa,w
 18183  0A3E  00D7               	movwf	?_vfpfcnvrt
 18184  0A3F  0008               	return
 18185  0A40                     l6795:	
 18186                           
 18187                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
 18188  0A40  0859               	movf	vfpfcnvrt@fmt,w
 18189  0A41  0086               	movwf	6
 18190  0A42  0187               	clrf	7
 18191  0A43  3F40               	moviw [0]fsr1
 18192  0A44  00F1               	movwf	strncmp@_l
 18193  0A45  3F41               	moviw [1]fsr1
 18194  0A46  00F2               	movwf	strncmp@_l+1
 18195  0A47  308C               	movlw	low (STR_55| (0+32768))
 18196  0A48  00F3               	movwf	strncmp@_r
 18197  0A49  30B1               	movlw	high (STR_55| (0+32768))
 18198  0A4A  00F4               	movwf	strncmp@_r+1
 18199  0A4B  3002               	movlw	2
 18200  0A4C  00F5               	movwf	strncmp@n
 18201  0A4D  3000               	movlw	0
 18202  0A4E  00F6               	movwf	strncmp@n+1
 18203  0A4F  31A2  220C  3188   	fcall	_strncmp
 18204  0A52  0871               	movf	?_strncmp,w
 18205  0A53  0472               	iorwf	?_strncmp+1,w
 18206  0A54  1D03               	btfss	3,2
 18207  0A55  2A9F               	goto	l6805
 18208                           
 18209                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
 18210  0A56  0020               	movlb	0	; select bank0
 18211  0A57  0859               	movf	vfpfcnvrt@fmt,w
 18212  0A58  0086               	movwf	6
 18213  0A59  0187               	clrf	7
 18214  0A5A  3002               	movlw	2
 18215  0A5B  0781               	addwf	1,f
 18216  0A5C  3141               	addfsr 1,1
 18217  0A5D  1803               	skipnc
 18218  0A5E  0A81               	incf	1,f
 18219                           
 18220                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 18221  0A5F  085A               	movf	vfpfcnvrt@ap,w
 18222  0A60  0086               	movwf	6
 18223  0A61  0187               	clrf	7
 18224  0A62  0801               	movf	1,w
 18225  0A63  0084               	movwf	4
 18226  0A64  0185               	clrf	5
 18227  0A65  3002               	movlw	2
 18228  0A66  0781               	addwf	1,f
 18229  0A67  3F00               	moviw [0]fsr0
 18230  0A68  0021               	movlb	1	; select bank1
 18231  0A69  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 18232  0A6A  3F01               	moviw [1]fsr0
 18233  0A6B  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 18234  0A6C  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 18235  0A6D  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 18236  0A6E  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 18237  0A6F  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 18238  0A70  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 18239  0A71  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 18240                           
 18241                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1049:      
      +                                 return otoa(fp, llu);
 18242  0A72  0020               	movlb	0	; select bank0
 18243  0A73  0858               	movf	vfpfcnvrt@fp+1,w
 18244  0A74  00B1               	movwf	otoa@fp+1
 18245  0A75  0857               	movf	vfpfcnvrt@fp,w
 18246  0A76  00B0               	movwf	otoa@fp
 18247  0A77  0021               	movlb	1	; select bank1
 18248  0A78  0833               	movf	vfpfcnvrt@llu^(0+128),w
 18249  0A79  0020               	movlb	0	; select bank0
 18250  0A7A  00B2               	movwf	otoa@d
 18251  0A7B  0021               	movlb	1	; select bank1
 18252  0A7C  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 18253  0A7D  0020               	movlb	0	; select bank0
 18254  0A7E  00B3               	movwf	otoa@d+1
 18255  0A7F  0021               	movlb	1	; select bank1
 18256  0A80  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 18257  0A81  0020               	movlb	0	; select bank0
 18258  0A82  00B4               	movwf	otoa@d+2
 18259  0A83  0021               	movlb	1	; select bank1
 18260  0A84  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 18261  0A85  0020               	movlb	0	; select bank0
 18262  0A86  00B5               	movwf	otoa@d+3
 18263  0A87  0021               	movlb	1	; select bank1
 18264  0A88  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 18265  0A89  0020               	movlb	0	; select bank0
 18266  0A8A  00B6               	movwf	otoa@d+4
 18267  0A8B  0021               	movlb	1	; select bank1
 18268  0A8C  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 18269  0A8D  0020               	movlb	0	; select bank0
 18270  0A8E  00B7               	movwf	otoa@d+5
 18271  0A8F  0021               	movlb	1	; select bank1
 18272  0A90  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 18273  0A91  0020               	movlb	0	; select bank0
 18274  0A92  00B8               	movwf	otoa@d+6
 18275  0A93  0021               	movlb	1	; select bank1
 18276  0A94  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 18277  0A95  0020               	movlb	0	; select bank0
 18278  0A96  00B9               	movwf	otoa@d+7
 18279  0A97  319E  2613         	fcall	_otoa
 18280  0A99  0020               	movlb	0	; select bank0
 18281  0A9A  0831               	movf	?_otoa+1,w
 18282  0A9B  00D8               	movwf	?_vfpfcnvrt+1
 18283  0A9C  0830               	movf	?_otoa,w
 18284  0A9D  00D7               	movwf	?_vfpfcnvrt
 18285  0A9E  0008               	return
 18286  0A9F                     l6805:	
 18287                           
 18288                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
 18289  0A9F  0020               	movlb	0	; select bank0
 18290  0AA0  0859               	movf	vfpfcnvrt@fmt,w
 18291  0AA1  0086               	movwf	6
 18292  0AA2  0187               	clrf	7
 18293  0AA3  3F40               	moviw [0]fsr1
 18294  0AA4  00F1               	movwf	strncmp@_l
 18295  0AA5  3F41               	moviw [1]fsr1
 18296  0AA6  00F2               	movwf	strncmp@_l+1
 18297  0AA7  3070               	movlw	low (STR_60| (0+32768))
 18298  0AA8  00F3               	movwf	strncmp@_r
 18299  0AA9  30B1               	movlw	high (STR_60| (0+32768))
 18300  0AAA  00F4               	movwf	strncmp@_r+1
 18301  0AAB  3003               	movlw	3
 18302  0AAC  00F5               	movwf	strncmp@n
 18303  0AAD  3000               	movlw	0
 18304  0AAE  00F6               	movwf	strncmp@n+1
 18305  0AAF  31A2  220C  3188   	fcall	_strncmp
 18306  0AB2  0871               	movf	?_strncmp,w
 18307  0AB3  0472               	iorwf	?_strncmp+1,w
 18308  0AB4  1D03               	btfss	3,2
 18309  0AB5  2B36               	goto	l6817
 18310                           
 18311                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
 18312  0AB6  0020               	movlb	0	; select bank0
 18313  0AB7  0859               	movf	vfpfcnvrt@fmt,w
 18314  0AB8  0086               	movwf	6
 18315  0AB9  0187               	clrf	7
 18316  0ABA  3003               	movlw	3
 18317  0ABB  0781               	addwf	1,f
 18318  0ABC  3141               	addfsr 1,1
 18319  0ABD  1803               	skipnc
 18320  0ABE  0A81               	incf	1,f
 18321                           
 18322                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
 18323  0ABF  085A               	movf	vfpfcnvrt@ap,w
 18324  0AC0  0086               	movwf	6
 18325  0AC1  0187               	clrf	7
 18326  0AC2  0801               	movf	1,w
 18327  0AC3  0084               	movwf	4
 18328  0AC4  0185               	clrf	5
 18329  0AC5  3002               	movlw	2
 18330  0AC6  0781               	addwf	1,f
 18331  0AC7  3F00               	moviw [0]fsr0
 18332  0AC8  0021               	movlb	1	; select bank1
 18333  0AC9  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 18334  0ACA  3F01               	moviw [1]fsr0
 18335  0ACB  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 18336                           
 18337                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
 18338  0ACC  0830               	movf	vfpfcnvrt@vp^(0+128),w
 18339  0ACD  0086               	movwf	6
 18340  0ACE  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 18341  0ACF  0087               	movwf	7
 18342  0AD0  0022               	movlb	2	; select bank2
 18343  0AD1  0840               	movf	_nout^(0+256),w
 18344  0AD2  0081               	movwf	1
 18345  0AD3  2B32               	goto	l6813
 18346  0AD4                     l6819:	
 18347                           
 18348                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
 18349  0AD4  0020               	movlb	0	; select bank0
 18350  0AD5  0859               	movf	vfpfcnvrt@fmt,w
 18351  0AD6  0086               	movwf	6
 18352  0AD7  0187               	clrf	7
 18353  0AD8  3002               	movlw	2
 18354  0AD9  0781               	addwf	1,f
 18355  0ADA  3141               	addfsr 1,1
 18356  0ADB  1803               	skipnc
 18357  0ADC  0A81               	incf	1,f
 18358                           
 18359                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
 18360  0ADD  085A               	movf	vfpfcnvrt@ap,w
 18361  0ADE  0086               	movwf	6
 18362  0ADF  0187               	clrf	7
 18363  0AE0  0801               	movf	1,w
 18364  0AE1  0084               	movwf	4
 18365  0AE2  0185               	clrf	5
 18366  0AE3  3002               	movlw	2
 18367  0AE4  0781               	addwf	1,f
 18368  0AE5  3F00               	moviw [0]fsr0
 18369  0AE6  0021               	movlb	1	; select bank1
 18370  0AE7  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 18371  0AE8  3F01               	moviw [1]fsr0
 18372  0AE9  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 18373                           
 18374                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
 18375  0AEA  0830               	movf	vfpfcnvrt@vp^(0+128),w
 18376  0AEB  0086               	movwf	6
 18377  0AEC  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 18378  0AED  0087               	movwf	7
 18379  0AEE  0022               	movlb	2	; select bank2
 18380  0AEF  0840               	movf	_nout^(0+256),w
 18381  0AF0  3FC0               	movwi [0]fsr1
 18382  0AF1  0841               	movf	(_nout+1)^(0+256),w
 18383  0AF2  3FC1               	movwi [1]fsr1
 18384  0AF3  2B32               	goto	l6813
 18385  0AF4                     l6831:	
 18386                           
 18387                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
 18388  0AF4  0859               	movf	vfpfcnvrt@fmt,w
 18389  0AF5  0086               	movwf	6
 18390  0AF6  0187               	clrf	7
 18391  0AF7  3001               	movlw	1
 18392  0AF8  0781               	addwf	1,f
 18393  0AF9  3141               	addfsr 1,1
 18394  0AFA  1803               	skipnc
 18395  0AFB  0A81               	incf	1,f
 18396                           
 18397                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
 18398  0AFC  085A               	movf	vfpfcnvrt@ap,w
 18399  0AFD  0086               	movwf	6
 18400  0AFE  0187               	clrf	7
 18401  0AFF  0801               	movf	1,w
 18402  0B00  0084               	movwf	4
 18403  0B01  0185               	clrf	5
 18404  0B02  3002               	movlw	2
 18405  0B03  0781               	addwf	1,f
 18406  0B04  3F00               	moviw [0]fsr0
 18407  0B05  0021               	movlb	1	; select bank1
 18408  0B06  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 18409  0B07  3F01               	moviw [1]fsr0
 18410  0B08  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 18411                           
 18412                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
 18413  0B09  0830               	movf	vfpfcnvrt@vp^(0+128),w
 18414  0B0A  0086               	movwf	6
 18415  0B0B  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 18416  0B0C  0087               	movwf	7
 18417  0B0D  0022               	movlb	2	; select bank2
 18418  0B0E  0840               	movf	_nout^(0+256),w
 18419  0B0F  3FC0               	movwi [0]fsr1
 18420  0B10  0841               	movf	(_nout+1)^(0+256),w
 18421  0B11  3FC1               	movwi [1]fsr1
 18422  0B12  2B32               	goto	l6813
 18423  0B13                     l6843:	
 18424                           
 18425                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
 18426  0B13  0020               	movlb	0	; select bank0
 18427  0B14  0859               	movf	vfpfcnvrt@fmt,w
 18428  0B15  0086               	movwf	6
 18429  0B16  0187               	clrf	7
 18430  0B17  3002               	movlw	2
 18431  0B18  0781               	addwf	1,f
 18432  0B19  3141               	addfsr 1,1
 18433  0B1A  1803               	skipnc
 18434  0B1B  0A81               	incf	1,f
 18435                           
 18436                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
 18437  0B1C  085A               	movf	vfpfcnvrt@ap,w
 18438  0B1D  0086               	movwf	6
 18439  0B1E  0187               	clrf	7
 18440  0B1F  0801               	movf	1,w
 18441  0B20  0084               	movwf	4
 18442  0B21  0185               	clrf	5
 18443  0B22  3002               	movlw	2
 18444  0B23  0781               	addwf	1,f
 18445  0B24  3F00               	moviw [0]fsr0
 18446  0B25  0021               	movlb	1	; select bank1
 18447  0B26  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 18448  0B27  3F01               	moviw [1]fsr0
 18449  0B28  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 18450                           
 18451                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
 18452  0B29  0830               	movf	vfpfcnvrt@vp^(0+128),w
 18453  0B2A  0086               	movwf	6
 18454  0B2B  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 18455  0B2C  0087               	movwf	7
 18456  0B2D  0022               	movlb	2	; select bank2
 18457  0B2E  0840               	movf	_nout^(0+256),w
 18458  0B2F  3FC0               	movwi [0]fsr1
 18459  0B30  0841               	movf	(_nout+1)^(0+256),w
 18460  0B31  3FC1               	movwi [1]fsr1
 18461  0B32                     l6813:	
 18462                           
 18463                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
 18464  0B32  0020               	movlb	0	; select bank0
 18465  0B33  01D7               	clrf	?_vfpfcnvrt
 18466  0B34  01D8               	clrf	?_vfpfcnvrt+1
 18467  0B35  0008               	return
 18468  0B36                     l6817:	
 18469                           
 18470                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
 18471  0B36  0020               	movlb	0	; select bank0
 18472  0B37  0859               	movf	vfpfcnvrt@fmt,w
 18473  0B38  0086               	movwf	6
 18474  0B39  0187               	clrf	7
 18475  0B3A  3F40               	moviw [0]fsr1
 18476  0B3B  00F1               	movwf	strncmp@_l
 18477  0B3C  3F41               	moviw [1]fsr1
 18478  0B3D  00F2               	movwf	strncmp@_l+1
 18479  0B3E  3071               	movlw	low ((STR_60+1)| (0+32768))
 18480  0B3F  00F3               	movwf	strncmp@_r
 18481  0B40  30B1               	movlw	high ((STR_60+1)| (0+32768))
 18482  0B41  00F4               	movwf	strncmp@_r+1
 18483  0B42  3002               	movlw	2
 18484  0B43  00F5               	movwf	strncmp@n
 18485  0B44  3000               	movlw	0
 18486  0B45  00F6               	movwf	strncmp@n+1
 18487  0B46  31A2  220C  3188   	fcall	_strncmp
 18488  0B49  0871               	movf	?_strncmp,w
 18489  0B4A  0472               	iorwf	?_strncmp+1,w
 18490  0B4B  1903               	btfsc	3,2
 18491  0B4C  2AD4               	goto	l6819
 18492                           
 18493                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
 18494  0B4D  0020               	movlb	0	; select bank0
 18495  0B4E  0859               	movf	vfpfcnvrt@fmt,w
 18496  0B4F  0086               	movwf	6
 18497  0B50  0187               	clrf	7
 18498  0B51  3F40               	moviw [0]fsr1
 18499  0B52  00DB               	movwf	??_vfpfcnvrt
 18500  0B53  3F41               	moviw [1]fsr1
 18501  0B54  00DC               	movwf	??_vfpfcnvrt+1
 18502  0B55  085B               	movf	??_vfpfcnvrt,w
 18503  0B56  0084               	movwf	4
 18504  0B57  085C               	movf	??_vfpfcnvrt+1,w
 18505  0B58  0085               	movwf	5
 18506  0B59  0012               	moviw fsr0++
 18507  0B5A  3A6E               	xorlw	110
 18508  0B5B  1903               	btfsc	3,2
 18509  0B5C  2AF4               	goto	l6831
 18510                           
 18511                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
 18512  0B5D  0859               	movf	vfpfcnvrt@fmt,w
 18513  0B5E  0086               	movwf	6
 18514  0B5F  0187               	clrf	7
 18515  0B60  3F40               	moviw [0]fsr1
 18516  0B61  00F1               	movwf	strncmp@_l
 18517  0B62  3F41               	moviw [1]fsr1
 18518  0B63  00F2               	movwf	strncmp@_l+1
 18519  0B64  3089               	movlw	low (STR_70| (0+32768))
 18520  0B65  00F3               	movwf	strncmp@_r
 18521  0B66  30B1               	movlw	high (STR_70| (0+32768))
 18522  0B67  00F4               	movwf	strncmp@_r+1
 18523  0B68  3002               	movlw	2
 18524  0B69  00F5               	movwf	strncmp@n
 18525  0B6A  3000               	movlw	0
 18526  0B6B  00F6               	movwf	strncmp@n+1
 18527  0B6C  31A2  220C  3188   	fcall	_strncmp
 18528  0B6F  0871               	movf	?_strncmp,w
 18529  0B70  0472               	iorwf	?_strncmp+1,w
 18530  0B71  1903               	btfsc	3,2
 18531  0B72  2B13               	goto	l6843
 18532                           
 18533                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
 18534  0B73  0020               	movlb	0	; select bank0
 18535  0B74  0859               	movf	vfpfcnvrt@fmt,w
 18536  0B75  0086               	movwf	6
 18537  0B76  0187               	clrf	7
 18538  0B77  3F40               	moviw [0]fsr1
 18539  0B78  00DB               	movwf	??_vfpfcnvrt
 18540  0B79  3F41               	moviw [1]fsr1
 18541  0B7A  00DC               	movwf	??_vfpfcnvrt+1
 18542  0B7B  085B               	movf	??_vfpfcnvrt,w
 18543  0B7C  0084               	movwf	4
 18544  0B7D  085C               	movf	??_vfpfcnvrt+1,w
 18545  0B7E  0085               	movwf	5
 18546  0B7F  0012               	moviw fsr0++
 18547  0B80  3A70               	xorlw	112
 18548  0B81  1D03               	btfss	3,2
 18549  0B82  2BCF               	goto	l6863
 18550                           
 18551                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
 18552  0B83  0859               	movf	vfpfcnvrt@fmt,w
 18553  0B84  0086               	movwf	6
 18554  0B85  0187               	clrf	7
 18555  0B86  3001               	movlw	1
 18556  0B87  0781               	addwf	1,f
 18557  0B88  3141               	addfsr 1,1
 18558  0B89  1803               	skipnc
 18559  0B8A  0A81               	incf	1,f
 18560                           
 18561                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
 18562  0B8B  085A               	movf	vfpfcnvrt@ap,w
 18563  0B8C  0086               	movwf	6
 18564  0B8D  0187               	clrf	7
 18565  0B8E  0801               	movf	1,w
 18566  0B8F  0084               	movwf	4
 18567  0B90  0185               	clrf	5
 18568  0B91  3002               	movlw	2
 18569  0B92  0781               	addwf	1,f
 18570  0B93  3F00               	moviw [0]fsr0
 18571  0B94  0021               	movlb	1	; select bank1
 18572  0B95  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 18573  0B96  3F01               	moviw [1]fsr0
 18574  0B97  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 18575  0B98  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 18576  0B99  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 18577  0B9A  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 18578  0B9B  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 18579  0B9C  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 18580  0B9D  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 18581                           
 18582                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
 18583  0B9E  0020               	movlb	0	; select bank0
 18584  0B9F  0858               	movf	vfpfcnvrt@fp+1,w
 18585  0BA0  00B1               	movwf	xtoa@fp+1
 18586  0BA1  0857               	movf	vfpfcnvrt@fp,w
 18587  0BA2  00B0               	movwf	xtoa@fp
 18588  0BA3  0021               	movlb	1	; select bank1
 18589  0BA4  0833               	movf	vfpfcnvrt@llu^(0+128),w
 18590  0BA5  0020               	movlb	0	; select bank0
 18591  0BA6  00B2               	movwf	xtoa@d
 18592  0BA7  0021               	movlb	1	; select bank1
 18593  0BA8  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 18594  0BA9  0020               	movlb	0	; select bank0
 18595  0BAA  00B3               	movwf	xtoa@d+1
 18596  0BAB  0021               	movlb	1	; select bank1
 18597  0BAC  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 18598  0BAD  0020               	movlb	0	; select bank0
 18599  0BAE  00B4               	movwf	xtoa@d+2
 18600  0BAF  0021               	movlb	1	; select bank1
 18601  0BB0  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 18602  0BB1  0020               	movlb	0	; select bank0
 18603  0BB2  00B5               	movwf	xtoa@d+3
 18604  0BB3  0021               	movlb	1	; select bank1
 18605  0BB4  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 18606  0BB5  0020               	movlb	0	; select bank0
 18607  0BB6  00B6               	movwf	xtoa@d+4
 18608  0BB7  0021               	movlb	1	; select bank1
 18609  0BB8  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 18610  0BB9  0020               	movlb	0	; select bank0
 18611  0BBA  00B7               	movwf	xtoa@d+5
 18612  0BBB  0021               	movlb	1	; select bank1
 18613  0BBC  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 18614  0BBD  0020               	movlb	0	; select bank0
 18615  0BBE  00B8               	movwf	xtoa@d+6
 18616  0BBF  0021               	movlb	1	; select bank1
 18617  0BC0  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 18618  0BC1  0020               	movlb	0	; select bank0
 18619  0BC2  00B9               	movwf	xtoa@d+7
 18620  0BC3  3078               	movlw	120
 18621  0BC4  00DB               	movwf	??_vfpfcnvrt
 18622  0BC5  085B               	movf	??_vfpfcnvrt,w
 18623  0BC6  00BA               	movwf	xtoa@x
 18624  0BC7  3193  2384         	fcall	_xtoa
 18625  0BC9  0020               	movlb	0	; select bank0
 18626  0BCA  0831               	movf	?_xtoa+1,w
 18627  0BCB  00D8               	movwf	?_vfpfcnvrt+1
 18628  0BCC  0830               	movf	?_xtoa,w
 18629  0BCD  00D7               	movwf	?_vfpfcnvrt
 18630  0BCE  0008               	return
 18631  0BCF                     l6863:	
 18632                           
 18633                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 18634  0BCF  0859               	movf	vfpfcnvrt@fmt,w
 18635  0BD0  0086               	movwf	6
 18636  0BD1  0187               	clrf	7
 18637  0BD2  3F40               	moviw [0]fsr1
 18638  0BD3  00DB               	movwf	??_vfpfcnvrt
 18639  0BD4  3F41               	moviw [1]fsr1
 18640  0BD5  00DC               	movwf	??_vfpfcnvrt+1
 18641  0BD6  085B               	movf	??_vfpfcnvrt,w
 18642  0BD7  0084               	movwf	4
 18643  0BD8  085C               	movf	??_vfpfcnvrt+1,w
 18644  0BD9  0085               	movwf	5
 18645  0BDA  0012               	moviw fsr0++
 18646  0BDB  3A73               	xorlw	115
 18647  0BDC  1D03               	btfss	3,2
 18648  0BDD  2C08               	goto	l6873
 18649                           
 18650                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 18651  0BDE  0859               	movf	vfpfcnvrt@fmt,w
 18652  0BDF  0086               	movwf	6
 18653  0BE0  0187               	clrf	7
 18654  0BE1  3001               	movlw	1
 18655  0BE2  0781               	addwf	1,f
 18656  0BE3  3141               	addfsr 1,1
 18657  0BE4  1803               	skipnc
 18658  0BE5  0A81               	incf	1,f
 18659                           
 18660                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 18661  0BE6  085A               	movf	vfpfcnvrt@ap,w
 18662  0BE7  0086               	movwf	6
 18663  0BE8  0187               	clrf	7
 18664  0BE9  0801               	movf	1,w
 18665  0BEA  0084               	movwf	4
 18666  0BEB  0185               	clrf	5
 18667  0BEC  3002               	movlw	2
 18668  0BED  0781               	addwf	1,f
 18669  0BEE  3F00               	moviw [0]fsr0
 18670  0BEF  0021               	movlb	1	; select bank1
 18671  0BF0  00A0               	movwf	vfpfcnvrt@cp^(0+128)
 18672  0BF1  3F01               	moviw [1]fsr0
 18673  0BF2  00A1               	movwf	(vfpfcnvrt@cp+1)^(0+128)
 18674                           
 18675                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 18676  0BF3  0020               	movlb	0	; select bank0
 18677  0BF4  0858               	movf	vfpfcnvrt@fp+1,w
 18678  0BF5  00A1               	movwf	stoa@fp+1
 18679  0BF6  0857               	movf	vfpfcnvrt@fp,w
 18680  0BF7  00A0               	movwf	stoa@fp
 18681  0BF8  0021               	movlb	1	; select bank1
 18682  0BF9  0821               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 18683  0BFA  0020               	movlb	0	; select bank0
 18684  0BFB  00A3               	movwf	stoa@s+1
 18685  0BFC  0021               	movlb	1	; select bank1
 18686  0BFD  0820               	movf	vfpfcnvrt@cp^(0+128),w
 18687  0BFE  0020               	movlb	0	; select bank0
 18688  0BFF  00A2               	movwf	stoa@s
 18689  0C00  3198  20ED         	fcall	_stoa
 18690  0C02  0020               	movlb	0	; select bank0
 18691  0C03  0821               	movf	?_stoa+1,w
 18692  0C04  00D8               	movwf	?_vfpfcnvrt+1
 18693  0C05  0820               	movf	?_stoa,w
 18694  0C06  00D7               	movwf	?_vfpfcnvrt
 18695  0C07  0008               	return
 18696  0C08                     l6873:	
 18697                           
 18698                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
 18699  0C08  0859               	movf	vfpfcnvrt@fmt,w
 18700  0C09  0086               	movwf	6
 18701  0C0A  0187               	clrf	7
 18702  0C0B  3F40               	moviw [0]fsr1
 18703  0C0C  00F1               	movwf	strncmp@_l
 18704  0C0D  3F41               	moviw [1]fsr1
 18705  0C0E  00F2               	movwf	strncmp@_l+1
 18706  0C0F  3078               	movlw	low (STR_75| (0+32768))
 18707  0C10  00F3               	movwf	strncmp@_r
 18708  0C11  30B1               	movlw	high (STR_75| (0+32768))
 18709  0C12  00F4               	movwf	strncmp@_r+1
 18710  0C13  3003               	movlw	3
 18711  0C14  00F5               	movwf	strncmp@n
 18712  0C15  3000               	movlw	0
 18713  0C16  00F6               	movwf	strncmp@n+1
 18714  0C17  31A2  220C  3188   	fcall	_strncmp
 18715  0C1A  0871               	movf	?_strncmp,w
 18716  0C1B  0472               	iorwf	?_strncmp+1,w
 18717  0C1C  1D03               	btfss	3,2
 18718  0C1D  2C66               	goto	l6883
 18719                           
 18720                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
 18721  0C1E  0020               	movlb	0	; select bank0
 18722  0C1F  0859               	movf	vfpfcnvrt@fmt,w
 18723  0C20  0086               	movwf	6
 18724  0C21  0187               	clrf	7
 18725  0C22  3003               	movlw	3
 18726  0C23  0781               	addwf	1,f
 18727  0C24  3141               	addfsr 1,1
 18728  0C25  1803               	skipnc
 18729  0C26  0A81               	incf	1,f
 18730                           
 18731                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 18732  0C27  085A               	movf	vfpfcnvrt@ap,w
 18733  0C28  0086               	movwf	6
 18734  0C29  0187               	clrf	7
 18735  0C2A  0801               	movf	1,w
 18736  0C2B  0084               	movwf	4
 18737  0C2C  0185               	clrf	5
 18738  0C2D  3002               	movlw	2
 18739  0C2E  0781               	addwf	1,f
 18740  0C2F  0800               	movf	0,w
 18741  0C30  0021               	movlb	1	; select bank1
 18742  0C31  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 18743  0C32  01B4               	clrf	(vfpfcnvrt@llu+1)^(0+128)
 18744  0C33  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 18745  0C34  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 18746  0C35  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 18747  0C36  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 18748  0C37  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 18749  0C38  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 18750                           
 18751                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
 18752  0C39  0020               	movlb	0	; select bank0
 18753  0C3A  0858               	movf	vfpfcnvrt@fp+1,w
 18754  0C3B  00B1               	movwf	utoa@fp+1
 18755  0C3C  0857               	movf	vfpfcnvrt@fp,w
 18756  0C3D  00B0               	movwf	utoa@fp
 18757  0C3E  0021               	movlb	1	; select bank1
 18758  0C3F  0833               	movf	vfpfcnvrt@llu^(0+128),w
 18759  0C40  0020               	movlb	0	; select bank0
 18760  0C41  00B2               	movwf	utoa@d
 18761  0C42  0021               	movlb	1	; select bank1
 18762  0C43  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 18763  0C44  0020               	movlb	0	; select bank0
 18764  0C45  00B3               	movwf	utoa@d+1
 18765  0C46  0021               	movlb	1	; select bank1
 18766  0C47  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 18767  0C48  0020               	movlb	0	; select bank0
 18768  0C49  00B4               	movwf	utoa@d+2
 18769  0C4A  0021               	movlb	1	; select bank1
 18770  0C4B  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 18771  0C4C  0020               	movlb	0	; select bank0
 18772  0C4D  00B5               	movwf	utoa@d+3
 18773  0C4E  0021               	movlb	1	; select bank1
 18774  0C4F  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 18775  0C50  0020               	movlb	0	; select bank0
 18776  0C51  00B6               	movwf	utoa@d+4
 18777  0C52  0021               	movlb	1	; select bank1
 18778  0C53  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 18779  0C54  0020               	movlb	0	; select bank0
 18780  0C55  00B7               	movwf	utoa@d+5
 18781  0C56  0021               	movlb	1	; select bank1
 18782  0C57  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 18783  0C58  0020               	movlb	0	; select bank0
 18784  0C59  00B8               	movwf	utoa@d+6
 18785  0C5A  0021               	movlb	1	; select bank1
 18786  0C5B  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 18787  0C5C  0020               	movlb	0	; select bank0
 18788  0C5D  00B9               	movwf	utoa@d+7
 18789  0C5E  319C  243D         	fcall	_utoa
 18790  0C60  0020               	movlb	0	; select bank0
 18791  0C61  0831               	movf	?_utoa+1,w
 18792  0C62  00D8               	movwf	?_vfpfcnvrt+1
 18793  0C63  0830               	movf	?_utoa,w
 18794  0C64  00D7               	movwf	?_vfpfcnvrt
 18795  0C65  0008               	return
 18796  0C66                     l6883:	
 18797                           
 18798                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
 18799  0C66  0020               	movlb	0	; select bank0
 18800  0C67  0859               	movf	vfpfcnvrt@fmt,w
 18801  0C68  0086               	movwf	6
 18802  0C69  0187               	clrf	7
 18803  0C6A  3F40               	moviw [0]fsr1
 18804  0C6B  00F1               	movwf	strncmp@_l
 18805  0C6C  3F41               	moviw [1]fsr1
 18806  0C6D  00F2               	movwf	strncmp@_l+1
 18807  0C6E  3079               	movlw	low ((STR_75+1)| (0+32768))
 18808  0C6F  00F3               	movwf	strncmp@_r
 18809  0C70  30B1               	movlw	high ((STR_75+1)| (0+32768))
 18810  0C71  00F4               	movwf	strncmp@_r+1
 18811  0C72  3002               	movlw	2
 18812  0C73  00F5               	movwf	strncmp@n
 18813  0C74  3000               	movlw	0
 18814  0C75  00F6               	movwf	strncmp@n+1
 18815  0C76  31A2  220C  3188   	fcall	_strncmp
 18816  0C79  0871               	movf	?_strncmp,w
 18817  0C7A  0472               	iorwf	?_strncmp+1,w
 18818  0C7B  1D03               	btfss	3,2
 18819  0C7C  2CC6               	goto	l6893
 18820                           
 18821                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
 18822  0C7D  0020               	movlb	0	; select bank0
 18823  0C7E  0859               	movf	vfpfcnvrt@fmt,w
 18824  0C7F  0086               	movwf	6
 18825  0C80  0187               	clrf	7
 18826  0C81  3002               	movlw	2
 18827  0C82  0781               	addwf	1,f
 18828  0C83  3141               	addfsr 1,1
 18829  0C84  1803               	skipnc
 18830  0C85  0A81               	incf	1,f
 18831                           
 18832                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 18833  0C86  085A               	movf	vfpfcnvrt@ap,w
 18834  0C87  0086               	movwf	6
 18835  0C88  0187               	clrf	7
 18836  0C89  0801               	movf	1,w
 18837  0C8A  0084               	movwf	4
 18838  0C8B  0185               	clrf	5
 18839  0C8C  3002               	movlw	2
 18840  0C8D  0781               	addwf	1,f
 18841  0C8E  3F00               	moviw [0]fsr0
 18842  0C8F  0021               	movlb	1	; select bank1
 18843  0C90  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 18844  0C91  3F01               	moviw [1]fsr0
 18845  0C92  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 18846  0C93  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 18847  0C94  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 18848  0C95  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 18849  0C96  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 18850  0C97  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 18851  0C98  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 18852                           
 18853                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1177:      
      +                                 return utoa(fp, llu);
 18854  0C99  0020               	movlb	0	; select bank0
 18855  0C9A  0858               	movf	vfpfcnvrt@fp+1,w
 18856  0C9B  00B1               	movwf	utoa@fp+1
 18857  0C9C  0857               	movf	vfpfcnvrt@fp,w
 18858  0C9D  00B0               	movwf	utoa@fp
 18859  0C9E  0021               	movlb	1	; select bank1
 18860  0C9F  0833               	movf	vfpfcnvrt@llu^(0+128),w
 18861  0CA0  0020               	movlb	0	; select bank0
 18862  0CA1  00B2               	movwf	utoa@d
 18863  0CA2  0021               	movlb	1	; select bank1
 18864  0CA3  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 18865  0CA4  0020               	movlb	0	; select bank0
 18866  0CA5  00B3               	movwf	utoa@d+1
 18867  0CA6  0021               	movlb	1	; select bank1
 18868  0CA7  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 18869  0CA8  0020               	movlb	0	; select bank0
 18870  0CA9  00B4               	movwf	utoa@d+2
 18871  0CAA  0021               	movlb	1	; select bank1
 18872  0CAB  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 18873  0CAC  0020               	movlb	0	; select bank0
 18874  0CAD  00B5               	movwf	utoa@d+3
 18875  0CAE  0021               	movlb	1	; select bank1
 18876  0CAF  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 18877  0CB0  0020               	movlb	0	; select bank0
 18878  0CB1  00B6               	movwf	utoa@d+4
 18879  0CB2  0021               	movlb	1	; select bank1
 18880  0CB3  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 18881  0CB4  0020               	movlb	0	; select bank0
 18882  0CB5  00B7               	movwf	utoa@d+5
 18883  0CB6  0021               	movlb	1	; select bank1
 18884  0CB7  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 18885  0CB8  0020               	movlb	0	; select bank0
 18886  0CB9  00B8               	movwf	utoa@d+6
 18887  0CBA  0021               	movlb	1	; select bank1
 18888  0CBB  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 18889  0CBC  0020               	movlb	0	; select bank0
 18890  0CBD  00B9               	movwf	utoa@d+7
 18891  0CBE  319C  243D         	fcall	_utoa
 18892  0CC0  0020               	movlb	0	; select bank0
 18893  0CC1  0831               	movf	?_utoa+1,w
 18894  0CC2  00D8               	movwf	?_vfpfcnvrt+1
 18895  0CC3  0830               	movf	?_utoa,w
 18896  0CC4  00D7               	movwf	?_vfpfcnvrt
 18897  0CC5  0008               	return
 18898  0CC6                     l6893:	
 18899                           
 18900                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 18901  0CC6  0020               	movlb	0	; select bank0
 18902  0CC7  0859               	movf	vfpfcnvrt@fmt,w
 18903  0CC8  0086               	movwf	6
 18904  0CC9  0187               	clrf	7
 18905  0CCA  3F40               	moviw [0]fsr1
 18906  0CCB  00DB               	movwf	??_vfpfcnvrt
 18907  0CCC  3F41               	moviw [1]fsr1
 18908  0CCD  00DC               	movwf	??_vfpfcnvrt+1
 18909  0CCE  085B               	movf	??_vfpfcnvrt,w
 18910  0CCF  0084               	movwf	4
 18911  0CD0  085C               	movf	??_vfpfcnvrt+1,w
 18912  0CD1  0085               	movwf	5
 18913  0CD2  0012               	moviw fsr0++
 18914  0CD3  3A75               	xorlw	117
 18915  0CD4  1D03               	btfss	3,2
 18916  0CD5  2D1E               	goto	l6903
 18917                           
 18918                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 18919  0CD6  0859               	movf	vfpfcnvrt@fmt,w
 18920  0CD7  0086               	movwf	6
 18921  0CD8  0187               	clrf	7
 18922  0CD9  3001               	movlw	1
 18923  0CDA  0781               	addwf	1,f
 18924  0CDB  3141               	addfsr 1,1
 18925  0CDC  1803               	skipnc
 18926  0CDD  0A81               	incf	1,f
 18927                           
 18928                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 18929  0CDE  085A               	movf	vfpfcnvrt@ap,w
 18930  0CDF  0086               	movwf	6
 18931  0CE0  0187               	clrf	7
 18932  0CE1  0801               	movf	1,w
 18933  0CE2  0084               	movwf	4
 18934  0CE3  0185               	clrf	5
 18935  0CE4  3002               	movlw	2
 18936  0CE5  0781               	addwf	1,f
 18937  0CE6  3F00               	moviw [0]fsr0
 18938  0CE7  0021               	movlb	1	; select bank1
 18939  0CE8  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 18940  0CE9  3F01               	moviw [1]fsr0
 18941  0CEA  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 18942  0CEB  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 18943  0CEC  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 18944  0CED  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 18945  0CEE  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 18946  0CEF  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 18947  0CF0  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 18948                           
 18949                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
 18950  0CF1  0020               	movlb	0	; select bank0
 18951  0CF2  0858               	movf	vfpfcnvrt@fp+1,w
 18952  0CF3  00B1               	movwf	utoa@fp+1
 18953  0CF4  0857               	movf	vfpfcnvrt@fp,w
 18954  0CF5  00B0               	movwf	utoa@fp
 18955  0CF6  0021               	movlb	1	; select bank1
 18956  0CF7  0833               	movf	vfpfcnvrt@llu^(0+128),w
 18957  0CF8  0020               	movlb	0	; select bank0
 18958  0CF9  00B2               	movwf	utoa@d
 18959  0CFA  0021               	movlb	1	; select bank1
 18960  0CFB  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 18961  0CFC  0020               	movlb	0	; select bank0
 18962  0CFD  00B3               	movwf	utoa@d+1
 18963  0CFE  0021               	movlb	1	; select bank1
 18964  0CFF  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 18965  0D00  0020               	movlb	0	; select bank0
 18966  0D01  00B4               	movwf	utoa@d+2
 18967  0D02  0021               	movlb	1	; select bank1
 18968  0D03  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 18969  0D04  0020               	movlb	0	; select bank0
 18970  0D05  00B5               	movwf	utoa@d+3
 18971  0D06  0021               	movlb	1	; select bank1
 18972  0D07  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 18973  0D08  0020               	movlb	0	; select bank0
 18974  0D09  00B6               	movwf	utoa@d+4
 18975  0D0A  0021               	movlb	1	; select bank1
 18976  0D0B  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 18977  0D0C  0020               	movlb	0	; select bank0
 18978  0D0D  00B7               	movwf	utoa@d+5
 18979  0D0E  0021               	movlb	1	; select bank1
 18980  0D0F  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 18981  0D10  0020               	movlb	0	; select bank0
 18982  0D11  00B8               	movwf	utoa@d+6
 18983  0D12  0021               	movlb	1	; select bank1
 18984  0D13  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 18985  0D14  0020               	movlb	0	; select bank0
 18986  0D15  00B9               	movwf	utoa@d+7
 18987  0D16  319C  243D         	fcall	_utoa
 18988  0D18  0020               	movlb	0	; select bank0
 18989  0D19  0831               	movf	?_utoa+1,w
 18990  0D1A  00D8               	movwf	?_vfpfcnvrt+1
 18991  0D1B  0830               	movf	?_utoa,w
 18992  0D1C  00D7               	movwf	?_vfpfcnvrt
 18993  0D1D  0008               	return
 18994  0D1E                     l6903:	
 18995                           
 18996                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
 18997  0D1E  0859               	movf	vfpfcnvrt@fmt,w
 18998  0D1F  0086               	movwf	6
 18999  0D20  0187               	clrf	7
 19000  0D21  3F40               	moviw [0]fsr1
 19001  0D22  00F1               	movwf	strncmp@_l
 19002  0D23  3F41               	moviw [1]fsr1
 19003  0D24  00F2               	movwf	strncmp@_l+1
 19004  0D25  308F               	movlw	low (STR_85| (0+32768))
 19005  0D26  00F3               	movwf	strncmp@_r
 19006  0D27  30B1               	movlw	high (STR_85| (0+32768))
 19007  0D28  00F4               	movwf	strncmp@_r+1
 19008  0D29  3002               	movlw	2
 19009  0D2A  00F5               	movwf	strncmp@n
 19010  0D2B  3000               	movlw	0
 19011  0D2C  00F6               	movwf	strncmp@n+1
 19012  0D2D  31A2  220C  3188   	fcall	_strncmp
 19013  0D30  0871               	movf	?_strncmp,w
 19014  0D31  0472               	iorwf	?_strncmp+1,w
 19015  0D32  1D03               	btfss	3,2
 19016  0D33  2D7D               	goto	l6913
 19017                           
 19018                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
 19019  0D34  0020               	movlb	0	; select bank0
 19020  0D35  0859               	movf	vfpfcnvrt@fmt,w
 19021  0D36  0086               	movwf	6
 19022  0D37  0187               	clrf	7
 19023  0D38  3002               	movlw	2
 19024  0D39  0781               	addwf	1,f
 19025  0D3A  3141               	addfsr 1,1
 19026  0D3B  1803               	skipnc
 19027  0D3C  0A81               	incf	1,f
 19028                           
 19029                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 19030  0D3D  085A               	movf	vfpfcnvrt@ap,w
 19031  0D3E  0086               	movwf	6
 19032  0D3F  0187               	clrf	7
 19033  0D40  0801               	movf	1,w
 19034  0D41  0084               	movwf	4
 19035  0D42  0185               	clrf	5
 19036  0D43  3002               	movlw	2
 19037  0D44  0781               	addwf	1,f
 19038  0D45  3F00               	moviw [0]fsr0
 19039  0D46  0021               	movlb	1	; select bank1
 19040  0D47  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 19041  0D48  3F01               	moviw [1]fsr0
 19042  0D49  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 19043  0D4A  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 19044  0D4B  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 19045  0D4C  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 19046  0D4D  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 19047  0D4E  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 19048  0D4F  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 19049                           
 19050                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1241:      
      +                                 return utoa(fp, llu);
 19051  0D50  0020               	movlb	0	; select bank0
 19052  0D51  0858               	movf	vfpfcnvrt@fp+1,w
 19053  0D52  00B1               	movwf	utoa@fp+1
 19054  0D53  0857               	movf	vfpfcnvrt@fp,w
 19055  0D54  00B0               	movwf	utoa@fp
 19056  0D55  0021               	movlb	1	; select bank1
 19057  0D56  0833               	movf	vfpfcnvrt@llu^(0+128),w
 19058  0D57  0020               	movlb	0	; select bank0
 19059  0D58  00B2               	movwf	utoa@d
 19060  0D59  0021               	movlb	1	; select bank1
 19061  0D5A  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 19062  0D5B  0020               	movlb	0	; select bank0
 19063  0D5C  00B3               	movwf	utoa@d+1
 19064  0D5D  0021               	movlb	1	; select bank1
 19065  0D5E  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 19066  0D5F  0020               	movlb	0	; select bank0
 19067  0D60  00B4               	movwf	utoa@d+2
 19068  0D61  0021               	movlb	1	; select bank1
 19069  0D62  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 19070  0D63  0020               	movlb	0	; select bank0
 19071  0D64  00B5               	movwf	utoa@d+3
 19072  0D65  0021               	movlb	1	; select bank1
 19073  0D66  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 19074  0D67  0020               	movlb	0	; select bank0
 19075  0D68  00B6               	movwf	utoa@d+4
 19076  0D69  0021               	movlb	1	; select bank1
 19077  0D6A  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 19078  0D6B  0020               	movlb	0	; select bank0
 19079  0D6C  00B7               	movwf	utoa@d+5
 19080  0D6D  0021               	movlb	1	; select bank1
 19081  0D6E  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 19082  0D6F  0020               	movlb	0	; select bank0
 19083  0D70  00B8               	movwf	utoa@d+6
 19084  0D71  0021               	movlb	1	; select bank1
 19085  0D72  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 19086  0D73  0020               	movlb	0	; select bank0
 19087  0D74  00B9               	movwf	utoa@d+7
 19088  0D75  319C  243D         	fcall	_utoa
 19089  0D77  0020               	movlb	0	; select bank0
 19090  0D78  0831               	movf	?_utoa+1,w
 19091  0D79  00D8               	movwf	?_vfpfcnvrt+1
 19092  0D7A  0830               	movf	?_utoa,w
 19093  0D7B  00D7               	movwf	?_vfpfcnvrt
 19094  0D7C  0008               	return
 19095  0D7D                     l6913:	
 19096                           
 19097                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
 19098  0D7D  0020               	movlb	0	; select bank0
 19099  0D7E  0859               	movf	vfpfcnvrt@fmt,w
 19100  0D7F  0086               	movwf	6
 19101  0D80  0187               	clrf	7
 19102  0D81  3F40               	moviw [0]fsr1
 19103  0D82  00F1               	movwf	strncmp@_l
 19104  0D83  3F41               	moviw [1]fsr1
 19105  0D84  00F2               	movwf	strncmp@_l+1
 19106  0D85  307C               	movlw	low (STR_90| (0+32768))
 19107  0D86  00F3               	movwf	strncmp@_r
 19108  0D87  30B1               	movlw	high (STR_90| (0+32768))
 19109  0D88  00F4               	movwf	strncmp@_r+1
 19110  0D89  3003               	movlw	3
 19111  0D8A  00F5               	movwf	strncmp@n
 19112  0D8B  3000               	movlw	0
 19113  0D8C  00F6               	movwf	strncmp@n+1
 19114  0D8D  31A2  220C  3188   	fcall	_strncmp
 19115  0D90  0871               	movf	?_strncmp,w
 19116  0D91  0472               	iorwf	?_strncmp+1,w
 19117  0D92  1903               	btfsc	3,2
 19118  0D93  2DAB               	goto	l6917
 19119  0D94  0020               	movlb	0	; select bank0
 19120  0D95  0859               	movf	vfpfcnvrt@fmt,w
 19121  0D96  0086               	movwf	6
 19122  0D97  0187               	clrf	7
 19123  0D98  3F40               	moviw [0]fsr1
 19124  0D99  00F1               	movwf	strncmp@_l
 19125  0D9A  3F41               	moviw [1]fsr1
 19126  0D9B  00F2               	movwf	strncmp@_l+1
 19127  0D9C  3064               	movlw	low (STR_94| (0+32768))
 19128  0D9D  00F3               	movwf	strncmp@_r
 19129  0D9E  30B1               	movlw	high (STR_94| (0+32768))
 19130  0D9F  00F4               	movwf	strncmp@_r+1
 19131  0DA0  3003               	movlw	3
 19132  0DA1  00F5               	movwf	strncmp@n
 19133  0DA2  3000               	movlw	0
 19134  0DA3  00F6               	movwf	strncmp@n+1
 19135  0DA4  31A2  220C  3188   	fcall	_strncmp
 19136  0DA7  0871               	movf	?_strncmp,w
 19137  0DA8  0472               	iorwf	?_strncmp+1,w
 19138  0DA9  1D03               	btfss	3,2
 19139  0DAA  2E0D               	goto	l6927
 19140  0DAB                     l6917:	
 19141                           
 19142                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
 19143  0DAB  0020               	movlb	0	; select bank0
 19144  0DAC  0859               	movf	vfpfcnvrt@fmt,w
 19145  0DAD  0086               	movwf	6
 19146  0DAE  0187               	clrf	7
 19147  0DAF  3F40               	moviw [0]fsr1
 19148  0DB0  00DB               	movwf	??_vfpfcnvrt
 19149  0DB1  3F41               	moviw [1]fsr1
 19150  0DB2  00DC               	movwf	??_vfpfcnvrt+1
 19151  0DB3  3002               	movlw	2
 19152  0DB4  075B               	addwf	??_vfpfcnvrt,w
 19153  0DB5  0084               	movwf	4
 19154  0DB6  085C               	movf	??_vfpfcnvrt+1,w
 19155  0DB7  1803               	skipnc
 19156  0DB8  0A5C               	incf	??_vfpfcnvrt+1,w
 19157  0DB9  0085               	movwf	5
 19158  0DBA  0800               	movf	0,w	;code access
 19159  0DBB  00DD               	movwf	??_vfpfcnvrt+2
 19160  0DBC  085D               	movf	??_vfpfcnvrt+2,w
 19161  0DBD  0021               	movlb	1	; select bank1
 19162  0DBE  00B2               	movwf	vfpfcnvrt@c^(0+128)
 19163                           
 19164                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
 19165  0DBF  0020               	movlb	0	; select bank0
 19166  0DC0  0859               	movf	vfpfcnvrt@fmt,w
 19167  0DC1  0086               	movwf	6
 19168  0DC2  0187               	clrf	7
 19169  0DC3  3003               	movlw	3
 19170  0DC4  0781               	addwf	1,f
 19171  0DC5  3141               	addfsr 1,1
 19172  0DC6  1803               	skipnc
 19173  0DC7  0A81               	incf	1,f
 19174                           
 19175                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 19176  0DC8  085A               	movf	vfpfcnvrt@ap,w
 19177  0DC9  0086               	movwf	6
 19178  0DCA  0187               	clrf	7
 19179  0DCB  0801               	movf	1,w
 19180  0DCC  0084               	movwf	4
 19181  0DCD  0185               	clrf	5
 19182  0DCE  3002               	movlw	2
 19183  0DCF  0781               	addwf	1,f
 19184  0DD0  0800               	movf	0,w
 19185  0DD1  0021               	movlb	1	; select bank1
 19186  0DD2  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 19187  0DD3  01B4               	clrf	(vfpfcnvrt@llu+1)^(0+128)
 19188  0DD4  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 19189  0DD5  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 19190  0DD6  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 19191  0DD7  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 19192  0DD8  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 19193  0DD9  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 19194                           
 19195                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
 19196  0DDA  0020               	movlb	0	; select bank0
 19197  0DDB  0858               	movf	vfpfcnvrt@fp+1,w
 19198  0DDC  00B1               	movwf	xtoa@fp+1
 19199  0DDD  0857               	movf	vfpfcnvrt@fp,w
 19200  0DDE  00B0               	movwf	xtoa@fp
 19201  0DDF  0021               	movlb	1	; select bank1
 19202  0DE0  0833               	movf	vfpfcnvrt@llu^(0+128),w
 19203  0DE1  0020               	movlb	0	; select bank0
 19204  0DE2  00B2               	movwf	xtoa@d
 19205  0DE3  0021               	movlb	1	; select bank1
 19206  0DE4  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 19207  0DE5  0020               	movlb	0	; select bank0
 19208  0DE6  00B3               	movwf	xtoa@d+1
 19209  0DE7  0021               	movlb	1	; select bank1
 19210  0DE8  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 19211  0DE9  0020               	movlb	0	; select bank0
 19212  0DEA  00B4               	movwf	xtoa@d+2
 19213  0DEB  0021               	movlb	1	; select bank1
 19214  0DEC  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 19215  0DED  0020               	movlb	0	; select bank0
 19216  0DEE  00B5               	movwf	xtoa@d+3
 19217  0DEF  0021               	movlb	1	; select bank1
 19218  0DF0  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 19219  0DF1  0020               	movlb	0	; select bank0
 19220  0DF2  00B6               	movwf	xtoa@d+4
 19221  0DF3  0021               	movlb	1	; select bank1
 19222  0DF4  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 19223  0DF5  0020               	movlb	0	; select bank0
 19224  0DF6  00B7               	movwf	xtoa@d+5
 19225  0DF7  0021               	movlb	1	; select bank1
 19226  0DF8  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 19227  0DF9  0020               	movlb	0	; select bank0
 19228  0DFA  00B8               	movwf	xtoa@d+6
 19229  0DFB  0021               	movlb	1	; select bank1
 19230  0DFC  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 19231  0DFD  0020               	movlb	0	; select bank0
 19232  0DFE  00B9               	movwf	xtoa@d+7
 19233  0DFF  0021               	movlb	1	; select bank1
 19234  0E00  0832               	movf	vfpfcnvrt@c^(0+128),w
 19235  0E01  0020               	movlb	0	; select bank0
 19236  0E02  00DB               	movwf	??_vfpfcnvrt
 19237  0E03  085B               	movf	??_vfpfcnvrt,w
 19238  0E04  00BA               	movwf	xtoa@x
 19239  0E05  3193  2384         	fcall	_xtoa
 19240  0E07  0020               	movlb	0	; select bank0
 19241  0E08  0831               	movf	?_xtoa+1,w
 19242  0E09  00D8               	movwf	?_vfpfcnvrt+1
 19243  0E0A  0830               	movf	?_xtoa,w
 19244  0E0B  00D7               	movwf	?_vfpfcnvrt
 19245  0E0C  0008               	return
 19246  0E0D                     l6927:	
 19247                           
 19248                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
 19249  0E0D  0020               	movlb	0	; select bank0
 19250  0E0E  0859               	movf	vfpfcnvrt@fmt,w
 19251  0E0F  0086               	movwf	6
 19252  0E10  0187               	clrf	7
 19253  0E11  3F40               	moviw [0]fsr1
 19254  0E12  00F1               	movwf	strncmp@_l
 19255  0E13  3F41               	moviw [1]fsr1
 19256  0E14  00F2               	movwf	strncmp@_l+1
 19257  0E15  307D               	movlw	low ((STR_90+1)| (0+32768))
 19258  0E16  00F3               	movwf	strncmp@_r
 19259  0E17  30B1               	movlw	high ((STR_90+1)| (0+32768))
 19260  0E18  00F4               	movwf	strncmp@_r+1
 19261  0E19  3002               	movlw	2
 19262  0E1A  00F5               	movwf	strncmp@n
 19263  0E1B  3000               	movlw	0
 19264  0E1C  00F6               	movwf	strncmp@n+1
 19265  0E1D  31A2  220C  3188   	fcall	_strncmp
 19266  0E20  0871               	movf	?_strncmp,w
 19267  0E21  0472               	iorwf	?_strncmp+1,w
 19268  0E22  1903               	btfsc	3,2
 19269  0E23  2E3B               	goto	l6931
 19270  0E24  0020               	movlb	0	; select bank0
 19271  0E25  0859               	movf	vfpfcnvrt@fmt,w
 19272  0E26  0086               	movwf	6
 19273  0E27  0187               	clrf	7
 19274  0E28  3F40               	moviw [0]fsr1
 19275  0E29  00F1               	movwf	strncmp@_l
 19276  0E2A  3F41               	moviw [1]fsr1
 19277  0E2B  00F2               	movwf	strncmp@_l+1
 19278  0E2C  3065               	movlw	low ((STR_94+1)| (0+32768))
 19279  0E2D  00F3               	movwf	strncmp@_r
 19280  0E2E  30B1               	movlw	high ((STR_94+1)| (0+32768))
 19281  0E2F  00F4               	movwf	strncmp@_r+1
 19282  0E30  3002               	movlw	2
 19283  0E31  00F5               	movwf	strncmp@n
 19284  0E32  3000               	movlw	0
 19285  0E33  00F6               	movwf	strncmp@n+1
 19286  0E34  31A2  220C  3188   	fcall	_strncmp
 19287  0E37  0871               	movf	?_strncmp,w
 19288  0E38  0472               	iorwf	?_strncmp+1,w
 19289  0E39  1D03               	btfss	3,2
 19290  0E3A  2E9E               	goto	l6941
 19291  0E3B                     l6931:	
 19292                           
 19293                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
 19294  0E3B  0020               	movlb	0	; select bank0
 19295  0E3C  0859               	movf	vfpfcnvrt@fmt,w
 19296  0E3D  0086               	movwf	6
 19297  0E3E  0187               	clrf	7
 19298  0E3F  3F40               	moviw [0]fsr1
 19299  0E40  00DB               	movwf	??_vfpfcnvrt
 19300  0E41  3F41               	moviw [1]fsr1
 19301  0E42  00DC               	movwf	??_vfpfcnvrt+1
 19302  0E43  3001               	movlw	1
 19303  0E44  075B               	addwf	??_vfpfcnvrt,w
 19304  0E45  0084               	movwf	4
 19305  0E46  085C               	movf	??_vfpfcnvrt+1,w
 19306  0E47  1803               	skipnc
 19307  0E48  0A5C               	incf	??_vfpfcnvrt+1,w
 19308  0E49  0085               	movwf	5
 19309  0E4A  0800               	movf	0,w	;code access
 19310  0E4B  00DD               	movwf	??_vfpfcnvrt+2
 19311  0E4C  085D               	movf	??_vfpfcnvrt+2,w
 19312  0E4D  0021               	movlb	1	; select bank1
 19313  0E4E  00B2               	movwf	vfpfcnvrt@c^(0+128)
 19314                           
 19315                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
 19316  0E4F  0020               	movlb	0	; select bank0
 19317  0E50  0859               	movf	vfpfcnvrt@fmt,w
 19318  0E51  0086               	movwf	6
 19319  0E52  0187               	clrf	7
 19320  0E53  3002               	movlw	2
 19321  0E54  0781               	addwf	1,f
 19322  0E55  3141               	addfsr 1,1
 19323  0E56  1803               	skipnc
 19324  0E57  0A81               	incf	1,f
 19325                           
 19326                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 19327  0E58  085A               	movf	vfpfcnvrt@ap,w
 19328  0E59  0086               	movwf	6
 19329  0E5A  0187               	clrf	7
 19330  0E5B  0801               	movf	1,w
 19331  0E5C  0084               	movwf	4
 19332  0E5D  0185               	clrf	5
 19333  0E5E  3002               	movlw	2
 19334  0E5F  0781               	addwf	1,f
 19335  0E60  3F00               	moviw [0]fsr0
 19336  0E61  0021               	movlb	1	; select bank1
 19337  0E62  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 19338  0E63  3F01               	moviw [1]fsr0
 19339  0E64  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 19340  0E65  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 19341  0E66  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 19342  0E67  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 19343  0E68  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 19344  0E69  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 19345  0E6A  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 19346                           
 19347                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1269:      
      +                                 return xtoa(fp, llu, c);
 19348  0E6B  0020               	movlb	0	; select bank0
 19349  0E6C  0858               	movf	vfpfcnvrt@fp+1,w
 19350  0E6D  00B1               	movwf	xtoa@fp+1
 19351  0E6E  0857               	movf	vfpfcnvrt@fp,w
 19352  0E6F  00B0               	movwf	xtoa@fp
 19353  0E70  0021               	movlb	1	; select bank1
 19354  0E71  0833               	movf	vfpfcnvrt@llu^(0+128),w
 19355  0E72  0020               	movlb	0	; select bank0
 19356  0E73  00B2               	movwf	xtoa@d
 19357  0E74  0021               	movlb	1	; select bank1
 19358  0E75  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 19359  0E76  0020               	movlb	0	; select bank0
 19360  0E77  00B3               	movwf	xtoa@d+1
 19361  0E78  0021               	movlb	1	; select bank1
 19362  0E79  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 19363  0E7A  0020               	movlb	0	; select bank0
 19364  0E7B  00B4               	movwf	xtoa@d+2
 19365  0E7C  0021               	movlb	1	; select bank1
 19366  0E7D  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 19367  0E7E  0020               	movlb	0	; select bank0
 19368  0E7F  00B5               	movwf	xtoa@d+3
 19369  0E80  0021               	movlb	1	; select bank1
 19370  0E81  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 19371  0E82  0020               	movlb	0	; select bank0
 19372  0E83  00B6               	movwf	xtoa@d+4
 19373  0E84  0021               	movlb	1	; select bank1
 19374  0E85  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 19375  0E86  0020               	movlb	0	; select bank0
 19376  0E87  00B7               	movwf	xtoa@d+5
 19377  0E88  0021               	movlb	1	; select bank1
 19378  0E89  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 19379  0E8A  0020               	movlb	0	; select bank0
 19380  0E8B  00B8               	movwf	xtoa@d+6
 19381  0E8C  0021               	movlb	1	; select bank1
 19382  0E8D  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 19383  0E8E  0020               	movlb	0	; select bank0
 19384  0E8F  00B9               	movwf	xtoa@d+7
 19385  0E90  0021               	movlb	1	; select bank1
 19386  0E91  0832               	movf	vfpfcnvrt@c^(0+128),w
 19387  0E92  0020               	movlb	0	; select bank0
 19388  0E93  00DB               	movwf	??_vfpfcnvrt
 19389  0E94  085B               	movf	??_vfpfcnvrt,w
 19390  0E95  00BA               	movwf	xtoa@x
 19391  0E96  3193  2384         	fcall	_xtoa
 19392  0E98  0020               	movlb	0	; select bank0
 19393  0E99  0831               	movf	?_xtoa+1,w
 19394  0E9A  00D8               	movwf	?_vfpfcnvrt+1
 19395  0E9B  0830               	movf	?_xtoa,w
 19396  0E9C  00D7               	movwf	?_vfpfcnvrt
 19397  0E9D  0008               	return
 19398  0E9E                     l6941:	
 19399                           
 19400                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 19401  0E9E  0020               	movlb	0	; select bank0
 19402  0E9F  0859               	movf	vfpfcnvrt@fmt,w
 19403  0EA0  0086               	movwf	6
 19404  0EA1  0187               	clrf	7
 19405  0EA2  3F40               	moviw [0]fsr1
 19406  0EA3  00DB               	movwf	??_vfpfcnvrt
 19407  0EA4  3F41               	moviw [1]fsr1
 19408  0EA5  00DC               	movwf	??_vfpfcnvrt+1
 19409  0EA6  085B               	movf	??_vfpfcnvrt,w
 19410  0EA7  0084               	movwf	4
 19411  0EA8  085C               	movf	??_vfpfcnvrt+1,w
 19412  0EA9  0085               	movwf	5
 19413  0EAA  0012               	moviw fsr0++
 19414  0EAB  3A78               	xorlw	120
 19415  0EAC  1903               	btfsc	3,2
 19416  0EAD  2EBD               	goto	l6945
 19417  0EAE  0859               	movf	vfpfcnvrt@fmt,w
 19418  0EAF  0086               	movwf	6
 19419  0EB0  0187               	clrf	7
 19420  0EB1  3F40               	moviw [0]fsr1
 19421  0EB2  00DB               	movwf	??_vfpfcnvrt
 19422  0EB3  3F41               	moviw [1]fsr1
 19423  0EB4  00DC               	movwf	??_vfpfcnvrt+1
 19424  0EB5  085B               	movf	??_vfpfcnvrt,w
 19425  0EB6  0084               	movwf	4
 19426  0EB7  085C               	movf	??_vfpfcnvrt+1,w
 19427  0EB8  0085               	movwf	5
 19428  0EB9  0012               	moviw fsr0++
 19429  0EBA  3A58               	xorlw	88
 19430  0EBB  1D03               	btfss	3,2
 19431  0EBC  2F1C               	goto	l6955
 19432  0EBD                     l6945:	
 19433                           
 19434                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 19435  0EBD  0859               	movf	vfpfcnvrt@fmt,w
 19436  0EBE  0086               	movwf	6
 19437  0EBF  0187               	clrf	7
 19438  0EC0  3F40               	moviw [0]fsr1
 19439  0EC1  00DB               	movwf	??_vfpfcnvrt
 19440  0EC2  3F41               	moviw [1]fsr1
 19441  0EC3  00DC               	movwf	??_vfpfcnvrt+1
 19442  0EC4  085B               	movf	??_vfpfcnvrt,w
 19443  0EC5  0084               	movwf	4
 19444  0EC6  085C               	movf	??_vfpfcnvrt+1,w
 19445  0EC7  0085               	movwf	5
 19446  0EC8  0800               	movf	0,w	;code access
 19447  0EC9  00DD               	movwf	??_vfpfcnvrt+2
 19448  0ECA  085D               	movf	??_vfpfcnvrt+2,w
 19449  0ECB  0021               	movlb	1	; select bank1
 19450  0ECC  00B2               	movwf	vfpfcnvrt@c^(0+128)
 19451                           
 19452                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 19453  0ECD  0020               	movlb	0	; select bank0
 19454  0ECE  0859               	movf	vfpfcnvrt@fmt,w
 19455  0ECF  0086               	movwf	6
 19456  0ED0  0187               	clrf	7
 19457  0ED1  3001               	movlw	1
 19458  0ED2  0781               	addwf	1,f
 19459  0ED3  3141               	addfsr 1,1
 19460  0ED4  1803               	skipnc
 19461  0ED5  0A81               	incf	1,f
 19462                           
 19463                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 19464  0ED6  085A               	movf	vfpfcnvrt@ap,w
 19465  0ED7  0086               	movwf	6
 19466  0ED8  0187               	clrf	7
 19467  0ED9  0801               	movf	1,w
 19468  0EDA  0084               	movwf	4
 19469  0EDB  0185               	clrf	5
 19470  0EDC  3002               	movlw	2
 19471  0EDD  0781               	addwf	1,f
 19472  0EDE  3F00               	moviw [0]fsr0
 19473  0EDF  0021               	movlb	1	; select bank1
 19474  0EE0  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 19475  0EE1  3F01               	moviw [1]fsr0
 19476  0EE2  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 19477  0EE3  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 19478  0EE4  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 19479  0EE5  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 19480  0EE6  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 19481  0EE7  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 19482  0EE8  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 19483                           
 19484                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 19485  0EE9  0020               	movlb	0	; select bank0
 19486  0EEA  0858               	movf	vfpfcnvrt@fp+1,w
 19487  0EEB  00B1               	movwf	xtoa@fp+1
 19488  0EEC  0857               	movf	vfpfcnvrt@fp,w
 19489  0EED  00B0               	movwf	xtoa@fp
 19490  0EEE  0021               	movlb	1	; select bank1
 19491  0EEF  0833               	movf	vfpfcnvrt@llu^(0+128),w
 19492  0EF0  0020               	movlb	0	; select bank0
 19493  0EF1  00B2               	movwf	xtoa@d
 19494  0EF2  0021               	movlb	1	; select bank1
 19495  0EF3  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 19496  0EF4  0020               	movlb	0	; select bank0
 19497  0EF5  00B3               	movwf	xtoa@d+1
 19498  0EF6  0021               	movlb	1	; select bank1
 19499  0EF7  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 19500  0EF8  0020               	movlb	0	; select bank0
 19501  0EF9  00B4               	movwf	xtoa@d+2
 19502  0EFA  0021               	movlb	1	; select bank1
 19503  0EFB  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 19504  0EFC  0020               	movlb	0	; select bank0
 19505  0EFD  00B5               	movwf	xtoa@d+3
 19506  0EFE  0021               	movlb	1	; select bank1
 19507  0EFF  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 19508  0F00  0020               	movlb	0	; select bank0
 19509  0F01  00B6               	movwf	xtoa@d+4
 19510  0F02  0021               	movlb	1	; select bank1
 19511  0F03  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 19512  0F04  0020               	movlb	0	; select bank0
 19513  0F05  00B7               	movwf	xtoa@d+5
 19514  0F06  0021               	movlb	1	; select bank1
 19515  0F07  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 19516  0F08  0020               	movlb	0	; select bank0
 19517  0F09  00B8               	movwf	xtoa@d+6
 19518  0F0A  0021               	movlb	1	; select bank1
 19519  0F0B  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 19520  0F0C  0020               	movlb	0	; select bank0
 19521  0F0D  00B9               	movwf	xtoa@d+7
 19522  0F0E  0021               	movlb	1	; select bank1
 19523  0F0F  0832               	movf	vfpfcnvrt@c^(0+128),w
 19524  0F10  0020               	movlb	0	; select bank0
 19525  0F11  00DB               	movwf	??_vfpfcnvrt
 19526  0F12  085B               	movf	??_vfpfcnvrt,w
 19527  0F13  00BA               	movwf	xtoa@x
 19528  0F14  3193  2384         	fcall	_xtoa
 19529  0F16  0020               	movlb	0	; select bank0
 19530  0F17  0831               	movf	?_xtoa+1,w
 19531  0F18  00D8               	movwf	?_vfpfcnvrt+1
 19532  0F19  0830               	movf	?_xtoa,w
 19533  0F1A  00D7               	movwf	?_vfpfcnvrt
 19534  0F1B  0008               	return
 19535  0F1C                     l6955:	
 19536                           
 19537                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
 19538  0F1C  0859               	movf	vfpfcnvrt@fmt,w
 19539  0F1D  0086               	movwf	6
 19540  0F1E  0187               	clrf	7
 19541  0F1F  3F40               	moviw [0]fsr1
 19542  0F20  00F1               	movwf	strncmp@_l
 19543  0F21  3F41               	moviw [1]fsr1
 19544  0F22  00F2               	movwf	strncmp@_l+1
 19545  0F23  3092               	movlw	low (STR_108| (0+32768))
 19546  0F24  00F3               	movwf	strncmp@_r
 19547  0F25  30B1               	movlw	high (STR_108| (0+32768))
 19548  0F26  00F4               	movwf	strncmp@_r+1
 19549  0F27  3002               	movlw	2
 19550  0F28  00F5               	movwf	strncmp@n
 19551  0F29  3000               	movlw	0
 19552  0F2A  00F6               	movwf	strncmp@n+1
 19553  0F2B  31A2  220C  3188   	fcall	_strncmp
 19554  0F2E  0871               	movf	?_strncmp,w
 19555  0F2F  0472               	iorwf	?_strncmp+1,w
 19556  0F30  1903               	btfsc	3,2
 19557  0F31  2F49               	goto	l6959
 19558  0F32  0020               	movlb	0	; select bank0
 19559  0F33  0859               	movf	vfpfcnvrt@fmt,w
 19560  0F34  0086               	movwf	6
 19561  0F35  0187               	clrf	7
 19562  0F36  3F40               	moviw [0]fsr1
 19563  0F37  00F1               	movwf	strncmp@_l
 19564  0F38  3F41               	moviw [1]fsr1
 19565  0F39  00F2               	movwf	strncmp@_l+1
 19566  0F3A  3080               	movlw	low (STR_112| (0+32768))
 19567  0F3B  00F3               	movwf	strncmp@_r
 19568  0F3C  30B1               	movlw	high (STR_112| (0+32768))
 19569  0F3D  00F4               	movwf	strncmp@_r+1
 19570  0F3E  3002               	movlw	2
 19571  0F3F  00F5               	movwf	strncmp@n
 19572  0F40  3000               	movlw	0
 19573  0F41  00F6               	movwf	strncmp@n+1
 19574  0F42  31A2  220C  3188   	fcall	_strncmp
 19575  0F45  0871               	movf	?_strncmp,w
 19576  0F46  0472               	iorwf	?_strncmp+1,w
 19577  0F47  1D03               	btfss	3,2
 19578  0F48  2FAC               	goto	l6969
 19579  0F49                     l6959:	
 19580                           
 19581                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
 19582  0F49  0020               	movlb	0	; select bank0
 19583  0F4A  0859               	movf	vfpfcnvrt@fmt,w
 19584  0F4B  0086               	movwf	6
 19585  0F4C  0187               	clrf	7
 19586  0F4D  3F40               	moviw [0]fsr1
 19587  0F4E  00DB               	movwf	??_vfpfcnvrt
 19588  0F4F  3F41               	moviw [1]fsr1
 19589  0F50  00DC               	movwf	??_vfpfcnvrt+1
 19590  0F51  3001               	movlw	1
 19591  0F52  075B               	addwf	??_vfpfcnvrt,w
 19592  0F53  0084               	movwf	4
 19593  0F54  085C               	movf	??_vfpfcnvrt+1,w
 19594  0F55  1803               	skipnc
 19595  0F56  0A5C               	incf	??_vfpfcnvrt+1,w
 19596  0F57  0085               	movwf	5
 19597  0F58  0800               	movf	0,w	;code access
 19598  0F59  00DD               	movwf	??_vfpfcnvrt+2
 19599  0F5A  085D               	movf	??_vfpfcnvrt+2,w
 19600  0F5B  0021               	movlb	1	; select bank1
 19601  0F5C  00B2               	movwf	vfpfcnvrt@c^(0+128)
 19602                           
 19603                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
 19604  0F5D  0020               	movlb	0	; select bank0
 19605  0F5E  0859               	movf	vfpfcnvrt@fmt,w
 19606  0F5F  0086               	movwf	6
 19607  0F60  0187               	clrf	7
 19608  0F61  3002               	movlw	2
 19609  0F62  0781               	addwf	1,f
 19610  0F63  3141               	addfsr 1,1
 19611  0F64  1803               	skipnc
 19612  0F65  0A81               	incf	1,f
 19613                           
 19614                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 19615  0F66  085A               	movf	vfpfcnvrt@ap,w
 19616  0F67  0086               	movwf	6
 19617  0F68  0187               	clrf	7
 19618  0F69  0801               	movf	1,w
 19619  0F6A  0084               	movwf	4
 19620  0F6B  0185               	clrf	5
 19621  0F6C  3002               	movlw	2
 19622  0F6D  0781               	addwf	1,f
 19623  0F6E  3F00               	moviw [0]fsr0
 19624  0F6F  0021               	movlb	1	; select bank1
 19625  0F70  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 19626  0F71  3F01               	moviw [1]fsr0
 19627  0F72  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 19628  0F73  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 19629  0F74  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 19630  0F75  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 19631  0F76  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 19632  0F77  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 19633  0F78  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 19634                           
 19635                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1344:      
      +                                 return xtoa(fp, llu, c);
 19636  0F79  0020               	movlb	0	; select bank0
 19637  0F7A  0858               	movf	vfpfcnvrt@fp+1,w
 19638  0F7B  00B1               	movwf	xtoa@fp+1
 19639  0F7C  0857               	movf	vfpfcnvrt@fp,w
 19640  0F7D  00B0               	movwf	xtoa@fp
 19641  0F7E  0021               	movlb	1	; select bank1
 19642  0F7F  0833               	movf	vfpfcnvrt@llu^(0+128),w
 19643  0F80  0020               	movlb	0	; select bank0
 19644  0F81  00B2               	movwf	xtoa@d
 19645  0F82  0021               	movlb	1	; select bank1
 19646  0F83  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 19647  0F84  0020               	movlb	0	; select bank0
 19648  0F85  00B3               	movwf	xtoa@d+1
 19649  0F86  0021               	movlb	1	; select bank1
 19650  0F87  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 19651  0F88  0020               	movlb	0	; select bank0
 19652  0F89  00B4               	movwf	xtoa@d+2
 19653  0F8A  0021               	movlb	1	; select bank1
 19654  0F8B  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 19655  0F8C  0020               	movlb	0	; select bank0
 19656  0F8D  00B5               	movwf	xtoa@d+3
 19657  0F8E  0021               	movlb	1	; select bank1
 19658  0F8F  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 19659  0F90  0020               	movlb	0	; select bank0
 19660  0F91  00B6               	movwf	xtoa@d+4
 19661  0F92  0021               	movlb	1	; select bank1
 19662  0F93  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 19663  0F94  0020               	movlb	0	; select bank0
 19664  0F95  00B7               	movwf	xtoa@d+5
 19665  0F96  0021               	movlb	1	; select bank1
 19666  0F97  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 19667  0F98  0020               	movlb	0	; select bank0
 19668  0F99  00B8               	movwf	xtoa@d+6
 19669  0F9A  0021               	movlb	1	; select bank1
 19670  0F9B  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 19671  0F9C  0020               	movlb	0	; select bank0
 19672  0F9D  00B9               	movwf	xtoa@d+7
 19673  0F9E  0021               	movlb	1	; select bank1
 19674  0F9F  0832               	movf	vfpfcnvrt@c^(0+128),w
 19675  0FA0  0020               	movlb	0	; select bank0
 19676  0FA1  00DB               	movwf	??_vfpfcnvrt
 19677  0FA2  085B               	movf	??_vfpfcnvrt,w
 19678  0FA3  00BA               	movwf	xtoa@x
 19679  0FA4  3193  2384         	fcall	_xtoa
 19680  0FA6  0020               	movlb	0	; select bank0
 19681  0FA7  0831               	movf	?_xtoa+1,w
 19682  0FA8  00D8               	movwf	?_vfpfcnvrt+1
 19683  0FA9  0830               	movf	?_xtoa,w
 19684  0FAA  00D7               	movwf	?_vfpfcnvrt
 19685  0FAB  0008               	return
 19686  0FAC                     l6969:	
 19687                           
 19688                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 19689  0FAC  0020               	movlb	0	; select bank0
 19690  0FAD  0859               	movf	vfpfcnvrt@fmt,w
 19691  0FAE  0086               	movwf	6
 19692  0FAF  0187               	clrf	7
 19693  0FB0  3F40               	moviw [0]fsr1
 19694  0FB1  00DB               	movwf	??_vfpfcnvrt
 19695  0FB2  3F41               	moviw [1]fsr1
 19696  0FB3  00DC               	movwf	??_vfpfcnvrt+1
 19697  0FB4  085B               	movf	??_vfpfcnvrt,w
 19698  0FB5  0084               	movwf	4
 19699  0FB6  085C               	movf	??_vfpfcnvrt+1,w
 19700  0FB7  0085               	movwf	5
 19701  0FB8  0012               	moviw fsr0++
 19702  0FB9  3A25               	xorlw	37
 19703  0FBA  1D03               	btfss	3,2
 19704  0FBB  2FD4               	goto	l6979
 19705                           
 19706                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 19707  0FBC  0859               	movf	vfpfcnvrt@fmt,w
 19708  0FBD  0086               	movwf	6
 19709  0FBE  0187               	clrf	7
 19710  0FBF  3001               	movlw	1
 19711  0FC0  0781               	addwf	1,f
 19712  0FC1  3141               	addfsr 1,1
 19713  0FC2  1803               	skipnc
 19714  0FC3  0A81               	incf	1,f
 19715                           
 19716                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 19717  0FC4  3025               	movlw	37
 19718  0FC5  00F1               	movwf	fputc@c
 19719  0FC6  3000               	movlw	0
 19720  0FC7  00F2               	movwf	fputc@c+1
 19721  0FC8  0858               	movf	vfpfcnvrt@fp+1,w
 19722  0FC9  00F4               	movwf	fputc@fp+1
 19723  0FCA  0857               	movf	vfpfcnvrt@fp,w
 19724  0FCB  00F3               	movwf	fputc@fp
 19725  0FCC  31A2  225E         	fcall	_fputc
 19726  0FCE                     l6975:	
 19727                           
 19728                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 19729  0FCE  3001               	movlw	1
 19730  0FCF  0020               	movlb	0	; select bank0
 19731  0FD0  00D7               	movwf	?_vfpfcnvrt
 19732  0FD1  3000               	movlw	0
 19733  0FD2  00D8               	movwf	?_vfpfcnvrt+1
 19734  0FD3  0008               	return
 19735  0FD4                     l6979:	
 19736                           
 19737                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 19738  0FD4  0859               	movf	vfpfcnvrt@fmt,w
 19739  0FD5  0086               	movwf	6
 19740  0FD6  0187               	clrf	7
 19741  0FD7  3001               	movlw	1
 19742  0FD8  0781               	addwf	1,f
 19743  0FD9  3141               	addfsr 1,1
 19744  0FDA  1803               	skipnc
 19745  0FDB  0A81               	incf	1,f
 19746  0FDC  2B32               	goto	l6813
 19747  0FDD                     l6985:	
 19748                           
 19749                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 19750  0FDD  0859               	movf	vfpfcnvrt@fmt,w
 19751  0FDE  0086               	movwf	6
 19752  0FDF  0187               	clrf	7
 19753  0FE0  3F40               	moviw [0]fsr1
 19754  0FE1  00DB               	movwf	??_vfpfcnvrt
 19755  0FE2  3F41               	moviw [1]fsr1
 19756  0FE3  00DC               	movwf	??_vfpfcnvrt+1
 19757  0FE4  085B               	movf	??_vfpfcnvrt,w
 19758  0FE5  0084               	movwf	4
 19759  0FE6  085C               	movf	??_vfpfcnvrt+1,w
 19760  0FE7  0085               	movwf	5
 19761  0FE8  0800               	movf	0,w	;code access
 19762  0FE9  00DD               	movwf	??_vfpfcnvrt+2
 19763  0FEA  01DE               	clrf	??_vfpfcnvrt+3
 19764  0FEB  085D               	movf	??_vfpfcnvrt+2,w
 19765  0FEC  00F1               	movwf	fputc@c
 19766  0FED  085E               	movf	??_vfpfcnvrt+3,w
 19767  0FEE  00F2               	movwf	fputc@c+1
 19768  0FEF  0858               	movf	vfpfcnvrt@fp+1,w
 19769  0FF0  00F4               	movwf	fputc@fp+1
 19770  0FF1  0857               	movf	vfpfcnvrt@fp,w
 19771  0FF2  00F3               	movwf	fputc@fp
 19772  0FF3  31A2  225E  3188   	fcall	_fputc
 19773                           
 19774                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 19775  0FF6  0020               	movlb	0	; select bank0
 19776  0FF7  0859               	movf	vfpfcnvrt@fmt,w
 19777  0FF8  0086               	movwf	6
 19778  0FF9  0187               	clrf	7
 19779  0FFA  3001               	movlw	1
 19780  0FFB  0781               	addwf	1,f
 19781  0FFC  3141               	addfsr 1,1
 19782  0FFD  1803               	skipnc
 19783  0FFE  0A81               	incf	1,f
 19784  0FFF  2FCE               	goto	l6975
 19785  1000                     __end_of_vfpfcnvrt:	


Data Sizes:
    Strings     402
    Constant    114
    Data        9
    BSS         100
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     80      80
    BANK1            80     77      80
    BANK2            80      0      73
    BANK3            80      0      32
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           65      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    vsnprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_16(CODE[18]), STR_15(CODE[18]), STR_14(CODE[19]), STR_13(CODE[20]), 
		 -> STR_12(CODE[20]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[22]), STR_7(CODE[22]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_2(CODE[22]), STR_1(CODE[71]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_114(CODE[3]), STR_110(CODE[3]), STR_105(CODE[3]), STR_101(CODE[3]), 
		 -> STR_96(CODE[4]), STR_92(CODE[4]), STR_87(CODE[3]), STR_82(CODE[3]), 
		 -> STR_77(CODE[4]), STR_72(CODE[3]), STR_67(CODE[3]), STR_62(CODE[4]), 
		 -> STR_57(CODE[3]), STR_52(CODE[3]), STR_47(CODE[4]), STR_42(CODE[3]), 
		 -> STR_38(CODE[3]), STR_33(CODE[3]), STR_29(CODE[3]), STR_24(CODE[4]), 
		 -> STR_20(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_114(CODE[3]), STR_110(CODE[3]), STR_105(CODE[3]), STR_101(CODE[3]), 
		 -> STR_96(CODE[4]), STR_92(CODE[4]), STR_87(CODE[3]), STR_82(CODE[3]), 
		 -> STR_77(CODE[4]), STR_72(CODE[3]), STR_67(CODE[3]), STR_62(CODE[4]), 
		 -> STR_57(CODE[3]), STR_52(CODE[3]), STR_47(CODE[4]), STR_42(CODE[3]), 
		 -> STR_38(CODE[3]), STR_33(CODE[3]), STR_29(CODE[3]), STR_24(CODE[4]), 
		 -> STR_20(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_16(CODE[18]), STR_15(CODE[18]), STR_14(CODE[19]), STR_13(CODE[20]), 
		 -> STR_12(CODE[20]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[22]), STR_7(CODE[22]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_2(CODE[22]), STR_1(CODE[71]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_16(CODE[18]), STR_15(CODE[18]), STR_14(CODE[19]), STR_13(CODE[20]), 
		 -> STR_12(CODE[20]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[22]), STR_7(CODE[22]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_2(CODE[22]), STR_1(CODE[71]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK3[32]), thermistorBetaValue(BANK2[2]), 
		 -> adcGain(BANK2[2]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK3[32]), thermistorBetaValue(BANK2[2]), 
		 -> adcGain(BANK2[2]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_16(CODE[18]), STR_15(CODE[18]), STR_14(CODE[19]), STR_13(CODE[20]), 
		 -> STR_12(CODE[20]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[22]), STR_7(CODE[22]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_2(CODE[22]), STR_1(CODE[71]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    snprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_snprintf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    S1723_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_16(CODE[18]), STR_15(CODE[18]), STR_14(CODE[19]), STR_13(CODE[20]), 
		 -> STR_12(CODE[20]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[22]), STR_7(CODE[22]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_2(CODE[22]), STR_1(CODE[71]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_16(CODE[18]), STR_15(CODE[18]), STR_14(CODE[19]), STR_13(CODE[20]), 
		 -> STR_12(CODE[20]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[22]), STR_7(CODE[22]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_2(CODE[22]), STR_1(CODE[71]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 71
		 -> STR_16(CODE[18]), STR_15(CODE[18]), STR_14(CODE[19]), STR_13(CODE[20]), 
		 -> STR_12(CODE[20]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[22]), STR_7(CODE[22]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_2(CODE[22]), STR_1(CODE[71]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), thermistorBetaValue(BANK2[2]), adcGain(BANK2[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), thermistorBetaValue(BANK2[2]), adcGain(BANK2[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), thermistorBetaValue(BANK2[2]), adcGain(BANK2[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), thermistorBetaValue(BANK2[2]), adcGain(BANK2[2]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    EUSART_Write_Text@text	PTR unsigned char  size(2) Largest target is 127
		 -> STR_17(CODE[3]), STR_4(CODE[3]), STR_3(CODE[38]), messageBuffer(BIGRAM[127]), 


Critical Paths under _main in COMMON

    _main->_EUSART_Initialize
    _watchdog_timeout_shutdown->_RGB_color
    _vfpfcnvrt->_stoa
    _vfpfcnvrt->_strncmp
    _toupper->_islower
    _stoa->_fputc
    _dtoa->___aodiv
    _abs->___aomod
    _pad->_fputs
    _fputs->_fputc
    _atoi->___wmul
    _atoi->_isdigit
    _EUSART_Write_Text->_EUSART_Write
    _setTemperatureLimitsint->___wmul
    _setShortCircuitProtection->_I2C_writeRegister
    _setOverCurrentDischargeProtection->_I2C_writeRegister
    _setCellUndervoltageProtection->_I2C_writeRegister
    _setCellUndervoltageProtection->_readRegister
    _setCellOvervoltageProtection->_I2C_writeRegister
    _setCellOvervoltageProtection->_readRegister
    _beginAFEcommunication->_I2C_writeRegister
    _beginAFEcommunication->_readRegister
    _RGB_AWAIT_AFE_CONN->_RGB_color
    _AFE_UPDATE->_enableCharging
    _AFE_UPDATE->_enableDischarging
    _updateVoltages->___fltol
    ___flmul->__Umul8_16
    _enableDischarging->_I2C_writeRegister
    _enableDischarging->_readRegister
    _enableCharging->_I2C_writeRegister
    _enableCharging->_readRegister
    _readRegister->_read_I2C_data
    _readRegister->_send_I2C_controlByte
    _I2C_writeRegister->_send_I2C_controlByte
    _EUSART_Initialize->___aldiv
    ___aldiv->___lmul

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    _printcellParameters->_snprintf
    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _utoa->___lodiv
    _utoa->___lomod
    _utoa->_pad
    _otoa->_pad
    _dtoa->___aodiv
    _dtoa->___aomod
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _init_AFE->_setOverCurrentDischargeProtection
    _init_AFE->_setShortCircuitProtection
    _setShortCircuitProtection->___flge
    _setOverCurrentDischargeProtection->___flge
    ___flge->___fldiv
    _setCellUndervoltageProtection->___aldiv
    _setCellOvervoltageProtection->___aldiv
    _updateVoltages->___fladd
    ___fltol->___fladd
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___fladd->___fldiv
    _EUSART_Initialize->___aldiv
    ___aldiv->___lmul

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_statemachine
    _printcellParameters->_snprintf
    _snprintf->_vsnprintf
    _vfprintf->_vfpfcnvrt
    _init_AFE->_setOverCurrentDischargeProtection
    _init_AFE->_setShortCircuitProtection
    _AFE_UPDATE->_updateVoltages
    _updateVoltages->___fltol

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _myIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _myIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _myIsr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _myIsr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _myIsr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _myIsr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _myIsr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _myIsr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _myIsr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _myIsr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _myIsr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _myIsr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _myIsr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  215961
                                             75 BANK1      2     2      0
                  _EUSART_Initialize
                          _initClock
                            _initWDT
                          _init_GPIO
                           _init_I2C
                           _init_RGB
                          _init_TMR1
                       _statemachine
          _watchdog_timeout_shutdown
 ---------------------------------------------------------------------------------
 (1) _watchdog_timeout_shutdown                            2     2      0     481
                                              3 COMMON     2     2      0
                          _RGB_color
                       _shutdown_BMS
 ---------------------------------------------------------------------------------
 (2) _shutdown_BMS                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _statemachine                                         3     3      0  213102
                                             72 BANK1      3     3      0
                         _AFE_UPDATE
                 _RGB_AWAIT_AFE_CONN
                          _RGB_color
              _beginAFEcommunication
                           _init_AFE
                _printcellParameters
 ---------------------------------------------------------------------------------
 (2) _printcellParameters                                  0     0      0   69685
                  _EUSART_Write_Text
                       _readRegister
                           _snprintf
 ---------------------------------------------------------------------------------
 (3) _snprintf                                            32     4     28   59944
                                             76 BANK0      4     4      0
                                             44 BANK1     28     0     28
                       _readRegister (ARG)
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (4) _vsnprintf                                           19    12      7   55877
                                             74 BANK0      2     2      0
                                             27 BANK1     17    10      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             9     4      5   54840
                                             65 BANK0      9     4      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           46    42      4   54065
                                             55 BANK0     10     6      4
                                              0 BANK1     27    27      0
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                39    28     11    8379
                                             16 BANK0     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              8     6      2     512
                                              7 COMMON     4     2      2
                                              0 BANK0      4     4      0
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              6     4      2     191
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (8) _isupper                                              6     4      2     191
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              8     6      2     191
                                              1 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (7) _utoa                                                25    15     10    7240
                                             16 BANK0     25    15     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (8) ___lomod                                             18     2     16     412
                                              1 COMMON     2     2      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (8) ___lodiv                                             26    10     16     421
                                              1 COMMON    10    10      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             11     5      6    5995
                                              1 COMMON    11     5      6
 ---------------------------------------------------------------------------------
 (7) _stoa                                                23    19      4    2613
                                             10 COMMON     2     2      0
                                              0 BANK0     21    17      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _otoa                                                34    24     10    6512
                                             16 BANK0     34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                31    21     10    8094
                                             16 BANK0     31    21     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  4     2      2     183
                                              4 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             19     3     16     613
                                              1 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             27    11     16     625
                                              1 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 8     5      3    5624
                                             16 BANK0      6     3      3
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 10     5      5    5364
                                              6 BANK0     10     5      5
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2     210
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (9) _fputs                                                8     6      2    1969
                                             10 COMMON     2     0      2
                                              0 BANK0      6     6      0
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               9     5      4    1577
                                              1 COMMON     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _atoi                                                15    13      2    2319
                                              7 COMMON     2     0      2
                                              0 BANK0     13    13      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              5     3      2     259
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              6     4      2     371
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write_Text                                    5     3      2    1691
                                              2 COMMON     5     3      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _init_AFE                                             0     0      0   72850
       _setCellOvervoltageProtection
      _setCellUndervoltageProtection
  _setOverCurrentDischargeProtection
          _setShortCircuitProtection
              _setShuntResistorValue
            _setTemperatureLimitsint
 ---------------------------------------------------------------------------------
 (3) _setTemperatureLimitsint                              8     0      8    1520
                                              0 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4    1036
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _setShuntResistorValue                                4     0      4     121
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) _setShortCircuitProtection                           21    15      6   18876
                                             70 BANK0      9     3      6
                                              0 BANK1     12    12      0
                  _I2C_writeRegister
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _setOverCurrentDischargeProtection                   21    15      6   18876
                                             70 BANK0      9     3      6
                                              0 BANK1     12    12      0
                  _I2C_writeRegister
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8     626
                                             58 BANK0     12     4      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _setCellUndervoltageProtection                       21    17      4   16730
                                             18 BANK0     21    17      4
                  _I2C_writeRegister
                            ___aldiv
                             ___lmul
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _setCellOvervoltageProtection                        21    17      4   16727
                                             18 BANK0     21    17      4
                  _I2C_writeRegister
                            ___aldiv
                             ___lmul
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _beginAFEcommunication                               15    13      2   12962
                                              0 BANK0     15    13      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _RGB_AWAIT_AFE_CONN                                   1     1      0     481
                                              3 COMMON     1     1      0
                          _RGB_color
 ---------------------------------------------------------------------------------
 (2) _RGB_color                                            2     0      2     481
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _AFE_UPDATE                                           0     0      0   56609
                     _enableCharging
                  _enableDischarging
                     _updateVoltages
 ---------------------------------------------------------------------------------
 (3) _updateVoltages                                      11    11      0   30585
                                              9 BANK1     11    11      0
                            ___aldiv
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                             ___lmul
                           ___xxtofl
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1900
                                              1 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8    1396
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             11     7      4     967
                                             10 COMMON     2     2      0
                                              0 BANK1      9     5      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    7077
                                              6 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     980
                                              1 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             26    18      8    3927
                                             32 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    4962
                                             58 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _enableDischarging                                    5     3      2   13012
                                             11 COMMON     1     1      0
                                              0 BANK0      4     2      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _enableCharging                                       5     3      2   13012
                                             11 COMMON     1     1      0
                                              0 BANK0      4     2      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _readRegister                                         6     2      4    8050
                                              5 COMMON     6     2      4
                      _read_I2C_data
                      _send_I2C_NACK
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (4) _send_I2C_NACK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _read_I2C_data                                        4     2      2       0
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (4) _I2C_writeRegister                                    6     0      6    4776
                                              5 COMMON     6     0      6
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (4) _send_I2C_stopBit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _send_I2C_startBit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _send_I2C_data                                        2     0      2     301
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _send_I2C_controlByte                                 4     0      4     602
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _init_TMR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_RGB                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_I2C                                             1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_GPIO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initWDT                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initClock                                            0     0      0       0
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Initialize                                   18    14      4    2378
                                             10 COMMON     2     2      0
                                             18 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8    2065
                                              9 COMMON     1     1      0
                                              4 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _myIsr                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Initialize
     ___aldiv
       ___lmul (ARG)
   _initClock
     _internal_16
   _initWDT
   _init_GPIO
   _init_I2C
   _init_RGB
   _init_TMR1
   _statemachine
     _AFE_UPDATE
       _enableCharging
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _enableDischarging
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _updateVoltages
         ___aldiv
           ___lmul (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___lmul
         ___xxtofl
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
     _RGB_AWAIT_AFE_CONN
       _RGB_color
     _RGB_color
     _beginAFEcommunication
       _I2C_writeRegister
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _readRegister
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
     _init_AFE
       _setCellOvervoltageProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _setCellUndervoltageProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _setOverCurrentDischargeProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
       _setShortCircuitProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
       _setShuntResistorValue
       _setTemperatureLimitsint
         ___wmul
     _printcellParameters
       _EUSART_Write_Text
         _EUSART_Write
       _readRegister
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _snprintf
         _readRegister (ARG)
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         _vsnprintf (ARG)
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _fputc
                 _putch
               _isdigit
               _otoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _stoa
                 _fputc
                   _putch
                 _strlen
               _strncmp
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _toupper
                   _islower
   _watchdog_timeout_shutdown
     _RGB_color
     _shutdown_BMS

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4D      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      49       9       91.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      20      11       40.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     116      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     116      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              41      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Feb 26 22:48:06 2020

          __end_of_setShortCircuitProtection 122F                               _maxCellVoltage 014A  
                      __end_of_send_I2C_data 2E10                                 ___fldiv@aexp 0059  
                               ___fldiv@bexp 0058                               _updateVoltages 0062  
                               ___fldiv@sign 0051                                  __CFG_CP$OFF 0000  
                               _shutdown_BMS 1000                          ___wmul@multiplicand 0073  
                      _setShuntResistorValue 2E1A                          __Umul8_16@word_mpld 0077  
                                        l303 2DFA                                          l315 2005  
                                        l340 2FC8                                          l341 2FDD  
                                        l238 0801                                          l159 2364  
                    enableDischarging@enable 0020                                          l273 2E0C  
                                        l337 2FBE                                          l434 07F1  
                                        l291 2DF2                                          l339 2FC3  
                                        l285 2E16                                          l279 2E4F  
                                        l632 21D1                                          l704 198A  
                                        l712 1C45                                          l635 21F1  
                                        l731 13A8                                          l652 1298  
                                        l716 1C61                                          l653 12AC  
                                        l647 1274                                          l727 138C  
                                        l840 2F19                                          l656 1342  
                                        l648 127C                                          l752 14AB  
                                        l905 25BA                                          l673 1E1B  
                                        l761 1680                                          l763 168C  
                                        l940 1E01                                          l684 1ED7  
                                        l764 168F                                          l677 1E37  
                                        l765 1692                                          l678 1ECC  
                                        l766 1695                                          l695 192F  
                                        l768 16C8                                          l953 1C2B  
                                        _Lg1 3158                                          _Lg2 3154  
                                        _Lg3 3150                                          _Lg4 314C  
                        __size_of_AFE_UPDATE 0011                                          _abs 2E9A  
                             RGB_color@color 0071                                          _pad 21BB  
                               __CFG_BORV$LO 0000                                          wreg 0009  
                               __CFG_IESO$ON 0000                                 ___flmul@aexp 0034  
                               ___flmul@bexp 0039       setCellOvervoltageProtection@voltage_mV 0032  
    setCellUndervoltageProtection@voltage_mV 0032                                 ___flmul@sign 0033  
                               ___flmul@temp 003E                                 ___flmul@prod 003A  
                               _statemachine 2308                                 __CFG_LVP$OFF 0000  
                               ___fltol@exp1 007B                                         l1021 249D  
                                       l1041 23AF                                         l1018 244F  
                                       ?_abs 0074                                         l1141 05AE  
                                       l1221 1654                                         l1145 0641  
                                       l1073 251B                                         l1162 06C4  
                                       l1218 162F                                         l1147 0624  
                                       l1219 1647                                         l1315 27C8  
                                       l1083 2423                                         l1183 073B  
                                       l1175 0723                                         l1249 0554  
                                       l1281 267F                                         l1442 2FAE  
                                       l1275 2649                                         l1197 1528  
                                       l1288 2693                                         l1289 269D  
                                       l6103 202F                                         l6111 2E93  
                                       l6123 21C7                                         l6203 1D8C  
                                       l6109 2E87                                         l6133 21D3  
                                       l6213 1DD4                                         l6205 1D9B  
                                       ?_pad 0026                                         l6127 21CF  
                                       l6303 205E                                         l6215 1DE0  
                                       l7023 208A                                         l7121 2614  
                                       l8001 18DA                                         l7033 2FA8  
                                       l6137 21FD                                         l6305 2067  
                                       l6225 1B8B                                         l7025 20AA  
                                       l7107 25DB                                         l7203 057E  
                                       l6091 2291                                         l6243 1BFE  
                                       l6331 12A7                                         l6411 1EF0  
                                       l7125 2622                                         l7117 2609  
                                       l7109 25E9                                         l7205 0586  
                                       l6085 2266                                         l6237 1BBF  
                                       l6245 1C0A                                         l6229 1BB2  
                                       l6325 1290                                         l6261 24D6  
                                       l7223 05A3                                         l7151 236F  
                                       l7135 2469                                         l6087 226A  
                                       l6191 1D71                                         l6239 1BCE  
                                       l6335 12D9                                         l6423 1908  
                                       l7233 05B8                                         l7081 20C7  
                                       l6169 2F13                                         l6601 27FB  
                                       l6193 1D75                                         l6345 12B4  
                                       l6353 134E                                         l6441 1951  
                                       l6281 23E7                                         l6521 13EA  
                                       l6513 13B8                                         l7307 0672  
                                       l7227 05A6                                         l7171 239D  
                                       l7155 2378                                         l7139 2483  
                                       l6187 1D4A                                         l6363 1361  
                                       l6451 1961                                         l6443 195E  
                                       l6259 24C7                                         l6507 13A0  
                                       l8051 233B                                         l7333 06E3  
                                       l7325 06D6                                         l7317 06BC  
                                       l7341 06EC                                         l7413 151D  
                                       l7181 23BC                                         l7173 23AB  
                                       l7077 20BC                                         l6357 1356  
                                       l6461 19AC                                         l6437 1940  
                                       l6621 2246                                         l6269 250F  
                                       l6285 2417                                         l6517 13D0  
                                       l6701 179B                                         l8029 2309  
                                       l7351 06F7                                         l7271 062C  
                                       l7263 05F4                                         l6295 2F5B  
                                       l6367 136E                                         l6455 198E  
                                       l6623 2221                                         l6279 23D8  
                                       l6471 1C59                                         l8047 232B  
                                       l7273 062E                                         l7281 063C  
                                       l7513 1650                                         l7433 1553  
                                       l7417 1520                                         l6385 1E7E  
                                       l6377 1E2F                                         l6561 14C9  
                                       l6537 1438                                         l6545 147A  
                                       l6721 1F33                                         l7099 25CB  
                                       l7347 06F5                                         l7339 06EA  
                                       l7427 1547                                         l6395 1E59  
                                       l6459 199F                                         l6707 17C5  
                                       l6643 1682                                         l8059 234F  
                                       l7373 0737                                         l7453 159A  
                                       l7461 157C                                         l7533 034F  
                                       l6629 224D                                         l6477 1CA4  
                                       l6813 0B32                                         l6805 0A9F  
                                       l6741 0843                                         l6733 1FAC  
                                       l6717 1F06                                         l6653 1698  
                                       l7199 057B                                         l7463 15B8  
                                       l7623 04EA                                         l7615 04BC  
                                       l7551 0372                                         l7535 0351  
                                       l6591 27CC                                         l6583 2790  
                                       l6487 1D05                                         l6903 0D1E  
                                       l6831 0AF4                                         l6663 16CE  
                                       l7369 0733                                         l7297 0661  
                                       l7289 064F                                         l7393 14F9  
                                       l7641 052A                                         l7617 04D3  
                                       l7553 0374                                         l7537 0359  
                                       l6585 2795                                         l6577 2780  
                                       l6569 2764                                         l6489 1C80  
                                       l6497 1D0A                                         l6913 0D7D  
                                       l6817 0B36                                         l6753 08B3  
                                       l6745 0862                                         l6729 1F7E  
                                       l8089 2106                                         l7299 0663  
                                       l7459 15B3                                         l7627 04EC  
                                       l7563 038A                                         l7555 037C  
                                       l7811 10BE                                         l6587 27A9  
                                       l6931 0E3B                                         l6843 0B13  
                                       l6819 0AD4                                         l6675 16FE  
                                       l6659 169D                                         l7731 25A4  
                                       l7715 2553                                         l7485 15EC  
                                       l7477 15BE                                         l7397 14FC  
                                       l7637 0515                                         l7805 1012  
                                       l6941 0E9E                                         l6917 0DAB  
                                       l6765 0929                                         l6757 08E0  
                                       l6677 170E                                         l6685 1741  
                                       l7717 255B                                         l7709 253F  
                                       l8381 2359                                         l7479 15D5  
                                       l7399 1504                                         l7647 0541  
                                       l7671 2658                                         l7823 10D0  
                                       l7751 2EF9                                         l6927 0E0D  
                                       l6863 0BCF                                         l6775 0988  
                                       l6679 1717                                         l8383 16B6  
                                       l7727 2599                                         l7489 15EE  
                                       l7665 2641                                         l8385 27A1  
                                       l6945 0EBD                                         l6873 0C08  
                                       l6785 09E8                                         l6697 1782  
                                       l7729 259D                                         l7931 2171  
                                       l7923 21A8                                         l7499 1617  
                                       l7675 265C                                         l8387 2FD2  
                                       l7739 2FCD                                         l7827 10F8  
                                       l6955 0F1C                                         l6883 0C66  
                                       l6795 0A40                                         l6699 1792  
                                       l7685 2691                                         l7677 266C  
                                       l7853 1B19                                         l7773 11D3  
                                       l6893 0CC6                                         l7687 2684  
                                       l7767 1127                                         l6975 0FCE  
                                       l6959 0F49                                         l7945 2FF0  
                                       l7857 1B41                                         l7785 11E5  
                                       l6969 0FAC                                         l6985 0FDD  
                                       l7699 26B8                                         l7955 0748  
                                       l7883 1A66                                         l6979 0FD4  
                                       l7789 120F                                         l7879 1A3E  
                                       STR_1 2802                                 __CFG_WDTE$ON 0000  
                                       STR_2 3036                                         STR_3 2849  
                                       STR_5 30A0                                         STR_6 304C  
                                       STR_7 3020                                         STR_9 3061  
                                       _BRGH 0CF2                                         _CREN 0CEC  
                 enableDischarging@sys_ctrl2 007B                                         u8200 124B  
                                       u9000 17B7                                         u8105 24FC  
                                       u9010 17B8                                         _SCS0 04C8  
                                       u8035 1BEC                                         _SCS1 04C9  
                                       u8070 24B7                                         u8305 12D4  
                                       u8145 2405                                         u8245 1288  
                                       u8405 1E6D                                         u8190 124A  
                                       u8415 1E79                                         u7800 2E7B  
                                       u7705 21DD                                         u8505 195C  
                                       u7810 2E7C                                         u8450 18F7  
                                       u7730 2EC0                                         u7635 228F  
                                       u8275 134C                                         u8515 196B  
                                       u7900 1D7C                                         u7740 2EC1  
                                       u7660 2ED7                                         u7725 2EA3  
                                       u8365 1E27                                         u7750 2F78  
                                       u7670 2ED8                                         u8295 12C8  
                                       u8375 1EB0                                         u8535 19AA  
                                       u7760 2F79                                         u8385 1ED5  
                                       u8625 1398                                         u8810 27E0  
                                       u7770 2019                                         u8650 1401  
                                       u9435 2FAF                                         u7835 2F1A  
                                       u8555 1C51                                         u8715 145E  
                                       u8820 27E1                                         u7780 201A  
                                       u8660 1402                                         u7845 2F1F  
                                       u8485 1928                                         u8725 1484  
                                       u8645 13E4                                         u9535 25DE  
                                       u7935 1DC1                                         u8680 1421  
                                       u8585 1C93                                         u8745 149A  
                                       u8690 1422                                         u9555 25EA  
                                       u9475 20C8                                         u8595 1C9F  
                                       u8755 14A6                                         u9565 25FE  
                                       u9725 23B3                                         u9485 20CF  
                                       u8950 1733                                         u9575 260A  
                                       u8960 1734                                         u9665 2381  
                                       u9850 0613                                         u9860 0614  
                                       u9845 0608                                         u9695 239E  
                                       _TMR1 0016                                         u9973 0684  
                                       u9965 0667                                         u9895 0632  
                                       _SPEN 0CEF                                         _TXEN 0CF5  
                                       _SYNC 0CF4                  ??_watchdog_timeout_shutdown 0073  
                               __CFG_WRT$OFF 0000                                         abs@a 0074  
                                       _dbuf 01A0                                         _atoi 275F  
                                       _ctoa 2051                                         _main 20E5  
                                       _dtoa 122F                                         _prec 0144  
                                       _otoa 1E13                                         _nout 0140  
                                       pad@i 002C                                         pad@p 0029  
                                       fsr0h 0005                                         fsr1h 0007  
                                       indf0 0000                                         fsr0l 0004  
                                       indf1 0001                                         fsr1l 0006  
                                       pad@w 002E                                         _stoa 18ED  
                                       btemp 007E                                         _utoa 1C3D  
                                       _xtoa 1384                                         start 0020  
                            ___fldiv@new_exp 0052                       __end_of_updateVoltages 0335  
                   __end_of_send_I2C_stopBit 2DFE                            _enableDischarging 2184  
                                      ??_abs 0076                                        ??_pad 002B  
                       _send_I2C_controlByte 2E10                                ?_EUSART_Write 0070  
                         ?_enableDischarging 0020                                ___fltol@sign1 007A  
                            __end_of___aldiv 262B                              __end_of___aodiv 1E13  
                                      ?_atoi 0077                                        ?_ctoa 0030  
                            __end_of___fladd 0743                                        ?_main 0070  
                                      ?_dtoa 0030                              __end_of___aomod 1C3D  
              I2C_writeRegister@slaveAddress 0075                              __end_of___fldiv 1659  
                                      STR_10 3076                                        STR_11 308B  
                                      STR_20 3168                                        STR_12 30B5  
                                      STR_13 30C9                                        STR_22 316C  
                                      STR_14 30DD                                        STR_15 30F0  
                                      STR_24 316C                                        STR_40 3186  
                                      STR_16 3102                                        STR_33 316D  
                                      STR_42 3186                                        STR_18 3168  
                                      STR_52 3175                                        STR_36 3183  
                                      STR_60 3170                                        STR_29 3169  
                                      STR_45 3174                                        STR_38 3183  
                                      STR_62 3170                                        STR_70 3189  
                                      STR_47 3174                                        STR_55 318C  
                                      STR_72 3189                                        STR_57 318C  
                                      STR_82 3179                                        STR_90 317C  
                                      STR_67 3171                                        STR_75 3178  
                                      STR_92 317C                                        STR_77 3178  
                                      STR_85 318F                                        STR_94 3164  
                                      STR_87 318F                                        STR_96 3164  
                            __end_of___flmul 0561                                        ?_otoa 0030  
                            __end_of___fltol 23CB                                        ?_stoa 0020  
                                      u10015 06D7                                        ?_utoa 0030  
                                      u10115 070E                                        u11100 2FE6  
                                      u11110 2FE7                                        u11015 1AF3  
                                      u11120 2FF5                                        u10305 1594  
                                      u11025 1B31                                        u11130 2FF6  
                                      u10315 15A8                                        u11205 189B  
                                      u11045 1A1F                                        u11215 18B2  
                                      u11055 1A56                                        u10345 15C1  
                                      u11145 075E                                        u10435 1605  
                                      u10275 1584                              __end_of___lodiv 252C  
                                      u10445 1620                                        u10365 15CA  
                                      u10285 158B                                        u10605 04BF  
                                      u11165 07C4                                        u11175 184E  
                                      u10455 1639                                        u11407 2EED  
                                      ?_xtoa 0030                                        u11185 1865  
                                      u10705 051E                                        u10625 04C8  
                                      u11417 2348                                        u11427 2E46  
                                      u10715 0534                                        u10555 0400  
                                      u10565 042F                                        u10805 268B  
                                      u10575 0485                                        u10585 049C  
                                      u10595 04AB                                        u10915 2590  
                                      u10845 26A5                                        u10765 2665  
                                      u11397 210F                                        u10695 0503  
                                      u10785 2679                                        u10955 11FE  
                            __end_of___lomod 2434                                        u10995 10E9  
                                      _IRCF0 04CB                                        _IRCF1 04CC  
                                      _IRCF2 04CD                                        _IRCF3 04CE  
                     __size_of_read_I2C_data 0010                                        i1l141 001E  
                               vfpfcnvrt@fmt 0059                                 vfpfcnvrt@llu 00B3  
                                      _SPBRG 019B                           __size_of_RGB_color 0021  
                        ___lmul@multiplicand 0075                          ??_enableDischarging 0022  
                             __CFG_FCMEN$OFF 0000                              __end_of_initWDT 2DEE  
                                      _flags 00ED                                        _errno 013E  
                                      _fputc 225E                              __end_of_isalpha 2F80  
                                      _fputs 202B                                        _myIsr 0004  
                            __end_of_isdigit 2E83                                        atoi@n 002B  
                                      pad@fp 0026                                        atoi@s 0077  
                                      _width 0142                                        ctoa@c 0032  
                                      _putch 0003                                        ctoa@w 0034  
                                      dtoa@d 0032                                        dtoa@i 004D  
                                      dtoa@n 0045                                        dtoa@p 003F  
                                      dtoa@s 0043                                        dtoa@w 0041  
                            __end_of_islower 2EDF                              __end_of_isspace 2F63  
                             __CFG_BOREN$OFF 0000                              __end_of_isupper 2EC8  
                                      otoa@d 0032                                        otoa@i 0050  
                                      otoa@n 0048                                        otoa@p 0042  
                                      otoa@t 0044                                        otoa@w 0046  
                    enableCharging@sys_ctrl2 007B                                        stoa@i 002B  
                                      stoa@l 0033                                        stoa@p 0031  
                                      stoa@s 0022                                        stoa@w 002D  
                                      utoa@d 0032                                        utoa@i 0047  
                                      utoa@n 003F                                        utoa@p 003B  
                                      utoa@w 003D                                        status 0003  
                                      wtemp0 007E                                        xtoa@c 0055  
                                      xtoa@d 0032                                        xtoa@i 0053  
                                      xtoa@n 004B                                        xtoa@p 0047  
                                      xtoa@w 0049                                        xtoa@x 003A  
                          _SCD_delay_setting 3144                              __end_of_strncmp 225E  
                            __end_of_toupper 202B                             ___lodiv@dividend 0028  
                               ?_internal_16 0070                                 _toupper$1790 0079  
                             __CFG_MCLRE$OFF 0000                    __end_of_enableDischarging 21BB  
                            __initialization 0022                              ?_updateVoltages 0070  
      setTemperatureLimitsint@maxCharge_degC 0026                                 __end_of_atoi 2800  
                               __end_of_ctoa 2082                                 __end_of_main 2117  
                               __end_of_dtoa 1384                                 __end_of_otoa 1F06  
                               __end_of_stoa 19B2                                 __end_of_utoa 1D20  
                               __end_of_xtoa 14DF                     __end_of_UV_delay_setting 3144  
                     ?_setShuntResistorValue 0071                       beginAFEcommunication@i 002D  
                      ?_send_I2C_controlByte 0071                               ??_EUSART_Write 0071  
                  _watchdog_timeout_shutdown 2EDF                               __CFG_LPBOR$OFF 0000  
                          _ATmega328_address 2800                                       ??_atoi 0020  
                                     ??_ctoa 0033                                       ??_main 00EB  
                                     ??_dtoa 003A                                       ??_otoa 003A  
                                     ??_stoa 007A                                       ??_utoa 003A  
                                     ??_xtoa 003B                  __end_of_printcellParameters 275F  
                             __CFG_PLLEN$OFF 0000                             ___lodiv@quotient 0072  
                              ?_readRegister 0075                                       ?_fputc 0071  
                                     STR_101 317D                                       STR_110 3192  
                                     ?_fputs 007A                                       STR_112 3180  
                                     STR_105 3165                                       STR_114 3180  
                                     ?_myIsr 0070                                       STR_108 3192  
                             __CFG_ZCDDIS$ON 0000                                       ?_putch 0070  
              __end_of_OCD_threshold_setting 3020                                       _RC1REG 0199  
                  __end_of_SCD_delay_setting 314C                                vfpfcnvrt@done 00A2  
                               ??_AFE_UPDATE 007C                                       _TX1REG 019A  
                                     _SPLLEN 04CF       setOverCurrentDischargeProtection@i_964 00AA  
                                     _SSPADD 0212                                       _TRISC6 0476  
                                     _TRISC7 0477                                       _SSPBUF 0211  
                              _read_I2C_data 2E4B                             __end_of___xxtofl 26C1  
                                     u787lld 1D48                                       u798lld 1B89  
                             __CFG_PWRTE$OFF 0000                            __end_of_RGB_color 2FDE  
                               vfprintf@cfmt 0068                                       ___flge 2434  
                                     ___lmul 20B3                                    ??___aldiv 0079  
                                  ??___aodiv 0071                               _minCellVoltage 0148  
                                  ??___fladd 0062                                    ??___aomod 0071  
                                     ___wmul 2F11                                       _ln2_hi 3160  
                                  ??___fldiv 0048                                       _ln2_lo 315C  
                             __CFG_STVREN$ON 0000                                    ??___flmul 002E  
                                  ??___fltol 00A4                                    ??___lodiv 0071  
                           __end_of_init_I2C 2E4B                                    ??___lomod 0071  
                           __end_of_init_AFE 2308                             __end_of_init_RGB 2DE8  
                  __end_of_ATmega328_address 2802                        _beginAFEcommunication 0743  
                                     pad@buf 0028                                       ctoa@fp 0030  
                                     dtoa@fp 0030                                       _strlen 2E83  
                                  ??_initWDT 0071                                       fputc@c 0071  
                                     fputs@c 0022                                       fputs@i 0023  
                                     fputs@s 0025                                    ??_isalpha 0073  
                                  ??_isdigit 0073                           __end_of_AFE_UPDATE 2E6C  
                         __size_of__Umul8_16 001F                                    ??_islower 0073  
                                  ??_isspace 0073                          _updateVoltages$2041 00AC  
                                     otoa@fp 0030                               ??_readRegister 0079  
                                  ??_isupper 0073                                       stoa@cp 002F  
                                     stoa@fp 0020                                       putch@c 0070  
                           __end_of_vfprintf 20B3                                       utoa@fp 0030  
            ??_setCellUndervoltageProtection 0036                             __end_of_snprintf 2F47  
                                     xtoa@fp 0030                                    ??_strncmp 0077  
                                  ??_toupper 0020                                   ___flge@ff1 005A  
                                 ___flge@ff2 005E                                 ___xxtofl@arg 0022  
                               ___xxtofl@exp 0021                                 ___xxtofl@val 0071  
                    __end_of__initialization 005E                               ?_read_I2C_data 0071  
                                 ___fltol@f1 00A0                     ?_setTemperatureLimitsint 0020  
                 __size_of_enableDischarging 0037     setTemperatureLimitsint@minDischarge_degC 0020  
                             __pcstackCOMMON 0070                       ??_send_I2C_controlByte 0075  
                               __pidataBANK2 07F7                                __end_of_fputc 22B2  
                              __end_of_fputs 2051                                __end_of_myIsr 0020  
                               _cellVoltages 0120                                __end_of_putch 0004  
                                 _batCurrent 0136                           _RGB_AWAIT_AFE_CONN 2FDE  
                                 _batVoltage 013A                          ?_RGB_AWAIT_AFE_CONN 0070  
                    __size_of_enableCharging 0037                                      ??_fputc 0075  
                                    ??_fputs 0020                                      ??_myIsr 0070  
                                    ??_putch 0071            setShortCircuitProtection@delay_us 006A  
                                 __pbssBANK1 00ED                                   __pbssBANK2 0120  
                                 __pbssBANK3 01A0                         __end_of_EUSART_Write 0808  
                         __size_of_init_GPIO 003B                           __size_of_initClock 0003  
                         __size_of_init_TMR1 000B                          statemachine@success 00EA  
                          __end_of__Umul8_16 2FBD                                   __pmaintext 20E5  
                       ??_RGB_AWAIT_AFE_CONN 0073                         __size_of_internal_16 0009  
            setShortCircuitProtection@scaler 00A0                                      ?___flge 005A  
                          ?_send_I2C_stopBit 0070                                      ?___lmul 0071  
                                    ?___wmul 0071        setTemperatureLimitsint@minCharge_degC 0024  
                            __CFG_PPS1WAY$ON 0000                   ?_setShortCircuitProtection 0066  
                                 __pintentry 0004                       ?_beginAFEcommunication 0020  
                         ??_send_I2C_stopBit 0071                               ___lmul@product 0020  
                                    ?_strlen 0071                      _shuntResistorValue_mOhm 0132  
                                  ?___xxtofl 0071               setShortCircuitProtection@i_955 00AA  
                         __size_of_vfpfcnvrt F9A7           __size_of_watchdog_timeout_shutdown 0018  
                                    _PPSLOCK 0E0F                       __size_of_send_I2C_NACK 0009  
                           ___lomod@dividend 0028                              ??_read_I2C_data 0073  
                     __size_of_send_I2C_data 0009                                    ?_init_I2C 0070  
                                  ?_init_AFE 0070                                    ?_init_RGB 0070  
       __end_of_setCellOvervoltageProtection 1A86        __size_of_setCellOvervoltageProtection 00D4  
               _setCellOvervoltageProtection 19B2                             ??_updateVoltages 00A9  
      __end_of_setCellUndervoltageProtection 1B61       __size_of_setCellUndervoltageProtection 00DB  
              _setCellUndervoltageProtection 1A86                     readRegister@recievedData 0079  
                    ??_setShuntResistorValue 0075                           __size_of_vsnprintf 007D  
                       __end_of_readRegister 214D                                      ___aldiv 25A9  
                                    _adcGain 015E                              __size_of___flge 007C  
                                    ___aodiv 1D20                                      ___fladd 0561  
                                    ___aomod 1B61                                      ___fldiv 14DF  
                            __size_of___lmul 0032                                      ___flmul 0335  
                                    ___fltol 2365                              __size_of___wmul 001B  
                                    ___lodiv 24B0                                      ___lomod 23CB  
                                  ?_vfprintf 0061                                    ?_snprintf 00CC  
                              _messageBuffer 2771                                      __ptext1 2EDF  
                                    __ptext2 1000                                      __ptext3 2308  
                                    __ptext4 26C1                                      __ptext5 2F2C  
                                    __ptext6 252C                                      __ptext7 2082  
                                    __ptext8 1659                                      __ptext9 1384  
                          __end_of_init_GPIO 0843                            __end_of_initClock 2DE3  
                          __end_of_init_TMR1 2E2F                              __size_of_strlen 0017  
                                  _T1CONbits 0018                                      _initWDT 2DE8  
                               __size_of_abs 0017                                 __size_of_pad 0051  
                                    _isalpha 2F63                                      _isdigit 2E6C  
                                 ??___xxtofl 0075                             ___aldiv@dividend 0028  
                                    _islower 2EC8                                      _isspace 2F47  
  __end_of_setOverCurrentDischargeProtection 1118   __size_of_setOverCurrentDischargeProtection 0115  
        ??_setOverCurrentDischargeProtection 006C           ?_setOverCurrentDischargeProtection 0066  
          _setOverCurrentDischargeProtection 1003                                      _isupper 2EB1  
                                    atoi@neg 0024                                      clrloop0 2E30  
          __end_of_watchdog_timeout_shutdown 2EF7                                      _strncmp 220C  
                                    _toupper 2009                         end_of_initialization 005E  
                                 ??_init_I2C 0071                                   ??_init_AFE 007B  
                                 ??_init_RGB 0071                                      fputc@fp 0073  
                                    fputs@fp 007A                ?_setCellOvervoltageProtection 0032  
                          _EUSART_Initialize 1844                           ?_EUSART_Initialize 0032  
                          __end_of_vfpfcnvrt 1000                                _send_I2C_NACK 2000  
                           ___aldiv@quotient 002E                   send_I2C_controlByte@RW_bit 0073  
                                    psplit$0 3E0082                                      psplit$1 820083  
                              _send_I2C_data 2E07                                    _RGB_color 2FBD  
                                 ??_vfprintf 0066                           EUSART_Initialize@x 007A  
                                 ??_snprintf 006C                                      strlen@a 0073  
                                    strlen@s 0071                          ??_EUSART_Initialize 0036  
                                ___fladd@grs 006D                             __CFG_FOSC$INTOSC 0000  
                              ___xxtofl@sign 0020                                    _TRISAbits 008C  
                                  _TRISBbits 008D                                    _TRISCbits 008E  
                                  _TRISEbits 0090                        __size_of_EUSART_Write 0008  
                             _enableCharging 214D                            __end_of_vsnprintf 25A9  
                                ___fldiv@grs 0054                                  ___fldiv@rem 004D  
               __size_of_printcellParameters 009E                __end_of_SCD_threshold_setting 3134  
                                  _RXPPSbits 0E24                            _I2C_writeRegister 2F80  
                                ___flmul@grs 0035                    __end_of_EUSART_Initialize 18ED  
                      _OCD_threshold_setting 3000                           ?_I2C_writeRegister 0075  
           beginAFEcommunication@commSuccess 002B                               ?_send_I2C_NACK 0070  
                   readRegister@slaveAddress 0075               ?_setCellUndervoltageProtection 0032  
                             ?_send_I2C_data 0071                          ??_I2C_writeRegister 007B  
                              ?_shutdown_BMS 0070                                   ?_RGB_color 0071  
                             __end_of___flge 24B0                               __end_of___lmul 20E5  
                                vfpfcnvrt@ap 005A                                  vfpfcnvrt@cp 00A0  
                                vfpfcnvrt@fp 0057                                  vfpfcnvrt@ll 00A8  
                             __end_of___wmul 2F2C                                  vfpfcnvrt@vp 00B0  
                             __end_of_ln2_hi 3164                               __end_of_ln2_lo 3160  
                               _EUSART_Write 0800                  I2C_writeRegister@regAddress 0077  
              setShuntResistorValue@res_mOhm 0071                       __end_of_enableCharging 2184  
           __size_of_setTemperatureLimitsint 0044                               __end_of_strlen 2E9A  
                        start_initialization 0022                              ___lodiv@divisor 0020  
                            ___lodiv@counter 007A                          _thermistorBetaValue 0167  
                                __end_of_Lg1 315C                                  __end_of_Lg2 3158  
                                __end_of_Lg3 3154                                  __end_of_Lg4 3150  
                              ?_statemachine 0070                                  __end_of_abs 2EB1  
                                __end_of_pad 220C                            _minCellTempCharge 0152  
              setCellOvervoltageProtection@i 0045                         _maxCellTempDischarge 014C  
                       updateVoltages@adcVal 00B0                         _minCellTempDischarge 0150  
                  __end_of_I2C_writeRegister 2F9E       _setOverCurrentDischargeProtection$2040 00A4  
                          pnum$text8_split_1 0082                            pnum$text8_split_2 0083  
        setCellOvervoltageProtection@delay_s 0034         setCellUndervoltageProtection@delay_s 0034  
                          _EUSART_Write_Text 2EF7                        __size_of_readRegister 0036  
                         ?_EUSART_Write_Text 0072                      ??_beginAFEcommunication 0022  
                                vfprintf@fmt 0063                                     ??___flge 0062  
                                   ??___lmul 0079                               ??_shutdown_BMS 0071  
                                   ??___wmul 0075               ??_setCellOvervoltageProtection 0036  
        setCellOvervoltageProtection@ov_trip 0044                                    __Umul8_16 2F9E  
                ??_setShortCircuitProtection 006C                                  __pdataBANK2 0160  
                        ??_EUSART_Write_Text 0074                __size_of_send_I2C_controlByte 000A  
       setCellUndervoltageProtection@uv_trip 0044                                     ??_strlen 0073  
                                  ___fladd@a 005E                                    ___fladd@b 005A  
                               vsnprintf@cnt 00C4                                 vsnprintf@fmt 00BF  
                                  ___fldiv@a 0040                                    ___fldiv@b 0044  
                                __pbssBIGRAM 2771                              ?_enableCharging 0020  
                       enableCharging@enable 0020                                    _adcOffset 0154  
                                  ___flmul@a 002A                                    ___flmul@b 0026  
                                __pbssCOMMON 007C                               ??_statemachine 00E8  
                                  ___latbits 0003             send_I2C_controlByte@BlockAddress 0071  
                                 myIsr@count 0159                                __pcstackBANK0 0020  
                              __pcstackBANK1 00A0                             ___aodiv@dividend 0028  
                  __size_of_send_I2C_stopBit 0008                                  snprintf@fmt 00D0  
                          __size_of___xxtofl 0096                                 _readRegister 2117  
   setTemperatureLimitsint@maxDischarge_degC 0022                    __end_of_EUSART_Write_Text 2F11  
                 __size_of_EUSART_Initialize 00A9                                ??_internal_16 0071  
                                  _atoi$1655 0026                                    _atoi$1656 002A  
                                  _atoi$1657 0028                             _OV_delay_setting 3134  
                          __size_of_init_I2C 0010                        I2C_writeRegister@data 0079  
                            ??_send_I2C_NACK 0071                            __size_of_init_AFE 0056  
                          __size_of_init_RGB 0005                            _send_I2C_startBit 2DEE  
                                  _dtoa$1204 003D                              ??_send_I2C_data 0073  
                __size_of_RGB_AWAIT_AFE_CONN 0022               __size_of_setShuntResistorValue 000A  
                                   ?___aldiv 0024                                     ?___aodiv 0020  
                         ?_send_I2C_startBit 0070                                     ?___fladd 005A  
              __end_of_setShuntResistorValue 2E24                                     ?___aomod 0020  
                                   ?___fldiv 0040                             ___aodiv@quotient 0074  
                                   ?___flmul 0026                                     ?___fltol 00A0  
                                   ?___lodiv 0020                                     ?___lomod 0020  
                                ??_RGB_color 0073                                   ?__Umul8_16 0071  
                  EUSART_Initialize@baudrate 0032                            __size_of_vfprintf 0031  
                        ??_send_I2C_startBit 0071                            __size_of_snprintf 001B  
             BQ76920@shuntResistorValue_mOhm 012E                              ___lomod@divisor 0020  
                                   ?_initWDT 0070                              ___lomod@counter 0072  
                                   ?_isalpha 0071                                     ?_isdigit 0071  
                                   ?_islower 0071                                     ?_isspace 0071  
                                  _init_GPIO 0808                                     ?_isupper 0071  
                                  _initClock 2DE0                                    _init_TMR1 2E24  
                                  _currState 015A                    _setShortCircuitProtection 1118  
                 __size_of_I2C_writeRegister 001E                               __size_of_fputc 0054  
                             __size_of_fputs 0026                               __size_of_myIsr 001C  
                                   ?_strncmp 0071                                     ?_toupper 0077  
                             __size_of_putch 0001                              ___aldiv@divisor 0024  
                      __end_of_read_I2C_data 2E5B                              ___aldiv@counter 002C  
                             ___wmul@product 0075                              BQ76920@protect1 0158  
                            BQ76920@protect2 0157                              BQ76920@protect3 0156  
                                   _LATAbits 010C                                     _LATEbits 0110  
                  __end_of_send_I2C_startBit 2DF6                                    clear_ram0 2E2F  
                                  _tmr1_flag 00EF                                     _PIE1bits 0091  
         setOverCurrentDischargeProtection@i 00A8                                     _PIR1bits 0011  
                 setShortCircuitProtection@i 00A8                          __end_of_internal_16 2E07  
                        _printcellParameters 26C1                                    _vfpfcnvrt 1659  
                                  _xtoa$1240 0043                                    _xtoa$1241 0045  
                          ___wmul@multiplier 0071                      _setTemperatureLimitsint 1800  
                                 ?_init_GPIO 0070                                   ?_initClock 0070  
                                 ?_init_TMR1 0070                                 _isspace$1682 0075  
                      send_I2C_data@databyte 0071                                   vfpfcnvrt@c 00B2  
                          ___lmul@multiplier 0071                         ?_printcellParameters 0070  
                       __end_of_shutdown_BMS 1003                        _temperatureThermistor 0146  
                 __size_of_EUSART_Write_Text 001A                   ?_watchdog_timeout_shutdown 0070  
                                  _vsnprintf 252C                                   _AFE_UPDATE 2E5B  
                          _OCD_delay_setting 3114                         __end_of_statemachine 2365  
                                 vfprintf@ap 0065                                   vfprintf@fp 0061  
                                ??__Umul8_16 0073                             __size_of___aldiv 0082  
                           __size_of___aodiv 00F3                             __size_of___fladd 01E2  
                    __size_of_updateVoltages 02D3                             __size_of___aomod 00DC  
                           __size_of___fldiv 017A               _setShortCircuitProtection$2039 00A4  
                                vsnprintf@ap 00C1                             __size_of___flmul 022C  
                           __size_of___fltol 0066                       readRegister@regAddress 0077  
                           __size_of___lodiv 007C                             __size_of___lomod 0069  
                                 ?_vfpfcnvrt 0057                                   snprintf@ap 006F  
                            ___aodiv@divisor 0020                              ___aodiv@counter 0072  
                                 _ANSELBbits 018D                                   _ANSELCbits 018E  
                                   ___xxtofl 262B  setOverCurrentDischargeProtection@current_mA 0066  
                           __size_of_initWDT 0006                             __size_of_isalpha 001D  
                           __size_of_isdigit 0017                             _send_I2C_stopBit 2DF6  
                           __size_of_islower 0017                             __size_of_isspace 001C  
                                   __ptext10 2009                                     __ptext11 2EC8  
                                   __ptext20 122F                                     __ptext12 2EB1  
                                   __ptext21 2E9A                                     __ptext13 2F63  
                                   __ptext30 275F                                     __ptext22 1B61  
                                   __ptext14 1C3D                                     __ptext31 2F47  
                                   __ptext23 1D20                                     __ptext15 23CB  
                                   __ptext40 1003                                     __ptext32 2E6C  
                                   __ptext24 2051                                     __ptext16 24B0  
                                   __ptext41 2434                                     __ptext33 2EF7  
                                   __ptext25 21BB                                     __ptext17 220C  
                                   __ptext50 20B3                                     __ptext42 1A86  
                                   __ptext34 0800                                     __ptext26 2E83  
                                   __ptext18 18ED                                     __ptext51 2365  
                                   __ptext43 19B2                                     __ptext35 22B2  
                                   __ptext27 202B                                     __ptext19 1E13  
                                   __ptext60 2E4B                                     __ptext52 0335  
                                   __ptext44 0743                                     __ptext36 1800  
                                   __ptext28 225E                                     __ptext61 2F80  
                                   __ptext53 2F9E                                     __ptext45 2FDE  
                                   __ptext37 2F11                                     __ptext29 0003  
                                   __ptext70 2DE8                                     __ptext62 2DF6  
                                   __ptext54 14DF                                     __ptext46 2FBD  
                                   __ptext38 2E1A                                     __ptext71 2DE0  
                                   __ptext63 2DEE                                     __ptext55 0561  
                                   __ptext47 2E5B                                     __ptext39 1118  
                                   __ptext72 2DFE                                     __ptext64 2E07  
                                   __ptext56 2184                                     __ptext48 0062  
                                   __ptext73 1844                                     __ptext65 2E10  
                                   __ptext57 214D                                     __ptext49 262B  
                                   __ptext74 25A9                                     __ptext66 2E24  
                                   __ptext58 2117                                     __ptext67 2DE3  
                                   __ptext59 2000                                     __ptext68 2E3B  
                                   __ptext69 0808                             __size_of_isupper 0017  
                      ??_printcellParameters 007C               setCellUndervoltageProtection@i 0045  
                  __end_of_OCD_delay_setting 3124                             __size_of_strncmp 0052  
                           __size_of_toupper 0022                                   ?_vsnprintf 00BB  
                                   _init_I2C 2E3B                                     _init_AFE 22B2  
                                   _init_RGB 2DE3                                __size_of_atoi 00A1  
                              __size_of_ctoa 0031                                __size_of_main 0032  
                              __size_of_dtoa 0155                                _SSPDATPPSbits 0E21  
                                  pnum$text8 003E                                __size_of_otoa 00F3  
                      _SCD_threshold_setting 3124                                __size_of_stoa 00C5  
                              __size_of_utoa 00E3                   __size_of_send_I2C_startBit 0008  
                              __size_of_xtoa 015B                                  _internal_16 2DFE  
                                 _RB2PPSbits 0E9A                                   _RC1STAbits 019D  
                                  stoa@F1152 0160                                   _RC4PPSbits 0EA4  
             __size_of_beginAFEcommunication 00B4                                _SSPCLKPPSbits 0E20  
              __end_of_beginAFEcommunication 07F7                                     int$flags 007E  
                                 _RC5PPSbits 0EA5                                     _protect1 015D  
                                   _protect2 015C                                     _protect3 015B  
                  ??_setTemperatureLimitsint 0077                                     _vfprintf 2082  
                           ??_enableCharging 0022                                     _snprintf 2F2C  
                           ___aomod@dividend 0028                                     logf@F469 012A  
  setOverCurrentDischargeProtection@delay_ms 006A                     __end_of_OV_delay_setting 313C  
                             _vfpfcnvrt$1255 00A4                               _vfpfcnvrt$1256 00A6  
                                 _INTCONbits 000B                                  ??_init_GPIO 0071  
                                ??_initClock 0071                                  ??_init_TMR1 0071  
                             __pstringtext10 3158                               __pstringtext11 315C  
                             __pstringtext20 308B                               __pstringtext12 3160  
                             __pstringtext21 30A0                               __pstringtext13 2800  
                             __pstringtext30 3170                               __pstringtext22 30B5  
                             __pstringtext14 2849                               __pstringtext31 3174  
                             __pstringtext23 30C9                               __pstringtext15 3020  
                             __pstringtext40 3192                               __pstringtext32 3178  
                             __pstringtext24 30DD                               __pstringtext16 3036  
                             __pstringtext41 0000                               __pstringtext33 317C  
                             __pstringtext25 30F0                               __pstringtext17 304C  
                             __pstringtext34 3180                               __pstringtext26 3102  
                             __pstringtext18 3061                               __pstringtext35 3183  
                             __pstringtext27 3164                               __pstringtext19 3076  
                             __pstringtext36 3186                               __pstringtext28 3168  
                             __pstringtext37 3189                               __pstringtext29 316C  
                             __pstringtext38 318C                               __pstringtext39 318F  
                                   isalpha@c 0071                                     isdigit@c 0071  
                                 vsnprintf@f 00C6                                   vsnprintf@n 00BD  
                                 vsnprintf@s 00BB                             _UV_delay_setting 313C  
                                  snprintf@n 00CE                                    snprintf@s 00CC  
               __end_of_send_I2C_controlByte 2E1A                                     intlevel1 0000  
        setShortCircuitProtection@current_mA 0066                                     islower@c 0071  
                                ?_AFE_UPDATE 0070                                     isspace@c 0071  
                          __CFG_CLKOUTEN$OFF 0000                                  _PPSLOCKbits 0E0F  
                                   isupper@c 0071           __size_of_setShortCircuitProtection 0117  
                                  strncmp@_l 0071                                    strncmp@_r 0073  
                          _maxCellTempCharge 014E                              ___aomod@divisor 0020  
                                ??_vfpfcnvrt 005B                                     stoa@nuls 0024  
                            ___aomod@counter 0072                                __pstringtext1 3000  
                              __pstringtext2 3114                                __pstringtext3 3124  
                              __pstringtext4 3134                                __pstringtext5 313C  
                              __pstringtext6 3144                                __pstringtext7 314C  
                              __pstringtext8 3150                                __pstringtext9 3154  
                     __Umul8_16@multiplicand 0071                               _vsnprintf$1827 00C2  
                      __size_of_shutdown_BMS 0003                                     strncmp@l 0078  
                                   strncmp@n 0075                                     strncmp@r 007A  
                                   toupper@c 0077                        EUSART_Write_Text@text 0072  
                               ___aldiv@sign 002D                                  _SSPCON2bits 0216  
                                 _WDTCONbits 0097                                ___fladd@signs 006A  
            __end_of_setTemperatureLimitsint 1844                           EUSART_Write@txData 0071  
                               ___aodiv@sign 0073      setOverCurrentDischargeProtection@scaler 00A0  
                                ??_vsnprintf 006A                                 ___fladd@aexp 006B  
                               ___fladd@bexp 006C                        __size_of_statemachine 005D  
                                 _STATUSbits 0003                                  _toggleColor 007C  
                       __Umul8_16@multiplier 0079                                   _SSPCONbits 0215  
                 __end_of_RGB_AWAIT_AFE_CONN 3000                                 ___aomod@sign 0073  
                         EUSART_Write_Text@i 0075                        __end_of_send_I2C_NACK 2009  
                          __Umul8_16@product 0075  
