

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Dec 19 22:10:11 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1719
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	stringtext5,global,class=STRCODE,delta=2
     9                           	psect	stringtext6,global,class=STRCODE,delta=2
    10                           	psect	stringtext7,global,class=STRCODE,delta=2
    11                           	psect	stringtext8,global,class=STRCODE,delta=2
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	dabs	1,0x7E,2
    44  0000                     
    45                           ; Version 2.05
    46                           ; Generated 20/12/2018 GMT
    47                           ; 
    48                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC16F1719 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     	;# 
    80  0001                     	;# 
    81  0002                     	;# 
    82  0003                     	;# 
    83  0004                     	;# 
    84  0005                     	;# 
    85  0006                     	;# 
    86  0007                     	;# 
    87  0008                     	;# 
    88  0009                     	;# 
    89  000A                     	;# 
    90  000B                     	;# 
    91  000C                     	;# 
    92  000D                     	;# 
    93  000E                     	;# 
    94  000F                     	;# 
    95  0010                     	;# 
    96  0011                     	;# 
    97  0012                     	;# 
    98  0013                     	;# 
    99  0015                     	;# 
   100  0016                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001B                     	;# 
   107  001C                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  008F                     	;# 
   112  0090                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0097                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  0110                     	;# 
   133  0111                     	;# 
   134  0112                     	;# 
   135  0113                     	;# 
   136  0114                     	;# 
   137  0115                     	;# 
   138  0116                     	;# 
   139  0117                     	;# 
   140  0118                     	;# 
   141  0119                     	;# 
   142  011A                     	;# 
   143  011B                     	;# 
   144  011B                     	;# 
   145  011C                     	;# 
   146  018C                     	;# 
   147  018D                     	;# 
   148  018E                     	;# 
   149  018F                     	;# 
   150  0190                     	;# 
   151  0191                     	;# 
   152  0191                     	;# 
   153  0192                     	;# 
   154  0193                     	;# 
   155  0193                     	;# 
   156  0194                     	;# 
   157  0195                     	;# 
   158  0196                     	;# 
   159  0197                     	;# 
   160  0199                     	;# 
   161  0199                     	;# 
   162  0199                     	;# 
   163  019A                     	;# 
   164  019A                     	;# 
   165  019A                     	;# 
   166  019B                     	;# 
   167  019B                     	;# 
   168  019B                     	;# 
   169  019B                     	;# 
   170  019B                     	;# 
   171  019C                     	;# 
   172  019C                     	;# 
   173  019C                     	;# 
   174  019D                     	;# 
   175  019D                     	;# 
   176  019D                     	;# 
   177  019E                     	;# 
   178  019E                     	;# 
   179  019E                     	;# 
   180  019F                     	;# 
   181  019F                     	;# 
   182  019F                     	;# 
   183  019F                     	;# 
   184  019F                     	;# 
   185  020C                     	;# 
   186  020D                     	;# 
   187  020E                     	;# 
   188  020F                     	;# 
   189  0210                     	;# 
   190  0211                     	;# 
   191  0211                     	;# 
   192  0212                     	;# 
   193  0212                     	;# 
   194  0213                     	;# 
   195  0213                     	;# 
   196  0214                     	;# 
   197  0214                     	;# 
   198  0215                     	;# 
   199  0215                     	;# 
   200  0215                     	;# 
   201  0215                     	;# 
   202  0216                     	;# 
   203  0216                     	;# 
   204  0217                     	;# 
   205  0217                     	;# 
   206  028C                     	;# 
   207  028D                     	;# 
   208  028E                     	;# 
   209  028F                     	;# 
   210  0290                     	;# 
   211  0291                     	;# 
   212  0291                     	;# 
   213  0292                     	;# 
   214  0293                     	;# 
   215  0293                     	;# 
   216  0298                     	;# 
   217  0298                     	;# 
   218  0299                     	;# 
   219  029A                     	;# 
   220  029A                     	;# 
   221  029E                     	;# 
   222  030C                     	;# 
   223  030D                     	;# 
   224  030E                     	;# 
   225  030F                     	;# 
   226  0310                     	;# 
   227  038C                     	;# 
   228  038D                     	;# 
   229  038E                     	;# 
   230  038F                     	;# 
   231  0390                     	;# 
   232  0391                     	;# 
   233  0392                     	;# 
   234  0393                     	;# 
   235  0394                     	;# 
   236  0395                     	;# 
   237  0396                     	;# 
   238  0397                     	;# 
   239  0398                     	;# 
   240  0399                     	;# 
   241  039D                     	;# 
   242  039E                     	;# 
   243  039F                     	;# 
   244  0415                     	;# 
   245  0416                     	;# 
   246  0417                     	;# 
   247  041C                     	;# 
   248  041D                     	;# 
   249  041E                     	;# 
   250  0498                     	;# 
   251  0498                     	;# 
   252  0499                     	;# 
   253  049A                     	;# 
   254  049B                     	;# 
   255  049B                     	;# 
   256  049C                     	;# 
   257  049D                     	;# 
   258  049E                     	;# 
   259  049F                     	;# 
   260  0511                     	;# 
   261  0515                     	;# 
   262  0617                     	;# 
   263  0618                     	;# 
   264  0619                     	;# 
   265  0619                     	;# 
   266  061A                     	;# 
   267  061B                     	;# 
   268  061C                     	;# 
   269  061C                     	;# 
   270  0691                     	;# 
   271  0692                     	;# 
   272  0693                     	;# 
   273  0694                     	;# 
   274  0695                     	;# 
   275  0696                     	;# 
   276  0697                     	;# 
   277  0698                     	;# 
   278  0699                     	;# 
   279  069A                     	;# 
   280  069B                     	;# 
   281  069C                     	;# 
   282  069D                     	;# 
   283  069E                     	;# 
   284  069F                     	;# 
   285  0E0F                     	;# 
   286  0E10                     	;# 
   287  0E11                     	;# 
   288  0E12                     	;# 
   289  0E13                     	;# 
   290  0E14                     	;# 
   291  0E15                     	;# 
   292  0E17                     	;# 
   293  0E20                     	;# 
   294  0E21                     	;# 
   295  0E22                     	;# 
   296  0E24                     	;# 
   297  0E25                     	;# 
   298  0E28                     	;# 
   299  0E29                     	;# 
   300  0E2A                     	;# 
   301  0E2B                     	;# 
   302  0E90                     	;# 
   303  0E91                     	;# 
   304  0E92                     	;# 
   305  0E93                     	;# 
   306  0E94                     	;# 
   307  0E95                     	;# 
   308  0E96                     	;# 
   309  0E97                     	;# 
   310  0E98                     	;# 
   311  0E99                     	;# 
   312  0E9A                     	;# 
   313  0E9B                     	;# 
   314  0E9C                     	;# 
   315  0E9D                     	;# 
   316  0E9E                     	;# 
   317  0E9F                     	;# 
   318  0EA0                     	;# 
   319  0EA1                     	;# 
   320  0EA2                     	;# 
   321  0EA3                     	;# 
   322  0EA4                     	;# 
   323  0EA5                     	;# 
   324  0EA6                     	;# 
   325  0EA7                     	;# 
   326  0EA8                     	;# 
   327  0EA9                     	;# 
   328  0EAA                     	;# 
   329  0EAB                     	;# 
   330  0EAC                     	;# 
   331  0EAD                     	;# 
   332  0EAE                     	;# 
   333  0EAF                     	;# 
   334  0EB0                     	;# 
   335  0EB1                     	;# 
   336  0EB2                     	;# 
   337  0F0F                     	;# 
   338  0F10                     	;# 
   339  0F11                     	;# 
   340  0F12                     	;# 
   341  0F13                     	;# 
   342  0F14                     	;# 
   343  0F15                     	;# 
   344  0F16                     	;# 
   345  0F17                     	;# 
   346  0F18                     	;# 
   347  0F19                     	;# 
   348  0F1A                     	;# 
   349  0F1B                     	;# 
   350  0F1C                     	;# 
   351  0F1D                     	;# 
   352  0F1E                     	;# 
   353  0F1F                     	;# 
   354  0F20                     	;# 
   355  0F21                     	;# 
   356  0F22                     	;# 
   357  0F23                     	;# 
   358  0F24                     	;# 
   359  0F25                     	;# 
   360  0F26                     	;# 
   361  0F27                     	;# 
   362  0F28                     	;# 
   363  0F29                     	;# 
   364  0F2A                     	;# 
   365  0F2B                     	;# 
   366  0F2C                     	;# 
   367  0F2D                     	;# 
   368  0F2E                     	;# 
   369  0F2F                     	;# 
   370  0F30                     	;# 
   371  0F31                     	;# 
   372  0F32                     	;# 
   373  0F33                     	;# 
   374  0F34                     	;# 
   375  0F35                     	;# 
   376  0F36                     	;# 
   377  0F37                     	;# 
   378  0FE4                     	;# 
   379  0FE5                     	;# 
   380  0FE6                     	;# 
   381  0FE7                     	;# 
   382  0FE8                     	;# 
   383  0FE9                     	;# 
   384  0FEA                     	;# 
   385  0FEB                     	;# 
   386  0FED                     	;# 
   387  0FEE                     	;# 
   388  0FEF                     	;# 
   389  0000                     	;# 
   390  0001                     	;# 
   391  0002                     	;# 
   392  0003                     	;# 
   393  0004                     	;# 
   394  0005                     	;# 
   395  0006                     	;# 
   396  0007                     	;# 
   397  0008                     	;# 
   398  0009                     	;# 
   399  000A                     	;# 
   400  000B                     	;# 
   401  000C                     	;# 
   402  000D                     	;# 
   403  000E                     	;# 
   404  000F                     	;# 
   405  0010                     	;# 
   406  0011                     	;# 
   407  0012                     	;# 
   408  0013                     	;# 
   409  0015                     	;# 
   410  0016                     	;# 
   411  0016                     	;# 
   412  0017                     	;# 
   413  0018                     	;# 
   414  0019                     	;# 
   415  001A                     	;# 
   416  001B                     	;# 
   417  001C                     	;# 
   418  008C                     	;# 
   419  008D                     	;# 
   420  008E                     	;# 
   421  008F                     	;# 
   422  0090                     	;# 
   423  0091                     	;# 
   424  0092                     	;# 
   425  0093                     	;# 
   426  0095                     	;# 
   427  0096                     	;# 
   428  0097                     	;# 
   429  0098                     	;# 
   430  0099                     	;# 
   431  009A                     	;# 
   432  009B                     	;# 
   433  009B                     	;# 
   434  009C                     	;# 
   435  009D                     	;# 
   436  009E                     	;# 
   437  009F                     	;# 
   438  010C                     	;# 
   439  010D                     	;# 
   440  010E                     	;# 
   441  010F                     	;# 
   442  0110                     	;# 
   443  0111                     	;# 
   444  0112                     	;# 
   445  0113                     	;# 
   446  0114                     	;# 
   447  0115                     	;# 
   448  0116                     	;# 
   449  0117                     	;# 
   450  0118                     	;# 
   451  0119                     	;# 
   452  011A                     	;# 
   453  011B                     	;# 
   454  011B                     	;# 
   455  011C                     	;# 
   456  018C                     	;# 
   457  018D                     	;# 
   458  018E                     	;# 
   459  018F                     	;# 
   460  0190                     	;# 
   461  0191                     	;# 
   462  0191                     	;# 
   463  0192                     	;# 
   464  0193                     	;# 
   465  0193                     	;# 
   466  0194                     	;# 
   467  0195                     	;# 
   468  0196                     	;# 
   469  0197                     	;# 
   470  0199                     	;# 
   471  0199                     	;# 
   472  0199                     	;# 
   473  019A                     	;# 
   474  019A                     	;# 
   475  019A                     	;# 
   476  019B                     	;# 
   477  019B                     	;# 
   478  019B                     	;# 
   479  019B                     	;# 
   480  019B                     	;# 
   481  019C                     	;# 
   482  019C                     	;# 
   483  019C                     	;# 
   484  019D                     	;# 
   485  019D                     	;# 
   486  019D                     	;# 
   487  019E                     	;# 
   488  019E                     	;# 
   489  019E                     	;# 
   490  019F                     	;# 
   491  019F                     	;# 
   492  019F                     	;# 
   493  019F                     	;# 
   494  019F                     	;# 
   495  020C                     	;# 
   496  020D                     	;# 
   497  020E                     	;# 
   498  020F                     	;# 
   499  0210                     	;# 
   500  0211                     	;# 
   501  0211                     	;# 
   502  0212                     	;# 
   503  0212                     	;# 
   504  0213                     	;# 
   505  0213                     	;# 
   506  0214                     	;# 
   507  0214                     	;# 
   508  0215                     	;# 
   509  0215                     	;# 
   510  0215                     	;# 
   511  0215                     	;# 
   512  0216                     	;# 
   513  0216                     	;# 
   514  0217                     	;# 
   515  0217                     	;# 
   516  028C                     	;# 
   517  028D                     	;# 
   518  028E                     	;# 
   519  028F                     	;# 
   520  0290                     	;# 
   521  0291                     	;# 
   522  0291                     	;# 
   523  0292                     	;# 
   524  0293                     	;# 
   525  0293                     	;# 
   526  0298                     	;# 
   527  0298                     	;# 
   528  0299                     	;# 
   529  029A                     	;# 
   530  029A                     	;# 
   531  029E                     	;# 
   532  030C                     	;# 
   533  030D                     	;# 
   534  030E                     	;# 
   535  030F                     	;# 
   536  0310                     	;# 
   537  038C                     	;# 
   538  038D                     	;# 
   539  038E                     	;# 
   540  038F                     	;# 
   541  0390                     	;# 
   542  0391                     	;# 
   543  0392                     	;# 
   544  0393                     	;# 
   545  0394                     	;# 
   546  0395                     	;# 
   547  0396                     	;# 
   548  0397                     	;# 
   549  0398                     	;# 
   550  0399                     	;# 
   551  039D                     	;# 
   552  039E                     	;# 
   553  039F                     	;# 
   554  0415                     	;# 
   555  0416                     	;# 
   556  0417                     	;# 
   557  041C                     	;# 
   558  041D                     	;# 
   559  041E                     	;# 
   560  0498                     	;# 
   561  0498                     	;# 
   562  0499                     	;# 
   563  049A                     	;# 
   564  049B                     	;# 
   565  049B                     	;# 
   566  049C                     	;# 
   567  049D                     	;# 
   568  049E                     	;# 
   569  049F                     	;# 
   570  0511                     	;# 
   571  0515                     	;# 
   572  0617                     	;# 
   573  0618                     	;# 
   574  0619                     	;# 
   575  0619                     	;# 
   576  061A                     	;# 
   577  061B                     	;# 
   578  061C                     	;# 
   579  061C                     	;# 
   580  0691                     	;# 
   581  0692                     	;# 
   582  0693                     	;# 
   583  0694                     	;# 
   584  0695                     	;# 
   585  0696                     	;# 
   586  0697                     	;# 
   587  0698                     	;# 
   588  0699                     	;# 
   589  069A                     	;# 
   590  069B                     	;# 
   591  069C                     	;# 
   592  069D                     	;# 
   593  069E                     	;# 
   594  069F                     	;# 
   595  0E0F                     	;# 
   596  0E10                     	;# 
   597  0E11                     	;# 
   598  0E12                     	;# 
   599  0E13                     	;# 
   600  0E14                     	;# 
   601  0E15                     	;# 
   602  0E17                     	;# 
   603  0E20                     	;# 
   604  0E21                     	;# 
   605  0E22                     	;# 
   606  0E24                     	;# 
   607  0E25                     	;# 
   608  0E28                     	;# 
   609  0E29                     	;# 
   610  0E2A                     	;# 
   611  0E2B                     	;# 
   612  0E90                     	;# 
   613  0E91                     	;# 
   614  0E92                     	;# 
   615  0E93                     	;# 
   616  0E94                     	;# 
   617  0E95                     	;# 
   618  0E96                     	;# 
   619  0E97                     	;# 
   620  0E98                     	;# 
   621  0E99                     	;# 
   622  0E9A                     	;# 
   623  0E9B                     	;# 
   624  0E9C                     	;# 
   625  0E9D                     	;# 
   626  0E9E                     	;# 
   627  0E9F                     	;# 
   628  0EA0                     	;# 
   629  0EA1                     	;# 
   630  0EA2                     	;# 
   631  0EA3                     	;# 
   632  0EA4                     	;# 
   633  0EA5                     	;# 
   634  0EA6                     	;# 
   635  0EA7                     	;# 
   636  0EA8                     	;# 
   637  0EA9                     	;# 
   638  0EAA                     	;# 
   639  0EAB                     	;# 
   640  0EAC                     	;# 
   641  0EAD                     	;# 
   642  0EAE                     	;# 
   643  0EAF                     	;# 
   644  0EB0                     	;# 
   645  0EB1                     	;# 
   646  0EB2                     	;# 
   647  0F0F                     	;# 
   648  0F10                     	;# 
   649  0F11                     	;# 
   650  0F12                     	;# 
   651  0F13                     	;# 
   652  0F14                     	;# 
   653  0F15                     	;# 
   654  0F16                     	;# 
   655  0F17                     	;# 
   656  0F18                     	;# 
   657  0F19                     	;# 
   658  0F1A                     	;# 
   659  0F1B                     	;# 
   660  0F1C                     	;# 
   661  0F1D                     	;# 
   662  0F1E                     	;# 
   663  0F1F                     	;# 
   664  0F20                     	;# 
   665  0F21                     	;# 
   666  0F22                     	;# 
   667  0F23                     	;# 
   668  0F24                     	;# 
   669  0F25                     	;# 
   670  0F26                     	;# 
   671  0F27                     	;# 
   672  0F28                     	;# 
   673  0F29                     	;# 
   674  0F2A                     	;# 
   675  0F2B                     	;# 
   676  0F2C                     	;# 
   677  0F2D                     	;# 
   678  0F2E                     	;# 
   679  0F2F                     	;# 
   680  0F30                     	;# 
   681  0F31                     	;# 
   682  0F32                     	;# 
   683  0F33                     	;# 
   684  0F34                     	;# 
   685  0F35                     	;# 
   686  0F36                     	;# 
   687  0F37                     	;# 
   688  0FE4                     	;# 
   689  0FE5                     	;# 
   690  0FE6                     	;# 
   691  0FE7                     	;# 
   692  0FE8                     	;# 
   693  0FE9                     	;# 
   694  0FEA                     	;# 
   695  0FEB                     	;# 
   696  0FED                     	;# 
   697  0FEE                     	;# 
   698  0FEF                     	;# 
   699  0000                     	;# 
   700  0001                     	;# 
   701  0002                     	;# 
   702  0003                     	;# 
   703  0004                     	;# 
   704  0005                     	;# 
   705  0006                     	;# 
   706  0007                     	;# 
   707  0008                     	;# 
   708  0009                     	;# 
   709  000A                     	;# 
   710  000B                     	;# 
   711  000C                     	;# 
   712  000D                     	;# 
   713  000E                     	;# 
   714  000F                     	;# 
   715  0010                     	;# 
   716  0011                     	;# 
   717  0012                     	;# 
   718  0013                     	;# 
   719  0015                     	;# 
   720  0016                     	;# 
   721  0016                     	;# 
   722  0017                     	;# 
   723  0018                     	;# 
   724  0019                     	;# 
   725  001A                     	;# 
   726  001B                     	;# 
   727  001C                     	;# 
   728  008C                     	;# 
   729  008D                     	;# 
   730  008E                     	;# 
   731  008F                     	;# 
   732  0090                     	;# 
   733  0091                     	;# 
   734  0092                     	;# 
   735  0093                     	;# 
   736  0095                     	;# 
   737  0096                     	;# 
   738  0097                     	;# 
   739  0098                     	;# 
   740  0099                     	;# 
   741  009A                     	;# 
   742  009B                     	;# 
   743  009B                     	;# 
   744  009C                     	;# 
   745  009D                     	;# 
   746  009E                     	;# 
   747  009F                     	;# 
   748  010C                     	;# 
   749  010D                     	;# 
   750  010E                     	;# 
   751  010F                     	;# 
   752  0110                     	;# 
   753  0111                     	;# 
   754  0112                     	;# 
   755  0113                     	;# 
   756  0114                     	;# 
   757  0115                     	;# 
   758  0116                     	;# 
   759  0117                     	;# 
   760  0118                     	;# 
   761  0119                     	;# 
   762  011A                     	;# 
   763  011B                     	;# 
   764  011B                     	;# 
   765  011C                     	;# 
   766  018C                     	;# 
   767  018D                     	;# 
   768  018E                     	;# 
   769  018F                     	;# 
   770  0190                     	;# 
   771  0191                     	;# 
   772  0191                     	;# 
   773  0192                     	;# 
   774  0193                     	;# 
   775  0193                     	;# 
   776  0194                     	;# 
   777  0195                     	;# 
   778  0196                     	;# 
   779  0197                     	;# 
   780  0199                     	;# 
   781  0199                     	;# 
   782  0199                     	;# 
   783  019A                     	;# 
   784  019A                     	;# 
   785  019A                     	;# 
   786  019B                     	;# 
   787  019B                     	;# 
   788  019B                     	;# 
   789  019B                     	;# 
   790  019B                     	;# 
   791  019C                     	;# 
   792  019C                     	;# 
   793  019C                     	;# 
   794  019D                     	;# 
   795  019D                     	;# 
   796  019D                     	;# 
   797  019E                     	;# 
   798  019E                     	;# 
   799  019E                     	;# 
   800  019F                     	;# 
   801  019F                     	;# 
   802  019F                     	;# 
   803  019F                     	;# 
   804  019F                     	;# 
   805  020C                     	;# 
   806  020D                     	;# 
   807  020E                     	;# 
   808  020F                     	;# 
   809  0210                     	;# 
   810  0211                     	;# 
   811  0211                     	;# 
   812  0212                     	;# 
   813  0212                     	;# 
   814  0213                     	;# 
   815  0213                     	;# 
   816  0214                     	;# 
   817  0214                     	;# 
   818  0215                     	;# 
   819  0215                     	;# 
   820  0215                     	;# 
   821  0215                     	;# 
   822  0216                     	;# 
   823  0216                     	;# 
   824  0217                     	;# 
   825  0217                     	;# 
   826  028C                     	;# 
   827  028D                     	;# 
   828  028E                     	;# 
   829  028F                     	;# 
   830  0290                     	;# 
   831  0291                     	;# 
   832  0291                     	;# 
   833  0292                     	;# 
   834  0293                     	;# 
   835  0293                     	;# 
   836  0298                     	;# 
   837  0298                     	;# 
   838  0299                     	;# 
   839  029A                     	;# 
   840  029A                     	;# 
   841  029E                     	;# 
   842  030C                     	;# 
   843  030D                     	;# 
   844  030E                     	;# 
   845  030F                     	;# 
   846  0310                     	;# 
   847  038C                     	;# 
   848  038D                     	;# 
   849  038E                     	;# 
   850  038F                     	;# 
   851  0390                     	;# 
   852  0391                     	;# 
   853  0392                     	;# 
   854  0393                     	;# 
   855  0394                     	;# 
   856  0395                     	;# 
   857  0396                     	;# 
   858  0397                     	;# 
   859  0398                     	;# 
   860  0399                     	;# 
   861  039D                     	;# 
   862  039E                     	;# 
   863  039F                     	;# 
   864  0415                     	;# 
   865  0416                     	;# 
   866  0417                     	;# 
   867  041C                     	;# 
   868  041D                     	;# 
   869  041E                     	;# 
   870  0498                     	;# 
   871  0498                     	;# 
   872  0499                     	;# 
   873  049A                     	;# 
   874  049B                     	;# 
   875  049B                     	;# 
   876  049C                     	;# 
   877  049D                     	;# 
   878  049E                     	;# 
   879  049F                     	;# 
   880  0511                     	;# 
   881  0515                     	;# 
   882  0617                     	;# 
   883  0618                     	;# 
   884  0619                     	;# 
   885  0619                     	;# 
   886  061A                     	;# 
   887  061B                     	;# 
   888  061C                     	;# 
   889  061C                     	;# 
   890  0691                     	;# 
   891  0692                     	;# 
   892  0693                     	;# 
   893  0694                     	;# 
   894  0695                     	;# 
   895  0696                     	;# 
   896  0697                     	;# 
   897  0698                     	;# 
   898  0699                     	;# 
   899  069A                     	;# 
   900  069B                     	;# 
   901  069C                     	;# 
   902  069D                     	;# 
   903  069E                     	;# 
   904  069F                     	;# 
   905  0E0F                     	;# 
   906  0E10                     	;# 
   907  0E11                     	;# 
   908  0E12                     	;# 
   909  0E13                     	;# 
   910  0E14                     	;# 
   911  0E15                     	;# 
   912  0E17                     	;# 
   913  0E20                     	;# 
   914  0E21                     	;# 
   915  0E22                     	;# 
   916  0E24                     	;# 
   917  0E25                     	;# 
   918  0E28                     	;# 
   919  0E29                     	;# 
   920  0E2A                     	;# 
   921  0E2B                     	;# 
   922  0E90                     	;# 
   923  0E91                     	;# 
   924  0E92                     	;# 
   925  0E93                     	;# 
   926  0E94                     	;# 
   927  0E95                     	;# 
   928  0E96                     	;# 
   929  0E97                     	;# 
   930  0E98                     	;# 
   931  0E99                     	;# 
   932  0E9A                     	;# 
   933  0E9B                     	;# 
   934  0E9C                     	;# 
   935  0E9D                     	;# 
   936  0E9E                     	;# 
   937  0E9F                     	;# 
   938  0EA0                     	;# 
   939  0EA1                     	;# 
   940  0EA2                     	;# 
   941  0EA3                     	;# 
   942  0EA4                     	;# 
   943  0EA5                     	;# 
   944  0EA6                     	;# 
   945  0EA7                     	;# 
   946  0EA8                     	;# 
   947  0EA9                     	;# 
   948  0EAA                     	;# 
   949  0EAB                     	;# 
   950  0EAC                     	;# 
   951  0EAD                     	;# 
   952  0EAE                     	;# 
   953  0EAF                     	;# 
   954  0EB0                     	;# 
   955  0EB1                     	;# 
   956  0EB2                     	;# 
   957  0F0F                     	;# 
   958  0F10                     	;# 
   959  0F11                     	;# 
   960  0F12                     	;# 
   961  0F13                     	;# 
   962  0F14                     	;# 
   963  0F15                     	;# 
   964  0F16                     	;# 
   965  0F17                     	;# 
   966  0F18                     	;# 
   967  0F19                     	;# 
   968  0F1A                     	;# 
   969  0F1B                     	;# 
   970  0F1C                     	;# 
   971  0F1D                     	;# 
   972  0F1E                     	;# 
   973  0F1F                     	;# 
   974  0F20                     	;# 
   975  0F21                     	;# 
   976  0F22                     	;# 
   977  0F23                     	;# 
   978  0F24                     	;# 
   979  0F25                     	;# 
   980  0F26                     	;# 
   981  0F27                     	;# 
   982  0F28                     	;# 
   983  0F29                     	;# 
   984  0F2A                     	;# 
   985  0F2B                     	;# 
   986  0F2C                     	;# 
   987  0F2D                     	;# 
   988  0F2E                     	;# 
   989  0F2F                     	;# 
   990  0F30                     	;# 
   991  0F31                     	;# 
   992  0F32                     	;# 
   993  0F33                     	;# 
   994  0F34                     	;# 
   995  0F35                     	;# 
   996  0F36                     	;# 
   997  0F37                     	;# 
   998  0FE4                     	;# 
   999  0FE5                     	;# 
  1000  0FE6                     	;# 
  1001  0FE7                     	;# 
  1002  0FE8                     	;# 
  1003  0FE9                     	;# 
  1004  0FEA                     	;# 
  1005  0FEB                     	;# 
  1006  0FED                     	;# 
  1007  0FEE                     	;# 
  1008  0FEF                     	;# 
  1009  0000                     	;# 
  1010  0001                     	;# 
  1011  0002                     	;# 
  1012  0003                     	;# 
  1013  0004                     	;# 
  1014  0005                     	;# 
  1015  0006                     	;# 
  1016  0007                     	;# 
  1017  0008                     	;# 
  1018  0009                     	;# 
  1019  000A                     	;# 
  1020  000B                     	;# 
  1021  000C                     	;# 
  1022  000D                     	;# 
  1023  000E                     	;# 
  1024  000F                     	;# 
  1025  0010                     	;# 
  1026  0011                     	;# 
  1027  0012                     	;# 
  1028  0013                     	;# 
  1029  0015                     	;# 
  1030  0016                     	;# 
  1031  0016                     	;# 
  1032  0017                     	;# 
  1033  0018                     	;# 
  1034  0019                     	;# 
  1035  001A                     	;# 
  1036  001B                     	;# 
  1037  001C                     	;# 
  1038  008C                     	;# 
  1039  008D                     	;# 
  1040  008E                     	;# 
  1041  008F                     	;# 
  1042  0090                     	;# 
  1043  0091                     	;# 
  1044  0092                     	;# 
  1045  0093                     	;# 
  1046  0095                     	;# 
  1047  0096                     	;# 
  1048  0097                     	;# 
  1049  0098                     	;# 
  1050  0099                     	;# 
  1051  009A                     	;# 
  1052  009B                     	;# 
  1053  009B                     	;# 
  1054  009C                     	;# 
  1055  009D                     	;# 
  1056  009E                     	;# 
  1057  009F                     	;# 
  1058  010C                     	;# 
  1059  010D                     	;# 
  1060  010E                     	;# 
  1061  010F                     	;# 
  1062  0110                     	;# 
  1063  0111                     	;# 
  1064  0112                     	;# 
  1065  0113                     	;# 
  1066  0114                     	;# 
  1067  0115                     	;# 
  1068  0116                     	;# 
  1069  0117                     	;# 
  1070  0118                     	;# 
  1071  0119                     	;# 
  1072  011A                     	;# 
  1073  011B                     	;# 
  1074  011B                     	;# 
  1075  011C                     	;# 
  1076  018C                     	;# 
  1077  018D                     	;# 
  1078  018E                     	;# 
  1079  018F                     	;# 
  1080  0190                     	;# 
  1081  0191                     	;# 
  1082  0191                     	;# 
  1083  0192                     	;# 
  1084  0193                     	;# 
  1085  0193                     	;# 
  1086  0194                     	;# 
  1087  0195                     	;# 
  1088  0196                     	;# 
  1089  0197                     	;# 
  1090  0199                     	;# 
  1091  0199                     	;# 
  1092  0199                     	;# 
  1093  019A                     	;# 
  1094  019A                     	;# 
  1095  019A                     	;# 
  1096  019B                     	;# 
  1097  019B                     	;# 
  1098  019B                     	;# 
  1099  019B                     	;# 
  1100  019B                     	;# 
  1101  019C                     	;# 
  1102  019C                     	;# 
  1103  019C                     	;# 
  1104  019D                     	;# 
  1105  019D                     	;# 
  1106  019D                     	;# 
  1107  019E                     	;# 
  1108  019E                     	;# 
  1109  019E                     	;# 
  1110  019F                     	;# 
  1111  019F                     	;# 
  1112  019F                     	;# 
  1113  019F                     	;# 
  1114  019F                     	;# 
  1115  020C                     	;# 
  1116  020D                     	;# 
  1117  020E                     	;# 
  1118  020F                     	;# 
  1119  0210                     	;# 
  1120  0211                     	;# 
  1121  0211                     	;# 
  1122  0212                     	;# 
  1123  0212                     	;# 
  1124  0213                     	;# 
  1125  0213                     	;# 
  1126  0214                     	;# 
  1127  0214                     	;# 
  1128  0215                     	;# 
  1129  0215                     	;# 
  1130  0215                     	;# 
  1131  0215                     	;# 
  1132  0216                     	;# 
  1133  0216                     	;# 
  1134  0217                     	;# 
  1135  0217                     	;# 
  1136  028C                     	;# 
  1137  028D                     	;# 
  1138  028E                     	;# 
  1139  028F                     	;# 
  1140  0290                     	;# 
  1141  0291                     	;# 
  1142  0291                     	;# 
  1143  0292                     	;# 
  1144  0293                     	;# 
  1145  0293                     	;# 
  1146  0298                     	;# 
  1147  0298                     	;# 
  1148  0299                     	;# 
  1149  029A                     	;# 
  1150  029A                     	;# 
  1151  029E                     	;# 
  1152  030C                     	;# 
  1153  030D                     	;# 
  1154  030E                     	;# 
  1155  030F                     	;# 
  1156  0310                     	;# 
  1157  038C                     	;# 
  1158  038D                     	;# 
  1159  038E                     	;# 
  1160  038F                     	;# 
  1161  0390                     	;# 
  1162  0391                     	;# 
  1163  0392                     	;# 
  1164  0393                     	;# 
  1165  0394                     	;# 
  1166  0395                     	;# 
  1167  0396                     	;# 
  1168  0397                     	;# 
  1169  0398                     	;# 
  1170  0399                     	;# 
  1171  039D                     	;# 
  1172  039E                     	;# 
  1173  039F                     	;# 
  1174  0415                     	;# 
  1175  0416                     	;# 
  1176  0417                     	;# 
  1177  041C                     	;# 
  1178  041D                     	;# 
  1179  041E                     	;# 
  1180  0498                     	;# 
  1181  0498                     	;# 
  1182  0499                     	;# 
  1183  049A                     	;# 
  1184  049B                     	;# 
  1185  049B                     	;# 
  1186  049C                     	;# 
  1187  049D                     	;# 
  1188  049E                     	;# 
  1189  049F                     	;# 
  1190  0511                     	;# 
  1191  0515                     	;# 
  1192  0617                     	;# 
  1193  0618                     	;# 
  1194  0619                     	;# 
  1195  0619                     	;# 
  1196  061A                     	;# 
  1197  061B                     	;# 
  1198  061C                     	;# 
  1199  061C                     	;# 
  1200  0691                     	;# 
  1201  0692                     	;# 
  1202  0693                     	;# 
  1203  0694                     	;# 
  1204  0695                     	;# 
  1205  0696                     	;# 
  1206  0697                     	;# 
  1207  0698                     	;# 
  1208  0699                     	;# 
  1209  069A                     	;# 
  1210  069B                     	;# 
  1211  069C                     	;# 
  1212  069D                     	;# 
  1213  069E                     	;# 
  1214  069F                     	;# 
  1215  0E0F                     	;# 
  1216  0E10                     	;# 
  1217  0E11                     	;# 
  1218  0E12                     	;# 
  1219  0E13                     	;# 
  1220  0E14                     	;# 
  1221  0E15                     	;# 
  1222  0E17                     	;# 
  1223  0E20                     	;# 
  1224  0E21                     	;# 
  1225  0E22                     	;# 
  1226  0E24                     	;# 
  1227  0E25                     	;# 
  1228  0E28                     	;# 
  1229  0E29                     	;# 
  1230  0E2A                     	;# 
  1231  0E2B                     	;# 
  1232  0E90                     	;# 
  1233  0E91                     	;# 
  1234  0E92                     	;# 
  1235  0E93                     	;# 
  1236  0E94                     	;# 
  1237  0E95                     	;# 
  1238  0E96                     	;# 
  1239  0E97                     	;# 
  1240  0E98                     	;# 
  1241  0E99                     	;# 
  1242  0E9A                     	;# 
  1243  0E9B                     	;# 
  1244  0E9C                     	;# 
  1245  0E9D                     	;# 
  1246  0E9E                     	;# 
  1247  0E9F                     	;# 
  1248  0EA0                     	;# 
  1249  0EA1                     	;# 
  1250  0EA2                     	;# 
  1251  0EA3                     	;# 
  1252  0EA4                     	;# 
  1253  0EA5                     	;# 
  1254  0EA6                     	;# 
  1255  0EA7                     	;# 
  1256  0EA8                     	;# 
  1257  0EA9                     	;# 
  1258  0EAA                     	;# 
  1259  0EAB                     	;# 
  1260  0EAC                     	;# 
  1261  0EAD                     	;# 
  1262  0EAE                     	;# 
  1263  0EAF                     	;# 
  1264  0EB0                     	;# 
  1265  0EB1                     	;# 
  1266  0EB2                     	;# 
  1267  0F0F                     	;# 
  1268  0F10                     	;# 
  1269  0F11                     	;# 
  1270  0F12                     	;# 
  1271  0F13                     	;# 
  1272  0F14                     	;# 
  1273  0F15                     	;# 
  1274  0F16                     	;# 
  1275  0F17                     	;# 
  1276  0F18                     	;# 
  1277  0F19                     	;# 
  1278  0F1A                     	;# 
  1279  0F1B                     	;# 
  1280  0F1C                     	;# 
  1281  0F1D                     	;# 
  1282  0F1E                     	;# 
  1283  0F1F                     	;# 
  1284  0F20                     	;# 
  1285  0F21                     	;# 
  1286  0F22                     	;# 
  1287  0F23                     	;# 
  1288  0F24                     	;# 
  1289  0F25                     	;# 
  1290  0F26                     	;# 
  1291  0F27                     	;# 
  1292  0F28                     	;# 
  1293  0F29                     	;# 
  1294  0F2A                     	;# 
  1295  0F2B                     	;# 
  1296  0F2C                     	;# 
  1297  0F2D                     	;# 
  1298  0F2E                     	;# 
  1299  0F2F                     	;# 
  1300  0F30                     	;# 
  1301  0F31                     	;# 
  1302  0F32                     	;# 
  1303  0F33                     	;# 
  1304  0F34                     	;# 
  1305  0F35                     	;# 
  1306  0F36                     	;# 
  1307  0F37                     	;# 
  1308  0FE4                     	;# 
  1309  0FE5                     	;# 
  1310  0FE6                     	;# 
  1311  0FE7                     	;# 
  1312  0FE8                     	;# 
  1313  0FE9                     	;# 
  1314  0FEA                     	;# 
  1315  0FEB                     	;# 
  1316  0FED                     	;# 
  1317  0FEE                     	;# 
  1318  0FEF                     	;# 
  1319  0000                     	;# 
  1320  0001                     	;# 
  1321  0002                     	;# 
  1322  0003                     	;# 
  1323  0004                     	;# 
  1324  0005                     	;# 
  1325  0006                     	;# 
  1326  0007                     	;# 
  1327  0008                     	;# 
  1328  0009                     	;# 
  1329  000A                     	;# 
  1330  000B                     	;# 
  1331  000C                     	;# 
  1332  000D                     	;# 
  1333  000E                     	;# 
  1334  000F                     	;# 
  1335  0010                     	;# 
  1336  0011                     	;# 
  1337  0012                     	;# 
  1338  0013                     	;# 
  1339  0015                     	;# 
  1340  0016                     	;# 
  1341  0016                     	;# 
  1342  0017                     	;# 
  1343  0018                     	;# 
  1344  0019                     	;# 
  1345  001A                     	;# 
  1346  001B                     	;# 
  1347  001C                     	;# 
  1348  008C                     	;# 
  1349  008D                     	;# 
  1350  008E                     	;# 
  1351  008F                     	;# 
  1352  0090                     	;# 
  1353  0091                     	;# 
  1354  0092                     	;# 
  1355  0093                     	;# 
  1356  0095                     	;# 
  1357  0096                     	;# 
  1358  0097                     	;# 
  1359  0098                     	;# 
  1360  0099                     	;# 
  1361  009A                     	;# 
  1362  009B                     	;# 
  1363  009B                     	;# 
  1364  009C                     	;# 
  1365  009D                     	;# 
  1366  009E                     	;# 
  1367  009F                     	;# 
  1368  010C                     	;# 
  1369  010D                     	;# 
  1370  010E                     	;# 
  1371  010F                     	;# 
  1372  0110                     	;# 
  1373  0111                     	;# 
  1374  0112                     	;# 
  1375  0113                     	;# 
  1376  0114                     	;# 
  1377  0115                     	;# 
  1378  0116                     	;# 
  1379  0117                     	;# 
  1380  0118                     	;# 
  1381  0119                     	;# 
  1382  011A                     	;# 
  1383  011B                     	;# 
  1384  011B                     	;# 
  1385  011C                     	;# 
  1386  018C                     	;# 
  1387  018D                     	;# 
  1388  018E                     	;# 
  1389  018F                     	;# 
  1390  0190                     	;# 
  1391  0191                     	;# 
  1392  0191                     	;# 
  1393  0192                     	;# 
  1394  0193                     	;# 
  1395  0193                     	;# 
  1396  0194                     	;# 
  1397  0195                     	;# 
  1398  0196                     	;# 
  1399  0197                     	;# 
  1400  0199                     	;# 
  1401  0199                     	;# 
  1402  0199                     	;# 
  1403  019A                     	;# 
  1404  019A                     	;# 
  1405  019A                     	;# 
  1406  019B                     	;# 
  1407  019B                     	;# 
  1408  019B                     	;# 
  1409  019B                     	;# 
  1410  019B                     	;# 
  1411  019C                     	;# 
  1412  019C                     	;# 
  1413  019C                     	;# 
  1414  019D                     	;# 
  1415  019D                     	;# 
  1416  019D                     	;# 
  1417  019E                     	;# 
  1418  019E                     	;# 
  1419  019E                     	;# 
  1420  019F                     	;# 
  1421  019F                     	;# 
  1422  019F                     	;# 
  1423  019F                     	;# 
  1424  019F                     	;# 
  1425  020C                     	;# 
  1426  020D                     	;# 
  1427  020E                     	;# 
  1428  020F                     	;# 
  1429  0210                     	;# 
  1430  0211                     	;# 
  1431  0211                     	;# 
  1432  0212                     	;# 
  1433  0212                     	;# 
  1434  0213                     	;# 
  1435  0213                     	;# 
  1436  0214                     	;# 
  1437  0214                     	;# 
  1438  0215                     	;# 
  1439  0215                     	;# 
  1440  0215                     	;# 
  1441  0215                     	;# 
  1442  0216                     	;# 
  1443  0216                     	;# 
  1444  0217                     	;# 
  1445  0217                     	;# 
  1446  028C                     	;# 
  1447  028D                     	;# 
  1448  028E                     	;# 
  1449  028F                     	;# 
  1450  0290                     	;# 
  1451  0291                     	;# 
  1452  0291                     	;# 
  1453  0292                     	;# 
  1454  0293                     	;# 
  1455  0293                     	;# 
  1456  0298                     	;# 
  1457  0298                     	;# 
  1458  0299                     	;# 
  1459  029A                     	;# 
  1460  029A                     	;# 
  1461  029E                     	;# 
  1462  030C                     	;# 
  1463  030D                     	;# 
  1464  030E                     	;# 
  1465  030F                     	;# 
  1466  0310                     	;# 
  1467  038C                     	;# 
  1468  038D                     	;# 
  1469  038E                     	;# 
  1470  038F                     	;# 
  1471  0390                     	;# 
  1472  0391                     	;# 
  1473  0392                     	;# 
  1474  0393                     	;# 
  1475  0394                     	;# 
  1476  0395                     	;# 
  1477  0396                     	;# 
  1478  0397                     	;# 
  1479  0398                     	;# 
  1480  0399                     	;# 
  1481  039D                     	;# 
  1482  039E                     	;# 
  1483  039F                     	;# 
  1484  0415                     	;# 
  1485  0416                     	;# 
  1486  0417                     	;# 
  1487  041C                     	;# 
  1488  041D                     	;# 
  1489  041E                     	;# 
  1490  0498                     	;# 
  1491  0498                     	;# 
  1492  0499                     	;# 
  1493  049A                     	;# 
  1494  049B                     	;# 
  1495  049B                     	;# 
  1496  049C                     	;# 
  1497  049D                     	;# 
  1498  049E                     	;# 
  1499  049F                     	;# 
  1500  0511                     	;# 
  1501  0515                     	;# 
  1502  0617                     	;# 
  1503  0618                     	;# 
  1504  0619                     	;# 
  1505  0619                     	;# 
  1506  061A                     	;# 
  1507  061B                     	;# 
  1508  061C                     	;# 
  1509  061C                     	;# 
  1510  0691                     	;# 
  1511  0692                     	;# 
  1512  0693                     	;# 
  1513  0694                     	;# 
  1514  0695                     	;# 
  1515  0696                     	;# 
  1516  0697                     	;# 
  1517  0698                     	;# 
  1518  0699                     	;# 
  1519  069A                     	;# 
  1520  069B                     	;# 
  1521  069C                     	;# 
  1522  069D                     	;# 
  1523  069E                     	;# 
  1524  069F                     	;# 
  1525  0E0F                     	;# 
  1526  0E10                     	;# 
  1527  0E11                     	;# 
  1528  0E12                     	;# 
  1529  0E13                     	;# 
  1530  0E14                     	;# 
  1531  0E15                     	;# 
  1532  0E17                     	;# 
  1533  0E20                     	;# 
  1534  0E21                     	;# 
  1535  0E22                     	;# 
  1536  0E24                     	;# 
  1537  0E25                     	;# 
  1538  0E28                     	;# 
  1539  0E29                     	;# 
  1540  0E2A                     	;# 
  1541  0E2B                     	;# 
  1542  0E90                     	;# 
  1543  0E91                     	;# 
  1544  0E92                     	;# 
  1545  0E93                     	;# 
  1546  0E94                     	;# 
  1547  0E95                     	;# 
  1548  0E96                     	;# 
  1549  0E97                     	;# 
  1550  0E98                     	;# 
  1551  0E99                     	;# 
  1552  0E9A                     	;# 
  1553  0E9B                     	;# 
  1554  0E9C                     	;# 
  1555  0E9D                     	;# 
  1556  0E9E                     	;# 
  1557  0E9F                     	;# 
  1558  0EA0                     	;# 
  1559  0EA1                     	;# 
  1560  0EA2                     	;# 
  1561  0EA3                     	;# 
  1562  0EA4                     	;# 
  1563  0EA5                     	;# 
  1564  0EA6                     	;# 
  1565  0EA7                     	;# 
  1566  0EA8                     	;# 
  1567  0EA9                     	;# 
  1568  0EAA                     	;# 
  1569  0EAB                     	;# 
  1570  0EAC                     	;# 
  1571  0EAD                     	;# 
  1572  0EAE                     	;# 
  1573  0EAF                     	;# 
  1574  0EB0                     	;# 
  1575  0EB1                     	;# 
  1576  0EB2                     	;# 
  1577  0F0F                     	;# 
  1578  0F10                     	;# 
  1579  0F11                     	;# 
  1580  0F12                     	;# 
  1581  0F13                     	;# 
  1582  0F14                     	;# 
  1583  0F15                     	;# 
  1584  0F16                     	;# 
  1585  0F17                     	;# 
  1586  0F18                     	;# 
  1587  0F19                     	;# 
  1588  0F1A                     	;# 
  1589  0F1B                     	;# 
  1590  0F1C                     	;# 
  1591  0F1D                     	;# 
  1592  0F1E                     	;# 
  1593  0F1F                     	;# 
  1594  0F20                     	;# 
  1595  0F21                     	;# 
  1596  0F22                     	;# 
  1597  0F23                     	;# 
  1598  0F24                     	;# 
  1599  0F25                     	;# 
  1600  0F26                     	;# 
  1601  0F27                     	;# 
  1602  0F28                     	;# 
  1603  0F29                     	;# 
  1604  0F2A                     	;# 
  1605  0F2B                     	;# 
  1606  0F2C                     	;# 
  1607  0F2D                     	;# 
  1608  0F2E                     	;# 
  1609  0F2F                     	;# 
  1610  0F30                     	;# 
  1611  0F31                     	;# 
  1612  0F32                     	;# 
  1613  0F33                     	;# 
  1614  0F34                     	;# 
  1615  0F35                     	;# 
  1616  0F36                     	;# 
  1617  0F37                     	;# 
  1618  0FE4                     	;# 
  1619  0FE5                     	;# 
  1620  0FE6                     	;# 
  1621  0FE7                     	;# 
  1622  0FE8                     	;# 
  1623  0FE9                     	;# 
  1624  0FEA                     	;# 
  1625  0FEB                     	;# 
  1626  0FED                     	;# 
  1627  0FEE                     	;# 
  1628  0FEF                     	;# 
  1629  0000                     	;# 
  1630  0001                     	;# 
  1631  0002                     	;# 
  1632  0003                     	;# 
  1633  0004                     	;# 
  1634  0005                     	;# 
  1635  0006                     	;# 
  1636  0007                     	;# 
  1637  0008                     	;# 
  1638  0009                     	;# 
  1639  000A                     	;# 
  1640  000B                     	;# 
  1641  000C                     	;# 
  1642  000D                     	;# 
  1643  000E                     	;# 
  1644  000F                     	;# 
  1645  0010                     	;# 
  1646  0011                     	;# 
  1647  0012                     	;# 
  1648  0013                     	;# 
  1649  0015                     	;# 
  1650  0016                     	;# 
  1651  0016                     	;# 
  1652  0017                     	;# 
  1653  0018                     	;# 
  1654  0019                     	;# 
  1655  001A                     	;# 
  1656  001B                     	;# 
  1657  001C                     	;# 
  1658  008C                     	;# 
  1659  008D                     	;# 
  1660  008E                     	;# 
  1661  008F                     	;# 
  1662  0090                     	;# 
  1663  0091                     	;# 
  1664  0092                     	;# 
  1665  0093                     	;# 
  1666  0095                     	;# 
  1667  0096                     	;# 
  1668  0097                     	;# 
  1669  0098                     	;# 
  1670  0099                     	;# 
  1671  009A                     	;# 
  1672  009B                     	;# 
  1673  009B                     	;# 
  1674  009C                     	;# 
  1675  009D                     	;# 
  1676  009E                     	;# 
  1677  009F                     	;# 
  1678  010C                     	;# 
  1679  010D                     	;# 
  1680  010E                     	;# 
  1681  010F                     	;# 
  1682  0110                     	;# 
  1683  0111                     	;# 
  1684  0112                     	;# 
  1685  0113                     	;# 
  1686  0114                     	;# 
  1687  0115                     	;# 
  1688  0116                     	;# 
  1689  0117                     	;# 
  1690  0118                     	;# 
  1691  0119                     	;# 
  1692  011A                     	;# 
  1693  011B                     	;# 
  1694  011B                     	;# 
  1695  011C                     	;# 
  1696  018C                     	;# 
  1697  018D                     	;# 
  1698  018E                     	;# 
  1699  018F                     	;# 
  1700  0190                     	;# 
  1701  0191                     	;# 
  1702  0191                     	;# 
  1703  0192                     	;# 
  1704  0193                     	;# 
  1705  0193                     	;# 
  1706  0194                     	;# 
  1707  0195                     	;# 
  1708  0196                     	;# 
  1709  0197                     	;# 
  1710  0199                     	;# 
  1711  0199                     	;# 
  1712  0199                     	;# 
  1713  019A                     	;# 
  1714  019A                     	;# 
  1715  019A                     	;# 
  1716  019B                     	;# 
  1717  019B                     	;# 
  1718  019B                     	;# 
  1719  019B                     	;# 
  1720  019B                     	;# 
  1721  019C                     	;# 
  1722  019C                     	;# 
  1723  019C                     	;# 
  1724  019D                     	;# 
  1725  019D                     	;# 
  1726  019D                     	;# 
  1727  019E                     	;# 
  1728  019E                     	;# 
  1729  019E                     	;# 
  1730  019F                     	;# 
  1731  019F                     	;# 
  1732  019F                     	;# 
  1733  019F                     	;# 
  1734  019F                     	;# 
  1735  020C                     	;# 
  1736  020D                     	;# 
  1737  020E                     	;# 
  1738  020F                     	;# 
  1739  0210                     	;# 
  1740  0211                     	;# 
  1741  0211                     	;# 
  1742  0212                     	;# 
  1743  0212                     	;# 
  1744  0213                     	;# 
  1745  0213                     	;# 
  1746  0214                     	;# 
  1747  0214                     	;# 
  1748  0215                     	;# 
  1749  0215                     	;# 
  1750  0215                     	;# 
  1751  0215                     	;# 
  1752  0216                     	;# 
  1753  0216                     	;# 
  1754  0217                     	;# 
  1755  0217                     	;# 
  1756  028C                     	;# 
  1757  028D                     	;# 
  1758  028E                     	;# 
  1759  028F                     	;# 
  1760  0290                     	;# 
  1761  0291                     	;# 
  1762  0291                     	;# 
  1763  0292                     	;# 
  1764  0293                     	;# 
  1765  0293                     	;# 
  1766  0298                     	;# 
  1767  0298                     	;# 
  1768  0299                     	;# 
  1769  029A                     	;# 
  1770  029A                     	;# 
  1771  029E                     	;# 
  1772  030C                     	;# 
  1773  030D                     	;# 
  1774  030E                     	;# 
  1775  030F                     	;# 
  1776  0310                     	;# 
  1777  038C                     	;# 
  1778  038D                     	;# 
  1779  038E                     	;# 
  1780  038F                     	;# 
  1781  0390                     	;# 
  1782  0391                     	;# 
  1783  0392                     	;# 
  1784  0393                     	;# 
  1785  0394                     	;# 
  1786  0395                     	;# 
  1787  0396                     	;# 
  1788  0397                     	;# 
  1789  0398                     	;# 
  1790  0399                     	;# 
  1791  039D                     	;# 
  1792  039E                     	;# 
  1793  039F                     	;# 
  1794  0415                     	;# 
  1795  0416                     	;# 
  1796  0417                     	;# 
  1797  041C                     	;# 
  1798  041D                     	;# 
  1799  041E                     	;# 
  1800  0498                     	;# 
  1801  0498                     	;# 
  1802  0499                     	;# 
  1803  049A                     	;# 
  1804  049B                     	;# 
  1805  049B                     	;# 
  1806  049C                     	;# 
  1807  049D                     	;# 
  1808  049E                     	;# 
  1809  049F                     	;# 
  1810  0511                     	;# 
  1811  0515                     	;# 
  1812  0617                     	;# 
  1813  0618                     	;# 
  1814  0619                     	;# 
  1815  0619                     	;# 
  1816  061A                     	;# 
  1817  061B                     	;# 
  1818  061C                     	;# 
  1819  061C                     	;# 
  1820  0691                     	;# 
  1821  0692                     	;# 
  1822  0693                     	;# 
  1823  0694                     	;# 
  1824  0695                     	;# 
  1825  0696                     	;# 
  1826  0697                     	;# 
  1827  0698                     	;# 
  1828  0699                     	;# 
  1829  069A                     	;# 
  1830  069B                     	;# 
  1831  069C                     	;# 
  1832  069D                     	;# 
  1833  069E                     	;# 
  1834  069F                     	;# 
  1835  0E0F                     	;# 
  1836  0E10                     	;# 
  1837  0E11                     	;# 
  1838  0E12                     	;# 
  1839  0E13                     	;# 
  1840  0E14                     	;# 
  1841  0E15                     	;# 
  1842  0E17                     	;# 
  1843  0E20                     	;# 
  1844  0E21                     	;# 
  1845  0E22                     	;# 
  1846  0E24                     	;# 
  1847  0E25                     	;# 
  1848  0E28                     	;# 
  1849  0E29                     	;# 
  1850  0E2A                     	;# 
  1851  0E2B                     	;# 
  1852  0E90                     	;# 
  1853  0E91                     	;# 
  1854  0E92                     	;# 
  1855  0E93                     	;# 
  1856  0E94                     	;# 
  1857  0E95                     	;# 
  1858  0E96                     	;# 
  1859  0E97                     	;# 
  1860  0E98                     	;# 
  1861  0E99                     	;# 
  1862  0E9A                     	;# 
  1863  0E9B                     	;# 
  1864  0E9C                     	;# 
  1865  0E9D                     	;# 
  1866  0E9E                     	;# 
  1867  0E9F                     	;# 
  1868  0EA0                     	;# 
  1869  0EA1                     	;# 
  1870  0EA2                     	;# 
  1871  0EA3                     	;# 
  1872  0EA4                     	;# 
  1873  0EA5                     	;# 
  1874  0EA6                     	;# 
  1875  0EA7                     	;# 
  1876  0EA8                     	;# 
  1877  0EA9                     	;# 
  1878  0EAA                     	;# 
  1879  0EAB                     	;# 
  1880  0EAC                     	;# 
  1881  0EAD                     	;# 
  1882  0EAE                     	;# 
  1883  0EAF                     	;# 
  1884  0EB0                     	;# 
  1885  0EB1                     	;# 
  1886  0EB2                     	;# 
  1887  0F0F                     	;# 
  1888  0F10                     	;# 
  1889  0F11                     	;# 
  1890  0F12                     	;# 
  1891  0F13                     	;# 
  1892  0F14                     	;# 
  1893  0F15                     	;# 
  1894  0F16                     	;# 
  1895  0F17                     	;# 
  1896  0F18                     	;# 
  1897  0F19                     	;# 
  1898  0F1A                     	;# 
  1899  0F1B                     	;# 
  1900  0F1C                     	;# 
  1901  0F1D                     	;# 
  1902  0F1E                     	;# 
  1903  0F1F                     	;# 
  1904  0F20                     	;# 
  1905  0F21                     	;# 
  1906  0F22                     	;# 
  1907  0F23                     	;# 
  1908  0F24                     	;# 
  1909  0F25                     	;# 
  1910  0F26                     	;# 
  1911  0F27                     	;# 
  1912  0F28                     	;# 
  1913  0F29                     	;# 
  1914  0F2A                     	;# 
  1915  0F2B                     	;# 
  1916  0F2C                     	;# 
  1917  0F2D                     	;# 
  1918  0F2E                     	;# 
  1919  0F2F                     	;# 
  1920  0F30                     	;# 
  1921  0F31                     	;# 
  1922  0F32                     	;# 
  1923  0F33                     	;# 
  1924  0F34                     	;# 
  1925  0F35                     	;# 
  1926  0F36                     	;# 
  1927  0F37                     	;# 
  1928  0FE4                     	;# 
  1929  0FE5                     	;# 
  1930  0FE6                     	;# 
  1931  0FE7                     	;# 
  1932  0FE8                     	;# 
  1933  0FE9                     	;# 
  1934  0FEA                     	;# 
  1935  0FEB                     	;# 
  1936  0FED                     	;# 
  1937  0FEE                     	;# 
  1938  0FEF                     	;# 
  1939                           
  1940                           	psect	stringtext1
  1941  02D6                     __pstringtext1:	
  1942  02D6                     _OCD_threshold_setting:	
  1943  02D6  3411               	retlw	17
  1944  02D7  3400               	retlw	0
  1945  02D8  3416               	retlw	22
  1946  02D9  3400               	retlw	0
  1947  02DA  341C               	retlw	28
  1948  02DB  3400               	retlw	0
  1949  02DC  3421               	retlw	33
  1950  02DD  3400               	retlw	0
  1951  02DE  3427               	retlw	39
  1952  02DF  3400               	retlw	0
  1953  02E0  342C               	retlw	44
  1954  02E1  3400               	retlw	0
  1955  02E2  3432               	retlw	50
  1956  02E3  3400               	retlw	0
  1957  02E4  3438               	retlw	56
  1958  02E5  3400               	retlw	0
  1959  02E6  343D               	retlw	61
  1960  02E7  3400               	retlw	0
  1961  02E8  3443               	retlw	67
  1962  02E9  3400               	retlw	0
  1963  02EA  3448               	retlw	72
  1964  02EB  3400               	retlw	0
  1965  02EC  344E               	retlw	78
  1966  02ED  3400               	retlw	0
  1967  02EE  3453               	retlw	83
  1968  02EF  3400               	retlw	0
  1969  02F0  3459               	retlw	89
  1970  02F1  3400               	retlw	0
  1971  02F2  345E               	retlw	94
  1972  02F3  3400               	retlw	0
  1973  02F4  3464               	retlw	100
  1974  02F5  3400               	retlw	0
  1975  02F6                     __end_of_OCD_threshold_setting:	
  1976                           
  1977                           	psect	stringtext2
  1978  032E                     __pstringtext2:	
  1979  032E                     _OCD_delay_setting:	
  1980  032E  3408               	retlw	8
  1981  032F  3400               	retlw	0
  1982  0330  3414               	retlw	20
  1983  0331  3400               	retlw	0
  1984  0332  3428               	retlw	40
  1985  0333  3400               	retlw	0
  1986  0334  3450               	retlw	80
  1987  0335  3400               	retlw	0
  1988  0336  34A0               	retlw	160
  1989  0337  3400               	retlw	0
  1990  0338  3440               	retlw	64
  1991  0339  3401               	retlw	1
  1992  033A  3480               	retlw	128
  1993  033B  3402               	retlw	2
  1994  033C  3400               	retlw	0
  1995  033D  3405               	retlw	5
  1996  033E                     __end_of_OCD_delay_setting:	
  1997                           
  1998                           	psect	stringtext3
  1999  033E                     __pstringtext3:	
  2000  033E                     _SCD_threshold_setting:	
  2001  033E  342C               	retlw	44
  2002  033F  3400               	retlw	0
  2003  0340  3443               	retlw	67
  2004  0341  3400               	retlw	0
  2005  0342  3459               	retlw	89
  2006  0343  3400               	retlw	0
  2007  0344  346F               	retlw	111
  2008  0345  3400               	retlw	0
  2009  0346  3485               	retlw	133
  2010  0347  3400               	retlw	0
  2011  0348  349B               	retlw	155
  2012  0349  3400               	retlw	0
  2013  034A  34B2               	retlw	178
  2014  034B  3400               	retlw	0
  2015  034C  34C8               	retlw	200
  2016  034D  3400               	retlw	0
  2017  034E                     __end_of_SCD_threshold_setting:	
  2018                           
  2019                           	psect	stringtext4
  2020  039E                     __pstringtext4:	
  2021  039E                     _OV_delay_setting:	
  2022  039E  3401               	retlw	1
  2023  039F  3400               	retlw	0
  2024  03A0  3402               	retlw	2
  2025  03A1  3400               	retlw	0
  2026  03A2  3404               	retlw	4
  2027  03A3  3400               	retlw	0
  2028  03A4  3408               	retlw	8
  2029  03A5  3400               	retlw	0
  2030  03A6                     __end_of_OV_delay_setting:	
  2031                           
  2032                           	psect	stringtext5
  2033  03A6                     __pstringtext5:	
  2034  03A6                     _UV_delay_setting:	
  2035  03A6  3401               	retlw	1
  2036  03A7  3400               	retlw	0
  2037  03A8  3404               	retlw	4
  2038  03A9  3400               	retlw	0
  2039  03AA  3408               	retlw	8
  2040  03AB  3400               	retlw	0
  2041  03AC  3410               	retlw	16
  2042  03AD  3400               	retlw	0
  2043  03AE                     __end_of_UV_delay_setting:	
  2044                           
  2045                           	psect	stringtext6
  2046  03AE                     __pstringtext6:	
  2047  03AE                     _SCD_delay_setting:	
  2048  03AE  3446               	retlw	70
  2049  03AF  3400               	retlw	0
  2050  03B0  3464               	retlw	100
  2051  03B1  3400               	retlw	0
  2052  03B2  34C8               	retlw	200
  2053  03B3  3400               	retlw	0
  2054  03B4  3490               	retlw	144
  2055  03B5  3401               	retlw	1
  2056  03B6                     __end_of_SCD_delay_setting:	
  2057                           
  2058                           	psect	stringtext7
  2059  026C                     __pstringtext7:	
  2060  026C                     _ATmega328_address:	
  2061  026C  3402               	retlw	2
  2062  026D  3400               	retlw	0
  2063  026E                     __end_of_ATmega328_address:	
  2064  0016                     _TMR1	set	22
  2065  000B                     _INTCONbits	set	11
  2066  0018                     _T1CONbits	set	24
  2067  0011                     _PIR1bits	set	17
  2068  0090                     _TRISEbits	set	144
  2069  008C                     _TRISAbits	set	140
  2070  008E                     _TRISCbits	set	142
  2071  008D                     _TRISBbits	set	141
  2072  0091                     _PIE1bits	set	145
  2073  0476                     _TRISC6	set	1142
  2074  0477                     _TRISC7	set	1143
  2075  04CF                     _SPLLEN	set	1231
  2076  04CE                     _IRCF3	set	1230
  2077  04CD                     _IRCF2	set	1229
  2078  04CC                     _IRCF1	set	1228
  2079  04CB                     _IRCF0	set	1227
  2080  04C9                     _SCS1	set	1225
  2081  04C8                     _SCS0	set	1224
  2082  0110                     _LATEbits	set	272
  2083  010C                     _LATAbits	set	268
  2084  019A                     _TX1REG	set	410
  2085  0199                     _RC1REG	set	409
  2086  019D                     _RC1STAbits	set	413
  2087  019B                     _SPBRG	set	411
  2088  018E                     _ANSELCbits	set	398
  2089  018D                     _ANSELBbits	set	397
  2090  0CF5                     _TXEN	set	3317
  2091  0CEC                     _CREN	set	3308
  2092  0CEF                     _SPEN	set	3311
  2093  0CF4                     _SYNC	set	3316
  2094  0CF2                     _BRGH	set	3314
  2095  0216                     _SSPCON2bits	set	534
  2096  0211                     _SSPBUF	set	529
  2097  0212                     _SSPADD	set	530
  2098  0215                     _SSPCONbits	set	533
  2099  0E24                     _RXPPSbits	set	3620
  2100  0E20                     _SSPCLKPPSbits	set	3616
  2101  0E21                     _SSPDATPPSbits	set	3617
  2102  0E0F                     _PPSLOCKbits	set	3599
  2103  0E0F                     _PPSLOCK	set	3599
  2104  0E9A                     _RB2PPSbits	set	3738
  2105  0EA5                     _RC5PPSbits	set	3749
  2106  0EA4                     _RC4PPSbits	set	3748
  2107  026E                     STR_1:	
  2108  026E  344E               	retlw	78	;'N'
  2109  026F  346F               	retlw	111	;'o'
  2110  0270  3477               	retlw	119	;'w'
  2111  0271  3420               	retlw	32	;' '
  2112  0272  3463               	retlw	99	;'c'
  2113  0273  346F               	retlw	111	;'o'
  2114  0274  346D               	retlw	109	;'m'
  2115  0275  346D               	retlw	109	;'m'
  2116  0276  3475               	retlw	117	;'u'
  2117  0277  346E               	retlw	110	;'n'
  2118  0278  3469               	retlw	105	;'i'
  2119  0279  3463               	retlw	99	;'c'
  2120  027A  3461               	retlw	97	;'a'
  2121  027B  3474               	retlw	116	;'t'
  2122  027C  3469               	retlw	105	;'i'
  2123  027D  346E               	retlw	110	;'n'
  2124  027E  3467               	retlw	103	;'g'
  2125  027F  3420               	retlw	32	;' '
  2126  0280  3477               	retlw	119	;'w'
  2127  0281  3469               	retlw	105	;'i'
  2128  0282  3474               	retlw	116	;'t'
  2129  0283  3468               	retlw	104	;'h'
  2130  0284  3420               	retlw	32	;' '
  2131  0285  3442               	retlw	66	;'B'
  2132  0286  3451               	retlw	81	;'Q'
  2133  0287  3437               	retlw	55	;'7'
  2134  0288  3436               	retlw	54	;'6'
  2135  0289  3439               	retlw	57	;'9'
  2136  028A  3432               	retlw	50	;'2'
  2137  028B  3430               	retlw	48	;'0'
  2138  028C  3420               	retlw	32	;' '
  2139  028D  3441               	retlw	65	;'A'
  2140  028E  3446               	retlw	70	;'F'
  2141  028F  3445               	retlw	69	;'E'
  2142  0290  340A               	retlw	10
  2143  0291  340D               	retlw	13
  2144  0292  3400               	retlw	0
  2145                           
  2146                           	psect	stringtext8
  2147  0000                     __pstringtext8:	
  2148                           
  2149                           ; #config settings
  2150  0000                     
  2151                           	psect	cinit
  2152  001F                     start_initialization:	
  2153  001F                     __initialization:	
  2154                           
  2155                           ; Clear objects allocated to COMMON
  2156  001F  01FC               	clrf	__pbssCOMMON& (0+127)
  2157                           
  2158                           ; Clear objects allocated to BANK0
  2159  0020  3037               	movlw	low __pbssBANK0
  2160  0021  0084               	movwf	4
  2161  0022  3000               	movlw	high __pbssBANK0
  2162  0023  0085               	movwf	5
  2163  0024  300D               	movlw	13
  2164  0025  3183  23CE         	fcall	clear_ram0
  2165  0027                     end_of_initialization:	
  2166                           ;End of C runtime variable initialization code
  2167                           
  2168  0027                     __end_of__initialization:	
  2169  0027  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2170  0028  0020               	movlb	0
  2171  0029  3182  2A44         	ljmp	_main	;jump to C main() function
  2172                           
  2173                           	psect	bssCOMMON
  2174  007C                     __pbssCOMMON:	
  2175  007C                     _toggleColor:	
  2176  007C                     	ds	1
  2177                           
  2178                           	psect	bssBANK0
  2179  0037                     __pbssBANK0:	
  2180  0037                     _cellVoltages:	
  2181  0037                     	ds	10
  2182  0041                     myIsr@count:	
  2183  0041                     	ds	1
  2184  0042                     _tmr1_flag:	
  2185  0042                     	ds	1
  2186  0043                     _currState:	
  2187  0043                     	ds	1
  2188                           
  2189                           	psect	clrtext
  2190  03CE                     clear_ram0:	
  2191                           ;	Called with FSR0 containing the base address, and
  2192                           ;	WREG with the size to clear
  2193                           
  2194  03CE  0064               	clrwdt	;clear the watchdog before getting into this loop
  2195  03CF                     clrloop0:	
  2196  03CF  0180               	clrf	0	;clear RAM location pointed to by FSR
  2197  03D0  3101               	addfsr 0,1
  2198  03D1  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2199  03D2  2BCF               	goto	clrloop0	;have we reached the end yet?
  2200  03D3  3400               	retlw	0	;all done for this memory range, return
  2201                           
  2202                           	psect	cstackCOMMON
  2203  0070                     __pcstackCOMMON:	
  2204  0070                     ?_initClock:	
  2205  0070                     ?_init_GPIO:	
  2206                           ; 1 bytes @ 0x0
  2207                           
  2208  0070                     ?_init_I2C:	
  2209                           ; 1 bytes @ 0x0
  2210                           
  2211  0070                     ?_init_TMR1:	
  2212                           ; 1 bytes @ 0x0
  2213                           
  2214  0070                     ?_init_RGB:	
  2215                           ; 1 bytes @ 0x0
  2216                           
  2217  0070                     ?_statemachine:	
  2218                           ; 1 bytes @ 0x0
  2219                           
  2220  0070                     ?_RGB_AWAIT_AFE_CONN:	
  2221                           ; 1 bytes @ 0x0
  2222                           
  2223  0070                     ?_init_AFE:	
  2224                           ; 1 bytes @ 0x0
  2225                           
  2226  0070                     ?_internal_16:	
  2227                           ; 1 bytes @ 0x0
  2228                           
  2229  0070                     ?_myIsr:	
  2230                           ; 1 bytes @ 0x0
  2231                           
  2232  0070                     ??_myIsr:	
  2233                           ; 1 bytes @ 0x0
  2234                           
  2235  0070                     ?_main:	
  2236                           ; 1 bytes @ 0x0
  2237                           
  2238  0070                     ?_EUSART_Write:	
  2239                           ; 1 bytes @ 0x0
  2240                           
  2241  0070                     ?_send_I2C_startBit:	
  2242                           ; 1 bytes @ 0x0
  2243                           
  2244  0070                     ?_send_I2C_stopBit:	
  2245                           ; 1 bytes @ 0x0
  2246                           
  2247  0070                     ?_send_I2C_NACK:	
  2248                           ; 1 bytes @ 0x0
  2249                           
  2250                           
  2251                           ; 1 bytes @ 0x0
  2252  0070                     	ds	1
  2253  0071                     ??_initClock:	
  2254  0071                     ??_init_GPIO:	
  2255                           ; 1 bytes @ 0x1
  2256                           
  2257  0071                     ??_init_I2C:	
  2258                           ; 1 bytes @ 0x1
  2259                           
  2260  0071                     ??_init_TMR1:	
  2261                           ; 1 bytes @ 0x1
  2262                           
  2263  0071                     ??_init_RGB:	
  2264                           ; 1 bytes @ 0x1
  2265                           
  2266  0071                     ?_RGB_color:	
  2267                           ; 1 bytes @ 0x1
  2268                           
  2269  0071                     ??_init_AFE:	
  2270                           ; 1 bytes @ 0x1
  2271                           
  2272  0071                     ??_internal_16:	
  2273                           ; 1 bytes @ 0x1
  2274                           
  2275  0071                     ??_EUSART_Write:	
  2276                           ; 1 bytes @ 0x1
  2277                           
  2278  0071                     ?_send_I2C_data:	
  2279                           ; 1 bytes @ 0x1
  2280                           
  2281  0071                     ?_send_I2C_controlByte:	
  2282                           ; 1 bytes @ 0x1
  2283                           
  2284  0071                     ??_send_I2C_startBit:	
  2285                           ; 1 bytes @ 0x1
  2286                           
  2287  0071                     ??_send_I2C_stopBit:	
  2288                           ; 1 bytes @ 0x1
  2289                           
  2290  0071                     ??_send_I2C_NACK:	
  2291                           ; 1 bytes @ 0x1
  2292                           
  2293  0071                     ?_read_I2C_data:	
  2294                           ; 1 bytes @ 0x1
  2295                           
  2296  0071                     ?___aldiv:	
  2297                           ; 2 bytes @ 0x1
  2298                           
  2299  0071                     EUSART_Write@txData:	
  2300                           ; 4 bytes @ 0x1
  2301                           
  2302  0071                     send_I2C_data@databyte:	
  2303                           ; 1 bytes @ 0x1
  2304                           
  2305  0071                     send_I2C_controlByte@BlockAddress:	
  2306                           ; 2 bytes @ 0x1
  2307                           
  2308  0071                     RGB_color@color:	
  2309                           ; 2 bytes @ 0x1
  2310                           
  2311  0071                     ___aldiv@divisor:	
  2312                           ; 2 bytes @ 0x1
  2313                           
  2314                           
  2315                           ; 4 bytes @ 0x1
  2316  0071                     	ds	1
  2317  0072                     ?_EUSART_Write_Text:	
  2318  0072                     EUSART_Write_Text@text:	
  2319                           ; 1 bytes @ 0x2
  2320                           
  2321                           
  2322                           ; 2 bytes @ 0x2
  2323  0072                     	ds	1
  2324  0073                     ??_RGB_AWAIT_AFE_CONN:	
  2325  0073                     ??_RGB_color:	
  2326                           ; 1 bytes @ 0x3
  2327                           
  2328  0073                     ??_send_I2C_data:	
  2329                           ; 1 bytes @ 0x3
  2330                           
  2331  0073                     ??_read_I2C_data:	
  2332                           ; 1 bytes @ 0x3
  2333                           
  2334  0073                     send_I2C_controlByte@RW_bit:	
  2335                           ; 1 bytes @ 0x3
  2336                           
  2337                           
  2338                           ; 2 bytes @ 0x3
  2339  0073                     	ds	1
  2340  0074                     ??_EUSART_Write_Text:	
  2341                           
  2342                           ; 1 bytes @ 0x4
  2343  0074                     	ds	1
  2344  0075                     ??_send_I2C_controlByte:	
  2345  0075                     ?_I2C_writeRegister:	
  2346                           ; 1 bytes @ 0x5
  2347                           
  2348  0075                     ?_readRegister:	
  2349                           ; 1 bytes @ 0x5
  2350                           
  2351  0075                     EUSART_Write_Text@i:	
  2352                           ; 2 bytes @ 0x5
  2353                           
  2354  0075                     I2C_writeRegister@slaveAddress:	
  2355                           ; 2 bytes @ 0x5
  2356                           
  2357  0075                     readRegister@slaveAddress:	
  2358                           ; 2 bytes @ 0x5
  2359                           
  2360  0075                     ___aldiv@dividend:	
  2361                           ; 2 bytes @ 0x5
  2362                           
  2363                           
  2364                           ; 4 bytes @ 0x5
  2365  0075                     	ds	2
  2366  0077                     I2C_writeRegister@regAddress:	
  2367  0077                     readRegister@regAddress:	
  2368                           ; 2 bytes @ 0x7
  2369                           
  2370                           
  2371                           ; 2 bytes @ 0x7
  2372  0077                     	ds	2
  2373  0079                     ??_readRegister:	
  2374  0079                     ??___aldiv:	
  2375                           ; 1 bytes @ 0x9
  2376                           
  2377  0079                     I2C_writeRegister@data:	
  2378                           ; 1 bytes @ 0x9
  2379                           
  2380                           
  2381                           ; 2 bytes @ 0x9
  2382  0079                     	ds	1
  2383  007A                     EUSART_Initialize@x:	
  2384                           
  2385                           ; 2 bytes @ 0xA
  2386  007A                     	ds	1
  2387  007B                     ??_beginAFEcommunication:	
  2388  007B                     ??_I2C_writeRegister:	
  2389                           ; 1 bytes @ 0xB
  2390                           
  2391                           
  2392                           ; 1 bytes @ 0xB
  2393  007B                     	ds	1
  2394                           
  2395                           	psect	cstackBANK0
  2396  0020                     __pcstackBANK0:	
  2397  0020                     ?_beginAFEcommunication:	
  2398  0020                     ___aldiv@counter:	
  2399                           ; 2 bytes @ 0x0
  2400                           
  2401                           
  2402                           ; 1 bytes @ 0x0
  2403  0020                     	ds	1
  2404  0021                     ___aldiv@sign:	
  2405                           
  2406                           ; 1 bytes @ 0x1
  2407  0021                     	ds	1
  2408  0022                     beginAFEcommunication@errCode:	
  2409  0022                     ___aldiv@quotient:	
  2410                           ; 2 bytes @ 0x2
  2411                           
  2412                           
  2413                           ; 4 bytes @ 0x2
  2414  0022                     	ds	2
  2415  0024                     beginAFEcommunication@i:	
  2416                           
  2417                           ; 2 bytes @ 0x4
  2418  0024                     	ds	2
  2419  0026                     ?_EUSART_Initialize:	
  2420  0026                     ??_statemachine:	
  2421                           ; 1 bytes @ 0x6
  2422                           
  2423  0026                     EUSART_Initialize@baudrate:	
  2424                           ; 1 bytes @ 0x6
  2425                           
  2426                           
  2427                           ; 4 bytes @ 0x6
  2428  0026                     	ds	1
  2429  0027                     statemachine@success:	
  2430                           
  2431                           ; 1 bytes @ 0x7
  2432  0027                     	ds	3
  2433  002A                     ??_EUSART_Initialize:	
  2434                           
  2435                           ; 1 bytes @ 0xA
  2436  002A                     	ds	12
  2437  0036                     ??_main:	
  2438                           
  2439                           ; 1 bytes @ 0x16
  2440  0036                     	ds	1
  2441                           
  2442                           	psect	maintext
  2443  0244                     __pmaintext:	
  2444 ;;
  2445 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2446 ;;
  2447 ;; *************** function _main *****************
  2448 ;; Defined at:
  2449 ;;		line 76 in file "main.c"
  2450 ;; Parameters:    Size  Location     Type
  2451 ;;		None
  2452 ;; Auto vars:     Size  Location     Type
  2453 ;;		None
  2454 ;; Return value:  Size  Location     Type
  2455 ;;                  1    wreg      void 
  2456 ;; Registers used:
  2457 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2458 ;; Tracked objects:
  2459 ;;		On entry : B1F/0
  2460 ;;		On exit  : 0/0
  2461 ;;		Unchanged: 0/0
  2462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2465 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2466 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2467 ;;Total ram usage:        1 bytes
  2468 ;; Hardware stack levels required when called:    5
  2469 ;; This function calls:
  2470 ;;		_EUSART_Initialize
  2471 ;;		_initClock
  2472 ;;		_init_GPIO
  2473 ;;		_init_I2C
  2474 ;;		_init_RGB
  2475 ;;		_init_TMR1
  2476 ;;		_statemachine
  2477 ;; This function is called by:
  2478 ;;		Startup code after reset
  2479 ;; This function uses a non-reentrant model
  2480 ;;
  2481                           
  2482                           
  2483                           ;psect for function _main
  2484  0244                     _main:	
  2485                           
  2486                           ;main.c: 79:     initClock();
  2487                           
  2488                           ;incstack = 0
  2489                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2490  0244  3183  23D9  3182   	fcall	_initClock
  2491                           
  2492                           ;main.c: 80:     init_GPIO();
  2493  0247  3181  21DE  3182   	fcall	_init_GPIO
  2494                           
  2495                           ;main.c: 81:     init_I2C();
  2496  024A  3183  235E  3182   	fcall	_init_I2C
  2497                           
  2498                           ;main.c: 82:     EUSART_Initialize(9600);
  2499  024D  3000               	movlw	0
  2500  024E  0020               	movlb	0	; select bank0
  2501  024F  00A9               	movwf	EUSART_Initialize@baudrate+3
  2502  0250  3000               	movlw	0
  2503  0251  00A8               	movwf	EUSART_Initialize@baudrate+2
  2504  0252  3025               	movlw	37
  2505  0253  00A7               	movwf	EUSART_Initialize@baudrate+1
  2506  0254  3080               	movlw	128
  2507  0255  00A6               	movwf	EUSART_Initialize@baudrate
  2508  0256  3180  202B  3182   	fcall	_EUSART_Initialize
  2509                           
  2510                           ;main.c: 83:     init_TMR1();
  2511  0259  3183  236E  3182   	fcall	_init_TMR1
  2512                           
  2513                           ;main.c: 84:     init_RGB();
  2514  025C  3183  23D4  3182   	fcall	_init_RGB
  2515  025F                     l1507:	
  2516                           
  2517                           ;main.c: 88:         statemachine();
  2518  025F  3181  219B  3182   	fcall	_statemachine
  2519                           
  2520                           ;main.c: 90:         _delay((unsigned long)((10)*(16000000/4000.0)));
  2521  0262  3034               	movlw	52
  2522  0263  0020               	movlb	0	; select bank0
  2523  0264  00B6               	movwf	??_main
  2524  0265  30F1               	movlw	241
  2525  0266                     u817:	
  2526  0266  0B89               	decfsz	9,f
  2527  0267  2A66               	goto	u817
  2528  0268  0BB6               	decfsz	??_main,f
  2529  0269  2A66               	goto	u817
  2530  026A  3200               	nop2
  2531  026B  2A5F               	goto	l1507
  2532  026C                     __end_of_main:	
  2533                           
  2534                           	psect	text1
  2535  019B                     __ptext1:	
  2536 ;; *************** function _statemachine *****************
  2537 ;; Defined at:
  2538 ;;		line 96 in file "main.c"
  2539 ;; Parameters:    Size  Location     Type
  2540 ;;		None
  2541 ;; Auto vars:     Size  Location     Type
  2542 ;;  success         1    7[BANK0 ] unsigned char 
  2543 ;; Return value:  Size  Location     Type
  2544 ;;                  1    wreg      void 
  2545 ;; Registers used:
  2546 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2547 ;; Tracked objects:
  2548 ;;		On entry : 0/0
  2549 ;;		On exit  : 0/0
  2550 ;;		Unchanged: 0/0
  2551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2553 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2554 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2555 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2556 ;;Total ram usage:        2 bytes
  2557 ;; Hardware stack levels used:    1
  2558 ;; Hardware stack levels required when called:    4
  2559 ;; This function calls:
  2560 ;;		_EUSART_Write_Text
  2561 ;;		_RGB_AWAIT_AFE_CONN
  2562 ;;		_RGB_color
  2563 ;;		_beginAFEcommunication
  2564 ;;		_init_AFE
  2565 ;; This function is called by:
  2566 ;;		_main
  2567 ;; This function uses a non-reentrant model
  2568 ;;
  2569                           
  2570                           
  2571                           ;psect for function _statemachine
  2572  019B                     _statemachine:	
  2573                           
  2574                           ;main.c: 98:     switch (currState) {
  2575                           
  2576                           ;incstack = 0
  2577                           ; Regs used in _statemachine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2578  019B  29CD               	goto	l1491
  2579  019C                     l1467:	
  2580                           
  2581                           ;main.c: 101:             if (tmr1_flag) {
  2582  019C  0020               	movlb	0	; select bank0
  2583  019D  0842               	movf	_tmr1_flag,w	;volatile
  2584  019E  1903               	btfsc	3,2
  2585  019F  0008               	return
  2586                           
  2587                           ;main.c: 102:                 tmr1_flag = 0;
  2588  01A0  01C2               	clrf	_tmr1_flag	;volatile
  2589                           
  2590                           ;main.c: 103:                 RGB_AWAIT_AFE_CONN();
  2591  01A1  3182  2293  3181   	fcall	_RGB_AWAIT_AFE_CONN
  2592                           
  2593                           ;main.c: 104:                  uint8_t success = beginAFEcommunication();
  2594  01A4  3181  2155  3181   	fcall	_beginAFEcommunication
  2595  01A7  0020               	movlb	0	; select bank0
  2596  01A8  0820               	movf	?_beginAFEcommunication,w
  2597  01A9  00A6               	movwf	??_statemachine
  2598  01AA  0826               	movf	??_statemachine,w
  2599  01AB  00A7               	movwf	statemachine@success
  2600                           
  2601                           ;main.c: 106:                 if (success) {
  2602  01AC  0827               	movf	statemachine@success,w
  2603  01AD  1903               	btfsc	3,2
  2604  01AE  0008               	return
  2605                           
  2606                           ;main.c: 107:                     T1CONbits.TMR1ON = 0;
  2607  01AF  1018               	bcf	24,0	;volatile
  2608                           
  2609                           ;main.c: 108:                     PIE1bits.TMR1IE = 0;
  2610  01B0  0021               	movlb	1	; select bank1
  2611  01B1  1011               	bcf	17,0	;volatile
  2612                           
  2613                           ;main.c: 109:                     RGB_color(0);
  2614  01B2  3000               	movlw	0
  2615  01B3  00F1               	movwf	RGB_color@color
  2616  01B4  00F2               	movwf	RGB_color@color+1
  2617  01B5  3182  22B5  3181   	fcall	_RGB_color
  2618                           
  2619                           ;main.c: 110:                     tmr1_flag = 0;
  2620  01B8  0020               	movlb	0	; select bank0
  2621  01B9  01C2               	clrf	_tmr1_flag	;volatile
  2622                           
  2623                           ;main.c: 113:                     _delay((unsigned long)((5)*(16000000/4000.0)));
  2624  01BA  301A               	movlw	26
  2625  01BB  0020               	movlb	0	; select bank0
  2626  01BC  00A6               	movwf	??_statemachine
  2627  01BD  30F8               	movlw	248
  2628  01BE                     u827:	
  2629  01BE  0B89               	decfsz	9,f
  2630  01BF  29BE               	goto	u827
  2631  01C0  0BA6               	decfsz	??_statemachine,f
  2632  01C1  29BE               	goto	u827
  2633  01C2  0000               	nop
  2634                           
  2635                           ;main.c: 114:                     EUSART_Write_Text("Now communicating with BQ76920 AFE\
      +                          n\r");
  2636  01C3  306E               	movlw	low (STR_1| (0+32768))
  2637  01C4  00F2               	movwf	EUSART_Write_Text@text
  2638  01C5  3082               	movlw	high (STR_1| (0+32768))
  2639  01C6  00F3               	movwf	EUSART_Write_Text@text+1
  2640  01C7  3183  2314         	fcall	_EUSART_Write_Text
  2641  01C9  0008               	return
  2642  01CA                     l1487:	
  2643                           
  2644                           ;main.c: 125:             init_AFE();
  2645  01CA  3183  23DC         	fcall	_init_AFE
  2646                           
  2647                           ;main.c: 130:             break;
  2648  01CC  0008               	return
  2649  01CD                     l1491:	
  2650                           
  2651                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2652                           ; Switch size 1, requested type "simple"
  2653                           ; Number of cases is 1, Range of values is 0 to 0
  2654                           ; switch strategies available:
  2655                           ; Name         Instructions Cycles
  2656                           ; simple_byte            4     3 (average)
  2657                           ; direct_byte            8     6 (fixed)
  2658                           ; jumptable            260     6 (fixed)
  2659                           ;	Chosen strategy is simple_byte
  2660  01CD  3000               	movlw	0
  2661  01CE  3A00               	xorlw	0	; case 0
  2662  01CF  1903               	skipnz
  2663  01D0  29D2               	goto	l1551
  2664  01D1  29DD               	goto	l115
  2665  01D2                     l1551:	
  2666                           
  2667                           ; Switch size 1, requested type "simple"
  2668                           ; Number of cases is 3, Range of values is 0 to 2
  2669                           ; switch strategies available:
  2670                           ; Name         Instructions Cycles
  2671                           ; simple_byte           10     6 (average)
  2672                           ; direct_byte           12     6 (fixed)
  2673                           ; jumptable            260     6 (fixed)
  2674                           ;	Chosen strategy is simple_byte
  2675  01D2  3000               	movlw	0
  2676  01D3  3A00               	xorlw	0	; case 0
  2677  01D4  1903               	skipnz
  2678  01D5  299C               	goto	l1467
  2679  01D6  3A01               	xorlw	1	; case 1
  2680  01D7  1903               	skipnz
  2681  01D8  29CA               	goto	l1487
  2682  01D9  3A03               	xorlw	3	; case 2
  2683  01DA  1903               	skipnz
  2684  01DB  29DD               	goto	l115
  2685  01DC  29DD               	goto	l115
  2686  01DD                     l115:	
  2687  01DD  0008               	return
  2688  01DE                     __end_of_statemachine:	
  2689                           
  2690                           	psect	text2
  2691  03DC                     __ptext2:	
  2692 ;; *************** function _init_AFE *****************
  2693 ;; Defined at:
  2694 ;;		line 137 in file "main.c"
  2695 ;; Parameters:    Size  Location     Type
  2696 ;;		None
  2697 ;; Auto vars:     Size  Location     Type
  2698 ;;		None
  2699 ;; Return value:  Size  Location     Type
  2700 ;;                  1    wreg      void 
  2701 ;; Registers used:
  2702 ;;		None
  2703 ;; Tracked objects:
  2704 ;;		On entry : 0/0
  2705 ;;		On exit  : 0/0
  2706 ;;		Unchanged: 0/0
  2707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2712 ;;Total ram usage:        0 bytes
  2713 ;; Hardware stack levels used:    1
  2714 ;; Hardware stack levels required when called:    1
  2715 ;; This function calls:
  2716 ;;		Nothing
  2717 ;; This function is called by:
  2718 ;;		_statemachine
  2719 ;; This function uses a non-reentrant model
  2720 ;;
  2721                           
  2722                           
  2723                           ;psect for function _init_AFE
  2724  03DC                     _init_AFE:	
  2725                           
  2726                           ;incstack = 0
  2727                           ; Regs used in _init_AFE: []
  2728  03DC  0008               	return
  2729  03DD                     __end_of_init_AFE:	
  2730                           
  2731                           	psect	text3
  2732  0155                     __ptext3:	
  2733 ;; *************** function _beginAFEcommunication *****************
  2734 ;; Defined at:
  2735 ;;		line 7 in file "BQ76920.c"
  2736 ;; Parameters:    Size  Location     Type
  2737 ;;		None
  2738 ;; Auto vars:     Size  Location     Type
  2739 ;;  i               2    4[BANK0 ] int 
  2740 ;;  errCode         2    2[BANK0 ] int 
  2741 ;; Return value:  Size  Location     Type
  2742 ;;                  2    0[BANK0 ] int 
  2743 ;; Registers used:
  2744 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2745 ;; Tracked objects:
  2746 ;;		On entry : 0/0
  2747 ;;		On exit  : 0/0
  2748 ;;		Unchanged: 0/0
  2749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2750 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2751 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2752 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2753 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2754 ;;Total ram usage:        7 bytes
  2755 ;; Hardware stack levels used:    1
  2756 ;; Hardware stack levels required when called:    3
  2757 ;; This function calls:
  2758 ;;		_I2C_writeRegister
  2759 ;;		_readRegister
  2760 ;; This function is called by:
  2761 ;;		_statemachine
  2762 ;; This function uses a non-reentrant model
  2763 ;;
  2764                           
  2765                           
  2766                           ;psect for function _beginAFEcommunication
  2767  0155                     _beginAFEcommunication:	
  2768                           
  2769                           ;BQ76920.c: 9:    int errCode = 0;
  2770                           
  2771                           ;incstack = 0
  2772                           ; Regs used in _beginAFEcommunication: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  2773  0155  0020               	movlb	0	; select bank0
  2774  0156  01A2               	clrf	beginAFEcommunication@errCode
  2775  0157  01A3               	clrf	beginAFEcommunication@errCode+1
  2776                           
  2777                           ;BQ76920.c: 12:   for (int i = 0; i < 4; i++) {
  2778  0158  01A4               	clrf	beginAFEcommunication@i
  2779  0159  01A5               	clrf	beginAFEcommunication@i+1
  2780  015A                     l1453:	
  2781                           
  2782                           ;BQ76920.c: 13:     cellVoltages[i] = 0;
  2783  015A  0020               	movlb	0	; select bank0
  2784  015B  3524               	lslf	beginAFEcommunication@i,w
  2785  015C  3E37               	addlw	(low (_cellVoltages| 0))& (0+255)
  2786  015D  0086               	movwf	6
  2787  015E  0187               	clrf	7
  2788  015F  3000               	movlw	0
  2789  0160  3FC0               	movwi [0]fsr1
  2790  0161  3FC1               	movwi [1]fsr1
  2791                           
  2792                           ;BQ76920.c: 14:   }
  2793  0162  3001               	movlw	1
  2794  0163  07A4               	addwf	beginAFEcommunication@i,f
  2795  0164  3000               	movlw	0
  2796  0165  3DA5               	addwfc	beginAFEcommunication@i+1,f
  2797  0166  0825               	movf	beginAFEcommunication@i+1,w
  2798  0167  3A80               	xorlw	128
  2799  0168  00FB               	movwf	??_beginAFEcommunication
  2800  0169  3080               	movlw	128
  2801  016A  027B               	subwf	??_beginAFEcommunication,w
  2802  016B  1D03               	skipz
  2803  016C  296F               	goto	u775
  2804  016D  3004               	movlw	4
  2805  016E  0224               	subwf	beginAFEcommunication@i,w
  2806  016F                     u775:	
  2807  016F  1C03               	skipc
  2808  0170  295A               	goto	l1453
  2809                           
  2810                           ;BQ76920.c: 18:    I2C_writeRegister(0x18,0x0B,0x19);
  2811  0171  3018               	movlw	24
  2812  0172  00F5               	movwf	I2C_writeRegister@slaveAddress
  2813  0173  3000               	movlw	0
  2814  0174  00F6               	movwf	I2C_writeRegister@slaveAddress+1
  2815  0175  300B               	movlw	11
  2816  0176  00F7               	movwf	I2C_writeRegister@regAddress
  2817  0177  3000               	movlw	0
  2818  0178  00F8               	movwf	I2C_writeRegister@regAddress+1
  2819  0179  3019               	movlw	25
  2820  017A  00F9               	movwf	I2C_writeRegister@data
  2821  017B  3000               	movlw	0
  2822  017C  00FA               	movwf	I2C_writeRegister@data+1
  2823  017D  3182  22F6  3181   	fcall	_I2C_writeRegister
  2824                           
  2825                           ;BQ76920.c: 20:    if(readRegister(0x18,0x0B)==0x19){
  2826  0180  3018               	movlw	24
  2827  0181  00F5               	movwf	readRegister@slaveAddress
  2828  0182  3000               	movlw	0
  2829  0183  00F6               	movwf	readRegister@slaveAddress+1
  2830  0184  300B               	movlw	11
  2831  0185  00F7               	movwf	readRegister@regAddress
  2832  0186  3000               	movlw	0
  2833  0187  00F8               	movwf	readRegister@regAddress+1
  2834  0188  3182  2216  3181   	fcall	_readRegister
  2835  018B  3019               	movlw	25
  2836  018C  0675               	xorwf	?_readRegister,w
  2837  018D  0476               	iorwf	?_readRegister+1,w
  2838  018E  1D03               	btfss	3,2
  2839  018F  2995               	goto	l322
  2840                           
  2841                           ;BQ76920.c: 21:     errCode =1;
  2842  0190  3001               	movlw	1
  2843  0191  0020               	movlb	0	; select bank0
  2844  0192  00A2               	movwf	beginAFEcommunication@errCode
  2845  0193  3000               	movlw	0
  2846  0194  00A3               	movwf	beginAFEcommunication@errCode+1
  2847  0195                     l322:	
  2848                           ;BQ76920.c: 22:    }
  2849                           
  2850                           
  2851                           ;BQ76920.c: 26:   return errCode;
  2852  0195  0020               	movlb	0	; select bank0
  2853  0196  0823               	movf	beginAFEcommunication@errCode+1,w
  2854  0197  00A1               	movwf	?_beginAFEcommunication+1
  2855  0198  0822               	movf	beginAFEcommunication@errCode,w
  2856  0199  00A0               	movwf	?_beginAFEcommunication
  2857  019A  0008               	return
  2858  019B                     __end_of_beginAFEcommunication:	
  2859                           
  2860                           	psect	text4
  2861  0216                     __ptext4:	
  2862 ;; *************** function _readRegister *****************
  2863 ;; Defined at:
  2864 ;;		line 129 in file "I2C.c"
  2865 ;; Parameters:    Size  Location     Type
  2866 ;;  slaveAddress    2    5[COMMON] int 
  2867 ;;  regAddress      2    7[COMMON] int 
  2868 ;; Auto vars:     Size  Location     Type
  2869 ;;  recievedData    2    0        int 
  2870 ;; Return value:  Size  Location     Type
  2871 ;;                  2    5[COMMON] int 
  2872 ;; Registers used:
  2873 ;;		wreg, status,2, status,0, pclath, cstack
  2874 ;; Tracked objects:
  2875 ;;		On entry : 0/0
  2876 ;;		On exit  : 0/0
  2877 ;;		Unchanged: 0/0
  2878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2879 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2880 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2882 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2883 ;;Total ram usage:        6 bytes
  2884 ;; Hardware stack levels used:    1
  2885 ;; Hardware stack levels required when called:    2
  2886 ;; This function calls:
  2887 ;;		_read_I2C_data
  2888 ;;		_send_I2C_NACK
  2889 ;;		_send_I2C_controlByte
  2890 ;;		_send_I2C_data
  2891 ;;		_send_I2C_startBit
  2892 ;;		_send_I2C_stopBit
  2893 ;; This function is called by:
  2894 ;;		_beginAFEcommunication
  2895 ;; This function uses a non-reentrant model
  2896 ;;
  2897                           
  2898                           
  2899                           ;psect for function _readRegister
  2900  0216                     _readRegister:	
  2901                           
  2902                           ;I2C.c: 130:     int recievedData;;I2C.c: 131:     send_I2C_startBit();
  2903                           
  2904                           ;incstack = 0
  2905                           ; Regs used in _readRegister: [wreg+status,2+status,0+pclath+cstack]
  2906  0216  3183  23BE  3182   	fcall	_send_I2C_startBit
  2907                           
  2908                           ;I2C.c: 132:     send_I2C_controlByte(slaveAddress, 0);
  2909  0219  0876               	movf	readRegister@slaveAddress+1,w
  2910  021A  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
  2911  021B  0875               	movf	readRegister@slaveAddress,w
  2912  021C  00F1               	movwf	send_I2C_controlByte@BlockAddress
  2913  021D  3000               	movlw	0
  2914  021E  00F3               	movwf	send_I2C_controlByte@RW_bit
  2915  021F  00F4               	movwf	send_I2C_controlByte@RW_bit+1
  2916  0220  3183  2379  3182   	fcall	_send_I2C_controlByte
  2917                           
  2918                           ;I2C.c: 133:     send_I2C_data(regAddress);
  2919  0223  0878               	movf	readRegister@regAddress+1,w
  2920  0224  00F2               	movwf	send_I2C_data@databyte+1
  2921  0225  0877               	movf	readRegister@regAddress,w
  2922  0226  00F1               	movwf	send_I2C_data@databyte
  2923  0227  3183  238C  3182   	fcall	_send_I2C_data
  2924                           
  2925                           ;I2C.c: 134:     send_I2C_stopBit();
  2926  022A  3183  23B6  3182   	fcall	_send_I2C_stopBit
  2927                           
  2928                           ;I2C.c: 135:     send_I2C_startBit();
  2929  022D  3183  23BE  3182   	fcall	_send_I2C_startBit
  2930                           
  2931                           ;I2C.c: 136:     send_I2C_controlByte(slaveAddress, 1);
  2932  0230  0876               	movf	readRegister@slaveAddress+1,w
  2933  0231  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
  2934  0232  0875               	movf	readRegister@slaveAddress,w
  2935  0233  00F1               	movwf	send_I2C_controlByte@BlockAddress
  2936  0234  3001               	movlw	1
  2937  0235  00F3               	movwf	send_I2C_controlByte@RW_bit
  2938  0236  3000               	movlw	0
  2939  0237  00F4               	movwf	send_I2C_controlByte@RW_bit+1
  2940  0238  3183  2379  3182   	fcall	_send_I2C_controlByte
  2941  023B  3183  234E  3182   	fcall	_read_I2C_data
  2942                           
  2943                           ;I2C.c: 138:     send_I2C_NACK();
  2944  023E  3183  2383  3182   	fcall	_send_I2C_NACK
  2945                           
  2946                           ;I2C.c: 139:     send_I2C_stopBit();
  2947  0241  3183  23B6         	fcall	_send_I2C_stopBit
  2948  0243  0008               	return
  2949  0244                     __end_of_readRegister:	
  2950                           
  2951                           	psect	text5
  2952  0383                     __ptext5:	
  2953 ;; *************** function _send_I2C_NACK *****************
  2954 ;; Defined at:
  2955 ;;		line 83 in file "I2C.c"
  2956 ;; Parameters:    Size  Location     Type
  2957 ;;		None
  2958 ;; Auto vars:     Size  Location     Type
  2959 ;;		None
  2960 ;; Return value:  Size  Location     Type
  2961 ;;                  1    wreg      void 
  2962 ;; Registers used:
  2963 ;;		None
  2964 ;; Tracked objects:
  2965 ;;		On entry : 0/0
  2966 ;;		On exit  : 0/0
  2967 ;;		Unchanged: 0/0
  2968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2973 ;;Total ram usage:        0 bytes
  2974 ;; Hardware stack levels used:    1
  2975 ;; Hardware stack levels required when called:    1
  2976 ;; This function calls:
  2977 ;;		Nothing
  2978 ;; This function is called by:
  2979 ;;		_readRegister
  2980 ;; This function uses a non-reentrant model
  2981 ;;
  2982                           
  2983                           
  2984                           ;psect for function _send_I2C_NACK
  2985  0383                     _send_I2C_NACK:	
  2986                           
  2987                           ;I2C.c: 84:     PIR1bits.SSP1IF = 0;
  2988                           
  2989                           ;incstack = 0
  2990                           ; Regs used in _send_I2C_NACK: []
  2991  0383  0020               	movlb	0	; select bank0
  2992  0384  1191               	bcf	17,3	;volatile
  2993                           
  2994                           ;I2C.c: 85:     SSPCON2bits.ACKDT = 1;
  2995  0385  0024               	movlb	4	; select bank4
  2996  0386  1696               	bsf	22,5	;volatile
  2997                           
  2998                           ;I2C.c: 86:     SSPCON2bits.ACKEN = 1;
  2999  0387  1616               	bsf	22,4	;volatile
  3000  0388                     l263:	
  3001                           ;I2C.c: 87:     while (!PIR1bits.SSP1IF);
  3002                           
  3003  0388  0020               	movlb	0	; select bank0
  3004  0389  1991               	btfsc	17,3	;volatile
  3005  038A  0008               	return
  3006  038B  2B88               	goto	l263
  3007  038C                     __end_of_send_I2C_NACK:	
  3008                           
  3009                           	psect	text6
  3010  034E                     __ptext6:	
  3011 ;; *************** function _read_I2C_data *****************
  3012 ;; Defined at:
  3013 ;;		line 42 in file "I2C.c"
  3014 ;; Parameters:    Size  Location     Type
  3015 ;;		None
  3016 ;; Auto vars:     Size  Location     Type
  3017 ;;		None
  3018 ;; Return value:  Size  Location     Type
  3019 ;;                  2    1[COMMON] unsigned int 
  3020 ;; Registers used:
  3021 ;;		wreg
  3022 ;; Tracked objects:
  3023 ;;		On entry : 0/0
  3024 ;;		On exit  : 0/0
  3025 ;;		Unchanged: 0/0
  3026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3027 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3029 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3030 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3031 ;;Total ram usage:        4 bytes
  3032 ;; Hardware stack levels used:    1
  3033 ;; Hardware stack levels required when called:    1
  3034 ;; This function calls:
  3035 ;;		Nothing
  3036 ;; This function is called by:
  3037 ;;		_readRegister
  3038 ;; This function uses a non-reentrant model
  3039 ;;
  3040                           
  3041                           
  3042                           ;psect for function _read_I2C_data
  3043  034E                     _read_I2C_data:	
  3044                           
  3045                           ;I2C.c: 43:     PIR1bits.SSP1IF = 0;
  3046                           
  3047                           ;incstack = 0
  3048                           ; Regs used in _read_I2C_data: [wreg]
  3049  034E  0020               	movlb	0	; select bank0
  3050  034F  1191               	bcf	17,3	;volatile
  3051                           
  3052                           ;I2C.c: 44:     SSPCON2bits.RCEN = 1;
  3053  0350  0024               	movlb	4	; select bank4
  3054  0351  1596               	bsf	22,3	;volatile
  3055  0352                     l233:	
  3056                           ;I2C.c: 45:     while (!PIR1bits.SSP1IF);
  3057                           
  3058  0352  0020               	movlb	0	; select bank0
  3059  0353  1D91               	btfss	17,3	;volatile
  3060  0354  2B52               	goto	l233
  3061                           
  3062                           ;I2C.c: 46:     return (SSPBUF);
  3063  0355  0024               	movlb	4	; select bank4
  3064  0356  0811               	movf	17,w	;volatile
  3065  0357  00F3               	movwf	??_read_I2C_data
  3066  0358  01F4               	clrf	??_read_I2C_data+1
  3067  0359  0873               	movf	??_read_I2C_data,w
  3068  035A  00F1               	movwf	?_read_I2C_data
  3069  035B  0874               	movf	??_read_I2C_data+1,w
  3070  035C  00F2               	movwf	?_read_I2C_data+1
  3071  035D  0008               	return
  3072  035E                     __end_of_read_I2C_data:	
  3073                           
  3074                           	psect	text7
  3075  02F6                     __ptext7:	
  3076 ;; *************** function _I2C_writeRegister *****************
  3077 ;; Defined at:
  3078 ;;		line 118 in file "I2C.c"
  3079 ;; Parameters:    Size  Location     Type
  3080 ;;  slaveAddress    2    5[COMMON] int 
  3081 ;;  regAddress      2    7[COMMON] int 
  3082 ;;  data            2    9[COMMON] int 
  3083 ;; Auto vars:     Size  Location     Type
  3084 ;;		None
  3085 ;; Return value:  Size  Location     Type
  3086 ;;                  1    wreg      void 
  3087 ;; Registers used:
  3088 ;;		wreg, status,2, status,0, pclath, cstack
  3089 ;; Tracked objects:
  3090 ;;		On entry : 0/0
  3091 ;;		On exit  : 0/0
  3092 ;;		Unchanged: 0/0
  3093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3094 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3097 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3098 ;;Total ram usage:        6 bytes
  3099 ;; Hardware stack levels used:    1
  3100 ;; Hardware stack levels required when called:    2
  3101 ;; This function calls:
  3102 ;;		_send_I2C_controlByte
  3103 ;;		_send_I2C_data
  3104 ;;		_send_I2C_startBit
  3105 ;;		_send_I2C_stopBit
  3106 ;; This function is called by:
  3107 ;;		_beginAFEcommunication
  3108 ;; This function uses a non-reentrant model
  3109 ;;
  3110                           
  3111                           
  3112                           ;psect for function _I2C_writeRegister
  3113  02F6                     _I2C_writeRegister:	
  3114                           
  3115                           ;I2C.c: 119:     send_I2C_startBit();
  3116                           
  3117                           ;incstack = 0
  3118                           ; Regs used in _I2C_writeRegister: [wreg+status,2+status,0+pclath+cstack]
  3119  02F6  3183  23BE  3182   	fcall	_send_I2C_startBit
  3120                           
  3121                           ;I2C.c: 120:     send_I2C_controlByte(slaveAddress, 0);
  3122  02F9  0876               	movf	I2C_writeRegister@slaveAddress+1,w
  3123  02FA  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
  3124  02FB  0875               	movf	I2C_writeRegister@slaveAddress,w
  3125  02FC  00F1               	movwf	send_I2C_controlByte@BlockAddress
  3126  02FD  3000               	movlw	0
  3127  02FE  00F3               	movwf	send_I2C_controlByte@RW_bit
  3128  02FF  00F4               	movwf	send_I2C_controlByte@RW_bit+1
  3129  0300  3183  2379  3182   	fcall	_send_I2C_controlByte
  3130                           
  3131                           ;I2C.c: 121:     send_I2C_data(regAddress);
  3132  0303  0878               	movf	I2C_writeRegister@regAddress+1,w
  3133  0304  00F2               	movwf	send_I2C_data@databyte+1
  3134  0305  0877               	movf	I2C_writeRegister@regAddress,w
  3135  0306  00F1               	movwf	send_I2C_data@databyte
  3136  0307  3183  238C  3182   	fcall	_send_I2C_data
  3137                           
  3138                           ;I2C.c: 122:     send_I2C_data(data);
  3139  030A  087A               	movf	I2C_writeRegister@data+1,w
  3140  030B  00F2               	movwf	send_I2C_data@databyte+1
  3141  030C  0879               	movf	I2C_writeRegister@data,w
  3142  030D  00F1               	movwf	send_I2C_data@databyte
  3143  030E  3183  238C  3182   	fcall	_send_I2C_data
  3144                           
  3145                           ;I2C.c: 123:     send_I2C_stopBit();
  3146  0311  3183  23B6         	fcall	_send_I2C_stopBit
  3147  0313  0008               	return
  3148  0314                     __end_of_I2C_writeRegister:	
  3149                           
  3150                           	psect	text8
  3151  03B6                     __ptext8:	
  3152 ;; *************** function _send_I2C_stopBit *****************
  3153 ;; Defined at:
  3154 ;;		line 70 in file "I2C.c"
  3155 ;; Parameters:    Size  Location     Type
  3156 ;;		None
  3157 ;; Auto vars:     Size  Location     Type
  3158 ;;		None
  3159 ;; Return value:  Size  Location     Type
  3160 ;;                  1    wreg      void 
  3161 ;; Registers used:
  3162 ;;		None
  3163 ;; Tracked objects:
  3164 ;;		On entry : 0/0
  3165 ;;		On exit  : 0/0
  3166 ;;		Unchanged: 0/0
  3167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3172 ;;Total ram usage:        0 bytes
  3173 ;; Hardware stack levels used:    1
  3174 ;; Hardware stack levels required when called:    1
  3175 ;; This function calls:
  3176 ;;		Nothing
  3177 ;; This function is called by:
  3178 ;;		_I2C_writeRegister
  3179 ;;		_readRegister
  3180 ;;		_retrieve_data_ATmega328
  3181 ;; This function uses a non-reentrant model
  3182 ;;
  3183                           
  3184                           
  3185                           ;psect for function _send_I2C_stopBit
  3186  03B6                     _send_I2C_stopBit:	
  3187                           
  3188                           ;I2C.c: 71:     PIR1bits.SSP1IF = 0;
  3189                           
  3190                           ;incstack = 0
  3191                           ; Regs used in _send_I2C_stopBit: []
  3192  03B6  0020               	movlb	0	; select bank0
  3193  03B7  1191               	bcf	17,3	;volatile
  3194                           
  3195                           ;I2C.c: 72:     SSPCON2bits.PEN = 1;
  3196  03B8  0024               	movlb	4	; select bank4
  3197  03B9  1516               	bsf	22,2	;volatile
  3198  03BA                     l251:	
  3199                           ;I2C.c: 73:     while (!PIR1bits.SSP1IF);
  3200                           
  3201  03BA  0020               	movlb	0	; select bank0
  3202  03BB  1991               	btfsc	17,3	;volatile
  3203  03BC  0008               	return
  3204  03BD  2BBA               	goto	l251
  3205  03BE                     __end_of_send_I2C_stopBit:	
  3206                           
  3207                           	psect	text9
  3208  03BE                     __ptext9:	
  3209 ;; *************** function _send_I2C_startBit *****************
  3210 ;; Defined at:
  3211 ;;		line 64 in file "I2C.c"
  3212 ;; Parameters:    Size  Location     Type
  3213 ;;		None
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;		None
  3216 ;; Return value:  Size  Location     Type
  3217 ;;                  1    wreg      void 
  3218 ;; Registers used:
  3219 ;;		None
  3220 ;; Tracked objects:
  3221 ;;		On entry : 0/0
  3222 ;;		On exit  : 0/0
  3223 ;;		Unchanged: 0/0
  3224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3229 ;;Total ram usage:        0 bytes
  3230 ;; Hardware stack levels used:    1
  3231 ;; Hardware stack levels required when called:    1
  3232 ;; This function calls:
  3233 ;;		Nothing
  3234 ;; This function is called by:
  3235 ;;		_I2C_writeRegister
  3236 ;;		_readRegister
  3237 ;;		_retrieve_data_ATmega328
  3238 ;; This function uses a non-reentrant model
  3239 ;;
  3240                           
  3241                           
  3242                           ;psect for function _send_I2C_startBit
  3243  03BE                     _send_I2C_startBit:	
  3244                           
  3245                           ;I2C.c: 65:     PIR1bits.SSP1IF = 0;
  3246                           
  3247                           ;incstack = 0
  3248                           ; Regs used in _send_I2C_startBit: []
  3249  03BE  0020               	movlb	0	; select bank0
  3250  03BF  1191               	bcf	17,3	;volatile
  3251                           
  3252                           ;I2C.c: 66:     SSPCON2bits.SEN = 1;
  3253  03C0  0024               	movlb	4	; select bank4
  3254  03C1  1416               	bsf	22,0	;volatile
  3255  03C2                     l245:	
  3256                           ;I2C.c: 67:     while (!PIR1bits.SSP1IF);
  3257                           
  3258  03C2  0020               	movlb	0	; select bank0
  3259  03C3  1991               	btfsc	17,3	;volatile
  3260  03C4  0008               	return
  3261  03C5  2BC2               	goto	l245
  3262  03C6                     __end_of_send_I2C_startBit:	
  3263                           
  3264                           	psect	text10
  3265  038C                     __ptext10:	
  3266 ;; *************** function _send_I2C_data *****************
  3267 ;; Defined at:
  3268 ;;		line 33 in file "I2C.c"
  3269 ;; Parameters:    Size  Location     Type
  3270 ;;  databyte        2    1[COMMON] unsigned int 
  3271 ;; Auto vars:     Size  Location     Type
  3272 ;;		None
  3273 ;; Return value:  Size  Location     Type
  3274 ;;                  1    wreg      void 
  3275 ;; Registers used:
  3276 ;;		wreg
  3277 ;; Tracked objects:
  3278 ;;		On entry : 0/0
  3279 ;;		On exit  : 0/0
  3280 ;;		Unchanged: 0/0
  3281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3282 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3285 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3286 ;;Total ram usage:        2 bytes
  3287 ;; Hardware stack levels used:    1
  3288 ;; Hardware stack levels required when called:    1
  3289 ;; This function calls:
  3290 ;;		Nothing
  3291 ;; This function is called by:
  3292 ;;		_I2C_writeRegister
  3293 ;;		_readRegister
  3294 ;; This function uses a non-reentrant model
  3295 ;;
  3296                           
  3297                           
  3298                           ;psect for function _send_I2C_data
  3299  038C                     _send_I2C_data:	
  3300                           
  3301                           ;I2C.c: 34:     PIR1bits.SSP1IF = 0;
  3302                           
  3303                           ;incstack = 0
  3304                           ; Regs used in _send_I2C_data: [wreg]
  3305  038C  0020               	movlb	0	; select bank0
  3306  038D  1191               	bcf	17,3	;volatile
  3307                           
  3308                           ;I2C.c: 35:     SSPBUF = databyte;
  3309  038E  0871               	movf	send_I2C_data@databyte,w
  3310  038F  0024               	movlb	4	; select bank4
  3311  0390  0091               	movwf	17	;volatile
  3312  0391                     l227:	
  3313                           ;I2C.c: 36:     while (!PIR1bits.SSP1IF);
  3314                           
  3315  0391  0020               	movlb	0	; select bank0
  3316  0392  1991               	btfsc	17,3	;volatile
  3317  0393  0008               	return
  3318  0394  2B91               	goto	l227
  3319  0395                     __end_of_send_I2C_data:	
  3320                           
  3321                           	psect	text11
  3322  0379                     __ptext11:	
  3323 ;; *************** function _send_I2C_controlByte *****************
  3324 ;; Defined at:
  3325 ;;		line 52 in file "I2C.c"
  3326 ;; Parameters:    Size  Location     Type
  3327 ;;  BlockAddress    2    1[COMMON] unsigned int 
  3328 ;;  RW_bit          2    3[COMMON] unsigned int 
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;		None
  3331 ;; Return value:  Size  Location     Type
  3332 ;;                  1    wreg      void 
  3333 ;; Registers used:
  3334 ;;		wreg, status,2, status,0
  3335 ;; Tracked objects:
  3336 ;;		On entry : 0/0
  3337 ;;		On exit  : 0/0
  3338 ;;		Unchanged: 0/0
  3339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3340 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3343 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3344 ;;Total ram usage:        4 bytes
  3345 ;; Hardware stack levels used:    1
  3346 ;; Hardware stack levels required when called:    1
  3347 ;; This function calls:
  3348 ;;		Nothing
  3349 ;; This function is called by:
  3350 ;;		_I2C_writeRegister
  3351 ;;		_readRegister
  3352 ;;		_retrieve_data_ATmega328
  3353 ;; This function uses a non-reentrant model
  3354 ;;
  3355                           
  3356                           
  3357                           ;psect for function _send_I2C_controlByte
  3358  0379                     _send_I2C_controlByte:	
  3359                           
  3360                           ;I2C.c: 53:     PIR1bits.SSP1IF = 0;
  3361                           
  3362                           ;incstack = 0
  3363                           ; Regs used in _send_I2C_controlByte: [wreg+status,2+status,0]
  3364  0379  0020               	movlb	0	; select bank0
  3365  037A  1191               	bcf	17,3	;volatile
  3366                           
  3367                           ;I2C.c: 59:     SSPBUF = (((0b0000 << 4) | (BlockAddress << 1)) + RW_bit);
  3368  037B  3571               	lslf	send_I2C_controlByte@BlockAddress,w
  3369  037C  0773               	addwf	send_I2C_controlByte@RW_bit,w
  3370  037D  0024               	movlb	4	; select bank4
  3371  037E  0091               	movwf	17	;volatile
  3372  037F                     l239:	
  3373                           ;I2C.c: 61:     while (!PIR1bits.SSP1IF);
  3374                           
  3375  037F  0020               	movlb	0	; select bank0
  3376  0380  1991               	btfsc	17,3	;volatile
  3377  0381  0008               	return
  3378  0382  2B7F               	goto	l239
  3379  0383                     __end_of_send_I2C_controlByte:	
  3380                           
  3381                           	psect	text12
  3382  0293                     __ptext12:	
  3383 ;; *************** function _RGB_AWAIT_AFE_CONN *****************
  3384 ;; Defined at:
  3385 ;;		line 43 in file "RGB.c"
  3386 ;; Parameters:    Size  Location     Type
  3387 ;;		None
  3388 ;; Auto vars:     Size  Location     Type
  3389 ;;		None
  3390 ;; Return value:  Size  Location     Type
  3391 ;;                  1    wreg      void 
  3392 ;; Registers used:
  3393 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3394 ;; Tracked objects:
  3395 ;;		On entry : 0/0
  3396 ;;		On exit  : 0/0
  3397 ;;		Unchanged: 0/0
  3398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3401 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3402 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3403 ;;Total ram usage:        1 bytes
  3404 ;; Hardware stack levels used:    1
  3405 ;; Hardware stack levels required when called:    2
  3406 ;; This function calls:
  3407 ;;		_RGB_color
  3408 ;; This function is called by:
  3409 ;;		_statemachine
  3410 ;; This function uses a non-reentrant model
  3411 ;;
  3412                           
  3413                           
  3414                           ;psect for function _RGB_AWAIT_AFE_CONN
  3415  0293                     _RGB_AWAIT_AFE_CONN:	
  3416                           
  3417                           ;RGB.c: 45:     if (toggleColor) {
  3418                           
  3419                           ;incstack = 0
  3420                           ; Regs used in _RGB_AWAIT_AFE_CONN: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3421  0293  087C               	movf	_toggleColor,w
  3422  0294  1903               	btfsc	3,2
  3423  0295  2AA5               	goto	l1247
  3424                           
  3425                           ;RGB.c: 46:         toggleColor = !toggleColor;
  3426  0296  087C               	movf	_toggleColor,w
  3427  0297  1D03               	btfss	3,2
  3428  0298  2A9B               	goto	u490
  3429  0299  3001               	movlw	1
  3430  029A  2A9C               	goto	u500
  3431  029B                     u490:	
  3432  029B  3000               	movlw	0
  3433  029C                     u500:	
  3434  029C  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
  3435  029D  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
  3436  029E  00FC               	movwf	_toggleColor
  3437                           
  3438                           ;RGB.c: 47:         RGB_color(0);
  3439  029F  3000               	movlw	0
  3440  02A0  00F1               	movwf	RGB_color@color
  3441  02A1  00F2               	movwf	RGB_color@color+1
  3442  02A2  3182  22B5         	fcall	_RGB_color
  3443                           
  3444                           ;RGB.c: 48:     } else {
  3445  02A4  0008               	return
  3446  02A5                     l1247:	
  3447                           
  3448                           ;RGB.c: 49:         toggleColor = !toggleColor;
  3449  02A5  087C               	movf	_toggleColor,w
  3450  02A6  1D03               	btfss	3,2
  3451  02A7  2AAA               	goto	u510
  3452  02A8  3001               	movlw	1
  3453  02A9  2AAB               	goto	u520
  3454  02AA                     u510:	
  3455  02AA  3000               	movlw	0
  3456  02AB                     u520:	
  3457  02AB  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
  3458  02AC  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
  3459  02AD  00FC               	movwf	_toggleColor
  3460                           
  3461                           ;RGB.c: 50:         RGB_color(1);
  3462  02AE  3001               	movlw	1
  3463  02AF  00F1               	movwf	RGB_color@color
  3464  02B0  3000               	movlw	0
  3465  02B1  00F2               	movwf	RGB_color@color+1
  3466  02B2  3182  22B5         	fcall	_RGB_color
  3467  02B4  0008               	return
  3468  02B5                     __end_of_RGB_AWAIT_AFE_CONN:	
  3469                           
  3470                           	psect	text13
  3471  02B5                     __ptext13:	
  3472 ;; *************** function _RGB_color *****************
  3473 ;; Defined at:
  3474 ;;		line 17 in file "RGB.c"
  3475 ;; Parameters:    Size  Location     Type
  3476 ;;  color           2    1[COMMON] int 
  3477 ;; Auto vars:     Size  Location     Type
  3478 ;;		None
  3479 ;; Return value:  Size  Location     Type
  3480 ;;                  1    wreg      void 
  3481 ;; Registers used:
  3482 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3483 ;; Tracked objects:
  3484 ;;		On entry : 0/0
  3485 ;;		On exit  : 0/0
  3486 ;;		Unchanged: 0/0
  3487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3488 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3491 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3492 ;;Total ram usage:        2 bytes
  3493 ;; Hardware stack levels used:    1
  3494 ;; Hardware stack levels required when called:    1
  3495 ;; This function calls:
  3496 ;;		Nothing
  3497 ;; This function is called by:
  3498 ;;		_statemachine
  3499 ;;		_RGB_AWAIT_AFE_CONN
  3500 ;; This function uses a non-reentrant model
  3501 ;;
  3502                           
  3503                           
  3504                           ;psect for function _RGB_color
  3505  02B5                     _RGB_color:	
  3506                           
  3507                           ;RGB.c: 19:     switch (color) {
  3508                           
  3509                           ;incstack = 0
  3510                           ; Regs used in _RGB_color: [wreg-fsr0h+status,2+status,0]
  3511  02B5  2AC5               	goto	l1207
  3512  02B6                     l288:	
  3513                           ;RGB.c: 20:         case 0:
  3514                           
  3515                           
  3516                           ;RGB.c: 21:             LATAbits.LATA4 = 0;
  3517  02B6  0022               	movlb	2	; select bank2
  3518  02B7  120C               	bcf	12,4	;volatile
  3519                           
  3520                           ;RGB.c: 22:             LATAbits.LATA5 = 1;
  3521  02B8  168C               	bsf	12,5	;volatile
  3522                           
  3523                           ;RGB.c: 23:             LATEbits.LATE0 = 1;
  3524  02B9  1410               	bsf	16,0	;volatile
  3525                           
  3526                           ;RGB.c: 24:             break;
  3527  02BA  0008               	return
  3528  02BB                     l290:	
  3529                           ;RGB.c: 25:         case 1:
  3530                           
  3531                           
  3532                           ;RGB.c: 26:             LATAbits.LATA4 = 1;
  3533  02BB  0022               	movlb	2	; select bank2
  3534  02BC  160C               	bsf	12,4	;volatile
  3535                           
  3536                           ;RGB.c: 27:             LATAbits.LATA5 = 0;
  3537  02BD  128C               	bcf	12,5	;volatile
  3538                           
  3539                           ;RGB.c: 28:             LATEbits.LATE0 = 1;
  3540  02BE  1410               	bsf	16,0	;volatile
  3541                           
  3542                           ;RGB.c: 29:             break;
  3543  02BF  0008               	return
  3544  02C0                     l291:	
  3545                           ;RGB.c: 30:         case 2:
  3546                           
  3547                           
  3548                           ;RGB.c: 31:             LATAbits.LATA4 = 1;
  3549  02C0  0022               	movlb	2	; select bank2
  3550  02C1  160C               	bsf	12,4	;volatile
  3551                           
  3552                           ;RGB.c: 32:             LATAbits.LATA5 = 1;
  3553  02C2  168C               	bsf	12,5	;volatile
  3554                           
  3555                           ;RGB.c: 33:             LATEbits.LATE0 = 0;
  3556  02C3  1010               	bcf	16,0	;volatile
  3557                           
  3558                           ;RGB.c: 34:             break;
  3559  02C4  0008               	return
  3560  02C5                     l1207:	
  3561                           
  3562                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3563                           ; Switch size 1, requested type "simple"
  3564                           ; Number of cases is 1, Range of values is 0 to 0
  3565                           ; switch strategies available:
  3566                           ; Name         Instructions Cycles
  3567                           ; simple_byte            4     3 (average)
  3568                           ; direct_byte            8     6 (fixed)
  3569                           ; jumptable            260     6 (fixed)
  3570                           ;	Chosen strategy is simple_byte
  3571  02C5  0872               	movf	RGB_color@color+1,w
  3572  02C6  3A00               	xorlw	0	; case 0
  3573  02C7  1903               	skipnz
  3574  02C8  2ACA               	goto	l1553
  3575  02C9  2AD5               	goto	l292
  3576  02CA                     l1553:	
  3577                           
  3578                           ; Switch size 1, requested type "simple"
  3579                           ; Number of cases is 3, Range of values is 0 to 2
  3580                           ; switch strategies available:
  3581                           ; Name         Instructions Cycles
  3582                           ; simple_byte           10     6 (average)
  3583                           ; direct_byte           12     6 (fixed)
  3584                           ; jumptable            260     6 (fixed)
  3585                           ;	Chosen strategy is simple_byte
  3586  02CA  0871               	movf	RGB_color@color,w
  3587  02CB  3A00               	xorlw	0	; case 0
  3588  02CC  1903               	skipnz
  3589  02CD  2AB6               	goto	l288
  3590  02CE  3A01               	xorlw	1	; case 1
  3591  02CF  1903               	skipnz
  3592  02D0  2ABB               	goto	l290
  3593  02D1  3A03               	xorlw	3	; case 2
  3594  02D2  1903               	skipnz
  3595  02D3  2AC0               	goto	l291
  3596  02D4  2AD5               	goto	l292
  3597  02D5                     l292:	
  3598  02D5  0008               	return
  3599  02D6                     __end_of_RGB_color:	
  3600                           
  3601                           	psect	text14
  3602  0314                     __ptext14:	
  3603 ;; *************** function _EUSART_Write_Text *****************
  3604 ;; Defined at:
  3605 ;;		line 75 in file "EUSART.c"
  3606 ;; Parameters:    Size  Location     Type
  3607 ;;  text            2    2[COMMON] PTR unsigned char 
  3608 ;;		 -> STR_1(37), 
  3609 ;; Auto vars:     Size  Location     Type
  3610 ;;  i               2    5[COMMON] int 
  3611 ;; Return value:  Size  Location     Type
  3612 ;;                  1    wreg      void 
  3613 ;; Registers used:
  3614 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3615 ;; Tracked objects:
  3616 ;;		On entry : 0/0
  3617 ;;		On exit  : 0/0
  3618 ;;		Unchanged: 0/0
  3619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3620 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3621 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3622 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3623 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3624 ;;Total ram usage:        5 bytes
  3625 ;; Hardware stack levels used:    1
  3626 ;; Hardware stack levels required when called:    2
  3627 ;; This function calls:
  3628 ;;		_EUSART_Write
  3629 ;; This function is called by:
  3630 ;;		_statemachine
  3631 ;; This function uses a non-reentrant model
  3632 ;;
  3633                           
  3634                           
  3635                           ;psect for function _EUSART_Write_Text
  3636  0314                     _EUSART_Write_Text:	
  3637                           
  3638                           ;EUSART.c: 75: void EUSART_Write_Text(char *text);EUSART.c: 76: {;EUSART.c: 77:   int i;
      +                          ;EUSART.c: 78:   for(i=0;text[i]!='\0';i++)
  3639                           
  3640                           ;incstack = 0
  3641                           ; Regs used in _EUSART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3642  0314  01F5               	clrf	EUSART_Write_Text@i
  3643  0315  01F6               	clrf	EUSART_Write_Text@i+1
  3644  0316                     l1275:	
  3645  0316  0872               	movf	EUSART_Write_Text@text,w
  3646  0317  0775               	addwf	EUSART_Write_Text@i,w
  3647  0318  0084               	movwf	4
  3648  0319  0873               	movf	EUSART_Write_Text@text+1,w
  3649  031A  3D76               	addwfc	EUSART_Write_Text@i+1,w
  3650  031B  0085               	movwf	5
  3651  031C  0012               	moviw fsr0++
  3652  031D  1903               	btfsc	3,2
  3653  031E  0008               	return
  3654                           
  3655                           ;EUSART.c: 79:    EUSART_Write(text[i]);
  3656  031F  0872               	movf	EUSART_Write_Text@text,w
  3657  0320  0775               	addwf	EUSART_Write_Text@i,w
  3658  0321  0084               	movwf	4
  3659  0322  0873               	movf	EUSART_Write_Text@text+1,w
  3660  0323  3D76               	addwfc	EUSART_Write_Text@i+1,w
  3661  0324  0085               	movwf	5
  3662  0325  0800               	movf	0,w	;code access
  3663  0326  3183  23C6  3183   	fcall	_EUSART_Write
  3664  0329  3001               	movlw	1
  3665  032A  07F5               	addwf	EUSART_Write_Text@i,f
  3666  032B  3000               	movlw	0
  3667  032C  3DF6               	addwfc	EUSART_Write_Text@i+1,f
  3668  032D  2B16               	goto	l1275
  3669  032E                     __end_of_EUSART_Write_Text:	
  3670                           
  3671                           	psect	text15
  3672  03C6                     __ptext15:	
  3673 ;; *************** function _EUSART_Write *****************
  3674 ;; Defined at:
  3675 ;;		line 56 in file "EUSART.c"
  3676 ;; Parameters:    Size  Location     Type
  3677 ;;  txData          1    wreg     unsigned char 
  3678 ;; Auto vars:     Size  Location     Type
  3679 ;;  txData          1    1[COMMON] unsigned char 
  3680 ;; Return value:  Size  Location     Type
  3681 ;;                  1    wreg      void 
  3682 ;; Registers used:
  3683 ;;		wreg
  3684 ;; Tracked objects:
  3685 ;;		On entry : 0/0
  3686 ;;		On exit  : 0/0
  3687 ;;		Unchanged: 0/0
  3688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3690 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3692 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3693 ;;Total ram usage:        1 bytes
  3694 ;; Hardware stack levels used:    1
  3695 ;; Hardware stack levels required when called:    1
  3696 ;; This function calls:
  3697 ;;		Nothing
  3698 ;; This function is called by:
  3699 ;;		_EUSART_Write_Text
  3700 ;; This function uses a non-reentrant model
  3701 ;;
  3702                           
  3703                           
  3704                           ;psect for function _EUSART_Write
  3705  03C6                     _EUSART_Write:	
  3706                           
  3707                           ;incstack = 0
  3708                           ; Regs used in _EUSART_Write: [wreg]
  3709                           ;EUSART_Write@txData stored from wreg
  3710  03C6  00F1               	movwf	EUSART_Write@txData
  3711  03C7                     l192:	
  3712                           ;EUSART.c: 59:     {;EUSART.c: 60:     }
  3713                           
  3714                           
  3715                           ;EUSART.c: 58:     while(0 == PIR1bits.TXIF)
  3716  03C7  0020               	movlb	0	; select bank0
  3717  03C8  1E11               	btfss	17,4	;volatile
  3718  03C9  2BC7               	goto	l192
  3719                           
  3720                           ;EUSART.c: 62:     TX1REG = txData;
  3721  03CA  0871               	movf	EUSART_Write@txData,w
  3722  03CB  0023               	movlb	3	; select bank3
  3723  03CC  009A               	movwf	26	;volatile
  3724  03CD  0008               	return
  3725  03CE                     __end_of_EUSART_Write:	
  3726                           
  3727                           	psect	text16
  3728  036E                     __ptext16:	
  3729 ;; *************** function _init_TMR1 *****************
  3730 ;; Defined at:
  3731 ;;		line 162 in file "main.c"
  3732 ;; Parameters:    Size  Location     Type
  3733 ;;		None
  3734 ;; Auto vars:     Size  Location     Type
  3735 ;;		None
  3736 ;; Return value:  Size  Location     Type
  3737 ;;                  1    wreg      void 
  3738 ;; Registers used:
  3739 ;;		wreg, status,2, status,0
  3740 ;; Tracked objects:
  3741 ;;		On entry : 0/0
  3742 ;;		On exit  : 0/0
  3743 ;;		Unchanged: 0/0
  3744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3749 ;;Total ram usage:        0 bytes
  3750 ;; Hardware stack levels used:    1
  3751 ;; Hardware stack levels required when called:    1
  3752 ;; This function calls:
  3753 ;;		Nothing
  3754 ;; This function is called by:
  3755 ;;		_main
  3756 ;; This function uses a non-reentrant model
  3757 ;;
  3758                           
  3759                           
  3760                           ;psect for function _init_TMR1
  3761  036E                     _init_TMR1:	
  3762                           
  3763                           ;main.c: 165:     T1CONbits.T1CKPS = 0b00;
  3764                           
  3765                           ;incstack = 0
  3766                           ; Regs used in _init_TMR1: [wreg+status,2+status,0]
  3767  036E  30CF               	movlw	-49
  3768  036F  0020               	movlb	0	; select bank0
  3769  0370  0598               	andwf	24,f	;volatile
  3770                           
  3771                           ;main.c: 167:     TMR1 = 0;
  3772  0371  0196               	clrf	22	;volatile
  3773  0372  0197               	clrf	23	;volatile
  3774                           
  3775                           ;main.c: 169:     T1CONbits.TMR1ON = 1;
  3776  0373  1418               	bsf	24,0	;volatile
  3777                           
  3778                           ;main.c: 171:     PIE1bits.TMR1IE = 1;
  3779  0374  0021               	movlb	1	; select bank1
  3780  0375  1411               	bsf	17,0	;volatile
  3781                           
  3782                           ;main.c: 173:     INTCONbits.PEIE = 1;
  3783  0376  170B               	bsf	11,6	;volatile
  3784                           
  3785                           ;main.c: 175:     (INTCONbits.GIE = 1);
  3786  0377  178B               	bsf	11,7	;volatile
  3787  0378  0008               	return
  3788  0379                     __end_of_init_TMR1:	
  3789                           
  3790                           	psect	text17
  3791  03D4                     __ptext17:	
  3792 ;; *************** function _init_RGB *****************
  3793 ;; Defined at:
  3794 ;;		line 6 in file "RGB.c"
  3795 ;; Parameters:    Size  Location     Type
  3796 ;;		None
  3797 ;; Auto vars:     Size  Location     Type
  3798 ;;		None
  3799 ;; Return value:  Size  Location     Type
  3800 ;;                  1    wreg      void 
  3801 ;; Registers used:
  3802 ;;		None
  3803 ;; Tracked objects:
  3804 ;;		On entry : 0/0
  3805 ;;		On exit  : 0/0
  3806 ;;		Unchanged: 0/0
  3807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3812 ;;Total ram usage:        0 bytes
  3813 ;; Hardware stack levels used:    1
  3814 ;; Hardware stack levels required when called:    1
  3815 ;; This function calls:
  3816 ;;		Nothing
  3817 ;; This function is called by:
  3818 ;;		_main
  3819 ;; This function uses a non-reentrant model
  3820 ;;
  3821                           
  3822                           
  3823                           ;psect for function _init_RGB
  3824  03D4                     _init_RGB:	
  3825                           
  3826                           ;RGB.c: 8:     LATAbits.LATA4 = 1;
  3827                           
  3828                           ;incstack = 0
  3829                           ; Regs used in _init_RGB: []
  3830  03D4  0022               	movlb	2	; select bank2
  3831  03D5  160C               	bsf	12,4	;volatile
  3832                           
  3833                           ;RGB.c: 9:     LATAbits.LATA5 = 1;
  3834  03D6  168C               	bsf	12,5	;volatile
  3835                           
  3836                           ;RGB.c: 10:     LATEbits.LATE0 = 1;
  3837  03D7  1410               	bsf	16,0	;volatile
  3838  03D8  0008               	return
  3839  03D9                     __end_of_init_RGB:	
  3840                           
  3841                           	psect	text18
  3842  035E                     __ptext18:	
  3843 ;; *************** function _init_I2C *****************
  3844 ;; Defined at:
  3845 ;;		line 10 in file "I2C.c"
  3846 ;; Parameters:    Size  Location     Type
  3847 ;;		None
  3848 ;; Auto vars:     Size  Location     Type
  3849 ;;		None
  3850 ;; Return value:  Size  Location     Type
  3851 ;;                  1    wreg      void 
  3852 ;; Registers used:
  3853 ;;		wreg, status,2, status,0
  3854 ;; Tracked objects:
  3855 ;;		On entry : 0/0
  3856 ;;		On exit  : 0/0
  3857 ;;		Unchanged: 0/0
  3858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3861 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3862 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3863 ;;Total ram usage:        1 bytes
  3864 ;; Hardware stack levels used:    1
  3865 ;; Hardware stack levels required when called:    1
  3866 ;; This function calls:
  3867 ;;		Nothing
  3868 ;; This function is called by:
  3869 ;;		_main
  3870 ;; This function uses a non-reentrant model
  3871 ;;
  3872                           
  3873                           
  3874                           ;psect for function _init_I2C
  3875  035E                     _init_I2C:	
  3876                           
  3877                           ;I2C.c: 14:     SSPCONbits.SSPM = 0x08;
  3878                           
  3879                           ;incstack = 0
  3880                           ; Regs used in _init_I2C: [wreg+status,2+status,0]
  3881  035E  0024               	movlb	4	; select bank4
  3882  035F  0815               	movf	21,w	;volatile
  3883  0360  39F0               	andlw	-16
  3884  0361  3808               	iorlw	8
  3885  0362  0095               	movwf	21	;volatile
  3886                           
  3887                           ;I2C.c: 15:     SSPCONbits.SSPEN = 1;
  3888  0363  1695               	bsf	21,5	;volatile
  3889                           
  3890                           ;I2C.c: 24:     SSPADD = 39;
  3891  0364  3027               	movlw	39
  3892  0365  0092               	movwf	18	;volatile
  3893                           
  3894                           ;I2C.c: 27:     _delay((unsigned long)((10)*(16000000/4000.0)));
  3895  0366  3034               	movlw	52
  3896  0367  00F1               	movwf	??_init_I2C
  3897  0368  30F2               	movlw	242
  3898  0369                     u837:	
  3899  0369  0B89               	decfsz	9,f
  3900  036A  2B69               	goto	u837
  3901  036B  0BF1               	decfsz	??_init_I2C,f
  3902  036C  2B69               	goto	u837
  3903  036D  0008               	return
  3904  036E                     __end_of_init_I2C:	
  3905                           
  3906                           	psect	text19
  3907  01DE                     __ptext19:	
  3908 ;; *************** function _init_GPIO *****************
  3909 ;; Defined at:
  3910 ;;		line 179 in file "main.c"
  3911 ;; Parameters:    Size  Location     Type
  3912 ;;		None
  3913 ;; Auto vars:     Size  Location     Type
  3914 ;;		None
  3915 ;; Return value:  Size  Location     Type
  3916 ;;                  1    wreg      void 
  3917 ;; Registers used:
  3918 ;;		wreg, status,2, status,0
  3919 ;; Tracked objects:
  3920 ;;		On entry : 0/0
  3921 ;;		On exit  : 0/0
  3922 ;;		Unchanged: 0/0
  3923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3928 ;;Total ram usage:        0 bytes
  3929 ;; Hardware stack levels used:    1
  3930 ;; Hardware stack levels required when called:    1
  3931 ;; This function calls:
  3932 ;;		Nothing
  3933 ;; This function is called by:
  3934 ;;		_main
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           
  3939                           ;psect for function _init_GPIO
  3940  01DE                     _init_GPIO:	
  3941                           
  3942                           ;main.c: 185:     TRISBbits.TRISB2 = 0;
  3943                           
  3944                           ;incstack = 0
  3945                           ; Regs used in _init_GPIO: [wreg+status,2+status,0]
  3946  01DE  0021               	movlb	1	; select bank1
  3947  01DF  110D               	bcf	13,2	;volatile
  3948                           
  3949                           ;main.c: 186:     ANSELBbits.ANSB2 = 0;
  3950  01E0  0023               	movlb	3	; select bank3
  3951  01E1  110D               	bcf	13,2	;volatile
  3952                           
  3953                           ;main.c: 187:     TRISBbits.TRISB3 = 1;
  3954  01E2  0021               	movlb	1	; select bank1
  3955  01E3  158D               	bsf	13,3	;volatile
  3956                           
  3957                           ;main.c: 188:     ANSELBbits.ANSB3 = 0;
  3958  01E4  0023               	movlb	3	; select bank3
  3959  01E5  118D               	bcf	13,3	;volatile
  3960                           
  3961                           ;main.c: 193:     ANSELCbits.ANSC4 = 0;
  3962  01E6  120E               	bcf	14,4	;volatile
  3963                           
  3964                           ;main.c: 194:     ANSELCbits.ANSC5 = 0;
  3965  01E7  128E               	bcf	14,5	;volatile
  3966                           
  3967                           ;main.c: 195:     TRISCbits.TRISC4 = 1;
  3968  01E8  0021               	movlb	1	; select bank1
  3969  01E9  160E               	bsf	14,4	;volatile
  3970                           
  3971                           ;main.c: 196:     TRISCbits.TRISC5 = 1;
  3972  01EA  168E               	bsf	14,5	;volatile
  3973                           
  3974                           ;main.c: 205:     TRISAbits.TRISA4 = 0;
  3975  01EB  120C               	bcf	12,4	;volatile
  3976                           
  3977                           ;main.c: 206:     TRISAbits.TRISA5 = 0;
  3978  01EC  128C               	bcf	12,5	;volatile
  3979                           
  3980                           ;main.c: 207:     TRISEbits.TRISE0 = 0;
  3981  01ED  1010               	bcf	16,0	;volatile
  3982                           
  3983                           ;main.c: 213:     PPSLOCK = 0x55;
  3984  01EE  3055               	movlw	85
  3985  01EF  003C               	movlb	28	; select bank28
  3986  01F0  008F               	movwf	15	;volsfr
  3987                           
  3988                           ;main.c: 214:     PPSLOCK = 0xAA;
  3989  01F1  30AA               	movlw	170
  3990  01F2  008F               	movwf	15	;volsfr
  3991                           
  3992                           ;main.c: 215:     PPSLOCKbits.PPSLOCKED = 0x00;
  3993  01F3  100F               	bcf	15,0	;volsfr
  3994                           
  3995                           ;main.c: 219:     RC4PPSbits.RC4PPS = 0x0011;
  3996  01F4  003D               	movlb	29	; select bank29
  3997  01F5  0824               	movf	36,w	;volatile
  3998  01F6  39E0               	andlw	-32
  3999  01F7  3811               	iorlw	17
  4000  01F8  00A4               	movwf	36	;volatile
  4001                           
  4002                           ;main.c: 220:     SSPDATPPSbits.SSPDATPPS = 0x0014;
  4003  01F9  003C               	movlb	28	; select bank28
  4004  01FA  0821               	movf	33,w	;volatile
  4005  01FB  39E0               	andlw	-32
  4006  01FC  3814               	iorlw	20
  4007  01FD  00A1               	movwf	33	;volatile
  4008                           
  4009                           ;main.c: 221:     SSPCLKPPSbits.SSPCLKPPS = 0x0015;
  4010  01FE  0820               	movf	32,w	;volatile
  4011  01FF  39E0               	andlw	-32
  4012  0200  3815               	iorlw	21
  4013  0201  00A0               	movwf	32	;volatile
  4014                           
  4015                           ;main.c: 222:     RC5PPSbits.RC5PPS = 0x0010;
  4016  0202  003D               	movlb	29	; select bank29
  4017  0203  0825               	movf	37,w	;volatile
  4018  0204  39E0               	andlw	-32
  4019  0205  3810               	iorlw	16
  4020  0206  00A5               	movwf	37	;volatile
  4021                           
  4022                           ;main.c: 225:     RB2PPSbits.RB2PPS = 0x14;
  4023  0207  081A               	movf	26,w	;volatile
  4024  0208  39E0               	andlw	-32
  4025  0209  3814               	iorlw	20
  4026  020A  009A               	movwf	26	;volatile
  4027                           
  4028                           ;main.c: 226:     RXPPSbits.RXPPS = 0x0B;
  4029  020B  003C               	movlb	28	; select bank28
  4030  020C  0824               	movf	36,w	;volatile
  4031  020D  39E0               	andlw	-32
  4032  020E  380B               	iorlw	11
  4033  020F  00A4               	movwf	36	;volatile
  4034                           
  4035                           ;main.c: 228:     PPSLOCK = 0x55;
  4036  0210  3055               	movlw	85
  4037  0211  008F               	movwf	15	;volsfr
  4038                           
  4039                           ;main.c: 229:     PPSLOCK = 0xAA;
  4040  0212  30AA               	movlw	170
  4041  0213  008F               	movwf	15	;volsfr
  4042                           
  4043                           ;main.c: 230:     PPSLOCKbits.PPSLOCKED = 0x01;
  4044  0214  140F               	bsf	15,0	;volsfr
  4045  0215  0008               	return
  4046  0216                     __end_of_init_GPIO:	
  4047                           
  4048                           	psect	text20
  4049  03D9                     __ptext20:	
  4050 ;; *************** function _initClock *****************
  4051 ;; Defined at:
  4052 ;;		line 153 in file "main.c"
  4053 ;; Parameters:    Size  Location     Type
  4054 ;;		None
  4055 ;; Auto vars:     Size  Location     Type
  4056 ;;		None
  4057 ;; Return value:  Size  Location     Type
  4058 ;;                  1    wreg      void 
  4059 ;; Registers used:
  4060 ;;		status,2, status,0, pclath, cstack
  4061 ;; Tracked objects:
  4062 ;;		On entry : 0/0
  4063 ;;		On exit  : 0/0
  4064 ;;		Unchanged: 0/0
  4065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4070 ;;Total ram usage:        0 bytes
  4071 ;; Hardware stack levels used:    1
  4072 ;; Hardware stack levels required when called:    2
  4073 ;; This function calls:
  4074 ;;		_internal_16
  4075 ;; This function is called by:
  4076 ;;		_main
  4077 ;; This function uses a non-reentrant model
  4078 ;;
  4079                           
  4080                           
  4081                           ;psect for function _initClock
  4082  03D9                     _initClock:	
  4083                           
  4084                           ;main.c: 155:     internal_16();
  4085                           
  4086                           ;incstack = 0
  4087                           ; Regs used in _initClock: [status,2+status,0+pclath+cstack]
  4088  03D9  3183  2395         	fcall	_internal_16
  4089  03DB  0008               	return
  4090  03DC                     __end_of_initClock:	
  4091                           
  4092                           	psect	text21
  4093  0395                     __ptext21:	
  4094 ;; *************** function _internal_16 *****************
  4095 ;; Defined at:
  4096 ;;		line 26 in file "pic16f1719_internals.c"
  4097 ;; Parameters:    Size  Location     Type
  4098 ;;		None
  4099 ;; Auto vars:     Size  Location     Type
  4100 ;;		None
  4101 ;; Return value:  Size  Location     Type
  4102 ;;                  1    wreg      void 
  4103 ;; Registers used:
  4104 ;;		None
  4105 ;; Tracked objects:
  4106 ;;		On entry : 0/0
  4107 ;;		On exit  : 0/0
  4108 ;;		Unchanged: 0/0
  4109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4114 ;;Total ram usage:        0 bytes
  4115 ;; Hardware stack levels used:    1
  4116 ;; Hardware stack levels required when called:    1
  4117 ;; This function calls:
  4118 ;;		Nothing
  4119 ;; This function is called by:
  4120 ;;		_initClock
  4121 ;; This function uses a non-reentrant model
  4122 ;;
  4123                           
  4124                           
  4125                           ;psect for function _internal_16
  4126  0395                     _internal_16:	
  4127                           
  4128                           ;pic16f1719_internals.c: 28: SCS0 = 0;
  4129                           
  4130                           ;incstack = 0
  4131                           ; Regs used in _internal_16: []
  4132  0395  0021               	movlb	1	; select bank1
  4133  0396  1019               	bcf	25,0	;volatile
  4134                           
  4135                           ;pic16f1719_internals.c: 29: SCS1 = 0;
  4136  0397  1099               	bcf	25,1	;volatile
  4137                           
  4138                           ;pic16f1719_internals.c: 31: IRCF0 = 1;
  4139  0398  1599               	bsf	25,3	;volatile
  4140                           
  4141                           ;pic16f1719_internals.c: 32: IRCF1 = 1;
  4142  0399  1619               	bsf	25,4	;volatile
  4143                           
  4144                           ;pic16f1719_internals.c: 33: IRCF2 = 1;
  4145  039A  1699               	bsf	25,5	;volatile
  4146                           
  4147                           ;pic16f1719_internals.c: 34: IRCF3 = 1;
  4148  039B  1719               	bsf	25,6	;volatile
  4149                           
  4150                           ;pic16f1719_internals.c: 36: SPLLEN = 0;
  4151  039C  1399               	bcf	25,7	;volatile
  4152  039D  0008               	return
  4153  039E                     __end_of_internal_16:	
  4154                           
  4155                           	psect	text22
  4156  002B                     __ptext22:	
  4157 ;; *************** function _EUSART_Initialize *****************
  4158 ;; Defined at:
  4159 ;;		line 6 in file "EUSART.c"
  4160 ;; Parameters:    Size  Location     Type
  4161 ;;  baudrate        4    6[BANK0 ] const long 
  4162 ;; Auto vars:     Size  Location     Type
  4163 ;;  x               2   10[COMMON] unsigned int 
  4164 ;; Return value:  Size  Location     Type
  4165 ;;                  1    wreg      unsigned char 
  4166 ;; Registers used:
  4167 ;;		wreg, status,2, status,0, pclath, cstack
  4168 ;; Tracked objects:
  4169 ;;		On entry : 0/0
  4170 ;;		On exit  : 0/0
  4171 ;;		Unchanged: 0/0
  4172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4173 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4174 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4175 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4176 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4177 ;;Total ram usage:       18 bytes
  4178 ;; Hardware stack levels used:    1
  4179 ;; Hardware stack levels required when called:    2
  4180 ;; This function calls:
  4181 ;;		___aldiv
  4182 ;; This function is called by:
  4183 ;;		_main
  4184 ;; This function uses a non-reentrant model
  4185 ;;
  4186                           
  4187                           
  4188                           ;psect for function _EUSART_Initialize
  4189  002B                     _EUSART_Initialize:	
  4190                           
  4191                           ;EUSART.c: 6: char EUSART_Initialize(const long int baudrate);EUSART.c: 7: {;EUSART.c: 8
      +                          :  unsigned int x;;EUSART.c: 9:  x = (16000000 - baudrate*64)/(baudrate*64);
  4192                           
  4193                           ;incstack = 0
  4194                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4195  002B  0020               	movlb	0	; select bank0
  4196  002C  0826               	movf	EUSART_Initialize@baudrate,w
  4197  002D  00AA               	movwf	??_EUSART_Initialize
  4198  002E  0827               	movf	EUSART_Initialize@baudrate+1,w
  4199  002F  00AB               	movwf	??_EUSART_Initialize+1
  4200  0030  0828               	movf	EUSART_Initialize@baudrate+2,w
  4201  0031  00AC               	movwf	??_EUSART_Initialize+2
  4202  0032  0829               	movf	EUSART_Initialize@baudrate+3,w
  4203  0033  00AD               	movwf	??_EUSART_Initialize+3
  4204  0034  3006               	movlw	6
  4205  0035                     u665:	
  4206  0035  35AA               	lslf	??_EUSART_Initialize,f
  4207  0036  0DAB               	rlf	??_EUSART_Initialize+1,f
  4208  0037  0DAC               	rlf	??_EUSART_Initialize+2,f
  4209  0038  0DAD               	rlf	??_EUSART_Initialize+3,f
  4210  0039  0B89               	decfsz	9,f
  4211  003A  2835               	goto	u665
  4212  003B  082D               	movf	??_EUSART_Initialize+3,w
  4213  003C  00F4               	movwf	___aldiv@divisor+3
  4214  003D  082C               	movf	??_EUSART_Initialize+2,w
  4215  003E  00F3               	movwf	___aldiv@divisor+2
  4216  003F  082B               	movf	??_EUSART_Initialize+1,w
  4217  0040  00F2               	movwf	___aldiv@divisor+1
  4218  0041  082A               	movf	??_EUSART_Initialize,w
  4219  0042  00F1               	movwf	___aldiv@divisor
  4220  0043  0826               	movf	EUSART_Initialize@baudrate,w
  4221  0044  00AE               	movwf	??_EUSART_Initialize+4
  4222  0045  0827               	movf	EUSART_Initialize@baudrate+1,w
  4223  0046  00AF               	movwf	??_EUSART_Initialize+5
  4224  0047  0828               	movf	EUSART_Initialize@baudrate+2,w
  4225  0048  00B0               	movwf	??_EUSART_Initialize+6
  4226  0049  0829               	movf	EUSART_Initialize@baudrate+3,w
  4227  004A  00B1               	movwf	??_EUSART_Initialize+7
  4228  004B  3006               	movlw	6
  4229  004C                     u675:	
  4230  004C  35AE               	lslf	??_EUSART_Initialize+4,f
  4231  004D  0DAF               	rlf	??_EUSART_Initialize+5,f
  4232  004E  0DB0               	rlf	??_EUSART_Initialize+6,f
  4233  004F  0DB1               	rlf	??_EUSART_Initialize+7,f
  4234  0050  0B89               	decfsz	9,f
  4235  0051  284C               	goto	u675
  4236  0052  3000               	movlw	0
  4237  0053  00B2               	movwf	??_EUSART_Initialize+8
  4238  0054  3024               	movlw	36
  4239  0055  00B3               	movwf	??_EUSART_Initialize+9
  4240  0056  30F4               	movlw	244
  4241  0057  00B4               	movwf	??_EUSART_Initialize+10
  4242  0058  3000               	movlw	0
  4243  0059  00B5               	movwf	??_EUSART_Initialize+11
  4244  005A  082E               	movf	??_EUSART_Initialize+4,w
  4245  005B  02B2               	subwf	??_EUSART_Initialize+8,f
  4246  005C  082F               	movf	??_EUSART_Initialize+5,w
  4247  005D  3BB3               	subwfb	??_EUSART_Initialize+9,f
  4248  005E  0830               	movf	??_EUSART_Initialize+6,w
  4249  005F  3BB4               	subwfb	??_EUSART_Initialize+10,f
  4250  0060  0831               	movf	??_EUSART_Initialize+7,w
  4251  0061  3BB5               	subwfb	??_EUSART_Initialize+11,f
  4252  0062  0835               	movf	??_EUSART_Initialize+11,w
  4253  0063  00F8               	movwf	___aldiv@dividend+3
  4254  0064  0834               	movf	??_EUSART_Initialize+10,w
  4255  0065  00F7               	movwf	___aldiv@dividend+2
  4256  0066  0833               	movf	??_EUSART_Initialize+9,w
  4257  0067  00F6               	movwf	___aldiv@dividend+1
  4258  0068  0832               	movf	??_EUSART_Initialize+8,w
  4259  0069  00F5               	movwf	___aldiv@dividend
  4260  006A  3180  20D3  3180   	fcall	___aldiv
  4261  006D  0872               	movf	?___aldiv+1,w
  4262  006E  00FB               	movwf	EUSART_Initialize@x+1
  4263  006F  0871               	movf	?___aldiv,w
  4264  0070  00FA               	movwf	EUSART_Initialize@x
  4265                           
  4266                           ;EUSART.c: 10:  if(x>255)
  4267  0071  3001               	movlw	1
  4268  0072  027B               	subwf	EUSART_Initialize@x+1,w
  4269  0073  3000               	movlw	0
  4270  0074  1903               	skipnz
  4271  0075  027A               	subwf	EUSART_Initialize@x,w
  4272  0076  1C03               	skipc
  4273  0077  28C0               	goto	l1325
  4274                           
  4275                           ;EUSART.c: 11:  {;EUSART.c: 12:   x = (16000000 - baudrate*16)/(baudrate*16);
  4276  0078  0020               	movlb	0	; select bank0
  4277  0079  0826               	movf	EUSART_Initialize@baudrate,w
  4278  007A  00AA               	movwf	??_EUSART_Initialize
  4279  007B  0827               	movf	EUSART_Initialize@baudrate+1,w
  4280  007C  00AB               	movwf	??_EUSART_Initialize+1
  4281  007D  0828               	movf	EUSART_Initialize@baudrate+2,w
  4282  007E  00AC               	movwf	??_EUSART_Initialize+2
  4283  007F  0829               	movf	EUSART_Initialize@baudrate+3,w
  4284  0080  00AD               	movwf	??_EUSART_Initialize+3
  4285  0081  3004               	movlw	4
  4286  0082                     u695:	
  4287  0082  35AA               	lslf	??_EUSART_Initialize,f
  4288  0083  0DAB               	rlf	??_EUSART_Initialize+1,f
  4289  0084  0DAC               	rlf	??_EUSART_Initialize+2,f
  4290  0085  0DAD               	rlf	??_EUSART_Initialize+3,f
  4291  0086  0B89               	decfsz	9,f
  4292  0087  2882               	goto	u695
  4293  0088  082D               	movf	??_EUSART_Initialize+3,w
  4294  0089  00F4               	movwf	___aldiv@divisor+3
  4295  008A  082C               	movf	??_EUSART_Initialize+2,w
  4296  008B  00F3               	movwf	___aldiv@divisor+2
  4297  008C  082B               	movf	??_EUSART_Initialize+1,w
  4298  008D  00F2               	movwf	___aldiv@divisor+1
  4299  008E  082A               	movf	??_EUSART_Initialize,w
  4300  008F  00F1               	movwf	___aldiv@divisor
  4301  0090  0826               	movf	EUSART_Initialize@baudrate,w
  4302  0091  00AE               	movwf	??_EUSART_Initialize+4
  4303  0092  0827               	movf	EUSART_Initialize@baudrate+1,w
  4304  0093  00AF               	movwf	??_EUSART_Initialize+5
  4305  0094  0828               	movf	EUSART_Initialize@baudrate+2,w
  4306  0095  00B0               	movwf	??_EUSART_Initialize+6
  4307  0096  0829               	movf	EUSART_Initialize@baudrate+3,w
  4308  0097  00B1               	movwf	??_EUSART_Initialize+7
  4309  0098  3004               	movlw	4
  4310  0099                     u705:	
  4311  0099  35AE               	lslf	??_EUSART_Initialize+4,f
  4312  009A  0DAF               	rlf	??_EUSART_Initialize+5,f
  4313  009B  0DB0               	rlf	??_EUSART_Initialize+6,f
  4314  009C  0DB1               	rlf	??_EUSART_Initialize+7,f
  4315  009D  0B89               	decfsz	9,f
  4316  009E  2899               	goto	u705
  4317  009F  3000               	movlw	0
  4318  00A0  00B2               	movwf	??_EUSART_Initialize+8
  4319  00A1  3024               	movlw	36
  4320  00A2  00B3               	movwf	??_EUSART_Initialize+9
  4321  00A3  30F4               	movlw	244
  4322  00A4  00B4               	movwf	??_EUSART_Initialize+10
  4323  00A5  3000               	movlw	0
  4324  00A6  00B5               	movwf	??_EUSART_Initialize+11
  4325  00A7  082E               	movf	??_EUSART_Initialize+4,w
  4326  00A8  02B2               	subwf	??_EUSART_Initialize+8,f
  4327  00A9  082F               	movf	??_EUSART_Initialize+5,w
  4328  00AA  3BB3               	subwfb	??_EUSART_Initialize+9,f
  4329  00AB  0830               	movf	??_EUSART_Initialize+6,w
  4330  00AC  3BB4               	subwfb	??_EUSART_Initialize+10,f
  4331  00AD  0831               	movf	??_EUSART_Initialize+7,w
  4332  00AE  3BB5               	subwfb	??_EUSART_Initialize+11,f
  4333  00AF  0835               	movf	??_EUSART_Initialize+11,w
  4334  00B0  00F8               	movwf	___aldiv@dividend+3
  4335  00B1  0834               	movf	??_EUSART_Initialize+10,w
  4336  00B2  00F7               	movwf	___aldiv@dividend+2
  4337  00B3  0833               	movf	??_EUSART_Initialize+9,w
  4338  00B4  00F6               	movwf	___aldiv@dividend+1
  4339  00B5  0832               	movf	??_EUSART_Initialize+8,w
  4340  00B6  00F5               	movwf	___aldiv@dividend
  4341  00B7  3180  20D3  3180   	fcall	___aldiv
  4342  00BA  0872               	movf	?___aldiv+1,w
  4343  00BB  00FB               	movwf	EUSART_Initialize@x+1
  4344  00BC  0871               	movf	?___aldiv,w
  4345  00BD  00FA               	movwf	EUSART_Initialize@x
  4346                           
  4347                           ;EUSART.c: 13:   BRGH = 1;
  4348  00BE  0023               	movlb	3	; select bank3
  4349  00BF  151E               	bsf	30,2	;volatile
  4350  00C0                     l1325:	
  4351                           
  4352                           ;EUSART.c: 15:  if(x<256)
  4353  00C0  3001               	movlw	1
  4354  00C1  027B               	subwf	EUSART_Initialize@x+1,w
  4355  00C2  3000               	movlw	0
  4356  00C3  1903               	skipnz
  4357  00C4  027A               	subwf	EUSART_Initialize@x,w
  4358  00C5  1803               	skipnc
  4359  00C6  0008               	return
  4360                           
  4361                           ;EUSART.c: 16:  {;EUSART.c: 17:    SPBRG = x;
  4362  00C7  087A               	movf	EUSART_Initialize@x,w
  4363  00C8  0023               	movlb	3	; select bank3
  4364  00C9  009B               	movwf	27	;volatile
  4365                           
  4366                           ;EUSART.c: 18:    SYNC = 0;
  4367  00CA  121E               	bcf	30,4	;volatile
  4368                           
  4369                           ;EUSART.c: 19:    SPEN = 1;
  4370  00CB  179D               	bsf	29,7	;volatile
  4371                           
  4372                           ;EUSART.c: 20:           TRISC7 = 1;
  4373  00CC  0021               	movlb	1	; select bank1
  4374  00CD  178E               	bsf	14,7	;volatile
  4375                           
  4376                           ;EUSART.c: 21:           TRISC6 = 1;
  4377  00CE  170E               	bsf	14,6	;volatile
  4378                           
  4379                           ;EUSART.c: 22:           CREN = 1;
  4380  00CF  0023               	movlb	3	; select bank3
  4381  00D0  161D               	bsf	29,4	;volatile
  4382                           
  4383                           ;EUSART.c: 23:           TXEN = 1;
  4384  00D1  169E               	bsf	30,5	;volatile
  4385  00D2  0008               	return
  4386  00D3                     __end_of_EUSART_Initialize:	
  4387                           
  4388                           	psect	text23
  4389  00D3                     __ptext23:	
  4390 ;; *************** function ___aldiv *****************
  4391 ;; Defined at:
  4392 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
  4393 ;; Parameters:    Size  Location     Type
  4394 ;;  divisor         4    1[COMMON] long 
  4395 ;;  dividend        4    5[COMMON] long 
  4396 ;; Auto vars:     Size  Location     Type
  4397 ;;  quotient        4    2[BANK0 ] long 
  4398 ;;  sign            1    1[BANK0 ] unsigned char 
  4399 ;;  counter         1    0[BANK0 ] unsigned char 
  4400 ;; Return value:  Size  Location     Type
  4401 ;;                  4    1[COMMON] long 
  4402 ;; Registers used:
  4403 ;;		wreg, status,2, status,0
  4404 ;; Tracked objects:
  4405 ;;		On entry : 0/0
  4406 ;;		On exit  : 0/0
  4407 ;;		Unchanged: 0/0
  4408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4409 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4410 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4411 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4412 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4413 ;;Total ram usage:       15 bytes
  4414 ;; Hardware stack levels used:    1
  4415 ;; Hardware stack levels required when called:    1
  4416 ;; This function calls:
  4417 ;;		Nothing
  4418 ;; This function is called by:
  4419 ;;		_EUSART_Initialize
  4420 ;; This function uses a non-reentrant model
  4421 ;;
  4422                           
  4423                           
  4424                           ;psect for function ___aldiv
  4425  00D3                     ___aldiv:	
  4426                           
  4427                           ;incstack = 0
  4428                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  4429  00D3  0020               	movlb	0	; select bank0
  4430  00D4  01A1               	clrf	___aldiv@sign
  4431  00D5  1FF4               	btfss	___aldiv@divisor+3,7
  4432  00D6  28E4               	goto	l456
  4433  00D7  09F1               	comf	___aldiv@divisor,f
  4434  00D8  09F2               	comf	___aldiv@divisor+1,f
  4435  00D9  09F3               	comf	___aldiv@divisor+2,f
  4436  00DA  09F4               	comf	___aldiv@divisor+3,f
  4437  00DB  0AF1               	incf	___aldiv@divisor,f
  4438  00DC  1903               	skipnz
  4439  00DD  0AF2               	incf	___aldiv@divisor+1,f
  4440  00DE  1903               	skipnz
  4441  00DF  0AF3               	incf	___aldiv@divisor+2,f
  4442  00E0  1903               	skipnz
  4443  00E1  0AF4               	incf	___aldiv@divisor+3,f
  4444  00E2  01A1               	clrf	___aldiv@sign
  4445  00E3  0AA1               	incf	___aldiv@sign,f
  4446  00E4                     l456:	
  4447  00E4  1FF8               	btfss	___aldiv@dividend+3,7
  4448  00E5  28F5               	goto	l1287
  4449  00E6  09F5               	comf	___aldiv@dividend,f
  4450  00E7  09F6               	comf	___aldiv@dividend+1,f
  4451  00E8  09F7               	comf	___aldiv@dividend+2,f
  4452  00E9  09F8               	comf	___aldiv@dividend+3,f
  4453  00EA  0AF5               	incf	___aldiv@dividend,f
  4454  00EB  1903               	skipnz
  4455  00EC  0AF6               	incf	___aldiv@dividend+1,f
  4456  00ED  1903               	skipnz
  4457  00EE  0AF7               	incf	___aldiv@dividend+2,f
  4458  00EF  1903               	skipnz
  4459  00F0  0AF8               	incf	___aldiv@dividend+3,f
  4460  00F1  3001               	movlw	1
  4461  00F2  00F9               	movwf	??___aldiv
  4462  00F3  0879               	movf	??___aldiv,w
  4463  00F4  06A1               	xorwf	___aldiv@sign,f
  4464  00F5                     l1287:	
  4465  00F5  3000               	movlw	0
  4466  00F6  00A5               	movwf	___aldiv@quotient+3
  4467  00F7  3000               	movlw	0
  4468  00F8  00A4               	movwf	___aldiv@quotient+2
  4469  00F9  3000               	movlw	0
  4470  00FA  00A3               	movwf	___aldiv@quotient+1
  4471  00FB  3000               	movlw	0
  4472  00FC  00A2               	movwf	___aldiv@quotient
  4473  00FD  0874               	movf	___aldiv@divisor+3,w
  4474  00FE  0473               	iorwf	___aldiv@divisor+2,w
  4475  00FF  0472               	iorwf	___aldiv@divisor+1,w
  4476  0100  0471               	iorwf	___aldiv@divisor,w
  4477  0101  1903               	skipnz
  4478  0102  293E               	goto	l1309
  4479  0103  01A0               	clrf	___aldiv@counter
  4480  0104  0AA0               	incf	___aldiv@counter,f
  4481  0105                     l1295:	
  4482  0105  1BF4               	btfsc	___aldiv@divisor+3,7
  4483  0106  2913               	goto	l1297
  4484  0107  3001               	movlw	1
  4485  0108                     u595:	
  4486  0108  35F1               	lslf	___aldiv@divisor,f
  4487  0109  0DF2               	rlf	___aldiv@divisor+1,f
  4488  010A  0DF3               	rlf	___aldiv@divisor+2,f
  4489  010B  0DF4               	rlf	___aldiv@divisor+3,f
  4490  010C  0B89               	decfsz	9,f
  4491  010D  2908               	goto	u595
  4492  010E  3001               	movlw	1
  4493  010F  00F9               	movwf	??___aldiv
  4494  0110  0879               	movf	??___aldiv,w
  4495  0111  07A0               	addwf	___aldiv@counter,f
  4496  0112  2905               	goto	l1295
  4497  0113                     l1297:	
  4498  0113  3001               	movlw	1
  4499  0114                     u615:	
  4500  0114  35A2               	lslf	___aldiv@quotient,f
  4501  0115  0DA3               	rlf	___aldiv@quotient+1,f
  4502  0116  0DA4               	rlf	___aldiv@quotient+2,f
  4503  0117  0DA5               	rlf	___aldiv@quotient+3,f
  4504  0118  0B89               	decfsz	9,f
  4505  0119  2914               	goto	u615
  4506  011A  0874               	movf	___aldiv@divisor+3,w
  4507  011B  0278               	subwf	___aldiv@dividend+3,w
  4508  011C  1D03               	skipz
  4509  011D  2928               	goto	u625
  4510  011E  0873               	movf	___aldiv@divisor+2,w
  4511  011F  0277               	subwf	___aldiv@dividend+2,w
  4512  0120  1D03               	skipz
  4513  0121  2928               	goto	u625
  4514  0122  0872               	movf	___aldiv@divisor+1,w
  4515  0123  0276               	subwf	___aldiv@dividend+1,w
  4516  0124  1D03               	skipz
  4517  0125  2928               	goto	u625
  4518  0126  0871               	movf	___aldiv@divisor,w
  4519  0127  0275               	subwf	___aldiv@dividend,w
  4520  0128                     u625:	
  4521  0128  1C03               	skipc
  4522  0129  2933               	goto	l1305
  4523  012A  0871               	movf	___aldiv@divisor,w
  4524  012B  02F5               	subwf	___aldiv@dividend,f
  4525  012C  0872               	movf	___aldiv@divisor+1,w
  4526  012D  3BF6               	subwfb	___aldiv@dividend+1,f
  4527  012E  0873               	movf	___aldiv@divisor+2,w
  4528  012F  3BF7               	subwfb	___aldiv@dividend+2,f
  4529  0130  0874               	movf	___aldiv@divisor+3,w
  4530  0131  3BF8               	subwfb	___aldiv@dividend+3,f
  4531  0132  1422               	bsf	___aldiv@quotient,0
  4532  0133                     l1305:	
  4533  0133  3001               	movlw	1
  4534  0134                     u635:	
  4535  0134  36F4               	lsrf	___aldiv@divisor+3,f
  4536  0135  0CF3               	rrf	___aldiv@divisor+2,f
  4537  0136  0CF2               	rrf	___aldiv@divisor+1,f
  4538  0137  0CF1               	rrf	___aldiv@divisor,f
  4539  0138  0B89               	decfsz	9,f
  4540  0139  2934               	goto	u635
  4541  013A  3001               	movlw	1
  4542  013B  02A0               	subwf	___aldiv@counter,f
  4543  013C  1D03               	btfss	3,2
  4544  013D  2913               	goto	l1297
  4545  013E                     l1309:	
  4546  013E  0821               	movf	___aldiv@sign,w
  4547  013F  1903               	btfsc	3,2
  4548  0140  294C               	goto	l1313
  4549  0141  09A2               	comf	___aldiv@quotient,f
  4550  0142  09A3               	comf	___aldiv@quotient+1,f
  4551  0143  09A4               	comf	___aldiv@quotient+2,f
  4552  0144  09A5               	comf	___aldiv@quotient+3,f
  4553  0145  0AA2               	incf	___aldiv@quotient,f
  4554  0146  1903               	skipnz
  4555  0147  0AA3               	incf	___aldiv@quotient+1,f
  4556  0148  1903               	skipnz
  4557  0149  0AA4               	incf	___aldiv@quotient+2,f
  4558  014A  1903               	skipnz
  4559  014B  0AA5               	incf	___aldiv@quotient+3,f
  4560  014C                     l1313:	
  4561  014C  0825               	movf	___aldiv@quotient+3,w
  4562  014D  00F4               	movwf	?___aldiv+3
  4563  014E  0824               	movf	___aldiv@quotient+2,w
  4564  014F  00F3               	movwf	?___aldiv+2
  4565  0150  0823               	movf	___aldiv@quotient+1,w
  4566  0151  00F2               	movwf	?___aldiv+1
  4567  0152  0822               	movf	___aldiv@quotient,w
  4568  0153  00F1               	movwf	?___aldiv
  4569  0154  0008               	return
  4570  0155                     __end_of___aldiv:	
  4571                           
  4572                           	psect	intentry
  4573  0004                     __pintentry:	
  4574 ;; *************** function _myIsr *****************
  4575 ;; Defined at:
  4576 ;;		line 58 in file "main.c"
  4577 ;; Parameters:    Size  Location     Type
  4578 ;;		None
  4579 ;; Auto vars:     Size  Location     Type
  4580 ;;		None
  4581 ;; Return value:  Size  Location     Type
  4582 ;;                  1    wreg      void 
  4583 ;; Registers used:
  4584 ;;		wreg, status,2, status,0
  4585 ;; Tracked objects:
  4586 ;;		On entry : 0/0
  4587 ;;		On exit  : 0/0
  4588 ;;		Unchanged: 0/0
  4589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4592 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4593 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4594 ;;Total ram usage:        1 bytes
  4595 ;; Hardware stack levels used:    1
  4596 ;; This function calls:
  4597 ;;		Nothing
  4598 ;; This function is called by:
  4599 ;;		Interrupt level 1
  4600 ;; This function uses a non-reentrant model
  4601 ;;
  4602                           
  4603  0004                     _myIsr:	
  4604                           
  4605                           ;incstack = 0
  4606  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4607                           
  4608                           ; Regs used in _myIsr: [wreg+status,2+status,0]
  4609  0005  3180               	pagesel	$
  4610                           
  4611                           ;main.c: 60:     static uint8_t count = 0;;main.c: 62:     if (PIR1bits.TMR1IF && PIE1bi
      +                          ts.TMR1IE) {
  4612  0006  0020               	movlb	0	; select bank0
  4613  0007  1C11               	btfss	17,0	;volatile
  4614  0008  281B               	goto	i1l97
  4615  0009  0021               	movlb	1	; select bank1
  4616  000A  1C11               	btfss	17,0	;volatile
  4617  000B  281B               	goto	i1l97
  4618                           
  4619                           ;main.c: 63:         PIR1bits.TMR1IF = 0;
  4620  000C  0020               	movlb	0	; select bank0
  4621  000D  1011               	bcf	17,0	;volatile
  4622                           
  4623                           ;main.c: 64:         count++;
  4624  000E  3001               	movlw	1
  4625  000F  00F0               	movwf	??_myIsr
  4626  0010  0870               	movf	??_myIsr,w
  4627  0011  07C1               	addwf	myIsr@count,f
  4628                           
  4629                           ;main.c: 67:         if (count == 61) {
  4630  0012  303D               	movlw	61
  4631  0013  0641               	xorwf	myIsr@count,w
  4632  0014  1D03               	btfss	3,2
  4633  0015  281B               	goto	i1l97
  4634                           
  4635                           ;main.c: 68:             tmr1_flag = 1;
  4636  0016  3001               	movlw	1
  4637  0017  00F0               	movwf	??_myIsr
  4638  0018  0870               	movf	??_myIsr,w
  4639  0019  00C2               	movwf	_tmr1_flag	;volatile
  4640                           
  4641                           ;main.c: 69:             count = 0;
  4642  001A  01C1               	clrf	myIsr@count
  4643  001B                     i1l97:	
  4644  001B  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4645  001C  0009               	retfie
  4646  001D                     __end_of_myIsr:	
  4647  007E                     btemp	set	126	;btemp
  4648  007E                     int$flags	set	126
  4649  007E                     wtemp0	set	126


Data Sizes:
    Strings     37
    Constant    90
    Data        0
    BSS         14
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     23      36
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    EUSART_Write_Text@text	PTR unsigned char  size(2) Largest target is 37
		 -> STR_1(CODE[37]), 


Critical Paths under _main in COMMON

    _main->_EUSART_Initialize
    _statemachine->_beginAFEcommunication
    _beginAFEcommunication->_I2C_writeRegister
    _beginAFEcommunication->_readRegister
    _readRegister->_read_I2C_data
    _readRegister->_send_I2C_controlByte
    _I2C_writeRegister->_send_I2C_controlByte
    _RGB_AWAIT_AFE_CONN->_RGB_color
    _EUSART_Write_Text->_EUSART_Write
    _EUSART_Initialize->___aldiv

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_EUSART_Initialize
    _statemachine->_beginAFEcommunication
    _EUSART_Initialize->___aldiv

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _myIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _myIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _myIsr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _myIsr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _myIsr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _myIsr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _myIsr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _myIsr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _myIsr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _myIsr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _myIsr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _myIsr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _myIsr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    4011
                                             22 BANK0      1     1      0
                  _EUSART_Initialize
                          _initClock
                          _init_GPIO
                           _init_I2C
                           _init_RGB
                          _init_TMR1
                       _statemachine
 ---------------------------------------------------------------------------------
 (1) _statemachine                                         2     2      0    3175
                                              6 BANK0      2     2      0
                  _EUSART_Write_Text
                 _RGB_AWAIT_AFE_CONN
                          _RGB_color
              _beginAFEcommunication
                           _init_AFE
 ---------------------------------------------------------------------------------
 (2) _init_AFE                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _beginAFEcommunication                                7     5      2    2453
                                             11 COMMON     1     1      0
                                              0 BANK0      6     4      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _readRegister                                         6     2      4    1121
                                              5 COMMON     6     2      4
                      _read_I2C_data
                      _send_I2C_NACK
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (4) _send_I2C_NACK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _read_I2C_data                                        4     2      2       0
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (3) _I2C_writeRegister                                    6     0      6    1196
                                              5 COMMON     6     0      6
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (4) _send_I2C_stopBit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _send_I2C_startBit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _send_I2C_data                                        2     0      2     250
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _send_I2C_controlByte                                 4     0      4     652
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) _RGB_AWAIT_AFE_CONN                                   1     1      0     250
                                              3 COMMON     1     1      0
                          _RGB_color
 ---------------------------------------------------------------------------------
 (2) _RGB_color                                            2     0      2     250
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write_Text                                    5     3      2     188
                                              2 COMMON     5     3      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_TMR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_RGB                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_I2C                                             1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_GPIO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initClock                                            0     0      0       0
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Initialize                                   18    14      4     836
                                             10 COMMON     2     2      0
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     604
                                              1 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _myIsr                                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Initialize
     ___aldiv
   _initClock
     _internal_16
   _init_GPIO
   _init_I2C
   _init_RGB
   _init_TMR1
   _statemachine
     _EUSART_Write_Text
       _EUSART_Write
     _RGB_AWAIT_AFE_CONN
       _RGB_color
     _RGB_color
     _beginAFEcommunication
       _I2C_writeRegister
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _readRegister
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
     _init_AFE

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     17      24       5       45.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      31      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      31      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Dec 19 22:10:11 2019

           __end_of_send_I2C_data 0395                       __CFG_CP$OFF 0000                               l115 01DD  
                             l233 0352                               l322 0195                               l227 0391  
                             l251 03BA                               l245 03C2                               l239 037F  
                             l263 0388                               l192 03C7                               l290 02BB  
                             l291 02C0                               l292 02D5                               l456 00E4  
                             l288 02B6                               u500 029C                               u510 02AA  
                             u520 02AB                               u615 0114                               u625 0128  
                             u705 0099                               u490 029B                               u635 0134  
                             u665 0035                               u817 0266                               u595 0108  
                             u675 004C                               u827 01BE                               u837 0369  
                             u695 0082                               u775 016F                    RGB_color@color 0071  
                    __CFG_BORV$LO 0000                               wreg 0009                      __CFG_IESO$ON 0000  
                    _statemachine 019B                      __CFG_LVP$OFF 0000                              l1207 02C5  
                            l1313 014C                              l1305 0133                              l1309 013E  
                            l1325 00C0                              l1247 02A5                              l1275 0316  
                            l1507 025F                              l1453 015A                              l1295 0105  
                            l1287 00F5                              l1551 01D2                              l1297 0113  
                            l1553 02CA                              l1467 019C                              l1491 01CD  
                            l1487 01CA                              STR_1 026E                              _BRGH 0CF2  
                            _CREN 0CEC                              _SCS0 04C8                              _SCS1 04C9  
                            i1l97 001B                              _TMR1 0016                              _SPEN 0CEF  
                            _TXEN 0CF5                              _SYNC 0CF4                      __CFG_WRT$OFF 0000  
                            _main 0244                              fsr0h 0005                              fsr1h 0007  
                            indf0 0000                              fsr0l 0004                              fsr1l 0006  
                            btemp 007E                              start 001D          __end_of_send_I2C_stopBit 03BE  
            _send_I2C_controlByte 0379                     ?_EUSART_Write 0070                   __end_of___aldiv 0155  
                           ?_main 0070     I2C_writeRegister@slaveAddress 0075                     __CFG_WDTE$OFF 0000  
                           _IRCF0 04CB                             _IRCF1 04CC                             _IRCF2 04CD  
                           _IRCF3 04CE            __size_of_read_I2C_data 0010                             _SPBRG 019B  
              __size_of_RGB_color 0021                    __CFG_FCMEN$OFF 0000                             _myIsr 0004  
                  __CFG_BOREN$OFF 0000                             status 0003                             wtemp0 007E  
               _SCD_delay_setting 03AE                      ?_internal_16 0070                    __CFG_MCLRE$OFF 0000  
                 __initialization 001F                      __end_of_main 026C          __end_of_UV_delay_setting 03AE  
          beginAFEcommunication@i 0024             ?_send_I2C_controlByte 0071                    ??_EUSART_Write 0071  
                  __CFG_LPBOR$OFF 0000                 _ATmega328_address 026C                            ??_main 0036  
                  __CFG_PLLEN$OFF 0000                     ?_readRegister 0075                            ?_myIsr 0070  
                  __CFG_ZCDDIS$ON 0000     __end_of_OCD_threshold_setting 02F6                            _RC1REG 0199  
       __end_of_SCD_delay_setting 03B6                            _TX1REG 019A                            _SPLLEN 04CF  
                          _SSPADD 0212                            _TRISC6 0476                            _TRISC7 0477  
                          _SSPBUF 0211                     _read_I2C_data 034E                    __CFG_PWRTE$OFF 0000  
               __end_of_RGB_color 02D6                         ??___aldiv 0079                    __CFG_STVREN$ON 0000  
                __end_of_init_I2C 036E                  __end_of_init_AFE 03DD                  __end_of_init_RGB 03D9  
       __end_of_ATmega328_address 026E             _beginAFEcommunication 0155                    ??_readRegister 0079  
    beginAFEcommunication@errCode 0022           __end_of__initialization 0027                    ?_read_I2C_data 0071  
                  __pcstackCOMMON 0070            ??_send_I2C_controlByte 0075                     __end_of_myIsr 001D  
                    _cellVoltages 0037                _RGB_AWAIT_AFE_CONN 0293               ?_RGB_AWAIT_AFE_CONN 0070  
                         ??_myIsr 0070                        __pbssBANK0 0037              __end_of_EUSART_Write 03CE  
              __size_of_init_GPIO 0038                __size_of_initClock 0003                __size_of_init_TMR1 000B  
             statemachine@success 0027                        __pmaintext 0244              ??_RGB_AWAIT_AFE_CONN 0073  
            __size_of_internal_16 0009                 ?_send_I2C_stopBit 0070                   __CFG_PPS1WAY$ON 0000  
                      __pintentry 0004            ?_beginAFEcommunication 0020                ??_send_I2C_stopBit 0071  
                         _PPSLOCK 0E0F            __size_of_send_I2C_NACK 0009                   ??_read_I2C_data 0073  
          __size_of_send_I2C_data 0009                         ?_init_I2C 0070                         ?_init_AFE 0070  
                       ?_init_RGB 0070              __end_of_readRegister 0244                           ___aldiv 00D3  
                         __ptext1 019B                           __ptext2 03DC                           __ptext3 0155  
                         __ptext4 0216                           __ptext5 0383                           __ptext6 034E  
                         __ptext7 02F6                           __ptext8 03B6                           __ptext9 03BE  
               __end_of_init_GPIO 0216                 __end_of_initClock 03DC                 __end_of_init_TMR1 0379  
                       _T1CONbits 0018                  ___aldiv@dividend 0075                           clrloop0 03CF  
            end_of_initialization 0027                        ??_init_I2C 0071                        ??_init_AFE 0071  
                      ??_init_RGB 0071                 _EUSART_Initialize 002B                ?_EUSART_Initialize 0026  
                   _send_I2C_NACK 0383                  ___aldiv@quotient 0022        send_I2C_controlByte@RW_bit 0073  
                   _send_I2C_data 038C                         _RGB_color 02B5                EUSART_Initialize@x 007A  
             ??_EUSART_Initialize 002A                  __CFG_FOSC$INTOSC 0000                         _TRISAbits 008C  
                       _TRISBbits 008D                         _TRISCbits 008E                         _TRISEbits 0090  
           __size_of_EUSART_Write 0008     __end_of_SCD_threshold_setting 034E                         _RXPPSbits 0E24  
               _I2C_writeRegister 02F6         __end_of_EUSART_Initialize 00D3             _OCD_threshold_setting 02D6  
              ?_I2C_writeRegister 0075                    ?_send_I2C_NACK 0070          readRegister@slaveAddress 0075  
                  ?_send_I2C_data 0071               ??_I2C_writeRegister 007B                        ?_RGB_color 0071  
                    _EUSART_Write 03C6       I2C_writeRegister@regAddress 0077               start_initialization 001F  
                   ?_statemachine 0070         __end_of_I2C_writeRegister 0314                 _EUSART_Write_Text 0314  
           __size_of_readRegister 002E                ?_EUSART_Write_Text 0072           ??_beginAFEcommunication 007B  
             ??_EUSART_Write_Text 0074     __size_of_send_I2C_controlByte 000A                       __pbssCOMMON 007C  
                  ??_statemachine 0026                         ___latbits 0003  send_I2C_controlByte@BlockAddress 0071  
                      myIsr@count 0041                     __pcstackBANK0 0020         __size_of_send_I2C_stopBit 0008  
                    _readRegister 0216         __end_of_EUSART_Write_Text 032E        __size_of_EUSART_Initialize 00A8  
                   ??_internal_16 0071                  _OV_delay_setting 039E                 __size_of_init_I2C 0010  
           I2C_writeRegister@data 0079                   ??_send_I2C_NACK 0071                 __size_of_init_AFE 0001  
               __size_of_init_RGB 0005                 _send_I2C_startBit 03BE                   ??_send_I2C_data 0073  
     __size_of_RGB_AWAIT_AFE_CONN 0022                          ?___aldiv 0071                ?_send_I2C_startBit 0070  
                     ??_RGB_color 0073         EUSART_Initialize@baudrate 0026               ??_send_I2C_startBit 0071  
                       _init_GPIO 01DE                         _initClock 03D9                         _init_TMR1 036E  
                       _currState 0043        __size_of_I2C_writeRegister 001E                    __size_of_myIsr 0019  
                 ___aldiv@divisor 0071             __end_of_read_I2C_data 035E                   ___aldiv@counter 0020  
                        _LATAbits 010C                          _LATEbits 0110         __end_of_send_I2C_startBit 03C6  
                       clear_ram0 03CE                         _tmr1_flag 0042                          _PIE1bits 0091  
                        _PIR1bits 0011               __end_of_internal_16 039E                        ?_init_GPIO 0070  
                      ?_initClock 0070                        ?_init_TMR1 0070             send_I2C_data@databyte 0071  
      __size_of_EUSART_Write_Text 001A                 _OCD_delay_setting 032E              __end_of_statemachine 01DE  
                __size_of___aldiv 0082            readRegister@regAddress 0077                        _ANSELBbits 018D  
                      _ANSELCbits 018E                  _send_I2C_stopBit 03B6                          __ptext10 038C  
                        __ptext11 0379                          __ptext20 03D9                          __ptext12 0293  
                        __ptext21 0395                          __ptext13 02B5                          __ptext22 002B  
                        __ptext14 0314                          __ptext23 00D3                          __ptext15 03C6  
                        __ptext16 036E                          __ptext17 03D4                          __ptext18 035E  
                        __ptext19 01DE         __end_of_OCD_delay_setting 033E                          _init_I2C 035E  
                        _init_AFE 03DC                          _init_RGB 03D4                     __size_of_main 0028  
                   _SSPDATPPSbits 0E21             _SCD_threshold_setting 033E        __size_of_send_I2C_startBit 0008  
                     _internal_16 0395                        _RB2PPSbits 0E9A                        _RC1STAbits 019D  
                      _RC4PPSbits 0EA4    __size_of_beginAFEcommunication 0046                     _SSPCLKPPSbits 0E20  
   __end_of_beginAFEcommunication 019B                          int$flags 007E                        _RC5PPSbits 0EA5  
        __end_of_OV_delay_setting 03A6                        _INTCONbits 000B                       ??_init_GPIO 0071  
                     ??_initClock 0071                       ??_init_TMR1 0071                  _UV_delay_setting 03A6  
    __end_of_send_I2C_controlByte 0383                          intlevel1 0000                 __CFG_CLKOUTEN$OFF 0000  
                     _PPSLOCKbits 0E0F                     __pstringtext1 02D6                     __pstringtext2 032E  
                   __pstringtext3 033E                     __pstringtext4 039E                     __pstringtext5 03A6  
                   __pstringtext6 03AE                     __pstringtext7 026C                     __pstringtext8 0000  
           EUSART_Write_Text@text 0072                      ___aldiv@sign 0021                       _SSPCON2bits 0216  
              EUSART_Write@txData 0071             __size_of_statemachine 0043                       _toggleColor 007C  
                      _SSPCONbits 0215        __end_of_RGB_AWAIT_AFE_CONN 02B5                EUSART_Write_Text@i 0075  
           __end_of_send_I2C_NACK 038C  
