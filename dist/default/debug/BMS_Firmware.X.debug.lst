

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Dec 25 01:21:18 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1719
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	stringtext12,global,class=STRCODE,delta=2
    17                           	psect	stringtext13,global,class=STRCODE,delta=2
    18                           	psect	stringtext14,global,class=STRCODE,delta=2
    19                           	psect	stringtext15,global,class=STRCODE,delta=2
    20                           	psect	stringtext16,global,class=STRCODE,delta=2
    21                           	psect	stringtext17,global,class=STRCODE,delta=2
    22                           	psect	stringtext18,global,class=STRCODE,delta=2
    23                           	psect	stringtext19,global,class=STRCODE,delta=2
    24                           	psect	stringtext20,global,class=STRCODE,delta=2
    25                           	psect	stringtext21,global,class=STRCODE,delta=2
    26                           	psect	stringtext22,global,class=STRCODE,delta=2
    27                           	psect	stringtext23,global,class=STRCODE,delta=2
    28                           	psect	stringtext24,global,class=STRCODE,delta=2
    29                           	psect	stringtext25,global,class=STRCODE,delta=2
    30                           	psect	stringtext26,global,class=STRCODE,delta=2
    31                           	psect	stringtext27,global,class=STRCODE,delta=2
    32                           	psect	stringtext28,global,class=STRCODE,delta=2
    33                           	psect	stringtext29,global,class=STRCODE,delta=2
    34                           	psect	stringtext30,global,class=STRCODE,delta=2
    35                           	psect	stringtext31,global,class=STRCODE,delta=2
    36                           	psect	stringtext32,global,class=STRCODE,delta=2
    37                           	psect	stringtext33,global,class=STRCODE,delta=2
    38                           	psect	stringtext34,global,class=STRCODE,delta=2
    39                           	psect	stringtext35,global,class=STRCODE,delta=2
    40                           	psect	stringtext36,global,class=STRCODE,delta=2
    41                           	psect	stringtext37,global,class=STRCODE,delta=2
    42                           	psect	stringtext38,global,class=STRCODE,delta=2
    43                           	psect	stringtext39,global,class=STRCODE,delta=2
    44                           	psect	stringtext40,global,class=STRCODE,delta=2
    45                           	psect	stringtext41,global,class=STRCODE,delta=2
    46                           	psect	cinit,global,class=CODE,merge=1,delta=2
    47                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    48                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    49                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    50                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    51                           	psect	clrtext,global,class=CODE,delta=2
    52                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    53                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    54                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    55                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    56                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    57                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    58                           	psect	text1,local,class=CODE,merge=1,delta=2
    59                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    60                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    61                           	psect	text4,local,class=CODE,merge=1,delta=2
    62                           	psect	text5,local,class=CODE,merge=1,delta=2
    63                           	psect	text6,local,class=CODE,merge=1,delta=2
    64                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    66                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    67                           	psect	text10,local,class=CODE,merge=1,delta=2
    68                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    69                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    70                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    71                           	psect	text14,local,class=CODE,merge=1,delta=2
    72                           	psect	text15,local,class=CODE,merge=1,delta=2
    73                           	psect	text16,local,class=CODE,merge=1,delta=2
    74                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    75                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    76                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    77                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    78                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    79                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    80                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    81                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    82                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    83                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    84                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    85                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    86                           	psect	text29,local,class=CODE,merge=1,delta=2
    87                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    88                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    89                           	psect	text32,local,class=CODE,merge=1,delta=2,group=1
    90                           	psect	text33,local,class=CODE,merge=1,delta=2
    91                           	psect	text34,local,class=CODE,merge=1,delta=2
    92                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    93                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    94                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
    95                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
    96                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    97                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    98                           	psect	text41,local,class=CODE,merge=1,delta=2,group=2
    99                           	psect	text42,local,class=CODE,merge=1,delta=2
   100                           	psect	text43,local,class=CODE,merge=1,delta=2
   101                           	psect	text44,local,class=CODE,merge=1,delta=2,group=1
   102                           	psect	text45,local,class=CODE,merge=1,delta=2
   103                           	psect	text46,local,class=CODE,merge=1,delta=2
   104                           	psect	text47,local,class=CODE,merge=1,delta=2,group=1
   105                           	psect	text48,local,class=CODE,merge=1,delta=2,group=1
   106                           	psect	text49,local,class=CODE,merge=1,delta=2,group=1
   107                           	psect	text50,local,class=CODE,merge=1,delta=2,group=1
   108                           	psect	text51,local,class=CODE,merge=1,delta=2,group=1
   109                           	psect	text52,local,class=CODE,merge=1,delta=2
   110                           	psect	text53,local,class=CODE,merge=1,delta=2
   111                           	psect	text54,local,class=CODE,merge=1,delta=2
   112                           	psect	text55,local,class=CODE,merge=1,delta=2
   113                           	psect	text56,local,class=CODE,merge=1,delta=2
   114                           	psect	text57,local,class=CODE,merge=1,delta=2
   115                           	psect	text58,local,class=CODE,merge=1,delta=2
   116                           	psect	text59,local,class=CODE,merge=1,delta=2
   117                           	psect	text60,local,class=CODE,merge=1,delta=2
   118                           	psect	text61,local,class=CODE,merge=1,delta=2
   119                           	psect	text62,local,class=CODE,merge=1,delta=2
   120                           	psect	text63,local,class=CODE,merge=1,delta=2
   121                           	psect	text64,local,class=CODE,merge=1,delta=2
   122                           	psect	text65,local,class=CODE,merge=1,delta=2
   123                           	psect	text66,local,class=CODE,merge=1,delta=2
   124                           	psect	text67,local,class=CODE,merge=1,delta=2
   125                           	psect	text68,local,class=CODE,merge=1,delta=2
   126                           	psect	text69,local,class=CODE,merge=1,delta=2
   127                           	psect	text70,local,class=CODE,merge=1,delta=2
   128                           	psect	text71,local,class=CODE,merge=1,delta=2
   129                           	psect	text72,local,class=CODE,merge=1,delta=2
   130                           	psect	text73,local,class=CODE,merge=1,delta=2
   131                           	psect	text74,local,class=CODE,merge=1,delta=2,group=1
   132                           	psect	intentry,global,class=CODE,delta=2
   133                           	psect	text5_split_1,local,class=CODE,merge=1,delta=2
   134                           	psect	text5_split_2,local,class=CODE,merge=1,delta=2
   135                           	psect	text5_split_3,local,class=CODE,merge=1,delta=2
   136                           	psect	text5_split_4,local,class=CODE,merge=1,delta=2
   137                           	psect	text5_split_5,local,class=CODE,merge=1,delta=2
   138                           	psect	text5_split_6,local,class=CODE,merge=1,delta=2
   139                           	psect	text5_split_7,local,class=CODE,merge=1,delta=2
   140                           	psect	text5_split_8,local,class=CODE,merge=1,delta=2
   141                           	dabs	1,0xCA0,32
   142                           	dabs	1,0xC20,80
   143                           	dabs	1,0xBE1,15
   144                           	dabs	1,0x2771,0,_messageBuffer
   145                           	dabs	1,0x7E,2
   146  0000                     
   147                           ; Version 2.05
   148                           ; Generated 20/12/2018 GMT
   149                           ; 
   150                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   151                           ; All rights reserved.
   152                           ; 
   153                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   154                           ; 
   155                           ; Redistribution and use in source and binary forms, with or without modification, are
   156                           ; permitted provided that the following conditions are met:
   157                           ; 
   158                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   159                           ;        conditions and the following disclaimer.
   160                           ; 
   161                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   162                           ;        of conditions and the following disclaimer in the documentation and/or other
   163                           ;        materials provided with the distribution.
   164                           ; 
   165                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   166                           ;        software without specific prior written permission.
   167                           ; 
   168                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   169                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   170                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   171                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   172                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   173                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   174                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   175                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   176                           ; 
   177                           ; 
   178                           ; Code-generator required, PIC16F1719 Definitions
   179                           ; 
   180                           ; SFR Addresses
   181  0000                     	;# 
   182  0001                     	;# 
   183  0002                     	;# 
   184  0003                     	;# 
   185  0004                     	;# 
   186  0005                     	;# 
   187  0006                     	;# 
   188  0007                     	;# 
   189  0008                     	;# 
   190  0009                     	;# 
   191  000A                     	;# 
   192  000B                     	;# 
   193  000C                     	;# 
   194  000D                     	;# 
   195  000E                     	;# 
   196  000F                     	;# 
   197  0010                     	;# 
   198  0011                     	;# 
   199  0012                     	;# 
   200  0013                     	;# 
   201  0015                     	;# 
   202  0016                     	;# 
   203  0016                     	;# 
   204  0017                     	;# 
   205  0018                     	;# 
   206  0019                     	;# 
   207  001A                     	;# 
   208  001B                     	;# 
   209  001C                     	;# 
   210  008C                     	;# 
   211  008D                     	;# 
   212  008E                     	;# 
   213  008F                     	;# 
   214  0090                     	;# 
   215  0091                     	;# 
   216  0092                     	;# 
   217  0093                     	;# 
   218  0095                     	;# 
   219  0096                     	;# 
   220  0097                     	;# 
   221  0098                     	;# 
   222  0099                     	;# 
   223  009A                     	;# 
   224  009B                     	;# 
   225  009B                     	;# 
   226  009C                     	;# 
   227  009D                     	;# 
   228  009E                     	;# 
   229  009F                     	;# 
   230  010C                     	;# 
   231  010D                     	;# 
   232  010E                     	;# 
   233  010F                     	;# 
   234  0110                     	;# 
   235  0111                     	;# 
   236  0112                     	;# 
   237  0113                     	;# 
   238  0114                     	;# 
   239  0115                     	;# 
   240  0116                     	;# 
   241  0117                     	;# 
   242  0118                     	;# 
   243  0119                     	;# 
   244  011A                     	;# 
   245  011B                     	;# 
   246  011B                     	;# 
   247  011C                     	;# 
   248  018C                     	;# 
   249  018D                     	;# 
   250  018E                     	;# 
   251  018F                     	;# 
   252  0190                     	;# 
   253  0191                     	;# 
   254  0191                     	;# 
   255  0192                     	;# 
   256  0193                     	;# 
   257  0193                     	;# 
   258  0194                     	;# 
   259  0195                     	;# 
   260  0196                     	;# 
   261  0197                     	;# 
   262  0199                     	;# 
   263  0199                     	;# 
   264  0199                     	;# 
   265  019A                     	;# 
   266  019A                     	;# 
   267  019A                     	;# 
   268  019B                     	;# 
   269  019B                     	;# 
   270  019B                     	;# 
   271  019B                     	;# 
   272  019B                     	;# 
   273  019C                     	;# 
   274  019C                     	;# 
   275  019C                     	;# 
   276  019D                     	;# 
   277  019D                     	;# 
   278  019D                     	;# 
   279  019E                     	;# 
   280  019E                     	;# 
   281  019E                     	;# 
   282  019F                     	;# 
   283  019F                     	;# 
   284  019F                     	;# 
   285  019F                     	;# 
   286  019F                     	;# 
   287  020C                     	;# 
   288  020D                     	;# 
   289  020E                     	;# 
   290  020F                     	;# 
   291  0210                     	;# 
   292  0211                     	;# 
   293  0211                     	;# 
   294  0212                     	;# 
   295  0212                     	;# 
   296  0213                     	;# 
   297  0213                     	;# 
   298  0214                     	;# 
   299  0214                     	;# 
   300  0215                     	;# 
   301  0215                     	;# 
   302  0215                     	;# 
   303  0215                     	;# 
   304  0216                     	;# 
   305  0216                     	;# 
   306  0217                     	;# 
   307  0217                     	;# 
   308  028C                     	;# 
   309  028D                     	;# 
   310  028E                     	;# 
   311  028F                     	;# 
   312  0290                     	;# 
   313  0291                     	;# 
   314  0291                     	;# 
   315  0292                     	;# 
   316  0293                     	;# 
   317  0293                     	;# 
   318  0298                     	;# 
   319  0298                     	;# 
   320  0299                     	;# 
   321  029A                     	;# 
   322  029A                     	;# 
   323  029E                     	;# 
   324  030C                     	;# 
   325  030D                     	;# 
   326  030E                     	;# 
   327  030F                     	;# 
   328  0310                     	;# 
   329  038C                     	;# 
   330  038D                     	;# 
   331  038E                     	;# 
   332  038F                     	;# 
   333  0390                     	;# 
   334  0391                     	;# 
   335  0392                     	;# 
   336  0393                     	;# 
   337  0394                     	;# 
   338  0395                     	;# 
   339  0396                     	;# 
   340  0397                     	;# 
   341  0398                     	;# 
   342  0399                     	;# 
   343  039D                     	;# 
   344  039E                     	;# 
   345  039F                     	;# 
   346  0415                     	;# 
   347  0416                     	;# 
   348  0417                     	;# 
   349  041C                     	;# 
   350  041D                     	;# 
   351  041E                     	;# 
   352  0498                     	;# 
   353  0498                     	;# 
   354  0499                     	;# 
   355  049A                     	;# 
   356  049B                     	;# 
   357  049B                     	;# 
   358  049C                     	;# 
   359  049D                     	;# 
   360  049E                     	;# 
   361  049F                     	;# 
   362  0511                     	;# 
   363  0515                     	;# 
   364  0617                     	;# 
   365  0618                     	;# 
   366  0619                     	;# 
   367  0619                     	;# 
   368  061A                     	;# 
   369  061B                     	;# 
   370  061C                     	;# 
   371  061C                     	;# 
   372  0691                     	;# 
   373  0692                     	;# 
   374  0693                     	;# 
   375  0694                     	;# 
   376  0695                     	;# 
   377  0696                     	;# 
   378  0697                     	;# 
   379  0698                     	;# 
   380  0699                     	;# 
   381  069A                     	;# 
   382  069B                     	;# 
   383  069C                     	;# 
   384  069D                     	;# 
   385  069E                     	;# 
   386  069F                     	;# 
   387  0E0F                     	;# 
   388  0E10                     	;# 
   389  0E11                     	;# 
   390  0E12                     	;# 
   391  0E13                     	;# 
   392  0E14                     	;# 
   393  0E15                     	;# 
   394  0E17                     	;# 
   395  0E20                     	;# 
   396  0E21                     	;# 
   397  0E22                     	;# 
   398  0E24                     	;# 
   399  0E25                     	;# 
   400  0E28                     	;# 
   401  0E29                     	;# 
   402  0E2A                     	;# 
   403  0E2B                     	;# 
   404  0E90                     	;# 
   405  0E91                     	;# 
   406  0E92                     	;# 
   407  0E93                     	;# 
   408  0E94                     	;# 
   409  0E95                     	;# 
   410  0E96                     	;# 
   411  0E97                     	;# 
   412  0E98                     	;# 
   413  0E99                     	;# 
   414  0E9A                     	;# 
   415  0E9B                     	;# 
   416  0E9C                     	;# 
   417  0E9D                     	;# 
   418  0E9E                     	;# 
   419  0E9F                     	;# 
   420  0EA0                     	;# 
   421  0EA1                     	;# 
   422  0EA2                     	;# 
   423  0EA3                     	;# 
   424  0EA4                     	;# 
   425  0EA5                     	;# 
   426  0EA6                     	;# 
   427  0EA7                     	;# 
   428  0EA8                     	;# 
   429  0EA9                     	;# 
   430  0EAA                     	;# 
   431  0EAB                     	;# 
   432  0EAC                     	;# 
   433  0EAD                     	;# 
   434  0EAE                     	;# 
   435  0EAF                     	;# 
   436  0EB0                     	;# 
   437  0EB1                     	;# 
   438  0EB2                     	;# 
   439  0F0F                     	;# 
   440  0F10                     	;# 
   441  0F11                     	;# 
   442  0F12                     	;# 
   443  0F13                     	;# 
   444  0F14                     	;# 
   445  0F15                     	;# 
   446  0F16                     	;# 
   447  0F17                     	;# 
   448  0F18                     	;# 
   449  0F19                     	;# 
   450  0F1A                     	;# 
   451  0F1B                     	;# 
   452  0F1C                     	;# 
   453  0F1D                     	;# 
   454  0F1E                     	;# 
   455  0F1F                     	;# 
   456  0F20                     	;# 
   457  0F21                     	;# 
   458  0F22                     	;# 
   459  0F23                     	;# 
   460  0F24                     	;# 
   461  0F25                     	;# 
   462  0F26                     	;# 
   463  0F27                     	;# 
   464  0F28                     	;# 
   465  0F29                     	;# 
   466  0F2A                     	;# 
   467  0F2B                     	;# 
   468  0F2C                     	;# 
   469  0F2D                     	;# 
   470  0F2E                     	;# 
   471  0F2F                     	;# 
   472  0F30                     	;# 
   473  0F31                     	;# 
   474  0F32                     	;# 
   475  0F33                     	;# 
   476  0F34                     	;# 
   477  0F35                     	;# 
   478  0F36                     	;# 
   479  0F37                     	;# 
   480  0FE4                     	;# 
   481  0FE5                     	;# 
   482  0FE6                     	;# 
   483  0FE7                     	;# 
   484  0FE8                     	;# 
   485  0FE9                     	;# 
   486  0FEA                     	;# 
   487  0FEB                     	;# 
   488  0FED                     	;# 
   489  0FEE                     	;# 
   490  0FEF                     	;# 
   491  0000                     	;# 
   492  0001                     	;# 
   493  0002                     	;# 
   494  0003                     	;# 
   495  0004                     	;# 
   496  0005                     	;# 
   497  0006                     	;# 
   498  0007                     	;# 
   499  0008                     	;# 
   500  0009                     	;# 
   501  000A                     	;# 
   502  000B                     	;# 
   503  000C                     	;# 
   504  000D                     	;# 
   505  000E                     	;# 
   506  000F                     	;# 
   507  0010                     	;# 
   508  0011                     	;# 
   509  0012                     	;# 
   510  0013                     	;# 
   511  0015                     	;# 
   512  0016                     	;# 
   513  0016                     	;# 
   514  0017                     	;# 
   515  0018                     	;# 
   516  0019                     	;# 
   517  001A                     	;# 
   518  001B                     	;# 
   519  001C                     	;# 
   520  008C                     	;# 
   521  008D                     	;# 
   522  008E                     	;# 
   523  008F                     	;# 
   524  0090                     	;# 
   525  0091                     	;# 
   526  0092                     	;# 
   527  0093                     	;# 
   528  0095                     	;# 
   529  0096                     	;# 
   530  0097                     	;# 
   531  0098                     	;# 
   532  0099                     	;# 
   533  009A                     	;# 
   534  009B                     	;# 
   535  009B                     	;# 
   536  009C                     	;# 
   537  009D                     	;# 
   538  009E                     	;# 
   539  009F                     	;# 
   540  010C                     	;# 
   541  010D                     	;# 
   542  010E                     	;# 
   543  010F                     	;# 
   544  0110                     	;# 
   545  0111                     	;# 
   546  0112                     	;# 
   547  0113                     	;# 
   548  0114                     	;# 
   549  0115                     	;# 
   550  0116                     	;# 
   551  0117                     	;# 
   552  0118                     	;# 
   553  0119                     	;# 
   554  011A                     	;# 
   555  011B                     	;# 
   556  011B                     	;# 
   557  011C                     	;# 
   558  018C                     	;# 
   559  018D                     	;# 
   560  018E                     	;# 
   561  018F                     	;# 
   562  0190                     	;# 
   563  0191                     	;# 
   564  0191                     	;# 
   565  0192                     	;# 
   566  0193                     	;# 
   567  0193                     	;# 
   568  0194                     	;# 
   569  0195                     	;# 
   570  0196                     	;# 
   571  0197                     	;# 
   572  0199                     	;# 
   573  0199                     	;# 
   574  0199                     	;# 
   575  019A                     	;# 
   576  019A                     	;# 
   577  019A                     	;# 
   578  019B                     	;# 
   579  019B                     	;# 
   580  019B                     	;# 
   581  019B                     	;# 
   582  019B                     	;# 
   583  019C                     	;# 
   584  019C                     	;# 
   585  019C                     	;# 
   586  019D                     	;# 
   587  019D                     	;# 
   588  019D                     	;# 
   589  019E                     	;# 
   590  019E                     	;# 
   591  019E                     	;# 
   592  019F                     	;# 
   593  019F                     	;# 
   594  019F                     	;# 
   595  019F                     	;# 
   596  019F                     	;# 
   597  020C                     	;# 
   598  020D                     	;# 
   599  020E                     	;# 
   600  020F                     	;# 
   601  0210                     	;# 
   602  0211                     	;# 
   603  0211                     	;# 
   604  0212                     	;# 
   605  0212                     	;# 
   606  0213                     	;# 
   607  0213                     	;# 
   608  0214                     	;# 
   609  0214                     	;# 
   610  0215                     	;# 
   611  0215                     	;# 
   612  0215                     	;# 
   613  0215                     	;# 
   614  0216                     	;# 
   615  0216                     	;# 
   616  0217                     	;# 
   617  0217                     	;# 
   618  028C                     	;# 
   619  028D                     	;# 
   620  028E                     	;# 
   621  028F                     	;# 
   622  0290                     	;# 
   623  0291                     	;# 
   624  0291                     	;# 
   625  0292                     	;# 
   626  0293                     	;# 
   627  0293                     	;# 
   628  0298                     	;# 
   629  0298                     	;# 
   630  0299                     	;# 
   631  029A                     	;# 
   632  029A                     	;# 
   633  029E                     	;# 
   634  030C                     	;# 
   635  030D                     	;# 
   636  030E                     	;# 
   637  030F                     	;# 
   638  0310                     	;# 
   639  038C                     	;# 
   640  038D                     	;# 
   641  038E                     	;# 
   642  038F                     	;# 
   643  0390                     	;# 
   644  0391                     	;# 
   645  0392                     	;# 
   646  0393                     	;# 
   647  0394                     	;# 
   648  0395                     	;# 
   649  0396                     	;# 
   650  0397                     	;# 
   651  0398                     	;# 
   652  0399                     	;# 
   653  039D                     	;# 
   654  039E                     	;# 
   655  039F                     	;# 
   656  0415                     	;# 
   657  0416                     	;# 
   658  0417                     	;# 
   659  041C                     	;# 
   660  041D                     	;# 
   661  041E                     	;# 
   662  0498                     	;# 
   663  0498                     	;# 
   664  0499                     	;# 
   665  049A                     	;# 
   666  049B                     	;# 
   667  049B                     	;# 
   668  049C                     	;# 
   669  049D                     	;# 
   670  049E                     	;# 
   671  049F                     	;# 
   672  0511                     	;# 
   673  0515                     	;# 
   674  0617                     	;# 
   675  0618                     	;# 
   676  0619                     	;# 
   677  0619                     	;# 
   678  061A                     	;# 
   679  061B                     	;# 
   680  061C                     	;# 
   681  061C                     	;# 
   682  0691                     	;# 
   683  0692                     	;# 
   684  0693                     	;# 
   685  0694                     	;# 
   686  0695                     	;# 
   687  0696                     	;# 
   688  0697                     	;# 
   689  0698                     	;# 
   690  0699                     	;# 
   691  069A                     	;# 
   692  069B                     	;# 
   693  069C                     	;# 
   694  069D                     	;# 
   695  069E                     	;# 
   696  069F                     	;# 
   697  0E0F                     	;# 
   698  0E10                     	;# 
   699  0E11                     	;# 
   700  0E12                     	;# 
   701  0E13                     	;# 
   702  0E14                     	;# 
   703  0E15                     	;# 
   704  0E17                     	;# 
   705  0E20                     	;# 
   706  0E21                     	;# 
   707  0E22                     	;# 
   708  0E24                     	;# 
   709  0E25                     	;# 
   710  0E28                     	;# 
   711  0E29                     	;# 
   712  0E2A                     	;# 
   713  0E2B                     	;# 
   714  0E90                     	;# 
   715  0E91                     	;# 
   716  0E92                     	;# 
   717  0E93                     	;# 
   718  0E94                     	;# 
   719  0E95                     	;# 
   720  0E96                     	;# 
   721  0E97                     	;# 
   722  0E98                     	;# 
   723  0E99                     	;# 
   724  0E9A                     	;# 
   725  0E9B                     	;# 
   726  0E9C                     	;# 
   727  0E9D                     	;# 
   728  0E9E                     	;# 
   729  0E9F                     	;# 
   730  0EA0                     	;# 
   731  0EA1                     	;# 
   732  0EA2                     	;# 
   733  0EA3                     	;# 
   734  0EA4                     	;# 
   735  0EA5                     	;# 
   736  0EA6                     	;# 
   737  0EA7                     	;# 
   738  0EA8                     	;# 
   739  0EA9                     	;# 
   740  0EAA                     	;# 
   741  0EAB                     	;# 
   742  0EAC                     	;# 
   743  0EAD                     	;# 
   744  0EAE                     	;# 
   745  0EAF                     	;# 
   746  0EB0                     	;# 
   747  0EB1                     	;# 
   748  0EB2                     	;# 
   749  0F0F                     	;# 
   750  0F10                     	;# 
   751  0F11                     	;# 
   752  0F12                     	;# 
   753  0F13                     	;# 
   754  0F14                     	;# 
   755  0F15                     	;# 
   756  0F16                     	;# 
   757  0F17                     	;# 
   758  0F18                     	;# 
   759  0F19                     	;# 
   760  0F1A                     	;# 
   761  0F1B                     	;# 
   762  0F1C                     	;# 
   763  0F1D                     	;# 
   764  0F1E                     	;# 
   765  0F1F                     	;# 
   766  0F20                     	;# 
   767  0F21                     	;# 
   768  0F22                     	;# 
   769  0F23                     	;# 
   770  0F24                     	;# 
   771  0F25                     	;# 
   772  0F26                     	;# 
   773  0F27                     	;# 
   774  0F28                     	;# 
   775  0F29                     	;# 
   776  0F2A                     	;# 
   777  0F2B                     	;# 
   778  0F2C                     	;# 
   779  0F2D                     	;# 
   780  0F2E                     	;# 
   781  0F2F                     	;# 
   782  0F30                     	;# 
   783  0F31                     	;# 
   784  0F32                     	;# 
   785  0F33                     	;# 
   786  0F34                     	;# 
   787  0F35                     	;# 
   788  0F36                     	;# 
   789  0F37                     	;# 
   790  0FE4                     	;# 
   791  0FE5                     	;# 
   792  0FE6                     	;# 
   793  0FE7                     	;# 
   794  0FE8                     	;# 
   795  0FE9                     	;# 
   796  0FEA                     	;# 
   797  0FEB                     	;# 
   798  0FED                     	;# 
   799  0FEE                     	;# 
   800  0FEF                     	;# 
   801  0000                     	;# 
   802  0001                     	;# 
   803  0002                     	;# 
   804  0003                     	;# 
   805  0004                     	;# 
   806  0005                     	;# 
   807  0006                     	;# 
   808  0007                     	;# 
   809  0008                     	;# 
   810  0009                     	;# 
   811  000A                     	;# 
   812  000B                     	;# 
   813  000C                     	;# 
   814  000D                     	;# 
   815  000E                     	;# 
   816  000F                     	;# 
   817  0010                     	;# 
   818  0011                     	;# 
   819  0012                     	;# 
   820  0013                     	;# 
   821  0015                     	;# 
   822  0016                     	;# 
   823  0016                     	;# 
   824  0017                     	;# 
   825  0018                     	;# 
   826  0019                     	;# 
   827  001A                     	;# 
   828  001B                     	;# 
   829  001C                     	;# 
   830  008C                     	;# 
   831  008D                     	;# 
   832  008E                     	;# 
   833  008F                     	;# 
   834  0090                     	;# 
   835  0091                     	;# 
   836  0092                     	;# 
   837  0093                     	;# 
   838  0095                     	;# 
   839  0096                     	;# 
   840  0097                     	;# 
   841  0098                     	;# 
   842  0099                     	;# 
   843  009A                     	;# 
   844  009B                     	;# 
   845  009B                     	;# 
   846  009C                     	;# 
   847  009D                     	;# 
   848  009E                     	;# 
   849  009F                     	;# 
   850  010C                     	;# 
   851  010D                     	;# 
   852  010E                     	;# 
   853  010F                     	;# 
   854  0110                     	;# 
   855  0111                     	;# 
   856  0112                     	;# 
   857  0113                     	;# 
   858  0114                     	;# 
   859  0115                     	;# 
   860  0116                     	;# 
   861  0117                     	;# 
   862  0118                     	;# 
   863  0119                     	;# 
   864  011A                     	;# 
   865  011B                     	;# 
   866  011B                     	;# 
   867  011C                     	;# 
   868  018C                     	;# 
   869  018D                     	;# 
   870  018E                     	;# 
   871  018F                     	;# 
   872  0190                     	;# 
   873  0191                     	;# 
   874  0191                     	;# 
   875  0192                     	;# 
   876  0193                     	;# 
   877  0193                     	;# 
   878  0194                     	;# 
   879  0195                     	;# 
   880  0196                     	;# 
   881  0197                     	;# 
   882  0199                     	;# 
   883  0199                     	;# 
   884  0199                     	;# 
   885  019A                     	;# 
   886  019A                     	;# 
   887  019A                     	;# 
   888  019B                     	;# 
   889  019B                     	;# 
   890  019B                     	;# 
   891  019B                     	;# 
   892  019B                     	;# 
   893  019C                     	;# 
   894  019C                     	;# 
   895  019C                     	;# 
   896  019D                     	;# 
   897  019D                     	;# 
   898  019D                     	;# 
   899  019E                     	;# 
   900  019E                     	;# 
   901  019E                     	;# 
   902  019F                     	;# 
   903  019F                     	;# 
   904  019F                     	;# 
   905  019F                     	;# 
   906  019F                     	;# 
   907  020C                     	;# 
   908  020D                     	;# 
   909  020E                     	;# 
   910  020F                     	;# 
   911  0210                     	;# 
   912  0211                     	;# 
   913  0211                     	;# 
   914  0212                     	;# 
   915  0212                     	;# 
   916  0213                     	;# 
   917  0213                     	;# 
   918  0214                     	;# 
   919  0214                     	;# 
   920  0215                     	;# 
   921  0215                     	;# 
   922  0215                     	;# 
   923  0215                     	;# 
   924  0216                     	;# 
   925  0216                     	;# 
   926  0217                     	;# 
   927  0217                     	;# 
   928  028C                     	;# 
   929  028D                     	;# 
   930  028E                     	;# 
   931  028F                     	;# 
   932  0290                     	;# 
   933  0291                     	;# 
   934  0291                     	;# 
   935  0292                     	;# 
   936  0293                     	;# 
   937  0293                     	;# 
   938  0298                     	;# 
   939  0298                     	;# 
   940  0299                     	;# 
   941  029A                     	;# 
   942  029A                     	;# 
   943  029E                     	;# 
   944  030C                     	;# 
   945  030D                     	;# 
   946  030E                     	;# 
   947  030F                     	;# 
   948  0310                     	;# 
   949  038C                     	;# 
   950  038D                     	;# 
   951  038E                     	;# 
   952  038F                     	;# 
   953  0390                     	;# 
   954  0391                     	;# 
   955  0392                     	;# 
   956  0393                     	;# 
   957  0394                     	;# 
   958  0395                     	;# 
   959  0396                     	;# 
   960  0397                     	;# 
   961  0398                     	;# 
   962  0399                     	;# 
   963  039D                     	;# 
   964  039E                     	;# 
   965  039F                     	;# 
   966  0415                     	;# 
   967  0416                     	;# 
   968  0417                     	;# 
   969  041C                     	;# 
   970  041D                     	;# 
   971  041E                     	;# 
   972  0498                     	;# 
   973  0498                     	;# 
   974  0499                     	;# 
   975  049A                     	;# 
   976  049B                     	;# 
   977  049B                     	;# 
   978  049C                     	;# 
   979  049D                     	;# 
   980  049E                     	;# 
   981  049F                     	;# 
   982  0511                     	;# 
   983  0515                     	;# 
   984  0617                     	;# 
   985  0618                     	;# 
   986  0619                     	;# 
   987  0619                     	;# 
   988  061A                     	;# 
   989  061B                     	;# 
   990  061C                     	;# 
   991  061C                     	;# 
   992  0691                     	;# 
   993  0692                     	;# 
   994  0693                     	;# 
   995  0694                     	;# 
   996  0695                     	;# 
   997  0696                     	;# 
   998  0697                     	;# 
   999  0698                     	;# 
  1000  0699                     	;# 
  1001  069A                     	;# 
  1002  069B                     	;# 
  1003  069C                     	;# 
  1004  069D                     	;# 
  1005  069E                     	;# 
  1006  069F                     	;# 
  1007  0E0F                     	;# 
  1008  0E10                     	;# 
  1009  0E11                     	;# 
  1010  0E12                     	;# 
  1011  0E13                     	;# 
  1012  0E14                     	;# 
  1013  0E15                     	;# 
  1014  0E17                     	;# 
  1015  0E20                     	;# 
  1016  0E21                     	;# 
  1017  0E22                     	;# 
  1018  0E24                     	;# 
  1019  0E25                     	;# 
  1020  0E28                     	;# 
  1021  0E29                     	;# 
  1022  0E2A                     	;# 
  1023  0E2B                     	;# 
  1024  0E90                     	;# 
  1025  0E91                     	;# 
  1026  0E92                     	;# 
  1027  0E93                     	;# 
  1028  0E94                     	;# 
  1029  0E95                     	;# 
  1030  0E96                     	;# 
  1031  0E97                     	;# 
  1032  0E98                     	;# 
  1033  0E99                     	;# 
  1034  0E9A                     	;# 
  1035  0E9B                     	;# 
  1036  0E9C                     	;# 
  1037  0E9D                     	;# 
  1038  0E9E                     	;# 
  1039  0E9F                     	;# 
  1040  0EA0                     	;# 
  1041  0EA1                     	;# 
  1042  0EA2                     	;# 
  1043  0EA3                     	;# 
  1044  0EA4                     	;# 
  1045  0EA5                     	;# 
  1046  0EA6                     	;# 
  1047  0EA7                     	;# 
  1048  0EA8                     	;# 
  1049  0EA9                     	;# 
  1050  0EAA                     	;# 
  1051  0EAB                     	;# 
  1052  0EAC                     	;# 
  1053  0EAD                     	;# 
  1054  0EAE                     	;# 
  1055  0EAF                     	;# 
  1056  0EB0                     	;# 
  1057  0EB1                     	;# 
  1058  0EB2                     	;# 
  1059  0F0F                     	;# 
  1060  0F10                     	;# 
  1061  0F11                     	;# 
  1062  0F12                     	;# 
  1063  0F13                     	;# 
  1064  0F14                     	;# 
  1065  0F15                     	;# 
  1066  0F16                     	;# 
  1067  0F17                     	;# 
  1068  0F18                     	;# 
  1069  0F19                     	;# 
  1070  0F1A                     	;# 
  1071  0F1B                     	;# 
  1072  0F1C                     	;# 
  1073  0F1D                     	;# 
  1074  0F1E                     	;# 
  1075  0F1F                     	;# 
  1076  0F20                     	;# 
  1077  0F21                     	;# 
  1078  0F22                     	;# 
  1079  0F23                     	;# 
  1080  0F24                     	;# 
  1081  0F25                     	;# 
  1082  0F26                     	;# 
  1083  0F27                     	;# 
  1084  0F28                     	;# 
  1085  0F29                     	;# 
  1086  0F2A                     	;# 
  1087  0F2B                     	;# 
  1088  0F2C                     	;# 
  1089  0F2D                     	;# 
  1090  0F2E                     	;# 
  1091  0F2F                     	;# 
  1092  0F30                     	;# 
  1093  0F31                     	;# 
  1094  0F32                     	;# 
  1095  0F33                     	;# 
  1096  0F34                     	;# 
  1097  0F35                     	;# 
  1098  0F36                     	;# 
  1099  0F37                     	;# 
  1100  0FE4                     	;# 
  1101  0FE5                     	;# 
  1102  0FE6                     	;# 
  1103  0FE7                     	;# 
  1104  0FE8                     	;# 
  1105  0FE9                     	;# 
  1106  0FEA                     	;# 
  1107  0FEB                     	;# 
  1108  0FED                     	;# 
  1109  0FEE                     	;# 
  1110  0FEF                     	;# 
  1111  0000                     	;# 
  1112  0001                     	;# 
  1113  0002                     	;# 
  1114  0003                     	;# 
  1115  0004                     	;# 
  1116  0005                     	;# 
  1117  0006                     	;# 
  1118  0007                     	;# 
  1119  0008                     	;# 
  1120  0009                     	;# 
  1121  000A                     	;# 
  1122  000B                     	;# 
  1123  000C                     	;# 
  1124  000D                     	;# 
  1125  000E                     	;# 
  1126  000F                     	;# 
  1127  0010                     	;# 
  1128  0011                     	;# 
  1129  0012                     	;# 
  1130  0013                     	;# 
  1131  0015                     	;# 
  1132  0016                     	;# 
  1133  0016                     	;# 
  1134  0017                     	;# 
  1135  0018                     	;# 
  1136  0019                     	;# 
  1137  001A                     	;# 
  1138  001B                     	;# 
  1139  001C                     	;# 
  1140  008C                     	;# 
  1141  008D                     	;# 
  1142  008E                     	;# 
  1143  008F                     	;# 
  1144  0090                     	;# 
  1145  0091                     	;# 
  1146  0092                     	;# 
  1147  0093                     	;# 
  1148  0095                     	;# 
  1149  0096                     	;# 
  1150  0097                     	;# 
  1151  0098                     	;# 
  1152  0099                     	;# 
  1153  009A                     	;# 
  1154  009B                     	;# 
  1155  009B                     	;# 
  1156  009C                     	;# 
  1157  009D                     	;# 
  1158  009E                     	;# 
  1159  009F                     	;# 
  1160  010C                     	;# 
  1161  010D                     	;# 
  1162  010E                     	;# 
  1163  010F                     	;# 
  1164  0110                     	;# 
  1165  0111                     	;# 
  1166  0112                     	;# 
  1167  0113                     	;# 
  1168  0114                     	;# 
  1169  0115                     	;# 
  1170  0116                     	;# 
  1171  0117                     	;# 
  1172  0118                     	;# 
  1173  0119                     	;# 
  1174  011A                     	;# 
  1175  011B                     	;# 
  1176  011B                     	;# 
  1177  011C                     	;# 
  1178  018C                     	;# 
  1179  018D                     	;# 
  1180  018E                     	;# 
  1181  018F                     	;# 
  1182  0190                     	;# 
  1183  0191                     	;# 
  1184  0191                     	;# 
  1185  0192                     	;# 
  1186  0193                     	;# 
  1187  0193                     	;# 
  1188  0194                     	;# 
  1189  0195                     	;# 
  1190  0196                     	;# 
  1191  0197                     	;# 
  1192  0199                     	;# 
  1193  0199                     	;# 
  1194  0199                     	;# 
  1195  019A                     	;# 
  1196  019A                     	;# 
  1197  019A                     	;# 
  1198  019B                     	;# 
  1199  019B                     	;# 
  1200  019B                     	;# 
  1201  019B                     	;# 
  1202  019B                     	;# 
  1203  019C                     	;# 
  1204  019C                     	;# 
  1205  019C                     	;# 
  1206  019D                     	;# 
  1207  019D                     	;# 
  1208  019D                     	;# 
  1209  019E                     	;# 
  1210  019E                     	;# 
  1211  019E                     	;# 
  1212  019F                     	;# 
  1213  019F                     	;# 
  1214  019F                     	;# 
  1215  019F                     	;# 
  1216  019F                     	;# 
  1217  020C                     	;# 
  1218  020D                     	;# 
  1219  020E                     	;# 
  1220  020F                     	;# 
  1221  0210                     	;# 
  1222  0211                     	;# 
  1223  0211                     	;# 
  1224  0212                     	;# 
  1225  0212                     	;# 
  1226  0213                     	;# 
  1227  0213                     	;# 
  1228  0214                     	;# 
  1229  0214                     	;# 
  1230  0215                     	;# 
  1231  0215                     	;# 
  1232  0215                     	;# 
  1233  0215                     	;# 
  1234  0216                     	;# 
  1235  0216                     	;# 
  1236  0217                     	;# 
  1237  0217                     	;# 
  1238  028C                     	;# 
  1239  028D                     	;# 
  1240  028E                     	;# 
  1241  028F                     	;# 
  1242  0290                     	;# 
  1243  0291                     	;# 
  1244  0291                     	;# 
  1245  0292                     	;# 
  1246  0293                     	;# 
  1247  0293                     	;# 
  1248  0298                     	;# 
  1249  0298                     	;# 
  1250  0299                     	;# 
  1251  029A                     	;# 
  1252  029A                     	;# 
  1253  029E                     	;# 
  1254  030C                     	;# 
  1255  030D                     	;# 
  1256  030E                     	;# 
  1257  030F                     	;# 
  1258  0310                     	;# 
  1259  038C                     	;# 
  1260  038D                     	;# 
  1261  038E                     	;# 
  1262  038F                     	;# 
  1263  0390                     	;# 
  1264  0391                     	;# 
  1265  0392                     	;# 
  1266  0393                     	;# 
  1267  0394                     	;# 
  1268  0395                     	;# 
  1269  0396                     	;# 
  1270  0397                     	;# 
  1271  0398                     	;# 
  1272  0399                     	;# 
  1273  039D                     	;# 
  1274  039E                     	;# 
  1275  039F                     	;# 
  1276  0415                     	;# 
  1277  0416                     	;# 
  1278  0417                     	;# 
  1279  041C                     	;# 
  1280  041D                     	;# 
  1281  041E                     	;# 
  1282  0498                     	;# 
  1283  0498                     	;# 
  1284  0499                     	;# 
  1285  049A                     	;# 
  1286  049B                     	;# 
  1287  049B                     	;# 
  1288  049C                     	;# 
  1289  049D                     	;# 
  1290  049E                     	;# 
  1291  049F                     	;# 
  1292  0511                     	;# 
  1293  0515                     	;# 
  1294  0617                     	;# 
  1295  0618                     	;# 
  1296  0619                     	;# 
  1297  0619                     	;# 
  1298  061A                     	;# 
  1299  061B                     	;# 
  1300  061C                     	;# 
  1301  061C                     	;# 
  1302  0691                     	;# 
  1303  0692                     	;# 
  1304  0693                     	;# 
  1305  0694                     	;# 
  1306  0695                     	;# 
  1307  0696                     	;# 
  1308  0697                     	;# 
  1309  0698                     	;# 
  1310  0699                     	;# 
  1311  069A                     	;# 
  1312  069B                     	;# 
  1313  069C                     	;# 
  1314  069D                     	;# 
  1315  069E                     	;# 
  1316  069F                     	;# 
  1317  0E0F                     	;# 
  1318  0E10                     	;# 
  1319  0E11                     	;# 
  1320  0E12                     	;# 
  1321  0E13                     	;# 
  1322  0E14                     	;# 
  1323  0E15                     	;# 
  1324  0E17                     	;# 
  1325  0E20                     	;# 
  1326  0E21                     	;# 
  1327  0E22                     	;# 
  1328  0E24                     	;# 
  1329  0E25                     	;# 
  1330  0E28                     	;# 
  1331  0E29                     	;# 
  1332  0E2A                     	;# 
  1333  0E2B                     	;# 
  1334  0E90                     	;# 
  1335  0E91                     	;# 
  1336  0E92                     	;# 
  1337  0E93                     	;# 
  1338  0E94                     	;# 
  1339  0E95                     	;# 
  1340  0E96                     	;# 
  1341  0E97                     	;# 
  1342  0E98                     	;# 
  1343  0E99                     	;# 
  1344  0E9A                     	;# 
  1345  0E9B                     	;# 
  1346  0E9C                     	;# 
  1347  0E9D                     	;# 
  1348  0E9E                     	;# 
  1349  0E9F                     	;# 
  1350  0EA0                     	;# 
  1351  0EA1                     	;# 
  1352  0EA2                     	;# 
  1353  0EA3                     	;# 
  1354  0EA4                     	;# 
  1355  0EA5                     	;# 
  1356  0EA6                     	;# 
  1357  0EA7                     	;# 
  1358  0EA8                     	;# 
  1359  0EA9                     	;# 
  1360  0EAA                     	;# 
  1361  0EAB                     	;# 
  1362  0EAC                     	;# 
  1363  0EAD                     	;# 
  1364  0EAE                     	;# 
  1365  0EAF                     	;# 
  1366  0EB0                     	;# 
  1367  0EB1                     	;# 
  1368  0EB2                     	;# 
  1369  0F0F                     	;# 
  1370  0F10                     	;# 
  1371  0F11                     	;# 
  1372  0F12                     	;# 
  1373  0F13                     	;# 
  1374  0F14                     	;# 
  1375  0F15                     	;# 
  1376  0F16                     	;# 
  1377  0F17                     	;# 
  1378  0F18                     	;# 
  1379  0F19                     	;# 
  1380  0F1A                     	;# 
  1381  0F1B                     	;# 
  1382  0F1C                     	;# 
  1383  0F1D                     	;# 
  1384  0F1E                     	;# 
  1385  0F1F                     	;# 
  1386  0F20                     	;# 
  1387  0F21                     	;# 
  1388  0F22                     	;# 
  1389  0F23                     	;# 
  1390  0F24                     	;# 
  1391  0F25                     	;# 
  1392  0F26                     	;# 
  1393  0F27                     	;# 
  1394  0F28                     	;# 
  1395  0F29                     	;# 
  1396  0F2A                     	;# 
  1397  0F2B                     	;# 
  1398  0F2C                     	;# 
  1399  0F2D                     	;# 
  1400  0F2E                     	;# 
  1401  0F2F                     	;# 
  1402  0F30                     	;# 
  1403  0F31                     	;# 
  1404  0F32                     	;# 
  1405  0F33                     	;# 
  1406  0F34                     	;# 
  1407  0F35                     	;# 
  1408  0F36                     	;# 
  1409  0F37                     	;# 
  1410  0FE4                     	;# 
  1411  0FE5                     	;# 
  1412  0FE6                     	;# 
  1413  0FE7                     	;# 
  1414  0FE8                     	;# 
  1415  0FE9                     	;# 
  1416  0FEA                     	;# 
  1417  0FEB                     	;# 
  1418  0FED                     	;# 
  1419  0FEE                     	;# 
  1420  0FEF                     	;# 
  1421  0000                     	;# 
  1422  0001                     	;# 
  1423  0002                     	;# 
  1424  0003                     	;# 
  1425  0004                     	;# 
  1426  0005                     	;# 
  1427  0006                     	;# 
  1428  0007                     	;# 
  1429  0008                     	;# 
  1430  0009                     	;# 
  1431  000A                     	;# 
  1432  000B                     	;# 
  1433  000C                     	;# 
  1434  000D                     	;# 
  1435  000E                     	;# 
  1436  000F                     	;# 
  1437  0010                     	;# 
  1438  0011                     	;# 
  1439  0012                     	;# 
  1440  0013                     	;# 
  1441  0015                     	;# 
  1442  0016                     	;# 
  1443  0016                     	;# 
  1444  0017                     	;# 
  1445  0018                     	;# 
  1446  0019                     	;# 
  1447  001A                     	;# 
  1448  001B                     	;# 
  1449  001C                     	;# 
  1450  008C                     	;# 
  1451  008D                     	;# 
  1452  008E                     	;# 
  1453  008F                     	;# 
  1454  0090                     	;# 
  1455  0091                     	;# 
  1456  0092                     	;# 
  1457  0093                     	;# 
  1458  0095                     	;# 
  1459  0096                     	;# 
  1460  0097                     	;# 
  1461  0098                     	;# 
  1462  0099                     	;# 
  1463  009A                     	;# 
  1464  009B                     	;# 
  1465  009B                     	;# 
  1466  009C                     	;# 
  1467  009D                     	;# 
  1468  009E                     	;# 
  1469  009F                     	;# 
  1470  010C                     	;# 
  1471  010D                     	;# 
  1472  010E                     	;# 
  1473  010F                     	;# 
  1474  0110                     	;# 
  1475  0111                     	;# 
  1476  0112                     	;# 
  1477  0113                     	;# 
  1478  0114                     	;# 
  1479  0115                     	;# 
  1480  0116                     	;# 
  1481  0117                     	;# 
  1482  0118                     	;# 
  1483  0119                     	;# 
  1484  011A                     	;# 
  1485  011B                     	;# 
  1486  011B                     	;# 
  1487  011C                     	;# 
  1488  018C                     	;# 
  1489  018D                     	;# 
  1490  018E                     	;# 
  1491  018F                     	;# 
  1492  0190                     	;# 
  1493  0191                     	;# 
  1494  0191                     	;# 
  1495  0192                     	;# 
  1496  0193                     	;# 
  1497  0193                     	;# 
  1498  0194                     	;# 
  1499  0195                     	;# 
  1500  0196                     	;# 
  1501  0197                     	;# 
  1502  0199                     	;# 
  1503  0199                     	;# 
  1504  0199                     	;# 
  1505  019A                     	;# 
  1506  019A                     	;# 
  1507  019A                     	;# 
  1508  019B                     	;# 
  1509  019B                     	;# 
  1510  019B                     	;# 
  1511  019B                     	;# 
  1512  019B                     	;# 
  1513  019C                     	;# 
  1514  019C                     	;# 
  1515  019C                     	;# 
  1516  019D                     	;# 
  1517  019D                     	;# 
  1518  019D                     	;# 
  1519  019E                     	;# 
  1520  019E                     	;# 
  1521  019E                     	;# 
  1522  019F                     	;# 
  1523  019F                     	;# 
  1524  019F                     	;# 
  1525  019F                     	;# 
  1526  019F                     	;# 
  1527  020C                     	;# 
  1528  020D                     	;# 
  1529  020E                     	;# 
  1530  020F                     	;# 
  1531  0210                     	;# 
  1532  0211                     	;# 
  1533  0211                     	;# 
  1534  0212                     	;# 
  1535  0212                     	;# 
  1536  0213                     	;# 
  1537  0213                     	;# 
  1538  0214                     	;# 
  1539  0214                     	;# 
  1540  0215                     	;# 
  1541  0215                     	;# 
  1542  0215                     	;# 
  1543  0215                     	;# 
  1544  0216                     	;# 
  1545  0216                     	;# 
  1546  0217                     	;# 
  1547  0217                     	;# 
  1548  028C                     	;# 
  1549  028D                     	;# 
  1550  028E                     	;# 
  1551  028F                     	;# 
  1552  0290                     	;# 
  1553  0291                     	;# 
  1554  0291                     	;# 
  1555  0292                     	;# 
  1556  0293                     	;# 
  1557  0293                     	;# 
  1558  0298                     	;# 
  1559  0298                     	;# 
  1560  0299                     	;# 
  1561  029A                     	;# 
  1562  029A                     	;# 
  1563  029E                     	;# 
  1564  030C                     	;# 
  1565  030D                     	;# 
  1566  030E                     	;# 
  1567  030F                     	;# 
  1568  0310                     	;# 
  1569  038C                     	;# 
  1570  038D                     	;# 
  1571  038E                     	;# 
  1572  038F                     	;# 
  1573  0390                     	;# 
  1574  0391                     	;# 
  1575  0392                     	;# 
  1576  0393                     	;# 
  1577  0394                     	;# 
  1578  0395                     	;# 
  1579  0396                     	;# 
  1580  0397                     	;# 
  1581  0398                     	;# 
  1582  0399                     	;# 
  1583  039D                     	;# 
  1584  039E                     	;# 
  1585  039F                     	;# 
  1586  0415                     	;# 
  1587  0416                     	;# 
  1588  0417                     	;# 
  1589  041C                     	;# 
  1590  041D                     	;# 
  1591  041E                     	;# 
  1592  0498                     	;# 
  1593  0498                     	;# 
  1594  0499                     	;# 
  1595  049A                     	;# 
  1596  049B                     	;# 
  1597  049B                     	;# 
  1598  049C                     	;# 
  1599  049D                     	;# 
  1600  049E                     	;# 
  1601  049F                     	;# 
  1602  0511                     	;# 
  1603  0515                     	;# 
  1604  0617                     	;# 
  1605  0618                     	;# 
  1606  0619                     	;# 
  1607  0619                     	;# 
  1608  061A                     	;# 
  1609  061B                     	;# 
  1610  061C                     	;# 
  1611  061C                     	;# 
  1612  0691                     	;# 
  1613  0692                     	;# 
  1614  0693                     	;# 
  1615  0694                     	;# 
  1616  0695                     	;# 
  1617  0696                     	;# 
  1618  0697                     	;# 
  1619  0698                     	;# 
  1620  0699                     	;# 
  1621  069A                     	;# 
  1622  069B                     	;# 
  1623  069C                     	;# 
  1624  069D                     	;# 
  1625  069E                     	;# 
  1626  069F                     	;# 
  1627  0E0F                     	;# 
  1628  0E10                     	;# 
  1629  0E11                     	;# 
  1630  0E12                     	;# 
  1631  0E13                     	;# 
  1632  0E14                     	;# 
  1633  0E15                     	;# 
  1634  0E17                     	;# 
  1635  0E20                     	;# 
  1636  0E21                     	;# 
  1637  0E22                     	;# 
  1638  0E24                     	;# 
  1639  0E25                     	;# 
  1640  0E28                     	;# 
  1641  0E29                     	;# 
  1642  0E2A                     	;# 
  1643  0E2B                     	;# 
  1644  0E90                     	;# 
  1645  0E91                     	;# 
  1646  0E92                     	;# 
  1647  0E93                     	;# 
  1648  0E94                     	;# 
  1649  0E95                     	;# 
  1650  0E96                     	;# 
  1651  0E97                     	;# 
  1652  0E98                     	;# 
  1653  0E99                     	;# 
  1654  0E9A                     	;# 
  1655  0E9B                     	;# 
  1656  0E9C                     	;# 
  1657  0E9D                     	;# 
  1658  0E9E                     	;# 
  1659  0E9F                     	;# 
  1660  0EA0                     	;# 
  1661  0EA1                     	;# 
  1662  0EA2                     	;# 
  1663  0EA3                     	;# 
  1664  0EA4                     	;# 
  1665  0EA5                     	;# 
  1666  0EA6                     	;# 
  1667  0EA7                     	;# 
  1668  0EA8                     	;# 
  1669  0EA9                     	;# 
  1670  0EAA                     	;# 
  1671  0EAB                     	;# 
  1672  0EAC                     	;# 
  1673  0EAD                     	;# 
  1674  0EAE                     	;# 
  1675  0EAF                     	;# 
  1676  0EB0                     	;# 
  1677  0EB1                     	;# 
  1678  0EB2                     	;# 
  1679  0F0F                     	;# 
  1680  0F10                     	;# 
  1681  0F11                     	;# 
  1682  0F12                     	;# 
  1683  0F13                     	;# 
  1684  0F14                     	;# 
  1685  0F15                     	;# 
  1686  0F16                     	;# 
  1687  0F17                     	;# 
  1688  0F18                     	;# 
  1689  0F19                     	;# 
  1690  0F1A                     	;# 
  1691  0F1B                     	;# 
  1692  0F1C                     	;# 
  1693  0F1D                     	;# 
  1694  0F1E                     	;# 
  1695  0F1F                     	;# 
  1696  0F20                     	;# 
  1697  0F21                     	;# 
  1698  0F22                     	;# 
  1699  0F23                     	;# 
  1700  0F24                     	;# 
  1701  0F25                     	;# 
  1702  0F26                     	;# 
  1703  0F27                     	;# 
  1704  0F28                     	;# 
  1705  0F29                     	;# 
  1706  0F2A                     	;# 
  1707  0F2B                     	;# 
  1708  0F2C                     	;# 
  1709  0F2D                     	;# 
  1710  0F2E                     	;# 
  1711  0F2F                     	;# 
  1712  0F30                     	;# 
  1713  0F31                     	;# 
  1714  0F32                     	;# 
  1715  0F33                     	;# 
  1716  0F34                     	;# 
  1717  0F35                     	;# 
  1718  0F36                     	;# 
  1719  0F37                     	;# 
  1720  0FE4                     	;# 
  1721  0FE5                     	;# 
  1722  0FE6                     	;# 
  1723  0FE7                     	;# 
  1724  0FE8                     	;# 
  1725  0FE9                     	;# 
  1726  0FEA                     	;# 
  1727  0FEB                     	;# 
  1728  0FED                     	;# 
  1729  0FEE                     	;# 
  1730  0FEF                     	;# 
  1731  0000                     	;# 
  1732  0001                     	;# 
  1733  0002                     	;# 
  1734  0003                     	;# 
  1735  0004                     	;# 
  1736  0005                     	;# 
  1737  0006                     	;# 
  1738  0007                     	;# 
  1739  0008                     	;# 
  1740  0009                     	;# 
  1741  000A                     	;# 
  1742  000B                     	;# 
  1743  000C                     	;# 
  1744  000D                     	;# 
  1745  000E                     	;# 
  1746  000F                     	;# 
  1747  0010                     	;# 
  1748  0011                     	;# 
  1749  0012                     	;# 
  1750  0013                     	;# 
  1751  0015                     	;# 
  1752  0016                     	;# 
  1753  0016                     	;# 
  1754  0017                     	;# 
  1755  0018                     	;# 
  1756  0019                     	;# 
  1757  001A                     	;# 
  1758  001B                     	;# 
  1759  001C                     	;# 
  1760  008C                     	;# 
  1761  008D                     	;# 
  1762  008E                     	;# 
  1763  008F                     	;# 
  1764  0090                     	;# 
  1765  0091                     	;# 
  1766  0092                     	;# 
  1767  0093                     	;# 
  1768  0095                     	;# 
  1769  0096                     	;# 
  1770  0097                     	;# 
  1771  0098                     	;# 
  1772  0099                     	;# 
  1773  009A                     	;# 
  1774  009B                     	;# 
  1775  009B                     	;# 
  1776  009C                     	;# 
  1777  009D                     	;# 
  1778  009E                     	;# 
  1779  009F                     	;# 
  1780  010C                     	;# 
  1781  010D                     	;# 
  1782  010E                     	;# 
  1783  010F                     	;# 
  1784  0110                     	;# 
  1785  0111                     	;# 
  1786  0112                     	;# 
  1787  0113                     	;# 
  1788  0114                     	;# 
  1789  0115                     	;# 
  1790  0116                     	;# 
  1791  0117                     	;# 
  1792  0118                     	;# 
  1793  0119                     	;# 
  1794  011A                     	;# 
  1795  011B                     	;# 
  1796  011B                     	;# 
  1797  011C                     	;# 
  1798  018C                     	;# 
  1799  018D                     	;# 
  1800  018E                     	;# 
  1801  018F                     	;# 
  1802  0190                     	;# 
  1803  0191                     	;# 
  1804  0191                     	;# 
  1805  0192                     	;# 
  1806  0193                     	;# 
  1807  0193                     	;# 
  1808  0194                     	;# 
  1809  0195                     	;# 
  1810  0196                     	;# 
  1811  0197                     	;# 
  1812  0199                     	;# 
  1813  0199                     	;# 
  1814  0199                     	;# 
  1815  019A                     	;# 
  1816  019A                     	;# 
  1817  019A                     	;# 
  1818  019B                     	;# 
  1819  019B                     	;# 
  1820  019B                     	;# 
  1821  019B                     	;# 
  1822  019B                     	;# 
  1823  019C                     	;# 
  1824  019C                     	;# 
  1825  019C                     	;# 
  1826  019D                     	;# 
  1827  019D                     	;# 
  1828  019D                     	;# 
  1829  019E                     	;# 
  1830  019E                     	;# 
  1831  019E                     	;# 
  1832  019F                     	;# 
  1833  019F                     	;# 
  1834  019F                     	;# 
  1835  019F                     	;# 
  1836  019F                     	;# 
  1837  020C                     	;# 
  1838  020D                     	;# 
  1839  020E                     	;# 
  1840  020F                     	;# 
  1841  0210                     	;# 
  1842  0211                     	;# 
  1843  0211                     	;# 
  1844  0212                     	;# 
  1845  0212                     	;# 
  1846  0213                     	;# 
  1847  0213                     	;# 
  1848  0214                     	;# 
  1849  0214                     	;# 
  1850  0215                     	;# 
  1851  0215                     	;# 
  1852  0215                     	;# 
  1853  0215                     	;# 
  1854  0216                     	;# 
  1855  0216                     	;# 
  1856  0217                     	;# 
  1857  0217                     	;# 
  1858  028C                     	;# 
  1859  028D                     	;# 
  1860  028E                     	;# 
  1861  028F                     	;# 
  1862  0290                     	;# 
  1863  0291                     	;# 
  1864  0291                     	;# 
  1865  0292                     	;# 
  1866  0293                     	;# 
  1867  0293                     	;# 
  1868  0298                     	;# 
  1869  0298                     	;# 
  1870  0299                     	;# 
  1871  029A                     	;# 
  1872  029A                     	;# 
  1873  029E                     	;# 
  1874  030C                     	;# 
  1875  030D                     	;# 
  1876  030E                     	;# 
  1877  030F                     	;# 
  1878  0310                     	;# 
  1879  038C                     	;# 
  1880  038D                     	;# 
  1881  038E                     	;# 
  1882  038F                     	;# 
  1883  0390                     	;# 
  1884  0391                     	;# 
  1885  0392                     	;# 
  1886  0393                     	;# 
  1887  0394                     	;# 
  1888  0395                     	;# 
  1889  0396                     	;# 
  1890  0397                     	;# 
  1891  0398                     	;# 
  1892  0399                     	;# 
  1893  039D                     	;# 
  1894  039E                     	;# 
  1895  039F                     	;# 
  1896  0415                     	;# 
  1897  0416                     	;# 
  1898  0417                     	;# 
  1899  041C                     	;# 
  1900  041D                     	;# 
  1901  041E                     	;# 
  1902  0498                     	;# 
  1903  0498                     	;# 
  1904  0499                     	;# 
  1905  049A                     	;# 
  1906  049B                     	;# 
  1907  049B                     	;# 
  1908  049C                     	;# 
  1909  049D                     	;# 
  1910  049E                     	;# 
  1911  049F                     	;# 
  1912  0511                     	;# 
  1913  0515                     	;# 
  1914  0617                     	;# 
  1915  0618                     	;# 
  1916  0619                     	;# 
  1917  0619                     	;# 
  1918  061A                     	;# 
  1919  061B                     	;# 
  1920  061C                     	;# 
  1921  061C                     	;# 
  1922  0691                     	;# 
  1923  0692                     	;# 
  1924  0693                     	;# 
  1925  0694                     	;# 
  1926  0695                     	;# 
  1927  0696                     	;# 
  1928  0697                     	;# 
  1929  0698                     	;# 
  1930  0699                     	;# 
  1931  069A                     	;# 
  1932  069B                     	;# 
  1933  069C                     	;# 
  1934  069D                     	;# 
  1935  069E                     	;# 
  1936  069F                     	;# 
  1937  0E0F                     	;# 
  1938  0E10                     	;# 
  1939  0E11                     	;# 
  1940  0E12                     	;# 
  1941  0E13                     	;# 
  1942  0E14                     	;# 
  1943  0E15                     	;# 
  1944  0E17                     	;# 
  1945  0E20                     	;# 
  1946  0E21                     	;# 
  1947  0E22                     	;# 
  1948  0E24                     	;# 
  1949  0E25                     	;# 
  1950  0E28                     	;# 
  1951  0E29                     	;# 
  1952  0E2A                     	;# 
  1953  0E2B                     	;# 
  1954  0E90                     	;# 
  1955  0E91                     	;# 
  1956  0E92                     	;# 
  1957  0E93                     	;# 
  1958  0E94                     	;# 
  1959  0E95                     	;# 
  1960  0E96                     	;# 
  1961  0E97                     	;# 
  1962  0E98                     	;# 
  1963  0E99                     	;# 
  1964  0E9A                     	;# 
  1965  0E9B                     	;# 
  1966  0E9C                     	;# 
  1967  0E9D                     	;# 
  1968  0E9E                     	;# 
  1969  0E9F                     	;# 
  1970  0EA0                     	;# 
  1971  0EA1                     	;# 
  1972  0EA2                     	;# 
  1973  0EA3                     	;# 
  1974  0EA4                     	;# 
  1975  0EA5                     	;# 
  1976  0EA6                     	;# 
  1977  0EA7                     	;# 
  1978  0EA8                     	;# 
  1979  0EA9                     	;# 
  1980  0EAA                     	;# 
  1981  0EAB                     	;# 
  1982  0EAC                     	;# 
  1983  0EAD                     	;# 
  1984  0EAE                     	;# 
  1985  0EAF                     	;# 
  1986  0EB0                     	;# 
  1987  0EB1                     	;# 
  1988  0EB2                     	;# 
  1989  0F0F                     	;# 
  1990  0F10                     	;# 
  1991  0F11                     	;# 
  1992  0F12                     	;# 
  1993  0F13                     	;# 
  1994  0F14                     	;# 
  1995  0F15                     	;# 
  1996  0F16                     	;# 
  1997  0F17                     	;# 
  1998  0F18                     	;# 
  1999  0F19                     	;# 
  2000  0F1A                     	;# 
  2001  0F1B                     	;# 
  2002  0F1C                     	;# 
  2003  0F1D                     	;# 
  2004  0F1E                     	;# 
  2005  0F1F                     	;# 
  2006  0F20                     	;# 
  2007  0F21                     	;# 
  2008  0F22                     	;# 
  2009  0F23                     	;# 
  2010  0F24                     	;# 
  2011  0F25                     	;# 
  2012  0F26                     	;# 
  2013  0F27                     	;# 
  2014  0F28                     	;# 
  2015  0F29                     	;# 
  2016  0F2A                     	;# 
  2017  0F2B                     	;# 
  2018  0F2C                     	;# 
  2019  0F2D                     	;# 
  2020  0F2E                     	;# 
  2021  0F2F                     	;# 
  2022  0F30                     	;# 
  2023  0F31                     	;# 
  2024  0F32                     	;# 
  2025  0F33                     	;# 
  2026  0F34                     	;# 
  2027  0F35                     	;# 
  2028  0F36                     	;# 
  2029  0F37                     	;# 
  2030  0FE4                     	;# 
  2031  0FE5                     	;# 
  2032  0FE6                     	;# 
  2033  0FE7                     	;# 
  2034  0FE8                     	;# 
  2035  0FE9                     	;# 
  2036  0FEA                     	;# 
  2037  0FEB                     	;# 
  2038  0FED                     	;# 
  2039  0FEE                     	;# 
  2040  0FEF                     	;_messageBuffer
  2041                           
  2042                           	psect	idataBANK3
  2043  0800                     __pidataBANK3:	
  2044                           
  2045                           ;initializer for stoa@F1174
  2046  0800  3428               	retlw	40
  2047  0801  346E               	retlw	110
  2048  0802  3475               	retlw	117
  2049  0803  346C               	retlw	108
  2050  0804  346C               	retlw	108
  2051  0805  3429               	retlw	41
  2052  0806  3400               	retlw	0
  2053                           
  2054                           	psect	stringtext1
  2055  3165                     __pstringtext1:	
  2056  3165                     _OCD_threshold_setting:	
  2057  3165  3411               	retlw	17
  2058  3166  3400               	retlw	0
  2059  3167  3416               	retlw	22
  2060  3168  3400               	retlw	0
  2061  3169  341C               	retlw	28
  2062  316A  3400               	retlw	0
  2063  316B  3421               	retlw	33
  2064  316C  3400               	retlw	0
  2065  316D  3427               	retlw	39
  2066  316E  3400               	retlw	0
  2067  316F  342C               	retlw	44
  2068  3170  3400               	retlw	0
  2069  3171  3432               	retlw	50
  2070  3172  3400               	retlw	0
  2071  3173  3438               	retlw	56
  2072  3174  3400               	retlw	0
  2073  3175  343D               	retlw	61
  2074  3176  3400               	retlw	0
  2075  3177  3443               	retlw	67
  2076  3178  3400               	retlw	0
  2077  3179  3448               	retlw	72
  2078  317A  3400               	retlw	0
  2079  317B  344E               	retlw	78
  2080  317C  3400               	retlw	0
  2081  317D  3453               	retlw	83
  2082  317E  3400               	retlw	0
  2083  317F  3459               	retlw	89
  2084  3180  3400               	retlw	0
  2085  3181  345E               	retlw	94
  2086  3182  3400               	retlw	0
  2087  3183  3464               	retlw	100
  2088  3184  3400               	retlw	0
  2089  3185                     __end_of_OCD_threshold_setting:	
  2090                           
  2091                           	psect	stringtext2
  2092  3800                     __pstringtext2:	
  2093  3800                     _OCD_delay_setting:	
  2094  3800  3408               	retlw	8
  2095  3801  3400               	retlw	0
  2096  3802  3414               	retlw	20
  2097  3803  3400               	retlw	0
  2098  3804  3428               	retlw	40
  2099  3805  3400               	retlw	0
  2100  3806  3450               	retlw	80
  2101  3807  3400               	retlw	0
  2102  3808  34A0               	retlw	160
  2103  3809  3400               	retlw	0
  2104  380A  3440               	retlw	64
  2105  380B  3401               	retlw	1
  2106  380C  3480               	retlw	128
  2107  380D  3402               	retlw	2
  2108  380E  3400               	retlw	0
  2109  380F  3405               	retlw	5
  2110  3810                     __end_of_OCD_delay_setting:	
  2111                           
  2112                           	psect	stringtext3
  2113  3810                     __pstringtext3:	
  2114  3810                     _SCD_threshold_setting:	
  2115  3810  342C               	retlw	44
  2116  3811  3400               	retlw	0
  2117  3812  3443               	retlw	67
  2118  3813  3400               	retlw	0
  2119  3814  3459               	retlw	89
  2120  3815  3400               	retlw	0
  2121  3816  346F               	retlw	111
  2122  3817  3400               	retlw	0
  2123  3818  3485               	retlw	133
  2124  3819  3400               	retlw	0
  2125  381A  349B               	retlw	155
  2126  381B  3400               	retlw	0
  2127  381C  34B2               	retlw	178
  2128  381D  3400               	retlw	0
  2129  381E  34C8               	retlw	200
  2130  381F  3400               	retlw	0
  2131  3820                     __end_of_SCD_threshold_setting:	
  2132                           
  2133                           	psect	stringtext4
  2134  3820                     __pstringtext4:	
  2135  3820                     _OV_delay_setting:	
  2136  3820  3401               	retlw	1
  2137  3821  3400               	retlw	0
  2138  3822  3402               	retlw	2
  2139  3823  3400               	retlw	0
  2140  3824  3404               	retlw	4
  2141  3825  3400               	retlw	0
  2142  3826  3408               	retlw	8
  2143  3827  3400               	retlw	0
  2144  3828                     __end_of_OV_delay_setting:	
  2145                           
  2146                           	psect	stringtext5
  2147  3828                     __pstringtext5:	
  2148  3828                     _UV_delay_setting:	
  2149  3828  3401               	retlw	1
  2150  3829  3400               	retlw	0
  2151  382A  3404               	retlw	4
  2152  382B  3400               	retlw	0
  2153  382C  3408               	retlw	8
  2154  382D  3400               	retlw	0
  2155  382E  3410               	retlw	16
  2156  382F  3400               	retlw	0
  2157  3830                     __end_of_UV_delay_setting:	
  2158                           
  2159                           	psect	stringtext6
  2160  3830                     __pstringtext6:	
  2161  3830                     _SCD_delay_setting:	
  2162  3830  3446               	retlw	70
  2163  3831  3400               	retlw	0
  2164  3832  3464               	retlw	100
  2165  3833  3400               	retlw	0
  2166  3834  34C8               	retlw	200
  2167  3835  3400               	retlw	0
  2168  3836  3490               	retlw	144
  2169  3837  3401               	retlw	1
  2170  3838                     __end_of_SCD_delay_setting:	
  2171                           
  2172                           	psect	stringtext7
  2173  3000                     __pstringtext7:	
  2174  3000                     _ATmega328_address:	
  2175  3000  3402               	retlw	2
  2176  3001  3400               	retlw	0
  2177  3002                     __end_of_ATmega328_address:	
  2178  0016                     _TMR1	set	22
  2179  000B                     _INTCONbits	set	11
  2180  0018                     _T1CONbits	set	24
  2181  0011                     _PIR1bits	set	17
  2182  0090                     _TRISEbits	set	144
  2183  008C                     _TRISAbits	set	140
  2184  008E                     _TRISCbits	set	142
  2185  008D                     _TRISBbits	set	141
  2186  0091                     _PIE1bits	set	145
  2187  0476                     _TRISC6	set	1142
  2188  0477                     _TRISC7	set	1143
  2189  04CF                     _SPLLEN	set	1231
  2190  04CE                     _IRCF3	set	1230
  2191  04CD                     _IRCF2	set	1229
  2192  04CC                     _IRCF1	set	1228
  2193  04CB                     _IRCF0	set	1227
  2194  04C9                     _SCS1	set	1225
  2195  04C8                     _SCS0	set	1224
  2196  0110                     _LATEbits	set	272
  2197  010C                     _LATAbits	set	268
  2198  019A                     _TX1REG	set	410
  2199  0199                     _RC1REG	set	409
  2200  019D                     _RC1STAbits	set	413
  2201  019B                     _SPBRG	set	411
  2202  018E                     _ANSELCbits	set	398
  2203  018D                     _ANSELBbits	set	397
  2204  0CF5                     _TXEN	set	3317
  2205  0CEC                     _CREN	set	3308
  2206  0CEF                     _SPEN	set	3311
  2207  0CF4                     _SYNC	set	3316
  2208  0CF2                     _BRGH	set	3314
  2209  0216                     _SSPCON2bits	set	534
  2210  0211                     _SSPBUF	set	529
  2211  0212                     _SSPADD	set	530
  2212  0215                     _SSPCONbits	set	533
  2213  0E24                     _RXPPSbits	set	3620
  2214  0E20                     _SSPCLKPPSbits	set	3616
  2215  0E21                     _SSPDATPPSbits	set	3617
  2216  0E0F                     _PPSLOCKbits	set	3599
  2217  0E0F                     _PPSLOCK	set	3599
  2218  0E9A                     _RB2PPSbits	set	3738
  2219  0EA5                     _RC5PPSbits	set	3749
  2220  0EA4                     _RC4PPSbits	set	3748
  2221  3002                     STR_4:	
  2222  3002  3441               	retlw	65	;'A'
  2223  3003  3474               	retlw	116	;'t'
  2224  3004  3474               	retlw	116	;'t'
  2225  3005  3465               	retlw	101	;'e'
  2226  3006  346D               	retlw	109	;'m'
  2227  3007  3470               	retlw	112	;'p'
  2228  3008  3474               	retlw	116	;'t'
  2229  3009  3420               	retlw	32	;' '
  2230  300A  3474               	retlw	116	;'t'
  2231  300B  346F               	retlw	111	;'o'
  2232  300C  3420               	retlw	32	;' '
  2233  300D  3473               	retlw	115	;'s'
  2234  300E  3465               	retlw	101	;'e'
  2235  300F  3474               	retlw	116	;'t'
  2236  3010  3420               	retlw	32	;' '
  2237  3011  3469               	retlw	105	;'i'
  2238  3012  346E               	retlw	110	;'n'
  2239  3013  3469               	retlw	105	;'i'
  2240  3014  3474               	retlw	116	;'t'
  2241  3015  3469               	retlw	105	;'i'
  2242  3016  3461               	retlw	97	;'a'
  2243  3017  346C               	retlw	108	;'l'
  2244  3018  3420               	retlw	32	;' '
  2245  3019  3473               	retlw	115	;'s'
  2246  301A  3479               	retlw	121	;'y'
  2247  301B  3473               	retlw	115	;'s'
  2248  301C  3474               	retlw	116	;'t'
  2249  301D  3465               	retlw	101	;'e'
  2250  301E  346D               	retlw	109	;'m'
  2251  301F  3420               	retlw	32	;' '
  2252  3020  3470               	retlw	112	;'p'
  2253  3021  3461               	retlw	97	;'a'
  2254  3022  3472               	retlw	114	;'r'
  2255  3023  3461               	retlw	97	;'a'
  2256  3024  346D               	retlw	109	;'m'
  2257  3025  3465               	retlw	101	;'e'
  2258  3026  3474               	retlw	116	;'t'
  2259  3027  3465               	retlw	101	;'e'
  2260  3028  3472               	retlw	114	;'r'
  2261  3029  3473               	retlw	115	;'s'
  2262  302A  3420               	retlw	32	;' '
  2263  302B  3474               	retlw	116	;'t'
  2264  302C  346F               	retlw	111	;'o'
  2265  302D  3420               	retlw	32	;' '
  2266  302E  3441               	retlw	65	;'A'
  2267  302F  3446               	retlw	70	;'F'
  2268  3030  3445               	retlw	69	;'E'
  2269  3031  342E               	retlw	46	;'.'
  2270  3032  342E               	retlw	46	;'.'
  2271  3033  342E               	retlw	46	;'.'
  2272  3034  340A               	retlw	10
  2273  3035  340D               	retlw	13
  2274  3036  3400               	retlw	0
  2275                           
  2276                           	psect	stringtext8
  2277  3037                     __pstringtext8:	
  2278  3037                     STR_2:	
  2279  3037  3443               	retlw	67	;'C'
  2280  3038  346F               	retlw	111	;'o'
  2281  3039  346D               	retlw	109	;'m'
  2282  303A  346D               	retlw	109	;'m'
  2283  303B  3475               	retlw	117	;'u'
  2284  303C  346E               	retlw	110	;'n'
  2285  303D  3469               	retlw	105	;'i'
  2286  303E  3463               	retlw	99	;'c'
  2287  303F  3461               	retlw	97	;'a'
  2288  3040  3474               	retlw	116	;'t'
  2289  3041  3469               	retlw	105	;'i'
  2290  3042  346F               	retlw	111	;'o'
  2291  3043  346E               	retlw	110	;'n'
  2292  3044  3420               	retlw	32	;' '
  2293  3045  3477               	retlw	119	;'w'
  2294  3046  3469               	retlw	105	;'i'
  2295  3047  3474               	retlw	116	;'t'
  2296  3048  3468               	retlw	104	;'h'
  2297  3049  3420               	retlw	32	;' '
  2298  304A  3442               	retlw	66	;'B'
  2299  304B  3451               	retlw	81	;'Q'
  2300  304C  3437               	retlw	55	;'7'
  2301  304D  3436               	retlw	54	;'6'
  2302  304E  3439               	retlw	57	;'9'
  2303  304F  3432               	retlw	50	;'2'
  2304  3050  3430               	retlw	48	;'0'
  2305  3051  3420               	retlw	32	;' '
  2306  3052  3441               	retlw	65	;'A'
  2307  3053  3446               	retlw	70	;'F'
  2308  3054  3445               	retlw	69	;'E'
  2309  3055  3420               	retlw	32	;' '
  2310  3056  3465               	retlw	101	;'e'
  2311  3057  3473               	retlw	115	;'s'
  2312  3058  3474               	retlw	116	;'t'
  2313  3059  3461               	retlw	97	;'a'
  2314  305A  3462               	retlw	98	;'b'
  2315  305B  346C               	retlw	108	;'l'
  2316  305C  3469               	retlw	105	;'i'
  2317  305D  3473               	retlw	115	;'s'
  2318  305E  3468               	retlw	104	;'h'
  2319  305F  3465               	retlw	101	;'e'
  2320  3060  3464               	retlw	100	;'d'
  2321  3061  3421               	retlw	33	;'!'
  2322  3062  340A               	retlw	10
  2323  3063  340D               	retlw	13
  2324  3064  3400               	retlw	0
  2325                           
  2326                           	psect	stringtext9
  2327  3065                     __pstringtext9:	
  2328  3065                     STR_9:	
  2329  3065  344E               	retlw	78	;'N'
  2330  3066  346F               	retlw	111	;'o'
  2331  3067  3477               	retlw	119	;'w'
  2332  3068  3420               	retlw	32	;' '
  2333  3069  3472               	retlw	114	;'r'
  2334  306A  3465               	retlw	101	;'e'
  2335  306B  3461               	retlw	97	;'a'
  2336  306C  3464               	retlw	100	;'d'
  2337  306D  3469               	retlw	105	;'i'
  2338  306E  346E               	retlw	110	;'n'
  2339  306F  3467               	retlw	103	;'g'
  2340  3070  3420               	retlw	32	;' '
  2341  3071  3441               	retlw	65	;'A'
  2342  3072  3446               	retlw	70	;'F'
  2343  3073  3445               	retlw	69	;'E'
  2344  3074  3420               	retlw	32	;' '
  2345  3075  3464               	retlw	100	;'d'
  2346  3076  3461               	retlw	97	;'a'
  2347  3077  3474               	retlw	116	;'t'
  2348  3078  3461               	retlw	97	;'a'
  2349  3079  3420               	retlw	32	;' '
  2350  307A  3461               	retlw	97	;'a'
  2351  307B  3474               	retlw	116	;'t'
  2352  307C  3420               	retlw	32	;' '
  2353  307D  3472               	retlw	114	;'r'
  2354  307E  3465               	retlw	101	;'e'
  2355  307F  3467               	retlw	103	;'g'
  2356  3080  3475               	retlw	117	;'u'
  2357  3081  346C               	retlw	108	;'l'
  2358  3082  3461               	retlw	97	;'a'
  2359  3083  3472               	retlw	114	;'r'
  2360  3084  3420               	retlw	32	;' '
  2361  3085  3469               	retlw	105	;'i'
  2362  3086  346E               	retlw	110	;'n'
  2363  3087  3474               	retlw	116	;'t'
  2364  3088  3465               	retlw	101	;'e'
  2365  3089  3472               	retlw	114	;'r'
  2366  308A  3476               	retlw	118	;'v'
  2367  308B  3461               	retlw	97	;'a'
  2368  308C  346C               	retlw	108	;'l'
  2369  308D  3473               	retlw	115	;'s'
  2370  308E  342E               	retlw	46	;'.'
  2371  308F  340A               	retlw	10
  2372  3090  340D               	retlw	13
  2373  3091  3400               	retlw	0
  2374                           
  2375                           	psect	stringtext10
  2376  3092                     __pstringtext10:	
  2377  3092                     STR_7:	
  2378  3092  3453               	retlw	83	;'S'
  2379  3093  3465               	retlw	101	;'e'
  2380  3094  3474               	retlw	116	;'t'
  2381  3095  3420               	retlw	32	;' '
  2382  3096  3473               	retlw	115	;'s'
  2383  3097  3468               	retlw	104	;'h'
  2384  3098  346F               	retlw	111	;'o'
  2385  3099  3472               	retlw	114	;'r'
  2386  309A  3474               	retlw	116	;'t'
  2387  309B  3420               	retlw	32	;' '
  2388  309C  3463               	retlw	99	;'c'
  2389  309D  3469               	retlw	105	;'i'
  2390  309E  3472               	retlw	114	;'r'
  2391  309F  3463               	retlw	99	;'c'
  2392  30A0  3475               	retlw	117	;'u'
  2393  30A1  3469               	retlw	105	;'i'
  2394  30A2  3474               	retlw	116	;'t'
  2395  30A3  3420               	retlw	32	;' '
  2396  30A4  3463               	retlw	99	;'c'
  2397  30A5  3475               	retlw	117	;'u'
  2398  30A6  3472               	retlw	114	;'r'
  2399  30A7  3472               	retlw	114	;'r'
  2400  30A8  3465               	retlw	101	;'e'
  2401  30A9  346E               	retlw	110	;'n'
  2402  30AA  3474               	retlw	116	;'t'
  2403  30AB  3420               	retlw	32	;' '
  2404  30AC  3466               	retlw	102	;'f'
  2405  30AD  346F               	retlw	111	;'o'
  2406  30AE  3472               	retlw	114	;'r'
  2407  30AF  3420               	retlw	32	;' '
  2408  30B0  3441               	retlw	65	;'A'
  2409  30B1  3446               	retlw	70	;'F'
  2410  30B2  3445               	retlw	69	;'E'
  2411  30B3  343A               	retlw	58	;':'
  2412  30B4  3420               	retlw	32	;' '
  2413  30B5  3425               	retlw	37	;'%'
  2414  30B6  346C               	retlw	108	;'l'
  2415  30B7  3475               	retlw	117	;'u'
  2416  30B8  3420               	retlw	32	;' '
  2417  30B9  346D               	retlw	109	;'m'
  2418  30BA  3441               	retlw	65	;'A'
  2419  30BB  340A               	retlw	10
  2420  30BC  340D               	retlw	13
  2421  30BD  3400               	retlw	0
  2422                           
  2423                           	psect	stringtext11
  2424  30BE                     __pstringtext11:	
  2425  30BE                     STR_3:	
  2426  30BE  344F               	retlw	79	;'O'
  2427  30BF  3462               	retlw	98	;'b'
  2428  30C0  3474               	retlw	116	;'t'
  2429  30C1  3461               	retlw	97	;'a'
  2430  30C2  3469               	retlw	105	;'i'
  2431  30C3  346E               	retlw	110	;'n'
  2432  30C4  3465               	retlw	101	;'e'
  2433  30C5  3464               	retlw	100	;'d'
  2434  30C6  3420               	retlw	32	;' '
  2435  30C7  3461               	retlw	97	;'a'
  2436  30C8  3464               	retlw	100	;'d'
  2437  30C9  3463               	retlw	99	;'c'
  2438  30CA  344F               	retlw	79	;'O'
  2439  30CB  3466               	retlw	102	;'f'
  2440  30CC  3466               	retlw	102	;'f'
  2441  30CD  3473               	retlw	115	;'s'
  2442  30CE  3465               	retlw	101	;'e'
  2443  30CF  3474               	retlw	116	;'t'
  2444  30D0  3420               	retlw	32	;' '
  2445  30D1  343D               	retlw	61	;'='
  2446  30D2  3420               	retlw	32	;' '
  2447  30D3  3425               	retlw	37	;'%'
  2448  30D4  3469               	retlw	105	;'i'
  2449  30D5  3420               	retlw	32	;' '
  2450  30D6  3461               	retlw	97	;'a'
  2451  30D7  346E               	retlw	110	;'n'
  2452  30D8  3464               	retlw	100	;'d'
  2453  30D9  3420               	retlw	32	;' '
  2454  30DA  3461               	retlw	97	;'a'
  2455  30DB  3464               	retlw	100	;'d'
  2456  30DC  3463               	retlw	99	;'c'
  2457  30DD  3447               	retlw	71	;'G'
  2458  30DE  3461               	retlw	97	;'a'
  2459  30DF  3469               	retlw	105	;'i'
  2460  30E0  346E               	retlw	110	;'n'
  2461  30E1  3420               	retlw	32	;' '
  2462  30E2  343D               	retlw	61	;'='
  2463  30E3  3420               	retlw	32	;' '
  2464  30E4  3425               	retlw	37	;'%'
  2465  30E5  3469               	retlw	105	;'i'
  2466  30E6  340A               	retlw	10
  2467  30E7  340D               	retlw	13
  2468  30E8  3400               	retlw	0
  2469                           
  2470                           	psect	stringtext12
  2471  30E9                     __pstringtext12:	
  2472  30E9                     STR_8:	
  2473  30E9  3449               	retlw	73	;'I'
  2474  30EA  346E               	retlw	110	;'n'
  2475  30EB  3469               	retlw	105	;'i'
  2476  30EC  3474               	retlw	116	;'t'
  2477  30ED  3469               	retlw	105	;'i'
  2478  30EE  3461               	retlw	97	;'a'
  2479  30EF  346C               	retlw	108	;'l'
  2480  30F0  3420               	retlw	32	;' '
  2481  30F1  3470               	retlw	112	;'p'
  2482  30F2  3461               	retlw	97	;'a'
  2483  30F3  3472               	retlw	114	;'r'
  2484  30F4  3461               	retlw	97	;'a'
  2485  30F5  346D               	retlw	109	;'m'
  2486  30F6  3465               	retlw	101	;'e'
  2487  30F7  3474               	retlw	116	;'t'
  2488  30F8  3465               	retlw	101	;'e'
  2489  30F9  3472               	retlw	114	;'r'
  2490  30FA  3473               	retlw	115	;'s'
  2491  30FB  3420               	retlw	32	;' '
  2492  30FC  3466               	retlw	102	;'f'
  2493  30FD  346F               	retlw	111	;'o'
  2494  30FE  3472               	retlw	114	;'r'
  2495  30FF  3420               	retlw	32	;' '
  2496  3100  3442               	retlw	66	;'B'
  2497  3101  3451               	retlw	81	;'Q'
  2498  3102  3437               	retlw	55	;'7'
  2499  3103  3436               	retlw	54	;'6'
  2500  3104  3439               	retlw	57	;'9'
  2501  3105  3432               	retlw	50	;'2'
  2502  3106  3430               	retlw	48	;'0'
  2503  3107  3420               	retlw	32	;' '
  2504  3108  3441               	retlw	65	;'A'
  2505  3109  3446               	retlw	70	;'F'
  2506  310A  3445               	retlw	69	;'E'
  2507  310B  3420               	retlw	32	;' '
  2508  310C  3473               	retlw	115	;'s'
  2509  310D  3465               	retlw	101	;'e'
  2510  310E  3474               	retlw	116	;'t'
  2511  310F  3421               	retlw	33	;'!'
  2512  3110  340A               	retlw	10
  2513  3111  340D               	retlw	13
  2514  3112  3400               	retlw	0
  2515                           
  2516                           	psect	stringtext13
  2517  3113                     __pstringtext13:	
  2518  3113                     STR_6:	
  2519  3113  3443               	retlw	67	;'C'
  2520  3114  3475               	retlw	117	;'u'
  2521  3115  3472               	retlw	114	;'r'
  2522  3116  3472               	retlw	114	;'r'
  2523  3117  3465               	retlw	101	;'e'
  2524  3118  346E               	retlw	110	;'n'
  2525  3119  3474               	retlw	116	;'t'
  2526  311A  3420               	retlw	32	;' '
  2527  311B  3473               	retlw	115	;'s'
  2528  311C  3465               	retlw	101	;'e'
  2529  311D  346E               	retlw	110	;'n'
  2530  311E  3473               	retlw	115	;'s'
  2531  311F  3465               	retlw	101	;'e'
  2532  3120  3420               	retlw	32	;' '
  2533  3121  3472               	retlw	114	;'r'
  2534  3122  3465               	retlw	101	;'e'
  2535  3123  3473               	retlw	115	;'s'
  2536  3124  3469               	retlw	105	;'i'
  2537  3125  3473               	retlw	115	;'s'
  2538  3126  3474               	retlw	116	;'t'
  2539  3127  346F               	retlw	111	;'o'
  2540  3128  3472               	retlw	114	;'r'
  2541  3129  3420               	retlw	32	;' '
  2542  312A  3476               	retlw	118	;'v'
  2543  312B  3461               	retlw	97	;'a'
  2544  312C  346C               	retlw	108	;'l'
  2545  312D  3475               	retlw	117	;'u'
  2546  312E  3465               	retlw	101	;'e'
  2547  312F  343A               	retlw	58	;':'
  2548  3130  3420               	retlw	32	;' '
  2549  3131  3425               	retlw	37	;'%'
  2550  3132  342E               	retlw	46	;'.'
  2551  3133  3434               	retlw	52	;'4'
  2552  3134  3466               	retlw	102	;'f'
  2553  3135  3420               	retlw	32	;' '
  2554  3136  346F               	retlw	111	;'o'
  2555  3137  3468               	retlw	104	;'h'
  2556  3138  346D               	retlw	109	;'m'
  2557  3139  3473               	retlw	115	;'s'
  2558  313A  340A               	retlw	10
  2559  313B  340D               	retlw	13
  2560  313C  3400               	retlw	0
  2561                           
  2562                           	psect	stringtext14
  2563  313D                     __pstringtext14:	
  2564  313D                     STR_1:	
  2565  313D  3441               	retlw	65	;'A'
  2566  313E  3474               	retlw	116	;'t'
  2567  313F  3474               	retlw	116	;'t'
  2568  3140  3465               	retlw	101	;'e'
  2569  3141  346D               	retlw	109	;'m'
  2570  3142  3470               	retlw	112	;'p'
  2571  3143  3474               	retlw	116	;'t'
  2572  3144  3469               	retlw	105	;'i'
  2573  3145  346E               	retlw	110	;'n'
  2574  3146  3467               	retlw	103	;'g'
  2575  3147  3420               	retlw	32	;' '
  2576  3148  3474               	retlw	116	;'t'
  2577  3149  346F               	retlw	111	;'o'
  2578  314A  3420               	retlw	32	;' '
  2579  314B  3463               	retlw	99	;'c'
  2580  314C  346F               	retlw	111	;'o'
  2581  314D  346D               	retlw	109	;'m'
  2582  314E  346D               	retlw	109	;'m'
  2583  314F  3475               	retlw	117	;'u'
  2584  3150  346E               	retlw	110	;'n'
  2585  3151  3469               	retlw	105	;'i'
  2586  3152  3463               	retlw	99	;'c'
  2587  3153  3461               	retlw	97	;'a'
  2588  3154  3474               	retlw	116	;'t'
  2589  3155  3465               	retlw	101	;'e'
  2590  3156  3420               	retlw	32	;' '
  2591  3157  3477               	retlw	119	;'w'
  2592  3158  3469               	retlw	105	;'i'
  2593  3159  3474               	retlw	116	;'t'
  2594  315A  3468               	retlw	104	;'h'
  2595  315B  3420               	retlw	32	;' '
  2596  315C  3441               	retlw	65	;'A'
  2597  315D  3446               	retlw	70	;'F'
  2598  315E  3445               	retlw	69	;'E'
  2599  315F  342E               	retlw	46	;'.'
  2600  3160  342E               	retlw	46	;'.'
  2601  3161  342E               	retlw	46	;'.'
  2602  3162  340A               	retlw	10
  2603  3163  340D               	retlw	13
  2604  3164  3400               	retlw	0
  2605                           
  2606                           	psect	stringtext15
  2607  3838                     __pstringtext15:	
  2608  3838                     STR_10:	
  2609  3838  3449               	retlw	73	;'I'
  2610  3839  344E               	retlw	78	;'N'
  2611  383A  3446               	retlw	70	;'F'
  2612  383B  3400               	retlw	0
  2613                           
  2614                           	psect	stringtext16
  2615  383C                     __pstringtext16:	
  2616  383C                     STR_14:	
  2617  383C  344E               	retlw	78	;'N'
  2618  383D  3441               	retlw	65	;'A'
  2619  383E  344E               	retlw	78	;'N'
  2620  383F  3400               	retlw	0
  2621                           
  2622                           	psect	stringtext17
  2623  3840                     __pstringtext17:	
  2624  3840                     STR_123:	
  2625  3840  3468               	retlw	104	;'h'
  2626  3841  3468               	retlw	104	;'h'
  2627  3842  3458               	retlw	88	;'X'
  2628  3843  3400               	retlw	0
  2629                           
  2630                           	psect	stringtext18
  2631  3844                     __pstringtext18:	
  2632  3844                     STR_18:	
  2633  3844  3468               	retlw	104	;'h'
  2634  3845  3468               	retlw	104	;'h'
  2635  3846  3464               	retlw	100	;'d'
  2636  3847  3400               	retlw	0
  2637                           
  2638                           	psect	stringtext19
  2639  3848                     __pstringtext19:	
  2640  3848                     STR_11:	
  2641  3848  3469               	retlw	105	;'i'
  2642  3849  346E               	retlw	110	;'n'
  2643  384A  3466               	retlw	102	;'f'
  2644  384B  3400               	retlw	0
  2645                           
  2646                           	psect	stringtext20
  2647  384C                     __pstringtext20:	
  2648  384C                     STR_22:	
  2649  384C  3468               	retlw	104	;'h'
  2650  384D  3468               	retlw	104	;'h'
  2651  384E  3469               	retlw	105	;'i'
  2652  384F  3400               	retlw	0
  2653                           
  2654                           	psect	stringtext21
  2655  3850                     __pstringtext21:	
  2656  3850                     STR_15:	
  2657  3850  346E               	retlw	110	;'n'
  2658  3851  3461               	retlw	97	;'a'
  2659  3852  346E               	retlw	110	;'n'
  2660  3853  3400               	retlw	0
  2661                           
  2662                           	psect	stringtext22
  2663  3854                     __pstringtext22:	
  2664  3854                     STR_79:	
  2665  3854  3468               	retlw	104	;'h'
  2666  3855  3468               	retlw	104	;'h'
  2667  3856  346E               	retlw	110	;'n'
  2668  3857  3400               	retlw	0
  2669                           
  2670                           	psect	stringtext23
  2671  3858                     __pstringtext23:	
  2672  3858                     STR_59:	
  2673  3858  3468               	retlw	104	;'h'
  2674  3859  3468               	retlw	104	;'h'
  2675  385A  346F               	retlw	111	;'o'
  2676  385B  3400               	retlw	0
  2677                           
  2678                           	psect	stringtext24
  2679  385C                     __pstringtext24:	
  2680  385C                     STR_99:	
  2681  385C  3468               	retlw	104	;'h'
  2682  385D  3468               	retlw	104	;'h'
  2683  385E  3475               	retlw	117	;'u'
  2684  385F  3400               	retlw	0
  2685                           
  2686                           	psect	stringtext25
  2687  3860                     __pstringtext25:	
  2688  3860                     STR_119:	
  2689  3860  3468               	retlw	104	;'h'
  2690  3861  3468               	retlw	104	;'h'
  2691  3862  3478               	retlw	120	;'x'
  2692  3863  3400               	retlw	0
  2693                           
  2694                           	psect	stringtext26
  2695  3864                     __pstringtext26:	
  2696  3864                     STR_141:	
  2697  3864  346C               	retlw	108	;'l'
  2698  3865  3458               	retlw	88	;'X'
  2699  3866  3400               	retlw	0
  2700                           
  2701                           	psect	stringtext27
  2702  3867                     __pstringtext27:	
  2703  3867                     STR_150:	
  2704  3867  347A               	retlw	122	;'z'
  2705  3868  3458               	retlw	88	;'X'
  2706  3869  3400               	retlw	0
  2707                           
  2708                           	psect	stringtext28
  2709  386A                     __pstringtext28:	
  2710  386A                     STR_36:	
  2711  386A  346C               	retlw	108	;'l'
  2712  386B  3464               	retlw	100	;'d'
  2713  386C  3400               	retlw	0
  2714                           
  2715                           	psect	stringtext29
  2716  386D                     __pstringtext29:	
  2717  386D                     STR_45:	
  2718  386D  347A               	retlw	122	;'z'
  2719  386E  3464               	retlw	100	;'d'
  2720  386F  3400               	retlw	0
  2721                           
  2722                           	psect	stringtext30
  2723  3870                     __pstringtext30:	
  2724  3870                     STR_54:	
  2725  3870  346C               	retlw	108	;'l'
  2726  3871  3466               	retlw	102	;'f'
  2727  3872  3400               	retlw	0
  2728                           
  2729                           	psect	stringtext31
  2730  3873                     __pstringtext31:	
  2731  3873                     STR_40:	
  2732  3873  346C               	retlw	108	;'l'
  2733  3874  3469               	retlw	105	;'i'
  2734  3875  3400               	retlw	0
  2735                           
  2736                           	psect	stringtext32
  2737  3876                     __pstringtext32:	
  2738  3876                     STR_49:	
  2739  3876  347A               	retlw	122	;'z'
  2740  3877  3469               	retlw	105	;'i'
  2741  3878  3400               	retlw	0
  2742                           
  2743                           	psect	stringtext33
  2744  3879                     __pstringtext33:	
  2745  3879                     STR_89:	
  2746  3879  346C               	retlw	108	;'l'
  2747  387A  346E               	retlw	110	;'n'
  2748  387B  3400               	retlw	0
  2749                           
  2750                           	psect	stringtext34
  2751  387C                     __pstringtext34:	
  2752  387C                     STR_94:	
  2753  387C  347A               	retlw	122	;'z'
  2754  387D  346E               	retlw	110	;'n'
  2755  387E  3400               	retlw	0
  2756                           
  2757                           	psect	stringtext35
  2758  387F                     __pstringtext35:	
  2759  387F                     STR_69:	
  2760  387F  346C               	retlw	108	;'l'
  2761  3880  346F               	retlw	111	;'o'
  2762  3881  3400               	retlw	0
  2763                           
  2764                           	psect	stringtext36
  2765  3882                     __pstringtext36:	
  2766  3882                     STR_74:	
  2767  3882  347A               	retlw	122	;'z'
  2768  3883  346F               	retlw	111	;'o'
  2769  3884  3400               	retlw	0
  2770                           
  2771                           	psect	stringtext37
  2772  3885                     __pstringtext37:	
  2773  3885                     STR_109:	
  2774  3885  346C               	retlw	108	;'l'
  2775  3886  3475               	retlw	117	;'u'
  2776  3887  3400               	retlw	0
  2777                           
  2778                           	psect	stringtext38
  2779  3888                     __pstringtext38:	
  2780  3888                     STR_114:	
  2781  3888  347A               	retlw	122	;'z'
  2782  3889  3475               	retlw	117	;'u'
  2783  388A  3400               	retlw	0
  2784                           
  2785                           	psect	stringtext39
  2786  388B                     __pstringtext39:	
  2787  388B                     STR_137:	
  2788  388B  346C               	retlw	108	;'l'
  2789  388C  3478               	retlw	120	;'x'
  2790  388D  3400               	retlw	0
  2791                           
  2792                           	psect	stringtext40
  2793  388E                     __pstringtext40:	
  2794  388E                     STR_146:	
  2795  388E  347A               	retlw	122	;'z'
  2796  388F  3478               	retlw	120	;'x'
  2797  3890  3400               	retlw	0
  2798                           
  2799                           	psect	stringtext41
  2800  0000                     __pstringtext41:	
  2801  3062                     
  2802                           ; #config settings
  2803  0000                     
  2804                           	psect	cinit
  2805  0020                     start_initialization:	
  2806  0020                     __initialization:		;BIGRAM
  2807                           
  2808                           ; Initialize objects allocated to BANK3
  2809  0020  3000               	movlw	low __pidataBANK3
  2810  0021  0084               	movwf	4
  2811  0022  3088               	movlw	(high __pidataBANK3)| (0+128)
  2812  0023  0085               	movwf	5
  2813  0024  0023               	movlb	3	; select bank3
  2814  0025  0012               	moviw fsr0++
  2815  0026  00D4               	movwf	__pdataBANK3& (0+127)
  2816  0027  0012               	moviw fsr0++
  2817  0028  00D5               	movwf	(__pdataBANK3+1)& (0+127)
  2818  0029  0012               	moviw fsr0++
  2819  002A  00D6               	movwf	(__pdataBANK3+2)& (0+127)
  2820  002B  0012               	moviw fsr0++
  2821  002C  00D7               	movwf	(__pdataBANK3+3)& (0+127)
  2822  002D  0012               	moviw fsr0++
  2823  002E  00D8               	movwf	(__pdataBANK3+4)& (0+127)
  2824  002F  0012               	moviw fsr0++
  2825  0030  00D9               	movwf	(__pdataBANK3+5)& (0+127)
  2826  0031  0012               	moviw fsr0++
  2827  0032  00DA               	movwf	(__pdataBANK3+6)& (0+127)
  2828                           
  2829                           ; Clear objects allocated to BIGRAM
  2830  0033  3071               	movlw	low (0+10097)
  2831  0034  0084               	movwf	4
  2832  0035  3027               	movlw	high (0+10097)
  2833  0036  0085               	movwf	5
  2834  0037  307F               	movlw	127
  2835  0038  00FE               	movwf	btemp
  2836  0039  3000               	movlw	0
  2837  003A  00FF               	movwf	btemp+1
  2838  003B  3190  2001  3180   	fcall	clear_ram0
  2839                           
  2840                           ; Clear objects allocated to COMMON
  2841  003E  01FC               	clrf	__pbssCOMMON& (0+127)
  2842                           
  2843                           ; Clear objects allocated to BANK3
  2844  003F  30A0               	movlw	low __pbssBANK3
  2845  0040  0084               	movwf	4
  2846  0041  3001               	movlw	high __pbssBANK3
  2847  0042  0085               	movwf	5
  2848  0043  3034               	movlw	52
  2849  0044  00FE               	movwf	btemp
  2850  0045  3000               	movlw	0
  2851  0046  00FF               	movwf	btemp+1
  2852  0047  3190  2001  3180   	fcall	clear_ram0
  2853                           
  2854                           ; Clear objects allocated to BANK4
  2855  004A  3020               	movlw	low __pbssBANK4
  2856  004B  0084               	movwf	4
  2857  004C  3002               	movlw	high __pbssBANK4
  2858  004D  0085               	movwf	5
  2859  004E  3050               	movlw	80
  2860  004F  00FE               	movwf	btemp
  2861  0050  3000               	movlw	0
  2862  0051  00FF               	movwf	btemp+1
  2863  0052  3190  2001         	fcall	clear_ram0
  2864  0054                     end_of_initialization:	
  2865                           ;End of C runtime variable initialization code
  2866                           
  2867  0054                     __end_of__initialization:	
  2868  0054  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2869  0055  0020               	movlb	0
  2870  0056  31A9  2943         	ljmp	_main	;jump to C main() function
  2871                           
  2872                           	psect	bssCOMMON
  2873  007C                     __pbssCOMMON:	
  2874  007C                     _toggleColor:	
  2875  007C                     	ds	1
  2876                           
  2877                           	psect	bssBANK3
  2878  01A0                     __pbssBANK3:	
  2879  01A0                     _cellVoltages:	
  2880  01A0                     	ds	10
  2881  01AA                     floorf@F524:	
  2882  01AA                     	ds	4
  2883  01AE                     ___fpclassifyf@F463:	
  2884  01AE                     	ds	4
  2885  01B2                     BQ76920@shuntResistorValue_mOhm:	
  2886  01B2                     	ds	4
  2887  01B6                     _shuntResistorValue_mOhm:	
  2888  01B6                     	ds	4
  2889  01BA                     _errno:	
  2890  01BA                     	ds	2
  2891  01BC                     _nout:	
  2892  01BC                     	ds	2
  2893  01BE                     _width:	
  2894  01BE                     	ds	2
  2895  01C0                     _prec:	
  2896  01C0                     	ds	2
  2897  01C2                     _flags:	
  2898  01C2                     	ds	2
  2899  01C4                     _maxCellTempDischarge:	
  2900  01C4                     	ds	2
  2901  01C6                     _maxCellTempCharge:	
  2902  01C6                     	ds	2
  2903  01C8                     _minCellTempDischarge:	
  2904  01C8                     	ds	2
  2905  01CA                     _minCellTempCharge:	
  2906  01CA                     	ds	2
  2907  01CC                     _adcOffset:	
  2908  01CC                     	ds	2
  2909  01CE                     _adcGain:	
  2910  01CE                     	ds	2
  2911  01D0                     _protect1:	
  2912  01D0                     	ds	1
  2913  01D1                     myIsr@count:	
  2914  01D1                     	ds	1
  2915  01D2                     _tmr1_flag:	
  2916  01D2                     	ds	1
  2917  01D3                     _currState:	
  2918  01D3                     	ds	1
  2919                           
  2920                           	psect	dataBANK3
  2921  01D4                     __pdataBANK3:	
  2922  01D4                     stoa@F1174:	
  2923  01D4                     	ds	7
  2924                           
  2925                           	psect	bssBANK4
  2926  0220                     __pbssBANK4:	
  2927  0220                     _dbuf:	
  2928  0220                     	ds	80
  2929                           
  2930                           	psect	clrtext
  2931  1001                     clear_ram0:	
  2932                           ;	Called with FSR0 containing the base address, and
  2933                           ;	btemp/btemp+1 has the size to clear
  2934                           
  2935  1001  0064               	clrwdt	;clear the watchdog before getting into this loop
  2936  1002                     clrloop0:	
  2937  1002  0180               	clrf	0	;clear RAM location pointed to by FSR
  2938  1003  3101               	addfsr 0,1
  2939  1004  3001               	movlw	1
  2940  1005  02FE               	subwf	126,f
  2941  1006  3000               	movlw	0
  2942  1007  3BFF               	subwfb	127,f
  2943  1008  087F               	movf	127,w
  2944  1009  047E               	iorwf	126,w
  2945  100A  1903               	btfsc	3,2
  2946  100B  3400               	retlw	0	;all done for this memory range, return
  2947  100C  2802               	goto	clrloop0	;have we reached the end yet?
  2948                           
  2949                           	psect	cstackBANK3
  2950  01DB                     __pcstackBANK3:	
  2951  01DB                     ??_main:	
  2952                           
  2953                           ; 1 bytes @ 0x0
  2954  01DB                     	ds	1
  2955                           
  2956                           	psect	cstackBANK2
  2957  0120                     __pcstackBANK2:	
  2958  0120                     ??_vfpfcnvrt:	
  2959                           
  2960                           ; 1 bytes @ 0x0
  2961  0120                     	ds	12
  2962  012C                     vfpfcnvrt@cp:	
  2963                           
  2964                           ; 1 bytes @ 0xC
  2965  012C                     	ds	1
  2966  012D                     vfpfcnvrt@done:	
  2967                           
  2968                           ; 2 bytes @ 0xD
  2969  012D                     	ds	2
  2970  012F                     _vfpfcnvrt$1018:	
  2971                           
  2972                           ; 2 bytes @ 0xF
  2973  012F                     	ds	2
  2974  0131                     _vfpfcnvrt$1019:	
  2975                           
  2976                           ; 2 bytes @ 0x11
  2977  0131                     	ds	2
  2978  0133                     _vfpfcnvrt$1045:	
  2979                           
  2980                           ; 2 bytes @ 0x13
  2981  0133                     	ds	2
  2982  0135                     vfpfcnvrt@ct:	
  2983                           
  2984                           ; 3 bytes @ 0x15
  2985  0135                     	ds	3
  2986  0138                     vfpfcnvrt@f:	
  2987                           
  2988                           ; 4 bytes @ 0x18
  2989  0138                     	ds	4
  2990  013C                     vfpfcnvrt@ll:	
  2991                           
  2992                           ; 8 bytes @ 0x1C
  2993  013C                     	ds	8
  2994  0144                     vfpfcnvrt@vp:	
  2995                           
  2996                           ; 1 bytes @ 0x24
  2997  0144                     	ds	1
  2998  0145                     vfpfcnvrt@c:	
  2999                           
  3000                           ; 1 bytes @ 0x25
  3001  0145                     	ds	1
  3002  0146                     vfpfcnvrt@llu:	
  3003                           
  3004                           ; 8 bytes @ 0x26
  3005  0146                     	ds	8
  3006  014E                     ?_vsnprintf:	
  3007  014E                     vsnprintf@s:	
  3008                           ; 2 bytes @ 0x2E
  3009                           
  3010                           
  3011                           ; 2 bytes @ 0x2E
  3012  014E                     	ds	2
  3013  0150                     vsnprintf@n:	
  3014                           
  3015                           ; 2 bytes @ 0x30
  3016  0150                     	ds	2
  3017  0152                     vsnprintf@fmt:	
  3018                           
  3019                           ; 2 bytes @ 0x32
  3020  0152                     	ds	2
  3021  0154                     vsnprintf@ap:	
  3022                           
  3023                           ; 1 bytes @ 0x34
  3024  0154                     	ds	1
  3025  0155                     _vsnprintf$1647:	
  3026                           
  3027                           ; 2 bytes @ 0x35
  3028  0155                     	ds	2
  3029  0157                     vsnprintf@cnt:	
  3030                           
  3031                           ; 2 bytes @ 0x37
  3032  0157                     	ds	2
  3033  0159                     vsnprintf@f:	
  3034                           
  3035                           ; 6 bytes @ 0x39
  3036  0159                     	ds	6
  3037  015F                     ?_snprintf:	
  3038  015F                     snprintf@s:	
  3039                           ; 2 bytes @ 0x3F
  3040                           
  3041                           
  3042                           ; 2 bytes @ 0x3F
  3043  015F                     	ds	2
  3044  0161                     snprintf@n:	
  3045                           
  3046                           ; 2 bytes @ 0x41
  3047  0161                     	ds	2
  3048  0163                     snprintf@fmt:	
  3049                           
  3050                           ; 2 bytes @ 0x43
  3051  0163                     	ds	6
  3052  0169                     ??_snprintf:	
  3053                           
  3054                           ; 1 bytes @ 0x49
  3055  0169                     	ds	3
  3056  016C                     snprintf@ap:	
  3057                           
  3058                           ; 1 bytes @ 0x4C
  3059  016C                     	ds	1
  3060  016D                     ??_statemachine:	
  3061                           
  3062                           ; 1 bytes @ 0x4D
  3063  016D                     	ds	2
  3064  016F                     statemachine@success:	
  3065                           
  3066                           ; 1 bytes @ 0x4F
  3067  016F                     	ds	1
  3068                           
  3069                           	psect	cstackBANK1
  3070  00A0                     __pcstackBANK1:	
  3071  00A0                     ?_efgtoa:	
  3072  00A0                     setShortCircuitProtection@temp:	
  3073                           ; 2 bytes @ 0x0
  3074                           
  3075  00A0                     efgtoa@fp:	
  3076                           ; 2 bytes @ 0x0
  3077                           
  3078                           
  3079                           ; 2 bytes @ 0x0
  3080  00A0                     	ds	2
  3081  00A2                     setShortCircuitProtection@scaler:	
  3082  00A2                     efgtoa@f:	
  3083                           ; 4 bytes @ 0x2
  3084                           
  3085                           
  3086                           ; 4 bytes @ 0x2
  3087  00A2                     	ds	4
  3088  00A6                     efgtoa@c:	
  3089  00A6                     _setShortCircuitProtection$1844:	
  3090                           ; 1 bytes @ 0x6
  3091                           
  3092                           
  3093                           ; 4 bytes @ 0x6
  3094  00A6                     	ds	1
  3095  00A7                     ??_efgtoa:	
  3096                           
  3097                           ; 1 bytes @ 0x7
  3098  00A7                     	ds	3
  3099  00AA                     setShortCircuitProtection@value:	
  3100                           
  3101                           ; 2 bytes @ 0xA
  3102  00AA                     	ds	1
  3103  00AB                     efgtoa@ou:	
  3104                           
  3105                           ; 4 bytes @ 0xB
  3106  00AB                     	ds	1
  3107  00AC                     setShortCircuitProtection@i:	
  3108                           
  3109                           ; 2 bytes @ 0xC
  3110  00AC                     	ds	2
  3111  00AE                     setShortCircuitProtection@i_792:	
  3112                           
  3113                           ; 2 bytes @ 0xE
  3114  00AE                     	ds	1
  3115  00AF                     _efgtoa$956:	
  3116                           
  3117                           ; 2 bytes @ 0xF
  3118  00AF                     	ds	2
  3119  00B1                     _efgtoa$957:	
  3120                           
  3121                           ; 2 bytes @ 0x11
  3122  00B1                     	ds	2
  3123  00B3                     _efgtoa$961:	
  3124                           
  3125                           ; 2 bytes @ 0x13
  3126  00B3                     	ds	2
  3127  00B5                     _efgtoa$965:	
  3128                           
  3129                           ; 2 bytes @ 0x15
  3130  00B5                     	ds	2
  3131  00B7                     _efgtoa$966:	
  3132                           
  3133                           ; 2 bytes @ 0x17
  3134  00B7                     	ds	2
  3135  00B9                     _efgtoa$967:	
  3136                           
  3137                           ; 2 bytes @ 0x19
  3138  00B9                     	ds	2
  3139  00BB                     efgtoa@t:	
  3140                           
  3141                           ; 2 bytes @ 0x1B
  3142  00BB                     	ds	2
  3143  00BD                     efgtoa@pp:	
  3144                           
  3145                           ; 2 bytes @ 0x1D
  3146  00BD                     	ds	2
  3147  00BF                     efgtoa@m:	
  3148                           
  3149                           ; 2 bytes @ 0x1F
  3150  00BF                     	ds	2
  3151  00C1                     efgtoa@ne:	
  3152                           
  3153                           ; 2 bytes @ 0x21
  3154  00C1                     	ds	2
  3155  00C3                     efgtoa@d:	
  3156                           
  3157                           ; 2 bytes @ 0x23
  3158  00C3                     	ds	2
  3159  00C5                     efgtoa@sign:	
  3160                           
  3161                           ; 2 bytes @ 0x25
  3162  00C5                     	ds	2
  3163  00C7                     efgtoa@p:	
  3164                           
  3165                           ; 2 bytes @ 0x27
  3166  00C7                     	ds	2
  3167  00C9                     efgtoa@nmode:	
  3168                           
  3169                           ; 1 bytes @ 0x29
  3170  00C9                     	ds	1
  3171  00CA                     efgtoa@w:	
  3172                           
  3173                           ; 2 bytes @ 0x2A
  3174  00CA                     	ds	2
  3175  00CC                     efgtoa@mode:	
  3176                           
  3177                           ; 1 bytes @ 0x2C
  3178  00CC                     	ds	1
  3179  00CD                     efgtoa@h:	
  3180                           
  3181                           ; 4 bytes @ 0x2D
  3182  00CD                     	ds	4
  3183  00D1                     efgtoa@l:	
  3184                           
  3185                           ; 4 bytes @ 0x31
  3186  00D1                     	ds	4
  3187  00D5                     efgtoa@i:	
  3188                           
  3189                           ; 2 bytes @ 0x35
  3190  00D5                     	ds	2
  3191  00D7                     efgtoa@g:	
  3192                           
  3193                           ; 4 bytes @ 0x37
  3194  00D7                     	ds	4
  3195  00DB                     efgtoa@e:	
  3196                           
  3197                           ; 2 bytes @ 0x3B
  3198  00DB                     	ds	2
  3199  00DD                     efgtoa@n:	
  3200                           
  3201                           ; 2 bytes @ 0x3D
  3202  00DD                     	ds	2
  3203  00DF                     efgtoa@u:	
  3204                           
  3205                           ; 4 bytes @ 0x3F
  3206  00DF                     	ds	4
  3207  00E3                     ?_vfpfcnvrt:	
  3208  00E3                     vfpfcnvrt@fp:	
  3209                           ; 2 bytes @ 0x43
  3210                           
  3211                           
  3212                           ; 2 bytes @ 0x43
  3213  00E3                     	ds	2
  3214  00E5                     vfpfcnvrt@fmt:	
  3215                           
  3216                           ; 1 bytes @ 0x45
  3217  00E5                     	ds	1
  3218  00E6                     vfpfcnvrt@ap:	
  3219                           
  3220                           ; 1 bytes @ 0x46
  3221  00E6                     	ds	1
  3222  00E7                     ?_vfprintf:	
  3223  00E7                     vfprintf@fp:	
  3224                           ; 2 bytes @ 0x47
  3225                           
  3226                           
  3227                           ; 2 bytes @ 0x47
  3228  00E7                     	ds	2
  3229  00E9                     vfprintf@fmt:	
  3230                           
  3231                           ; 2 bytes @ 0x49
  3232  00E9                     	ds	2
  3233  00EB                     vfprintf@ap:	
  3234                           
  3235                           ; 1 bytes @ 0x4B
  3236  00EB                     	ds	1
  3237  00EC                     vfprintf@cfmt:	
  3238                           
  3239                           ; 2 bytes @ 0x4C
  3240  00EC                     	ds	2
  3241  00EE                     ??_vsnprintf:	
  3242                           
  3243                           ; 1 bytes @ 0x4E
  3244  00EE                     	ds	2
  3245                           
  3246                           	psect	cstackCOMMON
  3247  0070                     __pcstackCOMMON:	
  3248  0070                     ?_initClock:	
  3249  0070                     ?_init_GPIO:	
  3250                           ; 1 bytes @ 0x0
  3251                           
  3252  0070                     ?_init_I2C:	
  3253                           ; 1 bytes @ 0x0
  3254                           
  3255  0070                     ?_init_TMR1:	
  3256                           ; 1 bytes @ 0x0
  3257                           
  3258  0070                     ?_init_RGB:	
  3259                           ; 1 bytes @ 0x0
  3260                           
  3261  0070                     ?_statemachine:	
  3262                           ; 1 bytes @ 0x0
  3263                           
  3264  0070                     ?_RGB_AWAIT_AFE_CONN:	
  3265                           ; 1 bytes @ 0x0
  3266                           
  3267  0070                     ?_init_AFE:	
  3268                           ; 1 bytes @ 0x0
  3269                           
  3270  0070                     ?_internal_16:	
  3271                           ; 1 bytes @ 0x0
  3272                           
  3273  0070                     ?_putch:	
  3274                           ; 1 bytes @ 0x0
  3275                           
  3276  0070                     ?_myIsr:	
  3277                           ; 1 bytes @ 0x0
  3278                           
  3279  0070                     ??_myIsr:	
  3280                           ; 1 bytes @ 0x0
  3281                           
  3282  0070                     ?_main:	
  3283                           ; 1 bytes @ 0x0
  3284                           
  3285  0070                     ?_EUSART_Write:	
  3286                           ; 1 bytes @ 0x0
  3287                           
  3288  0070                     ?_send_I2C_startBit:	
  3289                           ; 1 bytes @ 0x0
  3290                           
  3291  0070                     ?_send_I2C_stopBit:	
  3292                           ; 1 bytes @ 0x0
  3293                           
  3294  0070                     ?_send_I2C_NACK:	
  3295                           ; 1 bytes @ 0x0
  3296                           
  3297  0070                     putch@c:	
  3298                           ; 1 bytes @ 0x0
  3299                           
  3300                           
  3301                           ; 1 bytes @ 0x0
  3302  0070                     	ds	1
  3303  0071                     ?___fleq:	
  3304  0071                     ??_initClock:	
  3305                           ; 1 bit 
  3306                           
  3307  0071                     ??_init_GPIO:	
  3308                           ; 1 bytes @ 0x1
  3309                           
  3310  0071                     ??_init_I2C:	
  3311                           ; 1 bytes @ 0x1
  3312                           
  3313  0071                     ??_init_TMR1:	
  3314                           ; 1 bytes @ 0x1
  3315                           
  3316  0071                     ??_init_RGB:	
  3317                           ; 1 bytes @ 0x1
  3318                           
  3319  0071                     ?_RGB_color:	
  3320                           ; 1 bytes @ 0x1
  3321                           
  3322  0071                     ??_internal_16:	
  3323                           ; 1 bytes @ 0x1
  3324                           
  3325  0071                     ?_setShuntResistorValue:	
  3326                           ; 1 bytes @ 0x1
  3327                           
  3328  0071                     ?_strcpy:	
  3329                           ; 1 bytes @ 0x1
  3330                           
  3331  0071                     ??_putch:	
  3332                           ; 1 bytes @ 0x1
  3333                           
  3334  0071                     ??_EUSART_Write:	
  3335                           ; 1 bytes @ 0x1
  3336                           
  3337  0071                     ?_send_I2C_data:	
  3338                           ; 1 bytes @ 0x1
  3339                           
  3340  0071                     ?_send_I2C_controlByte:	
  3341                           ; 1 bytes @ 0x1
  3342                           
  3343  0071                     ??_send_I2C_startBit:	
  3344                           ; 1 bytes @ 0x1
  3345                           
  3346  0071                     ??_send_I2C_stopBit:	
  3347                           ; 1 bytes @ 0x1
  3348                           
  3349  0071                     ??_send_I2C_NACK:	
  3350                           ; 1 bytes @ 0x1
  3351                           
  3352  0071                     ??___aodiv:	
  3353                           ; 1 bytes @ 0x1
  3354                           
  3355  0071                     ??___aomod:	
  3356                           ; 1 bytes @ 0x1
  3357                           
  3358  0071                     ??___lodiv:	
  3359                           ; 1 bytes @ 0x1
  3360                           
  3361  0071                     ??___lomod:	
  3362                           ; 1 bytes @ 0x1
  3363                           
  3364  0071                     ?_fputc:	
  3365                           ; 1 bytes @ 0x1
  3366                           
  3367  0071                     ?_strlen:	
  3368                           ; 2 bytes @ 0x1
  3369                           
  3370  0071                     ?___fpclassifyf:	
  3371                           ; 2 bytes @ 0x1
  3372                           
  3373  0071                     ?_isupper:	
  3374                           ; 2 bytes @ 0x1
  3375                           
  3376  0071                     ?_isalpha:	
  3377                           ; 2 bytes @ 0x1
  3378                           
  3379  0071                     ?_isdigit:	
  3380                           ; 2 bytes @ 0x1
  3381                           
  3382  0071                     ?_strncmp:	
  3383                           ; 2 bytes @ 0x1
  3384                           
  3385  0071                     ?__Umul8_16:	
  3386                           ; 2 bytes @ 0x1
  3387                           
  3388  0071                     ?_isspace:	
  3389                           ; 2 bytes @ 0x1
  3390                           
  3391  0071                     ?_islower:	
  3392                           ; 2 bytes @ 0x1
  3393                           
  3394  0071                     ?_read_I2C_data:	
  3395                           ; 2 bytes @ 0x1
  3396                           
  3397  0071                     ?___wmul:	
  3398                           ; 2 bytes @ 0x1
  3399                           
  3400  0071                     ?___awdiv:	
  3401                           ; 2 bytes @ 0x1
  3402                           
  3403  0071                     ?___awmod:	
  3404                           ; 2 bytes @ 0x1
  3405                           
  3406  0071                     ?_AFE_getSetCurrentSenseRes:	
  3407                           ; 2 bytes @ 0x1
  3408                           
  3409  0071                     ?_AFE_getSetShortCircuitCurrent:	
  3410                           ; 4 bytes @ 0x1
  3411                           
  3412  0071                     ?___aldiv:	
  3413                           ; 4 bytes @ 0x1
  3414                           
  3415  0071                     ?___flneg:	
  3416                           ; 4 bytes @ 0x1
  3417                           
  3418  0071                     ?___fladd:	
  3419                           ; 4 bytes @ 0x1
  3420                           
  3421  0071                     ?___xxtofl:	
  3422                           ; 4 bytes @ 0x1
  3423                           
  3424  0071                     EUSART_Write@txData:	
  3425                           ; 4 bytes @ 0x1
  3426                           
  3427  0071                     __Umul8_16@multiplicand:	
  3428                           ; 1 bytes @ 0x1
  3429                           
  3430  0071                     send_I2C_data@databyte:	
  3431                           ; 1 bytes @ 0x1
  3432                           
  3433  0071                     send_I2C_controlByte@BlockAddress:	
  3434                           ; 2 bytes @ 0x1
  3435                           
  3436  0071                     RGB_color@color:	
  3437                           ; 2 bytes @ 0x1
  3438                           
  3439  0071                     ___wmul@multiplier:	
  3440                           ; 2 bytes @ 0x1
  3441                           
  3442  0071                     ___awdiv@divisor:	
  3443                           ; 2 bytes @ 0x1
  3444                           
  3445  0071                     ___awmod@divisor:	
  3446                           ; 2 bytes @ 0x1
  3447                           
  3448  0071                     isalpha@c:	
  3449                           ; 2 bytes @ 0x1
  3450                           
  3451  0071                     isdigit@c:	
  3452                           ; 2 bytes @ 0x1
  3453                           
  3454  0071                     isspace@c:	
  3455                           ; 2 bytes @ 0x1
  3456                           
  3457  0071                     isupper@c:	
  3458                           ; 2 bytes @ 0x1
  3459                           
  3460  0071                     fputc@c:	
  3461                           ; 2 bytes @ 0x1
  3462                           
  3463  0071                     strcpy@src:	
  3464                           ; 2 bytes @ 0x1
  3465                           
  3466  0071                     strlen@s:	
  3467                           ; 2 bytes @ 0x1
  3468                           
  3469  0071                     strncmp@_l:	
  3470                           ; 2 bytes @ 0x1
  3471                           
  3472  0071                     islower@c:	
  3473                           ; 2 bytes @ 0x1
  3474                           
  3475  0071                     setShuntResistorValue@res_mOhm:	
  3476                           ; 2 bytes @ 0x1
  3477                           
  3478  0071                     ___aldiv@divisor:	
  3479                           ; 4 bytes @ 0x1
  3480                           
  3481  0071                     ___fleq@ff1:	
  3482                           ; 4 bytes @ 0x1
  3483                           
  3484  0071                     ___flneg@f1:	
  3485                           ; 4 bytes @ 0x1
  3486                           
  3487  0071                     ___fladd@b:	
  3488                           ; 4 bytes @ 0x1
  3489                           
  3490  0071                     ___xxtofl@val:	
  3491                           ; 4 bytes @ 0x1
  3492                           
  3493  0071                     ___fpclassifyf@x:	
  3494                           ; 4 bytes @ 0x1
  3495                           
  3496                           
  3497                           ; 4 bytes @ 0x1
  3498  0071                     	ds	1
  3499  0072                     ?_EUSART_Write_Text:	
  3500  0072                     ___aodiv@counter:	
  3501                           ; 1 bytes @ 0x2
  3502                           
  3503  0072                     ___aomod@counter:	
  3504                           ; 1 bytes @ 0x2
  3505                           
  3506  0072                     ___lomod@counter:	
  3507                           ; 1 bytes @ 0x2
  3508                           
  3509  0072                     EUSART_Write_Text@text:	
  3510                           ; 1 bytes @ 0x2
  3511                           
  3512  0072                     ___lodiv@quotient:	
  3513                           ; 2 bytes @ 0x2
  3514                           
  3515                           
  3516                           ; 8 bytes @ 0x2
  3517  0072                     	ds	1
  3518  0073                     ??_RGB_AWAIT_AFE_CONN:	
  3519  0073                     ??_RGB_color:	
  3520                           ; 1 bytes @ 0x3
  3521                           
  3522  0073                     ??_strlen:	
  3523                           ; 1 bytes @ 0x3
  3524                           
  3525  0073                     ??_isupper:	
  3526                           ; 1 bytes @ 0x3
  3527                           
  3528  0073                     ??_strcpy:	
  3529                           ; 1 bytes @ 0x3
  3530                           
  3531  0073                     ??_isalpha:	
  3532                           ; 1 bytes @ 0x3
  3533                           
  3534  0073                     ??_isdigit:	
  3535                           ; 1 bytes @ 0x3
  3536                           
  3537  0073                     ??__Umul8_16:	
  3538                           ; 1 bytes @ 0x3
  3539                           
  3540  0073                     ??_isspace:	
  3541                           ; 1 bytes @ 0x3
  3542                           
  3543  0073                     ??_islower:	
  3544                           ; 1 bytes @ 0x3
  3545                           
  3546  0073                     ??_send_I2C_data:	
  3547                           ; 1 bytes @ 0x3
  3548                           
  3549  0073                     ??_read_I2C_data:	
  3550                           ; 1 bytes @ 0x3
  3551                           
  3552  0073                     ___aodiv@sign:	
  3553                           ; 1 bytes @ 0x3
  3554                           
  3555  0073                     ___aomod@sign:	
  3556                           ; 1 bytes @ 0x3
  3557                           
  3558  0073                     send_I2C_controlByte@RW_bit:	
  3559                           ; 1 bytes @ 0x3
  3560                           
  3561  0073                     ___wmul@multiplicand:	
  3562                           ; 2 bytes @ 0x3
  3563                           
  3564  0073                     ___awdiv@dividend:	
  3565                           ; 2 bytes @ 0x3
  3566                           
  3567  0073                     ___awmod@dividend:	
  3568                           ; 2 bytes @ 0x3
  3569                           
  3570  0073                     fputc@fp:	
  3571                           ; 2 bytes @ 0x3
  3572                           
  3573  0073                     strlen@a:	
  3574                           ; 2 bytes @ 0x3
  3575                           
  3576  0073                     strncmp@_r:	
  3577                           ; 2 bytes @ 0x3
  3578                           
  3579                           
  3580                           ; 2 bytes @ 0x3
  3581  0073                     	ds	1
  3582  0074                     ??_EUSART_Write_Text:	
  3583  0074                     ?_abs:	
  3584                           ; 1 bytes @ 0x4
  3585                           
  3586  0074                     abs@a:	
  3587                           ; 2 bytes @ 0x4
  3588                           
  3589  0074                     ___aodiv@quotient:	
  3590                           ; 2 bytes @ 0x4
  3591                           
  3592                           
  3593                           ; 8 bytes @ 0x4
  3594  0074                     	ds	1
  3595  0075                     ??_AFE_getSetCurrentSenseRes:	
  3596  0075                     ??_AFE_getSetShortCircuitCurrent:	
  3597                           ; 1 bytes @ 0x5
  3598                           
  3599  0075                     ??_setShuntResistorValue:	
  3600                           ; 1 bytes @ 0x5
  3601                           
  3602  0075                     ??_fputc:	
  3603                           ; 1 bytes @ 0x5
  3604                           
  3605  0075                     ??___fpclassifyf:	
  3606                           ; 1 bytes @ 0x5
  3607                           
  3608  0075                     ??_send_I2C_controlByte:	
  3609                           ; 1 bytes @ 0x5
  3610                           
  3611  0075                     ?_I2C_writeRegister:	
  3612                           ; 1 bytes @ 0x5
  3613                           
  3614  0075                     ??___wmul:	
  3615                           ; 1 bytes @ 0x5
  3616                           
  3617  0075                     ??___awdiv:	
  3618                           ; 1 bytes @ 0x5
  3619                           
  3620  0075                     ??___awmod:	
  3621                           ; 1 bytes @ 0x5
  3622                           
  3623  0075                     ??___flneg:	
  3624                           ; 1 bytes @ 0x5
  3625                           
  3626  0075                     ??___xxtofl:	
  3627                           ; 1 bytes @ 0x5
  3628                           
  3629  0075                     ?_readRegister:	
  3630                           ; 1 bytes @ 0x5
  3631                           
  3632  0075                     _isspace$1512:	
  3633                           ; 2 bytes @ 0x5
  3634                           
  3635  0075                     EUSART_Write_Text@i:	
  3636                           ; 1 bytes @ 0x5
  3637                           
  3638  0075                     I2C_writeRegister@slaveAddress:	
  3639                           ; 2 bytes @ 0x5
  3640                           
  3641  0075                     readRegister@slaveAddress:	
  3642                           ; 2 bytes @ 0x5
  3643                           
  3644  0075                     ___wmul@product:	
  3645                           ; 2 bytes @ 0x5
  3646                           
  3647  0075                     strcpy@s:	
  3648                           ; 2 bytes @ 0x5
  3649                           
  3650  0075                     strncmp@n:	
  3651                           ; 2 bytes @ 0x5
  3652                           
  3653  0075                     __Umul8_16@product:	
  3654                           ; 2 bytes @ 0x5
  3655                           
  3656  0075                     ___aldiv@dividend:	
  3657                           ; 2 bytes @ 0x5
  3658                           
  3659  0075                     ___fleq@ff2:	
  3660                           ; 4 bytes @ 0x5
  3661                           
  3662  0075                     ___fladd@a:	
  3663                           ; 4 bytes @ 0x5
  3664                           
  3665                           
  3666                           ; 4 bytes @ 0x5
  3667  0075                     	ds	1
  3668  0076                     ??_abs:	
  3669  0076                     ___awdiv@counter:	
  3670                           ; 1 bytes @ 0x6
  3671                           
  3672  0076                     ___awmod@counter:	
  3673                           ; 1 bytes @ 0x6
  3674                           
  3675                           
  3676                           ; 1 bytes @ 0x6
  3677  0076                     	ds	1
  3678  0077                     ??_setTemperatureLimitsint:	
  3679  0077                     ??_strncmp:	
  3680                           ; 1 bytes @ 0x7
  3681                           
  3682  0077                     ?_tolower:	
  3683                           ; 1 bytes @ 0x7
  3684                           
  3685  0077                     ?_toupper:	
  3686                           ; 2 bytes @ 0x7
  3687                           
  3688  0077                     ?_atoi:	
  3689                           ; 2 bytes @ 0x7
  3690                           
  3691  0077                     ___awdiv@sign:	
  3692                           ; 2 bytes @ 0x7
  3693                           
  3694  0077                     ___awmod@sign:	
  3695                           ; 1 bytes @ 0x7
  3696                           
  3697  0077                     strcpy@d:	
  3698                           ; 1 bytes @ 0x7
  3699                           
  3700  0077                     I2C_writeRegister@regAddress:	
  3701                           ; 1 bytes @ 0x7
  3702                           
  3703  0077                     readRegister@regAddress:	
  3704                           ; 2 bytes @ 0x7
  3705                           
  3706  0077                     atoi@s:	
  3707                           ; 2 bytes @ 0x7
  3708                           
  3709  0077                     tolower@c:	
  3710                           ; 2 bytes @ 0x7
  3711                           
  3712  0077                     toupper@c:	
  3713                           ; 2 bytes @ 0x7
  3714                           
  3715  0077                     __Umul8_16@word_mpld:	
  3716                           ; 2 bytes @ 0x7
  3717                           
  3718                           
  3719                           ; 2 bytes @ 0x7
  3720  0077                     	ds	1
  3721  0078                     strcpy@dest:	
  3722  0078                     ___awdiv@quotient:	
  3723                           ; 1 bytes @ 0x8
  3724                           
  3725  0078                     strncmp@l:	
  3726                           ; 2 bytes @ 0x8
  3727                           
  3728                           
  3729                           ; 2 bytes @ 0x8
  3730  0078                     	ds	1
  3731  0079                     ??_readRegister:	
  3732  0079                     ??___aldiv:	
  3733                           ; 1 bytes @ 0x9
  3734                           
  3735  0079                     __Umul8_16@multiplier:	
  3736                           ; 1 bytes @ 0x9
  3737                           
  3738  0079                     I2C_writeRegister@data:	
  3739                           ; 1 bytes @ 0x9
  3740                           
  3741  0079                     readRegister@recievedData:	
  3742                           ; 2 bytes @ 0x9
  3743                           
  3744  0079                     _tolower$1595:	
  3745                           ; 2 bytes @ 0x9
  3746                           
  3747  0079                     _toupper$1610:	
  3748                           ; 2 bytes @ 0x9
  3749                           
  3750                           
  3751                           ; 2 bytes @ 0x9
  3752  0079                     	ds	1
  3753  007A                     ??_stoa:	
  3754  007A                     ??___flsub:	
  3755                           ; 1 bytes @ 0xA
  3756                           
  3757  007A                     ?_fputs:	
  3758                           ; 1 bytes @ 0xA
  3759                           
  3760  007A                     ___fltol@sign1:	
  3761                           ; 2 bytes @ 0xA
  3762                           
  3763  007A                     ___lodiv@counter:	
  3764                           ; 1 bytes @ 0xA
  3765                           
  3766  007A                     EUSART_Initialize@x:	
  3767                           ; 1 bytes @ 0xA
  3768                           
  3769  007A                     fputs@fp:	
  3770                           ; 2 bytes @ 0xA
  3771                           
  3772  007A                     strncmp@r:	
  3773                           ; 2 bytes @ 0xA
  3774                           
  3775                           
  3776                           ; 2 bytes @ 0xA
  3777  007A                     	ds	1
  3778  007B                     ??_I2C_writeRegister:	
  3779  007B                     ___fltol@exp1:	
  3780                           ; 1 bytes @ 0xB
  3781                           
  3782                           
  3783                           ; 1 bytes @ 0xB
  3784  007B                     	ds	1
  3785  007C                     ??_init_AFE:	
  3786                           
  3787                           	psect	cstackBANK0
  3788  0020                     __pcstackBANK0:	
  3789                           ; 1 bytes @ 0xC
  3790                           
  3791  0020                     ?_setTemperatureLimitsint:	
  3792  0020                     ??_fputs:	
  3793                           ; 1 bytes @ 0x0
  3794                           
  3795  0020                     ??_tolower:	
  3796                           ; 1 bytes @ 0x0
  3797                           
  3798  0020                     ??_toupper:	
  3799                           ; 1 bytes @ 0x0
  3800                           
  3801  0020                     ??_atoi:	
  3802                           ; 1 bytes @ 0x0
  3803                           
  3804  0020                     ??___fleq:	
  3805                           ; 1 bytes @ 0x0
  3806                           
  3807  0020                     ??___fladd:	
  3808                           ; 1 bytes @ 0x0
  3809                           
  3810  0020                     ?_beginAFEcommunication:	
  3811                           ; 1 bytes @ 0x0
  3812                           
  3813  0020                     ?_stoa:	
  3814                           ; 2 bytes @ 0x0
  3815                           
  3816  0020                     ?___aodiv:	
  3817                           ; 2 bytes @ 0x0
  3818                           
  3819  0020                     ?___aomod:	
  3820                           ; 8 bytes @ 0x0
  3821                           
  3822  0020                     ?___lodiv:	
  3823                           ; 8 bytes @ 0x0
  3824                           
  3825  0020                     ?___lomod:	
  3826                           ; 8 bytes @ 0x0
  3827                           
  3828  0020                     ___aldiv@counter:	
  3829                           ; 8 bytes @ 0x0
  3830                           
  3831  0020                     ___xxtofl@sign:	
  3832                           ; 1 bytes @ 0x0
  3833                           
  3834  0020                     setTemperatureLimitsint@minDischarge_degC:	
  3835                           ; 1 bytes @ 0x0
  3836                           
  3837  0020                     stoa@fp:	
  3838                           ; 2 bytes @ 0x0
  3839                           
  3840  0020                     ___fpclassifyf@e:	
  3841                           ; 2 bytes @ 0x0
  3842                           
  3843  0020                     ___aodiv@divisor:	
  3844                           ; 2 bytes @ 0x0
  3845                           
  3846  0020                     ___aomod@divisor:	
  3847                           ; 8 bytes @ 0x0
  3848                           
  3849  0020                     ___lodiv@divisor:	
  3850                           ; 8 bytes @ 0x0
  3851                           
  3852  0020                     ___lomod@divisor:	
  3853                           ; 8 bytes @ 0x0
  3854                           
  3855                           
  3856                           ; 8 bytes @ 0x0
  3857  0020                     	ds	1
  3858  0021                     ___aldiv@sign:	
  3859  0021                     ___xxtofl@exp:	
  3860                           ; 1 bytes @ 0x1
  3861                           
  3862                           
  3863                           ; 1 bytes @ 0x1
  3864  0021                     	ds	1
  3865  0022                     ??_beginAFEcommunication:	
  3866  0022                     stoa@s:	
  3867                           ; 1 bytes @ 0x2
  3868                           
  3869  0022                     fputs@c:	
  3870                           ; 1 bytes @ 0x2
  3871                           
  3872  0022                     setTemperatureLimitsint@maxDischarge_degC:	
  3873                           ; 1 bytes @ 0x2
  3874                           
  3875  0022                     ___aldiv@quotient:	
  3876                           ; 2 bytes @ 0x2
  3877                           
  3878  0022                     ___xxtofl@arg:	
  3879                           ; 4 bytes @ 0x2
  3880                           
  3881  0022                     ___fpclassifyf@u:	
  3882                           ; 4 bytes @ 0x2
  3883                           
  3884                           
  3885                           ; 4 bytes @ 0x2
  3886  0022                     	ds	1
  3887  0023                     fputs@i:	
  3888  0023                     stoa@nuls:	
  3889                           ; 2 bytes @ 0x3
  3890                           
  3891                           
  3892                           ; 7 bytes @ 0x3
  3893  0023                     	ds	1
  3894  0024                     setTemperatureLimitsint@minCharge_degC:	
  3895  0024                     atoi@neg:	
  3896                           ; 2 bytes @ 0x4
  3897                           
  3898                           
  3899                           ; 2 bytes @ 0x4
  3900  0024                     	ds	1
  3901  0025                     fputs@s:	
  3902                           
  3903                           ; 1 bytes @ 0x5
  3904  0025                     	ds	1
  3905  0026                     ?_EUSART_Initialize:	
  3906  0026                     ?_pad:	
  3907                           ; 1 bytes @ 0x6
  3908                           
  3909  0026                     ?___flmul:	
  3910                           ; 2 bytes @ 0x6
  3911                           
  3912  0026                     setTemperatureLimitsint@maxCharge_degC:	
  3913                           ; 4 bytes @ 0x6
  3914                           
  3915  0026                     pad@fp:	
  3916                           ; 2 bytes @ 0x6
  3917                           
  3918  0026                     _atoi$1472:	
  3919                           ; 2 bytes @ 0x6
  3920                           
  3921  0026                     EUSART_Initialize@baudrate:	
  3922                           ; 2 bytes @ 0x6
  3923                           
  3924  0026                     ___flmul@b:	
  3925                           ; 4 bytes @ 0x6
  3926                           
  3927                           
  3928                           ; 4 bytes @ 0x6
  3929  0026                     	ds	2
  3930  0028                     pad@buf:	
  3931  0028                     ___fladd@signs:	
  3932                           ; 1 bytes @ 0x8
  3933                           
  3934  0028                     _atoi$1474:	
  3935                           ; 1 bytes @ 0x8
  3936                           
  3937  0028                     ___aodiv@dividend:	
  3938                           ; 2 bytes @ 0x8
  3939                           
  3940  0028                     ___aomod@dividend:	
  3941                           ; 8 bytes @ 0x8
  3942                           
  3943  0028                     ___lodiv@dividend:	
  3944                           ; 8 bytes @ 0x8
  3945                           
  3946  0028                     ___lomod@dividend:	
  3947                           ; 8 bytes @ 0x8
  3948                           
  3949                           
  3950                           ; 8 bytes @ 0x8
  3951  0028                     	ds	1
  3952  0029                     ___fladd@aexp:	
  3953  0029                     pad@p:	
  3954                           ; 1 bytes @ 0x9
  3955                           
  3956                           
  3957                           ; 2 bytes @ 0x9
  3958  0029                     	ds	1
  3959  002A                     ??_EUSART_Initialize:	
  3960  002A                     ___fladd@bexp:	
  3961                           ; 1 bytes @ 0xA
  3962                           
  3963  002A                     _atoi$1473:	
  3964                           ; 1 bytes @ 0xA
  3965                           
  3966  002A                     stoa@i:	
  3967                           ; 1 bytes @ 0xA
  3968                           
  3969  002A                     ___flmul@a:	
  3970                           ; 2 bytes @ 0xA
  3971                           
  3972                           
  3973                           ; 4 bytes @ 0xA
  3974  002A                     	ds	1
  3975  002B                     ??_pad:	
  3976  002B                     ___fladd@grs:	
  3977                           ; 1 bytes @ 0xB
  3978                           
  3979  002B                     beginAFEcommunication@commSuccess:	
  3980                           ; 1 bytes @ 0xB
  3981                           
  3982  002B                     atoi@n:	
  3983                           ; 2 bytes @ 0xB
  3984                           
  3985                           
  3986                           ; 2 bytes @ 0xB
  3987  002B                     	ds	1
  3988  002C                     pad@i:	
  3989  002C                     stoa@w:	
  3990                           ; 2 bytes @ 0xC
  3991                           
  3992                           
  3993                           ; 2 bytes @ 0xC
  3994  002C                     	ds	1
  3995  002D                     beginAFEcommunication@i:	
  3996                           
  3997                           ; 2 bytes @ 0xD
  3998  002D                     	ds	1
  3999  002E                     ??___flmul:	
  4000  002E                     pad@w:	
  4001                           ; 1 bytes @ 0xE
  4002                           
  4003  002E                     stoa@cp:	
  4004                           ; 2 bytes @ 0xE
  4005                           
  4006                           
  4007                           ; 2 bytes @ 0xE
  4008  002E                     	ds	2
  4009  0030                     ?_ctoa:	
  4010  0030                     ?_dtoa:	
  4011                           ; 2 bytes @ 0x10
  4012                           
  4013  0030                     ?_otoa:	
  4014                           ; 2 bytes @ 0x10
  4015                           
  4016  0030                     ?_utoa:	
  4017                           ; 2 bytes @ 0x10
  4018                           
  4019  0030                     ?_xtoa:	
  4020                           ; 2 bytes @ 0x10
  4021                           
  4022  0030                     ctoa@fp:	
  4023                           ; 2 bytes @ 0x10
  4024                           
  4025  0030                     dtoa@fp:	
  4026                           ; 2 bytes @ 0x10
  4027                           
  4028  0030                     otoa@fp:	
  4029                           ; 2 bytes @ 0x10
  4030                           
  4031  0030                     stoa@p:	
  4032                           ; 2 bytes @ 0x10
  4033                           
  4034  0030                     utoa@fp:	
  4035                           ; 2 bytes @ 0x10
  4036                           
  4037  0030                     xtoa@fp:	
  4038                           ; 2 bytes @ 0x10
  4039                           
  4040                           
  4041                           ; 2 bytes @ 0x10
  4042  0030                     	ds	2
  4043  0032                     ctoa@c:	
  4044  0032                     stoa@l:	
  4045                           ; 1 bytes @ 0x12
  4046                           
  4047  0032                     dtoa@d:	
  4048                           ; 2 bytes @ 0x12
  4049                           
  4050  0032                     otoa@d:	
  4051                           ; 8 bytes @ 0x12
  4052                           
  4053  0032                     utoa@d:	
  4054                           ; 8 bytes @ 0x12
  4055                           
  4056  0032                     xtoa@d:	
  4057                           ; 8 bytes @ 0x12
  4058                           
  4059                           
  4060                           ; 8 bytes @ 0x12
  4061  0032                     	ds	1
  4062  0033                     ??_ctoa:	
  4063  0033                     ___flmul@sign:	
  4064                           ; 1 bytes @ 0x13
  4065                           
  4066                           
  4067                           ; 1 bytes @ 0x13
  4068  0033                     	ds	1
  4069  0034                     ctoa@w:	
  4070  0034                     ___flmul@grs:	
  4071                           ; 2 bytes @ 0x14
  4072                           
  4073                           
  4074                           ; 4 bytes @ 0x14
  4075  0034                     	ds	4
  4076  0038                     ___flmul@aexp:	
  4077                           
  4078                           ; 1 bytes @ 0x18
  4079  0038                     	ds	1
  4080  0039                     ___flmul@bexp:	
  4081                           
  4082                           ; 1 bytes @ 0x19
  4083  0039                     	ds	1
  4084  003A                     ??_dtoa:	
  4085  003A                     ??_otoa:	
  4086                           ; 1 bytes @ 0x1A
  4087                           
  4088  003A                     ??_utoa:	
  4089                           ; 1 bytes @ 0x1A
  4090                           
  4091  003A                     xtoa@x:	
  4092                           ; 1 bytes @ 0x1A
  4093                           
  4094  003A                     ___flmul@prod:	
  4095                           ; 1 bytes @ 0x1A
  4096                           
  4097                           
  4098                           ; 4 bytes @ 0x1A
  4099  003A                     	ds	1
  4100  003B                     ??_xtoa:	
  4101  003B                     utoa@p:	
  4102                           ; 1 bytes @ 0x1B
  4103                           
  4104                           
  4105                           ; 2 bytes @ 0x1B
  4106  003B                     	ds	2
  4107  003D                     _dtoa$933:	
  4108  003D                     utoa@w:	
  4109                           ; 2 bytes @ 0x1D
  4110                           
  4111                           
  4112                           ; 2 bytes @ 0x1D
  4113  003D                     	ds	1
  4114  003E                     ___flmul@temp:	
  4115                           
  4116                           ; 2 bytes @ 0x1E
  4117  003E                     	ds	1
  4118  003F                     dtoa@p:	
  4119  003F                     utoa@n:	
  4120                           ; 2 bytes @ 0x1F
  4121                           
  4122                           
  4123                           ; 8 bytes @ 0x1F
  4124  003F                     	ds	1
  4125  0040                     ?___flge:	
  4126  0040                     ?___flsub:	
  4127                           ; 1 bit 
  4128                           
  4129  0040                     ?___fldiv:	
  4130                           ; 4 bytes @ 0x20
  4131                           
  4132  0040                     ___flge@ff1:	
  4133                           ; 4 bytes @ 0x20
  4134                           
  4135  0040                     ___flsub@a:	
  4136                           ; 4 bytes @ 0x20
  4137                           
  4138  0040                     ___fldiv@a:	
  4139                           ; 4 bytes @ 0x20
  4140                           
  4141                           
  4142                           ; 4 bytes @ 0x20
  4143  0040                     	ds	1
  4144  0041                     dtoa@w:	
  4145                           
  4146                           ; 2 bytes @ 0x21
  4147  0041                     	ds	1
  4148  0042                     otoa@p:	
  4149                           
  4150                           ; 2 bytes @ 0x22
  4151  0042                     	ds	1
  4152  0043                     dtoa@s:	
  4153  0043                     _xtoa$1003:	
  4154                           ; 2 bytes @ 0x23
  4155                           
  4156                           
  4157                           ; 2 bytes @ 0x23
  4158  0043                     	ds	1
  4159  0044                     otoa@t:	
  4160  0044                     ___flge@ff2:	
  4161                           ; 2 bytes @ 0x24
  4162                           
  4163  0044                     ___flsub@b:	
  4164                           ; 4 bytes @ 0x24
  4165                           
  4166  0044                     ___fldiv@b:	
  4167                           ; 4 bytes @ 0x24
  4168                           
  4169                           
  4170                           ; 4 bytes @ 0x24
  4171  0044                     	ds	1
  4172  0045                     _xtoa$1004:	
  4173  0045                     dtoa@n:	
  4174                           ; 2 bytes @ 0x25
  4175                           
  4176                           
  4177                           ; 8 bytes @ 0x25
  4178  0045                     	ds	1
  4179  0046                     otoa@w:	
  4180                           
  4181                           ; 2 bytes @ 0x26
  4182  0046                     	ds	1
  4183  0047                     utoa@i:	
  4184  0047                     xtoa@p:	
  4185                           ; 2 bytes @ 0x27
  4186                           
  4187                           
  4188                           ; 2 bytes @ 0x27
  4189  0047                     	ds	1
  4190  0048                     ??___flge:	
  4191  0048                     ??___fldiv:	
  4192                           ; 1 bytes @ 0x28
  4193                           
  4194  0048                     otoa@n:	
  4195                           ; 1 bytes @ 0x28
  4196                           
  4197                           
  4198                           ; 8 bytes @ 0x28
  4199  0048                     	ds	1
  4200  0049                     xtoa@w:	
  4201                           
  4202                           ; 2 bytes @ 0x29
  4203  0049                     	ds	2
  4204  004B                     xtoa@n:	
  4205                           
  4206                           ; 8 bytes @ 0x2B
  4207  004B                     	ds	2
  4208  004D                     dtoa@i:	
  4209  004D                     ___fldiv@rem:	
  4210                           ; 2 bytes @ 0x2D
  4211                           
  4212                           
  4213                           ; 4 bytes @ 0x2D
  4214  004D                     	ds	3
  4215  0050                     otoa@i:	
  4216                           
  4217                           ; 2 bytes @ 0x30
  4218  0050                     	ds	1
  4219  0051                     ___fldiv@sign:	
  4220                           
  4221                           ; 1 bytes @ 0x31
  4222  0051                     	ds	1
  4223  0052                     ___fldiv@new_exp:	
  4224                           
  4225                           ; 2 bytes @ 0x32
  4226  0052                     	ds	1
  4227  0053                     xtoa@i:	
  4228                           
  4229                           ; 2 bytes @ 0x33
  4230  0053                     	ds	1
  4231  0054                     ___fldiv@grs:	
  4232                           
  4233                           ; 4 bytes @ 0x34
  4234  0054                     	ds	1
  4235  0055                     xtoa@c:	
  4236                           
  4237                           ; 2 bytes @ 0x35
  4238  0055                     	ds	3
  4239  0058                     ___fldiv@bexp:	
  4240                           
  4241                           ; 1 bytes @ 0x38
  4242  0058                     	ds	1
  4243  0059                     ___fldiv@aexp:	
  4244                           
  4245                           ; 1 bytes @ 0x39
  4246  0059                     	ds	1
  4247  005A                     ?_floorf:	
  4248  005A                     ?___fltol:	
  4249                           ; 4 bytes @ 0x3A
  4250                           
  4251  005A                     ___fltol@f1:	
  4252                           ; 4 bytes @ 0x3A
  4253                           
  4254  005A                     floorf@x:	
  4255                           ; 4 bytes @ 0x3A
  4256                           
  4257                           
  4258                           ; 4 bytes @ 0x3A
  4259  005A                     	ds	4
  4260  005E                     ??_floorf:	
  4261  005E                     ??___fltol:	
  4262                           ; 1 bytes @ 0x3E
  4263                           
  4264                           
  4265                           ; 1 bytes @ 0x3E
  4266  005E                     	ds	5
  4267  0063                     ?_setShortCircuitProtection:	
  4268  0063                     setShortCircuitProtection@current_mA:	
  4269                           ; 1 bytes @ 0x43
  4270                           
  4271                           
  4272                           ; 4 bytes @ 0x43
  4273  0063                     	ds	1
  4274  0064                     floorf@m:	
  4275                           
  4276                           ; 4 bytes @ 0x44
  4277  0064                     	ds	3
  4278  0067                     setShortCircuitProtection@delay_us:	
  4279                           
  4280                           ; 2 bytes @ 0x47
  4281  0067                     	ds	1
  4282  0068                     floorf@e:	
  4283                           
  4284                           ; 2 bytes @ 0x48
  4285  0068                     	ds	1
  4286  0069                     ??_setShortCircuitProtection:	
  4287                           
  4288                           ; 1 bytes @ 0x49
  4289  0069                     	ds	1
  4290  006A                     floorf@u:	
  4291                           
  4292                           ; 4 bytes @ 0x4A
  4293  006A                     	ds	4
  4294  006E                     ??_vfprintf:	
  4295                           
  4296                           ; 1 bytes @ 0x4E
  4297  006E                     	ds	2
  4298                           
  4299                           	psect	maintext
  4300  2943                     __pmaintext:	
  4301 ;;
  4302 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  4303 ;;
  4304 ;; *************** function _main *****************
  4305 ;; Defined at:
  4306 ;;		line 75 in file "main.c"
  4307 ;; Parameters:    Size  Location     Type
  4308 ;;		None
  4309 ;; Auto vars:     Size  Location     Type
  4310 ;;		None
  4311 ;; Return value:  Size  Location     Type
  4312 ;;                  1    wreg      void 
  4313 ;; Registers used:
  4314 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4315 ;; Tracked objects:
  4316 ;;		On entry : B1F/0
  4317 ;;		On exit  : 0/0
  4318 ;;		Unchanged: 0/0
  4319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4322 ;;      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4323 ;;      Totals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4324 ;;Total ram usage:        1 bytes
  4325 ;; Hardware stack levels required when called:   11
  4326 ;; This function calls:
  4327 ;;		_EUSART_Initialize
  4328 ;;		_initClock
  4329 ;;		_init_GPIO
  4330 ;;		_init_I2C
  4331 ;;		_init_RGB
  4332 ;;		_init_TMR1
  4333 ;;		_statemachine
  4334 ;; This function is called by:
  4335 ;;		Startup code after reset
  4336 ;; This function uses a non-reentrant model
  4337 ;;
  4338                           
  4339                           
  4340                           ;psect for function _main
  4341  2943                     _main:	
  4342                           
  4343                           ;main.c: 78:     initClock();
  4344                           
  4345                           ;incstack = 0
  4346                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4347  2943  31B6  269A  31A9   	fcall	_initClock
  4348                           
  4349                           ;main.c: 79:     init_GPIO();
  4350  2946  3188  2007  31A9   	fcall	_init_GPIO
  4351                           
  4352                           ;main.c: 80:     init_I2C();
  4353  2949  31B6  26F7  31A9   	fcall	_init_I2C
  4354                           
  4355                           ;main.c: 81:     EUSART_Initialize(9600);
  4356  294C  3000               	movlw	0
  4357  294D  0020               	movlb	0	; select bank0
  4358  294E  00A9               	movwf	EUSART_Initialize@baudrate+3
  4359  294F  3000               	movlw	0
  4360  2950  00A8               	movwf	EUSART_Initialize@baudrate+2
  4361  2951  3025               	movlw	37
  4362  2952  00A7               	movwf	EUSART_Initialize@baudrate+1
  4363  2953  3080               	movlw	128
  4364  2954  00A6               	movwf	EUSART_Initialize@baudrate
  4365  2955  31A1  21A3  31A9   	fcall	_EUSART_Initialize
  4366                           
  4367                           ;main.c: 82:     init_TMR1();
  4368  2958  31A0  2001  31A9   	fcall	_init_TMR1
  4369                           
  4370                           ;main.c: 83:     init_RGB();
  4371  295B  3198  2001  31A9   	fcall	_init_RGB
  4372  295E                     l8095:	
  4373                           
  4374                           ;main.c: 87:         statemachine();
  4375  295E  319B  2358  31A9   	fcall	_statemachine
  4376                           
  4377                           ;main.c: 89:         _delay((unsigned long)((10)*(16000000/4000.0)));
  4378  2961  3034               	movlw	52
  4379  2962  0023               	movlb	3	; select bank3
  4380  2963  00DB               	movwf	??_main^(0+384)
  4381  2964  30F1               	movlw	241
  4382  2965                     u11827:	
  4383  2965  0B89               	decfsz	9,f
  4384  2966  2965               	goto	u11827
  4385  2967  0BDB               	decfsz	??_main^(0+384),f
  4386  2968  2965               	goto	u11827
  4387  2969  3200               	nop2
  4388  296A  295E               	goto	l8095
  4389  296B                     __end_of_main:	
  4390                           
  4391                           	psect	text1
  4392  1B58                     __ptext1:	
  4393 ;; *************** function _statemachine *****************
  4394 ;; Defined at:
  4395 ;;		line 95 in file "main.c"
  4396 ;; Parameters:    Size  Location     Type
  4397 ;;		None
  4398 ;; Auto vars:     Size  Location     Type
  4399 ;;  success         1   79[BANK2 ] unsigned char 
  4400 ;; Return value:  Size  Location     Type
  4401 ;;                  1    wreg      void 
  4402 ;; Registers used:
  4403 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4404 ;; Tracked objects:
  4405 ;;		On entry : 0/0
  4406 ;;		On exit  : 0/0
  4407 ;;		Unchanged: 0/0
  4408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4410 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4411 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4412 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4413 ;;Total ram usage:        3 bytes
  4414 ;; Hardware stack levels used:    1
  4415 ;; Hardware stack levels required when called:   10
  4416 ;; This function calls:
  4417 ;;		_AFE_getSetCurrentSenseRes
  4418 ;;		_AFE_getSetShortCircuitCurrent
  4419 ;;		_EUSART_Write_Text
  4420 ;;		_RGB_AWAIT_AFE_CONN
  4421 ;;		_RGB_color
  4422 ;;		_beginAFEcommunication
  4423 ;;		_init_AFE
  4424 ;;		_snprintf
  4425 ;; This function is called by:
  4426 ;;		_main
  4427 ;; This function uses a non-reentrant model
  4428 ;;
  4429                           
  4430                           
  4431                           ;psect for function _statemachine
  4432  1B58                     _statemachine:	
  4433                           
  4434                           ;main.c: 97:     switch (currState) {
  4435                           
  4436                           ;incstack = 0
  4437                           ; Regs used in _statemachine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4438  1B58  2C36               	goto	l8077
  4439  1B59                     l8023:	
  4440                           
  4441                           ;main.c: 100:             if (tmr1_flag) {
  4442  1B59  0023               	movlb	3	; select bank3
  4443  1B5A  0852               	movf	_tmr1_flag^(0+384),w	;volatile
  4444  1B5B  1903               	btfsc	3,2
  4445  1B5C  0008               	return
  4446                           
  4447                           ;main.c: 101:                 tmr1_flag = 0;
  4448  1B5D  01D2               	clrf	_tmr1_flag^(0+384)	;volatile
  4449                           
  4450                           ;main.c: 102:                 RGB_AWAIT_AFE_CONN();
  4451  1B5E  31A8  20B7  319B   	fcall	_RGB_AWAIT_AFE_CONN
  4452                           
  4453                           ;main.c: 103:                 uint8_t success = beginAFEcommunication();
  4454  1B61  31A2  224B  319B   	fcall	_beginAFEcommunication
  4455  1B64  0020               	movlb	0	; select bank0
  4456  1B65  0820               	movf	?_beginAFEcommunication,w
  4457  1B66  0022               	movlb	2	; select bank2
  4458  1B67  00ED               	movwf	??_statemachine^(0+256)
  4459  1B68  086D               	movf	??_statemachine^(0+256),w
  4460  1B69  00EF               	movwf	statemachine@success^(0+256)
  4461                           
  4462                           ;main.c: 106:                 EUSART_Write_Text("Attempting to communicate with AFE...\n
      +                          \r");
  4463  1B6A  303D               	movlw	low (STR_1| (0+32768))
  4464  1B6B  00F2               	movwf	EUSART_Write_Text@text
  4465  1B6C  30B1               	movlw	high (STR_1| (0+32768))
  4466  1B6D  00F3               	movwf	EUSART_Write_Text@text+1
  4467  1B6E  31B7  2792  319B   	fcall	_EUSART_Write_Text
  4468                           
  4469                           ;main.c: 108:                 if (success) {
  4470  1B71  0022               	movlb	2	; select bank2
  4471  1B72  086F               	movf	statemachine@success^(0+256),w
  4472  1B73  1903               	btfsc	3,2
  4473  1B74  0008               	return
  4474                           
  4475                           ;main.c: 109:                     T1CONbits.TMR1ON = 0;
  4476  1B75  0020               	movlb	0	; select bank0
  4477  1B76  1018               	bcf	24,0	;volatile
  4478                           
  4479                           ;main.c: 110:                     PIE1bits.TMR1IE = 0;
  4480  1B77  0021               	movlb	1	; select bank1
  4481  1B78  1011               	bcf	17,0	;volatile
  4482                           
  4483                           ;main.c: 111:                     RGB_color(0);
  4484  1B79  3000               	movlw	0
  4485  1B7A  00F1               	movwf	RGB_color@color
  4486  1B7B  00F2               	movwf	RGB_color@color+1
  4487  1B7C  31A8  2096  319B   	fcall	_RGB_color
  4488                           
  4489                           ;main.c: 112:                     tmr1_flag = 0;
  4490  1B7F  0023               	movlb	3	; select bank3
  4491  1B80  01D2               	clrf	_tmr1_flag^(0+384)	;volatile
  4492                           
  4493                           ;main.c: 115:                     _delay((unsigned long)((5)*(16000000/4000.0)));
  4494  1B81  301A               	movlw	26
  4495  1B82  0022               	movlb	2	; select bank2
  4496  1B83  00ED               	movwf	??_statemachine^(0+256)
  4497  1B84  30F8               	movlw	248
  4498  1B85                     u11837:	
  4499  1B85  0B89               	decfsz	9,f
  4500  1B86  2B85               	goto	u11837
  4501  1B87  0BED               	decfsz	??_statemachine^(0+256),f
  4502  1B88  2B85               	goto	u11837
  4503  1B89  0000               	nop
  4504                           
  4505                           ;main.c: 116:                     EUSART_Write_Text("Communication with BQ76920 AFE esta
      +                          blished!\n\r");
  4506  1B8A  3037               	movlw	low (STR_2| (0+32768))
  4507  1B8B  00F2               	movwf	EUSART_Write_Text@text
  4508  1B8C  30B0               	movlw	high (STR_2| (0+32768))
  4509  1B8D  00F3               	movwf	EUSART_Write_Text@text+1
  4510  1B8E  31B7  2792  319B   	fcall	_EUSART_Write_Text
  4511                           
  4512                           ;main.c: 117:                     snprintf(messageBuffer, 127, "Obtained adcOffset = %i 
      +                          and adcGain = %i\n\r", adcOffset, adcGain);
  4513  1B91  3071               	movlw	113
  4514  1B92  0022               	movlb	2	; select bank2
  4515  1B93  00DF               	movwf	snprintf@s^(0+256)
  4516  1B94  3027               	movlw	39
  4517  1B95  00E0               	movwf	(snprintf@s^(0+256)+1)
  4518  1B96  307F               	movlw	127
  4519  1B97  00E1               	movwf	snprintf@n^(0+256)
  4520  1B98  3000               	movlw	0
  4521  1B99  00E2               	movwf	(snprintf@n^(0+256)+1)
  4522  1B9A  30BE               	movlw	low (STR_3| (0+32768))
  4523  1B9B  00E3               	movwf	snprintf@fmt^(0+256)
  4524  1B9C  30B0               	movlw	high (STR_3| (0+32768))
  4525  1B9D  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  4526  1B9E  0023               	movlb	3	; select bank3
  4527  1B9F  084D               	movf	(_adcOffset+1)^(0+384),w
  4528  1BA0  0022               	movlb	2	; select bank2
  4529  1BA1  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  4530  1BA2  0023               	movlb	3	; select bank3
  4531  1BA3  084C               	movf	_adcOffset^(0+384),w
  4532  1BA4  0022               	movlb	2	; select bank2
  4533  1BA5  00E5               	movwf	(?_snprintf^(0+256)+6)
  4534  1BA6  0023               	movlb	3	; select bank3
  4535  1BA7  084F               	movf	(_adcGain+1)^(0+384),w
  4536  1BA8  0022               	movlb	2	; select bank2
  4537  1BA9  00E8               	movwf	((?_snprintf+1)^(0+256)+8)
  4538  1BAA  0023               	movlb	3	; select bank3
  4539  1BAB  084E               	movf	_adcGain^(0+384),w
  4540  1BAC  0022               	movlb	2	; select bank2
  4541  1BAD  00E7               	movwf	(?_snprintf^(0+256)+8)
  4542  1BAE  31B7  277A  319B   	fcall	_snprintf
  4543                           
  4544                           ;main.c: 118:                     EUSART_Write_Text(messageBuffer);
  4545  1BB1  3071               	movlw	113
  4546  1BB2  00F2               	movwf	EUSART_Write_Text@text
  4547  1BB3  3027               	movlw	39
  4548  1BB4  00F3               	movwf	EUSART_Write_Text@text+1
  4549  1BB5  31B7  2792  319B   	fcall	_EUSART_Write_Text
  4550                           
  4551                           ;main.c: 119:                     EUSART_Write_Text("Attempt to set initial system param
      +                          eters to AFE...\n\r");
  4552  1BB8  3002               	movlw	low (STR_4| (0+32768))
  4553  1BB9  00F2               	movwf	EUSART_Write_Text@text
  4554  1BBA  30B0               	movlw	high (STR_4| (0+32768))
  4555  1BBB  00F3               	movwf	EUSART_Write_Text@text+1
  4556  1BBC  31B7  2792         	fcall	_EUSART_Write_Text
  4557                           
  4558                           ;main.c: 121:                     currState = 1;
  4559  1BBE  0023               	movlb	3	; select bank3
  4560  1BBF  01D3               	clrf	_currState^(0+384)
  4561  1BC0  0AD3               	incf	_currState^(0+384),f
  4562  1BC1  0008               	return
  4563  1BC2                     l8053:	
  4564                           
  4565                           ;main.c: 130:             init_AFE();
  4566  1BC2  31A9  216B  319B   	fcall	_init_AFE
  4567                           
  4568                           ;main.c: 133:             _delay((unsigned long)((5)*(16000000/4000.0)));
  4569  1BC5  301A               	movlw	26
  4570  1BC6  0022               	movlb	2	; select bank2
  4571  1BC7  00ED               	movwf	??_statemachine^(0+256)
  4572  1BC8  30F8               	movlw	248
  4573  1BC9                     u11847:	
  4574  1BC9  0B89               	decfsz	9,f
  4575  1BCA  2BC9               	goto	u11847
  4576  1BCB  0BED               	decfsz	??_statemachine^(0+256),f
  4577  1BCC  2BC9               	goto	u11847
  4578  1BCD  0000               	nop
  4579                           
  4580                           ;main.c: 134:             EUSART_Write_Text("\n\r");
  4581  1BCE  3062               	movlw	low ((STR_2+43)| (0+32768))
  4582  1BCF  00F2               	movwf	EUSART_Write_Text@text
  4583  1BD0  30B0               	movlw	high ((STR_2+43)| (0+32768))
  4584  1BD1  00F3               	movwf	EUSART_Write_Text@text+1
  4585  1BD2  31B7  2792  319B   	fcall	_EUSART_Write_Text
  4586                           
  4587                           ;main.c: 135:             snprintf(messageBuffer, 127, "Current sense resistor value: %.
      +                          4f ohms\n\r", AFE_getSetCurrentSenseRes());
  4588  1BD5  3071               	movlw	113
  4589  1BD6  0022               	movlb	2	; select bank2
  4590  1BD7  00DF               	movwf	snprintf@s^(0+256)
  4591  1BD8  3027               	movlw	39
  4592  1BD9  00E0               	movwf	(snprintf@s^(0+256)+1)
  4593  1BDA  307F               	movlw	127
  4594  1BDB  00E1               	movwf	snprintf@n^(0+256)
  4595  1BDC  3000               	movlw	0
  4596  1BDD  00E2               	movwf	(snprintf@n^(0+256)+1)
  4597  1BDE  3013               	movlw	low (STR_6| (0+32768))
  4598  1BDF  00E3               	movwf	snprintf@fmt^(0+256)
  4599  1BE0  30B1               	movlw	high (STR_6| (0+32768))
  4600  1BE1  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  4601  1BE2  31B6  26D9  319B   	fcall	_AFE_getSetCurrentSenseRes
  4602  1BE5  0874               	movf	?_AFE_getSetCurrentSenseRes+3,w
  4603  1BE6  0022               	movlb	2	; select bank2
  4604  1BE7  00E8               	movwf	((?_snprintf+3)^(0+256)+6)
  4605  1BE8  0873               	movf	?_AFE_getSetCurrentSenseRes+2,w
  4606  1BE9  00E7               	movwf	((?_snprintf+2)^(0+256)+6)
  4607  1BEA  0872               	movf	?_AFE_getSetCurrentSenseRes+1,w
  4608  1BEB  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  4609  1BEC  0871               	movf	?_AFE_getSetCurrentSenseRes,w
  4610  1BED  00E5               	movwf	(?_snprintf^(0+256)+6)
  4611  1BEE  31B7  277A  319B   	fcall	_snprintf
  4612                           
  4613                           ;main.c: 136:             EUSART_Write_Text(messageBuffer);
  4614  1BF1  3071               	movlw	113
  4615  1BF2  00F2               	movwf	EUSART_Write_Text@text
  4616  1BF3  3027               	movlw	39
  4617  1BF4  00F3               	movwf	EUSART_Write_Text@text+1
  4618  1BF5  31B7  2792  319B   	fcall	_EUSART_Write_Text
  4619                           
  4620                           ;main.c: 137:             snprintf(messageBuffer, 127, "Set short circuit current for AF
      +                          E: %lu mA\n\r", AFE_getSetShortCircuitCurrent());
  4621  1BF8  3071               	movlw	113
  4622  1BF9  0022               	movlb	2	; select bank2
  4623  1BFA  00DF               	movwf	snprintf@s^(0+256)
  4624  1BFB  3027               	movlw	39
  4625  1BFC  00E0               	movwf	(snprintf@s^(0+256)+1)
  4626  1BFD  307F               	movlw	127
  4627  1BFE  00E1               	movwf	snprintf@n^(0+256)
  4628  1BFF  3000               	movlw	0
  4629  1C00  00E2               	movwf	(snprintf@n^(0+256)+1)
  4630  1C01  3092               	movlw	low (STR_7| (0+32768))
  4631  1C02  00E3               	movwf	snprintf@fmt^(0+256)
  4632  1C03  30B0               	movlw	high (STR_7| (0+32768))
  4633  1C04  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  4634  1C05  31B7  27AC  319B   	fcall	_AFE_getSetShortCircuitCurrent
  4635  1C08  0874               	movf	?_AFE_getSetShortCircuitCurrent+3,w
  4636  1C09  0022               	movlb	2	; select bank2
  4637  1C0A  00E8               	movwf	((?_snprintf+3)^(0+256)+6)
  4638  1C0B  0873               	movf	?_AFE_getSetShortCircuitCurrent+2,w
  4639  1C0C  00E7               	movwf	((?_snprintf+2)^(0+256)+6)
  4640  1C0D  0872               	movf	?_AFE_getSetShortCircuitCurrent+1,w
  4641  1C0E  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  4642  1C0F  0871               	movf	?_AFE_getSetShortCircuitCurrent,w
  4643  1C10  00E5               	movwf	(?_snprintf^(0+256)+6)
  4644  1C11  31B7  277A  319B   	fcall	_snprintf
  4645                           
  4646                           ;main.c: 138:             EUSART_Write_Text(messageBuffer);
  4647  1C14  3071               	movlw	113
  4648  1C15  00F2               	movwf	EUSART_Write_Text@text
  4649  1C16  3027               	movlw	39
  4650  1C17  00F3               	movwf	EUSART_Write_Text@text+1
  4651  1C18  31B7  2792  319B   	fcall	_EUSART_Write_Text
  4652                           
  4653                           ;main.c: 139:             EUSART_Write_Text("Initial parameters for BQ76920 AFE set!\n\r
      +                          ");
  4654  1C1B  30E9               	movlw	low (STR_8| (0+32768))
  4655  1C1C  00F2               	movwf	EUSART_Write_Text@text
  4656  1C1D  30B0               	movlw	high (STR_8| (0+32768))
  4657  1C1E  00F3               	movwf	EUSART_Write_Text@text+1
  4658  1C1F  31B7  2792  319B   	fcall	_EUSART_Write_Text
  4659                           
  4660                           ;main.c: 140:             EUSART_Write_Text("Now reading AFE data at regular intervals.\
      +                          n\r");
  4661  1C22  3065               	movlw	low (STR_9| (0+32768))
  4662  1C23  00F2               	movwf	EUSART_Write_Text@text
  4663  1C24  30B0               	movlw	high (STR_9| (0+32768))
  4664  1C25  00F3               	movwf	EUSART_Write_Text@text+1
  4665  1C26  31B7  2792  319B   	fcall	_EUSART_Write_Text
  4666                           
  4667                           ;main.c: 142:             RGB_color(1);
  4668  1C29  3001               	movlw	1
  4669  1C2A  00F1               	movwf	RGB_color@color
  4670  1C2B  3000               	movlw	0
  4671  1C2C  00F2               	movwf	RGB_color@color+1
  4672  1C2D  31A8  2096         	fcall	_RGB_color
  4673                           
  4674                           ;main.c: 143:             currState = 2;
  4675  1C2F  3002               	movlw	2
  4676  1C30  0022               	movlb	2	; select bank2
  4677  1C31  00ED               	movwf	??_statemachine^(0+256)
  4678  1C32  086D               	movf	??_statemachine^(0+256),w
  4679  1C33  0023               	movlb	3	; select bank3
  4680  1C34  00D3               	movwf	_currState^(0+384)
  4681                           
  4682                           ;main.c: 144:             break;
  4683  1C35  0008               	return
  4684  1C36                     l8077:	
  4685  1C36  0023               	movlb	3	; select bank3
  4686  1C37  0853               	movf	_currState^(0+384),w
  4687  1C38  0022               	movlb	2	; select bank2
  4688  1C39  00ED               	movwf	??_statemachine^(0+256)
  4689  1C3A  01EE               	clrf	(??_statemachine^(0+256)+1)
  4690                           
  4691                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4692                           ; Switch size 1, requested type "simple"
  4693                           ; Number of cases is 1, Range of values is 0 to 0
  4694                           ; switch strategies available:
  4695                           ; Name         Instructions Cycles
  4696                           ; simple_byte            4     3 (average)
  4697                           ; direct_byte            8     6 (fixed)
  4698                           ; jumptable            260     6 (fixed)
  4699                           ;	Chosen strategy is simple_byte
  4700  1C3B  086E               	movf	(??_statemachine+1)^(0+256),w
  4701  1C3C  3A00               	xorlw	0	; case 0
  4702  1C3D  1903               	skipnz
  4703  1C3E  2C40               	goto	l8199
  4704  1C3F  2C4B               	goto	l137
  4705  1C40                     l8199:	
  4706                           
  4707                           ; Switch size 1, requested type "simple"
  4708                           ; Number of cases is 3, Range of values is 0 to 2
  4709                           ; switch strategies available:
  4710                           ; Name         Instructions Cycles
  4711                           ; simple_byte           10     6 (average)
  4712                           ; direct_byte           12     6 (fixed)
  4713                           ; jumptable            260     6 (fixed)
  4714                           ;	Chosen strategy is simple_byte
  4715  1C40  086D               	movf	??_statemachine^(0+256),w
  4716  1C41  3A00               	xorlw	0	; case 0
  4717  1C42  1903               	skipnz
  4718  1C43  2B59               	goto	l8023
  4719  1C44  3A01               	xorlw	1	; case 1
  4720  1C45  1903               	skipnz
  4721  1C46  2BC2               	goto	l8053
  4722  1C47  3A03               	xorlw	3	; case 2
  4723  1C48  1903               	skipnz
  4724  1C49  2C4B               	goto	l137
  4725  1C4A  2C4B               	goto	l137
  4726  1C4B                     l137:	
  4727  1C4B  0008               	return
  4728  1C4C                     __end_of_statemachine:	
  4729                           
  4730                           	psect	text2
  4731  377A                     __ptext2:	
  4732 ;; *************** function _snprintf *****************
  4733 ;; Defined at:
  4734 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\snprintf.c"
  4735 ;; Parameters:    Size  Location     Type
  4736 ;;  s               2   63[BANK2 ] PTR unsigned char 
  4737 ;;		 -> messageBuffer(127), 
  4738 ;;  n               2   65[BANK2 ] unsigned int 
  4739 ;;  fmt             2   67[BANK2 ] PTR const unsigned char 
  4740 ;;		 -> STR_7(44), STR_6(42), STR_3(43), 
  4741 ;; Auto vars:     Size  Location     Type
  4742 ;;  ret             2    0        int 
  4743 ;;  ap              1   76[BANK2 ] PTR void [1]
  4744 ;;		 -> ?_snprintf(2), 
  4745 ;; Return value:  Size  Location     Type
  4746 ;;                  2   63[BANK2 ] int 
  4747 ;; Registers used:
  4748 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4749 ;; Tracked objects:
  4750 ;;		On entry : 0/0
  4751 ;;		On exit  : 0/0
  4752 ;;		Unchanged: 0/0
  4753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4754 ;;      Params:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4755 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4756 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4757 ;;      Totals:         0       0       0      14       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4758 ;;Total ram usage:       14 bytes
  4759 ;; Hardware stack levels used:    1
  4760 ;; Hardware stack levels required when called:    9
  4761 ;; This function calls:
  4762 ;;		_vsnprintf
  4763 ;; This function is called by:
  4764 ;;		_statemachine
  4765 ;; This function uses a non-reentrant model
  4766 ;;
  4767                           
  4768                           
  4769                           ;psect for function _snprintf
  4770  377A                     _snprintf:	
  4771                           
  4772                           ;incstack = 0
  4773                           ; Regs used in _snprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4774  377A  3065               	movlw	(low ((?_snprintf| (0+256)+6)))& (0+255)
  4775  377B  0022               	movlb	2	; select bank2
  4776  377C  00E9               	movwf	??_snprintf^(0+256)
  4777  377D  0869               	movf	??_snprintf^(0+256),w
  4778  377E  00EC               	movwf	snprintf@ap^(0+256)
  4779  377F  0860               	movf	(snprintf@s+1)^(0+256),w
  4780  3780  00CF               	movwf	(vsnprintf@s+1)^(0+256)
  4781  3781  085F               	movf	snprintf@s^(0+256),w
  4782  3782  00CE               	movwf	vsnprintf@s^(0+256)
  4783  3783  0862               	movf	(snprintf@n+1)^(0+256),w
  4784  3784  00D1               	movwf	(vsnprintf@n+1)^(0+256)
  4785  3785  0861               	movf	snprintf@n^(0+256),w
  4786  3786  00D0               	movwf	vsnprintf@n^(0+256)
  4787  3787  0864               	movf	(snprintf@fmt+1)^(0+256),w
  4788  3788  00D3               	movwf	(vsnprintf@fmt+1)^(0+256)
  4789  3789  0863               	movf	snprintf@fmt^(0+256),w
  4790  378A  00D2               	movwf	vsnprintf@fmt^(0+256)
  4791  378B  306C               	movlw	(low (snprintf@ap| (0+256)))& (0+255)
  4792  378C  00E9               	movwf	??_snprintf^(0+256)
  4793  378D  0869               	movf	??_snprintf^(0+256),w
  4794  378E  00D4               	movwf	vsnprintf@ap^(0+256)
  4795  378F  31AD  25E8         	fcall	_vsnprintf
  4796  3791  0008               	return
  4797  3792                     __end_of_snprintf:	
  4798                           
  4799                           	psect	text3
  4800  2DE8                     __ptext3:	
  4801 ;; *************** function _vsnprintf *****************
  4802 ;; Defined at:
  4803 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_vsnprintf.c"
  4804 ;; Parameters:    Size  Location     Type
  4805 ;;  s               2   46[BANK2 ] PTR unsigned char 
  4806 ;;		 -> messageBuffer(127), 
  4807 ;;  n               2   48[BANK2 ] unsigned int 
  4808 ;;  fmt             2   50[BANK2 ] PTR const unsigned char 
  4809 ;;		 -> STR_7(44), STR_6(42), STR_3(43), 
  4810 ;;  ap              1   52[BANK2 ] PTR PTR void 
  4811 ;;		 -> snprintf@ap(1), 
  4812 ;; Auto vars:     Size  Location     Type
  4813 ;;  f               6   57[BANK2 ] struct _IO_FILE
  4814 ;;  cnt             2   55[BANK2 ] int 
  4815 ;; Return value:  Size  Location     Type
  4816 ;;                  2   46[BANK2 ] int 
  4817 ;; Registers used:
  4818 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4819 ;; Tracked objects:
  4820 ;;		On entry : 0/0
  4821 ;;		On exit  : 0/0
  4822 ;;		Unchanged: 0/0
  4823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4824 ;;      Params:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4825 ;;      Locals:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4826 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4827 ;;      Totals:         0       0       2      17       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4828 ;;Total ram usage:       19 bytes
  4829 ;; Hardware stack levels used:    1
  4830 ;; Hardware stack levels required when called:    8
  4831 ;; This function calls:
  4832 ;;		_vfprintf
  4833 ;; This function is called by:
  4834 ;;		_snprintf
  4835 ;; This function uses a non-reentrant model
  4836 ;;
  4837                           
  4838                           
  4839                           ;psect for function _vsnprintf
  4840  2DE8                     _vsnprintf:	
  4841                           
  4842                           ;incstack = 0
  4843                           ; Regs used in _vsnprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4844  2DE8  3080               	movlw	128
  4845  2DE9  0022               	movlb	2	; select bank2
  4846  2DEA  0251               	subwf	(vsnprintf@n+1)^(0+256),w
  4847  2DEB  3000               	movlw	0
  4848  2DEC  1903               	skipnz
  4849  2DED  0250               	subwf	vsnprintf@n^(0+256),w
  4850  2DEE  1C03               	skipc
  4851  2DEF  2DFB               	goto	l7963
  4852  2DF0  304B               	movlw	75
  4853  2DF1  0023               	movlb	3	; select bank3
  4854  2DF2  00BA               	movwf	_errno^(0+384)
  4855  2DF3  3000               	movlw	0
  4856  2DF4  00BB               	movwf	(_errno^(0+384)+1)
  4857  2DF5  30FF               	movlw	255
  4858  2DF6  0022               	movlb	2	; select bank2
  4859  2DF7  00CE               	movwf	?_vsnprintf^(0+256)
  4860  2DF8  30FF               	movlw	255
  4861  2DF9  00CF               	movwf	(?_vsnprintf^(0+256)+1)
  4862  2DFA  0008               	return
  4863  2DFB                     l7963:	
  4864  2DFB  084F               	movf	(vsnprintf@s+1)^(0+256),w
  4865  2DFC  00DA               	movwf	(vsnprintf@f+1)^(0+256)
  4866  2DFD  084E               	movf	vsnprintf@s^(0+256),w
  4867  2DFE  00D9               	movwf	vsnprintf@f^(0+256)
  4868  2DFF  3000               	movlw	0
  4869  2E00  0251               	subwf	(vsnprintf@n+1)^(0+256),w
  4870  2E01  3002               	movlw	2
  4871  2E02  1903               	skipnz
  4872  2E03  0250               	subwf	vsnprintf@n^(0+256),w
  4873  2E04  1C03               	skipc
  4874  2E05  2E0F               	goto	l7969
  4875  2E06  0850               	movf	vsnprintf@n^(0+256),w
  4876  2E07  3EFF               	addlw	255
  4877  2E08  00DD               	movwf	(vsnprintf@f^(0+256)+4)
  4878  2E09  30FF               	movlw	255
  4879  2E0A  3D51               	addwfc	(vsnprintf@n+1)^(0+256),w
  4880  2E0B  00DE               	movwf	((vsnprintf@f+1)^(0+256)+4)
  4881  2E0C  01DB               	clrf	(vsnprintf@f^(0+256)+2)
  4882  2E0D  01DC               	clrf	((vsnprintf@f+1)^(0+256)+2)
  4883  2E0E  2E17               	goto	l7971
  4884  2E0F                     l7969:	
  4885  2E0F  3001               	movlw	1
  4886  2E10  00DD               	movwf	(vsnprintf@f^(0+256)+4)
  4887  2E11  3000               	movlw	0
  4888  2E12  00DE               	movwf	(vsnprintf@f^(0+256)+5)
  4889  2E13  3001               	movlw	1
  4890  2E14  00DB               	movwf	(vsnprintf@f^(0+256)+2)
  4891  2E15  3000               	movlw	0
  4892  2E16  00DC               	movwf	(vsnprintf@f^(0+256)+3)
  4893  2E17                     l7971:	
  4894  2E17  3059               	movlw	low vsnprintf@f
  4895  2E18  0021               	movlb	1	; select bank1
  4896  2E19  00E7               	movwf	vfprintf@fp^(0+128)
  4897  2E1A  3001               	movlw	high vsnprintf@f
  4898  2E1B  00E8               	movwf	(vfprintf@fp^(0+128)+1)
  4899  2E1C  0022               	movlb	2	; select bank2
  4900  2E1D  0853               	movf	(vsnprintf@fmt+1)^(0+256),w
  4901  2E1E  0021               	movlb	1	; select bank1
  4902  2E1F  00EA               	movwf	(vfprintf@fmt+1)^(0+128)
  4903  2E20  0022               	movlb	2	; select bank2
  4904  2E21  0852               	movf	vsnprintf@fmt^(0+256),w
  4905  2E22  0021               	movlb	1	; select bank1
  4906  2E23  00E9               	movwf	vfprintf@fmt^(0+128)
  4907  2E24  0022               	movlb	2	; select bank2
  4908  2E25  0854               	movf	vsnprintf@ap^(0+256),w
  4909  2E26  0021               	movlb	1	; select bank1
  4910  2E27  00EE               	movwf	??_vsnprintf^(0+128)
  4911  2E28  086E               	movf	??_vsnprintf^(0+128),w
  4912  2E29  00EB               	movwf	vfprintf@ap^(0+128)
  4913  2E2A  31A9  21CA  31AD   	fcall	_vfprintf
  4914  2E2D  0021               	movlb	1	; select bank1
  4915  2E2E  0868               	movf	(?_vfprintf+1)^(0+128),w
  4916  2E2F  0022               	movlb	2	; select bank2
  4917  2E30  00D8               	movwf	(vsnprintf@cnt+1)^(0+256)
  4918  2E31  0021               	movlb	1	; select bank1
  4919  2E32  0867               	movf	?_vfprintf^(0+128),w
  4920  2E33  0022               	movlb	2	; select bank2
  4921  2E34  00D7               	movwf	vsnprintf@cnt^(0+256)
  4922  2E35  0850               	movf	vsnprintf@n^(0+256),w
  4923  2E36  0451               	iorwf	(vsnprintf@n+1)^(0+256),w
  4924  2E37  1D03               	btfss	3,2
  4925  2E38  1BD8               	btfsc	(vsnprintf@cnt+1)^(0+256),7
  4926  2E39  2E60               	goto	l7985
  4927  2E3A  0850               	movf	vsnprintf@n^(0+256),w
  4928  2E3B  3EFF               	addlw	255
  4929  2E3C  0021               	movlb	1	; select bank1
  4930  2E3D  00EE               	movwf	??_vsnprintf^(0+128)
  4931  2E3E  30FF               	movlw	255
  4932  2E3F  0022               	movlb	2	; select bank2
  4933  2E40  3D51               	addwfc	(vsnprintf@n+1)^(0+256),w
  4934  2E41  0021               	movlb	1	; select bank1
  4935  2E42  00EF               	movwf	(??_vsnprintf+1)^(0+128)
  4936  2E43  086F               	movf	(??_vsnprintf+1)^(0+128),w
  4937  2E44  0022               	movlb	2	; select bank2
  4938  2E45  0258               	subwf	(vsnprintf@cnt+1)^(0+256),w
  4939  2E46  1D03               	skipz
  4940  2E47  2E4C               	goto	u11765
  4941  2E48  0021               	movlb	1	; select bank1
  4942  2E49  086E               	movf	??_vsnprintf^(0+128),w
  4943  2E4A  0022               	movlb	2	; select bank2
  4944  2E4B  0257               	subwf	vsnprintf@cnt^(0+256),w
  4945  2E4C                     u11765:	
  4946  2E4C  1C03               	skipc
  4947  2E4D  2E55               	goto	l7981
  4948  2E4E  0850               	movf	vsnprintf@n^(0+256),w
  4949  2E4F  3EFF               	addlw	255
  4950  2E50  00D5               	movwf	_vsnprintf$1647^(0+256)
  4951  2E51  30FF               	movlw	255
  4952  2E52  3D51               	addwfc	(vsnprintf@n+1)^(0+256),w
  4953  2E53  00D6               	movwf	(_vsnprintf$1647+1)^(0+256)
  4954  2E54  2E59               	goto	l7983
  4955  2E55                     l7981:	
  4956  2E55  0858               	movf	(vsnprintf@cnt+1)^(0+256),w
  4957  2E56  00D6               	movwf	(_vsnprintf$1647+1)^(0+256)
  4958  2E57  0857               	movf	vsnprintf@cnt^(0+256),w
  4959  2E58  00D5               	movwf	_vsnprintf$1647^(0+256)
  4960  2E59                     l7983:	
  4961  2E59  0855               	movf	_vsnprintf$1647^(0+256),w
  4962  2E5A  074E               	addwf	vsnprintf@s^(0+256),w
  4963  2E5B  0086               	movwf	6
  4964  2E5C  0856               	movf	(_vsnprintf$1647+1)^(0+256),w
  4965  2E5D  3D4F               	addwfc	(vsnprintf@s+1)^(0+256),w
  4966  2E5E  0087               	movwf	7
  4967  2E5F  0181               	clrf	1
  4968  2E60                     l7985:	
  4969  2E60  0858               	movf	(vsnprintf@cnt+1)^(0+256),w
  4970  2E61  00CF               	movwf	(?_vsnprintf+1)^(0+256)
  4971  2E62  0857               	movf	vsnprintf@cnt^(0+256),w
  4972  2E63  00CE               	movwf	?_vsnprintf^(0+256)
  4973  2E64  0008               	return
  4974  2E65                     __end_of_vsnprintf:	
  4975                           
  4976                           	psect	text4
  4977  29CA                     __ptext4:	
  4978 ;; *************** function _vfprintf *****************
  4979 ;; Defined at:
  4980 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4981 ;; Parameters:    Size  Location     Type
  4982 ;;  fp              2   71[BANK1 ] PTR struct _IO_FILE
  4983 ;;		 -> vsnprintf@f(6), 
  4984 ;;  fmt             2   73[BANK1 ] PTR const unsigned char 
  4985 ;;		 -> STR_7(44), STR_6(42), STR_3(43), 
  4986 ;;  ap              1   75[BANK1 ] PTR PTR void 
  4987 ;;		 -> snprintf@ap(1), 
  4988 ;; Auto vars:     Size  Location     Type
  4989 ;;  cfmt            2   76[BANK1 ] PTR unsigned char 
  4990 ;;		 -> STR_7(44), STR_6(42), STR_3(43), 
  4991 ;; Return value:  Size  Location     Type
  4992 ;;                  2   71[BANK1 ] int 
  4993 ;; Registers used:
  4994 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4995 ;; Tracked objects:
  4996 ;;		On entry : 0/0
  4997 ;;		On exit  : 0/0
  4998 ;;		Unchanged: 0/0
  4999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5000 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5001 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5002 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5003 ;;      Totals:         0       2       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5004 ;;Total ram usage:        9 bytes
  5005 ;; Hardware stack levels used:    1
  5006 ;; Hardware stack levels required when called:    7
  5007 ;; This function calls:
  5008 ;;		_vfpfcnvrt
  5009 ;; This function is called by:
  5010 ;;		_vsnprintf
  5011 ;; This function uses a non-reentrant model
  5012 ;;
  5013                           
  5014                           
  5015                           ;psect for function _vfprintf
  5016  29CA                     _vfprintf:	
  5017                           
  5018                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  5019                           
  5020                           ;incstack = 0
  5021                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5022  29CA  0021               	movlb	1	; select bank1
  5023  29CB  086A               	movf	(vfprintf@fmt+1)^(0+128),w
  5024  29CC  00ED               	movwf	(vfprintf@cfmt+1)^(0+128)
  5025  29CD  0869               	movf	vfprintf@fmt^(0+128),w
  5026  29CE  00EC               	movwf	vfprintf@cfmt^(0+128)
  5027                           
  5028                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  5029  29CF  0023               	movlb	3	; select bank3
  5030  29D0  01BC               	clrf	_nout^(0+384)
  5031  29D1  01BD               	clrf	(_nout+1)^(0+384)
  5032  29D2                     l7951:	
  5033                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5034                           
  5035                           
  5036                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5037  29D2  0021               	movlb	1	; select bank1
  5038  29D3  086C               	movf	vfprintf@cfmt^(0+128),w
  5039  29D4  0084               	movwf	4
  5040  29D5  086D               	movf	(vfprintf@cfmt+1)^(0+128),w
  5041  29D6  0085               	movwf	5
  5042  29D7  0012               	moviw fsr0++
  5043  29D8  1903               	btfsc	3,2
  5044  29D9  29F6               	goto	l7953
  5045                           
  5046                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  5047  29DA  0868               	movf	(vfprintf@fp+1)^(0+128),w
  5048  29DB  00E4               	movwf	(vfpfcnvrt@fp+1)^(0+128)
  5049  29DC  0867               	movf	vfprintf@fp^(0+128),w
  5050  29DD  00E3               	movwf	vfpfcnvrt@fp^(0+128)
  5051  29DE  30EC               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  5052  29DF  0020               	movlb	0	; select bank0
  5053  29E0  00EE               	movwf	??_vfprintf
  5054  29E1  086E               	movf	??_vfprintf,w
  5055  29E2  0021               	movlb	1	; select bank1
  5056  29E3  00E5               	movwf	vfpfcnvrt@fmt^(0+128)
  5057  29E4  086B               	movf	vfprintf@ap^(0+128),w
  5058  29E5  0020               	movlb	0	; select bank0
  5059  29E6  00EF               	movwf	??_vfprintf+1
  5060  29E7  086F               	movf	??_vfprintf+1,w
  5061  29E8  0021               	movlb	1	; select bank1
  5062  29E9  00E6               	movwf	vfpfcnvrt@ap^(0+128)
  5063  29EA  3193  23BD  31A9   	fcall	_vfpfcnvrt
  5064  29ED  0021               	movlb	1	; select bank1
  5065  29EE  0863               	movf	?_vfpfcnvrt^(0+128),w
  5066  29EF  0023               	movlb	3	; select bank3
  5067  29F0  07BC               	addwf	_nout^(0+384),f
  5068  29F1  0021               	movlb	1	; select bank1
  5069  29F2  0864               	movf	(?_vfpfcnvrt+1)^(0+128),w
  5070  29F3  0023               	movlb	3	; select bank3
  5071  29F4  3DBD               	addwfc	(_nout+1)^(0+384),f
  5072  29F5  29D2               	goto	l7951
  5073  29F6                     l7953:	
  5074                           
  5075                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  5076  29F6  0023               	movlb	3	; select bank3
  5077  29F7  083D               	movf	(_nout+1)^(0+384),w
  5078  29F8  0021               	movlb	1	; select bank1
  5079  29F9  00E8               	movwf	(?_vfprintf+1)^(0+128)
  5080  29FA  0023               	movlb	3	; select bank3
  5081  29FB  083C               	movf	_nout^(0+384),w
  5082  29FC  0021               	movlb	1	; select bank1
  5083  29FD  00E7               	movwf	?_vfprintf^(0+128)
  5084  29FE  0008               	return
  5085  29FF                     __end_of_vfprintf:	
  5086                           
  5087                           	psect	text5
  5088  13BD                     __ptext5:	
  5089 ;; *************** function _vfpfcnvrt *****************
  5090 ;; Defined at:
  5091 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5092 ;; Parameters:    Size  Location     Type
  5093 ;;  fp              2   67[BANK1 ] PTR struct _IO_FILE
  5094 ;;		 -> vsnprintf@f(6), 
  5095 ;;  fmt             1   69[BANK1 ] PTR PTR unsigned char 
  5096 ;;		 -> vfprintf@cfmt(2), 
  5097 ;;  ap              1   70[BANK1 ] PTR PTR void 
  5098 ;;		 -> snprintf@ap(1), 
  5099 ;; Auto vars:     Size  Location     Type
  5100 ;;  llu             8   38[BANK2 ] unsigned long long 
  5101 ;;  ll              8   28[BANK2 ] long long 
  5102 ;;  f               4   24[BANK2 ] long long 
  5103 ;;  ct              3   21[BANK2 ] unsigned char [3]
  5104 ;;  done            2   13[BANK2 ] int 
  5105 ;;  i               2    0        int 
  5106 ;;  c               1   37[BANK2 ] unsigned char 
  5107 ;;  vp              1   36[BANK2 ] PTR void 
  5108 ;;		 -> ?_snprintf(2), 
  5109 ;;  cp              1   12[BANK2 ] PTR unsigned char 
  5110 ;;		 -> ?_snprintf(2), 
  5111 ;; Return value:  Size  Location     Type
  5112 ;;                  2   67[BANK1 ] int 
  5113 ;; Registers used:
  5114 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5115 ;; Tracked objects:
  5116 ;;		On entry : 0/0
  5117 ;;		On exit  : 0/0
  5118 ;;		Unchanged: 0/0
  5119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5120 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5121 ;;      Locals:         0       0       0      34       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5122 ;;      Temps:          0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5123 ;;      Totals:         0       0       4      46       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5124 ;;Total ram usage:       50 bytes
  5125 ;; Hardware stack levels used:    1
  5126 ;; Hardware stack levels required when called:    6
  5127 ;; This function calls:
  5128 ;;		_atoi
  5129 ;;		_ctoa
  5130 ;;		_dtoa
  5131 ;;		_efgtoa
  5132 ;;		_fputc
  5133 ;;		_isdigit
  5134 ;;		_isupper
  5135 ;;		_otoa
  5136 ;;		_stoa
  5137 ;;		_strncmp
  5138 ;;		_tolower
  5139 ;;		_utoa
  5140 ;;		_xtoa
  5141 ;; This function is called by:
  5142 ;;		_vfprintf
  5143 ;; This function uses a non-reentrant model
  5144 ;;
  5145                           
  5146                           
  5147                           ;psect for function _vfpfcnvrt
  5148  13BD                     _vfpfcnvrt:	
  5149                           
  5150                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  5151                           
  5152                           ;incstack = 0
  5153                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5154  13BD  0021               	movlb	1	; select bank1
  5155  13BE  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5156  13BF  0086               	movwf	6
  5157  13C0  0187               	clrf	7
  5158  13C1  3F40               	moviw [0]fsr1
  5159  13C2  0022               	movlb	2	; select bank2
  5160  13C3  00A0               	movwf	??_vfpfcnvrt^(0+256)
  5161  13C4  3F41               	moviw [1]fsr1
  5162  13C5  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  5163  13C6  0820               	movf	??_vfpfcnvrt^(0+256),w
  5164  13C7  0084               	movwf	4
  5165  13C8  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  5166  13C9  0085               	movwf	5
  5167  13CA  0012               	moviw fsr0++
  5168  13CB  3A25               	xorlw	37
  5169  13CC  1D03               	btfss	3,2
  5170  13CD  2DD2               	goto	L16
  5171                           
  5172                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  5173  13CE  0021               	movlb	1	; select bank1
  5174  13CF  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5175  13D0  0086               	movwf	6
  5176  13D1  0187               	clrf	7
  5177  13D2  3001               	movlw	1
  5178  13D3  0781               	addwf	1,f
  5179  13D4  3141               	addfsr 1,1
  5180  13D5  1803               	skipnc
  5181  13D6  0A81               	incf	1,f
  5182                           
  5183                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  5184  13D7  0023               	movlb	3	; select bank3
  5185  13D8  01BE               	clrf	_width^(0+384)
  5186  13D9  01BF               	clrf	(_width+1)^(0+384)
  5187  13DA  01C2               	clrf	_flags^(0+384)
  5188  13DB  01C3               	clrf	(_flags+1)^(0+384)
  5189                           
  5190                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  5191  13DC  30FF               	movlw	255
  5192  13DD  00C0               	movwf	_prec^(0+384)
  5193  13DE  30FF               	movlw	255
  5194  13DF  00C1               	movwf	(_prec^(0+384)+1)
  5195                           
  5196                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  5197  13E0  0022               	movlb	2	; select bank2
  5198  13E1  01AD               	clrf	vfpfcnvrt@done^(0+256)
  5199  13E2  01AE               	clrf	(vfpfcnvrt@done+1)^(0+256)
  5200                           
  5201                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  5202  13E3  2C00               	goto	l7509
  5203  13E4                     l721:	
  5204                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 691:       
      +                                    case '-' :
  5205                           
  5206                           
  5207                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  5208  13E4  0023               	movlb	3	; select bank3
  5209  13E5  1442               	bsf	_flags^(0+384),0
  5210  13E6                     l7493:	
  5211                           
  5212                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  5213  13E6  0021               	movlb	1	; select bank1
  5214  13E7  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5215  13E8  0086               	movwf	6
  5216  13E9  0187               	clrf	7
  5217  13EA  3001               	movlw	1
  5218  13EB  0781               	addwf	1,f
  5219  13EC  3141               	addfsr 1,1
  5220  13ED  1803               	skipnc
  5221  13EE  0A81               	incf	1,f
  5222                           
  5223                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  5224  13EF  2C00               	goto	l7509
  5225  13F0                     l723:	
  5226                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 695:       
      +                                    case '0' :
  5227                           
  5228                           
  5229                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  5230  13F0  0023               	movlb	3	; select bank3
  5231  13F1  14C2               	bsf	_flags^(0+384),1
  5232  13F2  2BE6               	goto	l7493
  5233  13F3                     l724:	
  5234                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 699:       
      +                                    case '+' :
  5235                           
  5236                           
  5237                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  5238  13F3  0023               	movlb	3	; select bank3
  5239  13F4  1542               	bsf	_flags^(0+384),2
  5240  13F5  2BE6               	goto	l7493
  5241  13F6                     l725:	
  5242                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 703:       
      +                                    case ' ' :
  5243                           
  5244                           
  5245                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  5246  13F6  0023               	movlb	3	; select bank3
  5247  13F7  15C2               	bsf	_flags^(0+384),3
  5248  13F8  2BE6               	goto	l7493
  5249  13F9                     l726:	
  5250                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 707:       
      +                                    case '#' :
  5251                           
  5252                           
  5253                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  5254  13F9  0023               	movlb	3	; select bank3
  5255  13FA  1642               	bsf	_flags^(0+384),4
  5256  13FB  2BE6               	goto	l7493
  5257  13FC                     l7503:	
  5258                           
  5259                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  5260  13FC  3001               	movlw	1
  5261  13FD  00AD               	movwf	vfpfcnvrt@done^(0+256)
  5262  13FE  3000               	movlw	0
  5263  13FF  00AE               	movwf	(vfpfcnvrt@done^(0+256)+1)
  5264  1400                     l7509:	
  5265                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  5266                           
  5267                           
  5268                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  5269  1400  0022               	movlb	2	; select bank2
  5270  1401  082D               	movf	vfpfcnvrt@done^(0+256),w
  5271  1402  042E               	iorwf	(vfpfcnvrt@done+1)^(0+256),w
  5272  1403  1D03               	btfss	3,2
  5273  1404  2C2C               	goto	l728
  5274  1405  0021               	movlb	1	; select bank1
  5275  1406  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5276  1407  0086               	movwf	6
  5277  1408  0187               	clrf	7
  5278  1409  3F40               	moviw [0]fsr1
  5279  140A  0022               	movlb	2	; select bank2
  5280  140B  00A0               	movwf	??_vfpfcnvrt^(0+256)
  5281  140C  3F41               	moviw [1]fsr1
  5282  140D  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  5283  140E  0820               	movf	??_vfpfcnvrt^(0+256),w
  5284  140F  0084               	movwf	4
  5285  1410  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  5286  1411  0085               	movwf	5
  5287  1412  0800               	movf	0,w	;code access
  5288  1413  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  5289  1414  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
  5290                           
  5291                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5292                           ; Switch size 1, requested type "simple"
  5293                           ; Number of cases is 1, Range of values is 0 to 0
  5294                           ; switch strategies available:
  5295                           ; Name         Instructions Cycles
  5296                           ; simple_byte            4     3 (average)
  5297                           ; direct_byte            8     6 (fixed)
  5298                           ; jumptable            260     6 (fixed)
  5299                           ;	Chosen strategy is simple_byte
  5300  1415  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
  5301  1416  3A00               	xorlw	0	; case 0
  5302  1417  1903               	skipnz
  5303  1418  2C1A               	goto	l8201
  5304  1419  2BFC               	goto	l7503
  5305  141A                     l8201:	
  5306                           
  5307                           ; Switch size 1, requested type "simple"
  5308                           ; Number of cases is 5, Range of values is 32 to 48
  5309                           ; switch strategies available:
  5310                           ; Name         Instructions Cycles
  5311                           ; simple_byte           16     9 (average)
  5312                           ; direct_byte           43     9 (fixed)
  5313                           ; jumptable            263     9 (fixed)
  5314                           ;	Chosen strategy is simple_byte
  5315  141A  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
  5316  141B  3A20               	xorlw	32	; case 32
  5317  141C  1903               	skipnz
  5318  141D  2BF6               	goto	l725
  5319  141E  3A03               	xorlw	3	; case 35
  5320  141F  1903               	skipnz
  5321  1420  2BF9               	goto	l726
  5322  1421  3A08               	xorlw	8	; case 43
  5323  1422  1903               	skipnz
  5324  1423  2BF3               	goto	l724
  5325  1424  3A06               	xorlw	6	; case 45
  5326  1425  1903               	skipnz
  5327  1426  2BE4               	goto	l721
  5328  1427  3A1D               	xorlw	29	; case 48
  5329  1428  1903               	skipnz
  5330  1429  2BF0               	goto	l723
  5331  142A  2BFC               	goto	l7503
  5332  142B  2C00               	goto	l7509
  5333  142C                     l728:	
  5334                           
  5335                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  5336  142C  0023               	movlb	3	; select bank3
  5337  142D  1C42               	btfss	_flags^(0+384),0
  5338  142E  2C33               	goto	l7513
  5339                           
  5340                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  5341  142F  30FD               	movlw	253
  5342  1430  05C2               	andwf	_flags^(0+384),f
  5343  1431  30FF               	movlw	255
  5344  1432  05C3               	andwf	(_flags+1)^(0+384),f
  5345  1433                     l7513:	
  5346                           
  5347                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  5348  1433  0021               	movlb	1	; select bank1
  5349  1434  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5350  1435  0086               	movwf	6
  5351  1436  0187               	clrf	7
  5352  1437  3F40               	moviw [0]fsr1
  5353  1438  0022               	movlb	2	; select bank2
  5354  1439  00A0               	movwf	??_vfpfcnvrt^(0+256)
  5355  143A  3F41               	moviw [1]fsr1
  5356  143B  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  5357  143C  0820               	movf	??_vfpfcnvrt^(0+256),w
  5358  143D  0084               	movwf	4
  5359  143E  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  5360  143F  0085               	movwf	5
  5361  1440  0012               	moviw fsr0++
  5362  1441  3A2A               	xorlw	42
  5363  1442  1D03               	btfss	3,2
  5364  1443  2C65               	goto	l7525
  5365                           
  5366                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  5367  1444  0021               	movlb	1	; select bank1
  5368  1445  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5369  1446  0086               	movwf	6
  5370  1447  0187               	clrf	7
  5371  1448  3001               	movlw	1
  5372  1449  0781               	addwf	1,f
  5373  144A  3141               	addfsr 1,1
  5374  144B  1803               	skipnc
  5375  144C  0A81               	incf	1,f
  5376                           
  5377                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  5378  144D  0866               	movf	vfpfcnvrt@ap^(0+128),w
  5379  144E  0086               	movwf	6
  5380  144F  3001               	movlw	1	; select bank2/3
  5381  1450  0087               	movwf	7
  5382  1451  0801               	movf	1,w
  5383  1452  0084               	movwf	4
  5384  1453  3001               	movlw	1	; select bank2/3
  5385  1454  0085               	movwf	5
  5386  1455  3002               	movlw	2
  5387  1456  0781               	addwf	1,f
  5388  1457  3F00               	moviw [0]fsr0
  5389  1458  0023               	movlb	3	; select bank3
  5390  1459  00BE               	movwf	_width^(0+384)
  5391  145A  3F01               	moviw [1]fsr0
  5392  145B  00BF               	movwf	(_width+1)^(0+384)
  5393                           
  5394                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  5395  145C  1FBF               	btfss	(_width+1)^(0+384),7
  5396  145D  2CA7               	goto	l7535
  5397                           
  5398                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  5399  145E  1442               	bsf	_flags^(0+384),0
  5400                           
  5401                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  5402  145F  09BE               	comf	_width^(0+384),f
  5403  1460  09BF               	comf	(_width+1)^(0+384),f
  5404  1461  0ABE               	incf	_width^(0+384),f
  5405  1462  1903               	skipnz
  5406  1463  0ABF               	incf	(_width+1)^(0+384),f
  5407  1464  2CA7               	goto	l7535
  5408  1465                     l7525:	
  5409                           
  5410                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  5411  1465  0021               	movlb	1	; select bank1
  5412  1466  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5413  1467  0086               	movwf	6
  5414  1468  0187               	clrf	7
  5415  1469  3F40               	moviw [0]fsr1
  5416  146A  00F7               	movwf	atoi@s
  5417  146B  3F41               	moviw [1]fsr1
  5418  146C  00F8               	movwf	atoi@s+1
  5419  146D  31A0  205E  3193   	fcall	_atoi
  5420  1470  0878               	movf	?_atoi+1,w
  5421  1471  0023               	movlb	3	; select bank3
  5422  1472  00BF               	movwf	(_width+1)^(0+384)
  5423  1473  0877               	movf	?_atoi,w
  5424  1474  00BE               	movwf	_width^(0+384)
  5425                           
  5426                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5427  1475  2C7F               	goto	l7529
  5428  1476                     l7527:	
  5429                           
  5430                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  5431  1476  0021               	movlb	1	; select bank1
  5432  1477  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5433  1478  0086               	movwf	6
  5434  1479  0187               	clrf	7
  5435  147A  3001               	movlw	1
  5436  147B  0781               	addwf	1,f
  5437  147C  3141               	addfsr 1,1
  5438  147D  1803               	skipnc
  5439  147E  0A81               	incf	1,f
  5440  147F                     l7529:	
  5441  147F  0021               	movlb	1	; select bank1
  5442  1480  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5443  1481  0086               	movwf	6
  5444  1482  0187               	clrf	7
  5445  1483  3F40               	moviw [0]fsr1
  5446  1484  0022               	movlb	2	; select bank2
  5447  1485  00A0               	movwf	??_vfpfcnvrt^(0+256)
  5448  1486  3F41               	moviw [1]fsr1
  5449  1487  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  5450  1488  0820               	movf	??_vfpfcnvrt^(0+256),w
  5451  1489  0084               	movwf	4
  5452  148A  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  5453  148B  0085               	movwf	5
  5454  148C  0800               	movf	0,w	;code access
  5455  148D  3ED0               	addlw	208
  5456  148E  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  5457  148F  30FF               	movlw	255
  5458  1490  1803               	skipnc
  5459  1491  3000               	movlw	0
  5460  1492  00A3               	movwf	((??_vfpfcnvrt+2)^(0+256)+1)
  5461  1493  3000               	movlw	0
  5462  1494  0223               	subwf	(??_vfpfcnvrt+3)^(0+256),w
  5463  1495  300A               	movlw	10
  5464  1496  1903               	skipnz
  5465  1497  0222               	subwf	(??_vfpfcnvrt+2)^(0+256),w
  5466  1498  1803               	btfsc	3,0
  5467  1499  2C9C               	goto	u11170
  5468  149A  3001               	movlw	1
  5469  149B  2C9D               	goto	u11180
  5470  149C                     u11170:	
  5471  149C  3000               	movlw	0
  5472  149D                     u11180:	
  5473  149D  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  5474  149E  01A5               	clrf	((??_vfpfcnvrt+4)^(0+256)+1)
  5475  149F  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  5476  14A0  00AF               	movwf	_vfpfcnvrt$1018^(0+256)
  5477  14A1  0825               	movf	(??_vfpfcnvrt+5)^(0+256),w
  5478  14A2  00B0               	movwf	(_vfpfcnvrt$1018+1)^(0+256)
  5479  14A3  082F               	movf	_vfpfcnvrt$1018^(0+256),w
  5480  14A4  0430               	iorwf	(_vfpfcnvrt$1018+1)^(0+256),w
  5481  14A5  1D03               	btfss	3,2
  5482  14A6  2C76               	goto	l7527
  5483  14A7                     l7535:	
  5484                           
  5485                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  5486  14A7  0021               	movlb	1	; select bank1
  5487  14A8  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5488  14A9  0086               	movwf	6
  5489  14AA  0187               	clrf	7
  5490  14AB  3F40               	moviw [0]fsr1
  5491  14AC  0022               	movlb	2	; select bank2
  5492  14AD  00A0               	movwf	??_vfpfcnvrt^(0+256)
  5493  14AE  3F41               	moviw [1]fsr1
  5494  14AF  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  5495  14B0  0820               	movf	??_vfpfcnvrt^(0+256),w
  5496  14B1  0084               	movwf	4
  5497  14B2  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  5498  14B3  0085               	movwf	5
  5499  14B4  0012               	moviw fsr0++
  5500  14B5  3A2E               	xorlw	46
  5501  14B6  1D03               	btfss	3,2
  5502  14B7  2D2F               	goto	l7557
  5503                           
  5504                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  5505  14B8  0023               	movlb	3	; select bank3
  5506  14B9  01C0               	clrf	_prec^(0+384)
  5507  14BA  01C1               	clrf	(_prec+1)^(0+384)
  5508                           
  5509                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  5510  14BB  0021               	movlb	1	; select bank1
  5511  14BC  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5512  14BD  0086               	movwf	6
  5513  14BE  0187               	clrf	7
  5514  14BF  3001               	movlw	1
  5515  14C0  0781               	addwf	1,f
  5516  14C1  3141               	addfsr 1,1
  5517  14C2  1803               	skipnc
  5518  14C3  0A81               	incf	1,f
  5519                           
  5520                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  5521  14C4  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5522  14C5  0086               	movwf	6
  5523  14C6  0187               	clrf	7
  5524  14C7  3F40               	moviw [0]fsr1
  5525  14C8  0022               	movlb	2	; select bank2
  5526  14C9  00A0               	movwf	??_vfpfcnvrt^(0+256)
  5527  14CA  3F41               	moviw [1]fsr1
  5528  14CB  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  5529  14CC  0820               	movf	??_vfpfcnvrt^(0+256),w
  5530  14CD  0084               	movwf	4
  5531  14CE  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  5532  14CF  0085               	movwf	5
  5533  14D0  0012               	moviw fsr0++
  5534  14D1  3A2A               	xorlw	42
  5535  14D2  1D03               	btfss	3,2
  5536  14D3  2CED               	goto	l7547
  5537                           
  5538                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  5539  14D4  0021               	movlb	1	; select bank1
  5540  14D5  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5541  14D6  0086               	movwf	6
  5542  14D7  0187               	clrf	7
  5543  14D8  3001               	movlw	1
  5544  14D9  0781               	addwf	1,f
  5545  14DA  3141               	addfsr 1,1
  5546  14DB  1803               	skipnc
  5547  14DC  0A81               	incf	1,f
  5548                           
  5549                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  5550  14DD  0866               	movf	vfpfcnvrt@ap^(0+128),w
  5551  14DE  0086               	movwf	6
  5552  14DF  3001               	movlw	1	; select bank2/3
  5553  14E0  0087               	movwf	7
  5554  14E1  0801               	movf	1,w
  5555  14E2  0084               	movwf	4
  5556  14E3  3001               	movlw	1	; select bank2/3
  5557  14E4  0085               	movwf	5
  5558  14E5  3002               	movlw	2
  5559  14E6  0781               	addwf	1,f
  5560  14E7  3F00               	moviw [0]fsr0
  5561  14E8  0023               	movlb	3	; select bank3
  5562  14E9  00C0               	movwf	_prec^(0+384)
  5563  14EA  3F01               	moviw [1]fsr0
  5564  14EB  00C1               	movwf	(_prec+1)^(0+384)
  5565                           
  5566                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  5567  14EC  2D2F               	goto	l7557
  5568  14ED                     l7547:	
  5569                           
  5570                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  5571  14ED  0021               	movlb	1	; select bank1
  5572  14EE  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5573  14EF  0086               	movwf	6
  5574  14F0  0187               	clrf	7
  5575  14F1  3F40               	moviw [0]fsr1
  5576  14F2  00F7               	movwf	atoi@s
  5577  14F3  3F41               	moviw [1]fsr1
  5578  14F4  00F8               	movwf	atoi@s+1
  5579  14F5  31A0  205E  3193   	fcall	_atoi
  5580  14F8  0878               	movf	?_atoi+1,w
  5581  14F9  0023               	movlb	3	; select bank3
  5582  14FA  00C1               	movwf	(_prec+1)^(0+384)
  5583  14FB  0877               	movf	?_atoi,w
  5584  14FC  00C0               	movwf	_prec^(0+384)
  5585                           
  5586                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5587  14FD  2D07               	goto	l7551
  5588  14FE                     l7549:	
  5589                           
  5590                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  5591  14FE  0021               	movlb	1	; select bank1
  5592  14FF  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5593  1500  0086               	movwf	6
  5594  1501  0187               	clrf	7
  5595  1502  3001               	movlw	1
  5596  1503  0781               	addwf	1,f
  5597  1504  3141               	addfsr 1,1
  5598  1505  1803               	skipnc
  5599  1506  0A81               	incf	1,f
  5600  1507                     l7551:	
  5601  1507  0021               	movlb	1	; select bank1
  5602  1508  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5603  1509  0086               	movwf	6
  5604  150A  0187               	clrf	7
  5605  150B  3F40               	moviw [0]fsr1
  5606  150C  0022               	movlb	2	; select bank2
  5607  150D  00A0               	movwf	??_vfpfcnvrt^(0+256)
  5608  150E  3F41               	moviw [1]fsr1
  5609  150F  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  5610  1510  0820               	movf	??_vfpfcnvrt^(0+256),w
  5611  1511  0084               	movwf	4
  5612  1512  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  5613  1513  0085               	movwf	5
  5614  1514  0800               	movf	0,w	;code access
  5615  1515  3ED0               	addlw	208
  5616  1516  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  5617  1517  30FF               	movlw	255
  5618  1518  1803               	skipnc
  5619  1519  3000               	movlw	0
  5620  151A  00A3               	movwf	((??_vfpfcnvrt+2)^(0+256)+1)
  5621  151B  3000               	movlw	0
  5622  151C  0223               	subwf	(??_vfpfcnvrt+3)^(0+256),w
  5623  151D  300A               	movlw	10
  5624  151E  1903               	skipnz
  5625  151F  0222               	subwf	(??_vfpfcnvrt+2)^(0+256),w
  5626  1520  1803               	btfsc	3,0
  5627  1521  2D24               	goto	u11220
  5628  1522  3001               	movlw	1
  5629  1523  2D25               	goto	u11230
  5630  1524                     u11220:	
  5631  1524  3000               	movlw	0
  5632  1525                     u11230:	
  5633  1525  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  5634  1526  01A5               	clrf	((??_vfpfcnvrt+4)^(0+256)+1)
  5635  1527  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  5636  1528  00B1               	movwf	_vfpfcnvrt$1019^(0+256)
  5637  1529  0825               	movf	(??_vfpfcnvrt+5)^(0+256),w
  5638  152A  00B2               	movwf	(_vfpfcnvrt$1019+1)^(0+256)
  5639  152B  0831               	movf	_vfpfcnvrt$1019^(0+256),w
  5640  152C  0432               	iorwf	(_vfpfcnvrt$1019+1)^(0+256),w
  5641  152D  1D03               	btfss	3,2
  5642  152E  2CFE               	goto	l7549
  5643  152F                     l7557:	
  5644                           
  5645                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  5646  152F  0021               	movlb	1	; select bank1
  5647  1530  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5648  1531  0086               	movwf	6
  5649  1532  0187               	clrf	7
  5650  1533  3F40               	moviw [0]fsr1
  5651  1534  0022               	movlb	2	; select bank2
  5652  1535  00A0               	movwf	??_vfpfcnvrt^(0+256)
  5653  1536  3F41               	moviw [1]fsr1
  5654  1537  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  5655  1538  0820               	movf	??_vfpfcnvrt^(0+256),w
  5656  1539  0084               	movwf	4
  5657  153A  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  5658  153B  0085               	movwf	5
  5659  153C  0800               	movf	0,w	;code access
  5660  153D  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  5661  153E  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
  5662  153F  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
  5663  1540  00F7               	movwf	tolower@c
  5664  1541  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
  5665  1542  00F8               	movwf	tolower@c+1
  5666  1543  31A8  20D9  3193   	fcall	_tolower
  5667  1546  0877               	movf	?_tolower,w
  5668  1547  0022               	movlb	2	; select bank2
  5669  1548  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  5670  1549  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  5671  154A  00B5               	movwf	vfpfcnvrt@ct^(0+256)
  5672                           
  5673                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  5674  154B  0835               	movf	vfpfcnvrt@ct^(0+256),w
  5675  154C  1903               	btfsc	3,2
  5676  154D  2D8F               	goto	l7567
  5677                           
  5678                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  5679  154E  0021               	movlb	1	; select bank1
  5680  154F  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5681  1550  0086               	movwf	6
  5682  1551  0187               	clrf	7
  5683  1552  3F40               	moviw [0]fsr1
  5684  1553  0022               	movlb	2	; select bank2
  5685  1554  00A0               	movwf	??_vfpfcnvrt^(0+256)
  5686  1555  3F41               	moviw [1]fsr1
  5687  1556  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  5688  1557  3001               	movlw	1
  5689  1558  0720               	addwf	??_vfpfcnvrt^(0+256),w
  5690  1559  0084               	movwf	4
  5691  155A  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
  5692  155B  1803               	skipnc
  5693  155C  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
  5694  155D  0085               	movwf	5
  5695  155E  0800               	movf	0,w	;code access
  5696  155F  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  5697  1560  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
  5698  1561  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
  5699  1562  00F7               	movwf	tolower@c
  5700  1563  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
  5701  1564  00F8               	movwf	tolower@c+1
  5702  1565  31A8  20D9  3193   	fcall	_tolower
  5703  1568  0877               	movf	?_tolower,w
  5704  1569  0022               	movlb	2	; select bank2
  5705  156A  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  5706  156B  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  5707  156C  00B6               	movwf	(vfpfcnvrt@ct^(0+256)+1)
  5708                           
  5709                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  5710  156D  0836               	movf	(vfpfcnvrt@ct^(0+256)+1),w
  5711  156E  1903               	btfsc	3,2
  5712  156F  2D8F               	goto	l7567
  5713                           
  5714                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  5715  1570  0021               	movlb	1	; select bank1
  5716  1571  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5717  1572  0086               	movwf	6
  5718  1573  0187               	clrf	7
  5719  1574  3F40               	moviw [0]fsr1
  5720  1575  0022               	movlb	2	; select bank2
  5721  1576  00A0               	movwf	??_vfpfcnvrt^(0+256)
  5722  1577  3F41               	moviw [1]fsr1
  5723  1578  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  5724  1579  3002               	movlw	2
  5725  157A  0720               	addwf	??_vfpfcnvrt^(0+256),w
  5726  157B  0084               	movwf	4
  5727  157C  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
  5728  157D  1803               	skipnc
  5729  157E  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
  5730  157F  0085               	movwf	5
  5731  1580  0800               	movf	0,w	;code access
  5732  1581  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  5733  1582  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
  5734  1583  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
  5735  1584  00F7               	movwf	tolower@c
  5736  1585  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
  5737  1586  00F8               	movwf	tolower@c+1
  5738  1587  31A8  20D9  3193   	fcall	_tolower
  5739  158A  0877               	movf	?_tolower,w
  5740  158B  0022               	movlb	2	; select bank2
  5741  158C  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  5742  158D  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  5743  158E  00B7               	movwf	(vfpfcnvrt@ct^(0+256)+2)
  5744  158F                     l7567:	
  5745                           
  5746                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  5747  158F  0021               	movlb	1	; select bank1
  5748  1590  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5749  1591  0086               	movwf	6
  5750  1592  0187               	clrf	7
  5751  1593  3F40               	moviw [0]fsr1
  5752  1594  0022               	movlb	2	; select bank2
  5753  1595  00A0               	movwf	??_vfpfcnvrt^(0+256)
  5754  1596  3F41               	moviw [1]fsr1
  5755  1597  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  5756  1598  0820               	movf	??_vfpfcnvrt^(0+256),w
  5757  1599  0084               	movwf	4
  5758  159A  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  5759  159B  0085               	movwf	5
  5760  159C  0012               	moviw fsr0++
  5761  159D  3A63               	xorlw	99
  5762  159E  31AE  1D03         	btfss	3,2
  5763  15A0  2EE7               	goto	l7577
  5764                           
  5765                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  5766  15A1  0021               	movlb	1	; select bank1
  5767  15A2  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5768  15A3  0086               	movwf	6
  5769  15A4  0187               	clrf	7
  5770  15A5  3001               	movlw	1
  5771  15A6  0781               	addwf	1,f
  5772  15A7  3141               	addfsr 1,1
  5773  15A8  1803               	skipnc
  5774  15A9  0A81               	incf	1,f
  5775                           
  5776                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5777  15AA  0866               	movf	vfpfcnvrt@ap^(0+128),w
  5778  15AB  0086               	movwf	6
  5779  15AC  3001               	movlw	1	; select bank2/3
  5780  15AD  0087               	movwf	7
  5781  15AE  0801               	movf	1,w
  5782  15AF  0084               	movwf	4
  5783  15B0  3001               	movlw	1	; select bank2/3
  5784  15B1  0085               	movwf	5
  5785  15B2  3002               	movlw	2
  5786  15B3  0781               	addwf	1,f
  5787  15B4  0800               	movf	0,w
  5788  15B5  0022               	movlb	2	; select bank2
  5789  15B6  00A0               	movwf	??_vfpfcnvrt^(0+256)
  5790  15B7  0820               	movf	??_vfpfcnvrt^(0+256),w
  5791  15B8  00C5               	movwf	vfpfcnvrt@c^(0+256)
  5792                           
  5793                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  5794  15B9  0021               	movlb	1	; select bank1
  5795  15BA  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
  5796  15BB  0020               	movlb	0	; select bank0
  5797  15BC  00B1               	movwf	ctoa@fp+1
  5798  15BD  0021               	movlb	1	; select bank1
  5799  15BE  0863               	movf	vfpfcnvrt@fp^(0+128),w
  5800  15BF  0020               	movlb	0	; select bank0
  5801  15C0  00B0               	movwf	ctoa@fp
  5802  15C1  0022               	movlb	2	; select bank2
  5803  15C2  0845               	movf	vfpfcnvrt@c^(0+256),w
  5804  15C3  00A0               	movwf	??_vfpfcnvrt^(0+256)
  5805  15C4  0820               	movf	??_vfpfcnvrt^(0+256),w
  5806  15C5  0020               	movlb	0	; select bank0
  5807  15C6  00B2               	movwf	ctoa@c
  5808  15C7  31A9  2199         	fcall	_ctoa
  5809  15C9  0020               	movlb	0	; select bank0
  5810  15CA  0831               	movf	?_ctoa+1,w
  5811  15CB  0021               	movlb	1	; select bank1
  5812  15CC  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
  5813  15CD  0020               	movlb	0	; select bank0
  5814  15CE  0830               	movf	?_ctoa,w
  5815  15CF  0021               	movlb	1	; select bank1
  5816  15D0  00E3               	movwf	?_vfpfcnvrt^(0+128)
  5817  15D1  0008               	return
  5818  15D2                     L16:	
  5819  15D2                     L15:	
  5820  15D2  318F  2FDA         	ljmp	l7933
  5821                           
  5822                           	psect	text6
  5823  1EA7                     __ptext6:	
  5824 ;; *************** function _xtoa *****************
  5825 ;; Defined at:
  5826 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5827 ;; Parameters:    Size  Location     Type
  5828 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  5829 ;;		 -> vsnprintf@f(6), 
  5830 ;;  d               8   18[BANK0 ] unsigned long long 
  5831 ;;  x               1   26[BANK0 ] unsigned char 
  5832 ;; Auto vars:     Size  Location     Type
  5833 ;;  n               8   43[BANK0 ] unsigned long long 
  5834 ;;  c               2   53[BANK0 ] int 
  5835 ;;  i               2   51[BANK0 ] int 
  5836 ;;  w               2   41[BANK0 ] int 
  5837 ;;  p               2   39[BANK0 ] int 
  5838 ;; Return value:  Size  Location     Type
  5839 ;;                  2   16[BANK0 ] int 
  5840 ;; Registers used:
  5841 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5842 ;; Tracked objects:
  5843 ;;		On entry : 0/0
  5844 ;;		On exit  : 0/0
  5845 ;;		Unchanged: 0/0
  5846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5847 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5848 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5849 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5850 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5851 ;;Total ram usage:       39 bytes
  5852 ;; Hardware stack levels used:    1
  5853 ;; Hardware stack levels required when called:    5
  5854 ;; This function calls:
  5855 ;;		_isalpha
  5856 ;;		_isupper
  5857 ;;		_pad
  5858 ;;		_toupper
  5859 ;; This function is called by:
  5860 ;;		_vfpfcnvrt
  5861 ;; This function uses a non-reentrant model
  5862 ;;
  5863                           
  5864                           
  5865                           ;psect for function _xtoa
  5866  1EA7                     _xtoa:	
  5867                           
  5868                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  5869                           
  5870                           ;incstack = 0
  5871                           ; Regs used in _xtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5872  1EA7  0023               	movlb	3	; select bank3
  5873  1EA8  1BC1               	btfsc	(_prec+1)^(0+384),7
  5874  1EA9  2EAE               	goto	l687
  5875                           
  5876                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  5877  1EAA  30FD               	movlw	253
  5878  1EAB  05C2               	andwf	_flags^(0+384),f
  5879  1EAC  30FF               	movlw	255
  5880  1EAD  05C3               	andwf	(_flags+1)^(0+384),f
  5881  1EAE                     l687:	
  5882                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 631:     }
  5883                           
  5884                           
  5885                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  5886  1EAE  0841               	movf	(_prec+1)^(0+384),w
  5887  1EAF  3A80               	xorlw	128
  5888  1EB0  0020               	movlb	0	; select bank0
  5889  1EB1  00BB               	movwf	??_xtoa
  5890  1EB2  3080               	movlw	128
  5891  1EB3  023B               	subwf	??_xtoa,w
  5892  1EB4  1D03               	skipz
  5893  1EB5  2EB9               	goto	u10895
  5894  1EB6  3001               	movlw	1
  5895  1EB7  0023               	movlb	3	; select bank3
  5896  1EB8  0240               	subwf	_prec^(0+384),w
  5897  1EB9                     u10895:	
  5898  1EB9  1803               	skipnc
  5899  1EBA  2EC1               	goto	l7379
  5900  1EBB  3001               	movlw	1
  5901  1EBC  0020               	movlb	0	; select bank0
  5902  1EBD  00C7               	movwf	xtoa@p
  5903  1EBE  3000               	movlw	0
  5904  1EBF  00C8               	movwf	xtoa@p+1
  5905  1EC0  2EC9               	goto	l691
  5906  1EC1                     l7379:	
  5907  1EC1  0023               	movlb	3	; select bank3
  5908  1EC2  0841               	movf	(_prec+1)^(0+384),w
  5909  1EC3  0020               	movlb	0	; select bank0
  5910  1EC4  00C8               	movwf	xtoa@p+1
  5911  1EC5  0023               	movlb	3	; select bank3
  5912  1EC6  0840               	movf	_prec^(0+384),w
  5913  1EC7  0020               	movlb	0	; select bank0
  5914  1EC8  00C7               	movwf	xtoa@p
  5915  1EC9                     l691:	
  5916                           
  5917                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  5918  1EC9  0023               	movlb	3	; select bank3
  5919  1ECA  083F               	movf	(_width+1)^(0+384),w
  5920  1ECB  0020               	movlb	0	; select bank0
  5921  1ECC  00CA               	movwf	xtoa@w+1
  5922  1ECD  0023               	movlb	3	; select bank3
  5923  1ECE  083E               	movf	_width^(0+384),w
  5924  1ECF  0020               	movlb	0	; select bank0
  5925  1ED0  00C9               	movwf	xtoa@w
  5926                           
  5927                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  5928  1ED1  0023               	movlb	3	; select bank3
  5929  1ED2  1E42               	btfss	_flags^(0+384),4
  5930  1ED3  2ED9               	goto	l7385
  5931                           
  5932                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  5933  1ED4  30FE               	movlw	254
  5934  1ED5  0020               	movlb	0	; select bank0
  5935  1ED6  07C9               	addwf	xtoa@w,f
  5936  1ED7  30FF               	movlw	255
  5937  1ED8  3DCA               	addwfc	xtoa@w+1,f
  5938  1ED9                     l7385:	
  5939                           
  5940                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  5941  1ED9  0020               	movlb	0	; select bank0
  5942  1EDA  0832               	movf	xtoa@d,w
  5943  1EDB  00CB               	movwf	xtoa@n
  5944  1EDC  0833               	movf	xtoa@d+1,w
  5945  1EDD  00CC               	movwf	xtoa@n+1
  5946  1EDE  0834               	movf	xtoa@d+2,w
  5947  1EDF  00CD               	movwf	xtoa@n+2
  5948  1EE0  0835               	movf	xtoa@d+3,w
  5949  1EE1  00CE               	movwf	xtoa@n+3
  5950  1EE2  0836               	movf	xtoa@d+4,w
  5951  1EE3  00CF               	movwf	xtoa@n+4
  5952  1EE4  0837               	movf	xtoa@d+5,w
  5953  1EE5  00D0               	movwf	xtoa@n+5
  5954  1EE6  0838               	movf	xtoa@d+6,w
  5955  1EE7  00D1               	movwf	xtoa@n+6
  5956  1EE8  0839               	movf	xtoa@d+7,w
  5957  1EE9  00D2               	movwf	xtoa@n+7
  5958                           
  5959                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  5960  1EEA  304F               	movlw	79
  5961  1EEB  00D3               	movwf	xtoa@i
  5962  1EEC  3000               	movlw	0
  5963  1EED  00D4               	movwf	xtoa@i+1
  5964                           
  5965                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  5966  1EEE  0024               	movlb	4	; select bank4
  5967  1EEF  01EF               	clrf	(_dbuf^(0+512)+79)
  5968                           
  5969                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5970  1EF0  2F9B               	goto	l7417
  5971  1EF1                     l7389:	
  5972                           
  5973                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  5974  1EF1  30FF               	movlw	255
  5975  1EF2  0020               	movlb	0	; select bank0
  5976  1EF3  07D3               	addwf	xtoa@i,f
  5977  1EF4  30FF               	movlw	255
  5978  1EF5  3DD4               	addwfc	xtoa@i+1,f
  5979                           
  5980                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  5981  1EF6  300F               	movlw	15
  5982  1EF7  054B               	andwf	xtoa@n,w
  5983  1EF8  00D5               	movwf	xtoa@c
  5984  1EF9  3000               	movlw	0
  5985  1EFA  054C               	andwf	xtoa@n+1,w
  5986  1EFB  00D6               	movwf	xtoa@c+1
  5987                           
  5988                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  5989  1EFC  0856               	movf	xtoa@c+1,w
  5990  1EFD  3A80               	xorlw	128
  5991  1EFE  00BB               	movwf	??_xtoa
  5992  1EFF  3080               	movlw	128
  5993  1F00  023B               	subwf	??_xtoa,w
  5994  1F01  1D03               	skipz
  5995  1F02  2F05               	goto	u10915
  5996  1F03  300A               	movlw	10
  5997  1F04  0255               	subwf	xtoa@c,w
  5998  1F05                     u10915:	
  5999  1F05  1C03               	skipc
  6000  1F06  2F0B               	goto	l7393
  6001  1F07  0020               	movlb	0	; select bank0
  6002  1F08  0855               	movf	xtoa@c,w
  6003  1F09  3E57               	addlw	87
  6004  1F0A  2F0E               	goto	L2
  6005  1F0B                     l7393:	
  6006  1F0B  0020               	movlb	0	; select bank0
  6007  1F0C  0855               	movf	xtoa@c,w
  6008  1F0D  3E30               	addlw	48
  6009  1F0E                     L2:	
  6010  1F0E  00D5               	movwf	xtoa@c
  6011  1F0F  3000               	movlw	0
  6012  1F10  3D56               	addwfc	xtoa@c+1,w
  6013  1F11  00D6               	movwf	xtoa@c+1
  6014  1F12  083A               	movf	xtoa@x,w
  6015  1F13  3EBF               	addlw	191
  6016  1F14  00BB               	movwf	??_xtoa
  6017  1F15  30FF               	movlw	255
  6018  1F16  1803               	skipnc
  6019  1F17  3000               	movlw	0
  6020  1F18  00BC               	movwf	??_xtoa+1
  6021  1F19  3000               	movlw	0
  6022  1F1A  023C               	subwf	??_xtoa+1,w
  6023  1F1B  301A               	movlw	26
  6024  1F1C  1903               	skipnz
  6025  1F1D  023B               	subwf	??_xtoa,w
  6026  1F1E  1803               	btfsc	3,0
  6027  1F1F  2F22               	goto	u10920
  6028  1F20  3001               	movlw	1
  6029  1F21  2F23               	goto	u10930
  6030  1F22                     u10920:	
  6031  1F22  3000               	movlw	0
  6032  1F23                     u10930:	
  6033  1F23  00BD               	movwf	??_xtoa+2
  6034  1F24  01BE               	clrf	??_xtoa+3
  6035  1F25  083D               	movf	??_xtoa+2,w
  6036  1F26  00C3               	movwf	_xtoa$1003
  6037  1F27  083E               	movf	??_xtoa+3,w
  6038  1F28  00C4               	movwf	_xtoa$1003+1
  6039  1F29  0843               	movf	_xtoa$1003,w
  6040  1F2A  0444               	iorwf	_xtoa$1003+1,w
  6041  1F2B  1903               	btfsc	3,2
  6042  1F2C  2F59               	goto	l7409
  6043  1F2D  3020               	movlw	32
  6044  1F2E  0455               	iorwf	xtoa@c,w
  6045  1F2F  00BB               	movwf	??_xtoa
  6046  1F30  3000               	movlw	0
  6047  1F31  0456               	iorwf	xtoa@c+1,w
  6048  1F32  00BC               	movwf	??_xtoa+1
  6049  1F33  083B               	movf	??_xtoa,w
  6050  1F34  3E9F               	addlw	159
  6051  1F35  00BD               	movwf	??_xtoa+2
  6052  1F36  30FF               	movlw	255
  6053  1F37  3D3C               	addwfc	??_xtoa+1,w
  6054  1F38  00BE               	movwf	??_xtoa+3
  6055  1F39  3000               	movlw	0
  6056  1F3A  023E               	subwf	??_xtoa+3,w
  6057  1F3B  301A               	movlw	26
  6058  1F3C  1903               	skipnz
  6059  1F3D  023D               	subwf	??_xtoa+2,w
  6060  1F3E  1803               	btfsc	3,0
  6061  1F3F  2F42               	goto	u10950
  6062  1F40  3001               	movlw	1
  6063  1F41  2F43               	goto	u10960
  6064  1F42                     u10950:	
  6065  1F42  3000               	movlw	0
  6066  1F43                     u10960:	
  6067  1F43  00BF               	movwf	??_xtoa+4
  6068  1F44  01C0               	clrf	??_xtoa+5
  6069  1F45  083F               	movf	??_xtoa+4,w
  6070  1F46  00C5               	movwf	_xtoa$1004
  6071  1F47  0840               	movf	??_xtoa+5,w
  6072  1F48  00C6               	movwf	_xtoa$1004+1
  6073  1F49  0845               	movf	_xtoa$1004,w
  6074  1F4A  0446               	iorwf	_xtoa$1004+1,w
  6075  1F4B  1903               	btfsc	3,2
  6076  1F4C  2F59               	goto	l7409
  6077                           
  6078                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  6079  1F4D  0856               	movf	xtoa@c+1,w
  6080  1F4E  00F8               	movwf	toupper@c+1
  6081  1F4F  0855               	movf	xtoa@c,w
  6082  1F50  00F7               	movwf	toupper@c
  6083  1F51  31A8  20FB  319E   	fcall	_toupper
  6084  1F54  0878               	movf	?_toupper+1,w
  6085  1F55  0020               	movlb	0	; select bank0
  6086  1F56  00D6               	movwf	xtoa@c+1
  6087  1F57  0877               	movf	?_toupper,w
  6088  1F58  00D5               	movwf	xtoa@c
  6089  1F59                     l7409:	
  6090                           
  6091                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  6092  1F59  0855               	movf	xtoa@c,w
  6093  1F5A  00BB               	movwf	??_xtoa
  6094  1F5B  0853               	movf	xtoa@i,w
  6095  1F5C  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6096  1F5D  0086               	movwf	6
  6097  1F5E  3002               	movlw	2	; select bank4/5
  6098  1F5F  0087               	movwf	7
  6099  1F60  083B               	movf	??_xtoa,w
  6100  1F61  0081               	movwf	1
  6101                           
  6102                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  6103  1F62  30FF               	movlw	255
  6104  1F63  07C7               	addwf	xtoa@p,f
  6105  1F64  30FF               	movlw	255
  6106  1F65  3DC8               	addwfc	xtoa@p+1,f
  6107                           
  6108                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  6109  1F66  30FF               	movlw	255
  6110  1F67  07C9               	addwf	xtoa@w,f
  6111  1F68  30FF               	movlw	255
  6112  1F69  3DCA               	addwfc	xtoa@w+1,f
  6113                           
  6114                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  6115  1F6A  304B               	movlw	low xtoa@n
  6116  1F6B  0086               	movwf	6
  6117  1F6C  3000               	movlw	high xtoa@n
  6118  1F6D  0087               	movwf	7
  6119  1F6E  3F40               	moviw [0]fsr1
  6120  1F6F  00BB               	movwf	??_xtoa
  6121  1F70  3F41               	moviw [1]fsr1
  6122  1F71  00BC               	movwf	??_xtoa+1
  6123  1F72  3F42               	moviw [2]fsr1
  6124  1F73  00BD               	movwf	??_xtoa+2
  6125  1F74  3F43               	moviw [3]fsr1
  6126  1F75  00BE               	movwf	??_xtoa+3
  6127  1F76  3F44               	moviw [4]fsr1
  6128  1F77  00BF               	movwf	??_xtoa+4
  6129  1F78  3F45               	moviw [5]fsr1
  6130  1F79  00C0               	movwf	??_xtoa+5
  6131  1F7A  3F46               	moviw [6]fsr1
  6132  1F7B  00C1               	movwf	??_xtoa+6
  6133  1F7C  3F47               	moviw [7]fsr1
  6134  1F7D  00C2               	movwf	??_xtoa+7
  6135  1F7E  3004               	movlw	4
  6136  1F7F                     u10985:	
  6137  1F7F  0020               	movlb	0	; select bank0
  6138  1F80  36C2               	lsrf	??_xtoa+7,f
  6139  1F81  0CC1               	rrf	??_xtoa+6,f
  6140  1F82  0CC0               	rrf	??_xtoa+5,f
  6141  1F83  0CBF               	rrf	??_xtoa+4,f
  6142  1F84  0CBE               	rrf	??_xtoa+3,f
  6143  1F85  0CBD               	rrf	??_xtoa+2,f
  6144  1F86  0CBC               	rrf	??_xtoa+1,f
  6145  1F87  0CBB               	rrf	??_xtoa,f
  6146  1F88  0B89               	decfsz	9,f
  6147  1F89  2F7F               	goto	u10985
  6148  1F8A  0020               	movlb	0	; select bank0
  6149  1F8B  0842               	movf	??_xtoa+7,w
  6150  1F8C  00D2               	movwf	xtoa@n+7
  6151  1F8D  0841               	movf	??_xtoa+6,w
  6152  1F8E  00D1               	movwf	xtoa@n+6
  6153  1F8F  0840               	movf	??_xtoa+5,w
  6154  1F90  00D0               	movwf	xtoa@n+5
  6155  1F91  083F               	movf	??_xtoa+4,w
  6156  1F92  00CF               	movwf	xtoa@n+4
  6157  1F93  083E               	movf	??_xtoa+3,w
  6158  1F94  00CE               	movwf	xtoa@n+3
  6159  1F95  083D               	movf	??_xtoa+2,w
  6160  1F96  00CD               	movwf	xtoa@n+2
  6161  1F97  083C               	movf	??_xtoa+1,w
  6162  1F98  00CC               	movwf	xtoa@n+1
  6163  1F99  083B               	movf	??_xtoa,w
  6164  1F9A  00CB               	movwf	xtoa@n
  6165  1F9B                     l7417:	
  6166                           
  6167                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6168  1F9B  0020               	movlb	0	; select bank0
  6169  1F9C  0854               	movf	xtoa@i+1,w
  6170  1F9D  3A80               	xorlw	128
  6171  1F9E  00BB               	movwf	??_xtoa
  6172  1F9F  3080               	movlw	128
  6173  1FA0  023B               	subwf	??_xtoa,w
  6174  1FA1  1D03               	skipz
  6175  1FA2  2FA5               	goto	u10995
  6176  1FA3  3002               	movlw	2
  6177  1FA4  0253               	subwf	xtoa@i,w
  6178  1FA5                     u10995:	
  6179  1FA5  1C03               	skipc
  6180  1FA6  2FCC               	goto	l712
  6181  1FA7  0020               	movlb	0	; select bank0
  6182  1FA8  084B               	movf	xtoa@n,w
  6183  1FA9  044C               	iorwf	xtoa@n+1,w
  6184  1FAA  044D               	iorwf	xtoa@n+2,w
  6185  1FAB  044E               	iorwf	xtoa@n+3,w
  6186  1FAC  044F               	iorwf	xtoa@n+4,w
  6187  1FAD  0450               	iorwf	xtoa@n+5,w
  6188  1FAE  0451               	iorwf	xtoa@n+6,w
  6189  1FAF  0452               	iorwf	xtoa@n+7,w
  6190  1FB0  1D03               	skipz
  6191  1FB1  2EF1               	goto	l7389
  6192  1FB2  0848               	movf	xtoa@p+1,w
  6193  1FB3  3A80               	xorlw	128
  6194  1FB4  00BB               	movwf	??_xtoa
  6195  1FB5  3080               	movlw	128
  6196  1FB6  023B               	subwf	??_xtoa,w
  6197  1FB7  1D03               	skipz
  6198  1FB8  2FBB               	goto	u11015
  6199  1FB9  3001               	movlw	1
  6200  1FBA  0247               	subwf	xtoa@p,w
  6201  1FBB                     u11015:	
  6202  1FBB  1803               	skipnc
  6203  1FBC  2EF1               	goto	l7389
  6204  1FBD  0020               	movlb	0	; select bank0
  6205  1FBE  084A               	movf	xtoa@w+1,w
  6206  1FBF  3A80               	xorlw	128
  6207  1FC0  00BB               	movwf	??_xtoa
  6208  1FC1  3080               	movlw	128
  6209  1FC2  023B               	subwf	??_xtoa,w
  6210  1FC3  1D03               	skipz
  6211  1FC4  2FC7               	goto	u11025
  6212  1FC5  3001               	movlw	1
  6213  1FC6  0249               	subwf	xtoa@w,w
  6214  1FC7                     u11025:	
  6215  1FC7  1C03               	skipc
  6216  1FC8  2FCC               	goto	l712
  6217  1FC9  0023               	movlb	3	; select bank3
  6218  1FCA  18C2               	btfsc	_flags^(0+384),1
  6219  1FCB  2EF1               	goto	l7389
  6220  1FCC                     l712:	
  6221                           
  6222                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  6223  1FCC  0023               	movlb	3	; select bank3
  6224  1FCD  1E42               	btfss	_flags^(0+384),4
  6225  1FCE  2FEA               	goto	l7433
  6226                           
  6227                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  6228  1FCF  30FF               	movlw	255
  6229  1FD0  0020               	movlb	0	; select bank0
  6230  1FD1  07D3               	addwf	xtoa@i,f
  6231  1FD2  30FF               	movlw	255
  6232  1FD3  3DD4               	addwfc	xtoa@i+1,f
  6233                           
  6234                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  6235  1FD4  083A               	movf	xtoa@x,w
  6236  1FD5  00BB               	movwf	??_xtoa
  6237  1FD6  0853               	movf	xtoa@i,w
  6238  1FD7  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6239  1FD8  0086               	movwf	6
  6240  1FD9  3002               	movlw	2	; select bank4/5
  6241  1FDA  0087               	movwf	7
  6242  1FDB  083B               	movf	??_xtoa,w
  6243  1FDC  0081               	movwf	1
  6244                           
  6245                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  6246  1FDD  30FF               	movlw	255
  6247  1FDE  07D3               	addwf	xtoa@i,f
  6248  1FDF  30FF               	movlw	255
  6249  1FE0  3DD4               	addwfc	xtoa@i+1,f
  6250                           
  6251                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  6252  1FE1  3030               	movlw	48
  6253  1FE2  00BB               	movwf	??_xtoa
  6254  1FE3  0853               	movf	xtoa@i,w
  6255  1FE4  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6256  1FE5  0086               	movwf	6
  6257  1FE6  3002               	movlw	2	; select bank4/5
  6258  1FE7  0087               	movwf	7
  6259  1FE8  083B               	movf	??_xtoa,w
  6260  1FE9  0081               	movwf	1
  6261  1FEA                     l7433:	
  6262                           
  6263                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  6264  1FEA  0020               	movlb	0	; select bank0
  6265  1FEB  0831               	movf	xtoa@fp+1,w
  6266  1FEC  00A7               	movwf	pad@fp+1
  6267  1FED  0830               	movf	xtoa@fp,w
  6268  1FEE  00A6               	movwf	pad@fp
  6269  1FEF  0853               	movf	xtoa@i,w
  6270  1FF0  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6271  1FF1  00BB               	movwf	??_xtoa
  6272  1FF2  083B               	movf	??_xtoa,w
  6273  1FF3  00A8               	movwf	pad@buf
  6274  1FF4  084A               	movf	xtoa@w+1,w
  6275  1FF5  00AA               	movwf	pad@p+1
  6276  1FF6  0849               	movf	xtoa@w,w
  6277  1FF7  00A9               	movwf	pad@p
  6278  1FF8  31AB  2307         	fcall	_pad
  6279  1FFA  0020               	movlb	0	; select bank0
  6280  1FFB  0827               	movf	?_pad+1,w
  6281  1FFC  00B1               	movwf	?_xtoa+1
  6282  1FFD  0826               	movf	?_pad,w
  6283  1FFE  00B0               	movwf	?_xtoa
  6284  1FFF  0008               	return
  6285  2000                     __end_of_xtoa:	
  6286                           
  6287                           	psect	text7
  6288  28FB                     __ptext7:	
  6289 ;; *************** function _toupper *****************
  6290 ;; Defined at:
  6291 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  6292 ;; Parameters:    Size  Location     Type
  6293 ;;  c               2    7[COMMON] int 
  6294 ;; Auto vars:     Size  Location     Type
  6295 ;;		None
  6296 ;; Return value:  Size  Location     Type
  6297 ;;                  2    7[COMMON] int 
  6298 ;; Registers used:
  6299 ;;		wreg, status,2, status,0
  6300 ;; Tracked objects:
  6301 ;;		On entry : 0/0
  6302 ;;		On exit  : 0/0
  6303 ;;		Unchanged: 0/0
  6304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6305 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6306 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6307 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6308 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6309 ;;Total ram usage:        8 bytes
  6310 ;; Hardware stack levels used:    1
  6311 ;; Hardware stack levels required when called:    2
  6312 ;; This function calls:
  6313 ;;		_islower
  6314 ;; This function is called by:
  6315 ;;		_xtoa
  6316 ;; This function uses a non-reentrant model
  6317 ;;
  6318                           
  6319                           
  6320                           ;psect for function _toupper
  6321  28FB                     _toupper:	
  6322                           
  6323                           ;incstack = 0
  6324                           ; Regs used in _toupper: [wreg+status,2+status,0]
  6325  28FB  0877               	movf	toupper@c,w
  6326  28FC  3E9F               	addlw	159
  6327  28FD  0020               	movlb	0	; select bank0
  6328  28FE  00A0               	movwf	??_toupper
  6329  28FF  30FF               	movlw	255
  6330  2900  3D78               	addwfc	toupper@c+1,w
  6331  2901  00A1               	movwf	??_toupper+1
  6332  2902  3000               	movlw	0
  6333  2903  0221               	subwf	??_toupper+1,w
  6334  2904  301A               	movlw	26
  6335  2905  1903               	skipnz
  6336  2906  0220               	subwf	??_toupper,w
  6337  2907  1803               	btfsc	3,0
  6338  2908  290B               	goto	u9870
  6339  2909  3001               	movlw	1
  6340  290A  290C               	goto	u9880
  6341  290B                     u9870:	
  6342  290B  3000               	movlw	0
  6343  290C                     u9880:	
  6344  290C  00A2               	movwf	??_toupper+2
  6345  290D  01A3               	clrf	??_toupper+3
  6346  290E  0822               	movf	??_toupper+2,w
  6347  290F  00F9               	movwf	_toupper$1610
  6348  2910  0823               	movf	??_toupper+3,w
  6349  2911  00FA               	movwf	_toupper$1610+1
  6350  2912  0879               	movf	_toupper$1610,w
  6351  2913  047A               	iorwf	_toupper$1610+1,w
  6352  2914  1903               	btfsc	3,2
  6353  2915  0008               	return
  6354  2916  305F               	movlw	95
  6355  2917  0577               	andwf	toupper@c,w
  6356  2918  00F7               	movwf	?_toupper
  6357  2919  3000               	movlw	0
  6358  291A  0578               	andwf	toupper@c+1,w
  6359  291B  00F8               	movwf	?_toupper+1
  6360  291C  0008               	return
  6361  291D                     __end_of_toupper:	
  6362                           
  6363                           	psect	text8
  6364  3763                     __ptext8:	
  6365 ;; *************** function _islower *****************
  6366 ;; Defined at:
  6367 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  6368 ;; Parameters:    Size  Location     Type
  6369 ;;  c               2    1[COMMON] int 
  6370 ;; Auto vars:     Size  Location     Type
  6371 ;;		None
  6372 ;; Return value:  Size  Location     Type
  6373 ;;                  2    1[COMMON] int 
  6374 ;; Registers used:
  6375 ;;		wreg, status,2, status,0
  6376 ;; Tracked objects:
  6377 ;;		On entry : 0/0
  6378 ;;		On exit  : 0/0
  6379 ;;		Unchanged: 0/0
  6380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6381 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6383 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6384 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6385 ;;Total ram usage:        6 bytes
  6386 ;; Hardware stack levels used:    1
  6387 ;; Hardware stack levels required when called:    1
  6388 ;; This function calls:
  6389 ;;		Nothing
  6390 ;; This function is called by:
  6391 ;;		_toupper
  6392 ;; This function uses a non-reentrant model
  6393 ;;
  6394                           
  6395                           
  6396                           ;psect for function _islower
  6397  3763                     _islower:	
  6398                           
  6399                           ;incstack = 0
  6400                           ; Regs used in _islower: [wreg+status,2+status,0]
  6401  3763  0871               	movf	islower@c,w
  6402  3764  3E9F               	addlw	159
  6403  3765  00F3               	movwf	??_islower
  6404  3766  30FF               	movlw	255
  6405  3767  3D72               	addwfc	islower@c+1,w
  6406  3768  00F4               	movwf	??_islower+1
  6407  3769  3000               	movlw	0
  6408  376A  0274               	subwf	??_islower+1,w
  6409  376B  301A               	movlw	26
  6410  376C  1903               	skipnz
  6411  376D  0273               	subwf	??_islower,w
  6412  376E  1803               	btfsc	3,0
  6413  376F  2F72               	goto	u9780
  6414  3770  3001               	movlw	1
  6415  3771  2F73               	goto	u9790
  6416  3772                     u9780:	
  6417  3772  3000               	movlw	0
  6418  3773                     u9790:	
  6419  3773  00F5               	movwf	??_islower+2
  6420  3774  01F6               	clrf	??_islower+3
  6421  3775  0875               	movf	??_islower+2,w
  6422  3776  00F1               	movwf	?_islower
  6423  3777  0876               	movf	??_islower+3,w
  6424  3778  00F2               	movwf	?_islower+1
  6425  3779  0008               	return
  6426  377A                     __end_of_islower:	
  6427                           
  6428                           	psect	text9
  6429  37E3                     __ptext9:	
  6430 ;; *************** function _isalpha *****************
  6431 ;; Defined at:
  6432 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  6433 ;; Parameters:    Size  Location     Type
  6434 ;;  c               2    1[COMMON] int 
  6435 ;; Auto vars:     Size  Location     Type
  6436 ;;		None
  6437 ;; Return value:  Size  Location     Type
  6438 ;;                  2    1[COMMON] int 
  6439 ;; Registers used:
  6440 ;;		wreg, status,2, status,0
  6441 ;; Tracked objects:
  6442 ;;		On entry : 0/0
  6443 ;;		On exit  : 0/0
  6444 ;;		Unchanged: 0/0
  6445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6446 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6448 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6449 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6450 ;;Total ram usage:        8 bytes
  6451 ;; Hardware stack levels used:    1
  6452 ;; Hardware stack levels required when called:    1
  6453 ;; This function calls:
  6454 ;;		Nothing
  6455 ;; This function is called by:
  6456 ;;		_xtoa
  6457 ;; This function uses a non-reentrant model
  6458 ;;
  6459                           
  6460                           
  6461                           ;psect for function _isalpha
  6462  37E3                     _isalpha:	
  6463                           
  6464                           ;incstack = 0
  6465                           ; Regs used in _isalpha: [wreg+status,2+status,0]
  6466  37E3  3020               	movlw	32
  6467  37E4  0471               	iorwf	isalpha@c,w
  6468  37E5  00F3               	movwf	??_isalpha
  6469  37E6  3000               	movlw	0
  6470  37E7  0472               	iorwf	isalpha@c+1,w
  6471  37E8  00F4               	movwf	??_isalpha+1
  6472  37E9  0873               	movf	??_isalpha,w
  6473  37EA  3E9F               	addlw	159
  6474  37EB  00F5               	movwf	??_isalpha+2
  6475  37EC  30FF               	movlw	255
  6476  37ED  3D74               	addwfc	??_isalpha+1,w
  6477  37EE  00F6               	movwf	??_isalpha+3
  6478  37EF  3000               	movlw	0
  6479  37F0  0276               	subwf	??_isalpha+3,w
  6480  37F1  301A               	movlw	26
  6481  37F2  1903               	skipnz
  6482  37F3  0275               	subwf	??_isalpha+2,w
  6483  37F4  1803               	btfsc	3,0
  6484  37F5  2FF8               	goto	u5530
  6485  37F6  3001               	movlw	1
  6486  37F7  2FF9               	goto	u5540
  6487  37F8                     u5530:	
  6488  37F8  3000               	movlw	0
  6489  37F9                     u5540:	
  6490  37F9  00F7               	movwf	??_isalpha+4
  6491  37FA  01F8               	clrf	??_isalpha+5
  6492  37FB  0877               	movf	??_isalpha+4,w
  6493  37FC  00F1               	movwf	?_isalpha
  6494  37FD  0878               	movf	??_isalpha+5,w
  6495  37FE  00F2               	movwf	?_isalpha+1
  6496  37FF  0008               	return
  6497  3800                     __end_of_isalpha:	
  6498                           
  6499                           	psect	text10
  6500  271F                     __ptext10:	
  6501 ;; *************** function _utoa *****************
  6502 ;; Defined at:
  6503 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6504 ;; Parameters:    Size  Location     Type
  6505 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  6506 ;;		 -> vsnprintf@f(6), 
  6507 ;;  d               8   18[BANK0 ] unsigned long long 
  6508 ;; Auto vars:     Size  Location     Type
  6509 ;;  n               8   31[BANK0 ] unsigned long long 
  6510 ;;  i               2   39[BANK0 ] int 
  6511 ;;  w               2   29[BANK0 ] int 
  6512 ;;  p               2   27[BANK0 ] int 
  6513 ;; Return value:  Size  Location     Type
  6514 ;;                  2   16[BANK0 ] int 
  6515 ;; Registers used:
  6516 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6517 ;; Tracked objects:
  6518 ;;		On entry : 0/0
  6519 ;;		On exit  : 0/0
  6520 ;;		Unchanged: 0/0
  6521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6522 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6523 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6524 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6525 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6526 ;;Total ram usage:       25 bytes
  6527 ;; Hardware stack levels used:    1
  6528 ;; Hardware stack levels required when called:    5
  6529 ;; This function calls:
  6530 ;;		___lodiv
  6531 ;;		___lomod
  6532 ;;		_pad
  6533 ;; This function is called by:
  6534 ;;		_vfpfcnvrt
  6535 ;; This function uses a non-reentrant model
  6536 ;;
  6537                           
  6538                           
  6539                           ;psect for function _utoa
  6540  271F                     _utoa:	
  6541                           
  6542                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  6543                           
  6544                           ;incstack = 0
  6545                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6546  271F  0023               	movlb	3	; select bank3
  6547  2720  1BC1               	btfsc	(_prec+1)^(0+384),7
  6548  2721  2F26               	goto	l672
  6549                           
  6550                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  6551  2722  30FD               	movlw	253
  6552  2723  05C2               	andwf	_flags^(0+384),f
  6553  2724  30FF               	movlw	255
  6554  2725  05C3               	andwf	(_flags+1)^(0+384),f
  6555  2726                     l672:	
  6556                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 601:     }
  6557                           
  6558                           
  6559                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  6560  2726  0841               	movf	(_prec+1)^(0+384),w
  6561  2727  3A80               	xorlw	128
  6562  2728  0020               	movlb	0	; select bank0
  6563  2729  00BA               	movwf	??_utoa
  6564  272A  3080               	movlw	128
  6565  272B  023A               	subwf	??_utoa,w
  6566  272C  1D03               	skipz
  6567  272D  2F31               	goto	u10825
  6568  272E  3001               	movlw	1
  6569  272F  0023               	movlb	3	; select bank3
  6570  2730  0240               	subwf	_prec^(0+384),w
  6571  2731                     u10825:	
  6572  2731  1803               	skipnc
  6573  2732  2F39               	goto	l7343
  6574  2733  3001               	movlw	1
  6575  2734  0020               	movlb	0	; select bank0
  6576  2735  00BB               	movwf	utoa@p
  6577  2736  3000               	movlw	0
  6578  2737  00BC               	movwf	utoa@p+1
  6579  2738  2F41               	goto	l676
  6580  2739                     l7343:	
  6581  2739  0023               	movlb	3	; select bank3
  6582  273A  0841               	movf	(_prec+1)^(0+384),w
  6583  273B  0020               	movlb	0	; select bank0
  6584  273C  00BC               	movwf	utoa@p+1
  6585  273D  0023               	movlb	3	; select bank3
  6586  273E  0840               	movf	_prec^(0+384),w
  6587  273F  0020               	movlb	0	; select bank0
  6588  2740  00BB               	movwf	utoa@p
  6589  2741                     l676:	
  6590                           
  6591                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  6592  2741  0023               	movlb	3	; select bank3
  6593  2742  083F               	movf	(_width+1)^(0+384),w
  6594  2743  0020               	movlb	0	; select bank0
  6595  2744  00BE               	movwf	utoa@w+1
  6596  2745  0023               	movlb	3	; select bank3
  6597  2746  083E               	movf	_width^(0+384),w
  6598  2747  0020               	movlb	0	; select bank0
  6599  2748  00BD               	movwf	utoa@w
  6600                           
  6601                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  6602  2749  0832               	movf	utoa@d,w
  6603  274A  00BF               	movwf	utoa@n
  6604  274B  0833               	movf	utoa@d+1,w
  6605  274C  00C0               	movwf	utoa@n+1
  6606  274D  0834               	movf	utoa@d+2,w
  6607  274E  00C1               	movwf	utoa@n+2
  6608  274F  0835               	movf	utoa@d+3,w
  6609  2750  00C2               	movwf	utoa@n+3
  6610  2751  0836               	movf	utoa@d+4,w
  6611  2752  00C3               	movwf	utoa@n+4
  6612  2753  0837               	movf	utoa@d+5,w
  6613  2754  00C4               	movwf	utoa@n+5
  6614  2755  0838               	movf	utoa@d+6,w
  6615  2756  00C5               	movwf	utoa@n+6
  6616  2757  0839               	movf	utoa@d+7,w
  6617  2758  00C6               	movwf	utoa@n+7
  6618                           
  6619                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  6620  2759  304F               	movlw	79
  6621  275A  00C7               	movwf	utoa@i
  6622  275B  3000               	movlw	0
  6623  275C  00C8               	movwf	utoa@i+1
  6624                           
  6625                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  6626  275D  0024               	movlb	4	; select bank4
  6627  275E  01EF               	clrf	(_dbuf^(0+512)+79)
  6628                           
  6629                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6630  275F  2FE5               	goto	l7359
  6631  2760                     l7361:	
  6632  2760  083F               	movf	utoa@n,w
  6633  2761  0440               	iorwf	utoa@n+1,w
  6634  2762  0441               	iorwf	utoa@n+2,w
  6635  2763  0442               	iorwf	utoa@n+3,w
  6636  2764  0443               	iorwf	utoa@n+4,w
  6637  2765  0444               	iorwf	utoa@n+5,w
  6638  2766  0445               	iorwf	utoa@n+6,w
  6639  2767  0446               	iorwf	utoa@n+7,w
  6640  2768  1D03               	skipz
  6641  2769  2F84               	goto	l7349
  6642  276A  083C               	movf	utoa@p+1,w
  6643  276B  3A80               	xorlw	128
  6644  276C  00BA               	movwf	??_utoa
  6645  276D  3080               	movlw	128
  6646  276E  023A               	subwf	??_utoa,w
  6647  276F  1D03               	skipz
  6648  2770  2F73               	goto	u10855
  6649  2771  3001               	movlw	1
  6650  2772  023B               	subwf	utoa@p,w
  6651  2773                     u10855:	
  6652  2773  1803               	skipnc
  6653  2774  2F84               	goto	l7349
  6654  2775  0020               	movlb	0	; select bank0
  6655  2776  083E               	movf	utoa@w+1,w
  6656  2777  3A80               	xorlw	128
  6657  2778  00BA               	movwf	??_utoa
  6658  2779  3080               	movlw	128
  6659  277A  023A               	subwf	??_utoa,w
  6660  277B  1D03               	skipz
  6661  277C  2F7F               	goto	u10865
  6662  277D  3001               	movlw	1
  6663  277E  023D               	subwf	utoa@w,w
  6664  277F                     u10865:	
  6665  277F  1C03               	skipc
  6666  2780  2FEA               	goto	l7369
  6667  2781  0023               	movlb	3	; select bank3
  6668  2782  1CC2               	btfss	_flags^(0+384),1
  6669  2783  2FEA               	goto	l7369
  6670  2784                     l7349:	
  6671                           
  6672                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  6673  2784  30FF               	movlw	255
  6674  2785  0020               	movlb	0	; select bank0
  6675  2786  07C7               	addwf	utoa@i,f
  6676  2787  30FF               	movlw	255
  6677  2788  3DC8               	addwfc	utoa@i+1,f
  6678                           
  6679                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  6680  2789  300A               	movlw	10
  6681  278A  00A0               	movwf	___lomod@divisor
  6682  278B  01A1               	clrf	___lomod@divisor+1
  6683  278C  01A2               	clrf	___lomod@divisor+2
  6684  278D  01A3               	clrf	___lomod@divisor+3
  6685  278E  01A4               	clrf	___lomod@divisor+4
  6686  278F  01A5               	clrf	___lomod@divisor+5
  6687  2790  01A6               	clrf	___lomod@divisor+6
  6688  2791  01A7               	clrf	___lomod@divisor+7
  6689  2792  083F               	movf	utoa@n,w
  6690  2793  00A8               	movwf	___lomod@dividend
  6691  2794  0840               	movf	utoa@n+1,w
  6692  2795  00A9               	movwf	___lomod@dividend+1
  6693  2796  0841               	movf	utoa@n+2,w
  6694  2797  00AA               	movwf	___lomod@dividend+2
  6695  2798  0842               	movf	utoa@n+3,w
  6696  2799  00AB               	movwf	___lomod@dividend+3
  6697  279A  0843               	movf	utoa@n+4,w
  6698  279B  00AC               	movwf	___lomod@dividend+4
  6699  279C  0844               	movf	utoa@n+5,w
  6700  279D  00AD               	movwf	___lomod@dividend+5
  6701  279E  0845               	movf	utoa@n+6,w
  6702  279F  00AE               	movwf	___lomod@dividend+6
  6703  27A0  0846               	movf	utoa@n+7,w
  6704  27A1  00AF               	movwf	___lomod@dividend+7
  6705  27A2  31AC  240F  31A7   	fcall	___lomod
  6706  27A5  0020               	movlb	0	; select bank0
  6707  27A6  0820               	movf	?___lomod,w
  6708  27A7  3E30               	addlw	48
  6709  27A8  00BA               	movwf	??_utoa
  6710  27A9  0847               	movf	utoa@i,w
  6711  27AA  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6712  27AB  0086               	movwf	6
  6713  27AC  3002               	movlw	2	; select bank4/5
  6714  27AD  0087               	movwf	7
  6715  27AE  083A               	movf	??_utoa,w
  6716  27AF  0081               	movwf	1
  6717                           
  6718                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  6719  27B0  30FF               	movlw	255
  6720  27B1  07BB               	addwf	utoa@p,f
  6721  27B2  30FF               	movlw	255
  6722  27B3  3DBC               	addwfc	utoa@p+1,f
  6723                           
  6724                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  6725  27B4  30FF               	movlw	255
  6726  27B5  07BD               	addwf	utoa@w,f
  6727  27B6  30FF               	movlw	255
  6728  27B7  3DBE               	addwfc	utoa@w+1,f
  6729                           
  6730                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  6731  27B8  300A               	movlw	10
  6732  27B9  00A0               	movwf	___lodiv@divisor
  6733  27BA  01A1               	clrf	___lodiv@divisor+1
  6734  27BB  01A2               	clrf	___lodiv@divisor+2
  6735  27BC  01A3               	clrf	___lodiv@divisor+3
  6736  27BD  01A4               	clrf	___lodiv@divisor+4
  6737  27BE  01A5               	clrf	___lodiv@divisor+5
  6738  27BF  01A6               	clrf	___lodiv@divisor+6
  6739  27C0  01A7               	clrf	___lodiv@divisor+7
  6740  27C1  083F               	movf	utoa@n,w
  6741  27C2  00A8               	movwf	___lodiv@dividend
  6742  27C3  0840               	movf	utoa@n+1,w
  6743  27C4  00A9               	movwf	___lodiv@dividend+1
  6744  27C5  0841               	movf	utoa@n+2,w
  6745  27C6  00AA               	movwf	___lodiv@dividend+2
  6746  27C7  0842               	movf	utoa@n+3,w
  6747  27C8  00AB               	movwf	___lodiv@dividend+3
  6748  27C9  0843               	movf	utoa@n+4,w
  6749  27CA  00AC               	movwf	___lodiv@dividend+4
  6750  27CB  0844               	movf	utoa@n+5,w
  6751  27CC  00AD               	movwf	___lodiv@dividend+5
  6752  27CD  0845               	movf	utoa@n+6,w
  6753  27CE  00AE               	movwf	___lodiv@dividend+6
  6754  27CF  0846               	movf	utoa@n+7,w
  6755  27D0  00AF               	movwf	___lodiv@dividend+7
  6756  27D1  31AD  256C  31A7   	fcall	___lodiv
  6757  27D4  0020               	movlb	0	; select bank0
  6758  27D5  0820               	movf	?___lodiv,w
  6759  27D6  00BF               	movwf	utoa@n
  6760  27D7  0821               	movf	?___lodiv+1,w
  6761  27D8  00C0               	movwf	utoa@n+1
  6762  27D9  0822               	movf	?___lodiv+2,w
  6763  27DA  00C1               	movwf	utoa@n+2
  6764  27DB  0823               	movf	?___lodiv+3,w
  6765  27DC  00C2               	movwf	utoa@n+3
  6766  27DD  0824               	movf	?___lodiv+4,w
  6767  27DE  00C3               	movwf	utoa@n+4
  6768  27DF  0825               	movf	?___lodiv+5,w
  6769  27E0  00C4               	movwf	utoa@n+5
  6770  27E1  0826               	movf	?___lodiv+6,w
  6771  27E2  00C5               	movwf	utoa@n+6
  6772  27E3  0827               	movf	?___lodiv+7,w
  6773  27E4  00C6               	movwf	utoa@n+7
  6774  27E5                     l7359:	
  6775                           
  6776                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6777  27E5  0020               	movlb	0	; select bank0
  6778  27E6  0847               	movf	utoa@i,w
  6779  27E7  0448               	iorwf	utoa@i+1,w
  6780  27E8  1D03               	btfss	3,2
  6781  27E9  2F60               	goto	l7361
  6782  27EA                     l7369:	
  6783                           
  6784                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  6785  27EA  0020               	movlb	0	; select bank0
  6786  27EB  0831               	movf	utoa@fp+1,w
  6787  27EC  00A7               	movwf	pad@fp+1
  6788  27ED  0830               	movf	utoa@fp,w
  6789  27EE  00A6               	movwf	pad@fp
  6790  27EF  0847               	movf	utoa@i,w
  6791  27F0  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6792  27F1  00BA               	movwf	??_utoa
  6793  27F2  083A               	movf	??_utoa,w
  6794  27F3  00A8               	movwf	pad@buf
  6795  27F4  083E               	movf	utoa@w+1,w
  6796  27F5  00AA               	movwf	pad@p+1
  6797  27F6  083D               	movf	utoa@w,w
  6798  27F7  00A9               	movwf	pad@p
  6799  27F8  31AB  2307         	fcall	_pad
  6800  27FA  0020               	movlb	0	; select bank0
  6801  27FB  0827               	movf	?_pad+1,w
  6802  27FC  00B1               	movwf	?_utoa+1
  6803  27FD  0826               	movf	?_pad,w
  6804  27FE  00B0               	movwf	?_utoa
  6805  27FF  0008               	return
  6806  2800                     __end_of_utoa:	
  6807                           
  6808                           	psect	text11
  6809  2C0F                     __ptext11:	
  6810 ;; *************** function ___lomod *****************
  6811 ;; Defined at:
  6812 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lomod.c"
  6813 ;; Parameters:    Size  Location     Type
  6814 ;;  divisor         8    0[BANK0 ] unsigned long long 
  6815 ;;  dividend        8    8[BANK0 ] unsigned long long 
  6816 ;; Auto vars:     Size  Location     Type
  6817 ;;  counter         1    2[COMMON] unsigned char 
  6818 ;; Return value:  Size  Location     Type
  6819 ;;                  8    0[BANK0 ] unsigned long long 
  6820 ;; Registers used:
  6821 ;;		wreg, status,2, status,0
  6822 ;; Tracked objects:
  6823 ;;		On entry : 0/0
  6824 ;;		On exit  : 0/0
  6825 ;;		Unchanged: 0/0
  6826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6827 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6828 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6829 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6830 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6831 ;;Total ram usage:       18 bytes
  6832 ;; Hardware stack levels used:    1
  6833 ;; Hardware stack levels required when called:    1
  6834 ;; This function calls:
  6835 ;;		Nothing
  6836 ;; This function is called by:
  6837 ;;		_utoa
  6838 ;; This function uses a non-reentrant model
  6839 ;;
  6840                           
  6841                           
  6842                           ;psect for function ___lomod
  6843  2C0F                     ___lomod:	
  6844                           
  6845                           ;incstack = 0
  6846                           ; Regs used in ___lomod: [wreg+status,2+status,0]
  6847  2C0F  0020               	movlb	0	; select bank0
  6848  2C10  0820               	movf	___lomod@divisor,w
  6849  2C11  0421               	iorwf	___lomod@divisor+1,w
  6850  2C12  0422               	iorwf	___lomod@divisor+2,w
  6851  2C13  0423               	iorwf	___lomod@divisor+3,w
  6852  2C14  0424               	iorwf	___lomod@divisor+4,w
  6853  2C15  0425               	iorwf	___lomod@divisor+5,w
  6854  2C16  0426               	iorwf	___lomod@divisor+6,w
  6855  2C17  0427               	iorwf	___lomod@divisor+7,w
  6856  2C18  1903               	skipnz
  6857  2C19  2C67               	goto	l1062
  6858  2C1A  01F2               	clrf	___lomod@counter
  6859  2C1B  0AF2               	incf	___lomod@counter,f
  6860  2C1C                     l4709:	
  6861  2C1C  1BA7               	btfsc	___lomod@divisor+7,7
  6862  2C1D  2C2B               	goto	l4711
  6863  2C1E  35A0               	lslf	___lomod@divisor,f
  6864  2C1F  0DA1               	rlf	___lomod@divisor+1,f
  6865  2C20  0DA2               	rlf	___lomod@divisor+2,f
  6866  2C21  0DA3               	rlf	___lomod@divisor+3,f
  6867  2C22  0DA4               	rlf	___lomod@divisor+4,f
  6868  2C23  0DA5               	rlf	___lomod@divisor+5,f
  6869  2C24  0DA6               	rlf	___lomod@divisor+6,f
  6870  2C25  0DA7               	rlf	___lomod@divisor+7,f
  6871  2C26  3001               	movlw	1
  6872  2C27  00F1               	movwf	??___lomod
  6873  2C28  0871               	movf	??___lomod,w
  6874  2C29  07F2               	addwf	___lomod@counter,f
  6875  2C2A  2C1C               	goto	l4709
  6876  2C2B                     l4711:	
  6877  2C2B  0827               	movf	___lomod@divisor+7,w
  6878  2C2C  022F               	subwf	___lomod@dividend+7,w
  6879  2C2D  1D03               	skipz
  6880  2C2E  2C49               	goto	u6305
  6881  2C2F  0826               	movf	___lomod@divisor+6,w
  6882  2C30  022E               	subwf	___lomod@dividend+6,w
  6883  2C31  1D03               	skipz
  6884  2C32  2C49               	goto	u6305
  6885  2C33  0825               	movf	___lomod@divisor+5,w
  6886  2C34  022D               	subwf	___lomod@dividend+5,w
  6887  2C35  1D03               	skipz
  6888  2C36  2C49               	goto	u6305
  6889  2C37  0824               	movf	___lomod@divisor+4,w
  6890  2C38  022C               	subwf	___lomod@dividend+4,w
  6891  2C39  1D03               	skipz
  6892  2C3A  2C49               	goto	u6305
  6893  2C3B  0823               	movf	___lomod@divisor+3,w
  6894  2C3C  022B               	subwf	___lomod@dividend+3,w
  6895  2C3D  1D03               	skipz
  6896  2C3E  2C49               	goto	u6305
  6897  2C3F  0822               	movf	___lomod@divisor+2,w
  6898  2C40  022A               	subwf	___lomod@dividend+2,w
  6899  2C41  1D03               	skipz
  6900  2C42  2C49               	goto	u6305
  6901  2C43  0821               	movf	___lomod@divisor+1,w
  6902  2C44  0229               	subwf	___lomod@dividend+1,w
  6903  2C45  1D03               	skipz
  6904  2C46  2C49               	goto	u6305
  6905  2C47  0820               	movf	___lomod@divisor,w
  6906  2C48  0228               	subwf	___lomod@dividend,w
  6907  2C49                     u6305:	
  6908  2C49  1C03               	skipc
  6909  2C4A  2C5B               	goto	l4715
  6910  2C4B  0820               	movf	___lomod@divisor,w
  6911  2C4C  02A8               	subwf	___lomod@dividend,f
  6912  2C4D  0821               	movf	___lomod@divisor+1,w
  6913  2C4E  3BA9               	subwfb	___lomod@dividend+1,f
  6914  2C4F  0822               	movf	___lomod@divisor+2,w
  6915  2C50  3BAA               	subwfb	___lomod@dividend+2,f
  6916  2C51  0823               	movf	___lomod@divisor+3,w
  6917  2C52  3BAB               	subwfb	___lomod@dividend+3,f
  6918  2C53  0824               	movf	___lomod@divisor+4,w
  6919  2C54  3BAC               	subwfb	___lomod@dividend+4,f
  6920  2C55  0825               	movf	___lomod@divisor+5,w
  6921  2C56  3BAD               	subwfb	___lomod@dividend+5,f
  6922  2C57  0826               	movf	___lomod@divisor+6,w
  6923  2C58  3BAE               	subwfb	___lomod@dividend+6,f
  6924  2C59  0827               	movf	___lomod@divisor+7,w
  6925  2C5A  3BAF               	subwfb	___lomod@dividend+7,f
  6926  2C5B                     l4715:	
  6927  2C5B  36A7               	lsrf	___lomod@divisor+7,f
  6928  2C5C  0CA6               	rrf	___lomod@divisor+6,f
  6929  2C5D  0CA5               	rrf	___lomod@divisor+5,f
  6930  2C5E  0CA4               	rrf	___lomod@divisor+4,f
  6931  2C5F  0CA3               	rrf	___lomod@divisor+3,f
  6932  2C60  0CA2               	rrf	___lomod@divisor+2,f
  6933  2C61  0CA1               	rrf	___lomod@divisor+1,f
  6934  2C62  0CA0               	rrf	___lomod@divisor,f
  6935  2C63  3001               	movlw	1
  6936  2C64  02F2               	subwf	___lomod@counter,f
  6937  2C65  1D03               	btfss	3,2
  6938  2C66  2C2B               	goto	l4711
  6939  2C67                     l1062:	
  6940  2C67  0828               	movf	___lomod@dividend,w
  6941  2C68  00A0               	movwf	?___lomod
  6942  2C69  0829               	movf	___lomod@dividend+1,w
  6943  2C6A  00A1               	movwf	?___lomod+1
  6944  2C6B  082A               	movf	___lomod@dividend+2,w
  6945  2C6C  00A2               	movwf	?___lomod+2
  6946  2C6D  082B               	movf	___lomod@dividend+3,w
  6947  2C6E  00A3               	movwf	?___lomod+3
  6948  2C6F  082C               	movf	___lomod@dividend+4,w
  6949  2C70  00A4               	movwf	?___lomod+4
  6950  2C71  082D               	movf	___lomod@dividend+5,w
  6951  2C72  00A5               	movwf	?___lomod+5
  6952  2C73  082E               	movf	___lomod@dividend+6,w
  6953  2C74  00A6               	movwf	?___lomod+6
  6954  2C75  082F               	movf	___lomod@dividend+7,w
  6955  2C76  00A7               	movwf	?___lomod+7
  6956  2C77  0008               	return
  6957  2C78                     __end_of___lomod:	
  6958                           
  6959                           	psect	text12
  6960  2D6C                     __ptext12:	
  6961 ;; *************** function ___lodiv *****************
  6962 ;; Defined at:
  6963 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lodiv.c"
  6964 ;; Parameters:    Size  Location     Type
  6965 ;;  divisor         8    0[BANK0 ] unsigned long long 
  6966 ;;  dividend        8    8[BANK0 ] unsigned long long 
  6967 ;; Auto vars:     Size  Location     Type
  6968 ;;  quotient        8    2[COMMON] unsigned long long 
  6969 ;;  counter         1   10[COMMON] unsigned char 
  6970 ;; Return value:  Size  Location     Type
  6971 ;;                  8    0[BANK0 ] unsigned long long 
  6972 ;; Registers used:
  6973 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6974 ;; Tracked objects:
  6975 ;;		On entry : 0/0
  6976 ;;		On exit  : 0/0
  6977 ;;		Unchanged: 0/0
  6978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6979 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6980 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6981 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6982 ;;      Totals:        10      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6983 ;;Total ram usage:       26 bytes
  6984 ;; Hardware stack levels used:    1
  6985 ;; Hardware stack levels required when called:    1
  6986 ;; This function calls:
  6987 ;;		Nothing
  6988 ;; This function is called by:
  6989 ;;		_utoa
  6990 ;; This function uses a non-reentrant model
  6991 ;;
  6992                           
  6993                           
  6994                           ;psect for function ___lodiv
  6995  2D6C                     ___lodiv:	
  6996                           
  6997                           ;incstack = 0
  6998                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  6999  2D6C  3072               	movlw	low ___lodiv@quotient
  7000  2D6D  0086               	movwf	6
  7001  2D6E  3000               	movlw	high ___lodiv@quotient
  7002  2D6F  0087               	movwf	7
  7003  2D70  3008               	movlw	8
  7004  2D71  00F1               	movwf	??___lodiv
  7005  2D72  3000               	movlw	0
  7006  2D73                     u6230:	
  7007  2D73  001E               	movwi fsr1++
  7008  2D74  0BF1               	decfsz	??___lodiv,f
  7009  2D75  2D73               	goto	u6230
  7010  2D76  0020               	movlb	0	; select bank0
  7011  2D77  0820               	movf	___lodiv@divisor,w
  7012  2D78  0421               	iorwf	___lodiv@divisor+1,w
  7013  2D79  0422               	iorwf	___lodiv@divisor+2,w
  7014  2D7A  0423               	iorwf	___lodiv@divisor+3,w
  7015  2D7B  0424               	iorwf	___lodiv@divisor+4,w
  7016  2D7C  0425               	iorwf	___lodiv@divisor+5,w
  7017  2D7D  0426               	iorwf	___lodiv@divisor+6,w
  7018  2D7E  0427               	iorwf	___lodiv@divisor+7,w
  7019  2D7F  1903               	skipnz
  7020  2D80  2DD7               	goto	l1052
  7021  2D81  01FA               	clrf	___lodiv@counter
  7022  2D82  0AFA               	incf	___lodiv@counter,f
  7023  2D83                     l4689:	
  7024  2D83  1BA7               	btfsc	___lodiv@divisor+7,7
  7025  2D84  2D92               	goto	l4691
  7026  2D85  35A0               	lslf	___lodiv@divisor,f
  7027  2D86  0DA1               	rlf	___lodiv@divisor+1,f
  7028  2D87  0DA2               	rlf	___lodiv@divisor+2,f
  7029  2D88  0DA3               	rlf	___lodiv@divisor+3,f
  7030  2D89  0DA4               	rlf	___lodiv@divisor+4,f
  7031  2D8A  0DA5               	rlf	___lodiv@divisor+5,f
  7032  2D8B  0DA6               	rlf	___lodiv@divisor+6,f
  7033  2D8C  0DA7               	rlf	___lodiv@divisor+7,f
  7034  2D8D  3001               	movlw	1
  7035  2D8E  00F1               	movwf	??___lodiv
  7036  2D8F  0871               	movf	??___lodiv,w
  7037  2D90  07FA               	addwf	___lodiv@counter,f
  7038  2D91  2D83               	goto	l4689
  7039  2D92                     l4691:	
  7040  2D92  35F2               	lslf	___lodiv@quotient,f
  7041  2D93  0DF3               	rlf	___lodiv@quotient+1,f
  7042  2D94  0DF4               	rlf	___lodiv@quotient+2,f
  7043  2D95  0DF5               	rlf	___lodiv@quotient+3,f
  7044  2D96  0DF6               	rlf	___lodiv@quotient+4,f
  7045  2D97  0DF7               	rlf	___lodiv@quotient+5,f
  7046  2D98  0DF8               	rlf	___lodiv@quotient+6,f
  7047  2D99  0DF9               	rlf	___lodiv@quotient+7,f
  7048  2D9A  0827               	movf	___lodiv@divisor+7,w
  7049  2D9B  022F               	subwf	___lodiv@dividend+7,w
  7050  2D9C  1D03               	skipz
  7051  2D9D  2DB8               	goto	u6265
  7052  2D9E  0826               	movf	___lodiv@divisor+6,w
  7053  2D9F  022E               	subwf	___lodiv@dividend+6,w
  7054  2DA0  1D03               	skipz
  7055  2DA1  2DB8               	goto	u6265
  7056  2DA2  0825               	movf	___lodiv@divisor+5,w
  7057  2DA3  022D               	subwf	___lodiv@dividend+5,w
  7058  2DA4  1D03               	skipz
  7059  2DA5  2DB8               	goto	u6265
  7060  2DA6  0824               	movf	___lodiv@divisor+4,w
  7061  2DA7  022C               	subwf	___lodiv@dividend+4,w
  7062  2DA8  1D03               	skipz
  7063  2DA9  2DB8               	goto	u6265
  7064  2DAA  0823               	movf	___lodiv@divisor+3,w
  7065  2DAB  022B               	subwf	___lodiv@dividend+3,w
  7066  2DAC  1D03               	skipz
  7067  2DAD  2DB8               	goto	u6265
  7068  2DAE  0822               	movf	___lodiv@divisor+2,w
  7069  2DAF  022A               	subwf	___lodiv@dividend+2,w
  7070  2DB0  1D03               	skipz
  7071  2DB1  2DB8               	goto	u6265
  7072  2DB2  0821               	movf	___lodiv@divisor+1,w
  7073  2DB3  0229               	subwf	___lodiv@dividend+1,w
  7074  2DB4  1D03               	skipz
  7075  2DB5  2DB8               	goto	u6265
  7076  2DB6  0820               	movf	___lodiv@divisor,w
  7077  2DB7  0228               	subwf	___lodiv@dividend,w
  7078  2DB8                     u6265:	
  7079  2DB8  1C03               	skipc
  7080  2DB9  2DCB               	goto	l4699
  7081  2DBA  0820               	movf	___lodiv@divisor,w
  7082  2DBB  02A8               	subwf	___lodiv@dividend,f
  7083  2DBC  0821               	movf	___lodiv@divisor+1,w
  7084  2DBD  3BA9               	subwfb	___lodiv@dividend+1,f
  7085  2DBE  0822               	movf	___lodiv@divisor+2,w
  7086  2DBF  3BAA               	subwfb	___lodiv@dividend+2,f
  7087  2DC0  0823               	movf	___lodiv@divisor+3,w
  7088  2DC1  3BAB               	subwfb	___lodiv@dividend+3,f
  7089  2DC2  0824               	movf	___lodiv@divisor+4,w
  7090  2DC3  3BAC               	subwfb	___lodiv@dividend+4,f
  7091  2DC4  0825               	movf	___lodiv@divisor+5,w
  7092  2DC5  3BAD               	subwfb	___lodiv@dividend+5,f
  7093  2DC6  0826               	movf	___lodiv@divisor+6,w
  7094  2DC7  3BAE               	subwfb	___lodiv@dividend+6,f
  7095  2DC8  0827               	movf	___lodiv@divisor+7,w
  7096  2DC9  3BAF               	subwfb	___lodiv@dividend+7,f
  7097  2DCA  1472               	bsf	___lodiv@quotient,0
  7098  2DCB                     l4699:	
  7099  2DCB  36A7               	lsrf	___lodiv@divisor+7,f
  7100  2DCC  0CA6               	rrf	___lodiv@divisor+6,f
  7101  2DCD  0CA5               	rrf	___lodiv@divisor+5,f
  7102  2DCE  0CA4               	rrf	___lodiv@divisor+4,f
  7103  2DCF  0CA3               	rrf	___lodiv@divisor+3,f
  7104  2DD0  0CA2               	rrf	___lodiv@divisor+2,f
  7105  2DD1  0CA1               	rrf	___lodiv@divisor+1,f
  7106  2DD2  0CA0               	rrf	___lodiv@divisor,f
  7107  2DD3  3001               	movlw	1
  7108  2DD4  02FA               	subwf	___lodiv@counter,f
  7109  2DD5  1D03               	btfss	3,2
  7110  2DD6  2D92               	goto	l4691
  7111  2DD7                     l1052:	
  7112  2DD7  0872               	movf	___lodiv@quotient,w
  7113  2DD8  00A0               	movwf	?___lodiv
  7114  2DD9  0873               	movf	___lodiv@quotient+1,w
  7115  2DDA  00A1               	movwf	?___lodiv+1
  7116  2DDB  0874               	movf	___lodiv@quotient+2,w
  7117  2DDC  00A2               	movwf	?___lodiv+2
  7118  2DDD  0875               	movf	___lodiv@quotient+3,w
  7119  2DDE  00A3               	movwf	?___lodiv+3
  7120  2DDF  0876               	movf	___lodiv@quotient+4,w
  7121  2DE0  00A4               	movwf	?___lodiv+4
  7122  2DE1  0877               	movf	___lodiv@quotient+5,w
  7123  2DE2  00A5               	movwf	?___lodiv+5
  7124  2DE3  0878               	movf	___lodiv@quotient+6,w
  7125  2DE4  00A6               	movwf	?___lodiv+6
  7126  2DE5  0879               	movf	___lodiv@quotient+7,w
  7127  2DE6  00A7               	movwf	?___lodiv+7
  7128  2DE7  0008               	return
  7129  2DE8                     __end_of___lodiv:	
  7130                           
  7131                           	psect	text13
  7132  200C                     __ptext13:	
  7133 ;; *************** function _strncmp *****************
  7134 ;; Defined at:
  7135 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  7136 ;; Parameters:    Size  Location     Type
  7137 ;;  _l              2    1[COMMON] PTR const unsigned char 
  7138 ;;		 -> vfpfcnvrt@ct(3), STR_7(44), STR_6(42), STR_3(43), 
  7139 ;;  _r              2    3[COMMON] PTR const unsigned char 
  7140 ;;		 -> STR_152(3), STR_148(3), STR_143(3), STR_139(3), 
  7141 ;;		 -> STR_134(3), STR_130(3), STR_125(4), STR_121(4), 
  7142 ;;		 -> STR_116(3), STR_111(3), STR_106(3), STR_101(4), 
  7143 ;;		 -> STR_96(3), STR_91(3), STR_86(3), STR_81(4), 
  7144 ;;		 -> STR_76(3), STR_71(3), STR_66(3), STR_61(4), 
  7145 ;;		 -> STR_56(3), STR_51(3), STR_47(3), STR_42(3), 
  7146 ;;		 -> STR_38(3), STR_33(3), STR_29(3), STR_24(4), 
  7147 ;;		 -> STR_20(4), 
  7148 ;;  n               2    5[COMMON] unsigned int 
  7149 ;; Auto vars:     Size  Location     Type
  7150 ;;  r               2   10[COMMON] PTR const unsigned char 
  7151 ;;		 -> STR_152(3), STR_148(3), STR_143(3), STR_139(3), 
  7152 ;;		 -> STR_134(3), STR_130(3), STR_125(4), STR_121(4), 
  7153 ;;		 -> STR_116(3), STR_111(3), STR_106(3), STR_101(4), 
  7154 ;;		 -> STR_96(3), STR_91(3), STR_86(3), STR_81(4), 
  7155 ;;		 -> STR_76(3), STR_71(3), STR_66(3), STR_61(4), 
  7156 ;;		 -> STR_56(3), STR_51(3), STR_47(3), STR_42(3), 
  7157 ;;		 -> STR_38(3), STR_33(3), STR_29(3), STR_24(4), 
  7158 ;;		 -> STR_20(4), 
  7159 ;;  l               2    8[COMMON] PTR const unsigned char 
  7160 ;;		 -> vfpfcnvrt@ct(3), STR_7(44), STR_6(42), STR_3(43), 
  7161 ;; Return value:  Size  Location     Type
  7162 ;;                  2    1[COMMON] int 
  7163 ;; Registers used:
  7164 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  7165 ;; Tracked objects:
  7166 ;;		On entry : 0/0
  7167 ;;		On exit  : 0/0
  7168 ;;		Unchanged: 0/0
  7169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7170 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7171 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7172 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7173 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7174 ;;Total ram usage:       11 bytes
  7175 ;; Hardware stack levels used:    1
  7176 ;; Hardware stack levels required when called:    1
  7177 ;; This function calls:
  7178 ;;		Nothing
  7179 ;; This function is called by:
  7180 ;;		_vfpfcnvrt
  7181 ;; This function uses a non-reentrant model
  7182 ;;
  7183                           
  7184                           
  7185                           ;psect for function _strncmp
  7186  200C                     _strncmp:	
  7187                           
  7188                           ;incstack = 0
  7189                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  7190  200C  0872               	movf	strncmp@_l+1,w
  7191  200D  00F9               	movwf	strncmp@l+1
  7192  200E  0871               	movf	strncmp@_l,w
  7193  200F  00F8               	movwf	strncmp@l
  7194  2010  0874               	movf	strncmp@_r+1,w
  7195  2011  00FB               	movwf	strncmp@r+1
  7196  2012  0873               	movf	strncmp@_r,w
  7197  2013  00FA               	movwf	strncmp@r
  7198  2014  3001               	movlw	1
  7199  2015  02F5               	subwf	strncmp@n,f
  7200  2016  3000               	movlw	0
  7201  2017  3BF6               	subwfb	strncmp@n+1,f
  7202  2018  0A75               	incf	strncmp@n,w
  7203  2019  1D03               	skipz
  7204  201A  2846               	goto	l5629
  7205  201B  0A76               	incf	strncmp@n+1,w
  7206  201C  1D03               	btfss	3,2
  7207  201D  2846               	goto	l5629
  7208  201E  01F1               	clrf	?_strncmp
  7209  201F  01F2               	clrf	?_strncmp+1
  7210  2020  0008               	return
  7211  2021                     l5631:	
  7212  2021  087A               	movf	strncmp@r,w
  7213  2022  0084               	movwf	4
  7214  2023  087B               	movf	strncmp@r+1,w
  7215  2024  0085               	movwf	5
  7216  2025  0012               	moviw fsr0++
  7217  2026  1903               	btfsc	3,2
  7218  2027  284D               	goto	l5637
  7219  2028  0875               	movf	strncmp@n,w
  7220  2029  0476               	iorwf	strncmp@n+1,w
  7221  202A  1903               	btfsc	3,2
  7222  202B  284D               	goto	l5637
  7223  202C  087A               	movf	strncmp@r,w
  7224  202D  0084               	movwf	4
  7225  202E  087B               	movf	strncmp@r+1,w
  7226  202F  0085               	movwf	5
  7227  2030  0800               	movf	0,w	;code access
  7228  2031  00F7               	movwf	??_strncmp
  7229  2032  0878               	movf	strncmp@l,w
  7230  2033  0084               	movwf	4
  7231  2034  0879               	movf	strncmp@l+1,w
  7232  2035  0085               	movwf	5
  7233  2036  0800               	movf	0,w	;code access
  7234  2037  0677               	xorwf	??_strncmp,w
  7235  2038  1D03               	btfss	3,2
  7236  2039  284D               	goto	l5637
  7237  203A  3001               	movlw	1
  7238  203B  07F8               	addwf	strncmp@l,f
  7239  203C  3000               	movlw	0
  7240  203D  3DF9               	addwfc	strncmp@l+1,f
  7241  203E  3001               	movlw	1
  7242  203F  07FA               	addwf	strncmp@r,f
  7243  2040  3000               	movlw	0
  7244  2041  3DFB               	addwfc	strncmp@r+1,f
  7245  2042  3001               	movlw	1
  7246  2043  02F5               	subwf	strncmp@n,f
  7247  2044  3000               	movlw	0
  7248  2045  3BF6               	subwfb	strncmp@n+1,f
  7249  2046                     l5629:	
  7250  2046  0878               	movf	strncmp@l,w
  7251  2047  0084               	movwf	4
  7252  2048  0879               	movf	strncmp@l+1,w
  7253  2049  0085               	movwf	5
  7254  204A  0012               	moviw fsr0++
  7255  204B  1D03               	btfss	3,2
  7256  204C  2821               	goto	l5631
  7257  204D                     l5637:	
  7258  204D  0878               	movf	strncmp@l,w
  7259  204E  0084               	movwf	4
  7260  204F  0879               	movf	strncmp@l+1,w
  7261  2050  0085               	movwf	5
  7262  2051  0800               	movf	0,w	;code access
  7263  2052  00F7               	movwf	??_strncmp
  7264  2053  087A               	movf	strncmp@r,w
  7265  2054  0084               	movwf	4
  7266  2055  087B               	movf	strncmp@r+1,w
  7267  2056  0085               	movwf	5
  7268  2057  0800               	movf	0,w	;code access
  7269  2058  0277               	subwf	??_strncmp,w
  7270  2059  00F1               	movwf	?_strncmp
  7271  205A  01F2               	clrf	?_strncmp+1
  7272  205B  1C03               	skipc
  7273  205C  03F2               	decf	?_strncmp+1,f
  7274  205D  0008               	return
  7275  205E                     __end_of_strncmp:	
  7276                           
  7277                           	psect	text14
  7278  22FF                     __ptext14:	
  7279 ;; *************** function _stoa *****************
  7280 ;; Defined at:
  7281 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7282 ;; Parameters:    Size  Location     Type
  7283 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  7284 ;;		 -> vsnprintf@f(6), 
  7285 ;;  s               1    2[BANK0 ] PTR unsigned char 
  7286 ;;		 -> ?_snprintf(2), 
  7287 ;; Auto vars:     Size  Location     Type
  7288 ;;  nuls            7    3[BANK0 ] unsigned char [7]
  7289 ;;  l               2   18[BANK0 ] int 
  7290 ;;  p               2   16[BANK0 ] int 
  7291 ;;  cp              2   14[BANK0 ] PTR unsigned char 
  7292 ;;		 -> ?_snprintf(2), stoa@nuls(7), 
  7293 ;;  w               2   12[BANK0 ] int 
  7294 ;;  i               2   10[BANK0 ] int 
  7295 ;; Return value:  Size  Location     Type
  7296 ;;                  2    0[BANK0 ] int 
  7297 ;; Registers used:
  7298 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7299 ;; Tracked objects:
  7300 ;;		On entry : 0/0
  7301 ;;		On exit  : 0/0
  7302 ;;		Unchanged: 0/0
  7303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7304 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7305 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7306 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7307 ;;      Totals:         2      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7308 ;;Total ram usage:       22 bytes
  7309 ;; Hardware stack levels used:    1
  7310 ;; Hardware stack levels required when called:    3
  7311 ;; This function calls:
  7312 ;;		_fputc
  7313 ;;		_strlen
  7314 ;; This function is called by:
  7315 ;;		_vfpfcnvrt
  7316 ;; This function uses a non-reentrant model
  7317 ;;
  7318                           
  7319                           
  7320                           ;psect for function _stoa
  7321  22FF                     _stoa:	
  7322                           
  7323                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  7324                           
  7325                           ;incstack = 0
  7326                           ; Regs used in _stoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7327  22FF  30D4               	movlw	low stoa@F1174
  7328  2300  0086               	movwf	6
  7329  2301  3001               	movlw	high stoa@F1174
  7330  2302  0087               	movwf	7
  7331  2303  3023               	movlw	low stoa@nuls
  7332  2304  0084               	movwf	4
  7333  2305  3000               	movlw	high stoa@nuls
  7334  2306  0085               	movwf	5
  7335  2307  3007               	movlw	7
  7336  2308  00FA               	movwf	??_stoa
  7337  2309                     u10720:	
  7338  2309  0016               	moviw fsr1++
  7339  230A  001A               	movwi fsr0++
  7340  230B  0BFA               	decfsz	??_stoa,f
  7341  230C  2B09               	goto	u10720
  7342                           
  7343                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  7344  230D  0020               	movlb	0	; select bank0
  7345  230E  0822               	movf	stoa@s,w
  7346  230F  00AE               	movwf	stoa@cp
  7347  2310  3001               	movlw	1
  7348  2311  00AF               	movwf	stoa@cp+1
  7349                           
  7350                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  7351  2312  082E               	movf	stoa@cp,w
  7352  2313  042F               	iorwf	stoa@cp+1,w
  7353  2314  1D03               	btfss	3,2
  7354  2315  2B1A               	goto	l7295
  7355                           
  7356                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  7357  2316  3023               	movlw	low stoa@nuls
  7358  2317  00AE               	movwf	stoa@cp
  7359  2318  3000               	movlw	high stoa@nuls
  7360  2319  00AF               	movwf	stoa@cp+1
  7361  231A                     l7295:	
  7362                           
  7363                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  7364  231A  082F               	movf	stoa@cp+1,w
  7365  231B  00F2               	movwf	strlen@s+1
  7366  231C  082E               	movf	stoa@cp,w
  7367  231D  00F1               	movwf	strlen@s
  7368  231E  31B7  271E  31A2   	fcall	_strlen
  7369  2321  0872               	movf	?_strlen+1,w
  7370  2322  0020               	movlb	0	; select bank0
  7371  2323  00B3               	movwf	stoa@l+1
  7372  2324  0871               	movf	?_strlen,w
  7373  2325  00B2               	movwf	stoa@l
  7374                           
  7375                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  7376  2326  0023               	movlb	3	; select bank3
  7377  2327  0841               	movf	(_prec+1)^(0+384),w
  7378  2328  0020               	movlb	0	; select bank0
  7379  2329  00B1               	movwf	stoa@p+1
  7380  232A  0023               	movlb	3	; select bank3
  7381  232B  0840               	movf	_prec^(0+384),w
  7382  232C  0020               	movlb	0	; select bank0
  7383  232D  00B0               	movwf	stoa@p
  7384                           
  7385                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  7386  232E  1BB1               	btfsc	stoa@p+1,7
  7387  232F  2B41               	goto	l655
  7388  2330  0831               	movf	stoa@p+1,w
  7389  2331  3A80               	xorlw	128
  7390  2332  00FA               	movwf	??_stoa
  7391  2333  0833               	movf	stoa@l+1,w
  7392  2334  3A80               	xorlw	128
  7393  2335  027A               	subwf	??_stoa,w
  7394  2336  1D03               	skipz
  7395  2337  2B3A               	goto	u10755
  7396  2338  0832               	movf	stoa@l,w
  7397  2339  0230               	subwf	stoa@p,w
  7398  233A                     u10755:	
  7399  233A  1803               	btfsc	3,0
  7400  233B  2B41               	goto	l655
  7401  233C  0020               	movlb	0	; select bank0
  7402  233D  0831               	movf	stoa@p+1,w
  7403  233E  00B3               	movwf	stoa@l+1
  7404  233F  0830               	movf	stoa@p,w
  7405  2340  00B2               	movwf	stoa@l
  7406  2341                     l655:	
  7407                           
  7408                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  7409  2341  0020               	movlb	0	; select bank0
  7410  2342  0833               	movf	stoa@l+1,w
  7411  2343  00B1               	movwf	stoa@p+1
  7412  2344  0832               	movf	stoa@l,w
  7413  2345  00B0               	movwf	stoa@p
  7414                           
  7415                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  7416  2346  0023               	movlb	3	; select bank3
  7417  2347  083F               	movf	(_width+1)^(0+384),w
  7418  2348  0020               	movlb	0	; select bank0
  7419  2349  00AD               	movwf	stoa@w+1
  7420  234A  0023               	movlb	3	; select bank3
  7421  234B  083E               	movf	_width^(0+384),w
  7422  234C  0020               	movlb	0	; select bank0
  7423  234D  00AC               	movwf	stoa@w
  7424                           
  7425                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  7426  234E  0023               	movlb	3	; select bank3
  7427  234F  1C42               	btfss	_flags^(0+384),0
  7428  2350  2B63               	goto	l7313
  7429  2351  2B70               	goto	l7315
  7430  2352                     l7309:	
  7431                           
  7432                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  7433  2352  3020               	movlw	32
  7434  2353  00F1               	movwf	fputc@c
  7435  2354  3000               	movlw	0
  7436  2355  00F2               	movwf	fputc@c+1
  7437  2356  0020               	movlb	0	; select bank0
  7438  2357  0821               	movf	stoa@fp+1,w
  7439  2358  00F4               	movwf	fputc@fp+1
  7440  2359  0820               	movf	stoa@fp,w
  7441  235A  00F3               	movwf	fputc@fp
  7442  235B  3190  200D  31A2   	fcall	_fputc
  7443                           
  7444                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  7445  235E  3001               	movlw	1
  7446  235F  0020               	movlb	0	; select bank0
  7447  2360  07B2               	addwf	stoa@l,f
  7448  2361  3000               	movlw	0
  7449  2362  3DB3               	addwfc	stoa@l+1,f
  7450  2363                     l7313:	
  7451                           
  7452                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  7453  2363  0020               	movlb	0	; select bank0
  7454  2364  0833               	movf	stoa@l+1,w
  7455  2365  3A80               	xorlw	128
  7456  2366  00FA               	movwf	??_stoa
  7457  2367  082D               	movf	stoa@w+1,w
  7458  2368  3A80               	xorlw	128
  7459  2369  027A               	subwf	??_stoa,w
  7460  236A  1D03               	skipz
  7461  236B  2B6E               	goto	u10775
  7462  236C  082C               	movf	stoa@w,w
  7463  236D  0232               	subwf	stoa@l,w
  7464  236E                     u10775:	
  7465  236E  1C03               	skipc
  7466  236F  2B52               	goto	l7309
  7467  2370                     l7315:	
  7468                           
  7469                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  7470  2370  0020               	movlb	0	; select bank0
  7471  2371  01AA               	clrf	stoa@i
  7472  2372  01AB               	clrf	stoa@i+1
  7473  2373                     l7323:	
  7474                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  7475                           
  7476                           
  7477                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  7478  2373  082B               	movf	stoa@i+1,w
  7479  2374  3A80               	xorlw	128
  7480  2375  00FA               	movwf	??_stoa
  7481  2376  0831               	movf	stoa@p+1,w
  7482  2377  3A80               	xorlw	128
  7483  2378  027A               	subwf	??_stoa,w
  7484  2379  1D03               	skipz
  7485  237A  2B7D               	goto	u10785
  7486  237B  0830               	movf	stoa@p,w
  7487  237C  022A               	subwf	stoa@i,w
  7488  237D                     u10785:	
  7489  237D  1803               	btfsc	3,0
  7490  237E  2B9C               	goto	l664
  7491                           
  7492                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  7493  237F  0020               	movlb	0	; select bank0
  7494  2380  082E               	movf	stoa@cp,w
  7495  2381  0086               	movwf	6
  7496  2382  082F               	movf	stoa@cp+1,w
  7497  2383  0087               	movwf	7
  7498  2384  0801               	movf	1,w
  7499  2385  00FA               	movwf	??_stoa
  7500  2386  01FB               	clrf	??_stoa+1
  7501  2387  087A               	movf	??_stoa,w
  7502  2388  00F1               	movwf	fputc@c
  7503  2389  087B               	movf	??_stoa+1,w
  7504  238A  00F2               	movwf	fputc@c+1
  7505  238B  0821               	movf	stoa@fp+1,w
  7506  238C  00F4               	movwf	fputc@fp+1
  7507  238D  0820               	movf	stoa@fp,w
  7508  238E  00F3               	movwf	fputc@fp
  7509  238F  3190  200D  31A2   	fcall	_fputc
  7510                           
  7511                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  7512  2392  3001               	movlw	1
  7513  2393  0020               	movlb	0	; select bank0
  7514  2394  07AE               	addwf	stoa@cp,f
  7515  2395  3000               	movlw	0
  7516  2396  3DAF               	addwfc	stoa@cp+1,f
  7517                           
  7518                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  7519  2397  3001               	movlw	1
  7520  2398  07AA               	addwf	stoa@i,f
  7521  2399  3000               	movlw	0
  7522  239A  3DAB               	addwfc	stoa@i+1,f
  7523  239B  2B73               	goto	l7323
  7524  239C                     l664:	
  7525                           
  7526                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  7527  239C  0023               	movlb	3	; select bank3
  7528  239D  1842               	btfsc	_flags^(0+384),0
  7529  239E  2BB1               	goto	l7331
  7530  239F  2BBE               	goto	l7333
  7531  23A0                     l7327:	
  7532                           
  7533                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  7534  23A0  3020               	movlw	32
  7535  23A1  00F1               	movwf	fputc@c
  7536  23A2  3000               	movlw	0
  7537  23A3  00F2               	movwf	fputc@c+1
  7538  23A4  0020               	movlb	0	; select bank0
  7539  23A5  0821               	movf	stoa@fp+1,w
  7540  23A6  00F4               	movwf	fputc@fp+1
  7541  23A7  0820               	movf	stoa@fp,w
  7542  23A8  00F3               	movwf	fputc@fp
  7543  23A9  3190  200D  31A2   	fcall	_fputc
  7544                           
  7545                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  7546  23AC  3001               	movlw	1
  7547  23AD  0020               	movlb	0	; select bank0
  7548  23AE  07B2               	addwf	stoa@l,f
  7549  23AF  3000               	movlw	0
  7550  23B0  3DB3               	addwfc	stoa@l+1,f
  7551  23B1                     l7331:	
  7552                           
  7553                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  7554  23B1  0020               	movlb	0	; select bank0
  7555  23B2  0833               	movf	stoa@l+1,w
  7556  23B3  3A80               	xorlw	128
  7557  23B4  00FA               	movwf	??_stoa
  7558  23B5  082D               	movf	stoa@w+1,w
  7559  23B6  3A80               	xorlw	128
  7560  23B7  027A               	subwf	??_stoa,w
  7561  23B8  1D03               	skipz
  7562  23B9  2BBC               	goto	u10805
  7563  23BA  082C               	movf	stoa@w,w
  7564  23BB  0232               	subwf	stoa@l,w
  7565  23BC                     u10805:	
  7566  23BC  1C03               	skipc
  7567  23BD  2BA0               	goto	l7327
  7568  23BE                     l7333:	
  7569                           
  7570                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  7571  23BE  0020               	movlb	0	; select bank0
  7572  23BF  0833               	movf	stoa@l+1,w
  7573  23C0  00A1               	movwf	?_stoa+1
  7574  23C1  0832               	movf	stoa@l,w
  7575  23C2  00A0               	movwf	?_stoa
  7576  23C3  0008               	return
  7577  23C4                     __end_of_stoa:	
  7578                           
  7579                           	psect	text15
  7580  1974                     __ptext15:	
  7581 ;; *************** function _otoa *****************
  7582 ;; Defined at:
  7583 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7584 ;; Parameters:    Size  Location     Type
  7585 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  7586 ;;		 -> vsnprintf@f(6), 
  7587 ;;  d               8   18[BANK0 ] unsigned long long 
  7588 ;; Auto vars:     Size  Location     Type
  7589 ;;  n               8   40[BANK0 ] unsigned long long 
  7590 ;;  i               2   48[BANK0 ] int 
  7591 ;;  w               2   38[BANK0 ] int 
  7592 ;;  t               2   36[BANK0 ] int 
  7593 ;;  p               2   34[BANK0 ] int 
  7594 ;; Return value:  Size  Location     Type
  7595 ;;                  2   16[BANK0 ] int 
  7596 ;; Registers used:
  7597 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7598 ;; Tracked objects:
  7599 ;;		On entry : 0/0
  7600 ;;		On exit  : 0/0
  7601 ;;		Unchanged: 0/0
  7602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7603 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7604 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7605 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7606 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7607 ;;Total ram usage:       34 bytes
  7608 ;; Hardware stack levels used:    1
  7609 ;; Hardware stack levels required when called:    5
  7610 ;; This function calls:
  7611 ;;		_pad
  7612 ;; This function is called by:
  7613 ;;		_vfpfcnvrt
  7614 ;; This function uses a non-reentrant model
  7615 ;;
  7616                           
  7617                           
  7618                           ;psect for function _otoa
  7619  1974                     _otoa:	
  7620                           
  7621                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  7622                           
  7623                           ;incstack = 0
  7624                           ; Regs used in _otoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7625  1974  0023               	movlb	3	; select bank3
  7626  1975  1BC1               	btfsc	(_prec+1)^(0+384),7
  7627  1976  297B               	goto	l633
  7628                           
  7629                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
  7630  1977  30FD               	movlw	253
  7631  1978  05C2               	andwf	_flags^(0+384),f
  7632  1979  30FF               	movlw	255
  7633  197A  05C3               	andwf	(_flags+1)^(0+384),f
  7634  197B                     l633:	
  7635                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 515:     }
  7636                           
  7637                           
  7638                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
  7639  197B  0841               	movf	(_prec+1)^(0+384),w
  7640  197C  3A80               	xorlw	128
  7641  197D  0020               	movlb	0	; select bank0
  7642  197E  00BA               	movwf	??_otoa
  7643  197F  3080               	movlw	128
  7644  1980  023A               	subwf	??_otoa,w
  7645  1981  1D03               	skipz
  7646  1982  2986               	goto	u10635
  7647  1983  3001               	movlw	1
  7648  1984  0023               	movlb	3	; select bank3
  7649  1985  0240               	subwf	_prec^(0+384),w
  7650  1986                     u10635:	
  7651  1986  1803               	skipnc
  7652  1987  298E               	goto	l7249
  7653  1988  3001               	movlw	1
  7654  1989  0020               	movlb	0	; select bank0
  7655  198A  00C2               	movwf	otoa@p
  7656  198B  3000               	movlw	0
  7657  198C  00C3               	movwf	otoa@p+1
  7658  198D  2996               	goto	l637
  7659  198E                     l7249:	
  7660  198E  0023               	movlb	3	; select bank3
  7661  198F  0841               	movf	(_prec+1)^(0+384),w
  7662  1990  0020               	movlb	0	; select bank0
  7663  1991  00C3               	movwf	otoa@p+1
  7664  1992  0023               	movlb	3	; select bank3
  7665  1993  0840               	movf	_prec^(0+384),w
  7666  1994  0020               	movlb	0	; select bank0
  7667  1995  00C2               	movwf	otoa@p
  7668  1996                     l637:	
  7669                           
  7670                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
  7671  1996  0023               	movlb	3	; select bank3
  7672  1997  083F               	movf	(_width+1)^(0+384),w
  7673  1998  0020               	movlb	0	; select bank0
  7674  1999  00C7               	movwf	otoa@w+1
  7675  199A  0023               	movlb	3	; select bank3
  7676  199B  083E               	movf	_width^(0+384),w
  7677  199C  0020               	movlb	0	; select bank0
  7678  199D  00C6               	movwf	otoa@w
  7679                           
  7680                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
  7681  199E  0832               	movf	otoa@d,w
  7682  199F  00C8               	movwf	otoa@n
  7683  19A0  0833               	movf	otoa@d+1,w
  7684  19A1  00C9               	movwf	otoa@n+1
  7685  19A2  0834               	movf	otoa@d+2,w
  7686  19A3  00CA               	movwf	otoa@n+2
  7687  19A4  0835               	movf	otoa@d+3,w
  7688  19A5  00CB               	movwf	otoa@n+3
  7689  19A6  0836               	movf	otoa@d+4,w
  7690  19A7  00CC               	movwf	otoa@n+4
  7691  19A8  0837               	movf	otoa@d+5,w
  7692  19A9  00CD               	movwf	otoa@n+5
  7693  19AA  0838               	movf	otoa@d+6,w
  7694  19AB  00CE               	movwf	otoa@n+6
  7695  19AC  0839               	movf	otoa@d+7,w
  7696  19AD  00CF               	movwf	otoa@n+7
  7697                           
  7698                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
  7699  19AE  304F               	movlw	79
  7700  19AF  00D0               	movwf	otoa@i
  7701  19B0  3000               	movlw	0
  7702  19B1  00D1               	movwf	otoa@i+1
  7703                           
  7704                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
  7705  19B2  0024               	movlb	4	; select bank4
  7706  19B3  01EF               	clrf	(_dbuf^(0+512)+79)
  7707                           
  7708                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
  7709  19B4  0020               	movlb	0	; select bank0
  7710  19B5  01C4               	clrf	otoa@t
  7711  19B6  01C5               	clrf	otoa@t+1
  7712                           
  7713                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7714  19B7  2A2B               	goto	l638
  7715  19B8                     l7267:	
  7716  19B8  0020               	movlb	0	; select bank0
  7717  19B9  0848               	movf	otoa@n,w
  7718  19BA  0449               	iorwf	otoa@n+1,w
  7719  19BB  044A               	iorwf	otoa@n+2,w
  7720  19BC  044B               	iorwf	otoa@n+3,w
  7721  19BD  044C               	iorwf	otoa@n+4,w
  7722  19BE  044D               	iorwf	otoa@n+5,w
  7723  19BF  044E               	iorwf	otoa@n+6,w
  7724  19C0  044F               	iorwf	otoa@n+7,w
  7725  19C1  1D03               	skipz
  7726  19C2  29DD               	goto	l7257
  7727  19C3  0843               	movf	otoa@p+1,w
  7728  19C4  3A80               	xorlw	128
  7729  19C5  00BA               	movwf	??_otoa
  7730  19C6  3080               	movlw	128
  7731  19C7  023A               	subwf	??_otoa,w
  7732  19C8  1D03               	skipz
  7733  19C9  29CC               	goto	u10675
  7734  19CA  3001               	movlw	1
  7735  19CB  0242               	subwf	otoa@p,w
  7736  19CC                     u10675:	
  7737  19CC  1803               	skipnc
  7738  19CD  29DD               	goto	l7257
  7739  19CE  0020               	movlb	0	; select bank0
  7740  19CF  0847               	movf	otoa@w+1,w
  7741  19D0  3A80               	xorlw	128
  7742  19D1  00BA               	movwf	??_otoa
  7743  19D2  3080               	movlw	128
  7744  19D3  023A               	subwf	??_otoa,w
  7745  19D4  1D03               	skipz
  7746  19D5  29D8               	goto	u10685
  7747  19D6  3001               	movlw	1
  7748  19D7  0246               	subwf	otoa@w,w
  7749  19D8                     u10685:	
  7750  19D8  1C03               	skipc
  7751  19D9  2A36               	goto	l644
  7752  19DA  0023               	movlb	3	; select bank3
  7753  19DB  1CC2               	btfss	_flags^(0+384),1
  7754  19DC  2A36               	goto	l644
  7755  19DD                     l7257:	
  7756                           
  7757                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
  7758  19DD  30FF               	movlw	255
  7759  19DE  0020               	movlb	0	; select bank0
  7760  19DF  07D0               	addwf	otoa@i,f
  7761  19E0  30FF               	movlw	255
  7762  19E1  3DD1               	addwfc	otoa@i+1,f
  7763                           
  7764                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
  7765  19E2  3007               	movlw	7
  7766  19E3  0548               	andwf	otoa@n,w
  7767  19E4  00C4               	movwf	otoa@t
  7768  19E5  3000               	movlw	0
  7769  19E6  0549               	andwf	otoa@n+1,w
  7770  19E7  00C5               	movwf	otoa@t+1
  7771                           
  7772                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
  7773  19E8  0844               	movf	otoa@t,w
  7774  19E9  3E30               	addlw	48
  7775  19EA  00BA               	movwf	??_otoa
  7776  19EB  0850               	movf	otoa@i,w
  7777  19EC  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7778  19ED  0086               	movwf	6
  7779  19EE  3002               	movlw	2	; select bank4/5
  7780  19EF  0087               	movwf	7
  7781  19F0  083A               	movf	??_otoa,w
  7782  19F1  0081               	movwf	1
  7783                           
  7784                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
  7785  19F2  30FF               	movlw	255
  7786  19F3  07C2               	addwf	otoa@p,f
  7787  19F4  30FF               	movlw	255
  7788  19F5  3DC3               	addwfc	otoa@p+1,f
  7789                           
  7790                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
  7791  19F6  30FF               	movlw	255
  7792  19F7  07C6               	addwf	otoa@w,f
  7793  19F8  30FF               	movlw	255
  7794  19F9  3DC7               	addwfc	otoa@w+1,f
  7795                           
  7796                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
  7797  19FA  3048               	movlw	low otoa@n
  7798  19FB  0086               	movwf	6
  7799  19FC  3000               	movlw	high otoa@n
  7800  19FD  0087               	movwf	7
  7801  19FE  3F40               	moviw [0]fsr1
  7802  19FF  00BA               	movwf	??_otoa
  7803  1A00  3F41               	moviw [1]fsr1
  7804  1A01  00BB               	movwf	??_otoa+1
  7805  1A02  3F42               	moviw [2]fsr1
  7806  1A03  00BC               	movwf	??_otoa+2
  7807  1A04  3F43               	moviw [3]fsr1
  7808  1A05  00BD               	movwf	??_otoa+3
  7809  1A06  3F44               	moviw [4]fsr1
  7810  1A07  00BE               	movwf	??_otoa+4
  7811  1A08  3F45               	moviw [5]fsr1
  7812  1A09  00BF               	movwf	??_otoa+5
  7813  1A0A  3F46               	moviw [6]fsr1
  7814  1A0B  00C0               	movwf	??_otoa+6
  7815  1A0C  3F47               	moviw [7]fsr1
  7816  1A0D  00C1               	movwf	??_otoa+7
  7817  1A0E  3003               	movlw	3
  7818  1A0F                     u10645:	
  7819  1A0F  0020               	movlb	0	; select bank0
  7820  1A10  36C1               	lsrf	??_otoa+7,f
  7821  1A11  0CC0               	rrf	??_otoa+6,f
  7822  1A12  0CBF               	rrf	??_otoa+5,f
  7823  1A13  0CBE               	rrf	??_otoa+4,f
  7824  1A14  0CBD               	rrf	??_otoa+3,f
  7825  1A15  0CBC               	rrf	??_otoa+2,f
  7826  1A16  0CBB               	rrf	??_otoa+1,f
  7827  1A17  0CBA               	rrf	??_otoa,f
  7828  1A18  0B89               	decfsz	9,f
  7829  1A19  2A0F               	goto	u10645
  7830  1A1A  0020               	movlb	0	; select bank0
  7831  1A1B  0841               	movf	??_otoa+7,w
  7832  1A1C  00CF               	movwf	otoa@n+7
  7833  1A1D  0840               	movf	??_otoa+6,w
  7834  1A1E  00CE               	movwf	otoa@n+6
  7835  1A1F  083F               	movf	??_otoa+5,w
  7836  1A20  00CD               	movwf	otoa@n+5
  7837  1A21  083E               	movf	??_otoa+4,w
  7838  1A22  00CC               	movwf	otoa@n+4
  7839  1A23  083D               	movf	??_otoa+3,w
  7840  1A24  00CB               	movwf	otoa@n+3
  7841  1A25  083C               	movf	??_otoa+2,w
  7842  1A26  00CA               	movwf	otoa@n+2
  7843  1A27  083B               	movf	??_otoa+1,w
  7844  1A28  00C9               	movwf	otoa@n+1
  7845  1A29  083A               	movf	??_otoa,w
  7846  1A2A  00C8               	movwf	otoa@n
  7847  1A2B                     l638:	
  7848                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 531:     }
  7849                           
  7850                           
  7851                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7852  1A2B  0851               	movf	otoa@i+1,w
  7853  1A2C  3A80               	xorlw	128
  7854  1A2D  00BA               	movwf	??_otoa
  7855  1A2E  3080               	movlw	128
  7856  1A2F  023A               	subwf	??_otoa,w
  7857  1A30  1D03               	skipz
  7858  1A31  2A34               	goto	u10655
  7859  1A32  3001               	movlw	1
  7860  1A33  0250               	subwf	otoa@i,w
  7861  1A34                     u10655:	
  7862  1A34  1803               	btfsc	3,0
  7863  1A35  29B8               	goto	l7267
  7864  1A36                     l644:	
  7865                           
  7866                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
  7867  1A36  0023               	movlb	3	; select bank3
  7868  1A37  1E42               	btfss	_flags^(0+384),4
  7869  1A38  2A4F               	goto	l7283
  7870  1A39  0020               	movlb	0	; select bank0
  7871  1A3A  0844               	movf	otoa@t,w
  7872  1A3B  0445               	iorwf	otoa@t+1,w
  7873  1A3C  1903               	btfsc	3,2
  7874  1A3D  2A4F               	goto	l7283
  7875                           
  7876                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
  7877  1A3E  30FF               	movlw	255
  7878  1A3F  07D0               	addwf	otoa@i,f
  7879  1A40  30FF               	movlw	255
  7880  1A41  3DD1               	addwfc	otoa@i+1,f
  7881                           
  7882                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
  7883  1A42  3030               	movlw	48
  7884  1A43  00BA               	movwf	??_otoa
  7885  1A44  0850               	movf	otoa@i,w
  7886  1A45  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7887  1A46  0086               	movwf	6
  7888  1A47  3002               	movlw	2	; select bank4/5
  7889  1A48  0087               	movwf	7
  7890  1A49  083A               	movf	??_otoa,w
  7891  1A4A  0081               	movwf	1
  7892                           
  7893                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
  7894  1A4B  30FF               	movlw	255
  7895  1A4C  07C6               	addwf	otoa@w,f
  7896  1A4D  30FF               	movlw	255
  7897  1A4E  3DC7               	addwfc	otoa@w+1,f
  7898  1A4F                     l7283:	
  7899                           
  7900                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
  7901  1A4F  0020               	movlb	0	; select bank0
  7902  1A50  0831               	movf	otoa@fp+1,w
  7903  1A51  00A7               	movwf	pad@fp+1
  7904  1A52  0830               	movf	otoa@fp,w
  7905  1A53  00A6               	movwf	pad@fp
  7906  1A54  0850               	movf	otoa@i,w
  7907  1A55  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7908  1A56  00BA               	movwf	??_otoa
  7909  1A57  083A               	movf	??_otoa,w
  7910  1A58  00A8               	movwf	pad@buf
  7911  1A59  0847               	movf	otoa@w+1,w
  7912  1A5A  00AA               	movwf	pad@p+1
  7913  1A5B  0846               	movf	otoa@w,w
  7914  1A5C  00A9               	movwf	pad@p
  7915  1A5D  31AB  2307         	fcall	_pad
  7916  1A5F  0020               	movlb	0	; select bank0
  7917  1A60  0827               	movf	?_pad+1,w
  7918  1A61  00B1               	movwf	?_otoa+1
  7919  1A62  0826               	movf	?_pad,w
  7920  1A63  00B0               	movwf	?_otoa
  7921  1A64  0008               	return
  7922  1A65                     __end_of_otoa:	
  7923                           
  7924                           	psect	text16
  7925  0058                     __ptext16:	
  7926 ;; *************** function _efgtoa *****************
  7927 ;; Defined at:
  7928 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7929 ;; Parameters:    Size  Location     Type
  7930 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
  7931 ;;		 -> vsnprintf@f(6), 
  7932 ;;  f               4    2[BANK1 ] PTR struct _IO_FILE
  7933 ;;  c               1    6[BANK1 ] unsigned char 
  7934 ;; Auto vars:     Size  Location     Type
  7935 ;;  u               4   63[BANK1 ] unsigned char 
  7936 ;;  g               4   55[BANK1 ] unsigned char 
  7937 ;;  l               4   49[BANK1 ] unsigned char 
  7938 ;;  h               4   45[BANK1 ] unsigned char 
  7939 ;;  ou              4   11[BANK1 ] unsigned char 
  7940 ;;  n               2   61[BANK1 ] int 
  7941 ;;  e               2   59[BANK1 ] int 
  7942 ;;  i               2   53[BANK1 ] int 
  7943 ;;  w               2   42[BANK1 ] int 
  7944 ;;  p               2   39[BANK1 ] int 
  7945 ;;  sign            2   37[BANK1 ] int 
  7946 ;;  d               2   35[BANK1 ] int 
  7947 ;;  ne              2   33[BANK1 ] int 
  7948 ;;  m               2   31[BANK1 ] int 
  7949 ;;  pp              2   29[BANK1 ] int 
  7950 ;;  t               2   27[BANK1 ] int 
  7951 ;;  mode            1   44[BANK1 ] unsigned char 
  7952 ;;  nmode           1   41[BANK1 ] unsigned char 
  7953 ;; Return value:  Size  Location     Type
  7954 ;;                  2    0[BANK1 ] int 
  7955 ;; Registers used:
  7956 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7957 ;; Tracked objects:
  7958 ;;		On entry : 0/0
  7959 ;;		On exit  : 0/0
  7960 ;;		Unchanged: 0/0
  7961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7962 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7963 ;;      Locals:         0       0      56       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7964 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7965 ;;      Totals:         0       0      67       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7966 ;;Total ram usage:       67 bytes
  7967 ;; Hardware stack levels used:    1
  7968 ;; Hardware stack levels required when called:    5
  7969 ;; This function calls:
  7970 ;;		___awdiv
  7971 ;;		___awmod
  7972 ;;		___fladd
  7973 ;;		___fldiv
  7974 ;;		___fleq
  7975 ;;		___flge
  7976 ;;		___flmul
  7977 ;;		___flneg
  7978 ;;		___flsub
  7979 ;;		___fltol
  7980 ;;		___fpclassifyf
  7981 ;;		_floorf
  7982 ;;		_isupper
  7983 ;;		_pad
  7984 ;;		_strcpy
  7985 ;;		_tolower
  7986 ;; This function is called by:
  7987 ;;		_vfpfcnvrt
  7988 ;; This function uses a non-reentrant model
  7989 ;;
  7990                           
  7991                           
  7992                           ;psect for function _efgtoa
  7993  0058                     _efgtoa:	
  7994                           
  7995                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.05\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  7996                           
  7997                           ;incstack = 0
  7998                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7999  0058  0021               	movlb	1	; select bank1
  8000  0059  01C5               	clrf	efgtoa@sign^(0+128)
  8001  005A  01C6               	clrf	(efgtoa@sign+1)^(0+128)
  8002                           
  8003                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  8004  005B  0825               	movf	(efgtoa@f+3)^(0+128),w
  8005  005C  00DA               	movwf	(efgtoa@g+3)^(0+128)
  8006  005D  0824               	movf	(efgtoa@f+2)^(0+128),w
  8007  005E  00D9               	movwf	(efgtoa@g+2)^(0+128)
  8008  005F  0823               	movf	(efgtoa@f+1)^(0+128),w
  8009  0060  00D8               	movwf	(efgtoa@g+1)^(0+128)
  8010  0061  0822               	movf	efgtoa@f^(0+128),w
  8011  0062  00D7               	movwf	efgtoa@g^(0+128)
  8012                           
  8013                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  8014  0063  085A               	movf	(efgtoa@g+3)^(0+128),w
  8015  0064  0020               	movlb	0	; select bank0
  8016  0065  00C3               	movwf	___flge@ff1+3
  8017  0066  0021               	movlb	1	; select bank1
  8018  0067  0859               	movf	(efgtoa@g+2)^(0+128),w
  8019  0068  0020               	movlb	0	; select bank0
  8020  0069  00C2               	movwf	___flge@ff1+2
  8021  006A  0021               	movlb	1	; select bank1
  8022  006B  0858               	movf	(efgtoa@g+1)^(0+128),w
  8023  006C  0020               	movlb	0	; select bank0
  8024  006D  00C1               	movwf	___flge@ff1+1
  8025  006E  0021               	movlb	1	; select bank1
  8026  006F  0857               	movf	efgtoa@g^(0+128),w
  8027  0070  0020               	movlb	0	; select bank0
  8028  0071  00C0               	movwf	___flge@ff1
  8029  0072  3000               	movlw	0
  8030  0073  00C7               	movwf	___flge@ff2+3
  8031  0074  3000               	movlw	0
  8032  0075  00C6               	movwf	___flge@ff2+2
  8033  0076  3000               	movlw	0
  8034  0077  00C5               	movwf	___flge@ff2+1
  8035  0078  3000               	movlw	0
  8036  0079  00C4               	movwf	___flge@ff2
  8037  007A  31AC  24F0  3180   	fcall	___flge
  8038  007D  1803               	btfsc	3,0
  8039  007E  2898               	goto	l6961
  8040                           
  8041                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  8042  007F  3001               	movlw	1
  8043  0080  0021               	movlb	1	; select bank1
  8044  0081  00C5               	movwf	efgtoa@sign^(0+128)
  8045  0082  3000               	movlw	0
  8046  0083  00C6               	movwf	(efgtoa@sign^(0+128)+1)
  8047                           
  8048                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  8049  0084  085A               	movf	(efgtoa@g+3)^(0+128),w
  8050  0085  00F4               	movwf	___flneg@f1+3
  8051  0086  0859               	movf	(efgtoa@g+2)^(0+128),w
  8052  0087  00F3               	movwf	___flneg@f1+2
  8053  0088  0858               	movf	(efgtoa@g+1)^(0+128),w
  8054  0089  00F2               	movwf	___flneg@f1+1
  8055  008A  0857               	movf	efgtoa@g^(0+128),w
  8056  008B  00F1               	movwf	___flneg@f1
  8057  008C  31B6  26D0  3180   	fcall	___flneg
  8058  008F  0874               	movf	?___flneg+3,w
  8059  0090  0021               	movlb	1	; select bank1
  8060  0091  00DA               	movwf	(efgtoa@g+3)^(0+128)
  8061  0092  0873               	movf	?___flneg+2,w
  8062  0093  00D9               	movwf	(efgtoa@g+2)^(0+128)
  8063  0094  0872               	movf	?___flneg+1,w
  8064  0095  00D8               	movwf	(efgtoa@g+1)^(0+128)
  8065  0096  0871               	movf	?___flneg,w
  8066  0097  00D7               	movwf	efgtoa@g^(0+128)
  8067  0098                     l6961:	
  8068                           
  8069                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  8070  0098  0021               	movlb	1	; select bank1
  8071  0099  01DD               	clrf	efgtoa@n^(0+128)
  8072  009A  01DE               	clrf	(efgtoa@n+1)^(0+128)
  8073                           
  8074                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  8075  009B  0023               	movlb	3	; select bank3
  8076  009C  083F               	movf	(_width+1)^(0+384),w
  8077  009D  0021               	movlb	1	; select bank1
  8078  009E  00CB               	movwf	(efgtoa@w+1)^(0+128)
  8079  009F  0023               	movlb	3	; select bank3
  8080  00A0  083E               	movf	_width^(0+384),w
  8081  00A1  0021               	movlb	1	; select bank1
  8082  00A2  00CA               	movwf	efgtoa@w^(0+128)
  8083                           
  8084                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  8085  00A3  0845               	movf	efgtoa@sign^(0+128),w
  8086  00A4  0446               	iorwf	(efgtoa@sign+1)^(0+128),w
  8087  00A5  1D03               	btfss	3,2
  8088  00A6  28AA               	goto	l6969
  8089  00A7  0023               	movlb	3	; select bank3
  8090  00A8  1D42               	btfss	_flags^(0+384),2
  8091  00A9  28C3               	goto	l6981
  8092  00AA                     l6969:	
  8093                           
  8094                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  8095  00AA  0021               	movlb	1	; select bank1
  8096  00AB  0845               	movf	efgtoa@sign^(0+128),w
  8097  00AC  0446               	iorwf	(efgtoa@sign+1)^(0+128),w
  8098  00AD  1D03               	btfss	3,2
  8099  00AE  28B1               	goto	l6973
  8100  00AF  302B               	movlw	43
  8101  00B0  28B2               	goto	L3
  8102  00B1                     l6973:	
  8103  00B1  302D               	movlw	45
  8104  00B2                     L3:	
  8105  00B2  00AF               	movwf	_efgtoa$956^(0+128)
  8106  00B3  3000               	movlw	0
  8107  00B4  00B0               	movwf	(_efgtoa$956^(0+128)+1)
  8108  00B5  082F               	movf	_efgtoa$956^(0+128),w
  8109  00B6  00A7               	movwf	??_efgtoa^(0+128)
  8110  00B7  0827               	movf	??_efgtoa^(0+128),w
  8111  00B8  0024               	movlb	4	; select bank4
  8112  00B9  00A0               	movwf	_dbuf^(0+512)
  8113                           
  8114                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  8115  00BA  3001               	movlw	1
  8116  00BB  0021               	movlb	1	; select bank1
  8117  00BC  07DD               	addwf	efgtoa@n^(0+128),f
  8118  00BD  3000               	movlw	0
  8119  00BE  3DDE               	addwfc	(efgtoa@n+1)^(0+128),f
  8120                           
  8121                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  8122  00BF  30FF               	movlw	255
  8123  00C0  07CA               	addwf	efgtoa@w^(0+128),f
  8124  00C1  30FF               	movlw	255
  8125  00C2  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
  8126  00C3                     l6981:	
  8127                           
  8128                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  8129  00C3  0021               	movlb	1	; select bank1
  8130  00C4  085A               	movf	(efgtoa@g+3)^(0+128),w
  8131  00C5  00F4               	movwf	___fpclassifyf@x+3
  8132  00C6  0859               	movf	(efgtoa@g+2)^(0+128),w
  8133  00C7  00F3               	movwf	___fpclassifyf@x+2
  8134  00C8  0858               	movf	(efgtoa@g+1)^(0+128),w
  8135  00C9  00F2               	movwf	___fpclassifyf@x+1
  8136  00CA  0857               	movf	efgtoa@g^(0+128),w
  8137  00CB  00F1               	movwf	___fpclassifyf@x
  8138  00CC  31AC  2478  3180   	fcall	___fpclassifyf
  8139  00CF  0371               	decf	?___fpclassifyf,w
  8140  00D0  0472               	iorwf	?___fpclassifyf+1,w
  8141  00D1  1D03               	btfss	3,2
  8142  00D2  2921               	goto	l6999
  8143  00D3  0021               	movlb	1	; select bank1
  8144  00D4  0826               	movf	efgtoa@c^(0+128),w
  8145  00D5  3EBF               	addlw	191
  8146  00D6  00A7               	movwf	??_efgtoa^(0+128)
  8147  00D7  30FF               	movlw	255
  8148  00D8  1803               	skipnc
  8149  00D9  3000               	movlw	0
  8150  00DA  00A8               	movwf	(??_efgtoa^(0+128)+1)
  8151  00DB  3000               	movlw	0
  8152  00DC  0228               	subwf	(??_efgtoa+1)^(0+128),w
  8153  00DD  301A               	movlw	26
  8154  00DE  1903               	skipnz
  8155  00DF  0227               	subwf	??_efgtoa^(0+128),w
  8156  00E0  1803               	btfsc	3,0
  8157  00E1  28E4               	goto	u10150
  8158  00E2  3001               	movlw	1
  8159  00E3  28E5               	goto	u10160
  8160  00E4                     u10150:	
  8161  00E4  3000               	movlw	0
  8162  00E5                     u10160:	
  8163  00E5  00A9               	movwf	(??_efgtoa+2)^(0+128)
  8164  00E6  01AA               	clrf	((??_efgtoa+2)^(0+128)+1)
  8165  00E7  0829               	movf	(??_efgtoa+2)^(0+128),w
  8166  00E8  00B1               	movwf	_efgtoa$957^(0+128)
  8167  00E9  082A               	movf	(??_efgtoa+3)^(0+128),w
  8168  00EA  00B2               	movwf	(_efgtoa$957+1)^(0+128)
  8169  00EB  0831               	movf	_efgtoa$957^(0+128),w
  8170  00EC  0432               	iorwf	(_efgtoa$957+1)^(0+128),w
  8171  00ED  1903               	btfsc	3,2
  8172  00EE  28F3               	goto	l6991
  8173                           
  8174                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  8175  00EF  3038               	movlw	low (STR_10| (0+32768))
  8176  00F0  00F1               	movwf	strcpy@src
  8177  00F1  30B8               	movlw	high (STR_10| (0+32768))
  8178  00F2  28F6               	goto	L4
  8179  00F3                     l6991:	
  8180                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  8181                           
  8182                           
  8183                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  8184  00F3  3048               	movlw	low (STR_11| (0+32768))
  8185  00F4  00F1               	movwf	strcpy@src
  8186  00F5  30B8               	movlw	high (STR_11| (0+32768))
  8187  00F6                     L4:	
  8188  00F6  00F2               	movwf	strcpy@src+1
  8189  00F7  085D               	movf	efgtoa@n^(0+128),w
  8190  00F8  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8191  00F9  31A8  2077  3180   	fcall	_strcpy
  8192                           
  8193                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  8194  00FC  30FD               	movlw	253
  8195  00FD  0021               	movlb	1	; select bank1
  8196  00FE  07CA               	addwf	efgtoa@w^(0+128),f
  8197  00FF  30FF               	movlw	255
  8198  0100  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
  8199                           
  8200                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  8201  0101  0821               	movf	(efgtoa@fp+1)^(0+128),w
  8202  0102  0020               	movlb	0	; select bank0
  8203  0103  00A7               	movwf	pad@fp+1
  8204  0104  0021               	movlb	1	; select bank1
  8205  0105  0820               	movf	efgtoa@fp^(0+128),w
  8206  0106  0020               	movlb	0	; select bank0
  8207  0107  00A6               	movwf	pad@fp
  8208  0108  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  8209  0109  0021               	movlb	1	; select bank1
  8210  010A  00A7               	movwf	??_efgtoa^(0+128)
  8211  010B  0827               	movf	??_efgtoa^(0+128),w
  8212  010C  0020               	movlb	0	; select bank0
  8213  010D  00A8               	movwf	pad@buf
  8214  010E  0021               	movlb	1	; select bank1
  8215  010F  084B               	movf	(efgtoa@w+1)^(0+128),w
  8216  0110  0020               	movlb	0	; select bank0
  8217  0111  00AA               	movwf	pad@p+1
  8218  0112  0021               	movlb	1	; select bank1
  8219  0113  084A               	movf	efgtoa@w^(0+128),w
  8220  0114  0020               	movlb	0	; select bank0
  8221  0115  00A9               	movwf	pad@p
  8222  0116  31AB  2307         	fcall	_pad
  8223  0118  0020               	movlb	0	; select bank0
  8224  0119  0827               	movf	?_pad+1,w
  8225  011A  0021               	movlb	1	; select bank1
  8226  011B  00A1               	movwf	(?_efgtoa+1)^(0+128)
  8227  011C  0020               	movlb	0	; select bank0
  8228  011D  0826               	movf	?_pad,w
  8229  011E  0021               	movlb	1	; select bank1
  8230  011F  00A0               	movwf	?_efgtoa^(0+128)
  8231  0120  0008               	return
  8232  0121                     l6999:	
  8233                           
  8234                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  8235  0121  0021               	movlb	1	; select bank1
  8236  0122  085A               	movf	(efgtoa@g+3)^(0+128),w
  8237  0123  00F4               	movwf	___fpclassifyf@x+3
  8238  0124  0859               	movf	(efgtoa@g+2)^(0+128),w
  8239  0125  00F3               	movwf	___fpclassifyf@x+2
  8240  0126  0858               	movf	(efgtoa@g+1)^(0+128),w
  8241  0127  00F2               	movwf	___fpclassifyf@x+1
  8242  0128  0857               	movf	efgtoa@g^(0+128),w
  8243  0129  00F1               	movwf	___fpclassifyf@x
  8244  012A  31AC  2478  3180   	fcall	___fpclassifyf
  8245  012D  0871               	movf	?___fpclassifyf,w
  8246  012E  0472               	iorwf	?___fpclassifyf+1,w
  8247  012F  1D03               	btfss	3,2
  8248  0130  297F               	goto	l7017
  8249  0131  0021               	movlb	1	; select bank1
  8250  0132  0826               	movf	efgtoa@c^(0+128),w
  8251  0133  3EBF               	addlw	191
  8252  0134  00A7               	movwf	??_efgtoa^(0+128)
  8253  0135  30FF               	movlw	255
  8254  0136  1803               	skipnc
  8255  0137  3000               	movlw	0
  8256  0138  00A8               	movwf	(??_efgtoa^(0+128)+1)
  8257  0139  3000               	movlw	0
  8258  013A  0228               	subwf	(??_efgtoa+1)^(0+128),w
  8259  013B  301A               	movlw	26
  8260  013C  1903               	skipnz
  8261  013D  0227               	subwf	??_efgtoa^(0+128),w
  8262  013E  1803               	btfsc	3,0
  8263  013F  2942               	goto	u10190
  8264  0140  3001               	movlw	1
  8265  0141  2943               	goto	u10200
  8266  0142                     u10190:	
  8267  0142  3000               	movlw	0
  8268  0143                     u10200:	
  8269  0143  00A9               	movwf	(??_efgtoa+2)^(0+128)
  8270  0144  01AA               	clrf	((??_efgtoa+2)^(0+128)+1)
  8271  0145  0829               	movf	(??_efgtoa+2)^(0+128),w
  8272  0146  00B3               	movwf	_efgtoa$961^(0+128)
  8273  0147  082A               	movf	(??_efgtoa+3)^(0+128),w
  8274  0148  00B4               	movwf	(_efgtoa$961+1)^(0+128)
  8275  0149  0833               	movf	_efgtoa$961^(0+128),w
  8276  014A  0434               	iorwf	(_efgtoa$961+1)^(0+128),w
  8277  014B  1903               	btfsc	3,2
  8278  014C  2951               	goto	l7009
  8279                           
  8280                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  8281  014D  303C               	movlw	low (STR_14| (0+32768))
  8282  014E  00F1               	movwf	strcpy@src
  8283  014F  30B8               	movlw	high (STR_14| (0+32768))
  8284  0150  2954               	goto	L5
  8285  0151                     l7009:	
  8286                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  8287                           
  8288                           
  8289                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  8290  0151  3050               	movlw	low (STR_15| (0+32768))
  8291  0152  00F1               	movwf	strcpy@src
  8292  0153  30B8               	movlw	high (STR_15| (0+32768))
  8293  0154                     L5:	
  8294  0154  00F2               	movwf	strcpy@src+1
  8295  0155  085D               	movf	efgtoa@n^(0+128),w
  8296  0156  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8297  0157  31A8  2077  3180   	fcall	_strcpy
  8298                           
  8299                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 358:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  8300  015A  30FD               	movlw	253
  8301  015B  0021               	movlb	1	; select bank1
  8302  015C  07CA               	addwf	efgtoa@w^(0+128),f
  8303  015D  30FF               	movlw	255
  8304  015E  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
  8305                           
  8306                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 359:       
      +                            return pad(fp, &dbuf[0], w);
  8307  015F  0821               	movf	(efgtoa@fp+1)^(0+128),w
  8308  0160  0020               	movlb	0	; select bank0
  8309  0161  00A7               	movwf	pad@fp+1
  8310  0162  0021               	movlb	1	; select bank1
  8311  0163  0820               	movf	efgtoa@fp^(0+128),w
  8312  0164  0020               	movlb	0	; select bank0
  8313  0165  00A6               	movwf	pad@fp
  8314  0166  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  8315  0167  0021               	movlb	1	; select bank1
  8316  0168  00A7               	movwf	??_efgtoa^(0+128)
  8317  0169  0827               	movf	??_efgtoa^(0+128),w
  8318  016A  0020               	movlb	0	; select bank0
  8319  016B  00A8               	movwf	pad@buf
  8320  016C  0021               	movlb	1	; select bank1
  8321  016D  084B               	movf	(efgtoa@w+1)^(0+128),w
  8322  016E  0020               	movlb	0	; select bank0
  8323  016F  00AA               	movwf	pad@p+1
  8324  0170  0021               	movlb	1	; select bank1
  8325  0171  084A               	movf	efgtoa@w^(0+128),w
  8326  0172  0020               	movlb	0	; select bank0
  8327  0173  00A9               	movwf	pad@p
  8328  0174  31AB  2307         	fcall	_pad
  8329  0176  0020               	movlb	0	; select bank0
  8330  0177  0827               	movf	?_pad+1,w
  8331  0178  0021               	movlb	1	; select bank1
  8332  0179  00A1               	movwf	(?_efgtoa+1)^(0+128)
  8333  017A  0020               	movlb	0	; select bank0
  8334  017B  0826               	movf	?_pad,w
  8335  017C  0021               	movlb	1	; select bank1
  8336  017D  00A0               	movwf	?_efgtoa^(0+128)
  8337  017E  0008               	return
  8338  017F                     l7017:	
  8339                           
  8340                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  8341  017F  303F               	movlw	63
  8342  0180  0021               	movlb	1	; select bank1
  8343  0181  00E2               	movwf	(efgtoa@u+3)^(0+128)
  8344  0182  3080               	movlw	128
  8345  0183  00E1               	movwf	(efgtoa@u+2)^(0+128)
  8346  0184  3000               	movlw	0
  8347  0185  00E0               	movwf	(efgtoa@u+1)^(0+128)
  8348  0186  3000               	movlw	0
  8349  0187  00DF               	movwf	efgtoa@u^(0+128)
  8350                           
  8351                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  8352  0188  01DB               	clrf	efgtoa@e^(0+128)
  8353  0189  01DC               	clrf	(efgtoa@e+1)^(0+128)
  8354                           
  8355                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  8356  018A  085A               	movf	(efgtoa@g+3)^(0+128),w
  8357  018B  00F4               	movwf	___fleq@ff1+3
  8358  018C  0859               	movf	(efgtoa@g+2)^(0+128),w
  8359  018D  00F3               	movwf	___fleq@ff1+2
  8360  018E  0858               	movf	(efgtoa@g+1)^(0+128),w
  8361  018F  00F2               	movwf	___fleq@ff1+1
  8362  0190  0857               	movf	efgtoa@g^(0+128),w
  8363  0191  00F1               	movwf	___fleq@ff1
  8364  0192  3000               	movlw	0
  8365  0193  00F8               	movwf	___fleq@ff2+3
  8366  0194  3000               	movlw	0
  8367  0195  00F7               	movwf	___fleq@ff2+2
  8368  0196  3000               	movlw	0
  8369  0197  00F6               	movwf	___fleq@ff2+1
  8370  0198  3000               	movlw	0
  8371  0199  00F5               	movwf	___fleq@ff2
  8372  019A  31AA  22BE  3180   	fcall	___fleq
  8373  019D  1C03               	btfss	3,0
  8374  019E  29D0               	goto	l7029
  8375  019F  2A5F               	goto	l7037
  8376  01A0                     l7025:	
  8377                           
  8378                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  8379  01A0  3041               	movlw	65
  8380  01A1  0020               	movlb	0	; select bank0
  8381  01A2  00A9               	movwf	___flmul@b+3
  8382  01A3  3020               	movlw	32
  8383  01A4  00A8               	movwf	___flmul@b+2
  8384  01A5  3000               	movlw	0
  8385  01A6  00A7               	movwf	___flmul@b+1
  8386  01A7  3000               	movlw	0
  8387  01A8  00A6               	movwf	___flmul@b
  8388  01A9  0021               	movlb	1	; select bank1
  8389  01AA  0862               	movf	(efgtoa@u+3)^(0+128),w
  8390  01AB  0020               	movlb	0	; select bank0
  8391  01AC  00AD               	movwf	___flmul@a+3
  8392  01AD  0021               	movlb	1	; select bank1
  8393  01AE  0861               	movf	(efgtoa@u+2)^(0+128),w
  8394  01AF  0020               	movlb	0	; select bank0
  8395  01B0  00AC               	movwf	___flmul@a+2
  8396  01B1  0021               	movlb	1	; select bank1
  8397  01B2  0860               	movf	(efgtoa@u+1)^(0+128),w
  8398  01B3  0020               	movlb	0	; select bank0
  8399  01B4  00AB               	movwf	___flmul@a+1
  8400  01B5  0021               	movlb	1	; select bank1
  8401  01B6  085F               	movf	efgtoa@u^(0+128),w
  8402  01B7  0020               	movlb	0	; select bank0
  8403  01B8  00AA               	movwf	___flmul@a
  8404  01B9  3195  25D4  3180   	fcall	___flmul
  8405  01BC  0020               	movlb	0	; select bank0
  8406  01BD  0829               	movf	?___flmul+3,w
  8407  01BE  0021               	movlb	1	; select bank1
  8408  01BF  00E2               	movwf	(efgtoa@u+3)^(0+128)
  8409  01C0  0020               	movlb	0	; select bank0
  8410  01C1  0828               	movf	?___flmul+2,w
  8411  01C2  0021               	movlb	1	; select bank1
  8412  01C3  00E1               	movwf	(efgtoa@u+2)^(0+128)
  8413  01C4  0020               	movlb	0	; select bank0
  8414  01C5  0827               	movf	?___flmul+1,w
  8415  01C6  0021               	movlb	1	; select bank1
  8416  01C7  00E0               	movwf	(efgtoa@u+1)^(0+128)
  8417  01C8  0020               	movlb	0	; select bank0
  8418  01C9  0826               	movf	?___flmul,w
  8419  01CA  0021               	movlb	1	; select bank1
  8420  01CB  00DF               	movwf	efgtoa@u^(0+128)
  8421                           
  8422                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  8423  01CC  3001               	movlw	1
  8424  01CD  07DB               	addwf	efgtoa@e^(0+128),f
  8425  01CE  3000               	movlw	0
  8426  01CF  3DDC               	addwfc	(efgtoa@e+1)^(0+128),f
  8427  01D0                     l7029:	
  8428                           
  8429                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  8430  01D0  0021               	movlb	1	; select bank1
  8431  01D1  085A               	movf	(efgtoa@g+3)^(0+128),w
  8432  01D2  0020               	movlb	0	; select bank0
  8433  01D3  00C3               	movwf	___flge@ff1+3
  8434  01D4  0021               	movlb	1	; select bank1
  8435  01D5  0859               	movf	(efgtoa@g+2)^(0+128),w
  8436  01D6  0020               	movlb	0	; select bank0
  8437  01D7  00C2               	movwf	___flge@ff1+2
  8438  01D8  0021               	movlb	1	; select bank1
  8439  01D9  0858               	movf	(efgtoa@g+1)^(0+128),w
  8440  01DA  0020               	movlb	0	; select bank0
  8441  01DB  00C1               	movwf	___flge@ff1+1
  8442  01DC  0021               	movlb	1	; select bank1
  8443  01DD  0857               	movf	efgtoa@g^(0+128),w
  8444  01DE  0020               	movlb	0	; select bank0
  8445  01DF  00C0               	movwf	___flge@ff1
  8446  01E0  3041               	movlw	65
  8447  01E1  00A9               	movwf	___flmul@b+3
  8448  01E2  3020               	movlw	32
  8449  01E3  00A8               	movwf	___flmul@b+2
  8450  01E4  3000               	movlw	0
  8451  01E5  00A7               	movwf	___flmul@b+1
  8452  01E6  3000               	movlw	0
  8453  01E7  00A6               	movwf	___flmul@b
  8454  01E8  0021               	movlb	1	; select bank1
  8455  01E9  0862               	movf	(efgtoa@u+3)^(0+128),w
  8456  01EA  0020               	movlb	0	; select bank0
  8457  01EB  00AD               	movwf	___flmul@a+3
  8458  01EC  0021               	movlb	1	; select bank1
  8459  01ED  0861               	movf	(efgtoa@u+2)^(0+128),w
  8460  01EE  0020               	movlb	0	; select bank0
  8461  01EF  00AC               	movwf	___flmul@a+2
  8462  01F0  0021               	movlb	1	; select bank1
  8463  01F1  0860               	movf	(efgtoa@u+1)^(0+128),w
  8464  01F2  0020               	movlb	0	; select bank0
  8465  01F3  00AB               	movwf	___flmul@a+1
  8466  01F4  0021               	movlb	1	; select bank1
  8467  01F5  085F               	movf	efgtoa@u^(0+128),w
  8468  01F6  0020               	movlb	0	; select bank0
  8469  01F7  00AA               	movwf	___flmul@a
  8470  01F8  3195  25D4  3180   	fcall	___flmul
  8471  01FB  0020               	movlb	0	; select bank0
  8472  01FC  0829               	movf	?___flmul+3,w
  8473  01FD  00C7               	movwf	___flge@ff2+3
  8474  01FE  0828               	movf	?___flmul+2,w
  8475  01FF  00C6               	movwf	___flge@ff2+2
  8476  0200  0827               	movf	?___flmul+1,w
  8477  0201  00C5               	movwf	___flge@ff2+1
  8478  0202  0826               	movf	?___flmul,w
  8479  0203  00C4               	movwf	___flge@ff2
  8480  0204  31AC  24F0  3180   	fcall	___flge
  8481  0207  1C03               	btfss	3,0
  8482  0208  2A3A               	goto	l7035
  8483  0209  29A0               	goto	l7025
  8484  020A                     l7031:	
  8485                           
  8486                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  8487  020A  3041               	movlw	65
  8488  020B  0020               	movlb	0	; select bank0
  8489  020C  00C3               	movwf	___fldiv@a+3
  8490  020D  3020               	movlw	32
  8491  020E  00C2               	movwf	___fldiv@a+2
  8492  020F  3000               	movlw	0
  8493  0210  00C1               	movwf	___fldiv@a+1
  8494  0211  3000               	movlw	0
  8495  0212  00C0               	movwf	___fldiv@a
  8496  0213  0021               	movlb	1	; select bank1
  8497  0214  0862               	movf	(efgtoa@u+3)^(0+128),w
  8498  0215  0020               	movlb	0	; select bank0
  8499  0216  00C7               	movwf	___fldiv@b+3
  8500  0217  0021               	movlb	1	; select bank1
  8501  0218  0861               	movf	(efgtoa@u+2)^(0+128),w
  8502  0219  0020               	movlb	0	; select bank0
  8503  021A  00C6               	movwf	___fldiv@b+2
  8504  021B  0021               	movlb	1	; select bank1
  8505  021C  0860               	movf	(efgtoa@u+1)^(0+128),w
  8506  021D  0020               	movlb	0	; select bank0
  8507  021E  00C5               	movwf	___fldiv@b+1
  8508  021F  0021               	movlb	1	; select bank1
  8509  0220  085F               	movf	efgtoa@u^(0+128),w
  8510  0221  0020               	movlb	0	; select bank0
  8511  0222  00C4               	movwf	___fldiv@b
  8512  0223  3190  2061  3180   	fcall	___fldiv
  8513  0226  0020               	movlb	0	; select bank0
  8514  0227  0843               	movf	?___fldiv+3,w
  8515  0228  0021               	movlb	1	; select bank1
  8516  0229  00E2               	movwf	(efgtoa@u+3)^(0+128)
  8517  022A  0020               	movlb	0	; select bank0
  8518  022B  0842               	movf	?___fldiv+2,w
  8519  022C  0021               	movlb	1	; select bank1
  8520  022D  00E1               	movwf	(efgtoa@u+2)^(0+128)
  8521  022E  0020               	movlb	0	; select bank0
  8522  022F  0841               	movf	?___fldiv+1,w
  8523  0230  0021               	movlb	1	; select bank1
  8524  0231  00E0               	movwf	(efgtoa@u+1)^(0+128)
  8525  0232  0020               	movlb	0	; select bank0
  8526  0233  0840               	movf	?___fldiv,w
  8527  0234  0021               	movlb	1	; select bank1
  8528  0235  00DF               	movwf	efgtoa@u^(0+128)
  8529                           
  8530                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  8531  0236  30FF               	movlw	255
  8532  0237  07DB               	addwf	efgtoa@e^(0+128),f
  8533  0238  30FF               	movlw	255
  8534  0239  3DDC               	addwfc	(efgtoa@e+1)^(0+128),f
  8535  023A                     l7035:	
  8536                           
  8537                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  8538  023A  0021               	movlb	1	; select bank1
  8539  023B  085A               	movf	(efgtoa@g+3)^(0+128),w
  8540  023C  0020               	movlb	0	; select bank0
  8541  023D  00C3               	movwf	___flge@ff1+3
  8542  023E  0021               	movlb	1	; select bank1
  8543  023F  0859               	movf	(efgtoa@g+2)^(0+128),w
  8544  0240  0020               	movlb	0	; select bank0
  8545  0241  00C2               	movwf	___flge@ff1+2
  8546  0242  0021               	movlb	1	; select bank1
  8547  0243  0858               	movf	(efgtoa@g+1)^(0+128),w
  8548  0244  0020               	movlb	0	; select bank0
  8549  0245  00C1               	movwf	___flge@ff1+1
  8550  0246  0021               	movlb	1	; select bank1
  8551  0247  0857               	movf	efgtoa@g^(0+128),w
  8552  0248  0020               	movlb	0	; select bank0
  8553  0249  00C0               	movwf	___flge@ff1
  8554  024A  0021               	movlb	1	; select bank1
  8555  024B  0862               	movf	(efgtoa@u+3)^(0+128),w
  8556  024C  0020               	movlb	0	; select bank0
  8557  024D  00C7               	movwf	___flge@ff2+3
  8558  024E  0021               	movlb	1	; select bank1
  8559  024F  0861               	movf	(efgtoa@u+2)^(0+128),w
  8560  0250  0020               	movlb	0	; select bank0
  8561  0251  00C6               	movwf	___flge@ff2+2
  8562  0252  0021               	movlb	1	; select bank1
  8563  0253  0860               	movf	(efgtoa@u+1)^(0+128),w
  8564  0254  0020               	movlb	0	; select bank0
  8565  0255  00C5               	movwf	___flge@ff2+1
  8566  0256  0021               	movlb	1	; select bank1
  8567  0257  085F               	movf	efgtoa@u^(0+128),w
  8568  0258  0020               	movlb	0	; select bank0
  8569  0259  00C4               	movwf	___flge@ff2
  8570  025A  31AC  24F0  3180   	fcall	___flge
  8571  025D  1C03               	btfss	3,0
  8572  025E  2A0A               	goto	l7031
  8573  025F                     l7037:	
  8574                           
  8575                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  8576  025F  0021               	movlb	1	; select bank1
  8577  0260  0826               	movf	efgtoa@c^(0+128),w
  8578  0261  00A7               	movwf	??_efgtoa^(0+128)
  8579  0262  01A8               	clrf	(??_efgtoa^(0+128)+1)
  8580  0263  0827               	movf	??_efgtoa^(0+128),w
  8581  0264  00F7               	movwf	tolower@c
  8582  0265  0828               	movf	(??_efgtoa+1)^(0+128),w
  8583  0266  00F8               	movwf	tolower@c+1
  8584  0267  31A8  20D9  3180   	fcall	_tolower
  8585  026A  0877               	movf	?_tolower,w
  8586  026B  0021               	movlb	1	; select bank1
  8587  026C  00A9               	movwf	(??_efgtoa+2)^(0+128)
  8588  026D  0829               	movf	(??_efgtoa+2)^(0+128),w
  8589  026E  00CC               	movwf	efgtoa@mode^(0+128)
  8590                           
  8591                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  8592  026F  084C               	movf	efgtoa@mode^(0+128),w
  8593  0270  00A7               	movwf	??_efgtoa^(0+128)
  8594  0271  0827               	movf	??_efgtoa^(0+128),w
  8595  0272  00C9               	movwf	efgtoa@nmode^(0+128)
  8596                           
  8597                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  8598  0273  3067               	movlw	103
  8599  0274  064C               	xorwf	efgtoa@mode^(0+128),w
  8600  0275  1D03               	btfss	3,2
  8601  0276  2A93               	goto	l572
  8602                           
  8603                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  8604  0277  0023               	movlb	3	; select bank3
  8605  0278  0840               	movf	_prec^(0+384),w
  8606  0279  0441               	iorwf	(_prec+1)^(0+384),w
  8607  027A  1D03               	btfss	3,2
  8608  027B  2A80               	goto	l573
  8609                           
  8610                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  8611  027C  3001               	movlw	1
  8612  027D  00C0               	movwf	_prec^(0+384)
  8613  027E  3000               	movlw	0
  8614  027F  00C1               	movwf	(_prec^(0+384)+1)
  8615  0280                     l573:	
  8616                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 382:   }
  8617                           
  8618                           
  8619                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  8620  0280  0841               	movf	(_prec+1)^(0+384),w
  8621  0281  3A80               	xorlw	128
  8622  0282  0021               	movlb	1	; select bank1
  8623  0283  00A7               	movwf	??_efgtoa^(0+128)
  8624  0284  3080               	movlw	128
  8625  0285  0227               	subwf	??_efgtoa^(0+128),w
  8626  0286  1D03               	skipz
  8627  0287  2A8B               	goto	u10275
  8628  0288  3001               	movlw	1
  8629  0289  0023               	movlb	3	; select bank3
  8630  028A  0240               	subwf	_prec^(0+384),w
  8631  028B                     u10275:	
  8632  028B  1803               	skipnc
  8633  028C  2A96               	goto	l7049
  8634  028D                     l7047:	
  8635  028D  3006               	movlw	6
  8636  028E  0021               	movlb	1	; select bank1
  8637  028F  00C7               	movwf	efgtoa@p^(0+128)
  8638  0290  3000               	movlw	0
  8639  0291  00C8               	movwf	(efgtoa@p^(0+128)+1)
  8640  0292  2A9E               	goto	l7055
  8641  0293                     l572:	
  8642                           
  8643                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  8644  0293  0023               	movlb	3	; select bank3
  8645  0294  1BC1               	btfsc	(_prec+1)^(0+384),7
  8646  0295  2A8D               	goto	l7047
  8647  0296                     l7049:	
  8648  0296  0023               	movlb	3	; select bank3
  8649  0297  0841               	movf	(_prec+1)^(0+384),w
  8650  0298  0021               	movlb	1	; select bank1
  8651  0299  00C8               	movwf	(efgtoa@p+1)^(0+128)
  8652  029A  0023               	movlb	3	; select bank3
  8653  029B  0840               	movf	_prec^(0+384),w
  8654  029C  0021               	movlb	1	; select bank1
  8655  029D  00C7               	movwf	efgtoa@p^(0+128)
  8656  029E                     l7055:	
  8657                           
  8658                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  8659  029E  3067               	movlw	103
  8660  029F  064C               	xorwf	efgtoa@mode^(0+128),w
  8661  02A0  1D03               	btfss	3,2
  8662  02A1  2AC7               	goto	l583
  8663                           
  8664                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  8665  02A2  085C               	movf	(efgtoa@e+1)^(0+128),w
  8666  02A3  3A80               	xorlw	128
  8667  02A4  00A7               	movwf	??_efgtoa^(0+128)
  8668  02A5  307F               	movlw	127
  8669  02A6  0227               	subwf	??_efgtoa^(0+128),w
  8670  02A7  1D03               	skipz
  8671  02A8  2AAB               	goto	u10305
  8672  02A9  30FC               	movlw	252
  8673  02AA  025B               	subwf	efgtoa@e^(0+128),w
  8674  02AB                     u10305:	
  8675  02AB  1C03               	skipc
  8676  02AC  2AC2               	goto	l7063
  8677  02AD  0021               	movlb	1	; select bank1
  8678  02AE  0847               	movf	efgtoa@p^(0+128),w
  8679  02AF  3EFF               	addlw	255
  8680  02B0  00A7               	movwf	??_efgtoa^(0+128)
  8681  02B1  30FF               	movlw	255
  8682  02B2  3D48               	addwfc	(efgtoa@p+1)^(0+128),w
  8683  02B3  00A8               	movwf	(??_efgtoa+1)^(0+128)
  8684  02B4  0828               	movf	(??_efgtoa+1)^(0+128),w
  8685  02B5  3A80               	xorlw	128
  8686  02B6  00A9               	movwf	(??_efgtoa+2)^(0+128)
  8687  02B7  085C               	movf	(efgtoa@e+1)^(0+128),w
  8688  02B8  3A80               	xorlw	128
  8689  02B9  0229               	subwf	(??_efgtoa+2)^(0+128),w
  8690  02BA  1D03               	skipz
  8691  02BB  2ABE               	goto	u10315
  8692  02BC  085B               	movf	efgtoa@e^(0+128),w
  8693  02BD  0227               	subwf	??_efgtoa^(0+128),w
  8694  02BE                     u10315:	
  8695  02BE  1C03               	skipc
  8696  02BF  2AC2               	goto	l7063
  8697                           
  8698                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  8699  02C0  3066               	movlw	102
  8700  02C1  2AC3               	goto	L6
  8701  02C2                     l7063:	
  8702                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  8703                           
  8704                           
  8705                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  8706  02C2  3065               	movlw	101
  8707  02C3                     L6:	
  8708  02C3  0021               	movlb	1	; select bank1
  8709  02C4  00A7               	movwf	??_efgtoa^(0+128)
  8710  02C5  0827               	movf	??_efgtoa^(0+128),w
  8711  02C6  00C9               	movwf	efgtoa@nmode^(0+128)
  8712  02C7                     l583:	
  8713                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 395:     }
  8714                           
  8715                           
  8716                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  8717  02C7  0848               	movf	(efgtoa@p+1)^(0+128),w
  8718  02C8  00C0               	movwf	(efgtoa@m+1)^(0+128)
  8719  02C9  0847               	movf	efgtoa@p^(0+128),w
  8720  02CA  00BF               	movwf	efgtoa@m^(0+128)
  8721                           
  8722                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  8723  02CB  3067               	movlw	103
  8724  02CC  064C               	xorwf	efgtoa@mode^(0+128),w
  8725  02CD  1D03               	btfss	3,2
  8726  02CE  2AD4               	goto	l7071
  8727  02CF  3066               	movlw	102
  8728  02D0  0649               	xorwf	efgtoa@nmode^(0+128),w
  8729  02D1  1903               	btfsc	3,2
  8730  02D2  1FDC               	btfss	(efgtoa@e+1)^(0+128),7
  8731  02D3  2AD8               	goto	l7073
  8732  02D4                     l7071:	
  8733                           
  8734                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  8735  02D4  3001               	movlw	1
  8736  02D5  07BF               	addwf	efgtoa@m^(0+128),f
  8737  02D6  3000               	movlw	0
  8738  02D7  3DC0               	addwfc	(efgtoa@m+1)^(0+128),f
  8739  02D8                     l7073:	
  8740                           
  8741                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  8742  02D8  3066               	movlw	102
  8743  02D9  0649               	xorwf	efgtoa@nmode^(0+128),w
  8744  02DA  1D03               	btfss	3,2
  8745  02DB  2AF0               	goto	l7085
  8746                           
  8747                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  8748  02DC  1FDC               	btfss	(efgtoa@e+1)^(0+128),7
  8749  02DD  2AE8               	goto	l7081
  8750                           
  8751                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  8752  02DE  303F               	movlw	63
  8753  02DF  00E2               	movwf	(efgtoa@u+3)^(0+128)
  8754  02E0  3080               	movlw	128
  8755  02E1  00E1               	movwf	(efgtoa@u+2)^(0+128)
  8756  02E2  3000               	movlw	0
  8757  02E3  00E0               	movwf	(efgtoa@u+1)^(0+128)
  8758  02E4  3000               	movlw	0
  8759  02E5  00DF               	movwf	efgtoa@u^(0+128)
  8760                           
  8761                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  8762  02E6  01DB               	clrf	efgtoa@e^(0+128)
  8763  02E7  01DC               	clrf	(efgtoa@e+1)^(0+128)
  8764  02E8                     l7081:	
  8765                           
  8766                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  8767  02E8  3067               	movlw	103
  8768  02E9  064C               	xorwf	efgtoa@mode^(0+128),w
  8769  02EA  1903               	btfsc	3,2
  8770  02EB  2AF0               	goto	l7085
  8771                           
  8772                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  8773  02EC  085B               	movf	efgtoa@e^(0+128),w
  8774  02ED  07BF               	addwf	efgtoa@m^(0+128),f
  8775  02EE  085C               	movf	(efgtoa@e+1)^(0+128),w
  8776  02EF  3DC0               	addwfc	(efgtoa@m+1)^(0+128),f
  8777  02F0                     l7085:	
  8778                           
  8779                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  8780  02F0  01D5               	clrf	efgtoa@i^(0+128)
  8781  02F1  01D6               	clrf	(efgtoa@i+1)^(0+128)
  8782                           
  8783                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  8784  02F2  085A               	movf	(efgtoa@g+3)^(0+128),w
  8785  02F3  00D0               	movwf	(efgtoa@h+3)^(0+128)
  8786  02F4  0859               	movf	(efgtoa@g+2)^(0+128),w
  8787  02F5  00CF               	movwf	(efgtoa@h+2)^(0+128)
  8788  02F6  0858               	movf	(efgtoa@g+1)^(0+128),w
  8789  02F7  00CE               	movwf	(efgtoa@h+1)^(0+128)
  8790  02F8  0857               	movf	efgtoa@g^(0+128),w
  8791  02F9  00CD               	movwf	efgtoa@h^(0+128)
  8792                           
  8793                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  8794  02FA  0862               	movf	(efgtoa@u+3)^(0+128),w
  8795  02FB  00AE               	movwf	(efgtoa@ou+3)^(0+128)
  8796  02FC  0861               	movf	(efgtoa@u+2)^(0+128),w
  8797  02FD  00AD               	movwf	(efgtoa@ou+2)^(0+128)
  8798  02FE  0860               	movf	(efgtoa@u+1)^(0+128),w
  8799  02FF  00AC               	movwf	(efgtoa@ou+1)^(0+128)
  8800  0300  085F               	movf	efgtoa@u^(0+128),w
  8801  0301  00AB               	movwf	efgtoa@ou^(0+128)
  8802  0302                     l7095:	
  8803                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  8804                           
  8805                           
  8806                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  8807  0302  0856               	movf	(efgtoa@i+1)^(0+128),w
  8808  0303  3A80               	xorlw	128
  8809  0304  00A7               	movwf	??_efgtoa^(0+128)
  8810  0305  0840               	movf	(efgtoa@m+1)^(0+128),w
  8811  0306  3A80               	xorlw	128
  8812  0307  0227               	subwf	??_efgtoa^(0+128),w
  8813  0308  1D03               	skipz
  8814  0309  2B0C               	goto	u10385
  8815  030A  083F               	movf	efgtoa@m^(0+128),w
  8816  030B  0255               	subwf	efgtoa@i^(0+128),w
  8817  030C                     u10385:	
  8818  030C  1803               	btfsc	3,0
  8819  030D  2BE6               	goto	l7097
  8820                           
  8821                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  8822  030E  0021               	movlb	1	; select bank1
  8823  030F  0862               	movf	(efgtoa@u+3)^(0+128),w
  8824  0310  0020               	movlb	0	; select bank0
  8825  0311  00C3               	movwf	___fldiv@a+3
  8826  0312  0021               	movlb	1	; select bank1
  8827  0313  0861               	movf	(efgtoa@u+2)^(0+128),w
  8828  0314  0020               	movlb	0	; select bank0
  8829  0315  00C2               	movwf	___fldiv@a+2
  8830  0316  0021               	movlb	1	; select bank1
  8831  0317  0860               	movf	(efgtoa@u+1)^(0+128),w
  8832  0318  0020               	movlb	0	; select bank0
  8833  0319  00C1               	movwf	___fldiv@a+1
  8834  031A  0021               	movlb	1	; select bank1
  8835  031B  085F               	movf	efgtoa@u^(0+128),w
  8836  031C  0020               	movlb	0	; select bank0
  8837  031D  00C0               	movwf	___fldiv@a
  8838  031E  0021               	movlb	1	; select bank1
  8839  031F  0850               	movf	(efgtoa@h+3)^(0+128),w
  8840  0320  0020               	movlb	0	; select bank0
  8841  0321  00C7               	movwf	___fldiv@b+3
  8842  0322  0021               	movlb	1	; select bank1
  8843  0323  084F               	movf	(efgtoa@h+2)^(0+128),w
  8844  0324  0020               	movlb	0	; select bank0
  8845  0325  00C6               	movwf	___fldiv@b+2
  8846  0326  0021               	movlb	1	; select bank1
  8847  0327  084E               	movf	(efgtoa@h+1)^(0+128),w
  8848  0328  0020               	movlb	0	; select bank0
  8849  0329  00C5               	movwf	___fldiv@b+1
  8850  032A  0021               	movlb	1	; select bank1
  8851  032B  084D               	movf	efgtoa@h^(0+128),w
  8852  032C  0020               	movlb	0	; select bank0
  8853  032D  00C4               	movwf	___fldiv@b
  8854  032E  3190  2061  3180   	fcall	___fldiv
  8855  0331  0020               	movlb	0	; select bank0
  8856  0332  0843               	movf	?___fldiv+3,w
  8857  0333  00DD               	movwf	floorf@x+3
  8858  0334  0842               	movf	?___fldiv+2,w
  8859  0335  00DC               	movwf	floorf@x+2
  8860  0336  0841               	movf	?___fldiv+1,w
  8861  0337  00DB               	movwf	floorf@x+1
  8862  0338  0840               	movf	?___fldiv,w
  8863  0339  00DA               	movwf	floorf@x
  8864  033A  31A5  256B  3180   	fcall	_floorf
  8865  033D  0020               	movlb	0	; select bank0
  8866  033E  085D               	movf	?_floorf+3,w
  8867  033F  0021               	movlb	1	; select bank1
  8868  0340  00D4               	movwf	(efgtoa@l+3)^(0+128)
  8869  0341  0020               	movlb	0	; select bank0
  8870  0342  085C               	movf	?_floorf+2,w
  8871  0343  0021               	movlb	1	; select bank1
  8872  0344  00D3               	movwf	(efgtoa@l+2)^(0+128)
  8873  0345  0020               	movlb	0	; select bank0
  8874  0346  085B               	movf	?_floorf+1,w
  8875  0347  0021               	movlb	1	; select bank1
  8876  0348  00D2               	movwf	(efgtoa@l+1)^(0+128)
  8877  0349  0020               	movlb	0	; select bank0
  8878  034A  085A               	movf	?_floorf,w
  8879  034B  0021               	movlb	1	; select bank1
  8880  034C  00D1               	movwf	efgtoa@l^(0+128)
  8881                           
  8882                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  8883  034D  0854               	movf	(efgtoa@l+3)^(0+128),w
  8884  034E  0020               	movlb	0	; select bank0
  8885  034F  00DD               	movwf	___fltol@f1+3
  8886  0350  0021               	movlb	1	; select bank1
  8887  0351  0853               	movf	(efgtoa@l+2)^(0+128),w
  8888  0352  0020               	movlb	0	; select bank0
  8889  0353  00DC               	movwf	___fltol@f1+2
  8890  0354  0021               	movlb	1	; select bank1
  8891  0355  0852               	movf	(efgtoa@l+1)^(0+128),w
  8892  0356  0020               	movlb	0	; select bank0
  8893  0357  00DB               	movwf	___fltol@f1+1
  8894  0358  0021               	movlb	1	; select bank1
  8895  0359  0851               	movf	efgtoa@l^(0+128),w
  8896  035A  0020               	movlb	0	; select bank0
  8897  035B  00DA               	movwf	___fltol@f1
  8898  035C  31AB  23A9  3180   	fcall	___fltol
  8899  035F  0020               	movlb	0	; select bank0
  8900  0360  085B               	movf	?___fltol+1,w
  8901  0361  0021               	movlb	1	; select bank1
  8902  0362  00C4               	movwf	(efgtoa@d+1)^(0+128)
  8903  0363  0020               	movlb	0	; select bank0
  8904  0364  085A               	movf	?___fltol,w
  8905  0365  0021               	movlb	1	; select bank1
  8906  0366  00C3               	movwf	efgtoa@d^(0+128)
  8907                           
  8908                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  8909  0367  0854               	movf	(efgtoa@l+3)^(0+128),w
  8910  0368  0020               	movlb	0	; select bank0
  8911  0369  00AD               	movwf	___flmul@a+3
  8912  036A  0021               	movlb	1	; select bank1
  8913  036B  0853               	movf	(efgtoa@l+2)^(0+128),w
  8914  036C  0020               	movlb	0	; select bank0
  8915  036D  00AC               	movwf	___flmul@a+2
  8916  036E  0021               	movlb	1	; select bank1
  8917  036F  0852               	movf	(efgtoa@l+1)^(0+128),w
  8918  0370  0020               	movlb	0	; select bank0
  8919  0371  00AB               	movwf	___flmul@a+1
  8920  0372  0021               	movlb	1	; select bank1
  8921  0373  0851               	movf	efgtoa@l^(0+128),w
  8922  0374  0020               	movlb	0	; select bank0
  8923  0375  00AA               	movwf	___flmul@a
  8924  0376  0021               	movlb	1	; select bank1
  8925  0377  0862               	movf	(efgtoa@u+3)^(0+128),w
  8926  0378  0020               	movlb	0	; select bank0
  8927  0379  00A9               	movwf	___flmul@b+3
  8928  037A  0021               	movlb	1	; select bank1
  8929  037B  0861               	movf	(efgtoa@u+2)^(0+128),w
  8930  037C  0020               	movlb	0	; select bank0
  8931  037D  00A8               	movwf	___flmul@b+2
  8932  037E  0021               	movlb	1	; select bank1
  8933  037F  0860               	movf	(efgtoa@u+1)^(0+128),w
  8934  0380  0020               	movlb	0	; select bank0
  8935  0381  00A7               	movwf	___flmul@b+1
  8936  0382  0021               	movlb	1	; select bank1
  8937  0383  085F               	movf	efgtoa@u^(0+128),w
  8938  0384  0020               	movlb	0	; select bank0
  8939  0385  00A6               	movwf	___flmul@b
  8940  0386  3195  25D4  3180   	fcall	___flmul
  8941  0389  0020               	movlb	0	; select bank0
  8942  038A  0829               	movf	?___flmul+3,w
  8943  038B  00C3               	movwf	___flsub@a+3
  8944  038C  0828               	movf	?___flmul+2,w
  8945  038D  00C2               	movwf	___flsub@a+2
  8946  038E  0827               	movf	?___flmul+1,w
  8947  038F  00C1               	movwf	___flsub@a+1
  8948  0390  0826               	movf	?___flmul,w
  8949  0391  00C0               	movwf	___flsub@a
  8950  0392  0021               	movlb	1	; select bank1
  8951  0393  0850               	movf	(efgtoa@h+3)^(0+128),w
  8952  0394  0020               	movlb	0	; select bank0
  8953  0395  00C7               	movwf	___flsub@b+3
  8954  0396  0021               	movlb	1	; select bank1
  8955  0397  084F               	movf	(efgtoa@h+2)^(0+128),w
  8956  0398  0020               	movlb	0	; select bank0
  8957  0399  00C6               	movwf	___flsub@b+2
  8958  039A  0021               	movlb	1	; select bank1
  8959  039B  084E               	movf	(efgtoa@h+1)^(0+128),w
  8960  039C  0020               	movlb	0	; select bank0
  8961  039D  00C5               	movwf	___flsub@b+1
  8962  039E  0021               	movlb	1	; select bank1
  8963  039F  084D               	movf	efgtoa@h^(0+128),w
  8964  03A0  0020               	movlb	0	; select bank0
  8965  03A1  00C4               	movwf	___flsub@b
  8966  03A2  31A8  2058  3180   	fcall	___flsub
  8967  03A5  0020               	movlb	0	; select bank0
  8968  03A6  0843               	movf	?___flsub+3,w
  8969  03A7  0021               	movlb	1	; select bank1
  8970  03A8  00D0               	movwf	(efgtoa@h+3)^(0+128)
  8971  03A9  0020               	movlb	0	; select bank0
  8972  03AA  0842               	movf	?___flsub+2,w
  8973  03AB  0021               	movlb	1	; select bank1
  8974  03AC  00CF               	movwf	(efgtoa@h+2)^(0+128)
  8975  03AD  0020               	movlb	0	; select bank0
  8976  03AE  0841               	movf	?___flsub+1,w
  8977  03AF  0021               	movlb	1	; select bank1
  8978  03B0  00CE               	movwf	(efgtoa@h+1)^(0+128)
  8979  03B1  0020               	movlb	0	; select bank0
  8980  03B2  0840               	movf	?___flsub,w
  8981  03B3  0021               	movlb	1	; select bank1
  8982  03B4  00CD               	movwf	efgtoa@h^(0+128)
  8983                           
  8984                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  8985  03B5  3041               	movlw	65
  8986  03B6  0020               	movlb	0	; select bank0
  8987  03B7  00C3               	movwf	___fldiv@a+3
  8988  03B8  3020               	movlw	32
  8989  03B9  00C2               	movwf	___fldiv@a+2
  8990  03BA  3000               	movlw	0
  8991  03BB  00C1               	movwf	___fldiv@a+1
  8992  03BC  3000               	movlw	0
  8993  03BD  00C0               	movwf	___fldiv@a
  8994  03BE  0021               	movlb	1	; select bank1
  8995  03BF  0862               	movf	(efgtoa@u+3)^(0+128),w
  8996  03C0  0020               	movlb	0	; select bank0
  8997  03C1  00C7               	movwf	___fldiv@b+3
  8998  03C2  0021               	movlb	1	; select bank1
  8999  03C3  0861               	movf	(efgtoa@u+2)^(0+128),w
  9000  03C4  0020               	movlb	0	; select bank0
  9001  03C5  00C6               	movwf	___fldiv@b+2
  9002  03C6  0021               	movlb	1	; select bank1
  9003  03C7  0860               	movf	(efgtoa@u+1)^(0+128),w
  9004  03C8  0020               	movlb	0	; select bank0
  9005  03C9  00C5               	movwf	___fldiv@b+1
  9006  03CA  0021               	movlb	1	; select bank1
  9007  03CB  085F               	movf	efgtoa@u^(0+128),w
  9008  03CC  0020               	movlb	0	; select bank0
  9009  03CD  00C4               	movwf	___fldiv@b
  9010  03CE  3190  2061  3180   	fcall	___fldiv
  9011  03D1  0020               	movlb	0	; select bank0
  9012  03D2  0843               	movf	?___fldiv+3,w
  9013  03D3  0021               	movlb	1	; select bank1
  9014  03D4  00E2               	movwf	(efgtoa@u+3)^(0+128)
  9015  03D5  0020               	movlb	0	; select bank0
  9016  03D6  0842               	movf	?___fldiv+2,w
  9017  03D7  0021               	movlb	1	; select bank1
  9018  03D8  00E1               	movwf	(efgtoa@u+2)^(0+128)
  9019  03D9  0020               	movlb	0	; select bank0
  9020  03DA  0841               	movf	?___fldiv+1,w
  9021  03DB  0021               	movlb	1	; select bank1
  9022  03DC  00E0               	movwf	(efgtoa@u+1)^(0+128)
  9023  03DD  0020               	movlb	0	; select bank0
  9024  03DE  0840               	movf	?___fldiv,w
  9025  03DF  0021               	movlb	1	; select bank1
  9026  03E0  00DF               	movwf	efgtoa@u^(0+128)
  9027                           
  9028                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  9029  03E1  3001               	movlw	1
  9030  03E2  07D5               	addwf	efgtoa@i^(0+128),f
  9031  03E3  3000               	movlw	0
  9032  03E4  3DD6               	addwfc	(efgtoa@i+1)^(0+128),f
  9033  03E5  2B02               	goto	l7095
  9034  03E6                     l7097:	
  9035                           
  9036                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  9037  03E6  3040               	movlw	64
  9038  03E7  0020               	movlb	0	; select bank0
  9039  03E8  00A9               	movwf	___flmul@b+3
  9040  03E9  30A0               	movlw	160
  9041  03EA  00A8               	movwf	___flmul@b+2
  9042  03EB  3000               	movlw	0
  9043  03EC  00A7               	movwf	___flmul@b+1
  9044  03ED  3000               	movlw	0
  9045  03EE  00A6               	movwf	___flmul@b
  9046  03EF  0021               	movlb	1	; select bank1
  9047  03F0  0862               	movf	(efgtoa@u+3)^(0+128),w
  9048  03F1  0020               	movlb	0	; select bank0
  9049  03F2  00AD               	movwf	___flmul@a+3
  9050  03F3  0021               	movlb	1	; select bank1
  9051  03F4  0861               	movf	(efgtoa@u+2)^(0+128),w
  9052  03F5  0020               	movlb	0	; select bank0
  9053  03F6  00AC               	movwf	___flmul@a+2
  9054  03F7  0021               	movlb	1	; select bank1
  9055  03F8  0860               	movf	(efgtoa@u+1)^(0+128),w
  9056  03F9  0020               	movlb	0	; select bank0
  9057  03FA  00AB               	movwf	___flmul@a+1
  9058  03FB  0021               	movlb	1	; select bank1
  9059  03FC  085F               	movf	efgtoa@u^(0+128),w
  9060  03FD  0020               	movlb	0	; select bank0
  9061  03FE  00AA               	movwf	___flmul@a
  9062  03FF  3195  25D4  3180   	fcall	___flmul
  9063  0402  0020               	movlb	0	; select bank0
  9064  0403  0829               	movf	?___flmul+3,w
  9065  0404  0021               	movlb	1	; select bank1
  9066  0405  00D4               	movwf	(efgtoa@l+3)^(0+128)
  9067  0406  0020               	movlb	0	; select bank0
  9068  0407  0828               	movf	?___flmul+2,w
  9069  0408  0021               	movlb	1	; select bank1
  9070  0409  00D3               	movwf	(efgtoa@l+2)^(0+128)
  9071  040A  0020               	movlb	0	; select bank0
  9072  040B  0827               	movf	?___flmul+1,w
  9073  040C  0021               	movlb	1	; select bank1
  9074  040D  00D2               	movwf	(efgtoa@l+1)^(0+128)
  9075  040E  0020               	movlb	0	; select bank0
  9076  040F  0826               	movf	?___flmul,w
  9077  0410  0021               	movlb	1	; select bank1
  9078  0411  00D1               	movwf	efgtoa@l^(0+128)
  9079                           
  9080                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  9081  0412  0850               	movf	(efgtoa@h+3)^(0+128),w
  9082  0413  0020               	movlb	0	; select bank0
  9083  0414  00C3               	movwf	___flge@ff1+3
  9084  0415  0021               	movlb	1	; select bank1
  9085  0416  084F               	movf	(efgtoa@h+2)^(0+128),w
  9086  0417  0020               	movlb	0	; select bank0
  9087  0418  00C2               	movwf	___flge@ff1+2
  9088  0419  0021               	movlb	1	; select bank1
  9089  041A  084E               	movf	(efgtoa@h+1)^(0+128),w
  9090  041B  0020               	movlb	0	; select bank0
  9091  041C  00C1               	movwf	___flge@ff1+1
  9092  041D  0021               	movlb	1	; select bank1
  9093  041E  084D               	movf	efgtoa@h^(0+128),w
  9094  041F  0020               	movlb	0	; select bank0
  9095  0420  00C0               	movwf	___flge@ff1
  9096  0421  0021               	movlb	1	; select bank1
  9097  0422  0854               	movf	(efgtoa@l+3)^(0+128),w
  9098  0423  0020               	movlb	0	; select bank0
  9099  0424  00C7               	movwf	___flge@ff2+3
  9100  0425  0021               	movlb	1	; select bank1
  9101  0426  0853               	movf	(efgtoa@l+2)^(0+128),w
  9102  0427  0020               	movlb	0	; select bank0
  9103  0428  00C6               	movwf	___flge@ff2+2
  9104  0429  0021               	movlb	1	; select bank1
  9105  042A  0852               	movf	(efgtoa@l+1)^(0+128),w
  9106  042B  0020               	movlb	0	; select bank0
  9107  042C  00C5               	movwf	___flge@ff2+1
  9108  042D  0021               	movlb	1	; select bank1
  9109  042E  0851               	movf	efgtoa@l^(0+128),w
  9110  042F  0020               	movlb	0	; select bank0
  9111  0430  00C4               	movwf	___flge@ff2
  9112  0431  31AC  24F0  3180   	fcall	___flge
  9113  0434  1803               	btfsc	3,0
  9114  0435  2C39               	goto	l7101
  9115                           
  9116                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  9117  0436  3000               	movlw	0
  9118  0437  0021               	movlb	1	; select bank1
  9119  0438  2C53               	goto	L7
  9120  0439                     l7101:	
  9121                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  9122                           
  9123                           
  9124                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  9125  0439  0021               	movlb	1	; select bank1
  9126  043A  0850               	movf	(efgtoa@h+3)^(0+128),w
  9127  043B  00F4               	movwf	___fleq@ff1+3
  9128  043C  084F               	movf	(efgtoa@h+2)^(0+128),w
  9129  043D  00F3               	movwf	___fleq@ff1+2
  9130  043E  084E               	movf	(efgtoa@h+1)^(0+128),w
  9131  043F  00F2               	movwf	___fleq@ff1+1
  9132  0440  084D               	movf	efgtoa@h^(0+128),w
  9133  0441  00F1               	movwf	___fleq@ff1
  9134  0442  0854               	movf	(efgtoa@l+3)^(0+128),w
  9135  0443  00F8               	movwf	___fleq@ff2+3
  9136  0444  0853               	movf	(efgtoa@l+2)^(0+128),w
  9137  0445  00F7               	movwf	___fleq@ff2+2
  9138  0446  0852               	movf	(efgtoa@l+1)^(0+128),w
  9139  0447  00F6               	movwf	___fleq@ff2+1
  9140  0448  0851               	movf	efgtoa@l^(0+128),w
  9141  0449  00F5               	movwf	___fleq@ff2
  9142  044A  31AA  22BE  3180   	fcall	___fleq
  9143  044D  1C03               	btfss	3,0
  9144  044E  2C5A               	goto	l7107
  9145  044F  0021               	movlb	1	; select bank1
  9146  0450  1843               	btfsc	efgtoa@d^(0+128),0
  9147  0451  2C5A               	goto	l7107
  9148                           
  9149                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  9150  0452  3000               	movlw	0
  9151  0453                     L7:	
  9152  0453  00D4               	movwf	(efgtoa@l+3)^(0+128)
  9153  0454  3000               	movlw	0
  9154  0455  00D3               	movwf	(efgtoa@l+2)^(0+128)
  9155  0456  3000               	movlw	0
  9156  0457  00D2               	movwf	(efgtoa@l+1)^(0+128)
  9157  0458  3000               	movlw	0
  9158  0459  00D1               	movwf	efgtoa@l^(0+128)
  9159  045A                     l7107:	
  9160                           
  9161                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  9162  045A  0021               	movlb	1	; select bank1
  9163  045B  0854               	movf	(efgtoa@l+3)^(0+128),w
  9164  045C  00F4               	movwf	___fladd@b+3
  9165  045D  0853               	movf	(efgtoa@l+2)^(0+128),w
  9166  045E  00F3               	movwf	___fladd@b+2
  9167  045F  0852               	movf	(efgtoa@l+1)^(0+128),w
  9168  0460  00F2               	movwf	___fladd@b+1
  9169  0461  0851               	movf	efgtoa@l^(0+128),w
  9170  0462  00F1               	movwf	___fladd@b
  9171  0463  085A               	movf	(efgtoa@g+3)^(0+128),w
  9172  0464  00F8               	movwf	___fladd@a+3
  9173  0465  0859               	movf	(efgtoa@g+2)^(0+128),w
  9174  0466  00F7               	movwf	___fladd@a+2
  9175  0467  0858               	movf	(efgtoa@g+1)^(0+128),w
  9176  0468  00F6               	movwf	___fladd@a+1
  9177  0469  0857               	movf	efgtoa@g^(0+128),w
  9178  046A  00F5               	movwf	___fladd@a
  9179  046B  3191  21DB  3180   	fcall	___fladd
  9180  046E  0874               	movf	?___fladd+3,w
  9181  046F  0021               	movlb	1	; select bank1
  9182  0470  00D0               	movwf	(efgtoa@h+3)^(0+128)
  9183  0471  0873               	movf	?___fladd+2,w
  9184  0472  00CF               	movwf	(efgtoa@h+2)^(0+128)
  9185  0473  0872               	movf	?___fladd+1,w
  9186  0474  00CE               	movwf	(efgtoa@h+1)^(0+128)
  9187  0475  0871               	movf	?___fladd,w
  9188  0476  00CD               	movwf	efgtoa@h^(0+128)
  9189                           
  9190                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  9191  0477  082E               	movf	(efgtoa@ou+3)^(0+128),w
  9192  0478  00E2               	movwf	(efgtoa@u+3)^(0+128)
  9193  0479  082D               	movf	(efgtoa@ou+2)^(0+128),w
  9194  047A  00E1               	movwf	(efgtoa@u+2)^(0+128)
  9195  047B  082C               	movf	(efgtoa@ou+1)^(0+128),w
  9196  047C  00E0               	movwf	(efgtoa@u+1)^(0+128)
  9197  047D  082B               	movf	efgtoa@ou^(0+128),w
  9198  047E  00DF               	movwf	efgtoa@u^(0+128)
  9199                           
  9200                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  9201  047F  3065               	movlw	101
  9202  0480  0649               	xorwf	efgtoa@nmode^(0+128),w
  9203  0481  1903               	btfsc	3,2
  9204  0482  2C88               	goto	l7115
  9205  0483  085C               	movf	(efgtoa@e+1)^(0+128),w
  9206  0484  00C2               	movwf	(efgtoa@ne+1)^(0+128)
  9207  0485  085B               	movf	efgtoa@e^(0+128),w
  9208  0486  00C1               	movwf	efgtoa@ne^(0+128)
  9209  0487  2C8A               	goto	l601
  9210  0488                     l7115:	
  9211  0488  01C1               	clrf	efgtoa@ne^(0+128)
  9212  0489  01C2               	clrf	(efgtoa@ne+1)^(0+128)
  9213  048A                     l601:	
  9214                           
  9215                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  9216  048A  01BD               	clrf	efgtoa@pp^(0+128)
  9217  048B  01BE               	clrf	(efgtoa@pp+1)^(0+128)
  9218                           
  9219                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  9220  048C  01BB               	clrf	efgtoa@t^(0+128)
  9221  048D  01BC               	clrf	(efgtoa@t+1)^(0+128)
  9222                           
  9223                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  9224  048E  01D5               	clrf	efgtoa@i^(0+128)
  9225  048F  01D6               	clrf	(efgtoa@i+1)^(0+128)
  9226                           
  9227                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  9228  0490  2DC5               	goto	l7165
  9229  0491                     l7117:	
  9230                           
  9231                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  9232  0491  0021               	movlb	1	; select bank1
  9233  0492  0862               	movf	(efgtoa@u+3)^(0+128),w
  9234  0493  0020               	movlb	0	; select bank0
  9235  0494  00C3               	movwf	___fldiv@a+3
  9236  0495  0021               	movlb	1	; select bank1
  9237  0496  0861               	movf	(efgtoa@u+2)^(0+128),w
  9238  0497  0020               	movlb	0	; select bank0
  9239  0498  00C2               	movwf	___fldiv@a+2
  9240  0499  0021               	movlb	1	; select bank1
  9241  049A  0860               	movf	(efgtoa@u+1)^(0+128),w
  9242  049B  0020               	movlb	0	; select bank0
  9243  049C  00C1               	movwf	___fldiv@a+1
  9244  049D  0021               	movlb	1	; select bank1
  9245  049E  085F               	movf	efgtoa@u^(0+128),w
  9246  049F  0020               	movlb	0	; select bank0
  9247  04A0  00C0               	movwf	___fldiv@a
  9248  04A1  0021               	movlb	1	; select bank1
  9249  04A2  0850               	movf	(efgtoa@h+3)^(0+128),w
  9250  04A3  0020               	movlb	0	; select bank0
  9251  04A4  00C7               	movwf	___fldiv@b+3
  9252  04A5  0021               	movlb	1	; select bank1
  9253  04A6  084F               	movf	(efgtoa@h+2)^(0+128),w
  9254  04A7  0020               	movlb	0	; select bank0
  9255  04A8  00C6               	movwf	___fldiv@b+2
  9256  04A9  0021               	movlb	1	; select bank1
  9257  04AA  084E               	movf	(efgtoa@h+1)^(0+128),w
  9258  04AB  0020               	movlb	0	; select bank0
  9259  04AC  00C5               	movwf	___fldiv@b+1
  9260  04AD  0021               	movlb	1	; select bank1
  9261  04AE  084D               	movf	efgtoa@h^(0+128),w
  9262  04AF  0020               	movlb	0	; select bank0
  9263  04B0  00C4               	movwf	___fldiv@b
  9264  04B1  3190  2061  3180   	fcall	___fldiv
  9265  04B4  0020               	movlb	0	; select bank0
  9266  04B5  0843               	movf	?___fldiv+3,w
  9267  04B6  00DD               	movwf	floorf@x+3
  9268  04B7  0842               	movf	?___fldiv+2,w
  9269  04B8  00DC               	movwf	floorf@x+2
  9270  04B9  0841               	movf	?___fldiv+1,w
  9271  04BA  00DB               	movwf	floorf@x+1
  9272  04BB  0840               	movf	?___fldiv,w
  9273  04BC  00DA               	movwf	floorf@x
  9274  04BD  31A5  256B  3180   	fcall	_floorf
  9275  04C0  0020               	movlb	0	; select bank0
  9276  04C1  085D               	movf	?_floorf+3,w
  9277  04C2  0021               	movlb	1	; select bank1
  9278  04C3  00D4               	movwf	(efgtoa@l+3)^(0+128)
  9279  04C4  0020               	movlb	0	; select bank0
  9280  04C5  085C               	movf	?_floorf+2,w
  9281  04C6  0021               	movlb	1	; select bank1
  9282  04C7  00D3               	movwf	(efgtoa@l+2)^(0+128)
  9283  04C8  0020               	movlb	0	; select bank0
  9284  04C9  085B               	movf	?_floorf+1,w
  9285  04CA  0021               	movlb	1	; select bank1
  9286  04CB  00D2               	movwf	(efgtoa@l+1)^(0+128)
  9287  04CC  0020               	movlb	0	; select bank0
  9288  04CD  085A               	movf	?_floorf,w
  9289  04CE  0021               	movlb	1	; select bank1
  9290  04CF  00D1               	movwf	efgtoa@l^(0+128)
  9291                           
  9292                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  9293  04D0  0854               	movf	(efgtoa@l+3)^(0+128),w
  9294  04D1  0020               	movlb	0	; select bank0
  9295  04D2  00DD               	movwf	___fltol@f1+3
  9296  04D3  0021               	movlb	1	; select bank1
  9297  04D4  0853               	movf	(efgtoa@l+2)^(0+128),w
  9298  04D5  0020               	movlb	0	; select bank0
  9299  04D6  00DC               	movwf	___fltol@f1+2
  9300  04D7  0021               	movlb	1	; select bank1
  9301  04D8  0852               	movf	(efgtoa@l+1)^(0+128),w
  9302  04D9  0020               	movlb	0	; select bank0
  9303  04DA  00DB               	movwf	___fltol@f1+1
  9304  04DB  0021               	movlb	1	; select bank1
  9305  04DC  0851               	movf	efgtoa@l^(0+128),w
  9306  04DD  0020               	movlb	0	; select bank0
  9307  04DE  00DA               	movwf	___fltol@f1
  9308  04DF  31AB  23A9  3180   	fcall	___fltol
  9309  04E2  0020               	movlb	0	; select bank0
  9310  04E3  085B               	movf	?___fltol+1,w
  9311  04E4  0021               	movlb	1	; select bank1
  9312  04E5  00C4               	movwf	(efgtoa@d+1)^(0+128)
  9313  04E6  0020               	movlb	0	; select bank0
  9314  04E7  085A               	movf	?___fltol,w
  9315  04E8  0021               	movlb	1	; select bank1
  9316  04E9  00C3               	movwf	efgtoa@d^(0+128)
  9317                           
  9318                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  9319  04EA  0023               	movlb	3	; select bank3
  9320  04EB  1A42               	btfsc	_flags^(0+384),4
  9321  04EC  2CFC               	goto	l7129
  9322  04ED  0021               	movlb	1	; select bank1
  9323  04EE  0843               	movf	efgtoa@d^(0+128),w
  9324  04EF  0444               	iorwf	(efgtoa@d+1)^(0+128),w
  9325  04F0  1D03               	btfss	3,2
  9326  04F1  2CFC               	goto	l7129
  9327  04F2  3067               	movlw	103
  9328  04F3  064C               	xorwf	efgtoa@mode^(0+128),w
  9329  04F4  1903               	btfsc	3,2
  9330  04F5  1FC2               	btfss	(efgtoa@ne+1)^(0+128),7
  9331  04F6  2CFC               	goto	l7129
  9332                           
  9333                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  9334  04F7  3001               	movlw	1
  9335  04F8  07BB               	addwf	efgtoa@t^(0+128),f
  9336  04F9  3000               	movlw	0
  9337  04FA  3DBC               	addwfc	(efgtoa@t+1)^(0+128),f
  9338                           
  9339                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  9340  04FB  2D43               	goto	l7157
  9341  04FC                     l7129:	
  9342                           
  9343                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  9344  04FC  0021               	movlb	1	; select bank1
  9345  04FD  083D               	movf	efgtoa@pp^(0+128),w
  9346  04FE  043E               	iorwf	(efgtoa@pp+1)^(0+128),w
  9347  04FF  1903               	btfsc	3,2
  9348  0500  1FC2               	btfss	(efgtoa@ne+1)^(0+128),7
  9349  0501  2D17               	goto	l7149
  9350                           
  9351                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  9352  0502  302E               	movlw	46
  9353  0503  00A7               	movwf	??_efgtoa^(0+128)
  9354  0504  085D               	movf	efgtoa@n^(0+128),w
  9355  0505  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9356  0506  0086               	movwf	6
  9357  0507  3002               	movlw	2	; select bank4/5
  9358  0508  0087               	movwf	7
  9359  0509  0827               	movf	??_efgtoa^(0+128),w
  9360  050A  0081               	movwf	1
  9361  050B  3001               	movlw	1
  9362  050C  07DD               	addwf	efgtoa@n^(0+128),f
  9363  050D  3000               	movlw	0
  9364  050E  3DDE               	addwfc	(efgtoa@n+1)^(0+128),f
  9365                           
  9366                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  9367  050F  30FF               	movlw	255
  9368  0510  07CA               	addwf	efgtoa@w^(0+128),f
  9369  0511  30FF               	movlw	255
  9370  0512  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
  9371                           
  9372                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  9373  0513  3001               	movlw	1
  9374  0514  00BD               	movwf	efgtoa@pp^(0+128)
  9375  0515  3000               	movlw	0
  9376  0516  00BE               	movwf	(efgtoa@pp^(0+128)+1)
  9377  0517                     l7149:	
  9378                           
  9379                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  9380  0517  083B               	movf	efgtoa@t^(0+128),w
  9381  0518  043C               	iorwf	(efgtoa@t+1)^(0+128),w
  9382  0519  1903               	btfsc	3,2
  9383  051A  2D31               	goto	l7151
  9384                           
  9385                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  9386  051B  3030               	movlw	48
  9387  051C  00A7               	movwf	??_efgtoa^(0+128)
  9388  051D  085D               	movf	efgtoa@n^(0+128),w
  9389  051E  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9390  051F  0086               	movwf	6
  9391  0520  3002               	movlw	2	; select bank4/5
  9392  0521  0087               	movwf	7
  9393  0522  0827               	movf	??_efgtoa^(0+128),w
  9394  0523  0081               	movwf	1
  9395  0524  3001               	movlw	1
  9396  0525  07DD               	addwf	efgtoa@n^(0+128),f
  9397  0526  3000               	movlw	0
  9398  0527  3DDE               	addwfc	(efgtoa@n+1)^(0+128),f
  9399                           
  9400                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  9401  0528  30FF               	movlw	255
  9402  0529  07CA               	addwf	efgtoa@w^(0+128),f
  9403  052A  30FF               	movlw	255
  9404  052B  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
  9405                           
  9406                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  9407  052C  30FF               	movlw	255
  9408  052D  07BB               	addwf	efgtoa@t^(0+128),f
  9409  052E  30FF               	movlw	255
  9410  052F  3DBC               	addwfc	(efgtoa@t+1)^(0+128),f
  9411  0530  2D17               	goto	l7149
  9412  0531                     l7151:	
  9413                           
  9414                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  9415  0531  0843               	movf	efgtoa@d^(0+128),w
  9416  0532  3E30               	addlw	48
  9417  0533  00A7               	movwf	??_efgtoa^(0+128)
  9418  0534  085D               	movf	efgtoa@n^(0+128),w
  9419  0535  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9420  0536  0086               	movwf	6
  9421  0537  3002               	movlw	2	; select bank4/5
  9422  0538  0087               	movwf	7
  9423  0539  0827               	movf	??_efgtoa^(0+128),w
  9424  053A  0081               	movwf	1
  9425  053B  3001               	movlw	1
  9426  053C  07DD               	addwf	efgtoa@n^(0+128),f
  9427  053D  3000               	movlw	0
  9428  053E  3DDE               	addwfc	(efgtoa@n+1)^(0+128),f
  9429                           
  9430                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  9431  053F  30FF               	movlw	255
  9432  0540  07CA               	addwf	efgtoa@w^(0+128),f
  9433  0541  30FF               	movlw	255
  9434  0542  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
  9435  0543                     l7157:	
  9436                           
  9437                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  9438  0543  0854               	movf	(efgtoa@l+3)^(0+128),w
  9439  0544  0020               	movlb	0	; select bank0
  9440  0545  00AD               	movwf	___flmul@a+3
  9441  0546  0021               	movlb	1	; select bank1
  9442  0547  0853               	movf	(efgtoa@l+2)^(0+128),w
  9443  0548  0020               	movlb	0	; select bank0
  9444  0549  00AC               	movwf	___flmul@a+2
  9445  054A  0021               	movlb	1	; select bank1
  9446  054B  0852               	movf	(efgtoa@l+1)^(0+128),w
  9447  054C  0020               	movlb	0	; select bank0
  9448  054D  00AB               	movwf	___flmul@a+1
  9449  054E  0021               	movlb	1	; select bank1
  9450  054F  0851               	movf	efgtoa@l^(0+128),w
  9451  0550  0020               	movlb	0	; select bank0
  9452  0551  00AA               	movwf	___flmul@a
  9453  0552  0021               	movlb	1	; select bank1
  9454  0553  0862               	movf	(efgtoa@u+3)^(0+128),w
  9455  0554  0020               	movlb	0	; select bank0
  9456  0555  00A9               	movwf	___flmul@b+3
  9457  0556  0021               	movlb	1	; select bank1
  9458  0557  0861               	movf	(efgtoa@u+2)^(0+128),w
  9459  0558  0020               	movlb	0	; select bank0
  9460  0559  00A8               	movwf	___flmul@b+2
  9461  055A  0021               	movlb	1	; select bank1
  9462  055B  0860               	movf	(efgtoa@u+1)^(0+128),w
  9463  055C  0020               	movlb	0	; select bank0
  9464  055D  00A7               	movwf	___flmul@b+1
  9465  055E  0021               	movlb	1	; select bank1
  9466  055F  085F               	movf	efgtoa@u^(0+128),w
  9467  0560  0020               	movlb	0	; select bank0
  9468  0561  00A6               	movwf	___flmul@b
  9469  0562  3195  25D4  3180   	fcall	___flmul
  9470  0565  0020               	movlb	0	; select bank0
  9471  0566  0829               	movf	?___flmul+3,w
  9472  0567  00C3               	movwf	___flsub@a+3
  9473  0568  0828               	movf	?___flmul+2,w
  9474  0569  00C2               	movwf	___flsub@a+2
  9475  056A  0827               	movf	?___flmul+1,w
  9476  056B  00C1               	movwf	___flsub@a+1
  9477  056C  0826               	movf	?___flmul,w
  9478  056D  00C0               	movwf	___flsub@a
  9479  056E  0021               	movlb	1	; select bank1
  9480  056F  0850               	movf	(efgtoa@h+3)^(0+128),w
  9481  0570  0020               	movlb	0	; select bank0
  9482  0571  00C7               	movwf	___flsub@b+3
  9483  0572  0021               	movlb	1	; select bank1
  9484  0573  084F               	movf	(efgtoa@h+2)^(0+128),w
  9485  0574  0020               	movlb	0	; select bank0
  9486  0575  00C6               	movwf	___flsub@b+2
  9487  0576  0021               	movlb	1	; select bank1
  9488  0577  084E               	movf	(efgtoa@h+1)^(0+128),w
  9489  0578  0020               	movlb	0	; select bank0
  9490  0579  00C5               	movwf	___flsub@b+1
  9491  057A  0021               	movlb	1	; select bank1
  9492  057B  084D               	movf	efgtoa@h^(0+128),w
  9493  057C  0020               	movlb	0	; select bank0
  9494  057D  00C4               	movwf	___flsub@b
  9495  057E  31A8  2058  3180   	fcall	___flsub
  9496  0581  0020               	movlb	0	; select bank0
  9497  0582  0843               	movf	?___flsub+3,w
  9498  0583  0021               	movlb	1	; select bank1
  9499  0584  00D0               	movwf	(efgtoa@h+3)^(0+128)
  9500  0585  0020               	movlb	0	; select bank0
  9501  0586  0842               	movf	?___flsub+2,w
  9502  0587  0021               	movlb	1	; select bank1
  9503  0588  00CF               	movwf	(efgtoa@h+2)^(0+128)
  9504  0589  0020               	movlb	0	; select bank0
  9505  058A  0841               	movf	?___flsub+1,w
  9506  058B  0021               	movlb	1	; select bank1
  9507  058C  00CE               	movwf	(efgtoa@h+1)^(0+128)
  9508  058D  0020               	movlb	0	; select bank0
  9509  058E  0840               	movf	?___flsub,w
  9510  058F  0021               	movlb	1	; select bank1
  9511  0590  00CD               	movwf	efgtoa@h^(0+128)
  9512                           
  9513                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  9514  0591  3041               	movlw	65
  9515  0592  0020               	movlb	0	; select bank0
  9516  0593  00C3               	movwf	___fldiv@a+3
  9517  0594  3020               	movlw	32
  9518  0595  00C2               	movwf	___fldiv@a+2
  9519  0596  3000               	movlw	0
  9520  0597  00C1               	movwf	___fldiv@a+1
  9521  0598  3000               	movlw	0
  9522  0599  00C0               	movwf	___fldiv@a
  9523  059A  0021               	movlb	1	; select bank1
  9524  059B  0862               	movf	(efgtoa@u+3)^(0+128),w
  9525  059C  0020               	movlb	0	; select bank0
  9526  059D  00C7               	movwf	___fldiv@b+3
  9527  059E  0021               	movlb	1	; select bank1
  9528  059F  0861               	movf	(efgtoa@u+2)^(0+128),w
  9529  05A0  0020               	movlb	0	; select bank0
  9530  05A1  00C6               	movwf	___fldiv@b+2
  9531  05A2  0021               	movlb	1	; select bank1
  9532  05A3  0860               	movf	(efgtoa@u+1)^(0+128),w
  9533  05A4  0020               	movlb	0	; select bank0
  9534  05A5  00C5               	movwf	___fldiv@b+1
  9535  05A6  0021               	movlb	1	; select bank1
  9536  05A7  085F               	movf	efgtoa@u^(0+128),w
  9537  05A8  0020               	movlb	0	; select bank0
  9538  05A9  00C4               	movwf	___fldiv@b
  9539  05AA  3190  2061  3180   	fcall	___fldiv
  9540  05AD  0020               	movlb	0	; select bank0
  9541  05AE  0843               	movf	?___fldiv+3,w
  9542  05AF  0021               	movlb	1	; select bank1
  9543  05B0  00E2               	movwf	(efgtoa@u+3)^(0+128)
  9544  05B1  0020               	movlb	0	; select bank0
  9545  05B2  0842               	movf	?___fldiv+2,w
  9546  05B3  0021               	movlb	1	; select bank1
  9547  05B4  00E1               	movwf	(efgtoa@u+2)^(0+128)
  9548  05B5  0020               	movlb	0	; select bank0
  9549  05B6  0841               	movf	?___fldiv+1,w
  9550  05B7  0021               	movlb	1	; select bank1
  9551  05B8  00E0               	movwf	(efgtoa@u+1)^(0+128)
  9552  05B9  0020               	movlb	0	; select bank0
  9553  05BA  0840               	movf	?___fldiv,w
  9554  05BB  0021               	movlb	1	; select bank1
  9555  05BC  00DF               	movwf	efgtoa@u^(0+128)
  9556                           
  9557                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  9558  05BD  30FF               	movlw	255
  9559  05BE  07C1               	addwf	efgtoa@ne^(0+128),f
  9560  05BF  30FF               	movlw	255
  9561  05C0  3DC2               	addwfc	(efgtoa@ne+1)^(0+128),f
  9562                           
  9563                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  9564  05C1  3001               	movlw	1
  9565  05C2  07D5               	addwf	efgtoa@i^(0+128),f
  9566  05C3  3000               	movlw	0
  9567  05C4  3DD6               	addwfc	(efgtoa@i+1)^(0+128),f
  9568  05C5                     l7165:	
  9569                           
  9570                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  9571  05C5  0856               	movf	(efgtoa@i+1)^(0+128),w
  9572  05C6  3A80               	xorlw	128
  9573  05C7  00A7               	movwf	??_efgtoa^(0+128)
  9574  05C8  0840               	movf	(efgtoa@m+1)^(0+128),w
  9575  05C9  3A80               	xorlw	128
  9576  05CA  0227               	subwf	??_efgtoa^(0+128),w
  9577  05CB  1D03               	skipz
  9578  05CC  2DCF               	goto	u10505
  9579  05CD  083F               	movf	efgtoa@m^(0+128),w
  9580  05CE  0255               	subwf	efgtoa@i^(0+128),w
  9581  05CF                     u10505:	
  9582  05CF  1803               	skipnc
  9583  05D0  2DDD               	goto	l7169
  9584  05D1  0021               	movlb	1	; select bank1
  9585  05D2  085E               	movf	(efgtoa@n+1)^(0+128),w
  9586  05D3  3A80               	xorlw	128
  9587  05D4  00A7               	movwf	??_efgtoa^(0+128)
  9588  05D5  3080               	movlw	128
  9589  05D6  0227               	subwf	??_efgtoa^(0+128),w
  9590  05D7  1D03               	skipz
  9591  05D8  2DDB               	goto	u10515
  9592  05D9  304B               	movlw	75
  9593  05DA  025D               	subwf	efgtoa@n^(0+128),w
  9594  05DB                     u10515:	
  9595  05DB  1C03               	skipc
  9596  05DC  2C91               	goto	l7117
  9597  05DD                     l7169:	
  9598                           
  9599                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  9600  05DD  0021               	movlb	1	; select bank1
  9601  05DE  083D               	movf	efgtoa@pp^(0+128),w
  9602  05DF  043E               	iorwf	(efgtoa@pp+1)^(0+128),w
  9603  05E0  1D03               	btfss	3,2
  9604  05E1  2DF3               	goto	l7177
  9605  05E2  0023               	movlb	3	; select bank3
  9606  05E3  1E42               	btfss	_flags^(0+384),4
  9607  05E4  2DF3               	goto	l7177
  9608                           
  9609                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  9610  05E5  302E               	movlw	46
  9611  05E6  0021               	movlb	1	; select bank1
  9612  05E7  00A7               	movwf	??_efgtoa^(0+128)
  9613  05E8  085D               	movf	efgtoa@n^(0+128),w
  9614  05E9  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9615  05EA  0086               	movwf	6
  9616  05EB  3002               	movlw	2	; select bank4/5
  9617  05EC  0087               	movwf	7
  9618  05ED  0827               	movf	??_efgtoa^(0+128),w
  9619  05EE  0081               	movwf	1
  9620  05EF  3001               	movlw	1
  9621  05F0  07DD               	addwf	efgtoa@n^(0+128),f
  9622  05F1  3000               	movlw	0
  9623  05F2  3DDE               	addwfc	(efgtoa@n+1)^(0+128),f
  9624  05F3                     l7177:	
  9625                           
  9626                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  9627  05F3  0021               	movlb	1	; select bank1
  9628  05F4  085D               	movf	efgtoa@n^(0+128),w
  9629  05F5  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9630  05F6  0086               	movwf	6
  9631  05F7  3002               	movlw	2	; select bank4/5
  9632  05F8  0087               	movwf	7
  9633  05F9  0181               	clrf	1
  9634                           
  9635                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  9636  05FA  3065               	movlw	101
  9637  05FB  0649               	xorwf	efgtoa@nmode^(0+128),w
  9638  05FC  1D03               	btfss	3,2
  9639  05FD  2EB4               	goto	l7239
  9640                           
  9641                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  9642  05FE  304F               	movlw	79
  9643  05FF  00D5               	movwf	efgtoa@i^(0+128)
  9644  0600  3000               	movlw	0
  9645  0601  00D6               	movwf	(efgtoa@i^(0+128)+1)
  9646                           
  9647                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  9648  0602  0855               	movf	efgtoa@i^(0+128),w
  9649  0603  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9650  0604  0086               	movwf	6
  9651  0605  3002               	movlw	2	; select bank4/5
  9652  0606  0087               	movwf	7
  9653  0607  0181               	clrf	1
  9654                           
  9655                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  9656  0608  01C5               	clrf	efgtoa@sign^(0+128)
  9657  0609  01C6               	clrf	(efgtoa@sign+1)^(0+128)
  9658                           
  9659                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  9660  060A  1FDC               	btfss	(efgtoa@e+1)^(0+128),7
  9661  060B  2E15               	goto	l7193
  9662                           
  9663                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  9664  060C  3001               	movlw	1
  9665  060D  00C5               	movwf	efgtoa@sign^(0+128)
  9666  060E  3000               	movlw	0
  9667  060F  00C6               	movwf	(efgtoa@sign^(0+128)+1)
  9668                           
  9669                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  9670  0610  09DB               	comf	efgtoa@e^(0+128),f
  9671  0611  09DC               	comf	(efgtoa@e+1)^(0+128),f
  9672  0612  0ADB               	incf	efgtoa@e^(0+128),f
  9673  0613  1903               	skipnz
  9674  0614  0ADC               	incf	(efgtoa@e+1)^(0+128),f
  9675  0615                     l7193:	
  9676                           
  9677                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  9678  0615  3002               	movlw	2
  9679  0616  00C7               	movwf	efgtoa@p^(0+128)
  9680  0617  3000               	movlw	0
  9681  0618  00C8               	movwf	(efgtoa@p^(0+128)+1)
  9682  0619                     l7205:	
  9683                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  9684                           
  9685                           
  9686                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  9687  0619  085B               	movf	efgtoa@e^(0+128),w
  9688  061A  045C               	iorwf	(efgtoa@e+1)^(0+128),w
  9689  061B  1903               	btfsc	3,2
  9690  061C  2E51               	goto	l7207
  9691  061D                     l7195:	
  9692                           
  9693                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  9694  061D  30FF               	movlw	255
  9695  061E  0021               	movlb	1	; select bank1
  9696  061F  07D5               	addwf	efgtoa@i^(0+128),f
  9697  0620  30FF               	movlw	255
  9698  0621  3DD6               	addwfc	(efgtoa@i+1)^(0+128),f
  9699                           
  9700                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  9701  0622  300A               	movlw	10
  9702  0623  00F1               	movwf	___awmod@divisor
  9703  0624  3000               	movlw	0
  9704  0625  00F2               	movwf	___awmod@divisor+1
  9705  0626  085C               	movf	(efgtoa@e+1)^(0+128),w
  9706  0627  00F4               	movwf	___awmod@dividend+1
  9707  0628  085B               	movf	efgtoa@e^(0+128),w
  9708  0629  00F3               	movwf	___awmod@dividend
  9709  062A  31AA  2279  3180   	fcall	___awmod
  9710  062D  0871               	movf	?___awmod,w
  9711  062E  3E30               	addlw	48
  9712  062F  0021               	movlb	1	; select bank1
  9713  0630  00A7               	movwf	??_efgtoa^(0+128)
  9714  0631  0855               	movf	efgtoa@i^(0+128),w
  9715  0632  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9716  0633  0086               	movwf	6
  9717  0634  3002               	movlw	2	; select bank4/5
  9718  0635  0087               	movwf	7
  9719  0636  0827               	movf	??_efgtoa^(0+128),w
  9720  0637  0081               	movwf	1
  9721                           
  9722                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  9723  0638  300A               	movlw	10
  9724  0639  00F1               	movwf	___awdiv@divisor
  9725  063A  3000               	movlw	0
  9726  063B  00F2               	movwf	___awdiv@divisor+1
  9727  063C  085C               	movf	(efgtoa@e+1)^(0+128),w
  9728  063D  00F4               	movwf	___awdiv@dividend+1
  9729  063E  085B               	movf	efgtoa@e^(0+128),w
  9730  063F  00F3               	movwf	___awdiv@dividend
  9731  0640  31AB  2358  3180   	fcall	___awdiv
  9732  0643  0872               	movf	?___awdiv+1,w
  9733  0644  0021               	movlb	1	; select bank1
  9734  0645  00DC               	movwf	(efgtoa@e+1)^(0+128)
  9735  0646  0871               	movf	?___awdiv,w
  9736  0647  00DB               	movwf	efgtoa@e^(0+128)
  9737                           
  9738                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  9739  0648  30FF               	movlw	255
  9740  0649  07C7               	addwf	efgtoa@p^(0+128),f
  9741  064A  30FF               	movlw	255
  9742  064B  3DC8               	addwfc	(efgtoa@p+1)^(0+128),f
  9743                           
  9744                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  9745  064C  30FF               	movlw	255
  9746  064D  07CA               	addwf	efgtoa@w^(0+128),f
  9747  064E  30FF               	movlw	255
  9748  064F  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
  9749  0650  2E19               	goto	l7205
  9750  0651                     l7207:	
  9751  0651  0848               	movf	(efgtoa@p+1)^(0+128),w
  9752  0652  3A80               	xorlw	128
  9753  0653  00A7               	movwf	??_efgtoa^(0+128)
  9754  0654  3080               	movlw	128
  9755  0655  0227               	subwf	??_efgtoa^(0+128),w
  9756  0656  1D03               	skipz
  9757  0657  2E5A               	goto	u10575
  9758  0658  3001               	movlw	1
  9759  0659  0247               	subwf	efgtoa@p^(0+128),w
  9760  065A                     u10575:	
  9761  065A  1803               	skipnc
  9762  065B  2E1D               	goto	l7195
  9763                           
  9764                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  9765  065C  30FF               	movlw	255
  9766  065D  0021               	movlb	1	; select bank1
  9767  065E  07D5               	addwf	efgtoa@i^(0+128),f
  9768  065F  30FF               	movlw	255
  9769  0660  3DD6               	addwfc	(efgtoa@i+1)^(0+128),f
  9770                           
  9771                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  9772  0661  0845               	movf	efgtoa@sign^(0+128),w
  9773  0662  0446               	iorwf	(efgtoa@sign+1)^(0+128),w
  9774  0663  1D03               	btfss	3,2
  9775  0664  2E67               	goto	l7215
  9776  0665  302B               	movlw	43
  9777  0666  2E68               	goto	L8
  9778  0667                     l7215:	
  9779  0667  302D               	movlw	45
  9780  0668                     L8:	
  9781  0668  00B5               	movwf	_efgtoa$965^(0+128)
  9782  0669  3000               	movlw	0
  9783  066A  00B6               	movwf	(_efgtoa$965^(0+128)+1)
  9784  066B  0835               	movf	_efgtoa$965^(0+128),w
  9785  066C  00A7               	movwf	??_efgtoa^(0+128)
  9786  066D  0855               	movf	efgtoa@i^(0+128),w
  9787  066E  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9788  066F  0086               	movwf	6
  9789  0670  3002               	movlw	2	; select bank4/5
  9790  0671  0087               	movwf	7
  9791  0672  0827               	movf	??_efgtoa^(0+128),w
  9792  0673  0081               	movwf	1
  9793                           
  9794                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  9795  0674  30FF               	movlw	255
  9796  0675  07CA               	addwf	efgtoa@w^(0+128),f
  9797  0676  30FF               	movlw	255
  9798  0677  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
  9799                           
  9800                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  9801  0678  30FF               	movlw	255
  9802  0679  07D5               	addwf	efgtoa@i^(0+128),f
  9803  067A  30FF               	movlw	255
  9804  067B  3DD6               	addwfc	(efgtoa@i+1)^(0+128),f
  9805  067C  0826               	movf	efgtoa@c^(0+128),w
  9806  067D  3EBF               	addlw	191
  9807  067E  00A7               	movwf	??_efgtoa^(0+128)
  9808  067F  30FF               	movlw	255
  9809  0680  1803               	skipnc
  9810  0681  3000               	movlw	0
  9811  0682  00A8               	movwf	(??_efgtoa^(0+128)+1)
  9812  0683  3000               	movlw	0
  9813  0684  0228               	subwf	(??_efgtoa+1)^(0+128),w
  9814  0685  301A               	movlw	26
  9815  0686  1903               	skipnz
  9816  0687  0227               	subwf	??_efgtoa^(0+128),w
  9817  0688  1803               	btfsc	3,0
  9818  0689  2E8C               	goto	u10590
  9819  068A  3001               	movlw	1
  9820  068B  2E8D               	goto	u10600
  9821  068C                     u10590:	
  9822  068C  3000               	movlw	0
  9823  068D                     u10600:	
  9824  068D  00A9               	movwf	(??_efgtoa+2)^(0+128)
  9825  068E  01AA               	clrf	((??_efgtoa+2)^(0+128)+1)
  9826  068F  0829               	movf	(??_efgtoa+2)^(0+128),w
  9827  0690  00B9               	movwf	_efgtoa$967^(0+128)
  9828  0691  082A               	movf	(??_efgtoa+3)^(0+128),w
  9829  0692  00BA               	movwf	(_efgtoa$967+1)^(0+128)
  9830  0693  0839               	movf	_efgtoa$967^(0+128),w
  9831  0694  043A               	iorwf	(_efgtoa$967+1)^(0+128),w
  9832  0695  1D03               	btfss	3,2
  9833  0696  2E99               	goto	l7231
  9834  0697  3065               	movlw	101
  9835  0698  2E9A               	goto	L9
  9836  0699                     l7231:	
  9837  0699  3045               	movlw	69
  9838  069A                     L9:	
  9839  069A  00B7               	movwf	_efgtoa$966^(0+128)
  9840  069B  3000               	movlw	0
  9841  069C  00B8               	movwf	(_efgtoa$966^(0+128)+1)
  9842  069D  0837               	movf	_efgtoa$966^(0+128),w
  9843  069E  00A7               	movwf	??_efgtoa^(0+128)
  9844  069F  0855               	movf	efgtoa@i^(0+128),w
  9845  06A0  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9846  06A1  0086               	movwf	6
  9847  06A2  3002               	movlw	2	; select bank4/5
  9848  06A3  0087               	movwf	7
  9849  06A4  0827               	movf	??_efgtoa^(0+128),w
  9850  06A5  0081               	movwf	1
  9851                           
  9852                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  9853  06A6  30FF               	movlw	255
  9854  06A7  07CA               	addwf	efgtoa@w^(0+128),f
  9855  06A8  30FF               	movlw	255
  9856  06A9  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
  9857                           
  9858                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  9859  06AA  0855               	movf	efgtoa@i^(0+128),w
  9860  06AB  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9861  06AC  00F1               	movwf	strcpy@src
  9862  06AD  3002               	movlw	2
  9863  06AE  00F2               	movwf	strcpy@src+1
  9864  06AF  085D               	movf	efgtoa@n^(0+128),w
  9865  06B0  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9866  06B1  31A8  2077  3180   	fcall	_strcpy
  9867  06B4                     l7239:	
  9868                           
  9869                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 502:     re
      +                          turn pad(fp, &dbuf[0], w);
  9870  06B4  0021               	movlb	1	; select bank1
  9871  06B5  0821               	movf	(efgtoa@fp+1)^(0+128),w
  9872  06B6  0020               	movlb	0	; select bank0
  9873  06B7  00A7               	movwf	pad@fp+1
  9874  06B8  0021               	movlb	1	; select bank1
  9875  06B9  0820               	movf	efgtoa@fp^(0+128),w
  9876  06BA  0020               	movlb	0	; select bank0
  9877  06BB  00A6               	movwf	pad@fp
  9878  06BC  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  9879  06BD  0021               	movlb	1	; select bank1
  9880  06BE  00A7               	movwf	??_efgtoa^(0+128)
  9881  06BF  0827               	movf	??_efgtoa^(0+128),w
  9882  06C0  0020               	movlb	0	; select bank0
  9883  06C1  00A8               	movwf	pad@buf
  9884  06C2  0021               	movlb	1	; select bank1
  9885  06C3  084B               	movf	(efgtoa@w+1)^(0+128),w
  9886  06C4  0020               	movlb	0	; select bank0
  9887  06C5  00AA               	movwf	pad@p+1
  9888  06C6  0021               	movlb	1	; select bank1
  9889  06C7  084A               	movf	efgtoa@w^(0+128),w
  9890  06C8  0020               	movlb	0	; select bank0
  9891  06C9  00A9               	movwf	pad@p
  9892  06CA  31AB  2307         	fcall	_pad
  9893  06CC  0020               	movlb	0	; select bank0
  9894  06CD  0827               	movf	?_pad+1,w
  9895  06CE  0021               	movlb	1	; select bank1
  9896  06CF  00A1               	movwf	(?_efgtoa+1)^(0+128)
  9897  06D0  0020               	movlb	0	; select bank0
  9898  06D1  0826               	movf	?_pad,w
  9899  06D2  0021               	movlb	1	; select bank1
  9900  06D3  00A0               	movwf	?_efgtoa^(0+128)
  9901  06D4  0008               	return
  9902  06D5                     __end_of_efgtoa:	
  9903                           
  9904                           	psect	text17
  9905  28D9                     __ptext17:	
  9906 ;; *************** function _tolower *****************
  9907 ;; Defined at:
  9908 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\tolower.c"
  9909 ;; Parameters:    Size  Location     Type
  9910 ;;  c               2    7[COMMON] int 
  9911 ;; Auto vars:     Size  Location     Type
  9912 ;;		None
  9913 ;; Return value:  Size  Location     Type
  9914 ;;                  2    7[COMMON] int 
  9915 ;; Registers used:
  9916 ;;		wreg, status,2, status,0
  9917 ;; Tracked objects:
  9918 ;;		On entry : 0/0
  9919 ;;		On exit  : 0/0
  9920 ;;		Unchanged: 0/0
  9921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9922 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9923 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9924 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9925 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9926 ;;Total ram usage:        8 bytes
  9927 ;; Hardware stack levels used:    1
  9928 ;; Hardware stack levels required when called:    2
  9929 ;; This function calls:
  9930 ;;		_isupper
  9931 ;; This function is called by:
  9932 ;;		_efgtoa
  9933 ;;		_vfpfcnvrt
  9934 ;; This function uses a non-reentrant model
  9935 ;;
  9936                           
  9937                           
  9938                           ;psect for function _tolower
  9939  28D9                     _tolower:	
  9940                           
  9941                           ;incstack = 0
  9942                           ; Regs used in _tolower: [wreg+status,2+status,0]
  9943  28D9  0877               	movf	tolower@c,w
  9944  28DA  3EBF               	addlw	191
  9945  28DB  0020               	movlb	0	; select bank0
  9946  28DC  00A0               	movwf	??_tolower
  9947  28DD  30FF               	movlw	255
  9948  28DE  3D78               	addwfc	tolower@c+1,w
  9949  28DF  00A1               	movwf	??_tolower+1
  9950  28E0  3000               	movlw	0
  9951  28E1  0221               	subwf	??_tolower+1,w
  9952  28E2  301A               	movlw	26
  9953  28E3  1903               	skipnz
  9954  28E4  0220               	subwf	??_tolower,w
  9955  28E5  1803               	btfsc	3,0
  9956  28E6  28E9               	goto	u9840
  9957  28E7  3001               	movlw	1
  9958  28E8  28EA               	goto	u9850
  9959  28E9                     u9840:	
  9960  28E9  3000               	movlw	0
  9961  28EA                     u9850:	
  9962  28EA  00A2               	movwf	??_tolower+2
  9963  28EB  01A3               	clrf	??_tolower+3
  9964  28EC  0822               	movf	??_tolower+2,w
  9965  28ED  00F9               	movwf	_tolower$1595
  9966  28EE  0823               	movf	??_tolower+3,w
  9967  28EF  00FA               	movwf	_tolower$1595+1
  9968  28F0  0879               	movf	_tolower$1595,w
  9969  28F1  047A               	iorwf	_tolower$1595+1,w
  9970  28F2  1903               	btfsc	3,2
  9971  28F3  0008               	return
  9972  28F4  3020               	movlw	32
  9973  28F5  0477               	iorwf	tolower@c,w
  9974  28F6  00F7               	movwf	?_tolower
  9975  28F7  3000               	movlw	0
  9976  28F8  0478               	iorwf	tolower@c+1,w
  9977  28F9  00F8               	movwf	?_tolower+1
  9978  28FA  0008               	return
  9979  28FB                     __end_of_tolower:	
  9980                           
  9981                           	psect	text18
  9982  374C                     __ptext18:	
  9983 ;; *************** function _isupper *****************
  9984 ;; Defined at:
  9985 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  9986 ;; Parameters:    Size  Location     Type
  9987 ;;  c               2    1[COMMON] int 
  9988 ;; Auto vars:     Size  Location     Type
  9989 ;;		None
  9990 ;; Return value:  Size  Location     Type
  9991 ;;                  2    1[COMMON] int 
  9992 ;; Registers used:
  9993 ;;		wreg, status,2, status,0
  9994 ;; Tracked objects:
  9995 ;;		On entry : 0/0
  9996 ;;		On exit  : 0/0
  9997 ;;		Unchanged: 0/0
  9998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9999 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10001 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10002 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10003 ;;Total ram usage:        6 bytes
 10004 ;; Hardware stack levels used:    1
 10005 ;; Hardware stack levels required when called:    1
 10006 ;; This function calls:
 10007 ;;		Nothing
 10008 ;; This function is called by:
 10009 ;;		_efgtoa
 10010 ;;		_xtoa
 10011 ;;		_vfpfcnvrt
 10012 ;;		_tolower
 10013 ;; This function uses a non-reentrant model
 10014 ;;
 10015                           
 10016                           
 10017                           ;psect for function _isupper
 10018  374C                     _isupper:	
 10019                           
 10020                           ;incstack = 0
 10021                           ; Regs used in _isupper: [wreg+status,2+status,0]
 10022  374C  0871               	movf	isupper@c,w
 10023  374D  3EBF               	addlw	191
 10024  374E  00F3               	movwf	??_isupper
 10025  374F  30FF               	movlw	255
 10026  3750  3D72               	addwfc	isupper@c+1,w
 10027  3751  00F4               	movwf	??_isupper+1
 10028  3752  3000               	movlw	0
 10029  3753  0274               	subwf	??_isupper+1,w
 10030  3754  301A               	movlw	26
 10031  3755  1903               	skipnz
 10032  3756  0273               	subwf	??_isupper,w
 10033  3757  1803               	btfsc	3,0
 10034  3758  2F5B               	goto	u9330
 10035  3759  3001               	movlw	1
 10036  375A  2F5C               	goto	u9340
 10037  375B                     u9330:	
 10038  375B  3000               	movlw	0
 10039  375C                     u9340:	
 10040  375C  00F5               	movwf	??_isupper+2
 10041  375D  01F6               	clrf	??_isupper+3
 10042  375E  0875               	movf	??_isupper+2,w
 10043  375F  00F1               	movwf	?_isupper
 10044  3760  0876               	movf	??_isupper+3,w
 10045  3761  00F2               	movwf	?_isupper+1
 10046  3762  0008               	return
 10047  3763                     __end_of_isupper:	
 10048                           
 10049                           	psect	text19
 10050  2877                     __ptext19:	
 10051 ;; *************** function _strcpy *****************
 10052 ;; Defined at:
 10053 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcpy.c"
 10054 ;; Parameters:    Size  Location     Type
 10055 ;;  dest            1    wreg     PTR unsigned char 
 10056 ;;		 -> dbuf(80), 
 10057 ;;  src             2    1[COMMON] PTR const unsigned char 
 10058 ;;		 -> STR_15(4), STR_14(4), STR_11(4), STR_10(4), 
 10059 ;;		 -> dbuf(80), 
 10060 ;; Auto vars:     Size  Location     Type
 10061 ;;  dest            1    8[COMMON] PTR unsigned char 
 10062 ;;		 -> dbuf(80), 
 10063 ;;  s               2    5[COMMON] PTR const unsigned char 
 10064 ;;		 -> STR_15(4), STR_14(4), STR_11(4), STR_10(4), 
 10065 ;;		 -> dbuf(80), 
 10066 ;;  d               1    7[COMMON] PTR unsigned char 
 10067 ;;		 -> dbuf(80), 
 10068 ;; Return value:  Size  Location     Type
 10069 ;;                  1    wreg      PTR unsigned char 
 10070 ;; Registers used:
 10071 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 10072 ;; Tracked objects:
 10073 ;;		On entry : 0/0
 10074 ;;		On exit  : 0/0
 10075 ;;		Unchanged: 0/0
 10076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10077 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10078 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10079 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10080 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10081 ;;Total ram usage:        8 bytes
 10082 ;; Hardware stack levels used:    1
 10083 ;; Hardware stack levels required when called:    1
 10084 ;; This function calls:
 10085 ;;		Nothing
 10086 ;; This function is called by:
 10087 ;;		_efgtoa
 10088 ;; This function uses a non-reentrant model
 10089 ;;
 10090                           
 10091                           
 10092                           ;psect for function _strcpy
 10093  2877                     _strcpy:	
 10094                           
 10095                           ;incstack = 0
 10096                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
 10097                           ;strcpy@dest stored from wreg
 10098  2877  00F8               	movwf	strcpy@dest
 10099  2878  0872               	movf	strcpy@src+1,w
 10100  2879  00F6               	movwf	strcpy@s+1
 10101  287A  0871               	movf	strcpy@src,w
 10102  287B  00F5               	movwf	strcpy@s
 10103  287C  0878               	movf	strcpy@dest,w
 10104  287D  00F3               	movwf	??_strcpy
 10105  287E  0873               	movf	??_strcpy,w
 10106  287F  00F7               	movwf	strcpy@d
 10107  2880                     l4379:	
 10108  2880  0877               	movf	strcpy@d,w
 10109  2881  0086               	movwf	6
 10110  2882  3002               	movlw	2	; select bank4/5
 10111  2883  0087               	movwf	7
 10112  2884  0AF7               	incf	strcpy@d,f
 10113  2885  0876               	movf	strcpy@s+1,w
 10114  2886  00F4               	movwf	??_strcpy+1
 10115  2887  0875               	movf	strcpy@s,w
 10116  2888  00F3               	movwf	??_strcpy
 10117  2889  0AF5               	incf	strcpy@s,f
 10118  288A  1903               	skipnz
 10119  288B  0AF6               	incf	strcpy@s+1,f
 10120  288C  0873               	movf	??_strcpy,w
 10121  288D  0084               	movwf	4
 10122  288E  0874               	movf	??_strcpy+1,w
 10123  288F  0085               	movwf	5
 10124  2890  0800               	movf	0,w	;code access
 10125  2891  3FC0               	movwi [0]fsr1
 10126  2892  0889               	movf	9,f
 10127  2893  1903               	btfsc	3,2
 10128  2894  0008               	return
 10129  2895  2880               	goto	l4379
 10130  2896                     __end_of_strcpy:	
 10131                           
 10132                           	psect	text20
 10133  256B                     __ptext20:	
 10134 ;; *************** function _floorf *****************
 10135 ;; Defined at:
 10136 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\floorf.c"
 10137 ;; Parameters:    Size  Location     Type
 10138 ;;  x               4   58[BANK0 ] float 
 10139 ;; Auto vars:     Size  Location     Type
 10140 ;;  u               4   74[BANK0 ] struct .
 10141 ;;  m               4   68[BANK0 ] unsigned long 
 10142 ;;  e               2   72[BANK0 ] int 
 10143 ;; Return value:  Size  Location     Type
 10144 ;;                  4   58[BANK0 ] float 
 10145 ;; Registers used:
 10146 ;;		wreg, status,2, status,0
 10147 ;; Tracked objects:
 10148 ;;		On entry : 0/0
 10149 ;;		On exit  : 0/0
 10150 ;;		Unchanged: 0/0
 10151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10152 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10153 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10154 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10155 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10156 ;;Total ram usage:       20 bytes
 10157 ;; Hardware stack levels used:    1
 10158 ;; Hardware stack levels required when called:    1
 10159 ;; This function calls:
 10160 ;;		Nothing
 10161 ;; This function is called by:
 10162 ;;		_efgtoa
 10163 ;; This function uses a non-reentrant model
 10164 ;;
 10165                           
 10166                           
 10167                           ;psect for function _floorf
 10168  256B                     _floorf:	
 10169                           
 10170                           ;incstack = 0
 10171                           ; Regs used in _floorf: [wreg+status,2+status,0]
 10172  256B  0023               	movlb	3	; select bank3
 10173  256C  082D               	movf	(floorf@F524+3)^(0+384),w
 10174  256D  0020               	movlb	0	; select bank0
 10175  256E  00ED               	movwf	floorf@u+3
 10176  256F  0023               	movlb	3	; select bank3
 10177  2570  082C               	movf	(floorf@F524+2)^(0+384),w
 10178  2571  0020               	movlb	0	; select bank0
 10179  2572  00EC               	movwf	floorf@u+2
 10180  2573  0023               	movlb	3	; select bank3
 10181  2574  082B               	movf	(floorf@F524+1)^(0+384),w
 10182  2575  0020               	movlb	0	; select bank0
 10183  2576  00EB               	movwf	floorf@u+1
 10184  2577  0023               	movlb	3	; select bank3
 10185  2578  082A               	movf	floorf@F524^(0+384),w
 10186  2579  0020               	movlb	0	; select bank0
 10187  257A  00EA               	movwf	floorf@u
 10188  257B  085D               	movf	floorf@x+3,w
 10189  257C  00ED               	movwf	floorf@u+3
 10190  257D  085C               	movf	floorf@x+2,w
 10191  257E  00EC               	movwf	floorf@u+2
 10192  257F  085B               	movf	floorf@x+1,w
 10193  2580  00EB               	movwf	floorf@u+1
 10194  2581  085A               	movf	floorf@x,w
 10195  2582  00EA               	movwf	floorf@u
 10196  2583  086A               	movf	floorf@u,w
 10197  2584  00DE               	movwf	??_floorf
 10198  2585  086B               	movf	floorf@u+1,w
 10199  2586  00DF               	movwf	??_floorf+1
 10200  2587  086C               	movf	floorf@u+2,w
 10201  2588  00E0               	movwf	??_floorf+2
 10202  2589  086D               	movf	floorf@u+3,w
 10203  258A  00E1               	movwf	??_floorf+3
 10204  258B  3017               	movlw	23
 10205  258C                     u5425:	
 10206  258C  36E1               	lsrf	??_floorf+3,f
 10207  258D  0CE0               	rrf	??_floorf+2,f
 10208  258E  0CDF               	rrf	??_floorf+1,f
 10209  258F  0CDE               	rrf	??_floorf,f
 10210  2590  0B89               	decfsz	9,f
 10211  2591  2D8C               	goto	u5425
 10212  2592  30FF               	movlw	255
 10213  2593  055E               	andwf	??_floorf,w
 10214  2594  00E2               	movwf	??_floorf+4
 10215  2595  3000               	movlw	0
 10216  2596  055F               	andwf	??_floorf+1,w
 10217  2597  00E3               	movwf	??_floorf+5
 10218  2598  0862               	movf	??_floorf+4,w
 10219  2599  3E81               	addlw	129
 10220  259A  00E8               	movwf	floorf@e
 10221  259B  30FF               	movlw	255
 10222  259C  3D63               	addwfc	??_floorf+5,w
 10223  259D  00E9               	movwf	floorf@e+1
 10224  259E  0869               	movf	floorf@e+1,w
 10225  259F  3A80               	xorlw	128
 10226  25A0  00DE               	movwf	??_floorf
 10227  25A1  3080               	movlw	128
 10228  25A2  025E               	subwf	??_floorf,w
 10229  25A3  1D03               	skipz
 10230  25A4  2DA7               	goto	u5435
 10231  25A5  3017               	movlw	23
 10232  25A6  0268               	subwf	floorf@e,w
 10233  25A7                     u5435:	
 10234  25A7  1803               	btfsc	3,0
 10235  25A8  0008               	return
 10236  25A9  0020               	movlb	0	; select bank0
 10237  25AA  1BE9               	btfsc	floorf@e+1,7
 10238  25AB  2E04               	goto	l4411
 10239  25AC  30FF               	movlw	255
 10240  25AD  00DE               	movwf	??_floorf
 10241  25AE  30FF               	movlw	255
 10242  25AF  00DF               	movwf	??_floorf+1
 10243  25B0  307F               	movlw	127
 10244  25B1  00E0               	movwf	??_floorf+2
 10245  25B2  3000               	movlw	0
 10246  25B3  00E1               	movwf	??_floorf+3
 10247  25B4  0A68               	incf	floorf@e,w
 10248  25B5  2DBA               	goto	u5450
 10249  25B6                     u5455:	
 10250  25B6  37E1               	asrf	??_floorf+3,f
 10251  25B7  0CE0               	rrf	??_floorf+2,f
 10252  25B8  0CDF               	rrf	??_floorf+1,f
 10253  25B9  0CDE               	rrf	??_floorf,f
 10254  25BA                     u5450:	
 10255  25BA  0B89               	decfsz	9,f
 10256  25BB  2DB6               	goto	u5455
 10257  25BC  0861               	movf	??_floorf+3,w
 10258  25BD  00E7               	movwf	floorf@m+3
 10259  25BE  0860               	movf	??_floorf+2,w
 10260  25BF  00E6               	movwf	floorf@m+2
 10261  25C0  085F               	movf	??_floorf+1,w
 10262  25C1  00E5               	movwf	floorf@m+1
 10263  25C2  085E               	movf	??_floorf,w
 10264  25C3  00E4               	movwf	floorf@m
 10265  25C4  086A               	movf	floorf@u,w
 10266  25C5  0564               	andwf	floorf@m,w
 10267  25C6  00DE               	movwf	??_floorf
 10268  25C7  086B               	movf	floorf@u+1,w
 10269  25C8  0565               	andwf	floorf@m+1,w
 10270  25C9  00DF               	movwf	??_floorf+1
 10271  25CA  086C               	movf	floorf@u+2,w
 10272  25CB  0566               	andwf	floorf@m+2,w
 10273  25CC  00E0               	movwf	??_floorf+2
 10274  25CD  086D               	movf	floorf@u+3,w
 10275  25CE  0567               	andwf	floorf@m+3,w
 10276  25CF  00E1               	movwf	??_floorf+3
 10277  25D0  0861               	movf	??_floorf+3,w
 10278  25D1  0460               	iorwf	??_floorf+2,w
 10279  25D2  045F               	iorwf	??_floorf+1,w
 10280  25D3  045E               	iorwf	??_floorf,w
 10281  25D4  1903               	btfsc	3,2
 10282  25D5  0008               	return
 10283  25D6  086A               	movf	floorf@u,w
 10284  25D7  00DE               	movwf	??_floorf
 10285  25D8  086B               	movf	floorf@u+1,w
 10286  25D9  00DF               	movwf	??_floorf+1
 10287  25DA  086C               	movf	floorf@u+2,w
 10288  25DB  00E0               	movwf	??_floorf+2
 10289  25DC  086D               	movf	floorf@u+3,w
 10290  25DD  00E1               	movwf	??_floorf+3
 10291  25DE  301F               	movlw	31
 10292  25DF                     u5475:	
 10293  25DF  36E1               	lsrf	??_floorf+3,f
 10294  25E0  0CE0               	rrf	??_floorf+2,f
 10295  25E1  0CDF               	rrf	??_floorf+1,f
 10296  25E2  0CDE               	rrf	??_floorf,f
 10297  25E3  0B89               	decfsz	9,f
 10298  25E4  2DDF               	goto	u5475
 10299  25E5  0861               	movf	??_floorf+3,w
 10300  25E6  0460               	iorwf	??_floorf+2,w
 10301  25E7  045F               	iorwf	??_floorf+1,w
 10302  25E8  045E               	iorwf	??_floorf,w
 10303  25E9  1903               	skipnz
 10304  25EA  2DF3               	goto	l4409
 10305  25EB  0864               	movf	floorf@m,w
 10306  25EC  07EA               	addwf	floorf@u,f
 10307  25ED  0865               	movf	floorf@m+1,w
 10308  25EE  3DEB               	addwfc	floorf@u+1,f
 10309  25EF  0866               	movf	floorf@m+2,w
 10310  25F0  3DEC               	addwfc	floorf@u+2,f
 10311  25F1  0867               	movf	floorf@m+3,w
 10312  25F2  3DED               	addwfc	floorf@u+3,f
 10313  25F3                     l4409:	
 10314  25F3  0964               	comf	floorf@m,w
 10315  25F4  00DE               	movwf	??_floorf
 10316  25F5  0965               	comf	floorf@m+1,w
 10317  25F6  00DF               	movwf	??_floorf+1
 10318  25F7  0966               	comf	floorf@m+2,w
 10319  25F8  00E0               	movwf	??_floorf+2
 10320  25F9  0967               	comf	floorf@m+3,w
 10321  25FA  00E1               	movwf	??_floorf+3
 10322  25FB  085E               	movf	??_floorf,w
 10323  25FC  05EA               	andwf	floorf@u,f
 10324  25FD  085F               	movf	??_floorf+1,w
 10325  25FE  05EB               	andwf	floorf@u+1,f
 10326  25FF  0860               	movf	??_floorf+2,w
 10327  2600  05EC               	andwf	floorf@u+2,f
 10328  2601  0861               	movf	??_floorf+3,w
 10329  2602  05ED               	andwf	floorf@u+3,f
 10330  2603  2E3A               	goto	l1328
 10331  2604                     l4411:	
 10332  2604  086A               	movf	floorf@u,w
 10333  2605  00DE               	movwf	??_floorf
 10334  2606  086B               	movf	floorf@u+1,w
 10335  2607  00DF               	movwf	??_floorf+1
 10336  2608  086C               	movf	floorf@u+2,w
 10337  2609  00E0               	movwf	??_floorf+2
 10338  260A  086D               	movf	floorf@u+3,w
 10339  260B  00E1               	movwf	??_floorf+3
 10340  260C  301F               	movlw	31
 10341  260D                     u5495:	
 10342  260D  36E1               	lsrf	??_floorf+3,f
 10343  260E  0CE0               	rrf	??_floorf+2,f
 10344  260F  0CDF               	rrf	??_floorf+1,f
 10345  2610  0CDE               	rrf	??_floorf,f
 10346  2611  0B89               	decfsz	9,f
 10347  2612  2E0D               	goto	u5495
 10348  2613  0861               	movf	??_floorf+3,w
 10349  2614  0460               	iorwf	??_floorf+2,w
 10350  2615  045F               	iorwf	??_floorf+1,w
 10351  2616  045E               	iorwf	??_floorf,w
 10352  2617  1D03               	skipz
 10353  2618  2E1D               	goto	l4415
 10354  2619  3000               	movlw	0
 10355  261A  00ED               	movwf	floorf@u+3
 10356  261B  3000               	movlw	0
 10357  261C  2E35               	goto	L10
 10358  261D                     l4415:	
 10359  261D  086A               	movf	floorf@u,w
 10360  261E  00DE               	movwf	??_floorf
 10361  261F  086B               	movf	floorf@u+1,w
 10362  2620  00DF               	movwf	??_floorf+1
 10363  2621  086C               	movf	floorf@u+2,w
 10364  2622  00E0               	movwf	??_floorf+2
 10365  2623  086D               	movf	floorf@u+3,w
 10366  2624  00E1               	movwf	??_floorf+3
 10367  2625  3001               	movlw	1
 10368  2626                     u5515:	
 10369  2626  35DE               	lslf	??_floorf,f
 10370  2627  0DDF               	rlf	??_floorf+1,f
 10371  2628  0DE0               	rlf	??_floorf+2,f
 10372  2629  0DE1               	rlf	??_floorf+3,f
 10373  262A  0B89               	decfsz	9,f
 10374  262B  2E26               	goto	u5515
 10375  262C  0861               	movf	??_floorf+3,w
 10376  262D  0460               	iorwf	??_floorf+2,w
 10377  262E  045F               	iorwf	??_floorf+1,w
 10378  262F  045E               	iorwf	??_floorf,w
 10379  2630  1903               	skipnz
 10380  2631  2E3A               	goto	l1328
 10381  2632  30BF               	movlw	191
 10382  2633  00ED               	movwf	floorf@u+3
 10383  2634  3080               	movlw	128
 10384  2635                     L10:	
 10385  2635  00EC               	movwf	floorf@u+2
 10386  2636  3000               	movlw	0
 10387  2637  00EB               	movwf	floorf@u+1
 10388  2638  3000               	movlw	0
 10389  2639  00EA               	movwf	floorf@u
 10390  263A                     l1328:	
 10391  263A  086D               	movf	floorf@u+3,w
 10392  263B  00DD               	movwf	?_floorf+3
 10393  263C  086C               	movf	floorf@u+2,w
 10394  263D  00DC               	movwf	?_floorf+2
 10395  263E  086B               	movf	floorf@u+1,w
 10396  263F  00DB               	movwf	?_floorf+1
 10397  2640  086A               	movf	floorf@u,w
 10398  2641  00DA               	movwf	?_floorf
 10399  2642  0008               	return
 10400  2643                     __end_of_floorf:	
 10401                           
 10402                           	psect	text21
 10403  2C78                     __ptext21:	
 10404 ;; *************** function ___fpclassifyf *****************
 10405 ;; Defined at:
 10406 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__fpclassifyf.c"
 10407 ;; Parameters:    Size  Location     Type
 10408 ;;  x               4    1[COMMON] float 
 10409 ;; Auto vars:     Size  Location     Type
 10410 ;;  u               4    2[BANK0 ] struct .
 10411 ;;  e               2    0[BANK0 ] int 
 10412 ;; Return value:  Size  Location     Type
 10413 ;;                  2    1[COMMON] int 
 10414 ;; Registers used:
 10415 ;;		wreg, status,2, status,0
 10416 ;; Tracked objects:
 10417 ;;		On entry : 0/0
 10418 ;;		On exit  : 0/0
 10419 ;;		Unchanged: 0/0
 10420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10421 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10422 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10423 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10424 ;;      Totals:        10       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10425 ;;Total ram usage:       16 bytes
 10426 ;; Hardware stack levels used:    1
 10427 ;; Hardware stack levels required when called:    1
 10428 ;; This function calls:
 10429 ;;		Nothing
 10430 ;; This function is called by:
 10431 ;;		_efgtoa
 10432 ;; This function uses a non-reentrant model
 10433 ;;
 10434                           
 10435                           
 10436                           ;psect for function ___fpclassifyf
 10437  2C78                     ___fpclassifyf:	
 10438                           
 10439                           ;incstack = 0
 10440                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
 10441  2C78  0023               	movlb	3	; select bank3
 10442  2C79  0831               	movf	(___fpclassifyf@F463+3)^(0+384),w
 10443  2C7A  0020               	movlb	0	; select bank0
 10444  2C7B  00A5               	movwf	___fpclassifyf@u+3
 10445  2C7C  0023               	movlb	3	; select bank3
 10446  2C7D  0830               	movf	(___fpclassifyf@F463+2)^(0+384),w
 10447  2C7E  0020               	movlb	0	; select bank0
 10448  2C7F  00A4               	movwf	___fpclassifyf@u+2
 10449  2C80  0023               	movlb	3	; select bank3
 10450  2C81  082F               	movf	(___fpclassifyf@F463+1)^(0+384),w
 10451  2C82  0020               	movlb	0	; select bank0
 10452  2C83  00A3               	movwf	___fpclassifyf@u+1
 10453  2C84  0023               	movlb	3	; select bank3
 10454  2C85  082E               	movf	___fpclassifyf@F463^(0+384),w
 10455  2C86  0020               	movlb	0	; select bank0
 10456  2C87  00A2               	movwf	___fpclassifyf@u
 10457  2C88  0874               	movf	___fpclassifyf@x+3,w
 10458  2C89  00A5               	movwf	___fpclassifyf@u+3
 10459  2C8A  0873               	movf	___fpclassifyf@x+2,w
 10460  2C8B  00A4               	movwf	___fpclassifyf@u+2
 10461  2C8C  0872               	movf	___fpclassifyf@x+1,w
 10462  2C8D  00A3               	movwf	___fpclassifyf@u+1
 10463  2C8E  0871               	movf	___fpclassifyf@x,w
 10464  2C8F  00A2               	movwf	___fpclassifyf@u
 10465  2C90  0822               	movf	___fpclassifyf@u,w
 10466  2C91  00F5               	movwf	??___fpclassifyf
 10467  2C92  0823               	movf	___fpclassifyf@u+1,w
 10468  2C93  00F6               	movwf	??___fpclassifyf+1
 10469  2C94  0824               	movf	___fpclassifyf@u+2,w
 10470  2C95  00F7               	movwf	??___fpclassifyf+2
 10471  2C96  0825               	movf	___fpclassifyf@u+3,w
 10472  2C97  00F8               	movwf	??___fpclassifyf+3
 10473  2C98  3017               	movlw	23
 10474  2C99                     u5305:	
 10475  2C99  36F8               	lsrf	??___fpclassifyf+3,f
 10476  2C9A  0CF7               	rrf	??___fpclassifyf+2,f
 10477  2C9B  0CF6               	rrf	??___fpclassifyf+1,f
 10478  2C9C  0CF5               	rrf	??___fpclassifyf,f
 10479  2C9D  0B89               	decfsz	9,f
 10480  2C9E  2C99               	goto	u5305
 10481  2C9F  30FF               	movlw	255
 10482  2CA0  0575               	andwf	??___fpclassifyf,w
 10483  2CA1  00A0               	movwf	___fpclassifyf@e
 10484  2CA2  3000               	movlw	0
 10485  2CA3  0576               	andwf	??___fpclassifyf+1,w
 10486  2CA4  00A1               	movwf	___fpclassifyf@e+1
 10487  2CA5  0820               	movf	___fpclassifyf@e,w
 10488  2CA6  0421               	iorwf	___fpclassifyf@e+1,w
 10489  2CA7  1D03               	btfss	3,2
 10490  2CA8  2CC8               	goto	l4367
 10491  2CA9  0822               	movf	___fpclassifyf@u,w
 10492  2CAA  00F5               	movwf	??___fpclassifyf
 10493  2CAB  0823               	movf	___fpclassifyf@u+1,w
 10494  2CAC  00F6               	movwf	??___fpclassifyf+1
 10495  2CAD  0824               	movf	___fpclassifyf@u+2,w
 10496  2CAE  00F7               	movwf	??___fpclassifyf+2
 10497  2CAF  0825               	movf	___fpclassifyf@u+3,w
 10498  2CB0  00F8               	movwf	??___fpclassifyf+3
 10499  2CB1  3001               	movlw	1
 10500  2CB2                     u5325:	
 10501  2CB2  35F5               	lslf	??___fpclassifyf,f
 10502  2CB3  0DF6               	rlf	??___fpclassifyf+1,f
 10503  2CB4  0DF7               	rlf	??___fpclassifyf+2,f
 10504  2CB5  0DF8               	rlf	??___fpclassifyf+3,f
 10505  2CB6  0B89               	decfsz	9,f
 10506  2CB7  2CB2               	goto	u5325
 10507  2CB8  0878               	movf	??___fpclassifyf+3,w
 10508  2CB9  0477               	iorwf	??___fpclassifyf+2,w
 10509  2CBA  0476               	iorwf	??___fpclassifyf+1,w
 10510  2CBB  0475               	iorwf	??___fpclassifyf,w
 10511  2CBC  1D03               	skipz
 10512  2CBD  2CC3               	goto	l4363
 10513  2CBE  3002               	movlw	2
 10514  2CBF  00F1               	movwf	?___fpclassifyf
 10515  2CC0  3000               	movlw	0
 10516  2CC1  00F2               	movwf	?___fpclassifyf+1
 10517  2CC2  0008               	return
 10518  2CC3                     l4363:	
 10519  2CC3  3003               	movlw	3
 10520  2CC4  00F1               	movwf	?___fpclassifyf
 10521  2CC5  3000               	movlw	0
 10522  2CC6  00F2               	movwf	?___fpclassifyf+1
 10523  2CC7  0008               	return
 10524  2CC8                     l4367:	
 10525  2CC8  0A20               	incf	___fpclassifyf@e,w
 10526  2CC9  0421               	iorwf	___fpclassifyf@e+1,w
 10527  2CCA  1D03               	btfss	3,2
 10528  2CCB  2CEB               	goto	l4373
 10529  2CCC  0822               	movf	___fpclassifyf@u,w
 10530  2CCD  00F5               	movwf	??___fpclassifyf
 10531  2CCE  0823               	movf	___fpclassifyf@u+1,w
 10532  2CCF  00F6               	movwf	??___fpclassifyf+1
 10533  2CD0  0824               	movf	___fpclassifyf@u+2,w
 10534  2CD1  00F7               	movwf	??___fpclassifyf+2
 10535  2CD2  0825               	movf	___fpclassifyf@u+3,w
 10536  2CD3  00F8               	movwf	??___fpclassifyf+3
 10537  2CD4  3009               	movlw	9
 10538  2CD5                     u5355:	
 10539  2CD5  35F5               	lslf	??___fpclassifyf,f
 10540  2CD6  0DF6               	rlf	??___fpclassifyf+1,f
 10541  2CD7  0DF7               	rlf	??___fpclassifyf+2,f
 10542  2CD8  0DF8               	rlf	??___fpclassifyf+3,f
 10543  2CD9  0B89               	decfsz	9,f
 10544  2CDA  2CD5               	goto	u5355
 10545  2CDB  0878               	movf	??___fpclassifyf+3,w
 10546  2CDC  0477               	iorwf	??___fpclassifyf+2,w
 10547  2CDD  0476               	iorwf	??___fpclassifyf+1,w
 10548  2CDE  0475               	iorwf	??___fpclassifyf,w
 10549  2CDF  1D03               	btfss	3,2
 10550  2CE0  2CE3               	goto	u5360
 10551  2CE1  3001               	movlw	1
 10552  2CE2  2CE4               	goto	u5370
 10553  2CE3                     u5360:	
 10554  2CE3  3000               	movlw	0
 10555  2CE4                     u5370:	
 10556  2CE4  00F9               	movwf	??___fpclassifyf+4
 10557  2CE5  01FA               	clrf	??___fpclassifyf+5
 10558  2CE6  0879               	movf	??___fpclassifyf+4,w
 10559  2CE7  00F1               	movwf	?___fpclassifyf
 10560  2CE8  087A               	movf	??___fpclassifyf+5,w
 10561  2CE9  00F2               	movwf	?___fpclassifyf+1
 10562  2CEA  0008               	return
 10563  2CEB                     l4373:	
 10564  2CEB  3004               	movlw	4
 10565  2CEC  00F1               	movwf	?___fpclassifyf
 10566  2CED  3000               	movlw	0
 10567  2CEE  00F2               	movwf	?___fpclassifyf+1
 10568  2CEF  0008               	return
 10569  2CF0                     __end_of___fpclassifyf:	
 10570                           
 10571                           	psect	text22
 10572  2858                     __ptext22:	
 10573 ;; *************** function ___flsub *****************
 10574 ;; Defined at:
 10575 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 10576 ;; Parameters:    Size  Location     Type
 10577 ;;  a               4   32[BANK0 ] int 
 10578 ;;  b               4   36[BANK0 ] int 
 10579 ;; Auto vars:     Size  Location     Type
 10580 ;;		None
 10581 ;; Return value:  Size  Location     Type
 10582 ;;                  4   32[BANK0 ] int 
 10583 ;; Registers used:
 10584 ;;		wreg, status,2, status,0, pclath, cstack
 10585 ;; Tracked objects:
 10586 ;;		On entry : 0/0
 10587 ;;		On exit  : 0/0
 10588 ;;		Unchanged: 0/0
 10589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10590 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10593 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10594 ;;Total ram usage:        8 bytes
 10595 ;; Hardware stack levels used:    1
 10596 ;; Hardware stack levels required when called:    2
 10597 ;; This function calls:
 10598 ;;		___fladd
 10599 ;; This function is called by:
 10600 ;;		_efgtoa
 10601 ;; This function uses a non-reentrant model
 10602 ;;
 10603                           
 10604                           
 10605                           ;psect for function ___flsub
 10606  2858                     ___flsub:	
 10607                           
 10608                           ;incstack = 0
 10609                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 10610  2858  3080               	movlw	128
 10611  2859  0020               	movlb	0	; select bank0
 10612  285A  06C3               	xorwf	___flsub@a+3,f
 10613  285B  0847               	movf	___flsub@b+3,w
 10614  285C  00F4               	movwf	___fladd@b+3
 10615  285D  0846               	movf	___flsub@b+2,w
 10616  285E  00F3               	movwf	___fladd@b+2
 10617  285F  0845               	movf	___flsub@b+1,w
 10618  2860  00F2               	movwf	___fladd@b+1
 10619  2861  0844               	movf	___flsub@b,w
 10620  2862  00F1               	movwf	___fladd@b
 10621  2863  0843               	movf	___flsub@a+3,w
 10622  2864  00F8               	movwf	___fladd@a+3
 10623  2865  0842               	movf	___flsub@a+2,w
 10624  2866  00F7               	movwf	___fladd@a+2
 10625  2867  0841               	movf	___flsub@a+1,w
 10626  2868  00F6               	movwf	___fladd@a+1
 10627  2869  0840               	movf	___flsub@a,w
 10628  286A  00F5               	movwf	___fladd@a
 10629  286B  3191  21DB         	fcall	___fladd
 10630  286D  0874               	movf	?___fladd+3,w
 10631  286E  0020               	movlb	0	; select bank0
 10632  286F  00C3               	movwf	?___flsub+3
 10633  2870  0873               	movf	?___fladd+2,w
 10634  2871  00C2               	movwf	?___flsub+2
 10635  2872  0872               	movf	?___fladd+1,w
 10636  2873  00C1               	movwf	?___flsub+1
 10637  2874  0871               	movf	?___fladd,w
 10638  2875  00C0               	movwf	?___flsub
 10639  2876  0008               	return
 10640  2877                     __end_of___flsub:	
 10641                           
 10642                           	psect	text23
 10643  11DB                     __ptext23:	
 10644 ;; *************** function ___fladd *****************
 10645 ;; Defined at:
 10646 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 10647 ;; Parameters:    Size  Location     Type
 10648 ;;  b               4    1[COMMON] int 
 10649 ;;  a               4    5[COMMON] int 
 10650 ;; Auto vars:     Size  Location     Type
 10651 ;;  grs             1   11[BANK0 ] unsigned char 
 10652 ;;  bexp            1   10[BANK0 ] unsigned char 
 10653 ;;  aexp            1    9[BANK0 ] unsigned char 
 10654 ;;  signs           1    8[BANK0 ] unsigned char 
 10655 ;; Return value:  Size  Location     Type
 10656 ;;                  4    1[COMMON] unsigned char 
 10657 ;; Registers used:
 10658 ;;		wreg, status,2, status,0
 10659 ;; Tracked objects:
 10660 ;;		On entry : 0/0
 10661 ;;		On exit  : 0/0
 10662 ;;		Unchanged: 0/0
 10663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10664 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10665 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10666 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10667 ;;      Totals:         8      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10668 ;;Total ram usage:       20 bytes
 10669 ;; Hardware stack levels used:    1
 10670 ;; Hardware stack levels required when called:    1
 10671 ;; This function calls:
 10672 ;;		Nothing
 10673 ;; This function is called by:
 10674 ;;		_efgtoa
 10675 ;;		___flsub
 10676 ;; This function uses a non-reentrant model
 10677 ;;
 10678                           
 10679                           
 10680                           ;psect for function ___fladd
 10681  11DB                     ___fladd:	
 10682                           
 10683                           ;incstack = 0
 10684                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 10685  11DB  0874               	movf	___fladd@b+3,w
 10686  11DC  3980               	andlw	128
 10687  11DD  0020               	movlb	0	; select bank0
 10688  11DE  00A0               	movwf	??___fladd
 10689  11DF  0820               	movf	??___fladd,w
 10690  11E0  00A8               	movwf	___fladd@signs
 10691  11E1  3574               	lslf	___fladd@b+3,w
 10692  11E2  00A0               	movwf	??___fladd
 10693  11E3  0820               	movf	??___fladd,w
 10694  11E4  00AA               	movwf	___fladd@bexp
 10695  11E5  1BF3               	btfsc	___fladd@b+2,7
 10696  11E6  142A               	bsf	___fladd@bexp,0
 10697  11E7  082A               	movf	___fladd@bexp,w
 10698  11E8  1903               	btfsc	3,2
 10699  11E9  29F8               	goto	l6639
 10700  11EA  0A2A               	incf	___fladd@bexp,w
 10701  11EB  1D03               	btfss	3,2
 10702  11EC  29F5               	goto	l6635
 10703  11ED  3000               	movlw	0
 10704  11EE  00F4               	movwf	___fladd@b+3
 10705  11EF  3000               	movlw	0
 10706  11F0  00F3               	movwf	___fladd@b+2
 10707  11F1  3000               	movlw	0
 10708  11F2  00F2               	movwf	___fladd@b+1
 10709  11F3  3000               	movlw	0
 10710  11F4  00F1               	movwf	___fladd@b
 10711  11F5                     l6635:	
 10712  11F5  17F3               	bsf	___fladd@b+2,7
 10713  11F6  01F4               	clrf	___fladd@b+3
 10714  11F7  2A00               	goto	l6641
 10715  11F8                     l6639:	
 10716  11F8  3000               	movlw	0
 10717  11F9  00F4               	movwf	___fladd@b+3
 10718  11FA  3000               	movlw	0
 10719  11FB  00F3               	movwf	___fladd@b+2
 10720  11FC  3000               	movlw	0
 10721  11FD  00F2               	movwf	___fladd@b+1
 10722  11FE  3000               	movlw	0
 10723  11FF  00F1               	movwf	___fladd@b
 10724  1200                     l6641:	
 10725  1200  0878               	movf	___fladd@a+3,w
 10726  1201  3980               	andlw	128
 10727  1202  00A0               	movwf	??___fladd
 10728  1203  0820               	movf	??___fladd,w
 10729  1204  00A9               	movwf	___fladd@aexp
 10730  1205  0829               	movf	___fladd@aexp,w
 10731  1206  0628               	xorwf	___fladd@signs,w
 10732  1207  1D03               	btfss	3,2
 10733  1208  1728               	bsf	___fladd@signs,6
 10734  1209  3578               	lslf	___fladd@a+3,w
 10735  120A  00A0               	movwf	??___fladd
 10736  120B  0820               	movf	??___fladd,w
 10737  120C  00A9               	movwf	___fladd@aexp
 10738  120D  1BF7               	btfsc	___fladd@a+2,7
 10739  120E  1429               	bsf	___fladd@aexp,0
 10740  120F  0829               	movf	___fladd@aexp,w
 10741  1210  1903               	btfsc	3,2
 10742  1211  2A20               	goto	l6663
 10743  1212  0A29               	incf	___fladd@aexp,w
 10744  1213  1D03               	btfss	3,2
 10745  1214  2A1D               	goto	l6659
 10746  1215  3000               	movlw	0
 10747  1216  00F8               	movwf	___fladd@a+3
 10748  1217  3000               	movlw	0
 10749  1218  00F7               	movwf	___fladd@a+2
 10750  1219  3000               	movlw	0
 10751  121A  00F6               	movwf	___fladd@a+1
 10752  121B  3000               	movlw	0
 10753  121C  00F5               	movwf	___fladd@a
 10754  121D                     l6659:	
 10755  121D  17F7               	bsf	___fladd@a+2,7
 10756  121E  01F8               	clrf	___fladd@a+3
 10757  121F  2A28               	goto	l1120
 10758  1220                     l6663:	
 10759  1220  3000               	movlw	0
 10760  1221  00F8               	movwf	___fladd@a+3
 10761  1222  3000               	movlw	0
 10762  1223  00F7               	movwf	___fladd@a+2
 10763  1224  3000               	movlw	0
 10764  1225  00F6               	movwf	___fladd@a+1
 10765  1226  3000               	movlw	0
 10766  1227  00F5               	movwf	___fladd@a
 10767  1228                     l1120:	
 10768  1228  082A               	movf	___fladd@bexp,w
 10769  1229  0229               	subwf	___fladd@aexp,w
 10770  122A  1803               	skipnc
 10771  122B  2A6E               	goto	l6699
 10772  122C  1F28               	btfss	___fladd@signs,6
 10773  122D  2A32               	goto	l6669
 10774  122E  3080               	movlw	128
 10775  122F  00A0               	movwf	??___fladd
 10776  1230  0820               	movf	??___fladd,w
 10777  1231  06A8               	xorwf	___fladd@signs,f
 10778  1232                     l6669:	
 10779  1232  082A               	movf	___fladd@bexp,w
 10780  1233  00A0               	movwf	??___fladd
 10781  1234  0820               	movf	??___fladd,w
 10782  1235  00AB               	movwf	___fladd@grs
 10783  1236  0829               	movf	___fladd@aexp,w
 10784  1237  00A0               	movwf	??___fladd
 10785  1238  0820               	movf	??___fladd,w
 10786  1239  00AA               	movwf	___fladd@bexp
 10787  123A  082B               	movf	___fladd@grs,w
 10788  123B  00A0               	movwf	??___fladd
 10789  123C  0820               	movf	??___fladd,w
 10790  123D  00A9               	movwf	___fladd@aexp
 10791  123E  0871               	movf	___fladd@b,w
 10792  123F  00A0               	movwf	??___fladd
 10793  1240  0820               	movf	??___fladd,w
 10794  1241  00AB               	movwf	___fladd@grs
 10795  1242  0875               	movf	___fladd@a,w
 10796  1243  00A0               	movwf	??___fladd
 10797  1244  0820               	movf	??___fladd,w
 10798  1245  00F1               	movwf	___fladd@b
 10799  1246  082B               	movf	___fladd@grs,w
 10800  1247  00A0               	movwf	??___fladd
 10801  1248  0820               	movf	??___fladd,w
 10802  1249  00F5               	movwf	___fladd@a
 10803  124A  0872               	movf	___fladd@b+1,w
 10804  124B  00A0               	movwf	??___fladd
 10805  124C  0820               	movf	??___fladd,w
 10806  124D  00AB               	movwf	___fladd@grs
 10807  124E  0876               	movf	___fladd@a+1,w
 10808  124F  00A0               	movwf	??___fladd
 10809  1250  0820               	movf	??___fladd,w
 10810  1251  00F2               	movwf	___fladd@b+1
 10811  1252  082B               	movf	___fladd@grs,w
 10812  1253  00A0               	movwf	??___fladd
 10813  1254  0820               	movf	??___fladd,w
 10814  1255  00F6               	movwf	___fladd@a+1
 10815  1256  0873               	movf	___fladd@b+2,w
 10816  1257  00A0               	movwf	??___fladd
 10817  1258  0820               	movf	??___fladd,w
 10818  1259  00AB               	movwf	___fladd@grs
 10819  125A  0877               	movf	___fladd@a+2,w
 10820  125B  00A0               	movwf	??___fladd
 10821  125C  0820               	movf	??___fladd,w
 10822  125D  00F3               	movwf	___fladd@b+2
 10823  125E  082B               	movf	___fladd@grs,w
 10824  125F  00A0               	movwf	??___fladd
 10825  1260  0820               	movf	??___fladd,w
 10826  1261  00F7               	movwf	___fladd@a+2
 10827  1262  0874               	movf	___fladd@b+3,w
 10828  1263  00A0               	movwf	??___fladd
 10829  1264  0820               	movf	??___fladd,w
 10830  1265  00AB               	movwf	___fladd@grs
 10831  1266  0878               	movf	___fladd@a+3,w
 10832  1267  00A0               	movwf	??___fladd
 10833  1268  0820               	movf	??___fladd,w
 10834  1269  00F4               	movwf	___fladd@b+3
 10835  126A  082B               	movf	___fladd@grs,w
 10836  126B  00A0               	movwf	??___fladd
 10837  126C  0820               	movf	??___fladd,w
 10838  126D  00F8               	movwf	___fladd@a+3
 10839  126E                     l6699:	
 10840  126E  01AB               	clrf	___fladd@grs
 10841  126F  0829               	movf	___fladd@aexp,w
 10842  1270  00A0               	movwf	??___fladd
 10843  1271  01A1               	clrf	??___fladd+1
 10844  1272  0821               	movf	??___fladd+1,w
 10845  1273  00A3               	movwf	??___fladd+3
 10846  1274  082A               	movf	___fladd@bexp,w
 10847  1275  0220               	subwf	??___fladd,w
 10848  1276  00A2               	movwf	??___fladd+2
 10849  1277  1C03               	skipc
 10850  1278  03A3               	decf	??___fladd+3,f
 10851  1279  0823               	movf	??___fladd+3,w
 10852  127A  3A80               	xorlw	128
 10853  127B  00A4               	movwf	??___fladd+4
 10854  127C  3080               	movlw	128
 10855  127D  0224               	subwf	??___fladd+4,w
 10856  127E  1D03               	skipz
 10857  127F  2A82               	goto	u9445
 10858  1280  301A               	movlw	26
 10859  1281  0222               	subwf	??___fladd+2,w
 10860  1282                     u9445:	
 10861  1282  1C03               	skipc
 10862  1283  2AB6               	goto	l6717
 10863  1284  0874               	movf	___fladd@b+3,w
 10864  1285  0473               	iorwf	___fladd@b+2,w
 10865  1286  0472               	iorwf	___fladd@b+1,w
 10866  1287  0471               	iorwf	___fladd@b,w
 10867  1288  1903               	btfsc	3,2
 10868  1289  2A8C               	goto	u9450
 10869  128A  3001               	movlw	1
 10870  128B  2A8D               	goto	u9460
 10871  128C                     u9450:	
 10872  128C  3000               	movlw	0
 10873  128D                     u9460:	
 10874  128D  0020               	movlb	0	; select bank0
 10875  128E  00A0               	movwf	??___fladd
 10876  128F  0820               	movf	??___fladd,w
 10877  1290  00AB               	movwf	___fladd@grs
 10878  1291  3000               	movlw	0
 10879  1292  00F4               	movwf	___fladd@b+3
 10880  1293  3000               	movlw	0
 10881  1294  00F3               	movwf	___fladd@b+2
 10882  1295  3000               	movlw	0
 10883  1296  00F2               	movwf	___fladd@b+1
 10884  1297  3000               	movlw	0
 10885  1298  00F1               	movwf	___fladd@b
 10886  1299  0829               	movf	___fladd@aexp,w
 10887  129A  00A0               	movwf	??___fladd
 10888  129B  0820               	movf	??___fladd,w
 10889  129C  00AA               	movwf	___fladd@bexp
 10890  129D  2ABB               	goto	l1124
 10891  129E                     l1126:	
 10892  129E  1C2B               	btfss	___fladd@grs,0
 10893  129F  2AA6               	goto	l6707
 10894  12A0  362B               	lsrf	___fladd@grs,w
 10895  12A1  3801               	iorlw	1
 10896  12A2  00A0               	movwf	??___fladd
 10897  12A3  0820               	movf	??___fladd,w
 10898  12A4  00AB               	movwf	___fladd@grs
 10899  12A5  2AA8               	goto	l6709
 10900  12A6                     l6707:	
 10901  12A6  1003               	clrc
 10902  12A7  0CAB               	rrf	___fladd@grs,f
 10903  12A8                     l6709:	
 10904  12A8  1871               	btfsc	___fladd@b,0
 10905  12A9  17AB               	bsf	___fladd@grs,7
 10906  12AA  3001               	movlw	1
 10907  12AB  00A0               	movwf	??___fladd
 10908  12AC                     u9495:	
 10909  12AC  37F4               	asrf	___fladd@b+3,f
 10910  12AD  0CF3               	rrf	___fladd@b+2,f
 10911  12AE  0CF2               	rrf	___fladd@b+1,f
 10912  12AF  0CF1               	rrf	___fladd@b,f
 10913  12B0  0BA0               	decfsz	??___fladd& (0+127),f
 10914  12B1  2AAC               	goto	u9495
 10915  12B2  3001               	movlw	1
 10916  12B3  00A0               	movwf	??___fladd
 10917  12B4  0820               	movf	??___fladd,w
 10918  12B5  07AA               	addwf	___fladd@bexp,f
 10919  12B6                     l6717:	
 10920  12B6  0020               	movlb	0	; select bank0
 10921  12B7  0829               	movf	___fladd@aexp,w
 10922  12B8  022A               	subwf	___fladd@bexp,w
 10923  12B9  1C03               	skipc
 10924  12BA  2A9E               	goto	l1126
 10925  12BB                     l1124:	
 10926  12BB  1B28               	btfsc	___fladd@signs,6
 10927  12BC  2AEC               	goto	l6743
 10928  12BD  082A               	movf	___fladd@bexp,w
 10929  12BE  1D03               	btfss	3,2
 10930  12BF  2AC9               	goto	l6725
 10931  12C0  3000               	movlw	0
 10932  12C1  00F4               	movwf	?___fladd+3
 10933  12C2  3000               	movlw	0
 10934  12C3  00F3               	movwf	?___fladd+2
 10935  12C4  3000               	movlw	0
 10936  12C5  00F2               	movwf	?___fladd+1
 10937  12C6  3000               	movlw	0
 10938  12C7  00F1               	movwf	?___fladd
 10939  12C8  0008               	return
 10940  12C9                     l6725:	
 10941  12C9  0875               	movf	___fladd@a,w
 10942  12CA  07F1               	addwf	___fladd@b,f
 10943  12CB  0876               	movf	___fladd@a+1,w
 10944  12CC  3DF2               	addwfc	___fladd@b+1,f
 10945  12CD  0877               	movf	___fladd@a+2,w
 10946  12CE  3DF3               	addwfc	___fladd@b+2,f
 10947  12CF  0878               	movf	___fladd@a+3,w
 10948  12D0  3DF4               	addwfc	___fladd@b+3,f
 10949  12D1  1C74               	btfss	___fladd@b+3,0
 10950  12D2  2B66               	goto	l6777
 10951  12D3  1C2B               	btfss	___fladd@grs,0
 10952  12D4  2ADB               	goto	l6733
 10953  12D5  362B               	lsrf	___fladd@grs,w
 10954  12D6  3801               	iorlw	1
 10955  12D7  00A0               	movwf	??___fladd
 10956  12D8  0820               	movf	??___fladd,w
 10957  12D9  00AB               	movwf	___fladd@grs
 10958  12DA  2ADD               	goto	l6735
 10959  12DB                     l6733:	
 10960  12DB  1003               	clrc
 10961  12DC  0CAB               	rrf	___fladd@grs,f
 10962  12DD                     l6735:	
 10963  12DD  1871               	btfsc	___fladd@b,0
 10964  12DE  17AB               	bsf	___fladd@grs,7
 10965  12DF  3001               	movlw	1
 10966  12E0  00A0               	movwf	??___fladd
 10967  12E1                     u9565:	
 10968  12E1  37F4               	asrf	___fladd@b+3,f
 10969  12E2  0CF3               	rrf	___fladd@b+2,f
 10970  12E3  0CF2               	rrf	___fladd@b+1,f
 10971  12E4  0CF1               	rrf	___fladd@b,f
 10972  12E5  0BA0               	decfsz	??___fladd& (0+127),f
 10973  12E6  2AE1               	goto	u9565
 10974  12E7  3001               	movlw	1
 10975  12E8  00A0               	movwf	??___fladd
 10976  12E9  0820               	movf	??___fladd,w
 10977  12EA  07AA               	addwf	___fladd@bexp,f
 10978  12EB  2B66               	goto	l6777
 10979  12EC                     l6743:	
 10980  12EC  0874               	movf	___fladd@b+3,w
 10981  12ED  3A80               	xorlw	128
 10982  12EE  00A0               	movwf	??___fladd
 10983  12EF  0878               	movf	___fladd@a+3,w
 10984  12F0  3A80               	xorlw	128
 10985  12F1  0220               	subwf	??___fladd,w
 10986  12F2  1D03               	skipz
 10987  12F3  2AFE               	goto	u9573
 10988  12F4  0877               	movf	___fladd@a+2,w
 10989  12F5  0273               	subwf	___fladd@b+2,w
 10990  12F6  1D03               	skipz
 10991  12F7  2AFE               	goto	u9573
 10992  12F8  0876               	movf	___fladd@a+1,w
 10993  12F9  0272               	subwf	___fladd@b+1,w
 10994  12FA  1D03               	skipz
 10995  12FB  2AFE               	goto	u9573
 10996  12FC  0875               	movf	___fladd@a,w
 10997  12FD  0271               	subwf	___fladd@b,w
 10998  12FE                     u9573:	
 10999  12FE  1803               	skipnc
 11000  12FF  2B36               	goto	l6753
 11001  1300  30FF               	movlw	255
 11002  1301  00A0               	movwf	??___fladd
 11003  1302  30FF               	movlw	255
 11004  1303  00A1               	movwf	??___fladd+1
 11005  1304  30FF               	movlw	255
 11006  1305  00A2               	movwf	??___fladd+2
 11007  1306  30FF               	movlw	255
 11008  1307  00A3               	movwf	??___fladd+3
 11009  1308  0871               	movf	___fladd@b,w
 11010  1309  0275               	subwf	___fladd@a,w
 11011  130A  00A4               	movwf	??___fladd+4
 11012  130B  0872               	movf	___fladd@b+1,w
 11013  130C  3B76               	subwfb	___fladd@a+1,w
 11014  130D  00A5               	movwf	??___fladd+5
 11015  130E  0873               	movf	___fladd@b+2,w
 11016  130F  3B77               	subwfb	___fladd@a+2,w
 11017  1310  00A6               	movwf	??___fladd+6
 11018  1311  0874               	movf	___fladd@b+3,w
 11019  1312  3B78               	subwfb	___fladd@a+3,w
 11020  1313  00A7               	movwf	??___fladd+7
 11021  1314  0824               	movf	??___fladd+4,w
 11022  1315  07A0               	addwf	??___fladd,f
 11023  1316  0825               	movf	??___fladd+5,w
 11024  1317  3DA1               	addwfc	??___fladd+1,f
 11025  1318  0826               	movf	??___fladd+6,w
 11026  1319  3DA2               	addwfc	??___fladd+2,f
 11027  131A  0827               	movf	??___fladd+7,w
 11028  131B  3DA3               	addwfc	??___fladd+3,f
 11029  131C  0823               	movf	??___fladd+3,w
 11030  131D  00F4               	movwf	___fladd@b+3
 11031  131E  0822               	movf	??___fladd+2,w
 11032  131F  00F3               	movwf	___fladd@b+2
 11033  1320  0821               	movf	??___fladd+1,w
 11034  1321  00F2               	movwf	___fladd@b+1
 11035  1322  0820               	movf	??___fladd,w
 11036  1323  00F1               	movwf	___fladd@b
 11037  1324  3080               	movlw	128
 11038  1325  00A0               	movwf	??___fladd
 11039  1326  0820               	movf	??___fladd,w
 11040  1327  06A8               	xorwf	___fladd@signs,f
 11041  1328  09AB               	comf	___fladd@grs,f
 11042  1329  0AAB               	incf	___fladd@grs,f
 11043  132A  082B               	movf	___fladd@grs,w
 11044  132B  1D03               	btfss	3,2
 11045  132C  2B3E               	goto	l1141
 11046  132D  3001               	movlw	1
 11047  132E  07F1               	addwf	___fladd@b,f
 11048  132F  3000               	movlw	0
 11049  1330  3DF2               	addwfc	___fladd@b+1,f
 11050  1331  3000               	movlw	0
 11051  1332  3DF3               	addwfc	___fladd@b+2,f
 11052  1333  3000               	movlw	0
 11053  1334  3DF4               	addwfc	___fladd@b+3,f
 11054  1335  2B3E               	goto	l1141
 11055  1336                     l6753:	
 11056  1336  0875               	movf	___fladd@a,w
 11057  1337  02F1               	subwf	___fladd@b,f
 11058  1338  0876               	movf	___fladd@a+1,w
 11059  1339  3BF2               	subwfb	___fladd@b+1,f
 11060  133A  0877               	movf	___fladd@a+2,w
 11061  133B  3BF3               	subwfb	___fladd@b+2,f
 11062  133C  0878               	movf	___fladd@a+3,w
 11063  133D  3BF4               	subwfb	___fladd@b+3,f
 11064  133E                     l1141:	
 11065  133E  0874               	movf	___fladd@b+3,w
 11066  133F  0473               	iorwf	___fladd@b+2,w
 11067  1340  0472               	iorwf	___fladd@b+1,w
 11068  1341  0471               	iorwf	___fladd@b,w
 11069  1342  1D03               	skipz
 11070  1343  2B64               	goto	l6775
 11071  1344  082B               	movf	___fladd@grs,w
 11072  1345  1D03               	btfss	3,2
 11073  1346  2B64               	goto	l6775
 11074  1347  3000               	movlw	0
 11075  1348  00F4               	movwf	?___fladd+3
 11076  1349  3000               	movlw	0
 11077  134A  00F3               	movwf	?___fladd+2
 11078  134B  3000               	movlw	0
 11079  134C  00F2               	movwf	?___fladd+1
 11080  134D  3000               	movlw	0
 11081  134E  00F1               	movwf	?___fladd
 11082  134F  0008               	return
 11083  1350                     l6761:	
 11084  1350  3001               	movlw	1
 11085  1351                     u9615:	
 11086  1351  35F1               	lslf	___fladd@b,f
 11087  1352  0DF2               	rlf	___fladd@b+1,f
 11088  1353  0DF3               	rlf	___fladd@b+2,f
 11089  1354  0DF4               	rlf	___fladd@b+3,f
 11090  1355  0B89               	decfsz	9,f
 11091  1356  2B51               	goto	u9615
 11092  1357  1BAB               	btfsc	___fladd@grs,7
 11093  1358  1471               	bsf	___fladd@b,0
 11094  1359  1C2B               	btfss	___fladd@grs,0
 11095  135A  2B5D               	goto	l6769
 11096  135B  1403               	setc
 11097  135C  2B5E               	goto	L11
 11098  135D                     l6769:	
 11099  135D  1003               	clrc
 11100  135E                     L11:	
 11101  135E  0DAB               	rlf	___fladd@grs,f
 11102  135F  082A               	movf	___fladd@bexp,w
 11103  1360  1903               	btfsc	3,2
 11104  1361  2B64               	goto	l6775
 11105  1362  3001               	movlw	1
 11106  1363  02AA               	subwf	___fladd@bexp,f
 11107  1364                     l6775:	
 11108  1364  1FF3               	btfss	___fladd@b+2,7
 11109  1365  2B50               	goto	l6761
 11110  1366                     l6777:	
 11111  1366  01A9               	clrf	___fladd@aexp
 11112  1367  1FAB               	btfss	___fladd@grs,7
 11113  1368  2B71               	goto	l6787
 11114  1369  082B               	movf	___fladd@grs,w
 11115  136A  397F               	andlw	127
 11116  136B  1903               	btfsc	3,2
 11117  136C  1871               	btfsc	___fladd@b,0
 11118  136D  2B6F               	goto	l6783
 11119  136E  2B71               	goto	l6787
 11120  136F                     l6783:	
 11121  136F  01A9               	clrf	___fladd@aexp
 11122  1370  0AA9               	incf	___fladd@aexp,f
 11123  1371                     l6787:	
 11124  1371  0829               	movf	___fladd@aexp,w
 11125  1372  1903               	btfsc	3,2
 11126  1373  2B9D               	goto	l1154
 11127  1374  3001               	movlw	1
 11128  1375  07F1               	addwf	___fladd@b,f
 11129  1376  3000               	movlw	0
 11130  1377  3DF2               	addwfc	___fladd@b+1,f
 11131  1378  3000               	movlw	0
 11132  1379  3DF3               	addwfc	___fladd@b+2,f
 11133  137A  3000               	movlw	0
 11134  137B  3DF4               	addwfc	___fladd@b+3,f
 11135  137C  1C74               	btfss	___fladd@b+3,0
 11136  137D  2B9D               	goto	l1154
 11137  137E  0871               	movf	___fladd@b,w
 11138  137F  00A0               	movwf	??___fladd
 11139  1380  0872               	movf	___fladd@b+1,w
 11140  1381  00A1               	movwf	??___fladd+1
 11141  1382  0873               	movf	___fladd@b+2,w
 11142  1383  00A2               	movwf	??___fladd+2
 11143  1384  0874               	movf	___fladd@b+3,w
 11144  1385  00A3               	movwf	??___fladd+3
 11145  1386  3001               	movlw	1
 11146  1387  00A4               	movwf	??___fladd+4
 11147  1388                     u9715:	
 11148  1388  37A3               	asrf	??___fladd+3,f
 11149  1389  0CA2               	rrf	??___fladd+2,f
 11150  138A  0CA1               	rrf	??___fladd+1,f
 11151  138B  0CA0               	rrf	??___fladd,f
 11152  138C  0BA4               	decfsz	??___fladd+4,f
 11153  138D  2B88               	goto	u9715
 11154  138E  0823               	movf	??___fladd+3,w
 11155  138F  00F4               	movwf	___fladd@b+3
 11156  1390  0822               	movf	??___fladd+2,w
 11157  1391  00F3               	movwf	___fladd@b+2
 11158  1392  0821               	movf	??___fladd+1,w
 11159  1393  00F2               	movwf	___fladd@b+1
 11160  1394  0820               	movf	??___fladd,w
 11161  1395  00F1               	movwf	___fladd@b
 11162  1396  0A2A               	incf	___fladd@bexp,w
 11163  1397  1903               	btfsc	3,2
 11164  1398  2B9D               	goto	l1154
 11165  1399  3001               	movlw	1
 11166  139A  00A0               	movwf	??___fladd
 11167  139B  0820               	movf	??___fladd,w
 11168  139C  07AA               	addwf	___fladd@bexp,f
 11169  139D                     l1154:	
 11170  139D  0A2A               	incf	___fladd@bexp,w
 11171  139E  1D03               	btfss	3,2
 11172  139F  082A               	movf	___fladd@bexp,w
 11173  13A0  1D03               	btfss	3,2
 11174  13A1  2BAD               	goto	l6805
 11175  13A2  3000               	movlw	0
 11176  13A3  00F4               	movwf	___fladd@b+3
 11177  13A4  3000               	movlw	0
 11178  13A5  00F3               	movwf	___fladd@b+2
 11179  13A6  3000               	movlw	0
 11180  13A7  00F2               	movwf	___fladd@b+1
 11181  13A8  3000               	movlw	0
 11182  13A9  00F1               	movwf	___fladd@b
 11183  13AA  082A               	movf	___fladd@bexp,w
 11184  13AB  1903               	btfsc	3,2
 11185  13AC  01A8               	clrf	___fladd@signs
 11186  13AD                     l6805:	
 11187  13AD  1C2A               	btfss	___fladd@bexp,0
 11188  13AE  2BB1               	goto	l6809
 11189  13AF  17F3               	bsf	___fladd@b+2,7
 11190  13B0  2BB5               	goto	l1162
 11191  13B1                     l6809:	
 11192  13B1  307F               	movlw	127
 11193  13B2  00A0               	movwf	??___fladd
 11194  13B3  0820               	movf	??___fladd,w
 11195  13B4  05F3               	andwf	___fladd@b+2,f
 11196  13B5                     l1162:	
 11197  13B5  362A               	lsrf	___fladd@bexp,w
 11198  13B6  00A0               	movwf	??___fladd
 11199  13B7  0820               	movf	??___fladd,w
 11200  13B8  00F4               	movwf	___fladd@b+3
 11201  13B9  1FA8               	btfss	___fladd@signs,7
 11202  13BA  0008               	return
 11203  13BB  17F4               	bsf	___fladd@b+3,7
 11204  13BC  0008               	return
 11205  13BD                     __end_of___fladd:	
 11206                           
 11207                           	psect	text24
 11208  36D0                     __ptext24:	
 11209 ;; *************** function ___flneg *****************
 11210 ;; Defined at:
 11211 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
 11212 ;; Parameters:    Size  Location     Type
 11213 ;;  f1              4    1[COMMON] unsigned char 
 11214 ;; Auto vars:     Size  Location     Type
 11215 ;;		None
 11216 ;; Return value:  Size  Location     Type
 11217 ;;                  4    1[COMMON] unsigned char 
 11218 ;; Registers used:
 11219 ;;		wreg
 11220 ;; Tracked objects:
 11221 ;;		On entry : 0/0
 11222 ;;		On exit  : 0/0
 11223 ;;		Unchanged: 0/0
 11224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11225 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11228 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11229 ;;Total ram usage:        4 bytes
 11230 ;; Hardware stack levels used:    1
 11231 ;; Hardware stack levels required when called:    1
 11232 ;; This function calls:
 11233 ;;		Nothing
 11234 ;; This function is called by:
 11235 ;;		_efgtoa
 11236 ;; This function uses a non-reentrant model
 11237 ;;
 11238                           
 11239                           
 11240                           ;psect for function ___flneg
 11241  36D0                     ___flneg:	
 11242                           
 11243                           ;incstack = 0
 11244                           ; Regs used in ___flneg: [wreg]
 11245  36D0  0874               	movf	___flneg@f1+3,w
 11246  36D1  0473               	iorwf	___flneg@f1+2,w
 11247  36D2  0472               	iorwf	___flneg@f1+1,w
 11248  36D3  0471               	iorwf	___flneg@f1,w
 11249  36D4  1903               	skipnz
 11250  36D5  0008               	return
 11251  36D6  3080               	movlw	128
 11252  36D7  06F4               	xorwf	___flneg@f1+3,f
 11253  36D8  0008               	return
 11254  36D9                     __end_of___flneg:	
 11255                           
 11256                           	psect	text25
 11257  2CF0                     __ptext25:	
 11258 ;; *************** function ___flge *****************
 11259 ;; Defined at:
 11260 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
 11261 ;; Parameters:    Size  Location     Type
 11262 ;;  ff1             4   32[BANK0 ] unsigned char 
 11263 ;;  ff2             4   36[BANK0 ] unsigned char 
 11264 ;; Auto vars:     Size  Location     Type
 11265 ;;		None
 11266 ;; Return value:  Size  Location     Type
 11267 ;;		None               void
 11268 ;; Registers used:
 11269 ;;		wreg, status,2, status,0
 11270 ;; Tracked objects:
 11271 ;;		On entry : 0/0
 11272 ;;		On exit  : 0/0
 11273 ;;		Unchanged: 0/0
 11274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11275 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11277 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11278 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11279 ;;Total ram usage:       12 bytes
 11280 ;; Hardware stack levels used:    1
 11281 ;; Hardware stack levels required when called:    1
 11282 ;; This function calls:
 11283 ;;		Nothing
 11284 ;; This function is called by:
 11285 ;;		_efgtoa
 11286 ;; This function uses a non-reentrant model
 11287 ;;
 11288                           
 11289                           
 11290                           ;psect for function ___flge
 11291  2CF0                     ___flge:	
 11292                           
 11293                           ;incstack = 0
 11294                           ; Regs used in ___flge: [wreg+status,2+status,0]
 11295  2CF0  3000               	movlw	0
 11296  2CF1  0020               	movlb	0	; select bank0
 11297  2CF2  0540               	andwf	___flge@ff1,w
 11298  2CF3  00C8               	movwf	??___flge
 11299  2CF4  3000               	movlw	0
 11300  2CF5  0541               	andwf	___flge@ff1+1,w
 11301  2CF6  00C9               	movwf	??___flge+1
 11302  2CF7  3080               	movlw	128
 11303  2CF8  0542               	andwf	___flge@ff1+2,w
 11304  2CF9  00CA               	movwf	??___flge+2
 11305  2CFA  307F               	movlw	127
 11306  2CFB  0543               	andwf	___flge@ff1+3,w
 11307  2CFC  00CB               	movwf	??___flge+3
 11308  2CFD  084B               	movf	??___flge+3,w
 11309  2CFE  044A               	iorwf	??___flge+2,w
 11310  2CFF  0449               	iorwf	??___flge+1,w
 11311  2D00  0448               	iorwf	??___flge,w
 11312  2D01  1D03               	skipz
 11313  2D02  2D0B               	goto	l997
 11314  2D03  3000               	movlw	0
 11315  2D04  00C3               	movwf	___flge@ff1+3
 11316  2D05  3000               	movlw	0
 11317  2D06  00C2               	movwf	___flge@ff1+2
 11318  2D07  3000               	movlw	0
 11319  2D08  00C1               	movwf	___flge@ff1+1
 11320  2D09  3000               	movlw	0
 11321  2D0A  00C0               	movwf	___flge@ff1
 11322  2D0B                     l997:	
 11323  2D0B  3000               	movlw	0
 11324  2D0C  0544               	andwf	___flge@ff2,w
 11325  2D0D  00C8               	movwf	??___flge
 11326  2D0E  3000               	movlw	0
 11327  2D0F  0545               	andwf	___flge@ff2+1,w
 11328  2D10  00C9               	movwf	??___flge+1
 11329  2D11  3080               	movlw	128
 11330  2D12  0546               	andwf	___flge@ff2+2,w
 11331  2D13  00CA               	movwf	??___flge+2
 11332  2D14  307F               	movlw	127
 11333  2D15  0547               	andwf	___flge@ff2+3,w
 11334  2D16  00CB               	movwf	??___flge+3
 11335  2D17  084B               	movf	??___flge+3,w
 11336  2D18  044A               	iorwf	??___flge+2,w
 11337  2D19  0449               	iorwf	??___flge+1,w
 11338  2D1A  0448               	iorwf	??___flge,w
 11339  2D1B  1D03               	skipz
 11340  2D1C  2D25               	goto	l4621
 11341  2D1D  3000               	movlw	0
 11342  2D1E  00C7               	movwf	___flge@ff2+3
 11343  2D1F  3000               	movlw	0
 11344  2D20  00C6               	movwf	___flge@ff2+2
 11345  2D21  3000               	movlw	0
 11346  2D22  00C5               	movwf	___flge@ff2+1
 11347  2D23  3000               	movlw	0
 11348  2D24  00C4               	movwf	___flge@ff2
 11349  2D25                     l4621:	
 11350  2D25  1FC3               	btfss	___flge@ff1+3,7
 11351  2D26  2D3F               	goto	l4625
 11352  2D27  3000               	movlw	0
 11353  2D28  00C8               	movwf	??___flge
 11354  2D29  3000               	movlw	0
 11355  2D2A  00C9               	movwf	??___flge+1
 11356  2D2B  3000               	movlw	0
 11357  2D2C  00CA               	movwf	??___flge+2
 11358  2D2D  3080               	movlw	128
 11359  2D2E  00CB               	movwf	??___flge+3
 11360  2D2F  0840               	movf	___flge@ff1,w
 11361  2D30  02C8               	subwf	??___flge,f
 11362  2D31  0841               	movf	___flge@ff1+1,w
 11363  2D32  3BC9               	subwfb	??___flge+1,f
 11364  2D33  0842               	movf	___flge@ff1+2,w
 11365  2D34  3BCA               	subwfb	??___flge+2,f
 11366  2D35  0843               	movf	___flge@ff1+3,w
 11367  2D36  3BCB               	subwfb	??___flge+3,f
 11368  2D37  084B               	movf	??___flge+3,w
 11369  2D38  00C3               	movwf	___flge@ff1+3
 11370  2D39  084A               	movf	??___flge+2,w
 11371  2D3A  00C2               	movwf	___flge@ff1+2
 11372  2D3B  0849               	movf	??___flge+1,w
 11373  2D3C  00C1               	movwf	___flge@ff1+1
 11374  2D3D  0848               	movf	??___flge,w
 11375  2D3E  00C0               	movwf	___flge@ff1
 11376  2D3F                     l4625:	
 11377  2D3F  1FC7               	btfss	___flge@ff2+3,7
 11378  2D40  2D59               	goto	l1000
 11379  2D41  3000               	movlw	0
 11380  2D42  00C8               	movwf	??___flge
 11381  2D43  3000               	movlw	0
 11382  2D44  00C9               	movwf	??___flge+1
 11383  2D45  3000               	movlw	0
 11384  2D46  00CA               	movwf	??___flge+2
 11385  2D47  3080               	movlw	128
 11386  2D48  00CB               	movwf	??___flge+3
 11387  2D49  0844               	movf	___flge@ff2,w
 11388  2D4A  02C8               	subwf	??___flge,f
 11389  2D4B  0845               	movf	___flge@ff2+1,w
 11390  2D4C  3BC9               	subwfb	??___flge+1,f
 11391  2D4D  0846               	movf	___flge@ff2+2,w
 11392  2D4E  3BCA               	subwfb	??___flge+2,f
 11393  2D4F  0847               	movf	___flge@ff2+3,w
 11394  2D50  3BCB               	subwfb	??___flge+3,f
 11395  2D51  084B               	movf	??___flge+3,w
 11396  2D52  00C7               	movwf	___flge@ff2+3
 11397  2D53  084A               	movf	??___flge+2,w
 11398  2D54  00C6               	movwf	___flge@ff2+2
 11399  2D55  0849               	movf	??___flge+1,w
 11400  2D56  00C5               	movwf	___flge@ff2+1
 11401  2D57  0848               	movf	??___flge,w
 11402  2D58  00C4               	movwf	___flge@ff2
 11403  2D59                     l1000:	
 11404  2D59  3080               	movlw	128
 11405  2D5A  06C3               	xorwf	___flge@ff1+3,f
 11406  2D5B  3080               	movlw	128
 11407  2D5C  06C7               	xorwf	___flge@ff2+3,f
 11408  2D5D  0847               	movf	___flge@ff2+3,w
 11409  2D5E  0243               	subwf	___flge@ff1+3,w
 11410  2D5F  1D03               	skipz
 11411  2D60  0008               	return
 11412  2D61  0846               	movf	___flge@ff2+2,w
 11413  2D62  0242               	subwf	___flge@ff1+2,w
 11414  2D63  1D03               	skipz
 11415  2D64  0008               	return
 11416  2D65  0845               	movf	___flge@ff2+1,w
 11417  2D66  0241               	subwf	___flge@ff1+1,w
 11418  2D67  1D03               	skipz
 11419  2D68  0008               	return
 11420  2D69  0844               	movf	___flge@ff2,w
 11421  2D6A  0240               	subwf	___flge@ff1,w
 11422  2D6B  0008               	return
 11423  2D6C                     __end_of___flge:	
 11424                           
 11425                           	psect	text26
 11426  2ABE                     __ptext26:	
 11427 ;; *************** function ___fleq *****************
 11428 ;; Defined at:
 11429 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fleq.c"
 11430 ;; Parameters:    Size  Location     Type
 11431 ;;  ff1             4    1[COMMON] unsigned char 
 11432 ;;  ff2             4    5[COMMON] unsigned char 
 11433 ;; Auto vars:     Size  Location     Type
 11434 ;;		None
 11435 ;; Return value:  Size  Location     Type
 11436 ;;		None               void
 11437 ;; Registers used:
 11438 ;;		wreg, status,2, status,0
 11439 ;; Tracked objects:
 11440 ;;		On entry : 0/0
 11441 ;;		On exit  : 0/0
 11442 ;;		Unchanged: 0/0
 11443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11444 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11446 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11447 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11448 ;;Total ram usage:       12 bytes
 11449 ;; Hardware stack levels used:    1
 11450 ;; Hardware stack levels required when called:    1
 11451 ;; This function calls:
 11452 ;;		Nothing
 11453 ;; This function is called by:
 11454 ;;		_efgtoa
 11455 ;; This function uses a non-reentrant model
 11456 ;;
 11457                           
 11458                           
 11459                           ;psect for function ___fleq
 11460  2ABE                     ___fleq:	
 11461                           
 11462                           ;incstack = 0
 11463                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 11464  2ABE  3000               	movlw	0
 11465  2ABF  0571               	andwf	___fleq@ff1,w
 11466  2AC0  0020               	movlb	0	; select bank0
 11467  2AC1  00A0               	movwf	??___fleq
 11468  2AC2  3000               	movlw	0
 11469  2AC3  0572               	andwf	___fleq@ff1+1,w
 11470  2AC4  00A1               	movwf	??___fleq+1
 11471  2AC5  3080               	movlw	128
 11472  2AC6  0573               	andwf	___fleq@ff1+2,w
 11473  2AC7  00A2               	movwf	??___fleq+2
 11474  2AC8  307F               	movlw	127
 11475  2AC9  0574               	andwf	___fleq@ff1+3,w
 11476  2ACA  00A3               	movwf	??___fleq+3
 11477  2ACB  0823               	movf	??___fleq+3,w
 11478  2ACC  0422               	iorwf	??___fleq+2,w
 11479  2ACD  0421               	iorwf	??___fleq+1,w
 11480  2ACE  0420               	iorwf	??___fleq,w
 11481  2ACF  1D03               	skipz
 11482  2AD0  2AD9               	goto	l988
 11483  2AD1  3000               	movlw	0
 11484  2AD2  00F4               	movwf	___fleq@ff1+3
 11485  2AD3  3000               	movlw	0
 11486  2AD4  00F3               	movwf	___fleq@ff1+2
 11487  2AD5  3000               	movlw	0
 11488  2AD6  00F2               	movwf	___fleq@ff1+1
 11489  2AD7  3000               	movlw	0
 11490  2AD8  00F1               	movwf	___fleq@ff1
 11491  2AD9                     l988:	
 11492  2AD9  3000               	movlw	0
 11493  2ADA  0575               	andwf	___fleq@ff2,w
 11494  2ADB  00A0               	movwf	??___fleq
 11495  2ADC  3000               	movlw	0
 11496  2ADD  0576               	andwf	___fleq@ff2+1,w
 11497  2ADE  00A1               	movwf	??___fleq+1
 11498  2ADF  3080               	movlw	128
 11499  2AE0  0577               	andwf	___fleq@ff2+2,w
 11500  2AE1  00A2               	movwf	??___fleq+2
 11501  2AE2  307F               	movlw	127
 11502  2AE3  0578               	andwf	___fleq@ff2+3,w
 11503  2AE4  00A3               	movwf	??___fleq+3
 11504  2AE5  0823               	movf	??___fleq+3,w
 11505  2AE6  0422               	iorwf	??___fleq+2,w
 11506  2AE7  0421               	iorwf	??___fleq+1,w
 11507  2AE8  0420               	iorwf	??___fleq,w
 11508  2AE9  1D03               	skipz
 11509  2AEA  2AF3               	goto	l989
 11510  2AEB  3000               	movlw	0
 11511  2AEC  00F8               	movwf	___fleq@ff2+3
 11512  2AED  3000               	movlw	0
 11513  2AEE  00F7               	movwf	___fleq@ff2+2
 11514  2AEF  3000               	movlw	0
 11515  2AF0  00F6               	movwf	___fleq@ff2+1
 11516  2AF1  3000               	movlw	0
 11517  2AF2  00F5               	movwf	___fleq@ff2
 11518  2AF3                     l989:	
 11519  2AF3  0878               	movf	___fleq@ff2+3,w
 11520  2AF4  0674               	xorwf	___fleq@ff1+3,w
 11521  2AF5  1D03               	skipz
 11522  2AF6  2B01               	goto	u9925
 11523  2AF7  0877               	movf	___fleq@ff2+2,w
 11524  2AF8  0673               	xorwf	___fleq@ff1+2,w
 11525  2AF9  1D03               	skipz
 11526  2AFA  2B01               	goto	u9925
 11527  2AFB  0876               	movf	___fleq@ff2+1,w
 11528  2AFC  0672               	xorwf	___fleq@ff1+1,w
 11529  2AFD  1D03               	skipz
 11530  2AFE  2B01               	goto	u9925
 11531  2AFF  0875               	movf	___fleq@ff2,w
 11532  2B00  0671               	xorwf	___fleq@ff1,w
 11533  2B01                     u9925:	
 11534  2B01  1903               	skipnz
 11535  2B02  2B05               	goto	l6869
 11536  2B03  1003               	clrc
 11537  2B04  0008               	return
 11538  2B05                     l6869:	
 11539  2B05  1403               	setc
 11540  2B06  0008               	return
 11541  2B07                     __end_of___fleq:	
 11542                           
 11543                           	psect	text27
 11544  2A79                     __ptext27:	
 11545 ;; *************** function ___awmod *****************
 11546 ;; Defined at:
 11547 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
 11548 ;; Parameters:    Size  Location     Type
 11549 ;;  divisor         2    1[COMMON] int 
 11550 ;;  dividend        2    3[COMMON] int 
 11551 ;; Auto vars:     Size  Location     Type
 11552 ;;  sign            1    7[COMMON] unsigned char 
 11553 ;;  counter         1    6[COMMON] unsigned char 
 11554 ;; Return value:  Size  Location     Type
 11555 ;;                  2    1[COMMON] int 
 11556 ;; Registers used:
 11557 ;;		wreg, status,2, status,0
 11558 ;; Tracked objects:
 11559 ;;		On entry : 0/0
 11560 ;;		On exit  : 0/0
 11561 ;;		Unchanged: 0/0
 11562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11563 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11564 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11565 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11566 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11567 ;;Total ram usage:        7 bytes
 11568 ;; Hardware stack levels used:    1
 11569 ;; Hardware stack levels required when called:    1
 11570 ;; This function calls:
 11571 ;;		Nothing
 11572 ;; This function is called by:
 11573 ;;		_efgtoa
 11574 ;; This function uses a non-reentrant model
 11575 ;;
 11576                           
 11577                           
 11578                           ;psect for function ___awmod
 11579  2A79                     ___awmod:	
 11580                           
 11581                           ;incstack = 0
 11582                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 11583  2A79  01F7               	clrf	___awmod@sign
 11584  2A7A  1FF4               	btfss	___awmod@dividend+1,7
 11585  2A7B  2A83               	goto	l4573
 11586  2A7C  09F3               	comf	___awmod@dividend,f
 11587  2A7D  09F4               	comf	___awmod@dividend+1,f
 11588  2A7E  0AF3               	incf	___awmod@dividend,f
 11589  2A7F  1903               	skipnz
 11590  2A80  0AF4               	incf	___awmod@dividend+1,f
 11591  2A81  01F7               	clrf	___awmod@sign
 11592  2A82  0AF7               	incf	___awmod@sign,f
 11593  2A83                     l4573:	
 11594  2A83  1FF2               	btfss	___awmod@divisor+1,7
 11595  2A84  2A8A               	goto	l4577
 11596  2A85  09F1               	comf	___awmod@divisor,f
 11597  2A86  09F2               	comf	___awmod@divisor+1,f
 11598  2A87  0AF1               	incf	___awmod@divisor,f
 11599  2A88  1903               	skipnz
 11600  2A89  0AF2               	incf	___awmod@divisor+1,f
 11601  2A8A                     l4577:	
 11602  2A8A  0871               	movf	___awmod@divisor,w
 11603  2A8B  0472               	iorwf	___awmod@divisor+1,w
 11604  2A8C  1903               	btfsc	3,2
 11605  2A8D  2AB1               	goto	l4595
 11606  2A8E  01F6               	clrf	___awmod@counter
 11607  2A8F  0AF6               	incf	___awmod@counter,f
 11608  2A90                     l4585:	
 11609  2A90  1BF2               	btfsc	___awmod@divisor+1,7
 11610  2A91  2A9C               	goto	l4587
 11611  2A92  3001               	movlw	1
 11612  2A93                     u5985:	
 11613  2A93  35F1               	lslf	___awmod@divisor,f
 11614  2A94  0DF2               	rlf	___awmod@divisor+1,f
 11615  2A95  0B89               	decfsz	9,f
 11616  2A96  2A93               	goto	u5985
 11617  2A97  3001               	movlw	1
 11618  2A98  00F5               	movwf	??___awmod
 11619  2A99  0875               	movf	??___awmod,w
 11620  2A9A  07F6               	addwf	___awmod@counter,f
 11621  2A9B  2A90               	goto	l4585
 11622  2A9C                     l4587:	
 11623  2A9C  0872               	movf	___awmod@divisor+1,w
 11624  2A9D  0274               	subwf	___awmod@dividend+1,w
 11625  2A9E  1D03               	skipz
 11626  2A9F  2AA2               	goto	u6005
 11627  2AA0  0871               	movf	___awmod@divisor,w
 11628  2AA1  0273               	subwf	___awmod@dividend,w
 11629  2AA2                     u6005:	
 11630  2AA2  1C03               	skipc
 11631  2AA3  2AA8               	goto	l4591
 11632  2AA4  0871               	movf	___awmod@divisor,w
 11633  2AA5  02F3               	subwf	___awmod@dividend,f
 11634  2AA6  0872               	movf	___awmod@divisor+1,w
 11635  2AA7  3BF4               	subwfb	___awmod@dividend+1,f
 11636  2AA8                     l4591:	
 11637  2AA8  3001               	movlw	1
 11638  2AA9                     u6015:	
 11639  2AA9  36F2               	lsrf	___awmod@divisor+1,f
 11640  2AAA  0CF1               	rrf	___awmod@divisor,f
 11641  2AAB  0B89               	decfsz	9,f
 11642  2AAC  2AA9               	goto	u6015
 11643  2AAD  3001               	movlw	1
 11644  2AAE  02F6               	subwf	___awmod@counter,f
 11645  2AAF  1D03               	btfss	3,2
 11646  2AB0  2A9C               	goto	l4587
 11647  2AB1                     l4595:	
 11648  2AB1  0877               	movf	___awmod@sign,w
 11649  2AB2  1903               	btfsc	3,2
 11650  2AB3  2AB9               	goto	l4599
 11651  2AB4  09F3               	comf	___awmod@dividend,f
 11652  2AB5  09F4               	comf	___awmod@dividend+1,f
 11653  2AB6  0AF3               	incf	___awmod@dividend,f
 11654  2AB7  1903               	skipnz
 11655  2AB8  0AF4               	incf	___awmod@dividend+1,f
 11656  2AB9                     l4599:	
 11657  2AB9  0874               	movf	___awmod@dividend+1,w
 11658  2ABA  00F2               	movwf	?___awmod+1
 11659  2ABB  0873               	movf	___awmod@dividend,w
 11660  2ABC  00F1               	movwf	?___awmod
 11661  2ABD  0008               	return
 11662  2ABE                     __end_of___awmod:	
 11663                           
 11664                           	psect	text28
 11665  2B58                     __ptext28:	
 11666 ;; *************** function ___awdiv *****************
 11667 ;; Defined at:
 11668 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 11669 ;; Parameters:    Size  Location     Type
 11670 ;;  divisor         2    1[COMMON] int 
 11671 ;;  dividend        2    3[COMMON] int 
 11672 ;; Auto vars:     Size  Location     Type
 11673 ;;  quotient        2    8[COMMON] int 
 11674 ;;  sign            1    7[COMMON] unsigned char 
 11675 ;;  counter         1    6[COMMON] unsigned char 
 11676 ;; Return value:  Size  Location     Type
 11677 ;;                  2    1[COMMON] int 
 11678 ;; Registers used:
 11679 ;;		wreg, status,2, status,0
 11680 ;; Tracked objects:
 11681 ;;		On entry : 0/0
 11682 ;;		On exit  : 0/0
 11683 ;;		Unchanged: 0/0
 11684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11685 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11686 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11687 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11688 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11689 ;;Total ram usage:        9 bytes
 11690 ;; Hardware stack levels used:    1
 11691 ;; Hardware stack levels required when called:    1
 11692 ;; This function calls:
 11693 ;;		Nothing
 11694 ;; This function is called by:
 11695 ;;		_efgtoa
 11696 ;; This function uses a non-reentrant model
 11697 ;;
 11698                           
 11699                           
 11700                           ;psect for function ___awdiv
 11701  2B58                     ___awdiv:	
 11702                           
 11703                           ;incstack = 0
 11704                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11705  2B58  01F7               	clrf	___awdiv@sign
 11706  2B59  1FF2               	btfss	___awdiv@divisor+1,7
 11707  2B5A  2B62               	goto	l4529
 11708  2B5B  09F1               	comf	___awdiv@divisor,f
 11709  2B5C  09F2               	comf	___awdiv@divisor+1,f
 11710  2B5D  0AF1               	incf	___awdiv@divisor,f
 11711  2B5E  1903               	skipnz
 11712  2B5F  0AF2               	incf	___awdiv@divisor+1,f
 11713  2B60  01F7               	clrf	___awdiv@sign
 11714  2B61  0AF7               	incf	___awdiv@sign,f
 11715  2B62                     l4529:	
 11716  2B62  1FF4               	btfss	___awdiv@dividend+1,7
 11717  2B63  2B6D               	goto	l4535
 11718  2B64  09F3               	comf	___awdiv@dividend,f
 11719  2B65  09F4               	comf	___awdiv@dividend+1,f
 11720  2B66  0AF3               	incf	___awdiv@dividend,f
 11721  2B67  1903               	skipnz
 11722  2B68  0AF4               	incf	___awdiv@dividend+1,f
 11723  2B69  3001               	movlw	1
 11724  2B6A  00F5               	movwf	??___awdiv
 11725  2B6B  0875               	movf	??___awdiv,w
 11726  2B6C  06F7               	xorwf	___awdiv@sign,f
 11727  2B6D                     l4535:	
 11728  2B6D  01F8               	clrf	___awdiv@quotient
 11729  2B6E  01F9               	clrf	___awdiv@quotient+1
 11730  2B6F  0871               	movf	___awdiv@divisor,w
 11731  2B70  0472               	iorwf	___awdiv@divisor+1,w
 11732  2B71  1903               	btfsc	3,2
 11733  2B72  2B9C               	goto	l4557
 11734  2B73  01F6               	clrf	___awdiv@counter
 11735  2B74  0AF6               	incf	___awdiv@counter,f
 11736  2B75                     l4545:	
 11737  2B75  1BF2               	btfsc	___awdiv@divisor+1,7
 11738  2B76  2B81               	goto	l4547
 11739  2B77  3001               	movlw	1
 11740  2B78                     u5885:	
 11741  2B78  35F1               	lslf	___awdiv@divisor,f
 11742  2B79  0DF2               	rlf	___awdiv@divisor+1,f
 11743  2B7A  0B89               	decfsz	9,f
 11744  2B7B  2B78               	goto	u5885
 11745  2B7C  3001               	movlw	1
 11746  2B7D  00F5               	movwf	??___awdiv
 11747  2B7E  0875               	movf	??___awdiv,w
 11748  2B7F  07F6               	addwf	___awdiv@counter,f
 11749  2B80  2B75               	goto	l4545
 11750  2B81                     l4547:	
 11751  2B81  3001               	movlw	1
 11752  2B82                     u5905:	
 11753  2B82  35F8               	lslf	___awdiv@quotient,f
 11754  2B83  0DF9               	rlf	___awdiv@quotient+1,f
 11755  2B84  0B89               	decfsz	9,f
 11756  2B85  2B82               	goto	u5905
 11757  2B86  0872               	movf	___awdiv@divisor+1,w
 11758  2B87  0274               	subwf	___awdiv@dividend+1,w
 11759  2B88  1D03               	skipz
 11760  2B89  2B8C               	goto	u5915
 11761  2B8A  0871               	movf	___awdiv@divisor,w
 11762  2B8B  0273               	subwf	___awdiv@dividend,w
 11763  2B8C                     u5915:	
 11764  2B8C  1C03               	skipc
 11765  2B8D  2B93               	goto	l4553
 11766  2B8E  0871               	movf	___awdiv@divisor,w
 11767  2B8F  02F3               	subwf	___awdiv@dividend,f
 11768  2B90  0872               	movf	___awdiv@divisor+1,w
 11769  2B91  3BF4               	subwfb	___awdiv@dividend+1,f
 11770  2B92  1478               	bsf	___awdiv@quotient,0
 11771  2B93                     l4553:	
 11772  2B93  3001               	movlw	1
 11773  2B94                     u5925:	
 11774  2B94  36F2               	lsrf	___awdiv@divisor+1,f
 11775  2B95  0CF1               	rrf	___awdiv@divisor,f
 11776  2B96  0B89               	decfsz	9,f
 11777  2B97  2B94               	goto	u5925
 11778  2B98  3001               	movlw	1
 11779  2B99  02F6               	subwf	___awdiv@counter,f
 11780  2B9A  1D03               	btfss	3,2
 11781  2B9B  2B81               	goto	l4547
 11782  2B9C                     l4557:	
 11783  2B9C  0877               	movf	___awdiv@sign,w
 11784  2B9D  1903               	btfsc	3,2
 11785  2B9E  2BA4               	goto	l4561
 11786  2B9F  09F8               	comf	___awdiv@quotient,f
 11787  2BA0  09F9               	comf	___awdiv@quotient+1,f
 11788  2BA1  0AF8               	incf	___awdiv@quotient,f
 11789  2BA2  1903               	skipnz
 11790  2BA3  0AF9               	incf	___awdiv@quotient+1,f
 11791  2BA4                     l4561:	
 11792  2BA4  0879               	movf	___awdiv@quotient+1,w
 11793  2BA5  00F2               	movwf	?___awdiv+1
 11794  2BA6  0878               	movf	___awdiv@quotient,w
 11795  2BA7  00F1               	movwf	?___awdiv
 11796  2BA8  0008               	return
 11797  2BA9                     __end_of___awdiv:	
 11798                           
 11799                           	psect	text29
 11800  1D54                     __ptext29:	
 11801 ;; *************** function _dtoa *****************
 11802 ;; Defined at:
 11803 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 11804 ;; Parameters:    Size  Location     Type
 11805 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
 11806 ;;		 -> vsnprintf@f(6), 
 11807 ;;  d               8   18[BANK0 ] long long 
 11808 ;; Auto vars:     Size  Location     Type
 11809 ;;  n               8   37[BANK0 ] long long 
 11810 ;;  i               2   45[BANK0 ] int 
 11811 ;;  s               2   35[BANK0 ] int 
 11812 ;;  w               2   33[BANK0 ] int 
 11813 ;;  p               2   31[BANK0 ] int 
 11814 ;; Return value:  Size  Location     Type
 11815 ;;                  2   16[BANK0 ] int 
 11816 ;; Registers used:
 11817 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11818 ;; Tracked objects:
 11819 ;;		On entry : 0/0
 11820 ;;		On exit  : 0/0
 11821 ;;		Unchanged: 0/0
 11822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11823 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11824 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11825 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11826 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11827 ;;Total ram usage:       31 bytes
 11828 ;; Hardware stack levels used:    1
 11829 ;; Hardware stack levels required when called:    5
 11830 ;; This function calls:
 11831 ;;		___aodiv
 11832 ;;		___aomod
 11833 ;;		_abs
 11834 ;;		_pad
 11835 ;; This function is called by:
 11836 ;;		_vfpfcnvrt
 11837 ;; This function uses a non-reentrant model
 11838 ;;
 11839                           
 11840                           
 11841                           ;psect for function _dtoa
 11842  1D54                     _dtoa:	
 11843                           
 11844                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
 11845                           
 11846                           ;incstack = 0
 11847                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11848  1D54  0020               	movlb	0	; select bank0
 11849  1D55  0832               	movf	dtoa@d,w
 11850  1D56  00C5               	movwf	dtoa@n
 11851  1D57  0833               	movf	dtoa@d+1,w
 11852  1D58  00C6               	movwf	dtoa@n+1
 11853  1D59  0834               	movf	dtoa@d+2,w
 11854  1D5A  00C7               	movwf	dtoa@n+2
 11855  1D5B  0835               	movf	dtoa@d+3,w
 11856  1D5C  00C8               	movwf	dtoa@n+3
 11857  1D5D  0836               	movf	dtoa@d+4,w
 11858  1D5E  00C9               	movwf	dtoa@n+4
 11859  1D5F  0837               	movf	dtoa@d+5,w
 11860  1D60  00CA               	movwf	dtoa@n+5
 11861  1D61  0838               	movf	dtoa@d+6,w
 11862  1D62  00CB               	movwf	dtoa@n+6
 11863  1D63  0839               	movf	dtoa@d+7,w
 11864  1D64  00CC               	movwf	dtoa@n+7
 11865                           
 11866                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 11867  1D65  3045               	movlw	low dtoa@n
 11868  1D66  0086               	movwf	6
 11869  1D67  3000               	movlw	high dtoa@n
 11870  1D68  0087               	movwf	7
 11871  1D69  3F47               	moviw [7]fsr1
 11872  1D6A  00BA               	movwf	??_dtoa
 11873  1D6B  1FBA               	btfss	??_dtoa,7
 11874  1D6C  2D6F               	goto	u9940
 11875  1D6D  3001               	movlw	1
 11876  1D6E  2D70               	goto	u9950
 11877  1D6F                     u9940:	
 11878  1D6F  3000               	movlw	0
 11879  1D70                     u9950:	
 11880  1D70  0020               	movlb	0	; select bank0
 11881  1D71  00BB               	movwf	??_dtoa+1
 11882  1D72  01BC               	clrf	??_dtoa+2
 11883  1D73  083B               	movf	??_dtoa+1,w
 11884  1D74  00C3               	movwf	dtoa@s
 11885  1D75  083C               	movf	??_dtoa+2,w
 11886  1D76  00C4               	movwf	dtoa@s+1
 11887                           
 11888                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 11889  1D77  0843               	movf	dtoa@s,w
 11890  1D78  0444               	iorwf	dtoa@s+1,w
 11891  1D79  1903               	btfsc	3,2
 11892  1D7A  2D99               	goto	l516
 11893                           
 11894                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 11895  1D7B  09C5               	comf	dtoa@n,f
 11896  1D7C  09C6               	comf	dtoa@n+1,f
 11897  1D7D  09C7               	comf	dtoa@n+2,f
 11898  1D7E  09C8               	comf	dtoa@n+3,f
 11899  1D7F  09C9               	comf	dtoa@n+4,f
 11900  1D80  09CA               	comf	dtoa@n+5,f
 11901  1D81  09CB               	comf	dtoa@n+6,f
 11902  1D82  09CC               	comf	dtoa@n+7,f
 11903  1D83  0AC5               	incf	dtoa@n,f
 11904  1D84  1D03               	skipz
 11905  1D85  2D99               	goto	l516
 11906  1D86  0AC6               	incf	dtoa@n+1,f
 11907  1D87  1D03               	skipz
 11908  1D88  2D99               	goto	l516
 11909  1D89  0AC7               	incf	dtoa@n+2,f
 11910  1D8A  1D03               	skipz
 11911  1D8B  2D99               	goto	l516
 11912  1D8C  0AC8               	incf	dtoa@n+3,f
 11913  1D8D  1D03               	skipz
 11914  1D8E  2D99               	goto	l516
 11915  1D8F  0AC9               	incf	dtoa@n+4,f
 11916  1D90  1D03               	skipz
 11917  1D91  2D99               	goto	l516
 11918  1D92  0ACA               	incf	dtoa@n+5,f
 11919  1D93  1D03               	skipz
 11920  1D94  2D99               	goto	l516
 11921  1D95  0ACB               	incf	dtoa@n+6,f
 11922  1D96  1D03               	skipz
 11923  1D97  2D99               	goto	l516
 11924  1D98  0ACC               	incf	dtoa@n+7,f
 11925  1D99                     l516:	
 11926                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
 11927                           
 11928                           
 11929                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 11930  1D99  0023               	movlb	3	; select bank3
 11931  1D9A  1BC1               	btfsc	(_prec+1)^(0+384),7
 11932  1D9B  2DA0               	goto	l517
 11933                           
 11934                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 11935  1D9C  30FD               	movlw	253
 11936  1D9D  05C2               	andwf	_flags^(0+384),f
 11937  1D9E  30FF               	movlw	255
 11938  1D9F  05C3               	andwf	(_flags+1)^(0+384),f
 11939  1DA0                     l517:	
 11940                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
 11941                           
 11942                           
 11943                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 11944  1DA0  0841               	movf	(_prec+1)^(0+384),w
 11945  1DA1  3A80               	xorlw	128
 11946  1DA2  0020               	movlb	0	; select bank0
 11947  1DA3  00BA               	movwf	??_dtoa
 11948  1DA4  3080               	movlw	128
 11949  1DA5  023A               	subwf	??_dtoa,w
 11950  1DA6  1D03               	skipz
 11951  1DA7  2DAB               	goto	u9995
 11952  1DA8  3001               	movlw	1
 11953  1DA9  0023               	movlb	3	; select bank3
 11954  1DAA  0240               	subwf	_prec^(0+384),w
 11955  1DAB                     u9995:	
 11956  1DAB  1803               	skipnc
 11957  1DAC  2DB3               	goto	l6905
 11958  1DAD  3001               	movlw	1
 11959  1DAE  0020               	movlb	0	; select bank0
 11960  1DAF  00BF               	movwf	dtoa@p
 11961  1DB0  3000               	movlw	0
 11962  1DB1  00C0               	movwf	dtoa@p+1
 11963  1DB2  2DBB               	goto	l521
 11964  1DB3                     l6905:	
 11965  1DB3  0023               	movlb	3	; select bank3
 11966  1DB4  0841               	movf	(_prec+1)^(0+384),w
 11967  1DB5  0020               	movlb	0	; select bank0
 11968  1DB6  00C0               	movwf	dtoa@p+1
 11969  1DB7  0023               	movlb	3	; select bank3
 11970  1DB8  0840               	movf	_prec^(0+384),w
 11971  1DB9  0020               	movlb	0	; select bank0
 11972  1DBA  00BF               	movwf	dtoa@p
 11973  1DBB                     l521:	
 11974                           
 11975                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 11976  1DBB  0023               	movlb	3	; select bank3
 11977  1DBC  083F               	movf	(_width+1)^(0+384),w
 11978  1DBD  0020               	movlb	0	; select bank0
 11979  1DBE  00C2               	movwf	dtoa@w+1
 11980  1DBF  0023               	movlb	3	; select bank3
 11981  1DC0  083E               	movf	_width^(0+384),w
 11982  1DC1  0020               	movlb	0	; select bank0
 11983  1DC2  00C1               	movwf	dtoa@w
 11984                           
 11985                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 11986  1DC3  0843               	movf	dtoa@s,w
 11987  1DC4  0444               	iorwf	dtoa@s+1,w
 11988  1DC5  1D03               	btfss	3,2
 11989  1DC6  2DCA               	goto	l6911
 11990  1DC7  0023               	movlb	3	; select bank3
 11991  1DC8  1D42               	btfss	_flags^(0+384),2
 11992  1DC9  2DCF               	goto	l522
 11993  1DCA                     l6911:	
 11994                           
 11995                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 11996  1DCA  30FF               	movlw	255
 11997  1DCB  0020               	movlb	0	; select bank0
 11998  1DCC  07C1               	addwf	dtoa@w,f
 11999  1DCD  30FF               	movlw	255
 12000  1DCE  3DC2               	addwfc	dtoa@w+1,f
 12001  1DCF                     l522:	
 12002                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
 12003                           
 12004                           
 12005                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 12006  1DCF  304F               	movlw	79
 12007  1DD0  0020               	movlb	0	; select bank0
 12008  1DD1  00CD               	movwf	dtoa@i
 12009  1DD2  3000               	movlw	0
 12010  1DD3  00CE               	movwf	dtoa@i+1
 12011                           
 12012                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 12013  1DD4  0024               	movlb	4	; select bank4
 12014  1DD5  01EF               	clrf	(_dbuf^(0+512)+79)
 12015                           
 12016                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12017  1DD6  2E65               	goto	l525
 12018  1DD7                     l6925:	
 12019  1DD7  0020               	movlb	0	; select bank0
 12020  1DD8  0845               	movf	dtoa@n,w
 12021  1DD9  0446               	iorwf	dtoa@n+1,w
 12022  1DDA  0447               	iorwf	dtoa@n+2,w
 12023  1DDB  0448               	iorwf	dtoa@n+3,w
 12024  1DDC  0449               	iorwf	dtoa@n+4,w
 12025  1DDD  044A               	iorwf	dtoa@n+5,w
 12026  1DDE  044B               	iorwf	dtoa@n+6,w
 12027  1DDF  044C               	iorwf	dtoa@n+7,w
 12028  1DE0  1D03               	skipz
 12029  1DE1  2DFC               	goto	l6915
 12030  1DE2  0840               	movf	dtoa@p+1,w
 12031  1DE3  3A80               	xorlw	128
 12032  1DE4  00BA               	movwf	??_dtoa
 12033  1DE5  3080               	movlw	128
 12034  1DE6  023A               	subwf	??_dtoa,w
 12035  1DE7  1D03               	skipz
 12036  1DE8  2DEB               	goto	u10045
 12037  1DE9  3001               	movlw	1
 12038  1DEA  023F               	subwf	dtoa@p,w
 12039  1DEB                     u10045:	
 12040  1DEB  1803               	skipnc
 12041  1DEC  2DFC               	goto	l6915
 12042  1DED  0020               	movlb	0	; select bank0
 12043  1DEE  0842               	movf	dtoa@w+1,w
 12044  1DEF  3A80               	xorlw	128
 12045  1DF0  00BA               	movwf	??_dtoa
 12046  1DF1  3080               	movlw	128
 12047  1DF2  023A               	subwf	??_dtoa,w
 12048  1DF3  1D03               	skipz
 12049  1DF4  2DF7               	goto	u10055
 12050  1DF5  3001               	movlw	1
 12051  1DF6  0241               	subwf	dtoa@w,w
 12052  1DF7                     u10055:	
 12053  1DF7  1C03               	skipc
 12054  1DF8  2E71               	goto	l6933
 12055  1DF9  0023               	movlb	3	; select bank3
 12056  1DFA  1CC2               	btfss	_flags^(0+384),1
 12057  1DFB  2E71               	goto	l6933
 12058  1DFC                     l6915:	
 12059                           
 12060                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 12061  1DFC  30FF               	movlw	255
 12062  1DFD  0020               	movlb	0	; select bank0
 12063  1DFE  07CD               	addwf	dtoa@i,f
 12064  1DFF  30FF               	movlw	255
 12065  1E00  3DCE               	addwfc	dtoa@i+1,f
 12066                           
 12067                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 12068  1E01  300A               	movlw	10
 12069  1E02  00A0               	movwf	___aomod@divisor
 12070  1E03  01A1               	clrf	___aomod@divisor+1
 12071  1E04  01A2               	clrf	___aomod@divisor+2
 12072  1E05  01A3               	clrf	___aomod@divisor+3
 12073  1E06  01A4               	clrf	___aomod@divisor+4
 12074  1E07  01A5               	clrf	___aomod@divisor+5
 12075  1E08  01A6               	clrf	___aomod@divisor+6
 12076  1E09  01A7               	clrf	___aomod@divisor+7
 12077  1E0A  0845               	movf	dtoa@n,w
 12078  1E0B  00A8               	movwf	___aomod@dividend
 12079  1E0C  0846               	movf	dtoa@n+1,w
 12080  1E0D  00A9               	movwf	___aomod@dividend+1
 12081  1E0E  0847               	movf	dtoa@n+2,w
 12082  1E0F  00AA               	movwf	___aomod@dividend+2
 12083  1E10  0848               	movf	dtoa@n+3,w
 12084  1E11  00AB               	movwf	___aomod@dividend+3
 12085  1E12  0849               	movf	dtoa@n+4,w
 12086  1E13  00AC               	movwf	___aomod@dividend+4
 12087  1E14  084A               	movf	dtoa@n+5,w
 12088  1E15  00AD               	movwf	___aomod@dividend+5
 12089  1E16  084B               	movf	dtoa@n+6,w
 12090  1E17  00AE               	movwf	___aomod@dividend+6
 12091  1E18  084C               	movf	dtoa@n+7,w
 12092  1E19  00AF               	movwf	___aomod@dividend+7
 12093  1E1A  31A6  2643  319D   	fcall	___aomod
 12094  1E1D  0020               	movlb	0	; select bank0
 12095  1E1E  0821               	movf	?___aomod+1,w
 12096  1E1F  00F5               	movwf	abs@a+1
 12097  1E20  0820               	movf	?___aomod,w
 12098  1E21  00F4               	movwf	abs@a
 12099  1E22  31B7  2735  319D   	fcall	_abs
 12100  1E25  0874               	movf	?_abs,w
 12101  1E26  3E30               	addlw	48
 12102  1E27  0020               	movlb	0	; select bank0
 12103  1E28  00BA               	movwf	??_dtoa
 12104  1E29  084D               	movf	dtoa@i,w
 12105  1E2A  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 12106  1E2B  0086               	movwf	6
 12107  1E2C  3002               	movlw	2	; select bank4/5
 12108  1E2D  0087               	movwf	7
 12109  1E2E  083A               	movf	??_dtoa,w
 12110  1E2F  0081               	movwf	1
 12111                           
 12112                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 12113  1E30  30FF               	movlw	255
 12114  1E31  07BF               	addwf	dtoa@p,f
 12115  1E32  30FF               	movlw	255
 12116  1E33  3DC0               	addwfc	dtoa@p+1,f
 12117                           
 12118                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 12119  1E34  30FF               	movlw	255
 12120  1E35  07C1               	addwf	dtoa@w,f
 12121  1E36  30FF               	movlw	255
 12122  1E37  3DC2               	addwfc	dtoa@w+1,f
 12123                           
 12124                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 12125  1E38  300A               	movlw	10
 12126  1E39  00A0               	movwf	___aodiv@divisor
 12127  1E3A  01A1               	clrf	___aodiv@divisor+1
 12128  1E3B  01A2               	clrf	___aodiv@divisor+2
 12129  1E3C  01A3               	clrf	___aodiv@divisor+3
 12130  1E3D  01A4               	clrf	___aodiv@divisor+4
 12131  1E3E  01A5               	clrf	___aodiv@divisor+5
 12132  1E3F  01A6               	clrf	___aodiv@divisor+6
 12133  1E40  01A7               	clrf	___aodiv@divisor+7
 12134  1E41  0845               	movf	dtoa@n,w
 12135  1E42  00A8               	movwf	___aodiv@dividend
 12136  1E43  0846               	movf	dtoa@n+1,w
 12137  1E44  00A9               	movwf	___aodiv@dividend+1
 12138  1E45  0847               	movf	dtoa@n+2,w
 12139  1E46  00AA               	movwf	___aodiv@dividend+2
 12140  1E47  0848               	movf	dtoa@n+3,w
 12141  1E48  00AB               	movwf	___aodiv@dividend+3
 12142  1E49  0849               	movf	dtoa@n+4,w
 12143  1E4A  00AC               	movwf	___aodiv@dividend+4
 12144  1E4B  084A               	movf	dtoa@n+5,w
 12145  1E4C  00AD               	movwf	___aodiv@dividend+5
 12146  1E4D  084B               	movf	dtoa@n+6,w
 12147  1E4E  00AE               	movwf	___aodiv@dividend+6
 12148  1E4F  084C               	movf	dtoa@n+7,w
 12149  1E50  00AF               	movwf	___aodiv@dividend+7
 12150  1E51  319A  2265  319D   	fcall	___aodiv
 12151  1E54  0020               	movlb	0	; select bank0
 12152  1E55  0820               	movf	?___aodiv,w
 12153  1E56  00C5               	movwf	dtoa@n
 12154  1E57  0821               	movf	?___aodiv+1,w
 12155  1E58  00C6               	movwf	dtoa@n+1
 12156  1E59  0822               	movf	?___aodiv+2,w
 12157  1E5A  00C7               	movwf	dtoa@n+2
 12158  1E5B  0823               	movf	?___aodiv+3,w
 12159  1E5C  00C8               	movwf	dtoa@n+3
 12160  1E5D  0824               	movf	?___aodiv+4,w
 12161  1E5E  00C9               	movwf	dtoa@n+4
 12162  1E5F  0825               	movf	?___aodiv+5,w
 12163  1E60  00CA               	movwf	dtoa@n+5
 12164  1E61  0826               	movf	?___aodiv+6,w
 12165  1E62  00CB               	movwf	dtoa@n+6
 12166  1E63  0827               	movf	?___aodiv+7,w
 12167  1E64  00CC               	movwf	dtoa@n+7
 12168  1E65                     l525:	
 12169                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
 12170                           
 12171                           
 12172                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12173  1E65  0020               	movlb	0	; select bank0
 12174  1E66  084E               	movf	dtoa@i+1,w
 12175  1E67  3A80               	xorlw	128
 12176  1E68  00BA               	movwf	??_dtoa
 12177  1E69  3080               	movlw	128
 12178  1E6A  023A               	subwf	??_dtoa,w
 12179  1E6B  1D03               	skipz
 12180  1E6C  2E6F               	goto	u10025
 12181  1E6D  3001               	movlw	1
 12182  1E6E  024D               	subwf	dtoa@i,w
 12183  1E6F                     u10025:	
 12184  1E6F  1803               	btfsc	3,0
 12185  1E70  2DD7               	goto	l6925
 12186  1E71                     l6933:	
 12187                           
 12188                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 12189  1E71  0020               	movlb	0	; select bank0
 12190  1E72  0843               	movf	dtoa@s,w
 12191  1E73  0444               	iorwf	dtoa@s+1,w
 12192  1E74  1D03               	btfss	3,2
 12193  1E75  2E79               	goto	l6937
 12194  1E76  0023               	movlb	3	; select bank3
 12195  1E77  1D42               	btfss	_flags^(0+384),2
 12196  1E78  2E91               	goto	l6947
 12197  1E79                     l6937:	
 12198                           
 12199                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 12200  1E79  30FF               	movlw	255
 12201  1E7A  0020               	movlb	0	; select bank0
 12202  1E7B  07CD               	addwf	dtoa@i,f
 12203  1E7C  30FF               	movlw	255
 12204  1E7D  3DCE               	addwfc	dtoa@i+1,f
 12205                           
 12206                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 12207  1E7E  0843               	movf	dtoa@s,w
 12208  1E7F  0444               	iorwf	dtoa@s+1,w
 12209  1E80  1D03               	btfss	3,2
 12210  1E81  2E84               	goto	l6943
 12211  1E82  302B               	movlw	43
 12212  1E83  2E85               	goto	L13
 12213  1E84                     l6943:	
 12214  1E84  302D               	movlw	45
 12215  1E85                     L13:	
 12216  1E85  00BD               	movwf	_dtoa$933
 12217  1E86  3000               	movlw	0
 12218  1E87  00BE               	movwf	_dtoa$933+1
 12219  1E88  083D               	movf	_dtoa$933,w
 12220  1E89  00BA               	movwf	??_dtoa
 12221  1E8A  084D               	movf	dtoa@i,w
 12222  1E8B  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 12223  1E8C  0086               	movwf	6
 12224  1E8D  3002               	movlw	2	; select bank4/5
 12225  1E8E  0087               	movwf	7
 12226  1E8F  083A               	movf	??_dtoa,w
 12227  1E90  0081               	movwf	1
 12228  1E91                     l6947:	
 12229                           
 12230                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 12231  1E91  0020               	movlb	0	; select bank0
 12232  1E92  0831               	movf	dtoa@fp+1,w
 12233  1E93  00A7               	movwf	pad@fp+1
 12234  1E94  0830               	movf	dtoa@fp,w
 12235  1E95  00A6               	movwf	pad@fp
 12236  1E96  084D               	movf	dtoa@i,w
 12237  1E97  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 12238  1E98  00BA               	movwf	??_dtoa
 12239  1E99  083A               	movf	??_dtoa,w
 12240  1E9A  00A8               	movwf	pad@buf
 12241  1E9B  0842               	movf	dtoa@w+1,w
 12242  1E9C  00AA               	movwf	pad@p+1
 12243  1E9D  0841               	movf	dtoa@w,w
 12244  1E9E  00A9               	movwf	pad@p
 12245  1E9F  31AB  2307         	fcall	_pad
 12246  1EA1  0020               	movlb	0	; select bank0
 12247  1EA2  0827               	movf	?_pad+1,w
 12248  1EA3  00B1               	movwf	?_dtoa+1
 12249  1EA4  0826               	movf	?_pad,w
 12250  1EA5  00B0               	movwf	?_dtoa
 12251  1EA6  0008               	return
 12252  1EA7                     __end_of_dtoa:	
 12253                           
 12254                           	psect	text30
 12255  3735                     __ptext30:	
 12256 ;; *************** function _abs *****************
 12257 ;; Defined at:
 12258 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
 12259 ;; Parameters:    Size  Location     Type
 12260 ;;  a               2    4[COMMON] int 
 12261 ;; Auto vars:     Size  Location     Type
 12262 ;;		None
 12263 ;; Return value:  Size  Location     Type
 12264 ;;                  2    4[COMMON] int 
 12265 ;; Registers used:
 12266 ;;		wreg, status,2, status,0
 12267 ;; Tracked objects:
 12268 ;;		On entry : 0/0
 12269 ;;		On exit  : 0/0
 12270 ;;		Unchanged: 0/0
 12271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12272 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12274 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12275 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12276 ;;Total ram usage:        4 bytes
 12277 ;; Hardware stack levels used:    1
 12278 ;; Hardware stack levels required when called:    1
 12279 ;; This function calls:
 12280 ;;		Nothing
 12281 ;; This function is called by:
 12282 ;;		_dtoa
 12283 ;; This function uses a non-reentrant model
 12284 ;;
 12285                           
 12286                           
 12287                           ;psect for function _abs
 12288  3735                     _abs:	
 12289                           
 12290                           ;incstack = 0
 12291                           ; Regs used in _abs: [wreg+status,2+status,0]
 12292  3735  0875               	movf	abs@a+1,w
 12293  3736  3A80               	xorlw	128
 12294  3737  00F6               	movwf	??_abs
 12295  3738  3080               	movlw	128
 12296  3739  0276               	subwf	??_abs,w
 12297  373A  1D03               	skipz
 12298  373B  2F3E               	goto	u5295
 12299  373C  3001               	movlw	1
 12300  373D  0274               	subwf	abs@a,w
 12301  373E                     u5295:	
 12302  373E  1803               	skipnc
 12303  373F  0008               	return
 12304  3740  0974               	comf	abs@a,w
 12305  3741  00F6               	movwf	??_abs
 12306  3742  0975               	comf	abs@a+1,w
 12307  3743  00F7               	movwf	??_abs+1
 12308  3744  0AF6               	incf	??_abs,f
 12309  3745  1903               	skipnz
 12310  3746  0AF7               	incf	??_abs+1,f
 12311  3747  0876               	movf	??_abs,w
 12312  3748  00F4               	movwf	?_abs
 12313  3749  0877               	movf	??_abs+1,w
 12314  374A  00F5               	movwf	?_abs+1
 12315  374B  0008               	return
 12316  374C                     __end_of_abs:	
 12317                           
 12318                           	psect	text31
 12319  2643                     __ptext31:	
 12320 ;; *************** function ___aomod *****************
 12321 ;; Defined at:
 12322 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
 12323 ;; Parameters:    Size  Location     Type
 12324 ;;  divisor         8    0[BANK0 ] long long 
 12325 ;;  dividend        8    8[BANK0 ] long long 
 12326 ;; Auto vars:     Size  Location     Type
 12327 ;;  sign            1    3[COMMON] unsigned char 
 12328 ;;  counter         1    2[COMMON] unsigned char 
 12329 ;; Return value:  Size  Location     Type
 12330 ;;                  8    0[BANK0 ] long long 
 12331 ;; Registers used:
 12332 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12333 ;; Tracked objects:
 12334 ;;		On entry : 0/0
 12335 ;;		On exit  : 0/0
 12336 ;;		Unchanged: 0/0
 12337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12338 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12339 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12340 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12341 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12342 ;;Total ram usage:       19 bytes
 12343 ;; Hardware stack levels used:    1
 12344 ;; Hardware stack levels required when called:    1
 12345 ;; This function calls:
 12346 ;;		Nothing
 12347 ;; This function is called by:
 12348 ;;		_dtoa
 12349 ;; This function uses a non-reentrant model
 12350 ;;
 12351                           
 12352                           
 12353                           ;psect for function ___aomod
 12354  2643                     ___aomod:	
 12355                           
 12356                           ;incstack = 0
 12357                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
 12358  2643  01F3               	clrf	___aomod@sign
 12359  2644  3028               	movlw	low ___aomod@dividend
 12360  2645  0086               	movwf	6
 12361  2646  3000               	movlw	high ___aomod@dividend
 12362  2647  0087               	movwf	7
 12363  2648  3F47               	moviw [7]fsr1
 12364  2649  00F1               	movwf	??___aomod
 12365  264A  1FF1               	btfss	??___aomod,7
 12366  264B  2E6D               	goto	l4497
 12367  264C  0020               	movlb	0	; select bank0
 12368  264D  09A8               	comf	___aomod@dividend,f
 12369  264E  09A9               	comf	___aomod@dividend+1,f
 12370  264F  09AA               	comf	___aomod@dividend+2,f
 12371  2650  09AB               	comf	___aomod@dividend+3,f
 12372  2651  09AC               	comf	___aomod@dividend+4,f
 12373  2652  09AD               	comf	___aomod@dividend+5,f
 12374  2653  09AE               	comf	___aomod@dividend+6,f
 12375  2654  09AF               	comf	___aomod@dividend+7,f
 12376  2655  0AA8               	incf	___aomod@dividend,f
 12377  2656  1D03               	skipz
 12378  2657  2E6B               	goto	u576lld
 12379  2658  0AA9               	incf	___aomod@dividend+1,f
 12380  2659  1D03               	skipz
 12381  265A  2E6B               	goto	u576lld
 12382  265B  0AAA               	incf	___aomod@dividend+2,f
 12383  265C  1D03               	skipz
 12384  265D  2E6B               	goto	u576lld
 12385  265E  0AAB               	incf	___aomod@dividend+3,f
 12386  265F  1D03               	skipz
 12387  2660  2E6B               	goto	u576lld
 12388  2661  0AAC               	incf	___aomod@dividend+4,f
 12389  2662  1D03               	skipz
 12390  2663  2E6B               	goto	u576lld
 12391  2664  0AAD               	incf	___aomod@dividend+5,f
 12392  2665  1D03               	skipz
 12393  2666  2E6B               	goto	u576lld
 12394  2667  0AAE               	incf	___aomod@dividend+6,f
 12395  2668  1D03               	skipz
 12396  2669  2E6B               	goto	u576lld
 12397  266A  0AAF               	incf	___aomod@dividend+7,f
 12398  266B                     u576lld:	
 12399  266B  01F3               	clrf	___aomod@sign
 12400  266C  0AF3               	incf	___aomod@sign,f
 12401  266D                     l4497:	
 12402  266D  3020               	movlw	low ___aomod@divisor
 12403  266E  0086               	movwf	6
 12404  266F  3000               	movlw	high ___aomod@divisor
 12405  2670  0087               	movwf	7
 12406  2671  3F47               	moviw [7]fsr1
 12407  2672  00F1               	movwf	??___aomod
 12408  2673  1FF1               	btfss	??___aomod,7
 12409  2674  2E94               	goto	l4501
 12410  2675  0020               	movlb	0	; select bank0
 12411  2676  09A0               	comf	___aomod@divisor,f
 12412  2677  09A1               	comf	___aomod@divisor+1,f
 12413  2678  09A2               	comf	___aomod@divisor+2,f
 12414  2679  09A3               	comf	___aomod@divisor+3,f
 12415  267A  09A4               	comf	___aomod@divisor+4,f
 12416  267B  09A5               	comf	___aomod@divisor+5,f
 12417  267C  09A6               	comf	___aomod@divisor+6,f
 12418  267D  09A7               	comf	___aomod@divisor+7,f
 12419  267E  0AA0               	incf	___aomod@divisor,f
 12420  267F  1D03               	skipz
 12421  2680  2E94               	goto	l4501
 12422  2681  0AA1               	incf	___aomod@divisor+1,f
 12423  2682  1D03               	skipz
 12424  2683  2E94               	goto	l4501
 12425  2684  0AA2               	incf	___aomod@divisor+2,f
 12426  2685  1D03               	skipz
 12427  2686  2E94               	goto	l4501
 12428  2687  0AA3               	incf	___aomod@divisor+3,f
 12429  2688  1D03               	skipz
 12430  2689  2E94               	goto	l4501
 12431  268A  0AA4               	incf	___aomod@divisor+4,f
 12432  268B  1D03               	skipz
 12433  268C  2E94               	goto	l4501
 12434  268D  0AA5               	incf	___aomod@divisor+5,f
 12435  268E  1D03               	skipz
 12436  268F  2E94               	goto	l4501
 12437  2690  0AA6               	incf	___aomod@divisor+6,f
 12438  2691  1D03               	skipz
 12439  2692  2E94               	goto	l4501
 12440  2693  0AA7               	incf	___aomod@divisor+7,f
 12441  2694                     l4501:	
 12442  2694  0020               	movlb	0	; select bank0
 12443  2695  0820               	movf	___aomod@divisor,w
 12444  2696  0421               	iorwf	___aomod@divisor+1,w
 12445  2697  0422               	iorwf	___aomod@divisor+2,w
 12446  2698  0423               	iorwf	___aomod@divisor+3,w
 12447  2699  0424               	iorwf	___aomod@divisor+4,w
 12448  269A  0425               	iorwf	___aomod@divisor+5,w
 12449  269B  0426               	iorwf	___aomod@divisor+6,w
 12450  269C  0427               	iorwf	___aomod@divisor+7,w
 12451  269D  1903               	skipnz
 12452  269E  2EEC               	goto	l4517
 12453  269F  01F2               	clrf	___aomod@counter
 12454  26A0  0AF2               	incf	___aomod@counter,f
 12455  26A1                     l4509:	
 12456  26A1  1BA7               	btfsc	___aomod@divisor+7,7
 12457  26A2  2EB0               	goto	l4511
 12458  26A3  35A0               	lslf	___aomod@divisor,f
 12459  26A4  0DA1               	rlf	___aomod@divisor+1,f
 12460  26A5  0DA2               	rlf	___aomod@divisor+2,f
 12461  26A6  0DA3               	rlf	___aomod@divisor+3,f
 12462  26A7  0DA4               	rlf	___aomod@divisor+4,f
 12463  26A8  0DA5               	rlf	___aomod@divisor+5,f
 12464  26A9  0DA6               	rlf	___aomod@divisor+6,f
 12465  26AA  0DA7               	rlf	___aomod@divisor+7,f
 12466  26AB  3001               	movlw	1
 12467  26AC  00F1               	movwf	??___aomod
 12468  26AD  0871               	movf	??___aomod,w
 12469  26AE  07F2               	addwf	___aomod@counter,f
 12470  26AF  2EA1               	goto	l4509
 12471  26B0                     l4511:	
 12472  26B0  0827               	movf	___aomod@divisor+7,w
 12473  26B1  022F               	subwf	___aomod@dividend+7,w
 12474  26B2  1D03               	skipz
 12475  26B3  2ECE               	goto	u5815
 12476  26B4  0826               	movf	___aomod@divisor+6,w
 12477  26B5  022E               	subwf	___aomod@dividend+6,w
 12478  26B6  1D03               	skipz
 12479  26B7  2ECE               	goto	u5815
 12480  26B8  0825               	movf	___aomod@divisor+5,w
 12481  26B9  022D               	subwf	___aomod@dividend+5,w
 12482  26BA  1D03               	skipz
 12483  26BB  2ECE               	goto	u5815
 12484  26BC  0824               	movf	___aomod@divisor+4,w
 12485  26BD  022C               	subwf	___aomod@dividend+4,w
 12486  26BE  1D03               	skipz
 12487  26BF  2ECE               	goto	u5815
 12488  26C0  0823               	movf	___aomod@divisor+3,w
 12489  26C1  022B               	subwf	___aomod@dividend+3,w
 12490  26C2  1D03               	skipz
 12491  26C3  2ECE               	goto	u5815
 12492  26C4  0822               	movf	___aomod@divisor+2,w
 12493  26C5  022A               	subwf	___aomod@dividend+2,w
 12494  26C6  1D03               	skipz
 12495  26C7  2ECE               	goto	u5815
 12496  26C8  0821               	movf	___aomod@divisor+1,w
 12497  26C9  0229               	subwf	___aomod@dividend+1,w
 12498  26CA  1D03               	skipz
 12499  26CB  2ECE               	goto	u5815
 12500  26CC  0820               	movf	___aomod@divisor,w
 12501  26CD  0228               	subwf	___aomod@dividend,w
 12502  26CE                     u5815:	
 12503  26CE  1C03               	skipc
 12504  26CF  2EE0               	goto	l4515
 12505  26D0  0820               	movf	___aomod@divisor,w
 12506  26D1  02A8               	subwf	___aomod@dividend,f
 12507  26D2  0821               	movf	___aomod@divisor+1,w
 12508  26D3  3BA9               	subwfb	___aomod@dividend+1,f
 12509  26D4  0822               	movf	___aomod@divisor+2,w
 12510  26D5  3BAA               	subwfb	___aomod@dividend+2,f
 12511  26D6  0823               	movf	___aomod@divisor+3,w
 12512  26D7  3BAB               	subwfb	___aomod@dividend+3,f
 12513  26D8  0824               	movf	___aomod@divisor+4,w
 12514  26D9  3BAC               	subwfb	___aomod@dividend+4,f
 12515  26DA  0825               	movf	___aomod@divisor+5,w
 12516  26DB  3BAD               	subwfb	___aomod@dividend+5,f
 12517  26DC  0826               	movf	___aomod@divisor+6,w
 12518  26DD  3BAE               	subwfb	___aomod@dividend+6,f
 12519  26DE  0827               	movf	___aomod@divisor+7,w
 12520  26DF  3BAF               	subwfb	___aomod@dividend+7,f
 12521  26E0                     l4515:	
 12522  26E0  36A7               	lsrf	___aomod@divisor+7,f
 12523  26E1  0CA6               	rrf	___aomod@divisor+6,f
 12524  26E2  0CA5               	rrf	___aomod@divisor+5,f
 12525  26E3  0CA4               	rrf	___aomod@divisor+4,f
 12526  26E4  0CA3               	rrf	___aomod@divisor+3,f
 12527  26E5  0CA2               	rrf	___aomod@divisor+2,f
 12528  26E6  0CA1               	rrf	___aomod@divisor+1,f
 12529  26E7  0CA0               	rrf	___aomod@divisor,f
 12530  26E8  3001               	movlw	1
 12531  26E9  02F2               	subwf	___aomod@counter,f
 12532  26EA  1D03               	btfss	3,2
 12533  26EB  2EB0               	goto	l4511
 12534  26EC                     l4517:	
 12535  26EC  0873               	movf	___aomod@sign,w
 12536  26ED  1903               	btfsc	3,2
 12537  26EE  2F0D               	goto	l932
 12538  26EF  09A8               	comf	___aomod@dividend,f
 12539  26F0  09A9               	comf	___aomod@dividend+1,f
 12540  26F1  09AA               	comf	___aomod@dividend+2,f
 12541  26F2  09AB               	comf	___aomod@dividend+3,f
 12542  26F3  09AC               	comf	___aomod@dividend+4,f
 12543  26F4  09AD               	comf	___aomod@dividend+5,f
 12544  26F5  09AE               	comf	___aomod@dividend+6,f
 12545  26F6  09AF               	comf	___aomod@dividend+7,f
 12546  26F7  0AA8               	incf	___aomod@dividend,f
 12547  26F8  1D03               	skipz
 12548  26F9  2F0D               	goto	l932
 12549  26FA  0AA9               	incf	___aomod@dividend+1,f
 12550  26FB  1D03               	skipz
 12551  26FC  2F0D               	goto	l932
 12552  26FD  0AAA               	incf	___aomod@dividend+2,f
 12553  26FE  1D03               	skipz
 12554  26FF  2F0D               	goto	l932
 12555  2700  0AAB               	incf	___aomod@dividend+3,f
 12556  2701  1D03               	skipz
 12557  2702  2F0D               	goto	l932
 12558  2703  0AAC               	incf	___aomod@dividend+4,f
 12559  2704  1D03               	skipz
 12560  2705  2F0D               	goto	l932
 12561  2706  0AAD               	incf	___aomod@dividend+5,f
 12562  2707  1D03               	skipz
 12563  2708  2F0D               	goto	l932
 12564  2709  0AAE               	incf	___aomod@dividend+6,f
 12565  270A  1D03               	skipz
 12566  270B  2F0D               	goto	l932
 12567  270C  0AAF               	incf	___aomod@dividend+7,f
 12568  270D                     l932:	
 12569  270D  0020               	movlb	0	; select bank0
 12570  270E  0828               	movf	___aomod@dividend,w
 12571  270F  00A0               	movwf	?___aomod
 12572  2710  0829               	movf	___aomod@dividend+1,w
 12573  2711  00A1               	movwf	?___aomod+1
 12574  2712  082A               	movf	___aomod@dividend+2,w
 12575  2713  00A2               	movwf	?___aomod+2
 12576  2714  082B               	movf	___aomod@dividend+3,w
 12577  2715  00A3               	movwf	?___aomod+3
 12578  2716  082C               	movf	___aomod@dividend+4,w
 12579  2717  00A4               	movwf	?___aomod+4
 12580  2718  082D               	movf	___aomod@dividend+5,w
 12581  2719  00A5               	movwf	?___aomod+5
 12582  271A  082E               	movf	___aomod@dividend+6,w
 12583  271B  00A6               	movwf	?___aomod+6
 12584  271C  082F               	movf	___aomod@dividend+7,w
 12585  271D  00A7               	movwf	?___aomod+7
 12586  271E  0008               	return
 12587  271F                     __end_of___aomod:	
 12588                           
 12589                           	psect	text32
 12590  1A65                     __ptext32:	
 12591 ;; *************** function ___aodiv *****************
 12592 ;; Defined at:
 12593 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
 12594 ;; Parameters:    Size  Location     Type
 12595 ;;  divisor         8    0[BANK0 ] long long 
 12596 ;;  dividend        8    8[BANK0 ] long long 
 12597 ;; Auto vars:     Size  Location     Type
 12598 ;;  quotient        8    4[COMMON] long long 
 12599 ;;  sign            1    3[COMMON] unsigned char 
 12600 ;;  counter         1    2[COMMON] unsigned char 
 12601 ;; Return value:  Size  Location     Type
 12602 ;;                  8    0[BANK0 ] long long 
 12603 ;; Registers used:
 12604 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12605 ;; Tracked objects:
 12606 ;;		On entry : 0/0
 12607 ;;		On exit  : 0/0
 12608 ;;		Unchanged: 0/0
 12609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12610 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12611 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12612 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12613 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12614 ;;Total ram usage:       27 bytes
 12615 ;; Hardware stack levels used:    1
 12616 ;; Hardware stack levels required when called:    1
 12617 ;; This function calls:
 12618 ;;		Nothing
 12619 ;; This function is called by:
 12620 ;;		_dtoa
 12621 ;; This function uses a non-reentrant model
 12622 ;;
 12623                           
 12624                           
 12625                           ;psect for function ___aodiv
 12626  1A65                     ___aodiv:	
 12627                           
 12628                           ;incstack = 0
 12629                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
 12630  1A65  01F3               	clrf	___aodiv@sign
 12631  1A66  3020               	movlw	low ___aodiv@divisor
 12632  1A67  0086               	movwf	6
 12633  1A68  3000               	movlw	high ___aodiv@divisor
 12634  1A69  0087               	movwf	7
 12635  1A6A  3F47               	moviw [7]fsr1
 12636  1A6B  00F1               	movwf	??___aodiv
 12637  1A6C  1FF1               	btfss	??___aodiv,7
 12638  1A6D  2A8F               	goto	l4459
 12639  1A6E  0020               	movlb	0	; select bank0
 12640  1A6F  09A0               	comf	___aodiv@divisor,f
 12641  1A70  09A1               	comf	___aodiv@divisor+1,f
 12642  1A71  09A2               	comf	___aodiv@divisor+2,f
 12643  1A72  09A3               	comf	___aodiv@divisor+3,f
 12644  1A73  09A4               	comf	___aodiv@divisor+4,f
 12645  1A74  09A5               	comf	___aodiv@divisor+5,f
 12646  1A75  09A6               	comf	___aodiv@divisor+6,f
 12647  1A76  09A7               	comf	___aodiv@divisor+7,f
 12648  1A77  0AA0               	incf	___aodiv@divisor,f
 12649  1A78  1D03               	skipz
 12650  1A79  2A8D               	goto	u565lld
 12651  1A7A  0AA1               	incf	___aodiv@divisor+1,f
 12652  1A7B  1D03               	skipz
 12653  1A7C  2A8D               	goto	u565lld
 12654  1A7D  0AA2               	incf	___aodiv@divisor+2,f
 12655  1A7E  1D03               	skipz
 12656  1A7F  2A8D               	goto	u565lld
 12657  1A80  0AA3               	incf	___aodiv@divisor+3,f
 12658  1A81  1D03               	skipz
 12659  1A82  2A8D               	goto	u565lld
 12660  1A83  0AA4               	incf	___aodiv@divisor+4,f
 12661  1A84  1D03               	skipz
 12662  1A85  2A8D               	goto	u565lld
 12663  1A86  0AA5               	incf	___aodiv@divisor+5,f
 12664  1A87  1D03               	skipz
 12665  1A88  2A8D               	goto	u565lld
 12666  1A89  0AA6               	incf	___aodiv@divisor+6,f
 12667  1A8A  1D03               	skipz
 12668  1A8B  2A8D               	goto	u565lld
 12669  1A8C  0AA7               	incf	___aodiv@divisor+7,f
 12670  1A8D                     u565lld:	
 12671  1A8D  01F3               	clrf	___aodiv@sign
 12672  1A8E  0AF3               	incf	___aodiv@sign,f
 12673  1A8F                     l4459:	
 12674  1A8F  3028               	movlw	low ___aodiv@dividend
 12675  1A90  0086               	movwf	6
 12676  1A91  3000               	movlw	high ___aodiv@dividend
 12677  1A92  0087               	movwf	7
 12678  1A93  3F47               	moviw [7]fsr1
 12679  1A94  00F1               	movwf	??___aodiv
 12680  1A95  1FF1               	btfss	??___aodiv,7
 12681  1A96  2ABA               	goto	l4465
 12682  1A97  0020               	movlb	0	; select bank0
 12683  1A98  09A8               	comf	___aodiv@dividend,f
 12684  1A99  09A9               	comf	___aodiv@dividend+1,f
 12685  1A9A  09AA               	comf	___aodiv@dividend+2,f
 12686  1A9B  09AB               	comf	___aodiv@dividend+3,f
 12687  1A9C  09AC               	comf	___aodiv@dividend+4,f
 12688  1A9D  09AD               	comf	___aodiv@dividend+5,f
 12689  1A9E  09AE               	comf	___aodiv@dividend+6,f
 12690  1A9F  09AF               	comf	___aodiv@dividend+7,f
 12691  1AA0  0AA8               	incf	___aodiv@dividend,f
 12692  1AA1  1D03               	skipz
 12693  1AA2  2AB6               	goto	l4463
 12694  1AA3  0AA9               	incf	___aodiv@dividend+1,f
 12695  1AA4  1D03               	skipz
 12696  1AA5  2AB6               	goto	l4463
 12697  1AA6  0AAA               	incf	___aodiv@dividend+2,f
 12698  1AA7  1D03               	skipz
 12699  1AA8  2AB6               	goto	l4463
 12700  1AA9  0AAB               	incf	___aodiv@dividend+3,f
 12701  1AAA  1D03               	skipz
 12702  1AAB  2AB6               	goto	l4463
 12703  1AAC  0AAC               	incf	___aodiv@dividend+4,f
 12704  1AAD  1D03               	skipz
 12705  1AAE  2AB6               	goto	l4463
 12706  1AAF  0AAD               	incf	___aodiv@dividend+5,f
 12707  1AB0  1D03               	skipz
 12708  1AB1  2AB6               	goto	l4463
 12709  1AB2  0AAE               	incf	___aodiv@dividend+6,f
 12710  1AB3  1D03               	skipz
 12711  1AB4  2AB6               	goto	l4463
 12712  1AB5  0AAF               	incf	___aodiv@dividend+7,f
 12713  1AB6                     l4463:	
 12714  1AB6  3001               	movlw	1
 12715  1AB7  00F1               	movwf	??___aodiv
 12716  1AB8  0871               	movf	??___aodiv,w
 12717  1AB9  06F3               	xorwf	___aodiv@sign,f
 12718  1ABA                     l4465:	
 12719  1ABA  3074               	movlw	low ___aodiv@quotient
 12720  1ABB  0086               	movwf	6
 12721  1ABC  3000               	movlw	high ___aodiv@quotient
 12722  1ABD  0087               	movwf	7
 12723  1ABE  3008               	movlw	8
 12724  1ABF  00F1               	movwf	??___aodiv
 12725  1AC0  3000               	movlw	0
 12726  1AC1                     u5680:	
 12727  1AC1  001E               	movwi fsr1++
 12728  1AC2  0BF1               	decfsz	??___aodiv,f
 12729  1AC3  2AC1               	goto	u5680
 12730  1AC4  0020               	movlb	0	; select bank0
 12731  1AC5  0820               	movf	___aodiv@divisor,w
 12732  1AC6  0421               	iorwf	___aodiv@divisor+1,w
 12733  1AC7  0422               	iorwf	___aodiv@divisor+2,w
 12734  1AC8  0423               	iorwf	___aodiv@divisor+3,w
 12735  1AC9  0424               	iorwf	___aodiv@divisor+4,w
 12736  1ACA  0425               	iorwf	___aodiv@divisor+5,w
 12737  1ACB  0426               	iorwf	___aodiv@divisor+6,w
 12738  1ACC  0427               	iorwf	___aodiv@divisor+7,w
 12739  1ACD  1903               	skipnz
 12740  1ACE  2B25               	goto	l4487
 12741  1ACF  01F2               	clrf	___aodiv@counter
 12742  1AD0  0AF2               	incf	___aodiv@counter,f
 12743  1AD1                     l4475:	
 12744  1AD1  1BA7               	btfsc	___aodiv@divisor+7,7
 12745  1AD2  2AE0               	goto	l4477
 12746  1AD3  35A0               	lslf	___aodiv@divisor,f
 12747  1AD4  0DA1               	rlf	___aodiv@divisor+1,f
 12748  1AD5  0DA2               	rlf	___aodiv@divisor+2,f
 12749  1AD6  0DA3               	rlf	___aodiv@divisor+3,f
 12750  1AD7  0DA4               	rlf	___aodiv@divisor+4,f
 12751  1AD8  0DA5               	rlf	___aodiv@divisor+5,f
 12752  1AD9  0DA6               	rlf	___aodiv@divisor+6,f
 12753  1ADA  0DA7               	rlf	___aodiv@divisor+7,f
 12754  1ADB  3001               	movlw	1
 12755  1ADC  00F1               	movwf	??___aodiv
 12756  1ADD  0871               	movf	??___aodiv,w
 12757  1ADE  07F2               	addwf	___aodiv@counter,f
 12758  1ADF  2AD1               	goto	l4475
 12759  1AE0                     l4477:	
 12760  1AE0  35F4               	lslf	___aodiv@quotient,f
 12761  1AE1  0DF5               	rlf	___aodiv@quotient+1,f
 12762  1AE2  0DF6               	rlf	___aodiv@quotient+2,f
 12763  1AE3  0DF7               	rlf	___aodiv@quotient+3,f
 12764  1AE4  0DF8               	rlf	___aodiv@quotient+4,f
 12765  1AE5  0DF9               	rlf	___aodiv@quotient+5,f
 12766  1AE6  0DFA               	rlf	___aodiv@quotient+6,f
 12767  1AE7  0DFB               	rlf	___aodiv@quotient+7,f
 12768  1AE8  0827               	movf	___aodiv@divisor+7,w
 12769  1AE9  022F               	subwf	___aodiv@dividend+7,w
 12770  1AEA  1D03               	skipz
 12771  1AEB  2B06               	goto	u5715
 12772  1AEC  0826               	movf	___aodiv@divisor+6,w
 12773  1AED  022E               	subwf	___aodiv@dividend+6,w
 12774  1AEE  1D03               	skipz
 12775  1AEF  2B06               	goto	u5715
 12776  1AF0  0825               	movf	___aodiv@divisor+5,w
 12777  1AF1  022D               	subwf	___aodiv@dividend+5,w
 12778  1AF2  1D03               	skipz
 12779  1AF3  2B06               	goto	u5715
 12780  1AF4  0824               	movf	___aodiv@divisor+4,w
 12781  1AF5  022C               	subwf	___aodiv@dividend+4,w
 12782  1AF6  1D03               	skipz
 12783  1AF7  2B06               	goto	u5715
 12784  1AF8  0823               	movf	___aodiv@divisor+3,w
 12785  1AF9  022B               	subwf	___aodiv@dividend+3,w
 12786  1AFA  1D03               	skipz
 12787  1AFB  2B06               	goto	u5715
 12788  1AFC  0822               	movf	___aodiv@divisor+2,w
 12789  1AFD  022A               	subwf	___aodiv@dividend+2,w
 12790  1AFE  1D03               	skipz
 12791  1AFF  2B06               	goto	u5715
 12792  1B00  0821               	movf	___aodiv@divisor+1,w
 12793  1B01  0229               	subwf	___aodiv@dividend+1,w
 12794  1B02  1D03               	skipz
 12795  1B03  2B06               	goto	u5715
 12796  1B04  0820               	movf	___aodiv@divisor,w
 12797  1B05  0228               	subwf	___aodiv@dividend,w
 12798  1B06                     u5715:	
 12799  1B06  1C03               	skipc
 12800  1B07  2B19               	goto	l4485
 12801  1B08  0820               	movf	___aodiv@divisor,w
 12802  1B09  02A8               	subwf	___aodiv@dividend,f
 12803  1B0A  0821               	movf	___aodiv@divisor+1,w
 12804  1B0B  3BA9               	subwfb	___aodiv@dividend+1,f
 12805  1B0C  0822               	movf	___aodiv@divisor+2,w
 12806  1B0D  3BAA               	subwfb	___aodiv@dividend+2,f
 12807  1B0E  0823               	movf	___aodiv@divisor+3,w
 12808  1B0F  3BAB               	subwfb	___aodiv@dividend+3,f
 12809  1B10  0824               	movf	___aodiv@divisor+4,w
 12810  1B11  3BAC               	subwfb	___aodiv@dividend+4,f
 12811  1B12  0825               	movf	___aodiv@divisor+5,w
 12812  1B13  3BAD               	subwfb	___aodiv@dividend+5,f
 12813  1B14  0826               	movf	___aodiv@divisor+6,w
 12814  1B15  3BAE               	subwfb	___aodiv@dividend+6,f
 12815  1B16  0827               	movf	___aodiv@divisor+7,w
 12816  1B17  3BAF               	subwfb	___aodiv@dividend+7,f
 12817  1B18  1474               	bsf	___aodiv@quotient,0
 12818  1B19                     l4485:	
 12819  1B19  36A7               	lsrf	___aodiv@divisor+7,f
 12820  1B1A  0CA6               	rrf	___aodiv@divisor+6,f
 12821  1B1B  0CA5               	rrf	___aodiv@divisor+5,f
 12822  1B1C  0CA4               	rrf	___aodiv@divisor+4,f
 12823  1B1D  0CA3               	rrf	___aodiv@divisor+3,f
 12824  1B1E  0CA2               	rrf	___aodiv@divisor+2,f
 12825  1B1F  0CA1               	rrf	___aodiv@divisor+1,f
 12826  1B20  0CA0               	rrf	___aodiv@divisor,f
 12827  1B21  3001               	movlw	1
 12828  1B22  02F2               	subwf	___aodiv@counter,f
 12829  1B23  1D03               	btfss	3,2
 12830  1B24  2AE0               	goto	l4477
 12831  1B25                     l4487:	
 12832  1B25  0873               	movf	___aodiv@sign,w
 12833  1B26  1903               	btfsc	3,2
 12834  1B27  2B46               	goto	l919
 12835  1B28  09F4               	comf	___aodiv@quotient,f
 12836  1B29  09F5               	comf	___aodiv@quotient+1,f
 12837  1B2A  09F6               	comf	___aodiv@quotient+2,f
 12838  1B2B  09F7               	comf	___aodiv@quotient+3,f
 12839  1B2C  09F8               	comf	___aodiv@quotient+4,f
 12840  1B2D  09F9               	comf	___aodiv@quotient+5,f
 12841  1B2E  09FA               	comf	___aodiv@quotient+6,f
 12842  1B2F  09FB               	comf	___aodiv@quotient+7,f
 12843  1B30  0AF4               	incf	___aodiv@quotient,f
 12844  1B31  1D03               	skipz
 12845  1B32  2B46               	goto	l919
 12846  1B33  0AF5               	incf	___aodiv@quotient+1,f
 12847  1B34  1D03               	skipz
 12848  1B35  2B46               	goto	l919
 12849  1B36  0AF6               	incf	___aodiv@quotient+2,f
 12850  1B37  1D03               	skipz
 12851  1B38  2B46               	goto	l919
 12852  1B39  0AF7               	incf	___aodiv@quotient+3,f
 12853  1B3A  1D03               	skipz
 12854  1B3B  2B46               	goto	l919
 12855  1B3C  0AF8               	incf	___aodiv@quotient+4,f
 12856  1B3D  1D03               	skipz
 12857  1B3E  2B46               	goto	l919
 12858  1B3F  0AF9               	incf	___aodiv@quotient+5,f
 12859  1B40  1D03               	skipz
 12860  1B41  2B46               	goto	l919
 12861  1B42  0AFA               	incf	___aodiv@quotient+6,f
 12862  1B43  1D03               	skipz
 12863  1B44  2B46               	goto	l919
 12864  1B45  0AFB               	incf	___aodiv@quotient+7,f
 12865  1B46                     l919:	
 12866  1B46  0874               	movf	___aodiv@quotient,w
 12867  1B47  0020               	movlb	0	; select bank0
 12868  1B48  00A0               	movwf	?___aodiv
 12869  1B49  0875               	movf	___aodiv@quotient+1,w
 12870  1B4A  00A1               	movwf	?___aodiv+1
 12871  1B4B  0876               	movf	___aodiv@quotient+2,w
 12872  1B4C  00A2               	movwf	?___aodiv+2
 12873  1B4D  0877               	movf	___aodiv@quotient+3,w
 12874  1B4E  00A3               	movwf	?___aodiv+3
 12875  1B4F  0878               	movf	___aodiv@quotient+4,w
 12876  1B50  00A4               	movwf	?___aodiv+4
 12877  1B51  0879               	movf	___aodiv@quotient+5,w
 12878  1B52  00A5               	movwf	?___aodiv+5
 12879  1B53  087A               	movf	___aodiv@quotient+6,w
 12880  1B54  00A6               	movwf	?___aodiv+6
 12881  1B55  087B               	movf	___aodiv@quotient+7,w
 12882  1B56  00A7               	movwf	?___aodiv+7
 12883  1B57  0008               	return
 12884  1B58                     __end_of___aodiv:	
 12885                           
 12886                           	psect	text33
 12887  2999                     __ptext33:	
 12888 ;; *************** function _ctoa *****************
 12889 ;; Defined at:
 12890 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 12891 ;; Parameters:    Size  Location     Type
 12892 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
 12893 ;;		 -> vsnprintf@f(6), 
 12894 ;;  c               1   18[BANK0 ] unsigned char 
 12895 ;; Auto vars:     Size  Location     Type
 12896 ;;  w               2   20[BANK0 ] int 
 12897 ;;  l               2    0        int 
 12898 ;; Return value:  Size  Location     Type
 12899 ;;                  2   16[BANK0 ] int 
 12900 ;; Registers used:
 12901 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12902 ;; Tracked objects:
 12903 ;;		On entry : 0/0
 12904 ;;		On exit  : 0/0
 12905 ;;		Unchanged: 0/0
 12906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12907 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12908 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12909 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12910 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12911 ;;Total ram usage:        6 bytes
 12912 ;; Hardware stack levels used:    1
 12913 ;; Hardware stack levels required when called:    5
 12914 ;; This function calls:
 12915 ;;		_pad
 12916 ;; This function is called by:
 12917 ;;		_vfpfcnvrt
 12918 ;; This function uses a non-reentrant model
 12919 ;;
 12920                           
 12921                           
 12922                           ;psect for function _ctoa
 12923  2999                     _ctoa:	
 12924                           
 12925                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 12926                           
 12927                           ;incstack = 0
 12928                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12929  2999  0023               	movlb	3	; select bank3
 12930  299A  083E               	movf	_width^(0+384),w
 12931  299B  043F               	iorwf	(_width+1)^(0+384),w
 12932  299C  1D03               	btfss	3,2
 12933  299D  29A6               	goto	l6883
 12934  299E  083F               	movf	(_width+1)^(0+384),w
 12935  299F  0020               	movlb	0	; select bank0
 12936  29A0  00B5               	movwf	ctoa@w+1
 12937  29A1  0023               	movlb	3	; select bank3
 12938  29A2  083E               	movf	_width^(0+384),w
 12939  29A3  0020               	movlb	0	; select bank0
 12940  29A4  00B4               	movwf	ctoa@w
 12941  29A5  29AF               	goto	l6885
 12942  29A6                     l6883:	
 12943  29A6  083E               	movf	_width^(0+384),w
 12944  29A7  3EFF               	addlw	255
 12945  29A8  0020               	movlb	0	; select bank0
 12946  29A9  00B4               	movwf	ctoa@w
 12947  29AA  30FF               	movlw	255
 12948  29AB  0023               	movlb	3	; select bank3
 12949  29AC  3D3F               	addwfc	(_width+1)^(0+384),w
 12950  29AD  0020               	movlb	0	; select bank0
 12951  29AE  00B5               	movwf	ctoa@w+1
 12952  29AF                     l6885:	
 12953                           
 12954                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 12955  29AF  0832               	movf	ctoa@c,w
 12956  29B0  00B3               	movwf	??_ctoa
 12957  29B1  0833               	movf	??_ctoa,w
 12958  29B2  0024               	movlb	4	; select bank4
 12959  29B3  00A0               	movwf	_dbuf^(0+512)
 12960                           
 12961                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 12962  29B4  01A1               	clrf	(_dbuf^(0+512)+1)
 12963                           
 12964                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 12965  29B5  0020               	movlb	0	; select bank0
 12966  29B6  0831               	movf	ctoa@fp+1,w
 12967  29B7  00A7               	movwf	pad@fp+1
 12968  29B8  0830               	movf	ctoa@fp,w
 12969  29B9  00A6               	movwf	pad@fp
 12970  29BA  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
 12971  29BB  00B3               	movwf	??_ctoa
 12972  29BC  0833               	movf	??_ctoa,w
 12973  29BD  00A8               	movwf	pad@buf
 12974  29BE  0835               	movf	ctoa@w+1,w
 12975  29BF  00AA               	movwf	pad@p+1
 12976  29C0  0834               	movf	ctoa@w,w
 12977  29C1  00A9               	movwf	pad@p
 12978  29C2  31AB  2307         	fcall	_pad
 12979  29C4  0020               	movlb	0	; select bank0
 12980  29C5  0827               	movf	?_pad+1,w
 12981  29C6  00B1               	movwf	?_ctoa+1
 12982  29C7  0826               	movf	?_pad,w
 12983  29C8  00B0               	movwf	?_ctoa
 12984  29C9  0008               	return
 12985  29CA                     __end_of_ctoa:	
 12986                           
 12987                           	psect	text34
 12988  2B07                     __ptext34:	
 12989 ;; *************** function _pad *****************
 12990 ;; Defined at:
 12991 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 12992 ;; Parameters:    Size  Location     Type
 12993 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
 12994 ;;		 -> vsnprintf@f(6), 
 12995 ;;  buf             1    8[BANK0 ] PTR unsigned char 
 12996 ;;		 -> dbuf(80), 
 12997 ;;  p               2    9[BANK0 ] int 
 12998 ;; Auto vars:     Size  Location     Type
 12999 ;;  w               2   14[BANK0 ] int 
 13000 ;;  i               2   12[BANK0 ] int 
 13001 ;; Return value:  Size  Location     Type
 13002 ;;                  2    6[BANK0 ] int 
 13003 ;; Registers used:
 13004 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13005 ;; Tracked objects:
 13006 ;;		On entry : 0/0
 13007 ;;		On exit  : 0/0
 13008 ;;		Unchanged: 0/0
 13009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13010 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13011 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13012 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13013 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13014 ;;Total ram usage:       10 bytes
 13015 ;; Hardware stack levels used:    1
 13016 ;; Hardware stack levels required when called:    4
 13017 ;; This function calls:
 13018 ;;		_fputc
 13019 ;;		_fputs
 13020 ;;		_strlen
 13021 ;; This function is called by:
 13022 ;;		_ctoa
 13023 ;;		_dtoa
 13024 ;;		_efgtoa
 13025 ;;		_otoa
 13026 ;;		_utoa
 13027 ;;		_xtoa
 13028 ;; This function uses a non-reentrant model
 13029 ;;
 13030                           
 13031                           
 13032                           ;psect for function _pad
 13033  2B07                     _pad:	
 13034                           
 13035                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 13036                           
 13037                           ;incstack = 0
 13038                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13039  2B07  0023               	movlb	3	; select bank3
 13040  2B08  1C42               	btfss	_flags^(0+384),0
 13041  2B09  2B13               	goto	l6823
 13042                           
 13043                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 13044  2B0A  0020               	movlb	0	; select bank0
 13045  2B0B  0827               	movf	pad@fp+1,w
 13046  2B0C  00FB               	movwf	fputs@fp+1
 13047  2B0D  0826               	movf	pad@fp,w
 13048  2B0E  00FA               	movwf	fputs@fp
 13049  2B0F  0828               	movf	pad@buf,w
 13050  2B10  31A9  211D  31AB   	fcall	_fputs
 13051  2B13                     l6823:	
 13052                           
 13053                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 13054  2B13  0020               	movlb	0	; select bank0
 13055  2B14  1BAA               	btfsc	pad@p+1,7
 13056  2B15  2B1B               	goto	l6827
 13057  2B16  082A               	movf	pad@p+1,w
 13058  2B17  00AF               	movwf	pad@w+1
 13059  2B18  0829               	movf	pad@p,w
 13060  2B19  00AE               	movwf	pad@w
 13061  2B1A  2B1D               	goto	l501
 13062  2B1B                     l6827:	
 13063  2B1B  01AE               	clrf	pad@w
 13064  2B1C  01AF               	clrf	pad@w+1
 13065  2B1D                     l501:	
 13066                           
 13067                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 13068  2B1D  01AC               	clrf	pad@i
 13069  2B1E  01AD               	clrf	pad@i+1
 13070  2B1F                     l6833:	
 13071                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 13072                           
 13073                           
 13074                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 13075  2B1F  082D               	movf	pad@i+1,w
 13076  2B20  3A80               	xorlw	128
 13077  2B21  00AB               	movwf	??_pad
 13078  2B22  082F               	movf	pad@w+1,w
 13079  2B23  3A80               	xorlw	128
 13080  2B24  022B               	subwf	??_pad,w
 13081  2B25  1D03               	skipz
 13082  2B26  2B29               	goto	u9825
 13083  2B27  082E               	movf	pad@w,w
 13084  2B28  022C               	subwf	pad@i,w
 13085  2B29                     u9825:	
 13086  2B29  1803               	btfsc	3,0
 13087  2B2A  2B3D               	goto	l504
 13088                           
 13089                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 13090  2B2B  3020               	movlw	32
 13091  2B2C  00F1               	movwf	fputc@c
 13092  2B2D  3000               	movlw	0
 13093  2B2E  00F2               	movwf	fputc@c+1
 13094  2B2F  0020               	movlb	0	; select bank0
 13095  2B30  0827               	movf	pad@fp+1,w
 13096  2B31  00F4               	movwf	fputc@fp+1
 13097  2B32  0826               	movf	pad@fp,w
 13098  2B33  00F3               	movwf	fputc@fp
 13099  2B34  3190  200D  31AB   	fcall	_fputc
 13100                           
 13101                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 13102  2B37  3001               	movlw	1
 13103  2B38  0020               	movlb	0	; select bank0
 13104  2B39  07AC               	addwf	pad@i,f
 13105  2B3A  3000               	movlw	0
 13106  2B3B  3DAD               	addwfc	pad@i+1,f
 13107  2B3C  2B1F               	goto	l6833
 13108  2B3D                     l504:	
 13109                           
 13110                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 13111  2B3D  0023               	movlb	3	; select bank3
 13112  2B3E  1842               	btfsc	_flags^(0+384),0
 13113  2B3F  2B49               	goto	l6837
 13114                           
 13115                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 13116  2B40  0020               	movlb	0	; select bank0
 13117  2B41  0827               	movf	pad@fp+1,w
 13118  2B42  00FB               	movwf	fputs@fp+1
 13119  2B43  0826               	movf	pad@fp,w
 13120  2B44  00FA               	movwf	fputs@fp
 13121  2B45  0828               	movf	pad@buf,w
 13122  2B46  31A9  211D  31AB   	fcall	_fputs
 13123  2B49                     l6837:	
 13124                           
 13125                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 13126  2B49  0020               	movlb	0	; select bank0
 13127  2B4A  0828               	movf	pad@buf,w
 13128  2B4B  00F1               	movwf	strlen@s
 13129  2B4C  3002               	movlw	2
 13130  2B4D  00F2               	movwf	strlen@s+1
 13131  2B4E  31B7  271E         	fcall	_strlen
 13132  2B50  0020               	movlb	0	; select bank0
 13133  2B51  082E               	movf	pad@w,w
 13134  2B52  0771               	addwf	?_strlen,w
 13135  2B53  00A6               	movwf	?_pad
 13136  2B54  082F               	movf	pad@w+1,w
 13137  2B55  3D72               	addwfc	?_strlen+1,w
 13138  2B56  00A7               	movwf	?_pad+1
 13139  2B57  0008               	return
 13140  2B58                     __end_of_pad:	
 13141                           
 13142                           	psect	text35
 13143  371E                     __ptext35:	
 13144 ;; *************** function _strlen *****************
 13145 ;; Defined at:
 13146 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 13147 ;; Parameters:    Size  Location     Type
 13148 ;;  s               2    1[COMMON] PTR const unsigned char 
 13149 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(80), 
 13150 ;; Auto vars:     Size  Location     Type
 13151 ;;  a               2    3[COMMON] PTR const unsigned char 
 13152 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(80), 
 13153 ;; Return value:  Size  Location     Type
 13154 ;;                  2    1[COMMON] unsigned int 
 13155 ;; Registers used:
 13156 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13157 ;; Tracked objects:
 13158 ;;		On entry : 0/0
 13159 ;;		On exit  : 0/0
 13160 ;;		Unchanged: 0/0
 13161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13162 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13163 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13165 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13166 ;;Total ram usage:        4 bytes
 13167 ;; Hardware stack levels used:    1
 13168 ;; Hardware stack levels required when called:    1
 13169 ;; This function calls:
 13170 ;;		Nothing
 13171 ;; This function is called by:
 13172 ;;		_pad
 13173 ;;		_stoa
 13174 ;; This function uses a non-reentrant model
 13175 ;;
 13176                           
 13177                           
 13178                           ;psect for function _strlen
 13179  371E                     _strlen:	
 13180                           
 13181                           ;incstack = 0
 13182                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 13183  371E  0872               	movf	strlen@s+1,w
 13184  371F  00F4               	movwf	strlen@a+1
 13185  3720  0871               	movf	strlen@s,w
 13186  3721  00F3               	movwf	strlen@a
 13187  3722                     l4105:	
 13188  3722  0871               	movf	strlen@s,w
 13189  3723  0086               	movwf	6
 13190  3724  0872               	movf	strlen@s+1,w
 13191  3725  0087               	movwf	7
 13192  3726  0801               	movf	1,w
 13193  3727  1903               	btfsc	3,2
 13194  3728  2F2E               	goto	l4107
 13195  3729  3001               	movlw	1
 13196  372A  07F1               	addwf	strlen@s,f
 13197  372B  3000               	movlw	0
 13198  372C  3DF2               	addwfc	strlen@s+1,f
 13199  372D  2F22               	goto	l4105
 13200  372E                     l4107:	
 13201  372E  0873               	movf	strlen@a,w
 13202  372F  0271               	subwf	strlen@s,w
 13203  3730  00F1               	movwf	?_strlen
 13204  3731  0874               	movf	strlen@a+1,w
 13205  3732  3B72               	subwfb	strlen@s+1,w
 13206  3733  00F2               	movwf	?_strlen+1
 13207  3734  0008               	return
 13208  3735                     __end_of_strlen:	
 13209                           
 13210                           	psect	text36
 13211  291D                     __ptext36:	
 13212 ;; *************** function _fputs *****************
 13213 ;; Defined at:
 13214 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 13215 ;; Parameters:    Size  Location     Type
 13216 ;;  s               1    wreg     PTR const unsigned char 
 13217 ;;		 -> dbuf(80), 
 13218 ;;  fp              2   10[COMMON] PTR struct _IO_FILE
 13219 ;;		 -> vsnprintf@f(6), 
 13220 ;; Auto vars:     Size  Location     Type
 13221 ;;  s               1    5[BANK0 ] PTR const unsigned char 
 13222 ;;		 -> dbuf(80), 
 13223 ;;  i               2    3[BANK0 ] int 
 13224 ;;  c               1    2[BANK0 ] unsigned char 
 13225 ;; Return value:  Size  Location     Type
 13226 ;;                  2   10[COMMON] int 
 13227 ;; Registers used:
 13228 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13229 ;; Tracked objects:
 13230 ;;		On entry : 0/0
 13231 ;;		On exit  : 0/0
 13232 ;;		Unchanged: 0/0
 13233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13234 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13235 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13236 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13237 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13238 ;;Total ram usage:        8 bytes
 13239 ;; Hardware stack levels used:    1
 13240 ;; Hardware stack levels required when called:    3
 13241 ;; This function calls:
 13242 ;;		_fputc
 13243 ;; This function is called by:
 13244 ;;		_pad
 13245 ;; This function uses a non-reentrant model
 13246 ;;
 13247                           
 13248                           
 13249                           ;psect for function _fputs
 13250  291D                     _fputs:	
 13251                           
 13252                           ;incstack = 0
 13253                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13254                           ;fputs@s stored from wreg
 13255  291D  0020               	movlb	0	; select bank0
 13256  291E  00A5               	movwf	fputs@s
 13257  291F  01A3               	clrf	fputs@i
 13258  2920  01A4               	clrf	fputs@i+1
 13259  2921                     l4099:	
 13260  2921  0823               	movf	fputs@i,w
 13261  2922  0725               	addwf	fputs@s,w
 13262  2923  00A0               	movwf	??_fputs
 13263  2924  0820               	movf	??_fputs,w
 13264  2925  0086               	movwf	6
 13265  2926  3002               	movlw	2	; select bank4/5
 13266  2927  0087               	movwf	7
 13267  2928  0801               	movf	1,w
 13268  2929  00A1               	movwf	??_fputs+1
 13269  292A  0821               	movf	??_fputs+1,w
 13270  292B  00A2               	movwf	fputs@c
 13271  292C  0822               	movf	fputs@c,w
 13272  292D  1903               	btfsc	3,2
 13273  292E  0008               	return
 13274  292F  0822               	movf	fputs@c,w
 13275  2930  00A0               	movwf	??_fputs
 13276  2931  01A1               	clrf	??_fputs+1
 13277  2932  0820               	movf	??_fputs,w
 13278  2933  00F1               	movwf	fputc@c
 13279  2934  0821               	movf	??_fputs+1,w
 13280  2935  00F2               	movwf	fputc@c+1
 13281  2936  087B               	movf	fputs@fp+1,w
 13282  2937  00F4               	movwf	fputc@fp+1
 13283  2938  087A               	movf	fputs@fp,w
 13284  2939  00F3               	movwf	fputc@fp
 13285  293A  3190  200D  31A9   	fcall	_fputc
 13286  293D  3001               	movlw	1
 13287  293E  0020               	movlb	0	; select bank0
 13288  293F  07A3               	addwf	fputs@i,f
 13289  2940  3000               	movlw	0
 13290  2941  3DA4               	addwfc	fputs@i+1,f
 13291  2942  2921               	goto	l4099
 13292  2943                     __end_of_fputs:	
 13293                           
 13294                           	psect	text37
 13295  100D                     __ptext37:	
 13296 ;; *************** function _fputc *****************
 13297 ;; Defined at:
 13298 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 13299 ;; Parameters:    Size  Location     Type
 13300 ;;  c               2    1[COMMON] int 
 13301 ;;  fp              2    3[COMMON] PTR struct _IO_FILE
 13302 ;;		 -> vsnprintf@f(6), 
 13303 ;; Auto vars:     Size  Location     Type
 13304 ;;		None
 13305 ;; Return value:  Size  Location     Type
 13306 ;;                  2    1[COMMON] int 
 13307 ;; Registers used:
 13308 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13309 ;; Tracked objects:
 13310 ;;		On entry : 0/0
 13311 ;;		On exit  : 0/0
 13312 ;;		Unchanged: 0/0
 13313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13314 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13316 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13317 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13318 ;;Total ram usage:        9 bytes
 13319 ;; Hardware stack levels used:    1
 13320 ;; Hardware stack levels required when called:    2
 13321 ;; This function calls:
 13322 ;;		_putch
 13323 ;; This function is called by:
 13324 ;;		_pad
 13325 ;;		_stoa
 13326 ;;		_vfpfcnvrt
 13327 ;;		_fputs
 13328 ;; This function uses a non-reentrant model
 13329 ;;
 13330                           
 13331                           
 13332                           ;psect for function _fputc
 13333  100D                     _fputc:	
 13334                           
 13335                           ;incstack = 0
 13336                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13337  100D  0873               	movf	fputc@fp,w
 13338  100E  0474               	iorwf	fputc@fp+1,w
 13339  100F  1903               	btfsc	3,2
 13340  1010  2815               	goto	l4081
 13341  1011  0873               	movf	fputc@fp,w
 13342  1012  0474               	iorwf	fputc@fp+1,w
 13343  1013  1D03               	btfss	3,2
 13344  1014  2819               	goto	l4083
 13345  1015                     l4081:	
 13346  1015  0871               	movf	fputc@c,w
 13347  1016  3187  27FE         	fcall	_putch
 13348  1018  0008               	return
 13349  1019                     l4083:	
 13350  1019  0873               	movf	fputc@fp,w
 13351  101A  0086               	movwf	6
 13352  101B  0874               	movf	fputc@fp+1,w
 13353  101C  0087               	movwf	7
 13354  101D  3144               	addfsr 1,4
 13355  101E  0016               	moviw fsr1++
 13356  101F  0401               	iorwf	1,w
 13357  1020  1903               	btfsc	3,2
 13358  1021  2840               	goto	l4087
 13359  1022  0873               	movf	fputc@fp,w
 13360  1023  0086               	movwf	6
 13361  1024  0874               	movf	fputc@fp+1,w
 13362  1025  0087               	movwf	7
 13363  1026  3144               	addfsr 1,4
 13364  1027  3F40               	moviw [0]fsr1
 13365  1028  00F5               	movwf	??_fputc
 13366  1029  3F41               	moviw [1]fsr1
 13367  102A  00F6               	movwf	??_fputc+1
 13368  102B  0873               	movf	fputc@fp,w
 13369  102C  0086               	movwf	6
 13370  102D  0874               	movf	fputc@fp+1,w
 13371  102E  0087               	movwf	7
 13372  102F  3142               	addfsr 1,2
 13373  1030  3F40               	moviw [0]fsr1
 13374  1031  00F7               	movwf	??_fputc+2
 13375  1032  3F41               	moviw [1]fsr1
 13376  1033  00F8               	movwf	??_fputc+3
 13377  1034  0878               	movf	??_fputc+3,w
 13378  1035  3A80               	xorlw	128
 13379  1036  00F9               	movwf	??_fputc+4
 13380  1037  0876               	movf	??_fputc+1,w
 13381  1038  3A80               	xorlw	128
 13382  1039  0279               	subwf	??_fputc+4,w
 13383  103A  1D03               	skipz
 13384  103B  283E               	goto	u4725
 13385  103C  0875               	movf	??_fputc,w
 13386  103D  0277               	subwf	??_fputc+2,w
 13387  103E                     u4725:	
 13388  103E  1803               	skipnc
 13389  103F  0008               	return
 13390  1040                     l4087:	
 13391  1040  0873               	movf	fputc@fp,w
 13392  1041  0086               	movwf	6
 13393  1042  0874               	movf	fputc@fp+1,w
 13394  1043  0087               	movwf	7
 13395  1044  3142               	addfsr 1,2
 13396  1045  0873               	movf	fputc@fp,w
 13397  1046  0084               	movwf	4
 13398  1047  0874               	movf	fputc@fp+1,w
 13399  1048  0085               	movwf	5
 13400  1049  3F40               	moviw [0]fsr1
 13401  104A  0700               	addwf	0,w
 13402  104B  00F5               	movwf	??_fputc
 13403  104C  3101               	addfsr 0,1
 13404  104D  3F41               	moviw [1]fsr1
 13405  104E  3D00               	addwfc	0,w
 13406  104F  00F6               	movwf	??_fputc+1
 13407  1050  0875               	movf	??_fputc,w
 13408  1051  0086               	movwf	6
 13409  1052  0876               	movf	??_fputc+1,w
 13410  1053  0087               	movwf	7
 13411  1054  0871               	movf	fputc@c,w
 13412  1055  0081               	movwf	1
 13413  1056  0873               	movf	fputc@fp,w
 13414  1057  0086               	movwf	6
 13415  1058  0874               	movf	fputc@fp+1,w
 13416  1059  0087               	movwf	7
 13417  105A  3142               	addfsr 1,2
 13418  105B  3001               	movlw	1
 13419  105C  0781               	addwf	1,f
 13420  105D  3141               	addfsr 1,1
 13421  105E  1803               	skipnc
 13422  105F  0A81               	incf	1,f
 13423  1060  0008               	return
 13424  1061                     __end_of_fputc:	
 13425                           
 13426                           	psect	text38
 13427  07FE                     __ptext38:	
 13428 ;; *************** function _putch *****************
 13429 ;; Defined at:
 13430 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
 13431 ;; Parameters:    Size  Location     Type
 13432 ;;  c               1    wreg     unsigned char 
 13433 ;; Auto vars:     Size  Location     Type
 13434 ;;  c               1    0[COMMON] unsigned char 
 13435 ;; Return value:  Size  Location     Type
 13436 ;;                  1    wreg      void 
 13437 ;; Registers used:
 13438 ;;		wreg
 13439 ;; Tracked objects:
 13440 ;;		On entry : 0/0
 13441 ;;		On exit  : 0/0
 13442 ;;		Unchanged: 0/0
 13443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13448 ;;Total ram usage:        0 bytes
 13449 ;; Hardware stack levels used:    1
 13450 ;; Hardware stack levels required when called:    1
 13451 ;; This function calls:
 13452 ;;		Nothing
 13453 ;; This function is called by:
 13454 ;;		_fputc
 13455 ;; This function uses a non-reentrant model
 13456 ;;
 13457                           
 13458                           
 13459                           ;psect for function _putch
 13460  07FE                     _putch:	
 13461                           
 13462                           ;incstack = 0
 13463                           ; Regs used in _putch: [wreg]
 13464  07FE  0008               	return
 13465  07FF                     __end_of_putch:	
 13466                           
 13467                           	psect	text39
 13468  205E                     __ptext39:	
 13469 ;; *************** function _atoi *****************
 13470 ;; Defined at:
 13471 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 13472 ;; Parameters:    Size  Location     Type
 13473 ;;  s               2    7[COMMON] PTR const unsigned char 
 13474 ;;		 -> STR_7(44), STR_6(42), STR_3(43), 
 13475 ;; Auto vars:     Size  Location     Type
 13476 ;;  n               2   11[BANK0 ] int 
 13477 ;;  neg             2    4[BANK0 ] int 
 13478 ;; Return value:  Size  Location     Type
 13479 ;;                  2    7[COMMON] int 
 13480 ;; Registers used:
 13481 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13482 ;; Tracked objects:
 13483 ;;		On entry : 0/0
 13484 ;;		On exit  : 0/0
 13485 ;;		Unchanged: 0/0
 13486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13487 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13488 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13489 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13490 ;;      Totals:         2      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13491 ;;Total ram usage:       15 bytes
 13492 ;; Hardware stack levels used:    1
 13493 ;; Hardware stack levels required when called:    2
 13494 ;; This function calls:
 13495 ;;		___wmul
 13496 ;;		_isdigit
 13497 ;;		_isspace
 13498 ;; This function is called by:
 13499 ;;		_vfpfcnvrt
 13500 ;; This function uses a non-reentrant model
 13501 ;;
 13502                           
 13503                           
 13504                           ;psect for function _atoi
 13505  205E                     _atoi:	
 13506                           
 13507                           ;incstack = 0
 13508                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13509  205E  0020               	movlb	0	; select bank0
 13510  205F  01AB               	clrf	atoi@n
 13511  2060  01AC               	clrf	atoi@n+1
 13512  2061  01A4               	clrf	atoi@neg
 13513  2062  01A5               	clrf	atoi@neg+1
 13514  2063                     l7441:	
 13515  2063  01AA               	clrf	_atoi$1473
 13516  2064  0AAA               	incf	_atoi$1473,f
 13517  2065  0877               	movf	atoi@s,w
 13518  2066  0084               	movwf	4
 13519  2067  0878               	movf	atoi@s+1,w
 13520  2068  0085               	movwf	5
 13521  2069  0012               	moviw fsr0++
 13522  206A  3A20               	xorlw	32
 13523  206B  1903               	btfsc	3,2
 13524  206C  287F               	goto	l7449
 13525  206D  0877               	movf	atoi@s,w
 13526  206E  0084               	movwf	4
 13527  206F  0878               	movf	atoi@s+1,w
 13528  2070  0085               	movwf	5
 13529  2071  0800               	movf	0,w	;code access
 13530  2072  3EF7               	addlw	247
 13531  2073  00A0               	movwf	??_atoi
 13532  2074  30FF               	movlw	255
 13533  2075  1803               	skipnc
 13534  2076  3000               	movlw	0
 13535  2077  00A1               	movwf	??_atoi+1
 13536  2078  3000               	movlw	0
 13537  2079  0221               	subwf	??_atoi+1,w
 13538  207A  3005               	movlw	5
 13539  207B  1903               	skipnz
 13540  207C  0220               	subwf	??_atoi,w
 13541  207D  1803               	btfsc	3,0
 13542  207E  01AA               	clrf	_atoi$1473
 13543  207F                     l7449:	
 13544  207F  082A               	movf	_atoi$1473,w
 13545  2080  00A0               	movwf	??_atoi
 13546  2081  01A1               	clrf	??_atoi+1
 13547  2082  0820               	movf	??_atoi,w
 13548  2083  00A6               	movwf	_atoi$1472
 13549  2084  0821               	movf	??_atoi+1,w
 13550  2085  00A7               	movwf	_atoi$1472+1
 13551  2086  0826               	movf	_atoi$1472,w
 13552  2087  0427               	iorwf	_atoi$1472+1,w
 13553  2088  1903               	btfsc	3,2
 13554  2089  2894               	goto	l7457
 13555  208A  3001               	movlw	1
 13556  208B  07F7               	addwf	atoi@s,f
 13557  208C  3000               	movlw	0
 13558  208D  3DF8               	addwfc	atoi@s+1,f
 13559  208E  2863               	goto	l7441
 13560  208F                     l7455:	
 13561  208F  3001               	movlw	1
 13562  2090  00A4               	movwf	atoi@neg
 13563  2091  3000               	movlw	0
 13564  2092  00A5               	movwf	atoi@neg+1
 13565  2093  28C7               	goto	l1305
 13566  2094                     l7457:	
 13567  2094  0877               	movf	atoi@s,w
 13568  2095  0084               	movwf	4
 13569  2096  0878               	movf	atoi@s+1,w
 13570  2097  0085               	movwf	5
 13571  2098  0800               	movf	0,w	;code access
 13572  2099  00A0               	movwf	??_atoi
 13573  209A  01A1               	clrf	??_atoi+1
 13574                           
 13575                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13576                           ; Switch size 1, requested type "simple"
 13577                           ; Number of cases is 1, Range of values is 0 to 0
 13578                           ; switch strategies available:
 13579                           ; Name         Instructions Cycles
 13580                           ; simple_byte            4     3 (average)
 13581                           ; direct_byte            8     6 (fixed)
 13582                           ; jumptable            260     6 (fixed)
 13583                           ;	Chosen strategy is simple_byte
 13584  209B  0821               	movf	??_atoi+1,w
 13585  209C  3A00               	xorlw	0	; case 0
 13586  209D  1903               	skipnz
 13587  209E  28A0               	goto	l8203
 13588  209F  28CB               	goto	l7463
 13589  20A0                     l8203:	
 13590                           
 13591                           ; Switch size 1, requested type "simple"
 13592                           ; Number of cases is 2, Range of values is 43 to 45
 13593                           ; switch strategies available:
 13594                           ; Name         Instructions Cycles
 13595                           ; simple_byte            7     4 (average)
 13596                           ; direct_byte           15     9 (fixed)
 13597                           ; jumptable            263     9 (fixed)
 13598                           ;	Chosen strategy is simple_byte
 13599  20A0  0820               	movf	??_atoi,w
 13600  20A1  3A2B               	xorlw	43	; case 43
 13601  20A2  1903               	skipnz
 13602  20A3  28C7               	goto	l1305
 13603  20A4  3A06               	xorlw	6	; case 45
 13604  20A5  1903               	skipnz
 13605  20A6  288F               	goto	l7455
 13606  20A7  28CB               	goto	l7463
 13607  20A8                     l7459:	
 13608  20A8  0877               	movf	atoi@s,w
 13609  20A9  0084               	movwf	4
 13610  20AA  0878               	movf	atoi@s+1,w
 13611  20AB  0085               	movwf	5
 13612  20AC  0800               	movf	0,w	;code access
 13613  20AD  00A0               	movwf	??_atoi
 13614  20AE  082C               	movf	atoi@n+1,w
 13615  20AF  00F2               	movwf	___wmul@multiplier+1
 13616  20B0  082B               	movf	atoi@n,w
 13617  20B1  00F1               	movwf	___wmul@multiplier
 13618  20B2  300A               	movlw	10
 13619  20B3  00F3               	movwf	___wmul@multiplicand
 13620  20B4  3000               	movlw	0
 13621  20B5  00F4               	movwf	___wmul@multiplicand+1
 13622  20B6  31A8  2000  31A0   	fcall	___wmul
 13623  20B9  0872               	movf	?___wmul+1,w
 13624  20BA  0020               	movlb	0	; select bank0
 13625  20BB  00A2               	movwf	??_atoi+2
 13626  20BC  0820               	movf	??_atoi,w
 13627  20BD  0271               	subwf	?___wmul,w
 13628  20BE  00A1               	movwf	??_atoi+1
 13629  20BF  1C03               	skipc
 13630  20C0  03A2               	decf	??_atoi+2,f
 13631  20C1  0821               	movf	??_atoi+1,w
 13632  20C2  3E30               	addlw	48
 13633  20C3  00AB               	movwf	atoi@n
 13634  20C4  3000               	movlw	0
 13635  20C5  3D22               	addwfc	??_atoi+2,w
 13636  20C6  00AC               	movwf	atoi@n+1
 13637  20C7                     l1305:	
 13638  20C7  3001               	movlw	1
 13639  20C8  07F7               	addwf	atoi@s,f
 13640  20C9  3000               	movlw	0
 13641  20CA  3DF8               	addwfc	atoi@s+1,f
 13642  20CB                     l7463:	
 13643  20CB  0877               	movf	atoi@s,w
 13644  20CC  0084               	movwf	4
 13645  20CD  0878               	movf	atoi@s+1,w
 13646  20CE  0085               	movwf	5
 13647  20CF  0800               	movf	0,w	;code access
 13648  20D0  3ED0               	addlw	208
 13649  20D1  00A0               	movwf	??_atoi
 13650  20D2  30FF               	movlw	255
 13651  20D3  1803               	skipnc
 13652  20D4  3000               	movlw	0
 13653  20D5  00A1               	movwf	??_atoi+1
 13654  20D6  3000               	movlw	0
 13655  20D7  0221               	subwf	??_atoi+1,w
 13656  20D8  300A               	movlw	10
 13657  20D9  1903               	skipnz
 13658  20DA  0220               	subwf	??_atoi,w
 13659  20DB  1803               	btfsc	3,0
 13660  20DC  28DF               	goto	u11080
 13661  20DD  3001               	movlw	1
 13662  20DE  28E0               	goto	u11090
 13663  20DF                     u11080:	
 13664  20DF  3000               	movlw	0
 13665  20E0                     u11090:	
 13666  20E0  00A2               	movwf	??_atoi+2
 13667  20E1  01A3               	clrf	??_atoi+3
 13668  20E2  0822               	movf	??_atoi+2,w
 13669  20E3  00A8               	movwf	_atoi$1474
 13670  20E4  0823               	movf	??_atoi+3,w
 13671  20E5  00A9               	movwf	_atoi$1474+1
 13672  20E6  0828               	movf	_atoi$1474,w
 13673  20E7  0429               	iorwf	_atoi$1474+1,w
 13674  20E8  1D03               	btfss	3,2
 13675  20E9  28A8               	goto	l7459
 13676  20EA  0824               	movf	atoi@neg,w
 13677  20EB  0425               	iorwf	atoi@neg+1,w
 13678  20EC  1D03               	btfss	3,2
 13679  20ED  28FA               	goto	l7473
 13680  20EE  092B               	comf	atoi@n,w
 13681  20EF  00A0               	movwf	??_atoi
 13682  20F0  092C               	comf	atoi@n+1,w
 13683  20F1  00A1               	movwf	??_atoi+1
 13684  20F2  0AA0               	incf	??_atoi,f
 13685  20F3  1903               	skipnz
 13686  20F4  0AA1               	incf	??_atoi+1,f
 13687  20F5  0820               	movf	??_atoi,w
 13688  20F6  00F7               	movwf	?_atoi
 13689  20F7  0821               	movf	??_atoi+1,w
 13690  20F8  00F8               	movwf	?_atoi+1
 13691  20F9  0008               	return
 13692  20FA                     l7473:	
 13693  20FA  082C               	movf	atoi@n+1,w
 13694  20FB  00F8               	movwf	?_atoi+1
 13695  20FC  082B               	movf	atoi@n,w
 13696  20FD  00F7               	movwf	?_atoi
 13697  20FE  0008               	return
 13698  20FF                     __end_of_atoi:	
 13699                           
 13700                           	psect	text40
 13701  37C7                     __ptext40:	
 13702 ;; *************** function _isspace *****************
 13703 ;; Defined at:
 13704 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 13705 ;; Parameters:    Size  Location     Type
 13706 ;;  c               2    1[COMMON] int 
 13707 ;; Auto vars:     Size  Location     Type
 13708 ;;		None
 13709 ;; Return value:  Size  Location     Type
 13710 ;;                  2    1[COMMON] int 
 13711 ;; Registers used:
 13712 ;;		wreg, status,2, status,0
 13713 ;; Tracked objects:
 13714 ;;		On entry : 0/0
 13715 ;;		On exit  : 0/0
 13716 ;;		Unchanged: 0/0
 13717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13718 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13719 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13720 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13721 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13722 ;;Total ram usage:        5 bytes
 13723 ;; Hardware stack levels used:    1
 13724 ;; Hardware stack levels required when called:    1
 13725 ;; This function calls:
 13726 ;;		Nothing
 13727 ;; This function is called by:
 13728 ;;		_atoi
 13729 ;; This function uses a non-reentrant model
 13730 ;;
 13731                           
 13732                           
 13733                           ;psect for function _isspace
 13734  37C7                     _isspace:	
 13735                           
 13736                           ;incstack = 0
 13737                           ; Regs used in _isspace: [wreg+status,2+status,0]
 13738  37C7  01F5               	clrf	_isspace$1512
 13739  37C8  0AF5               	incf	_isspace$1512,f
 13740  37C9  3020               	movlw	32
 13741  37CA  0671               	xorwf	isspace@c,w
 13742  37CB  0472               	iorwf	isspace@c+1,w
 13743  37CC  1903               	btfsc	3,2
 13744  37CD  2FDB               	goto	l5011
 13745  37CE  0871               	movf	isspace@c,w
 13746  37CF  3EF7               	addlw	247
 13747  37D0  00F3               	movwf	??_isspace
 13748  37D1  30FF               	movlw	255
 13749  37D2  3D72               	addwfc	isspace@c+1,w
 13750  37D3  00F4               	movwf	??_isspace+1
 13751  37D4  3000               	movlw	0
 13752  37D5  0274               	subwf	??_isspace+1,w
 13753  37D6  3005               	movlw	5
 13754  37D7  1903               	skipnz
 13755  37D8  0273               	subwf	??_isspace,w
 13756  37D9  1803               	btfsc	3,0
 13757  37DA  01F5               	clrf	_isspace$1512
 13758  37DB                     l5011:	
 13759  37DB  0875               	movf	_isspace$1512,w
 13760  37DC  00F3               	movwf	??_isspace
 13761  37DD  01F4               	clrf	??_isspace+1
 13762  37DE  0873               	movf	??_isspace,w
 13763  37DF  00F1               	movwf	?_isspace
 13764  37E0  0874               	movf	??_isspace+1,w
 13765  37E1  00F2               	movwf	?_isspace+1
 13766  37E2  0008               	return
 13767  37E3                     __end_of_isspace:	
 13768                           
 13769                           	psect	text41
 13770  3707                     __ptext41:	
 13771 ;; *************** function _isdigit *****************
 13772 ;; Defined at:
 13773 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 13774 ;; Parameters:    Size  Location     Type
 13775 ;;  c               2    1[COMMON] int 
 13776 ;; Auto vars:     Size  Location     Type
 13777 ;;		None
 13778 ;; Return value:  Size  Location     Type
 13779 ;;                  2    1[COMMON] int 
 13780 ;; Registers used:
 13781 ;;		wreg, status,2, status,0
 13782 ;; Tracked objects:
 13783 ;;		On entry : 0/0
 13784 ;;		On exit  : 0/0
 13785 ;;		Unchanged: 0/0
 13786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13787 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13789 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13790 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13791 ;;Total ram usage:        6 bytes
 13792 ;; Hardware stack levels used:    1
 13793 ;; Hardware stack levels required when called:    1
 13794 ;; This function calls:
 13795 ;;		Nothing
 13796 ;; This function is called by:
 13797 ;;		_vfpfcnvrt
 13798 ;;		_atoi
 13799 ;; This function uses a non-reentrant model
 13800 ;;
 13801                           
 13802                           
 13803                           ;psect for function _isdigit
 13804  3707                     _isdigit:	
 13805                           
 13806                           ;incstack = 0
 13807                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 13808  3707  0871               	movf	isdigit@c,w
 13809  3708  3ED0               	addlw	208
 13810  3709  00F3               	movwf	??_isdigit
 13811  370A  30FF               	movlw	255
 13812  370B  3D72               	addwfc	isdigit@c+1,w
 13813  370C  00F4               	movwf	??_isdigit+1
 13814  370D  3000               	movlw	0
 13815  370E  0274               	subwf	??_isdigit+1,w
 13816  370F  300A               	movlw	10
 13817  3710  1903               	skipnz
 13818  3711  0273               	subwf	??_isdigit,w
 13819  3712  1803               	btfsc	3,0
 13820  3713  2F16               	goto	u5580
 13821  3714  3001               	movlw	1
 13822  3715  2F17               	goto	u5590
 13823  3716                     u5580:	
 13824  3716  3000               	movlw	0
 13825  3717                     u5590:	
 13826  3717  00F5               	movwf	??_isdigit+2
 13827  3718  01F6               	clrf	??_isdigit+3
 13828  3719  0875               	movf	??_isdigit+2,w
 13829  371A  00F1               	movwf	?_isdigit
 13830  371B  0876               	movf	??_isdigit+3,w
 13831  371C  00F2               	movwf	?_isdigit+1
 13832  371D  0008               	return
 13833  371E                     __end_of_isdigit:	
 13834                           
 13835                           	psect	text42
 13836  296B                     __ptext42:	
 13837 ;; *************** function _init_AFE *****************
 13838 ;; Defined at:
 13839 ;;		line 6 in file "BQ76920.c"
 13840 ;; Parameters:    Size  Location     Type
 13841 ;;		None
 13842 ;; Auto vars:     Size  Location     Type
 13843 ;;		None
 13844 ;; Return value:  Size  Location     Type
 13845 ;;                  1    wreg      void 
 13846 ;; Registers used:
 13847 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13848 ;; Tracked objects:
 13849 ;;		On entry : 0/0
 13850 ;;		On exit  : 0/0
 13851 ;;		Unchanged: 0/0
 13852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13857 ;;Total ram usage:        0 bytes
 13858 ;; Hardware stack levels used:    1
 13859 ;; Hardware stack levels required when called:    4
 13860 ;; This function calls:
 13861 ;;		_setShortCircuitProtection
 13862 ;;		_setShuntResistorValue
 13863 ;;		_setTemperatureLimitsint
 13864 ;; This function is called by:
 13865 ;;		_statemachine
 13866 ;; This function uses a non-reentrant model
 13867 ;;
 13868                           
 13869                           
 13870                           ;psect for function _init_AFE
 13871  296B                     _init_AFE:	
 13872                           
 13873                           ;BQ76920.c: 8:     setTemperatureLimitsint(-20, 45, 0, 45);
 13874                           
 13875                           ;incstack = 0
 13876                           ; Regs used in _init_AFE: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13877  296B  30EC               	movlw	236
 13878  296C  0020               	movlb	0	; select bank0
 13879  296D  00A0               	movwf	setTemperatureLimitsint@minDischarge_degC
 13880  296E  30FF               	movlw	255
 13881  296F  00A1               	movwf	setTemperatureLimitsint@minDischarge_degC+1
 13882  2970  302D               	movlw	45
 13883  2971  00A2               	movwf	setTemperatureLimitsint@maxDischarge_degC
 13884  2972  3000               	movlw	0
 13885  2973  00A3               	movwf	setTemperatureLimitsint@maxDischarge_degC+1
 13886  2974  3000               	movlw	0
 13887  2975  00A4               	movwf	setTemperatureLimitsint@minCharge_degC
 13888  2976  00A5               	movwf	setTemperatureLimitsint@minCharge_degC+1
 13889  2977  302D               	movlw	45
 13890  2978  00A6               	movwf	setTemperatureLimitsint@maxCharge_degC
 13891  2979  3000               	movlw	0
 13892  297A  00A7               	movwf	setTemperatureLimitsint@maxCharge_degC+1
 13893  297B  31AA  2235  31A9   	fcall	_setTemperatureLimitsint
 13894                           
 13895                           ;BQ76920.c: 9:     setShuntResistorValue(0.02);
 13896  297E  303C               	movlw	60
 13897  297F  00F4               	movwf	setShuntResistorValue@res_mOhm+3
 13898  2980  30A3               	movlw	163
 13899  2981  00F3               	movwf	setShuntResistorValue@res_mOhm+2
 13900  2982  30D7               	movlw	215
 13901  2983  00F2               	movwf	setShuntResistorValue@res_mOhm+1
 13902  2984  300A               	movlw	10
 13903  2985  00F1               	movwf	setShuntResistorValue@res_mOhm
 13904  2986  31B6  26ED  31A9   	fcall	_setShuntResistorValue
 13905                           
 13906                           ;BQ76920.c: 10:     setShortCircuitProtection(40000, 200);
 13907  2989  3000               	movlw	0
 13908  298A  0020               	movlb	0	; select bank0
 13909  298B  00E6               	movwf	setShortCircuitProtection@current_mA+3
 13910  298C  3000               	movlw	0
 13911  298D  00E5               	movwf	setShortCircuitProtection@current_mA+2
 13912  298E  309C               	movlw	156
 13913  298F  00E4               	movwf	setShortCircuitProtection@current_mA+1
 13914  2990  3040               	movlw	64
 13915  2991  00E3               	movwf	setShortCircuitProtection@current_mA
 13916  2992  30C8               	movlw	200
 13917  2993  00E7               	movwf	setShortCircuitProtection@delay_us
 13918  2994  3000               	movlw	0
 13919  2995  00E8               	movwf	setShortCircuitProtection@delay_us+1
 13920  2996  3186  26D5         	fcall	_setShortCircuitProtection
 13921  2998  0008               	return
 13922  2999                     __end_of_init_AFE:	
 13923                           
 13924                           	psect	text43
 13925  2A35                     __ptext43:	
 13926 ;; *************** function _setTemperatureLimitsint *****************
 13927 ;; Defined at:
 13928 ;;		line 61 in file "BQ76920.c"
 13929 ;; Parameters:    Size  Location     Type
 13930 ;;  minDischarge    2    0[BANK0 ] int 
 13931 ;;  maxDischarge    2    2[BANK0 ] int 
 13932 ;;  minCharge_de    2    4[BANK0 ] int 
 13933 ;;  maxCharge_de    2    6[BANK0 ] int 
 13934 ;; Auto vars:     Size  Location     Type
 13935 ;;		None
 13936 ;; Return value:  Size  Location     Type
 13937 ;;                  1    wreg      void 
 13938 ;; Registers used:
 13939 ;;		wreg, status,2, status,0, pclath, cstack
 13940 ;; Tracked objects:
 13941 ;;		On entry : 0/0
 13942 ;;		On exit  : 0/0
 13943 ;;		Unchanged: 0/0
 13944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13945 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13948 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13949 ;;Total ram usage:        8 bytes
 13950 ;; Hardware stack levels used:    1
 13951 ;; Hardware stack levels required when called:    2
 13952 ;; This function calls:
 13953 ;;		___wmul
 13954 ;; This function is called by:
 13955 ;;		_init_AFE
 13956 ;; This function uses a non-reentrant model
 13957 ;;
 13958                           
 13959                           
 13960                           ;psect for function _setTemperatureLimitsint
 13961  2A35                     _setTemperatureLimitsint:	
 13962                           
 13963                           ;BQ76920.c: 63:     minCellTempDischarge = minDischarge_degC * 10;
 13964                           
 13965                           ;incstack = 0
 13966                           ; Regs used in _setTemperatureLimitsint: [wreg+status,2+status,0+pclath+cstack]
 13967  2A35  0020               	movlb	0	; select bank0
 13968  2A36  0821               	movf	setTemperatureLimitsint@minDischarge_degC+1,w
 13969  2A37  00F2               	movwf	___wmul@multiplier+1
 13970  2A38  0820               	movf	setTemperatureLimitsint@minDischarge_degC,w
 13971  2A39  00F1               	movwf	___wmul@multiplier
 13972  2A3A  300A               	movlw	10
 13973  2A3B  00F3               	movwf	___wmul@multiplicand
 13974  2A3C  3000               	movlw	0
 13975  2A3D  00F4               	movwf	___wmul@multiplicand+1
 13976  2A3E  31A8  2000  31AA   	fcall	___wmul
 13977  2A41  0872               	movf	?___wmul+1,w
 13978  2A42  0023               	movlb	3	; select bank3
 13979  2A43  00C9               	movwf	(_minCellTempDischarge+1)^(0+384)
 13980  2A44  0871               	movf	?___wmul,w
 13981  2A45  00C8               	movwf	_minCellTempDischarge^(0+384)
 13982                           
 13983                           ;BQ76920.c: 64:     maxCellTempDischarge = maxDischarge_degC * 10;
 13984  2A46  0020               	movlb	0	; select bank0
 13985  2A47  0823               	movf	setTemperatureLimitsint@maxDischarge_degC+1,w
 13986  2A48  00F2               	movwf	___wmul@multiplier+1
 13987  2A49  0822               	movf	setTemperatureLimitsint@maxDischarge_degC,w
 13988  2A4A  00F1               	movwf	___wmul@multiplier
 13989  2A4B  300A               	movlw	10
 13990  2A4C  00F3               	movwf	___wmul@multiplicand
 13991  2A4D  3000               	movlw	0
 13992  2A4E  00F4               	movwf	___wmul@multiplicand+1
 13993  2A4F  31A8  2000  31AA   	fcall	___wmul
 13994  2A52  0872               	movf	?___wmul+1,w
 13995  2A53  0023               	movlb	3	; select bank3
 13996  2A54  00C5               	movwf	(_maxCellTempDischarge+1)^(0+384)
 13997  2A55  0871               	movf	?___wmul,w
 13998  2A56  00C4               	movwf	_maxCellTempDischarge^(0+384)
 13999                           
 14000                           ;BQ76920.c: 65:     minCellTempCharge = minCharge_degC * 10;
 14001  2A57  0020               	movlb	0	; select bank0
 14002  2A58  0825               	movf	setTemperatureLimitsint@minCharge_degC+1,w
 14003  2A59  00F2               	movwf	___wmul@multiplier+1
 14004  2A5A  0824               	movf	setTemperatureLimitsint@minCharge_degC,w
 14005  2A5B  00F1               	movwf	___wmul@multiplier
 14006  2A5C  300A               	movlw	10
 14007  2A5D  00F3               	movwf	___wmul@multiplicand
 14008  2A5E  3000               	movlw	0
 14009  2A5F  00F4               	movwf	___wmul@multiplicand+1
 14010  2A60  31A8  2000  31AA   	fcall	___wmul
 14011  2A63  0872               	movf	?___wmul+1,w
 14012  2A64  0023               	movlb	3	; select bank3
 14013  2A65  00CB               	movwf	(_minCellTempCharge+1)^(0+384)
 14014  2A66  0871               	movf	?___wmul,w
 14015  2A67  00CA               	movwf	_minCellTempCharge^(0+384)
 14016                           
 14017                           ;BQ76920.c: 66:     maxCellTempCharge = maxCharge_degC * 10;
 14018  2A68  0020               	movlb	0	; select bank0
 14019  2A69  0827               	movf	setTemperatureLimitsint@maxCharge_degC+1,w
 14020  2A6A  00F2               	movwf	___wmul@multiplier+1
 14021  2A6B  0826               	movf	setTemperatureLimitsint@maxCharge_degC,w
 14022  2A6C  00F1               	movwf	___wmul@multiplier
 14023  2A6D  300A               	movlw	10
 14024  2A6E  00F3               	movwf	___wmul@multiplicand
 14025  2A6F  3000               	movlw	0
 14026  2A70  00F4               	movwf	___wmul@multiplicand+1
 14027  2A71  31A8  2000         	fcall	___wmul
 14028  2A73  0872               	movf	?___wmul+1,w
 14029  2A74  0023               	movlb	3	; select bank3
 14030  2A75  00C7               	movwf	(_maxCellTempCharge+1)^(0+384)
 14031  2A76  0871               	movf	?___wmul,w
 14032  2A77  00C6               	movwf	_maxCellTempCharge^(0+384)
 14033  2A78  0008               	return
 14034  2A79                     __end_of_setTemperatureLimitsint:	
 14035                           
 14036                           	psect	text44
 14037  2800                     __ptext44:	
 14038 ;; *************** function ___wmul *****************
 14039 ;; Defined at:
 14040 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 14041 ;; Parameters:    Size  Location     Type
 14042 ;;  multiplier      2    1[COMMON] unsigned int 
 14043 ;;  multiplicand    2    3[COMMON] unsigned int 
 14044 ;; Auto vars:     Size  Location     Type
 14045 ;;  product         2    5[COMMON] unsigned int 
 14046 ;; Return value:  Size  Location     Type
 14047 ;;                  2    1[COMMON] unsigned int 
 14048 ;; Registers used:
 14049 ;;		wreg, status,2, status,0
 14050 ;; Tracked objects:
 14051 ;;		On entry : 0/0
 14052 ;;		On exit  : 0/0
 14053 ;;		Unchanged: 0/0
 14054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14055 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14056 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14058 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14059 ;;Total ram usage:        6 bytes
 14060 ;; Hardware stack levels used:    1
 14061 ;; Hardware stack levels required when called:    1
 14062 ;; This function calls:
 14063 ;;		Nothing
 14064 ;; This function is called by:
 14065 ;;		_setTemperatureLimitsint
 14066 ;;		_atoi
 14067 ;; This function uses a non-reentrant model
 14068 ;;
 14069                           
 14070                           
 14071                           ;psect for function ___wmul
 14072  2800                     ___wmul:	
 14073                           
 14074                           ;incstack = 0
 14075                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 14076  2800  01F5               	clrf	___wmul@product
 14077  2801  01F6               	clrf	___wmul@product+1
 14078  2802                     l4441:	
 14079  2802  1C71               	btfss	___wmul@multiplier,0
 14080  2803  2808               	goto	l819
 14081  2804  0873               	movf	___wmul@multiplicand,w
 14082  2805  07F5               	addwf	___wmul@product,f
 14083  2806  0874               	movf	___wmul@multiplicand+1,w
 14084  2807  3DF6               	addwfc	___wmul@product+1,f
 14085  2808                     l819:	
 14086  2808  3001               	movlw	1
 14087  2809                     u5615:	
 14088  2809  35F3               	lslf	___wmul@multiplicand,f
 14089  280A  0DF4               	rlf	___wmul@multiplicand+1,f
 14090  280B  0B89               	decfsz	9,f
 14091  280C  2809               	goto	u5615
 14092  280D  3001               	movlw	1
 14093  280E                     u5625:	
 14094  280E  36F2               	lsrf	___wmul@multiplier+1,f
 14095  280F  0CF1               	rrf	___wmul@multiplier,f
 14096  2810  0B89               	decfsz	9,f
 14097  2811  280E               	goto	u5625
 14098  2812  0871               	movf	___wmul@multiplier,w
 14099  2813  0472               	iorwf	___wmul@multiplier+1,w
 14100  2814  1D03               	btfss	3,2
 14101  2815  2802               	goto	l4441
 14102  2816  0876               	movf	___wmul@product+1,w
 14103  2817  00F2               	movwf	?___wmul+1
 14104  2818  0875               	movf	___wmul@product,w
 14105  2819  00F1               	movwf	?___wmul
 14106  281A  0008               	return
 14107  281B                     __end_of___wmul:	
 14108                           
 14109                           	psect	text45
 14110  36ED                     __ptext45:	
 14111 ;; *************** function _setShuntResistorValue *****************
 14112 ;; Defined at:
 14113 ;;		line 73 in file "BQ76920.c"
 14114 ;; Parameters:    Size  Location     Type
 14115 ;;  res_mOhm        4    1[COMMON] float 
 14116 ;; Auto vars:     Size  Location     Type
 14117 ;;		None
 14118 ;; Return value:  Size  Location     Type
 14119 ;;                  1    wreg      void 
 14120 ;; Registers used:
 14121 ;;		wreg
 14122 ;; Tracked objects:
 14123 ;;		On entry : 0/0
 14124 ;;		On exit  : 0/0
 14125 ;;		Unchanged: 0/0
 14126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14127 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14130 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14131 ;;Total ram usage:        4 bytes
 14132 ;; Hardware stack levels used:    1
 14133 ;; Hardware stack levels required when called:    1
 14134 ;; This function calls:
 14135 ;;		Nothing
 14136 ;; This function is called by:
 14137 ;;		_init_AFE
 14138 ;; This function uses a non-reentrant model
 14139 ;;
 14140                           
 14141                           
 14142                           ;psect for function _setShuntResistorValue
 14143  36ED                     _setShuntResistorValue:	
 14144                           
 14145                           ;BQ76920.c: 74:     shuntResistorValue_mOhm = res_mOhm;
 14146                           
 14147                           ;incstack = 0
 14148                           ; Regs used in _setShuntResistorValue: [wreg]
 14149  36ED  0874               	movf	setShuntResistorValue@res_mOhm+3,w
 14150  36EE  0023               	movlb	3	; select bank3
 14151  36EF  00B5               	movwf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384)
 14152  36F0  0873               	movf	setShuntResistorValue@res_mOhm+2,w
 14153  36F1  00B4               	movwf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384)
 14154  36F2  0872               	movf	setShuntResistorValue@res_mOhm+1,w
 14155  36F3  00B3               	movwf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384)
 14156  36F4  0871               	movf	setShuntResistorValue@res_mOhm,w
 14157  36F5  00B2               	movwf	BQ76920@shuntResistorValue_mOhm^(0+384)
 14158  36F6  0008               	return
 14159  36F7                     __end_of_setShuntResistorValue:	
 14160                           
 14161                           	psect	text46
 14162  06D5                     __ptext46:	
 14163 ;; *************** function _setShortCircuitProtection *****************
 14164 ;; Defined at:
 14165 ;;		line 81 in file "BQ76920.c"
 14166 ;; Parameters:    Size  Location     Type
 14167 ;;  current_mA      4   67[BANK0 ] long 
 14168 ;;  delay_us        2   71[BANK0 ] int 
 14169 ;; Auto vars:     Size  Location     Type
 14170 ;;  value           2   10[BANK1 ] int 
 14171 ;;  i               2   14[BANK1 ] int 
 14172 ;;  i               2   12[BANK1 ] int 
 14173 ;;  scaler          4    2[BANK1 ] float 
 14174 ;;  temp            2    0[BANK1 ] int 
 14175 ;; Return value:  Size  Location     Type
 14176 ;;                  1    wreg      void 
 14177 ;; Registers used:
 14178 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14179 ;; Tracked objects:
 14180 ;;		On entry : 0/0
 14181 ;;		On exit  : 0/0
 14182 ;;		Unchanged: 0/0
 14183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14184 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14185 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14186 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14187 ;;      Totals:         0       9      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14188 ;;Total ram usage:       25 bytes
 14189 ;; Hardware stack levels used:    1
 14190 ;; Hardware stack levels required when called:    3
 14191 ;; This function calls:
 14192 ;;		___fldiv
 14193 ;;		___flmul
 14194 ;;		___fltol
 14195 ;;		___xxtofl
 14196 ;; This function is called by:
 14197 ;;		_init_AFE
 14198 ;; This function uses a non-reentrant model
 14199 ;;
 14200                           
 14201                           
 14202                           ;psect for function _setShortCircuitProtection
 14203  06D5                     _setShortCircuitProtection:	
 14204                           
 14205                           ;BQ76920.c: 86:     float scaler = 100.0;
 14206                           
 14207                           ;incstack = 0
 14208                           ; Regs used in _setShortCircuitProtection: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14209  06D5  3042               	movlw	66
 14210  06D6  0021               	movlb	1	; select bank1
 14211  06D7  00A5               	movwf	(setShortCircuitProtection@scaler+3)^(0+128)
 14212  06D8  30C8               	movlw	200
 14213  06D9  00A4               	movwf	(setShortCircuitProtection@scaler+2)^(0+128)
 14214  06DA  3000               	movlw	0
 14215  06DB  00A3               	movwf	(setShortCircuitProtection@scaler+1)^(0+128)
 14216  06DC  3000               	movlw	0
 14217  06DD  00A2               	movwf	setShortCircuitProtection@scaler^(0+128)
 14218                           
 14219                           ;BQ76920.c: 87:     int temp = 0;
 14220  06DE  01A0               	clrf	setShortCircuitProtection@temp^(0+128)
 14221  06DF  01A1               	clrf	(setShortCircuitProtection@temp+1)^(0+128)
 14222                           
 14223                           ;BQ76920.c: 88:     protect1.bits.SCD_THRESH = 0;
 14224  06E0  30F8               	movlw	-8
 14225  06E1  0023               	movlb	3	; select bank3
 14226  06E2  05D0               	andwf	_protect1^(0+384),f
 14227                           
 14228                           ;BQ76920.c: 90:         for (int i = 0; i < 8; i++) {
 14229  06E3  0021               	movlb	1	; select bank1
 14230  06E4  01AC               	clrf	setShortCircuitProtection@i^(0+128)
 14231  06E5  01AD               	clrf	(setShortCircuitProtection@i+1)^(0+128)
 14232  06E6                     l6237:	
 14233                           
 14234                           ;BQ76920.c: 91:             int value = (current_mA * shuntResistorValue_mOhm * scaler) 
      +                          / 1000;
 14235  06E6  0020               	movlb	0	; select bank0
 14236  06E7  0866               	movf	setShortCircuitProtection@current_mA+3,w
 14237  06E8  00F4               	movwf	___xxtofl@val+3
 14238  06E9  0865               	movf	setShortCircuitProtection@current_mA+2,w
 14239  06EA  00F3               	movwf	___xxtofl@val+2
 14240  06EB  0864               	movf	setShortCircuitProtection@current_mA+1,w
 14241  06EC  00F2               	movwf	___xxtofl@val+1
 14242  06ED  0863               	movf	setShortCircuitProtection@current_mA,w
 14243  06EE  00F1               	movwf	___xxtofl@val
 14244  06EF  3001               	movlw	1
 14245  06F0  31AF  276A  3186   	fcall	___xxtofl
 14246  06F3  0874               	movf	?___xxtofl+3,w
 14247  06F4  0020               	movlb	0	; select bank0
 14248  06F5  00AD               	movwf	___flmul@a+3
 14249  06F6  0873               	movf	?___xxtofl+2,w
 14250  06F7  00AC               	movwf	___flmul@a+2
 14251  06F8  0872               	movf	?___xxtofl+1,w
 14252  06F9  00AB               	movwf	___flmul@a+1
 14253  06FA  0871               	movf	?___xxtofl,w
 14254  06FB  00AA               	movwf	___flmul@a
 14255  06FC  0023               	movlb	3	; select bank3
 14256  06FD  0835               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 14257  06FE  0020               	movlb	0	; select bank0
 14258  06FF  00A9               	movwf	___flmul@b+3
 14259  0700  0023               	movlb	3	; select bank3
 14260  0701  0834               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 14261  0702  0020               	movlb	0	; select bank0
 14262  0703  00A8               	movwf	___flmul@b+2
 14263  0704  0023               	movlb	3	; select bank3
 14264  0705  0833               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 14265  0706  0020               	movlb	0	; select bank0
 14266  0707  00A7               	movwf	___flmul@b+1
 14267  0708  0023               	movlb	3	; select bank3
 14268  0709  0832               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 14269  070A  0020               	movlb	0	; select bank0
 14270  070B  00A6               	movwf	___flmul@b
 14271  070C  3195  25D4  3186   	fcall	___flmul
 14272  070F  0020               	movlb	0	; select bank0
 14273  0710  0829               	movf	?___flmul+3,w
 14274  0711  0021               	movlb	1	; select bank1
 14275  0712  00A9               	movwf	(_setShortCircuitProtection$1844+3)^(0+128)
 14276  0713  0020               	movlb	0	; select bank0
 14277  0714  0828               	movf	?___flmul+2,w
 14278  0715  0021               	movlb	1	; select bank1
 14279  0716  00A8               	movwf	(_setShortCircuitProtection$1844+2)^(0+128)
 14280  0717  0020               	movlb	0	; select bank0
 14281  0718  0827               	movf	?___flmul+1,w
 14282  0719  0021               	movlb	1	; select bank1
 14283  071A  00A7               	movwf	(_setShortCircuitProtection$1844+1)^(0+128)
 14284  071B  0020               	movlb	0	; select bank0
 14285  071C  0826               	movf	?___flmul,w
 14286  071D  0021               	movlb	1	; select bank1
 14287  071E  00A6               	movwf	_setShortCircuitProtection$1844^(0+128)
 14288                           
 14289                           ;BQ76920.c: 91:             int value = (current_mA * shuntResistorValue_mOhm * scaler) 
      +                          / 1000;
 14290  071F  0829               	movf	(_setShortCircuitProtection$1844+3)^(0+128),w
 14291  0720  0020               	movlb	0	; select bank0
 14292  0721  00AD               	movwf	___flmul@a+3
 14293  0722  0021               	movlb	1	; select bank1
 14294  0723  0828               	movf	(_setShortCircuitProtection$1844+2)^(0+128),w
 14295  0724  0020               	movlb	0	; select bank0
 14296  0725  00AC               	movwf	___flmul@a+2
 14297  0726  0021               	movlb	1	; select bank1
 14298  0727  0827               	movf	(_setShortCircuitProtection$1844+1)^(0+128),w
 14299  0728  0020               	movlb	0	; select bank0
 14300  0729  00AB               	movwf	___flmul@a+1
 14301  072A  0021               	movlb	1	; select bank1
 14302  072B  0826               	movf	_setShortCircuitProtection$1844^(0+128),w
 14303  072C  0020               	movlb	0	; select bank0
 14304  072D  00AA               	movwf	___flmul@a
 14305  072E  0021               	movlb	1	; select bank1
 14306  072F  0825               	movf	(setShortCircuitProtection@scaler+3)^(0+128),w
 14307  0730  0020               	movlb	0	; select bank0
 14308  0731  00A9               	movwf	___flmul@b+3
 14309  0732  0021               	movlb	1	; select bank1
 14310  0733  0824               	movf	(setShortCircuitProtection@scaler+2)^(0+128),w
 14311  0734  0020               	movlb	0	; select bank0
 14312  0735  00A8               	movwf	___flmul@b+2
 14313  0736  0021               	movlb	1	; select bank1
 14314  0737  0823               	movf	(setShortCircuitProtection@scaler+1)^(0+128),w
 14315  0738  0020               	movlb	0	; select bank0
 14316  0739  00A7               	movwf	___flmul@b+1
 14317  073A  0021               	movlb	1	; select bank1
 14318  073B  0822               	movf	setShortCircuitProtection@scaler^(0+128),w
 14319  073C  0020               	movlb	0	; select bank0
 14320  073D  00A6               	movwf	___flmul@b
 14321  073E  3195  25D4  3186   	fcall	___flmul
 14322  0741  0020               	movlb	0	; select bank0
 14323  0742  0829               	movf	?___flmul+3,w
 14324  0743  00C7               	movwf	___fldiv@b+3
 14325  0744  0828               	movf	?___flmul+2,w
 14326  0745  00C6               	movwf	___fldiv@b+2
 14327  0746  0827               	movf	?___flmul+1,w
 14328  0747  00C5               	movwf	___fldiv@b+1
 14329  0748  0826               	movf	?___flmul,w
 14330  0749  00C4               	movwf	___fldiv@b
 14331  074A  3044               	movlw	68
 14332  074B  00C3               	movwf	___fldiv@a+3
 14333  074C  307A               	movlw	122
 14334  074D  00C2               	movwf	___fldiv@a+2
 14335  074E  3000               	movlw	0
 14336  074F  00C1               	movwf	___fldiv@a+1
 14337  0750  3000               	movlw	0
 14338  0751  00C0               	movwf	___fldiv@a
 14339  0752  3190  2061  3186   	fcall	___fldiv
 14340  0755  0020               	movlb	0	; select bank0
 14341  0756  0843               	movf	?___fldiv+3,w
 14342  0757  00DD               	movwf	___fltol@f1+3
 14343  0758  0842               	movf	?___fldiv+2,w
 14344  0759  00DC               	movwf	___fltol@f1+2
 14345  075A  0841               	movf	?___fldiv+1,w
 14346  075B  00DB               	movwf	___fltol@f1+1
 14347  075C  0840               	movf	?___fldiv,w
 14348  075D  00DA               	movwf	___fltol@f1
 14349  075E  31AB  23A9  3186   	fcall	___fltol
 14350  0761  0020               	movlb	0	; select bank0
 14351  0762  085B               	movf	?___fltol+1,w
 14352  0763  0021               	movlb	1	; select bank1
 14353  0764  00AB               	movwf	(setShortCircuitProtection@value+1)^(0+128)
 14354  0765  0020               	movlb	0	; select bank0
 14355  0766  085A               	movf	?___fltol,w
 14356  0767  0021               	movlb	1	; select bank1
 14357  0768  00AA               	movwf	setShortCircuitProtection@value^(0+128)
 14358                           
 14359                           ;BQ76920.c: 92:             if ( value >= SCD_threshold_setting[i]) {
 14360  0769  082D               	movf	(setShortCircuitProtection@i+1)^(0+128),w
 14361  076A  0085               	movwf	5
 14362  076B  082C               	movf	setShortCircuitProtection@i^(0+128),w
 14363  076C  0084               	movwf	4
 14364  076D  3584               	lslf	4,f
 14365  076E  0D85               	rlf	5,f
 14366  076F  3010               	movlw	low (_SCD_threshold_setting| (0+32768))
 14367  0770  0784               	addwf	4,f
 14368  0771  30B8               	movlw	high (_SCD_threshold_setting| (0+32768))
 14369  0772  3D85               	addwfc	5,f
 14370  0773  3F00               	moviw [0]fsr0
 14371  0774  0020               	movlb	0	; select bank0
 14372  0775  00E9               	movwf	??_setShortCircuitProtection
 14373  0776  3F01               	moviw [1]fsr0
 14374  0777  00EA               	movwf	??_setShortCircuitProtection+1
 14375  0778  0021               	movlb	1	; select bank1
 14376  0779  082B               	movf	(setShortCircuitProtection@value+1)^(0+128),w
 14377  077A  3A80               	xorlw	128
 14378  077B  0020               	movlb	0	; select bank0
 14379  077C  00EB               	movwf	??_setShortCircuitProtection+2
 14380  077D  086A               	movf	??_setShortCircuitProtection+1,w
 14381  077E  3A80               	xorlw	128
 14382  077F  026B               	subwf	??_setShortCircuitProtection+2,w
 14383  0780  1D03               	skipz
 14384  0781  2F85               	goto	u8945
 14385  0782  0869               	movf	??_setShortCircuitProtection,w
 14386  0783  0021               	movlb	1	; select bank1
 14387  0784  022A               	subwf	setShortCircuitProtection@value^(0+128),w
 14388  0785                     u8945:	
 14389  0785  1C03               	skipc
 14390  0786  2F95               	goto	l6245
 14391                           
 14392                           ;BQ76920.c: 93:                 protect1.bits.SCD_THRESH = i;
 14393  0787  0023               	movlb	3	; select bank3
 14394  0788  0850               	movf	_protect1^(0+384),w
 14395  0789  0021               	movlb	1	; select bank1
 14396  078A  062C               	xorwf	setShortCircuitProtection@i^(0+128),w
 14397  078B  39F8               	andlw	-8
 14398  078C  062C               	xorwf	setShortCircuitProtection@i^(0+128),w
 14399  078D  0023               	movlb	3	; select bank3
 14400  078E  00D0               	movwf	_protect1^(0+384)
 14401                           
 14402                           ;BQ76920.c: 94:                 temp++;
 14403  078F  3001               	movlw	1
 14404  0790  0021               	movlb	1	; select bank1
 14405  0791  07A0               	addwf	setShortCircuitProtection@temp^(0+128),f
 14406  0792  3000               	movlw	0
 14407  0793  3DA1               	addwfc	(setShortCircuitProtection@temp+1)^(0+128),f
 14408                           
 14409                           ;BQ76920.c: 95:                 break;
 14410  0794  2FA7               	goto	l6247
 14411  0795                     l6245:	
 14412                           
 14413                           ;BQ76920.c: 97:         }
 14414  0795  3001               	movlw	1
 14415  0796  0021               	movlb	1	; select bank1
 14416  0797  07AC               	addwf	setShortCircuitProtection@i^(0+128),f
 14417  0798  3000               	movlw	0
 14418  0799  3DAD               	addwfc	(setShortCircuitProtection@i+1)^(0+128),f
 14419  079A  082D               	movf	(setShortCircuitProtection@i+1)^(0+128),w
 14420  079B  3A80               	xorlw	128
 14421  079C  0020               	movlb	0	; select bank0
 14422  079D  00E9               	movwf	??_setShortCircuitProtection
 14423  079E  3080               	movlw	128
 14424  079F  0269               	subwf	??_setShortCircuitProtection,w
 14425  07A0  1D03               	skipz
 14426  07A1  2FA5               	goto	u8955
 14427  07A2  3008               	movlw	8
 14428  07A3  0021               	movlb	1	; select bank1
 14429  07A4  022C               	subwf	setShortCircuitProtection@i^(0+128),w
 14430  07A5                     u8955:	
 14431  07A5  1C03               	skipc
 14432  07A6  2EE6               	goto	l6237
 14433  07A7                     l6247:	
 14434                           
 14435                           ;BQ76920.c: 99:         protect1.bits.SCD_DELAY = 0;
 14436  07A7  30E7               	movlw	-25
 14437  07A8  0023               	movlb	3	; select bank3
 14438  07A9  05D0               	andwf	_protect1^(0+384),f
 14439                           
 14440                           ;BQ76920.c: 100:         for (int i = sizeof (SCD_delay_setting) - 1; i > 0; i--) {
 14441  07AA  3007               	movlw	7
 14442  07AB  0021               	movlb	1	; select bank1
 14443  07AC  00AE               	movwf	setShortCircuitProtection@i_792^(0+128)
 14444  07AD  3000               	movlw	0
 14445  07AE  00AF               	movwf	(setShortCircuitProtection@i_792^(0+128)+1)
 14446  07AF                     l6255:	
 14447                           
 14448                           ;BQ76920.c: 101:             if (delay_us >= SCD_delay_setting[i]) {
 14449  07AF  0021               	movlb	1	; select bank1
 14450  07B0  082F               	movf	(setShortCircuitProtection@i_792+1)^(0+128),w
 14451  07B1  0085               	movwf	5
 14452  07B2  082E               	movf	setShortCircuitProtection@i_792^(0+128),w
 14453  07B3  0084               	movwf	4
 14454  07B4  3584               	lslf	4,f
 14455  07B5  0D85               	rlf	5,f
 14456  07B6  3030               	movlw	low (_SCD_delay_setting| (0+32768))
 14457  07B7  0784               	addwf	4,f
 14458  07B8  30B8               	movlw	high (_SCD_delay_setting| (0+32768))
 14459  07B9  3D85               	addwfc	5,f
 14460  07BA  3F00               	moviw [0]fsr0
 14461  07BB  0020               	movlb	0	; select bank0
 14462  07BC  00E9               	movwf	??_setShortCircuitProtection
 14463  07BD  3F01               	moviw [1]fsr0
 14464  07BE  00EA               	movwf	??_setShortCircuitProtection+1
 14465  07BF  0868               	movf	setShortCircuitProtection@delay_us+1,w
 14466  07C0  3A80               	xorlw	128
 14467  07C1  00EB               	movwf	??_setShortCircuitProtection+2
 14468  07C2  086A               	movf	??_setShortCircuitProtection+1,w
 14469  07C3  3A80               	xorlw	128
 14470  07C4  026B               	subwf	??_setShortCircuitProtection+2,w
 14471  07C5  1D03               	skipz
 14472  07C6  2FC9               	goto	u8965
 14473  07C7  0869               	movf	??_setShortCircuitProtection,w
 14474  07C8  0267               	subwf	setShortCircuitProtection@delay_us,w
 14475  07C9                     u8965:	
 14476  07C9  1C03               	skipc
 14477  07CA  2FDB               	goto	l6259
 14478                           
 14479                           ;BQ76920.c: 102:                 protect1.bits.SCD_DELAY = i;
 14480  07CB  0021               	movlb	1	; select bank1
 14481  07CC  082E               	movf	setShortCircuitProtection@i_792^(0+128),w
 14482  07CD  0020               	movlb	0	; select bank0
 14483  07CE  00E9               	movwf	??_setShortCircuitProtection
 14484  07CF  0DE9               	rlf	??_setShortCircuitProtection,f
 14485  07D0  0DE9               	rlf	??_setShortCircuitProtection,f
 14486  07D1  0DE9               	rlf	??_setShortCircuitProtection,f
 14487  07D2  0023               	movlb	3	; select bank3
 14488  07D3  0850               	movf	_protect1^(0+384),w
 14489  07D4  0020               	movlb	0	; select bank0
 14490  07D5  0669               	xorwf	??_setShortCircuitProtection,w
 14491  07D6  39E7               	andlw	-25
 14492  07D7  0669               	xorwf	??_setShortCircuitProtection,w
 14493  07D8  0023               	movlb	3	; select bank3
 14494  07D9  00D0               	movwf	_protect1^(0+384)
 14495                           
 14496                           ;BQ76920.c: 103:                 break;
 14497  07DA  0008               	return
 14498  07DB                     l6259:	
 14499                           
 14500                           ;BQ76920.c: 105:         }
 14501  07DB  30FF               	movlw	255
 14502  07DC  0021               	movlb	1	; select bank1
 14503  07DD  07AE               	addwf	setShortCircuitProtection@i_792^(0+128),f
 14504  07DE  30FF               	movlw	255
 14505  07DF  3DAF               	addwfc	(setShortCircuitProtection@i_792+1)^(0+128),f
 14506  07E0  082F               	movf	(setShortCircuitProtection@i_792+1)^(0+128),w
 14507  07E1  3A80               	xorlw	128
 14508  07E2  0020               	movlb	0	; select bank0
 14509  07E3  00E9               	movwf	??_setShortCircuitProtection
 14510  07E4  3080               	movlw	128
 14511  07E5  0269               	subwf	??_setShortCircuitProtection,w
 14512  07E6  1D03               	skipz
 14513  07E7  2FEB               	goto	u8975
 14514  07E8  3001               	movlw	1
 14515  07E9  0021               	movlb	1	; select bank1
 14516  07EA  022E               	subwf	setShortCircuitProtection@i_792^(0+128),w
 14517  07EB                     u8975:	
 14518  07EB  1C03               	btfss	3,0
 14519  07EC  0008               	return
 14520  07ED  2FAF               	goto	l6255
 14521  07EE                     __end_of_setShortCircuitProtection:	
 14522                           
 14523                           	psect	text47
 14524  2F6A                     __ptext47:	
 14525 ;; *************** function ___xxtofl *****************
 14526 ;; Defined at:
 14527 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 14528 ;; Parameters:    Size  Location     Type
 14529 ;;  sign            1    wreg     unsigned char 
 14530 ;;  val             4    1[COMMON] long 
 14531 ;; Auto vars:     Size  Location     Type
 14532 ;;  sign            1    0[BANK0 ] unsigned char 
 14533 ;;  arg             4    2[BANK0 ] unsigned long 
 14534 ;;  exp             1    1[BANK0 ] unsigned char 
 14535 ;; Return value:  Size  Location     Type
 14536 ;;                  4    1[COMMON] unsigned char 
 14537 ;; Registers used:
 14538 ;;		wreg, status,2, status,0
 14539 ;; Tracked objects:
 14540 ;;		On entry : 0/0
 14541 ;;		On exit  : 0/0
 14542 ;;		Unchanged: 0/0
 14543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14544 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14545 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14546 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14547 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14548 ;;Total ram usage:       14 bytes
 14549 ;; Hardware stack levels used:    1
 14550 ;; Hardware stack levels required when called:    1
 14551 ;; This function calls:
 14552 ;;		Nothing
 14553 ;; This function is called by:
 14554 ;;		_setShortCircuitProtection
 14555 ;; This function uses a non-reentrant model
 14556 ;;
 14557                           
 14558                           
 14559                           ;psect for function ___xxtofl
 14560  2F6A                     ___xxtofl:	
 14561                           
 14562                           ;incstack = 0
 14563                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 14564                           ;___xxtofl@sign stored from wreg
 14565  2F6A  0020               	movlb	0	; select bank0
 14566  2F6B  00A0               	movwf	___xxtofl@sign
 14567  2F6C  0820               	movf	___xxtofl@sign,w
 14568  2F6D  1D03               	btfss	3,2
 14569  2F6E  1FF4               	btfss	___xxtofl@val+3,7
 14570  2F6F  2F80               	goto	l6141
 14571  2F70  0971               	comf	___xxtofl@val,w
 14572  2F71  00A2               	movwf	___xxtofl@arg
 14573  2F72  0972               	comf	___xxtofl@val+1,w
 14574  2F73  00A3               	movwf	___xxtofl@arg+1
 14575  2F74  0973               	comf	___xxtofl@val+2,w
 14576  2F75  00A4               	movwf	___xxtofl@arg+2
 14577  2F76  0974               	comf	___xxtofl@val+3,w
 14578  2F77  00A5               	movwf	___xxtofl@arg+3
 14579  2F78  0AA2               	incf	___xxtofl@arg,f
 14580  2F79  1903               	skipnz
 14581  2F7A  0AA3               	incf	___xxtofl@arg+1,f
 14582  2F7B  1903               	skipnz
 14583  2F7C  0AA4               	incf	___xxtofl@arg+2,f
 14584  2F7D  1903               	skipnz
 14585  2F7E  0AA5               	incf	___xxtofl@arg+3,f
 14586  2F7F  2F88               	goto	l1254
 14587  2F80                     l6141:	
 14588  2F80  0874               	movf	___xxtofl@val+3,w
 14589  2F81  00A5               	movwf	___xxtofl@arg+3
 14590  2F82  0873               	movf	___xxtofl@val+2,w
 14591  2F83  00A4               	movwf	___xxtofl@arg+2
 14592  2F84  0872               	movf	___xxtofl@val+1,w
 14593  2F85  00A3               	movwf	___xxtofl@arg+1
 14594  2F86  0871               	movf	___xxtofl@val,w
 14595  2F87  00A2               	movwf	___xxtofl@arg
 14596  2F88                     l1254:	
 14597  2F88  0874               	movf	___xxtofl@val+3,w
 14598  2F89  0473               	iorwf	___xxtofl@val+2,w
 14599  2F8A  0472               	iorwf	___xxtofl@val+1,w
 14600  2F8B  0471               	iorwf	___xxtofl@val,w
 14601  2F8C  1D03               	skipz
 14602  2F8D  2F97               	goto	l6147
 14603  2F8E  3000               	movlw	0
 14604  2F8F  00F4               	movwf	?___xxtofl+3
 14605  2F90  3000               	movlw	0
 14606  2F91  00F3               	movwf	?___xxtofl+2
 14607  2F92  3000               	movlw	0
 14608  2F93  00F2               	movwf	?___xxtofl+1
 14609  2F94  3000               	movlw	0
 14610  2F95  00F1               	movwf	?___xxtofl
 14611  2F96  0008               	return
 14612  2F97                     l6147:	
 14613  2F97  3096               	movlw	150
 14614  2F98  00F5               	movwf	??___xxtofl
 14615  2F99  0875               	movf	??___xxtofl,w
 14616  2F9A  00A1               	movwf	___xxtofl@exp
 14617  2F9B                     l6151:	
 14618  2F9B  30FE               	movlw	254
 14619  2F9C  0525               	andwf	___xxtofl@arg+3,w
 14620  2F9D  1903               	btfsc	3,2
 14621  2F9E  2FBE               	goto	l1260
 14622  2F9F  3001               	movlw	1
 14623  2FA0  00F5               	movwf	??___xxtofl
 14624  2FA1  0875               	movf	??___xxtofl,w
 14625  2FA2  07A1               	addwf	___xxtofl@exp,f
 14626  2FA3  3001               	movlw	1
 14627  2FA4                     u8825:	
 14628  2FA4  36A5               	lsrf	___xxtofl@arg+3,f
 14629  2FA5  0CA4               	rrf	___xxtofl@arg+2,f
 14630  2FA6  0CA3               	rrf	___xxtofl@arg+1,f
 14631  2FA7  0CA2               	rrf	___xxtofl@arg,f
 14632  2FA8  0B89               	decfsz	9,f
 14633  2FA9  2FA4               	goto	u8825
 14634  2FAA  2F9B               	goto	l6151
 14635  2FAB                     l6153:	
 14636  2FAB  3001               	movlw	1
 14637  2FAC  00F5               	movwf	??___xxtofl
 14638  2FAD  0875               	movf	??___xxtofl,w
 14639  2FAE  07A1               	addwf	___xxtofl@exp,f
 14640  2FAF  3001               	movlw	1
 14641  2FB0  07A2               	addwf	___xxtofl@arg,f
 14642  2FB1  3000               	movlw	0
 14643  2FB2  3DA3               	addwfc	___xxtofl@arg+1,f
 14644  2FB3  3000               	movlw	0
 14645  2FB4  3DA4               	addwfc	___xxtofl@arg+2,f
 14646  2FB5  3000               	movlw	0
 14647  2FB6  3DA5               	addwfc	___xxtofl@arg+3,f
 14648  2FB7  3001               	movlw	1
 14649  2FB8                     u8845:	
 14650  2FB8  36A5               	lsrf	___xxtofl@arg+3,f
 14651  2FB9  0CA4               	rrf	___xxtofl@arg+2,f
 14652  2FBA  0CA3               	rrf	___xxtofl@arg+1,f
 14653  2FBB  0CA2               	rrf	___xxtofl@arg,f
 14654  2FBC  0B89               	decfsz	9,f
 14655  2FBD  2FB8               	goto	u8845
 14656  2FBE                     l1260:	
 14657  2FBE  30FF               	movlw	255
 14658  2FBF  0525               	andwf	___xxtofl@arg+3,w
 14659  2FC0  1903               	btfsc	3,2
 14660  2FC1  2FD0               	goto	l6161
 14661  2FC2  2FAB               	goto	l6153
 14662  2FC3                     l6163:	
 14663  2FC3  3002               	movlw	2
 14664  2FC4  0221               	subwf	___xxtofl@exp,w
 14665  2FC5  1C03               	btfss	3,0
 14666  2FC6  2FD2               	goto	l1267
 14667  2FC7  3001               	movlw	1
 14668  2FC8  02A1               	subwf	___xxtofl@exp,f
 14669  2FC9  3001               	movlw	1
 14670  2FCA                     u8865:	
 14671  2FCA  35A2               	lslf	___xxtofl@arg,f
 14672  2FCB  0DA3               	rlf	___xxtofl@arg+1,f
 14673  2FCC  0DA4               	rlf	___xxtofl@arg+2,f
 14674  2FCD  0DA5               	rlf	___xxtofl@arg+3,f
 14675  2FCE  0B89               	decfsz	9,f
 14676  2FCF  2FCA               	goto	u8865
 14677  2FD0                     l6161:	
 14678  2FD0  1FA4               	btfss	___xxtofl@arg+2,7
 14679  2FD1  2FC3               	goto	l6163
 14680  2FD2                     l1267:	
 14681  2FD2  1821               	btfsc	___xxtofl@exp,0
 14682  2FD3  2FDC               	goto	l1268
 14683  2FD4  30FF               	movlw	255
 14684  2FD5  05A2               	andwf	___xxtofl@arg,f
 14685  2FD6  30FF               	movlw	255
 14686  2FD7  05A3               	andwf	___xxtofl@arg+1,f
 14687  2FD8  307F               	movlw	127
 14688  2FD9  05A4               	andwf	___xxtofl@arg+2,f
 14689  2FDA  30FF               	movlw	255
 14690  2FDB  05A5               	andwf	___xxtofl@arg+3,f
 14691  2FDC                     l1268:	
 14692  2FDC  1003               	clrc
 14693  2FDD  0CA1               	rrf	___xxtofl@exp,f
 14694  2FDE  0821               	movf	___xxtofl@exp,w
 14695  2FDF  00F5               	movwf	??___xxtofl
 14696  2FE0  01F6               	clrf	??___xxtofl+1
 14697  2FE1  01F7               	clrf	??___xxtofl+2
 14698  2FE2  01F8               	clrf	??___xxtofl+3
 14699  2FE3  3018               	movlw	24
 14700  2FE4                     u8905:	
 14701  2FE4  35F5               	lslf	??___xxtofl,f
 14702  2FE5  0DF6               	rlf	??___xxtofl+1,f
 14703  2FE6  0DF7               	rlf	??___xxtofl+2,f
 14704  2FE7  0DF8               	rlf	??___xxtofl+3,f
 14705  2FE8  0B89               	decfsz	9,f
 14706  2FE9  2FE4               	goto	u8905
 14707  2FEA  0875               	movf	??___xxtofl,w
 14708  2FEB  04A2               	iorwf	___xxtofl@arg,f
 14709  2FEC  0876               	movf	??___xxtofl+1,w
 14710  2FED  04A3               	iorwf	___xxtofl@arg+1,f
 14711  2FEE  0877               	movf	??___xxtofl+2,w
 14712  2FEF  04A4               	iorwf	___xxtofl@arg+2,f
 14713  2FF0  0878               	movf	??___xxtofl+3,w
 14714  2FF1  04A5               	iorwf	___xxtofl@arg+3,f
 14715  2FF2  0820               	movf	___xxtofl@sign,w
 14716  2FF3  1D03               	btfss	3,2
 14717  2FF4  1FF4               	btfss	___xxtofl@val+3,7
 14718  2FF5  2FF7               	goto	l6175
 14719  2FF6  17A5               	bsf	___xxtofl@arg+3,7
 14720  2FF7                     l6175:	
 14721  2FF7  0825               	movf	___xxtofl@arg+3,w
 14722  2FF8  00F4               	movwf	?___xxtofl+3
 14723  2FF9  0824               	movf	___xxtofl@arg+2,w
 14724  2FFA  00F3               	movwf	?___xxtofl+2
 14725  2FFB  0823               	movf	___xxtofl@arg+1,w
 14726  2FFC  00F2               	movwf	?___xxtofl+1
 14727  2FFD  0822               	movf	___xxtofl@arg,w
 14728  2FFE  00F1               	movwf	?___xxtofl
 14729  2FFF  0008               	return
 14730  3000                     __end_of___xxtofl:	
 14731                           
 14732                           	psect	text48
 14733  2BA9                     __ptext48:	
 14734 ;; *************** function ___fltol *****************
 14735 ;; Defined at:
 14736 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 14737 ;; Parameters:    Size  Location     Type
 14738 ;;  f1              4   58[BANK0 ] unsigned char 
 14739 ;; Auto vars:     Size  Location     Type
 14740 ;;  exp1            1   11[COMMON] unsigned char 
 14741 ;;  sign1           1   10[COMMON] unsigned char 
 14742 ;; Return value:  Size  Location     Type
 14743 ;;                  4   58[BANK0 ] long 
 14744 ;; Registers used:
 14745 ;;		wreg, status,2, status,0
 14746 ;; Tracked objects:
 14747 ;;		On entry : 0/0
 14748 ;;		On exit  : 0/0
 14749 ;;		Unchanged: 0/0
 14750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14751 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14752 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14753 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14754 ;;      Totals:         2       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14755 ;;Total ram usage:       11 bytes
 14756 ;; Hardware stack levels used:    1
 14757 ;; Hardware stack levels required when called:    1
 14758 ;; This function calls:
 14759 ;;		Nothing
 14760 ;; This function is called by:
 14761 ;;		_setShortCircuitProtection
 14762 ;;		_efgtoa
 14763 ;; This function uses a non-reentrant model
 14764 ;;
 14765                           
 14766                           
 14767                           ;psect for function ___fltol
 14768  2BA9                     ___fltol:	
 14769                           
 14770                           ;incstack = 0
 14771                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 14772  2BA9  1003               	clrc
 14773  2BAA  0020               	movlb	0	; select bank0
 14774  2BAB  0D5C               	rlf	___fltol@f1+2,w
 14775  2BAC  0D5D               	rlf	___fltol@f1+3,w
 14776  2BAD  00DE               	movwf	??___fltol
 14777  2BAE  085E               	movf	??___fltol,w
 14778  2BAF  00FB               	movwf	___fltol@exp1
 14779  2BB0  087B               	movf	___fltol@exp1,w
 14780  2BB1  1D03               	btfss	3,2
 14781  2BB2  2BBC               	goto	l4649
 14782  2BB3                     l4645:	
 14783  2BB3  3000               	movlw	0
 14784  2BB4  00DD               	movwf	?___fltol+3
 14785  2BB5  3000               	movlw	0
 14786  2BB6  00DC               	movwf	?___fltol+2
 14787  2BB7  3000               	movlw	0
 14788  2BB8  00DB               	movwf	?___fltol+1
 14789  2BB9  3000               	movlw	0
 14790  2BBA  00DA               	movwf	?___fltol
 14791  2BBB  0008               	return
 14792  2BBC                     l4649:	
 14793  2BBC  085A               	movf	___fltol@f1,w
 14794  2BBD  00DE               	movwf	??___fltol
 14795  2BBE  085B               	movf	___fltol@f1+1,w
 14796  2BBF  00DF               	movwf	??___fltol+1
 14797  2BC0  085C               	movf	___fltol@f1+2,w
 14798  2BC1  00E0               	movwf	??___fltol+2
 14799  2BC2  085D               	movf	___fltol@f1+3,w
 14800  2BC3  00E1               	movwf	??___fltol+3
 14801  2BC4  301F               	movlw	31
 14802  2BC5                     u6145:	
 14803  2BC5  36E1               	lsrf	??___fltol+3,f
 14804  2BC6  0CE0               	rrf	??___fltol+2,f
 14805  2BC7  0CDF               	rrf	??___fltol+1,f
 14806  2BC8  0CDE               	rrf	??___fltol,f
 14807  2BC9  0B89               	decfsz	9,f
 14808  2BCA  2BC5               	goto	u6145
 14809  2BCB  085E               	movf	??___fltol,w
 14810  2BCC  00E2               	movwf	??___fltol+4
 14811  2BCD  0862               	movf	??___fltol+4,w
 14812  2BCE  00FA               	movwf	___fltol@sign1
 14813  2BCF  17DC               	bsf	___fltol@f1+2,7
 14814  2BD0  30FF               	movlw	255
 14815  2BD1  05DA               	andwf	___fltol@f1,f
 14816  2BD2  30FF               	movlw	255
 14817  2BD3  05DB               	andwf	___fltol@f1+1,f
 14818  2BD4  30FF               	movlw	255
 14819  2BD5  05DC               	andwf	___fltol@f1+2,f
 14820  2BD6  3000               	movlw	0
 14821  2BD7  05DD               	andwf	___fltol@f1+3,f
 14822  2BD8  3096               	movlw	150
 14823  2BD9  02FB               	subwf	___fltol@exp1,f
 14824  2BDA  1FFB               	btfss	___fltol@exp1,7
 14825  2BDB  2BEF               	goto	l4667
 14826  2BDC  087B               	movf	___fltol@exp1,w
 14827  2BDD  3A80               	xorlw	128
 14828  2BDE  3E97               	addlw	151
 14829  2BDF  1C03               	btfss	3,0
 14830  2BE0  2BB3               	goto	l4645
 14831  2BE1                     l4665:	
 14832  2BE1  3001               	movlw	1
 14833  2BE2                     u6175:	
 14834  2BE2  36DD               	lsrf	___fltol@f1+3,f
 14835  2BE3  0CDC               	rrf	___fltol@f1+2,f
 14836  2BE4  0CDB               	rrf	___fltol@f1+1,f
 14837  2BE5  0CDA               	rrf	___fltol@f1,f
 14838  2BE6  0B89               	decfsz	9,f
 14839  2BE7  2BE2               	goto	u6175
 14840  2BE8  3001               	movlw	1
 14841  2BE9  00DE               	movwf	??___fltol
 14842  2BEA  085E               	movf	??___fltol,w
 14843  2BEB  07FB               	addwf	___fltol@exp1,f
 14844  2BEC  1903               	btfsc	3,2
 14845  2BED  2C00               	goto	l4675
 14846  2BEE  2BE1               	goto	l4665
 14847  2BEF                     l4667:	
 14848  2BEF  3020               	movlw	32
 14849  2BF0  027B               	subwf	___fltol@exp1,w
 14850  2BF1  1803               	btfsc	3,0
 14851  2BF2  2BB3               	goto	l4645
 14852  2BF3                     l1020:	
 14853  2BF3  087B               	movf	___fltol@exp1,w
 14854  2BF4  1903               	btfsc	3,2
 14855  2BF5  2C00               	goto	l4675
 14856  2BF6  3001               	movlw	1
 14857  2BF7                     u6205:	
 14858  2BF7  35DA               	lslf	___fltol@f1,f
 14859  2BF8  0DDB               	rlf	___fltol@f1+1,f
 14860  2BF9  0DDC               	rlf	___fltol@f1+2,f
 14861  2BFA  0DDD               	rlf	___fltol@f1+3,f
 14862  2BFB  0B89               	decfsz	9,f
 14863  2BFC  2BF7               	goto	u6205
 14864  2BFD  3001               	movlw	1
 14865  2BFE  02FB               	subwf	___fltol@exp1,f
 14866  2BFF  2BF3               	goto	l1020
 14867  2C00                     l4675:	
 14868  2C00  087A               	movf	___fltol@sign1,w
 14869  2C01  1903               	btfsc	3,2
 14870  2C02  0008               	return
 14871  2C03  09DA               	comf	___fltol@f1,f
 14872  2C04  09DB               	comf	___fltol@f1+1,f
 14873  2C05  09DC               	comf	___fltol@f1+2,f
 14874  2C06  09DD               	comf	___fltol@f1+3,f
 14875  2C07  0ADA               	incf	___fltol@f1,f
 14876  2C08  1903               	skipnz
 14877  2C09  0ADB               	incf	___fltol@f1+1,f
 14878  2C0A  1903               	skipnz
 14879  2C0B  0ADC               	incf	___fltol@f1+2,f
 14880  2C0C  1903               	skipnz
 14881  2C0D  0ADD               	incf	___fltol@f1+3,f
 14882  2C0E  0008               	return
 14883  2C0F                     __end_of___fltol:	
 14884                           
 14885                           	psect	text49
 14886  15D4                     __ptext49:	
 14887 ;; *************** function ___flmul *****************
 14888 ;; Defined at:
 14889 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
 14890 ;; Parameters:    Size  Location     Type
 14891 ;;  b               4    6[BANK0 ] long 
 14892 ;;  a               4   10[BANK0 ] long 
 14893 ;; Auto vars:     Size  Location     Type
 14894 ;;  prod            4   26[BANK0 ] struct .
 14895 ;;  grs             4   20[BANK0 ] unsigned long 
 14896 ;;  temp            2   30[BANK0 ] struct .
 14897 ;;  bexp            1   25[BANK0 ] unsigned char 
 14898 ;;  aexp            1   24[BANK0 ] unsigned char 
 14899 ;;  sign            1   19[BANK0 ] unsigned char 
 14900 ;; Return value:  Size  Location     Type
 14901 ;;                  4    6[BANK0 ] unsigned char 
 14902 ;; Registers used:
 14903 ;;		wreg, status,2, status,0, pclath, cstack
 14904 ;; Tracked objects:
 14905 ;;		On entry : 0/0
 14906 ;;		On exit  : 0/0
 14907 ;;		Unchanged: 0/0
 14908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14909 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14910 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14911 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14912 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14913 ;;Total ram usage:       26 bytes
 14914 ;; Hardware stack levels used:    1
 14915 ;; Hardware stack levels required when called:    2
 14916 ;; This function calls:
 14917 ;;		__Umul8_16
 14918 ;; This function is called by:
 14919 ;;		_setShortCircuitProtection
 14920 ;;		_efgtoa
 14921 ;; This function uses a non-reentrant model
 14922 ;;
 14923                           
 14924                           
 14925                           ;psect for function ___flmul
 14926  15D4                     ___flmul:	
 14927                           
 14928                           ;incstack = 0
 14929                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 14930  15D4  0020               	movlb	0	; select bank0
 14931  15D5  0829               	movf	___flmul@b+3,w
 14932  15D6  3980               	andlw	128
 14933  15D7  00AE               	movwf	??___flmul
 14934  15D8  082E               	movf	??___flmul,w
 14935  15D9  00B3               	movwf	___flmul@sign
 14936  15DA  3529               	lslf	___flmul@b+3,w
 14937  15DB  00AE               	movwf	??___flmul
 14938  15DC  082E               	movf	??___flmul,w
 14939  15DD  00B9               	movwf	___flmul@bexp
 14940  15DE  1BA8               	btfsc	___flmul@b+2,7
 14941  15DF  1439               	bsf	___flmul@bexp,0
 14942  15E0  0839               	movf	___flmul@bexp,w
 14943  15E1  1903               	btfsc	3,2
 14944  15E2  2DF0               	goto	l4879
 14945  15E3  0A39               	incf	___flmul@bexp,w
 14946  15E4  1D03               	btfss	3,2
 14947  15E5  2DEE               	goto	l4877
 14948  15E6  3000               	movlw	0
 14949  15E7  00A9               	movwf	___flmul@b+3
 14950  15E8  3000               	movlw	0
 14951  15E9  00A8               	movwf	___flmul@b+2
 14952  15EA  3000               	movlw	0
 14953  15EB  00A7               	movwf	___flmul@b+1
 14954  15EC  3000               	movlw	0
 14955  15ED  00A6               	movwf	___flmul@b
 14956  15EE                     l4877:	
 14957  15EE  17A8               	bsf	___flmul@b+2,7
 14958  15EF  2DF8               	goto	l4881
 14959  15F0                     l4879:	
 14960  15F0  3000               	movlw	0
 14961  15F1  00A9               	movwf	___flmul@b+3
 14962  15F2  3000               	movlw	0
 14963  15F3  00A8               	movwf	___flmul@b+2
 14964  15F4  3000               	movlw	0
 14965  15F5  00A7               	movwf	___flmul@b+1
 14966  15F6  3000               	movlw	0
 14967  15F7  00A6               	movwf	___flmul@b
 14968  15F8                     l4881:	
 14969  15F8  082D               	movf	___flmul@a+3,w
 14970  15F9  3980               	andlw	128
 14971  15FA  00AE               	movwf	??___flmul
 14972  15FB  082E               	movf	??___flmul,w
 14973  15FC  06B3               	xorwf	___flmul@sign,f
 14974  15FD  352D               	lslf	___flmul@a+3,w
 14975  15FE  00AE               	movwf	??___flmul
 14976  15FF  082E               	movf	??___flmul,w
 14977  1600  00B8               	movwf	___flmul@aexp
 14978  1601  1BAC               	btfsc	___flmul@a+2,7
 14979  1602  1438               	bsf	___flmul@aexp,0
 14980  1603  0838               	movf	___flmul@aexp,w
 14981  1604  1903               	btfsc	3,2
 14982  1605  2E13               	goto	l4897
 14983  1606  0A38               	incf	___flmul@aexp,w
 14984  1607  1D03               	btfss	3,2
 14985  1608  2E11               	goto	l4895
 14986  1609  3000               	movlw	0
 14987  160A  00AD               	movwf	___flmul@a+3
 14988  160B  3000               	movlw	0
 14989  160C  00AC               	movwf	___flmul@a+2
 14990  160D  3000               	movlw	0
 14991  160E  00AB               	movwf	___flmul@a+1
 14992  160F  3000               	movlw	0
 14993  1610  00AA               	movwf	___flmul@a
 14994  1611                     l4895:	
 14995  1611  17AC               	bsf	___flmul@a+2,7
 14996  1612  2E1B               	goto	l4899
 14997  1613                     l4897:	
 14998  1613  3000               	movlw	0
 14999  1614  00AD               	movwf	___flmul@a+3
 15000  1615  3000               	movlw	0
 15001  1616  00AC               	movwf	___flmul@a+2
 15002  1617  3000               	movlw	0
 15003  1618  00AB               	movwf	___flmul@a+1
 15004  1619  3000               	movlw	0
 15005  161A  00AA               	movwf	___flmul@a
 15006  161B                     l4899:	
 15007  161B  0838               	movf	___flmul@aexp,w
 15008  161C  1D03               	btfss	3,2
 15009  161D  0839               	movf	___flmul@bexp,w
 15010  161E  1D03               	btfss	3,2
 15011  161F  2E29               	goto	l4907
 15012  1620  3000               	movlw	0
 15013  1621  00A9               	movwf	?___flmul+3
 15014  1622  3000               	movlw	0
 15015  1623  00A8               	movwf	?___flmul+2
 15016  1624  3000               	movlw	0
 15017  1625  00A7               	movwf	?___flmul+1
 15018  1626  3000               	movlw	0
 15019  1627  00A6               	movwf	?___flmul
 15020  1628  0008               	return
 15021  1629                     l4907:	
 15022  1629  0826               	movf	___flmul@b,w
 15023  162A  00AE               	movwf	??___flmul
 15024  162B  082E               	movf	??___flmul,w
 15025  162C  00F1               	movwf	__Umul8_16@multiplicand
 15026  162D  082C               	movf	___flmul@a+2,w
 15027  162E  31A8  2039  3195   	fcall	__Umul8_16
 15028  1631  0872               	movf	?__Umul8_16+1,w
 15029  1632  0020               	movlb	0	; select bank0
 15030  1633  00BF               	movwf	___flmul@temp+1
 15031  1634  0871               	movf	?__Umul8_16,w
 15032  1635  00BE               	movwf	___flmul@temp
 15033  1636  083E               	movf	___flmul@temp,w
 15034  1637  00AE               	movwf	??___flmul
 15035  1638  01AF               	clrf	??___flmul+1
 15036  1639  01B0               	clrf	??___flmul+2
 15037  163A  01B1               	clrf	??___flmul+3
 15038  163B  0831               	movf	??___flmul+3,w
 15039  163C  00B7               	movwf	___flmul@grs+3
 15040  163D  0830               	movf	??___flmul+2,w
 15041  163E  00B6               	movwf	___flmul@grs+2
 15042  163F  082F               	movf	??___flmul+1,w
 15043  1640  00B5               	movwf	___flmul@grs+1
 15044  1641  082E               	movf	??___flmul,w
 15045  1642  00B4               	movwf	___flmul@grs
 15046  1643  083F               	movf	___flmul@temp+1,w
 15047  1644  00AE               	movwf	??___flmul
 15048  1645  01AF               	clrf	??___flmul+1
 15049  1646  01B0               	clrf	??___flmul+2
 15050  1647  01B1               	clrf	??___flmul+3
 15051  1648  0831               	movf	??___flmul+3,w
 15052  1649  00BD               	movwf	___flmul@prod+3
 15053  164A  0830               	movf	??___flmul+2,w
 15054  164B  00BC               	movwf	___flmul@prod+2
 15055  164C  082F               	movf	??___flmul+1,w
 15056  164D  00BB               	movwf	___flmul@prod+1
 15057  164E  082E               	movf	??___flmul,w
 15058  164F  00BA               	movwf	___flmul@prod
 15059  1650  0827               	movf	___flmul@b+1,w
 15060  1651  00AE               	movwf	??___flmul
 15061  1652  082E               	movf	??___flmul,w
 15062  1653  00F1               	movwf	__Umul8_16@multiplicand
 15063  1654  082B               	movf	___flmul@a+1,w
 15064  1655  31A8  2039  3195   	fcall	__Umul8_16
 15065  1658  0872               	movf	?__Umul8_16+1,w
 15066  1659  0020               	movlb	0	; select bank0
 15067  165A  00BF               	movwf	___flmul@temp+1
 15068  165B  0871               	movf	?__Umul8_16,w
 15069  165C  00BE               	movwf	___flmul@temp
 15070  165D  083E               	movf	___flmul@temp,w
 15071  165E  00AE               	movwf	??___flmul
 15072  165F  01AF               	clrf	??___flmul+1
 15073  1660  01B0               	clrf	??___flmul+2
 15074  1661  01B1               	clrf	??___flmul+3
 15075  1662  082E               	movf	??___flmul,w
 15076  1663  07B4               	addwf	___flmul@grs,f
 15077  1664  082F               	movf	??___flmul+1,w
 15078  1665  3DB5               	addwfc	___flmul@grs+1,f
 15079  1666  0830               	movf	??___flmul+2,w
 15080  1667  3DB6               	addwfc	___flmul@grs+2,f
 15081  1668  0831               	movf	??___flmul+3,w
 15082  1669  3DB7               	addwfc	___flmul@grs+3,f
 15083  166A  083F               	movf	___flmul@temp+1,w
 15084  166B  00AE               	movwf	??___flmul
 15085  166C  01AF               	clrf	??___flmul+1
 15086  166D  01B0               	clrf	??___flmul+2
 15087  166E  01B1               	clrf	??___flmul+3
 15088  166F  082E               	movf	??___flmul,w
 15089  1670  07BA               	addwf	___flmul@prod,f
 15090  1671  082F               	movf	??___flmul+1,w
 15091  1672  3DBB               	addwfc	___flmul@prod+1,f
 15092  1673  0830               	movf	??___flmul+2,w
 15093  1674  3DBC               	addwfc	___flmul@prod+2,f
 15094  1675  0831               	movf	??___flmul+3,w
 15095  1676  3DBD               	addwfc	___flmul@prod+3,f
 15096  1677  0828               	movf	___flmul@b+2,w
 15097  1678  00AE               	movwf	??___flmul
 15098  1679  082E               	movf	??___flmul,w
 15099  167A  00F1               	movwf	__Umul8_16@multiplicand
 15100  167B  082A               	movf	___flmul@a,w
 15101  167C  31A8  2039  3195   	fcall	__Umul8_16
 15102  167F  0872               	movf	?__Umul8_16+1,w
 15103  1680  0020               	movlb	0	; select bank0
 15104  1681  00BF               	movwf	___flmul@temp+1
 15105  1682  0871               	movf	?__Umul8_16,w
 15106  1683  00BE               	movwf	___flmul@temp
 15107  1684  083E               	movf	___flmul@temp,w
 15108  1685  00AE               	movwf	??___flmul
 15109  1686  01AF               	clrf	??___flmul+1
 15110  1687  01B0               	clrf	??___flmul+2
 15111  1688  01B1               	clrf	??___flmul+3
 15112  1689  082E               	movf	??___flmul,w
 15113  168A  07B4               	addwf	___flmul@grs,f
 15114  168B  082F               	movf	??___flmul+1,w
 15115  168C  3DB5               	addwfc	___flmul@grs+1,f
 15116  168D  0830               	movf	??___flmul+2,w
 15117  168E  3DB6               	addwfc	___flmul@grs+2,f
 15118  168F  0831               	movf	??___flmul+3,w
 15119  1690  3DB7               	addwfc	___flmul@grs+3,f
 15120  1691  083F               	movf	___flmul@temp+1,w
 15121  1692  00AE               	movwf	??___flmul
 15122  1693  01AF               	clrf	??___flmul+1
 15123  1694  01B0               	clrf	??___flmul+2
 15124  1695  01B1               	clrf	??___flmul+3
 15125  1696  082E               	movf	??___flmul,w
 15126  1697  07BA               	addwf	___flmul@prod,f
 15127  1698  082F               	movf	??___flmul+1,w
 15128  1699  3DBB               	addwfc	___flmul@prod+1,f
 15129  169A  0830               	movf	??___flmul+2,w
 15130  169B  3DBC               	addwfc	___flmul@prod+2,f
 15131  169C  0831               	movf	??___flmul+3,w
 15132  169D  3DBD               	addwfc	___flmul@prod+3,f
 15133  169E  3008               	movlw	8
 15134  169F                     u6695:	
 15135  169F  35B4               	lslf	___flmul@grs,f
 15136  16A0  0DB5               	rlf	___flmul@grs+1,f
 15137  16A1  0DB6               	rlf	___flmul@grs+2,f
 15138  16A2  0DB7               	rlf	___flmul@grs+3,f
 15139  16A3  0B89               	decfsz	9,f
 15140  16A4  2E9F               	goto	u6695
 15141  16A5  0827               	movf	___flmul@b+1,w
 15142  16A6  00AE               	movwf	??___flmul
 15143  16A7  082E               	movf	??___flmul,w
 15144  16A8  00F1               	movwf	__Umul8_16@multiplicand
 15145  16A9  082A               	movf	___flmul@a,w
 15146  16AA  31A8  2039  3195   	fcall	__Umul8_16
 15147  16AD  0872               	movf	?__Umul8_16+1,w
 15148  16AE  0020               	movlb	0	; select bank0
 15149  16AF  00BF               	movwf	___flmul@temp+1
 15150  16B0  0871               	movf	?__Umul8_16,w
 15151  16B1  00BE               	movwf	___flmul@temp
 15152  16B2  083E               	movf	___flmul@temp,w
 15153  16B3  07B4               	addwf	___flmul@grs,f
 15154  16B4  083F               	movf	___flmul@temp+1,w
 15155  16B5  3DB5               	addwfc	___flmul@grs+1,f
 15156  16B6  3000               	movlw	0
 15157  16B7  3DB6               	addwfc	___flmul@grs+2,f
 15158  16B8  3DB7               	addwfc	___flmul@grs+3,f
 15159  16B9  0826               	movf	___flmul@b,w
 15160  16BA  00AE               	movwf	??___flmul
 15161  16BB  082E               	movf	??___flmul,w
 15162  16BC  00F1               	movwf	__Umul8_16@multiplicand
 15163  16BD  082B               	movf	___flmul@a+1,w
 15164  16BE  31A8  2039  3195   	fcall	__Umul8_16
 15165  16C1  0872               	movf	?__Umul8_16+1,w
 15166  16C2  0020               	movlb	0	; select bank0
 15167  16C3  00BF               	movwf	___flmul@temp+1
 15168  16C4  0871               	movf	?__Umul8_16,w
 15169  16C5  00BE               	movwf	___flmul@temp
 15170  16C6  083E               	movf	___flmul@temp,w
 15171  16C7  07B4               	addwf	___flmul@grs,f
 15172  16C8  083F               	movf	___flmul@temp+1,w
 15173  16C9  3DB5               	addwfc	___flmul@grs+1,f
 15174  16CA  3000               	movlw	0
 15175  16CB  3DB6               	addwfc	___flmul@grs+2,f
 15176  16CC  3DB7               	addwfc	___flmul@grs+3,f
 15177  16CD  3008               	movlw	8
 15178  16CE                     u6705:	
 15179  16CE  35B4               	lslf	___flmul@grs,f
 15180  16CF  0DB5               	rlf	___flmul@grs+1,f
 15181  16D0  0DB6               	rlf	___flmul@grs+2,f
 15182  16D1  0DB7               	rlf	___flmul@grs+3,f
 15183  16D2  0B89               	decfsz	9,f
 15184  16D3  2ECE               	goto	u6705
 15185  16D4  0826               	movf	___flmul@b,w
 15186  16D5  00AE               	movwf	??___flmul
 15187  16D6  082E               	movf	??___flmul,w
 15188  16D7  00F1               	movwf	__Umul8_16@multiplicand
 15189  16D8  082A               	movf	___flmul@a,w
 15190  16D9  31A8  2039  3195   	fcall	__Umul8_16
 15191  16DC  0872               	movf	?__Umul8_16+1,w
 15192  16DD  0020               	movlb	0	; select bank0
 15193  16DE  00BF               	movwf	___flmul@temp+1
 15194  16DF  0871               	movf	?__Umul8_16,w
 15195  16E0  00BE               	movwf	___flmul@temp
 15196  16E1  083E               	movf	___flmul@temp,w
 15197  16E2  07B4               	addwf	___flmul@grs,f
 15198  16E3  083F               	movf	___flmul@temp+1,w
 15199  16E4  3DB5               	addwfc	___flmul@grs+1,f
 15200  16E5  3000               	movlw	0
 15201  16E6  3DB6               	addwfc	___flmul@grs+2,f
 15202  16E7  3DB7               	addwfc	___flmul@grs+3,f
 15203  16E8  0827               	movf	___flmul@b+1,w
 15204  16E9  00AE               	movwf	??___flmul
 15205  16EA  082E               	movf	??___flmul,w
 15206  16EB  00F1               	movwf	__Umul8_16@multiplicand
 15207  16EC  082C               	movf	___flmul@a+2,w
 15208  16ED  31A8  2039  3195   	fcall	__Umul8_16
 15209  16F0  0872               	movf	?__Umul8_16+1,w
 15210  16F1  0020               	movlb	0	; select bank0
 15211  16F2  00BF               	movwf	___flmul@temp+1
 15212  16F3  0871               	movf	?__Umul8_16,w
 15213  16F4  00BE               	movwf	___flmul@temp
 15214  16F5  083E               	movf	___flmul@temp,w
 15215  16F6  07BA               	addwf	___flmul@prod,f
 15216  16F7  083F               	movf	___flmul@temp+1,w
 15217  16F8  3DBB               	addwfc	___flmul@prod+1,f
 15218  16F9  3000               	movlw	0
 15219  16FA  3DBC               	addwfc	___flmul@prod+2,f
 15220  16FB  3DBD               	addwfc	___flmul@prod+3,f
 15221  16FC  0828               	movf	___flmul@b+2,w
 15222  16FD  00AE               	movwf	??___flmul
 15223  16FE  082E               	movf	??___flmul,w
 15224  16FF  00F1               	movwf	__Umul8_16@multiplicand
 15225  1700  082B               	movf	___flmul@a+1,w
 15226  1701  31A8  2039  3195   	fcall	__Umul8_16
 15227  1704  0872               	movf	?__Umul8_16+1,w
 15228  1705  0020               	movlb	0	; select bank0
 15229  1706  00BF               	movwf	___flmul@temp+1
 15230  1707  0871               	movf	?__Umul8_16,w
 15231  1708  00BE               	movwf	___flmul@temp
 15232  1709  083E               	movf	___flmul@temp,w
 15233  170A  07BA               	addwf	___flmul@prod,f
 15234  170B  083F               	movf	___flmul@temp+1,w
 15235  170C  3DBB               	addwfc	___flmul@prod+1,f
 15236  170D  3000               	movlw	0
 15237  170E  3DBC               	addwfc	___flmul@prod+2,f
 15238  170F  3DBD               	addwfc	___flmul@prod+3,f
 15239  1710  0828               	movf	___flmul@b+2,w
 15240  1711  00AE               	movwf	??___flmul
 15241  1712  082E               	movf	??___flmul,w
 15242  1713  00F1               	movwf	__Umul8_16@multiplicand
 15243  1714  082C               	movf	___flmul@a+2,w
 15244  1715  31A8  2039  3195   	fcall	__Umul8_16
 15245  1718  0872               	movf	?__Umul8_16+1,w
 15246  1719  0020               	movlb	0	; select bank0
 15247  171A  00BF               	movwf	___flmul@temp+1
 15248  171B  0871               	movf	?__Umul8_16,w
 15249  171C  00BE               	movwf	___flmul@temp
 15250  171D  083E               	movf	___flmul@temp,w
 15251  171E  00AE               	movwf	??___flmul
 15252  171F  083F               	movf	___flmul@temp+1,w
 15253  1720  00AF               	movwf	??___flmul+1
 15254  1721  01B0               	clrf	??___flmul+2
 15255  1722  01B1               	clrf	??___flmul+3
 15256  1723  3008               	movlw	8
 15257  1724                     u6715:	
 15258  1724  35AE               	lslf	??___flmul,f
 15259  1725  0DAF               	rlf	??___flmul+1,f
 15260  1726  0DB0               	rlf	??___flmul+2,f
 15261  1727  0DB1               	rlf	??___flmul+3,f
 15262  1728  0B89               	decfsz	9,f
 15263  1729  2F24               	goto	u6715
 15264  172A  082E               	movf	??___flmul,w
 15265  172B  07BA               	addwf	___flmul@prod,f
 15266  172C  082F               	movf	??___flmul+1,w
 15267  172D  3DBB               	addwfc	___flmul@prod+1,f
 15268  172E  0830               	movf	??___flmul+2,w
 15269  172F  3DBC               	addwfc	___flmul@prod+2,f
 15270  1730  0831               	movf	??___flmul+3,w
 15271  1731  3DBD               	addwfc	___flmul@prod+3,f
 15272  1732  0834               	movf	___flmul@grs,w
 15273  1733  00AE               	movwf	??___flmul
 15274  1734  0835               	movf	___flmul@grs+1,w
 15275  1735  00AF               	movwf	??___flmul+1
 15276  1736  0836               	movf	___flmul@grs+2,w
 15277  1737  00B0               	movwf	??___flmul+2
 15278  1738  0837               	movf	___flmul@grs+3,w
 15279  1739  00B1               	movwf	??___flmul+3
 15280  173A  3018               	movlw	24
 15281  173B                     u6725:	
 15282  173B  36B1               	lsrf	??___flmul+3,f
 15283  173C  0CB0               	rrf	??___flmul+2,f
 15284  173D  0CAF               	rrf	??___flmul+1,f
 15285  173E  0CAE               	rrf	??___flmul,f
 15286  173F  0B89               	decfsz	9,f
 15287  1740  2F3B               	goto	u6725
 15288  1741  082E               	movf	??___flmul,w
 15289  1742  07BA               	addwf	___flmul@prod,f
 15290  1743  082F               	movf	??___flmul+1,w
 15291  1744  3DBB               	addwfc	___flmul@prod+1,f
 15292  1745  0830               	movf	??___flmul+2,w
 15293  1746  3DBC               	addwfc	___flmul@prod+2,f
 15294  1747  0831               	movf	??___flmul+3,w
 15295  1748  3DBD               	addwfc	___flmul@prod+3,f
 15296  1749  3008               	movlw	8
 15297  174A                     u6735:	
 15298  174A  35B4               	lslf	___flmul@grs,f
 15299  174B  0DB5               	rlf	___flmul@grs+1,f
 15300  174C  0DB6               	rlf	___flmul@grs+2,f
 15301  174D  0DB7               	rlf	___flmul@grs+3,f
 15302  174E  0B89               	decfsz	9,f
 15303  174F  2F4A               	goto	u6735
 15304  1750  0839               	movf	___flmul@bexp,w
 15305  1751  0738               	addwf	___flmul@aexp,w
 15306  1752  00AE               	movwf	??___flmul
 15307  1753  01AF               	clrf	??___flmul+1
 15308  1754  0DAF               	rlf	??___flmul+1,f
 15309  1755  082E               	movf	??___flmul,w
 15310  1756  3E82               	addlw	130
 15311  1757  00BE               	movwf	___flmul@temp
 15312  1758  30FF               	movlw	255
 15313  1759  3D2F               	addwfc	??___flmul+1,w
 15314  175A  00BF               	movwf	___flmul@temp+1
 15315  175B                     l4959:	
 15316  175B  1BBC               	btfsc	___flmul@prod+2,7
 15317  175C  2F72               	goto	l4961
 15318  175D  3001               	movlw	1
 15319  175E                     u6745:	
 15320  175E  35BA               	lslf	___flmul@prod,f
 15321  175F  0DBB               	rlf	___flmul@prod+1,f
 15322  1760  0DBC               	rlf	___flmul@prod+2,f
 15323  1761  0DBD               	rlf	___flmul@prod+3,f
 15324  1762  0B89               	decfsz	9,f
 15325  1763  2F5E               	goto	u6745
 15326  1764  1BB7               	btfsc	___flmul@grs+3,7
 15327  1765  143A               	bsf	___flmul@prod,0
 15328  1766  3001               	movlw	1
 15329  1767                     u6765:	
 15330  1767  35B4               	lslf	___flmul@grs,f
 15331  1768  0DB5               	rlf	___flmul@grs+1,f
 15332  1769  0DB6               	rlf	___flmul@grs+2,f
 15333  176A  0DB7               	rlf	___flmul@grs+3,f
 15334  176B  0B89               	decfsz	9,f
 15335  176C  2F67               	goto	u6765
 15336  176D  30FF               	movlw	255
 15337  176E  07BE               	addwf	___flmul@temp,f
 15338  176F  30FF               	movlw	255
 15339  1770  3DBF               	addwfc	___flmul@temp+1,f
 15340  1771  2F5B               	goto	l4959
 15341  1772                     l4961:	
 15342  1772  01B8               	clrf	___flmul@aexp
 15343  1773  1FB7               	btfss	___flmul@grs+3,7
 15344  1774  2F8B               	goto	l4971
 15345  1775  30FF               	movlw	255
 15346  1776  0534               	andwf	___flmul@grs,w
 15347  1777  00AE               	movwf	??___flmul
 15348  1778  30FF               	movlw	255
 15349  1779  0535               	andwf	___flmul@grs+1,w
 15350  177A  00AF               	movwf	??___flmul+1
 15351  177B  30FF               	movlw	255
 15352  177C  0536               	andwf	___flmul@grs+2,w
 15353  177D  00B0               	movwf	??___flmul+2
 15354  177E  307F               	movlw	127
 15355  177F  0537               	andwf	___flmul@grs+3,w
 15356  1780  00B1               	movwf	??___flmul+3
 15357  1781  0831               	movf	??___flmul+3,w
 15358  1782  0430               	iorwf	??___flmul+2,w
 15359  1783  042F               	iorwf	??___flmul+1,w
 15360  1784  042E               	iorwf	??___flmul,w
 15361  1785  1903               	skipnz
 15362  1786  183A               	btfsc	___flmul@prod,0
 15363  1787  2F89               	goto	l4967
 15364  1788  2F8B               	goto	l4971
 15365  1789                     l4967:	
 15366  1789  01B8               	clrf	___flmul@aexp
 15367  178A  0AB8               	incf	___flmul@aexp,f
 15368  178B                     l4971:	
 15369  178B  0838               	movf	___flmul@aexp,w
 15370  178C  1903               	btfsc	3,2
 15371  178D  2FB4               	goto	l4981
 15372  178E  3001               	movlw	1
 15373  178F  07BA               	addwf	___flmul@prod,f
 15374  1790  3000               	movlw	0
 15375  1791  3DBB               	addwfc	___flmul@prod+1,f
 15376  1792  3000               	movlw	0
 15377  1793  3DBC               	addwfc	___flmul@prod+2,f
 15378  1794  3000               	movlw	0
 15379  1795  3DBD               	addwfc	___flmul@prod+3,f
 15380  1796  1C3D               	btfss	___flmul@prod+3,0
 15381  1797  2FB4               	goto	l4981
 15382  1798  083A               	movf	___flmul@prod,w
 15383  1799  00AE               	movwf	??___flmul
 15384  179A  083B               	movf	___flmul@prod+1,w
 15385  179B  00AF               	movwf	??___flmul+1
 15386  179C  083C               	movf	___flmul@prod+2,w
 15387  179D  00B0               	movwf	??___flmul+2
 15388  179E  083D               	movf	___flmul@prod+3,w
 15389  179F  00B1               	movwf	??___flmul+3
 15390  17A0  3001               	movlw	1
 15391  17A1  00B2               	movwf	??___flmul+4
 15392  17A2                     u6835:	
 15393  17A2  37B1               	asrf	??___flmul+3,f
 15394  17A3  0CB0               	rrf	??___flmul+2,f
 15395  17A4  0CAF               	rrf	??___flmul+1,f
 15396  17A5  0CAE               	rrf	??___flmul,f
 15397  17A6  0BB2               	decfsz	??___flmul+4,f
 15398  17A7  2FA2               	goto	u6835
 15399  17A8  0831               	movf	??___flmul+3,w
 15400  17A9  00BD               	movwf	___flmul@prod+3
 15401  17AA  0830               	movf	??___flmul+2,w
 15402  17AB  00BC               	movwf	___flmul@prod+2
 15403  17AC  082F               	movf	??___flmul+1,w
 15404  17AD  00BB               	movwf	___flmul@prod+1
 15405  17AE  082E               	movf	??___flmul,w
 15406  17AF  00BA               	movwf	___flmul@prod
 15407  17B0  3001               	movlw	1
 15408  17B1  07BE               	addwf	___flmul@temp,f
 15409  17B2  3000               	movlw	0
 15410  17B3  3DBF               	addwfc	___flmul@temp+1,f
 15411  17B4                     l4981:	
 15412  17B4  083F               	movf	___flmul@temp+1,w
 15413  17B5  3A80               	xorlw	128
 15414  17B6  00AE               	movwf	??___flmul
 15415  17B7  3080               	movlw	128
 15416  17B8  022E               	subwf	??___flmul,w
 15417  17B9  1D03               	skipz
 15418  17BA  2FBD               	goto	u6845
 15419  17BB  30FF               	movlw	255
 15420  17BC  023E               	subwf	___flmul@temp,w
 15421  17BD                     u6845:	
 15422  17BD  1C03               	skipc
 15423  17BE  2FC9               	goto	l4985
 15424  17BF  307F               	movlw	127
 15425  17C0  0020               	movlb	0	; select bank0
 15426  17C1  00BD               	movwf	___flmul@prod+3
 15427  17C2  3080               	movlw	128
 15428  17C3  00BC               	movwf	___flmul@prod+2
 15429  17C4  3000               	movlw	0
 15430  17C5  00BB               	movwf	___flmul@prod+1
 15431  17C6  3000               	movlw	0
 15432  17C7  00BA               	movwf	___flmul@prod
 15433  17C8  2FF3               	goto	l1228
 15434  17C9                     l4985:	
 15435  17C9  0020               	movlb	0	; select bank0
 15436  17CA  083F               	movf	___flmul@temp+1,w
 15437  17CB  3A80               	xorlw	128
 15438  17CC  00AE               	movwf	??___flmul
 15439  17CD  3080               	movlw	128
 15440  17CE  022E               	subwf	??___flmul,w
 15441  17CF  1D03               	skipz
 15442  17D0  2FD3               	goto	u6855
 15443  17D1  3001               	movlw	1
 15444  17D2  023E               	subwf	___flmul@temp,w
 15445  17D3                     u6855:	
 15446  17D3  1803               	skipnc
 15447  17D4  2FE0               	goto	l4991
 15448  17D5  3000               	movlw	0
 15449  17D6  0020               	movlb	0	; select bank0
 15450  17D7  00BD               	movwf	___flmul@prod+3
 15451  17D8  3000               	movlw	0
 15452  17D9  00BC               	movwf	___flmul@prod+2
 15453  17DA  3000               	movlw	0
 15454  17DB  00BB               	movwf	___flmul@prod+1
 15455  17DC  3000               	movlw	0
 15456  17DD  00BA               	movwf	___flmul@prod
 15457  17DE  01B3               	clrf	___flmul@sign
 15458  17DF  2FF3               	goto	l1228
 15459  17E0                     l4991:	
 15460  17E0  0020               	movlb	0	; select bank0
 15461  17E1  083E               	movf	___flmul@temp,w
 15462  17E2  00AE               	movwf	??___flmul
 15463  17E3  082E               	movf	??___flmul,w
 15464  17E4  00B9               	movwf	___flmul@bexp
 15465  17E5  30FF               	movlw	255
 15466  17E6  05BA               	andwf	___flmul@prod,f
 15467  17E7  30FF               	movlw	255
 15468  17E8  05BB               	andwf	___flmul@prod+1,f
 15469  17E9  307F               	movlw	127
 15470  17EA  05BC               	andwf	___flmul@prod+2,f
 15471  17EB  3000               	movlw	0
 15472  17EC  05BD               	andwf	___flmul@prod+3,f
 15473  17ED  1839               	btfsc	___flmul@bexp,0
 15474  17EE  17BC               	bsf	___flmul@prod+2,7
 15475  17EF  3639               	lsrf	___flmul@bexp,w
 15476  17F0  00AE               	movwf	??___flmul
 15477  17F1  082E               	movf	??___flmul,w
 15478  17F2  00BD               	movwf	___flmul@prod+3
 15479  17F3                     l1228:	
 15480  17F3  0833               	movf	___flmul@sign,w
 15481  17F4  00AE               	movwf	??___flmul
 15482  17F5  082E               	movf	??___flmul,w
 15483  17F6  04BD               	iorwf	___flmul@prod+3,f
 15484  17F7  083D               	movf	___flmul@prod+3,w
 15485  17F8  00A9               	movwf	?___flmul+3
 15486  17F9  083C               	movf	___flmul@prod+2,w
 15487  17FA  00A8               	movwf	?___flmul+2
 15488  17FB  083B               	movf	___flmul@prod+1,w
 15489  17FC  00A7               	movwf	?___flmul+1
 15490  17FD  083A               	movf	___flmul@prod,w
 15491  17FE  00A6               	movwf	?___flmul
 15492  17FF  0008               	return
 15493  1800                     __end_of___flmul:	
 15494                           
 15495                           	psect	text50
 15496  2839                     __ptext50:	
 15497 ;; *************** function __Umul8_16 *****************
 15498 ;; Defined at:
 15499 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
 15500 ;; Parameters:    Size  Location     Type
 15501 ;;  multiplier      1    wreg     unsigned char 
 15502 ;;  multiplicand    1    1[COMMON] unsigned char 
 15503 ;; Auto vars:     Size  Location     Type
 15504 ;;  multiplier      1    9[COMMON] unsigned char 
 15505 ;;  word_mpld       2    7[COMMON] unsigned int 
 15506 ;;  product         2    5[COMMON] unsigned int 
 15507 ;; Return value:  Size  Location     Type
 15508 ;;                  2    1[COMMON] unsigned int 
 15509 ;; Registers used:
 15510 ;;		wreg, status,2, status,0
 15511 ;; Tracked objects:
 15512 ;;		On entry : 0/0
 15513 ;;		On exit  : 0/0
 15514 ;;		Unchanged: 0/0
 15515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15516 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15517 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15518 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15519 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15520 ;;Total ram usage:        9 bytes
 15521 ;; Hardware stack levels used:    1
 15522 ;; Hardware stack levels required when called:    1
 15523 ;; This function calls:
 15524 ;;		Nothing
 15525 ;; This function is called by:
 15526 ;;		___flmul
 15527 ;; This function uses a non-reentrant model
 15528 ;;
 15529                           
 15530                           
 15531                           ;psect for function __Umul8_16
 15532  2839                     __Umul8_16:	
 15533                           
 15534                           ;incstack = 0
 15535                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 15536                           ;__Umul8_16@multiplier stored from wreg
 15537  2839  00F9               	movwf	__Umul8_16@multiplier
 15538  283A  01F5               	clrf	__Umul8_16@product
 15539  283B  01F6               	clrf	__Umul8_16@product+1
 15540  283C  0871               	movf	__Umul8_16@multiplicand,w
 15541  283D  00F3               	movwf	??__Umul8_16
 15542  283E  01F4               	clrf	??__Umul8_16+1
 15543  283F  0873               	movf	??__Umul8_16,w
 15544  2840  00F7               	movwf	__Umul8_16@word_mpld
 15545  2841  0874               	movf	??__Umul8_16+1,w
 15546  2842  00F8               	movwf	__Umul8_16@word_mpld+1
 15547  2843                     l4313:	
 15548  2843  1C79               	btfss	__Umul8_16@multiplier,0
 15549  2844  2849               	goto	l1438
 15550  2845  0877               	movf	__Umul8_16@word_mpld,w
 15551  2846  07F5               	addwf	__Umul8_16@product,f
 15552  2847  0878               	movf	__Umul8_16@word_mpld+1,w
 15553  2848  3DF6               	addwfc	__Umul8_16@product+1,f
 15554  2849                     l1438:	
 15555  2849  3001               	movlw	1
 15556  284A                     u5215:	
 15557  284A  35F7               	lslf	__Umul8_16@word_mpld,f
 15558  284B  0DF8               	rlf	__Umul8_16@word_mpld+1,f
 15559  284C  0B89               	decfsz	9,f
 15560  284D  284A               	goto	u5215
 15561  284E  1003               	clrc
 15562  284F  0CF9               	rrf	__Umul8_16@multiplier,f
 15563  2850  0879               	movf	__Umul8_16@multiplier,w
 15564  2851  1D03               	btfss	3,2
 15565  2852  2843               	goto	l4313
 15566  2853  0876               	movf	__Umul8_16@product+1,w
 15567  2854  00F2               	movwf	?__Umul8_16+1
 15568  2855  0875               	movf	__Umul8_16@product,w
 15569  2856  00F1               	movwf	?__Umul8_16
 15570  2857  0008               	return
 15571  2858                     __end_of__Umul8_16:	
 15572                           
 15573                           	psect	text51
 15574  1061                     __ptext51:	
 15575 ;; *************** function ___fldiv *****************
 15576 ;; Defined at:
 15577 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 15578 ;; Parameters:    Size  Location     Type
 15579 ;;  a               4   32[BANK0 ] unsigned int 
 15580 ;;  b               4   36[BANK0 ] unsigned int 
 15581 ;; Auto vars:     Size  Location     Type
 15582 ;;  grs             4   52[BANK0 ] unsigned long 
 15583 ;;  rem             4   45[BANK0 ] unsigned long 
 15584 ;;  new_exp         2   50[BANK0 ] int 
 15585 ;;  aexp            1   57[BANK0 ] unsigned char 
 15586 ;;  bexp            1   56[BANK0 ] unsigned char 
 15587 ;;  sign            1   49[BANK0 ] unsigned char 
 15588 ;; Return value:  Size  Location     Type
 15589 ;;                  4   32[BANK0 ] unsigned char 
 15590 ;; Registers used:
 15591 ;;		wreg, status,2, status,0
 15592 ;; Tracked objects:
 15593 ;;		On entry : 0/0
 15594 ;;		On exit  : 0/0
 15595 ;;		Unchanged: 0/0
 15596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15597 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15598 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15599 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15600 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15601 ;;Total ram usage:       26 bytes
 15602 ;; Hardware stack levels used:    1
 15603 ;; Hardware stack levels required when called:    1
 15604 ;; This function calls:
 15605 ;;		Nothing
 15606 ;; This function is called by:
 15607 ;;		_setShortCircuitProtection
 15608 ;;		_efgtoa
 15609 ;; This function uses a non-reentrant model
 15610 ;;
 15611                           
 15612                           
 15613                           ;psect for function ___fldiv
 15614  1061                     ___fldiv:	
 15615                           
 15616                           ;incstack = 0
 15617                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 15618  1061  0020               	movlb	0	; select bank0
 15619  1062  0847               	movf	___fldiv@b+3,w
 15620  1063  3980               	andlw	128
 15621  1064  00C8               	movwf	??___fldiv
 15622  1065  0848               	movf	??___fldiv,w
 15623  1066  00D1               	movwf	___fldiv@sign
 15624  1067  3547               	lslf	___fldiv@b+3,w
 15625  1068  00C8               	movwf	??___fldiv
 15626  1069  0848               	movf	??___fldiv,w
 15627  106A  00D8               	movwf	___fldiv@bexp
 15628  106B  1BC6               	btfsc	___fldiv@b+2,7
 15629  106C  1458               	bsf	___fldiv@bexp,0
 15630  106D  0858               	movf	___fldiv@bexp,w
 15631  106E  1903               	btfsc	3,2
 15632  106F  287E               	goto	l4741
 15633  1070  0A58               	incf	___fldiv@bexp,w
 15634  1071  1D03               	btfss	3,2
 15635  1072  287B               	goto	l4737
 15636  1073  3000               	movlw	0
 15637  1074  00C7               	movwf	___fldiv@b+3
 15638  1075  3000               	movlw	0
 15639  1076  00C6               	movwf	___fldiv@b+2
 15640  1077  3000               	movlw	0
 15641  1078  00C5               	movwf	___fldiv@b+1
 15642  1079  3000               	movlw	0
 15643  107A  00C4               	movwf	___fldiv@b
 15644  107B                     l4737:	
 15645  107B  17C6               	bsf	___fldiv@b+2,7
 15646  107C  01C7               	clrf	___fldiv@b+3
 15647  107D  2886               	goto	l4743
 15648  107E                     l4741:	
 15649  107E  3000               	movlw	0
 15650  107F  00C7               	movwf	___fldiv@b+3
 15651  1080  3000               	movlw	0
 15652  1081  00C6               	movwf	___fldiv@b+2
 15653  1082  3000               	movlw	0
 15654  1083  00C5               	movwf	___fldiv@b+1
 15655  1084  3000               	movlw	0
 15656  1085  00C4               	movwf	___fldiv@b
 15657  1086                     l4743:	
 15658  1086  0843               	movf	___fldiv@a+3,w
 15659  1087  3980               	andlw	128
 15660  1088  00C8               	movwf	??___fldiv
 15661  1089  0848               	movf	??___fldiv,w
 15662  108A  06D1               	xorwf	___fldiv@sign,f
 15663  108B  3543               	lslf	___fldiv@a+3,w
 15664  108C  00C8               	movwf	??___fldiv
 15665  108D  0848               	movf	??___fldiv,w
 15666  108E  00D9               	movwf	___fldiv@aexp
 15667  108F  1BC2               	btfsc	___fldiv@a+2,7
 15668  1090  1459               	bsf	___fldiv@aexp,0
 15669  1091  0859               	movf	___fldiv@aexp,w
 15670  1092  1903               	btfsc	3,2
 15671  1093  28A2               	goto	l4761
 15672  1094  0A59               	incf	___fldiv@aexp,w
 15673  1095  1D03               	btfss	3,2
 15674  1096  289F               	goto	l4757
 15675  1097  3000               	movlw	0
 15676  1098  00C3               	movwf	___fldiv@a+3
 15677  1099  3000               	movlw	0
 15678  109A  00C2               	movwf	___fldiv@a+2
 15679  109B  3000               	movlw	0
 15680  109C  00C1               	movwf	___fldiv@a+1
 15681  109D  3000               	movlw	0
 15682  109E  00C0               	movwf	___fldiv@a
 15683  109F                     l4757:	
 15684  109F  17C2               	bsf	___fldiv@a+2,7
 15685  10A0  01C3               	clrf	___fldiv@a+3
 15686  10A1  28AA               	goto	l1176
 15687  10A2                     l4761:	
 15688  10A2  3000               	movlw	0
 15689  10A3  00C3               	movwf	___fldiv@a+3
 15690  10A4  3000               	movlw	0
 15691  10A5  00C2               	movwf	___fldiv@a+2
 15692  10A6  3000               	movlw	0
 15693  10A7  00C1               	movwf	___fldiv@a+1
 15694  10A8  3000               	movlw	0
 15695  10A9  00C0               	movwf	___fldiv@a
 15696  10AA                     l1176:	
 15697  10AA  0843               	movf	___fldiv@a+3,w
 15698  10AB  0442               	iorwf	___fldiv@a+2,w
 15699  10AC  0441               	iorwf	___fldiv@a+1,w
 15700  10AD  0440               	iorwf	___fldiv@a,w
 15701  10AE  1D03               	skipz
 15702  10AF  28C9               	goto	l4771
 15703  10B0  3000               	movlw	0
 15704  10B1  00C7               	movwf	___fldiv@b+3
 15705  10B2  3000               	movlw	0
 15706  10B3  00C6               	movwf	___fldiv@b+2
 15707  10B4  3000               	movlw	0
 15708  10B5  00C5               	movwf	___fldiv@b+1
 15709  10B6  3000               	movlw	0
 15710  10B7  00C4               	movwf	___fldiv@b
 15711  10B8  3080               	movlw	128
 15712  10B9  04C6               	iorwf	___fldiv@b+2,f
 15713  10BA  307F               	movlw	127
 15714  10BB  04C7               	iorwf	___fldiv@b+3,f
 15715  10BC                     L14:	
 15716  10BC  0851               	movf	___fldiv@sign,w
 15717  10BD  00C8               	movwf	??___fldiv
 15718  10BE  0848               	movf	??___fldiv,w
 15719  10BF  04C7               	iorwf	___fldiv@b+3,f
 15720  10C0  0847               	movf	___fldiv@b+3,w
 15721  10C1  00C3               	movwf	?___fldiv+3
 15722  10C2  0846               	movf	___fldiv@b+2,w
 15723  10C3  00C2               	movwf	?___fldiv+2
 15724  10C4  0845               	movf	___fldiv@b+1,w
 15725  10C5  00C1               	movwf	?___fldiv+1
 15726  10C6  0844               	movf	___fldiv@b,w
 15727  10C7  00C0               	movwf	?___fldiv
 15728  10C8  0008               	return
 15729  10C9                     l4771:	
 15730  10C9  0858               	movf	___fldiv@bexp,w
 15731  10CA  1D03               	btfss	3,2
 15732  10CB  28D5               	goto	l4777
 15733  10CC  3000               	movlw	0
 15734  10CD  00C3               	movwf	?___fldiv+3
 15735  10CE  3000               	movlw	0
 15736  10CF  00C2               	movwf	?___fldiv+2
 15737  10D0  3000               	movlw	0
 15738  10D1  00C1               	movwf	?___fldiv+1
 15739  10D2  3000               	movlw	0
 15740  10D3  00C0               	movwf	?___fldiv
 15741  10D4  0008               	return
 15742  10D5                     l4777:	
 15743  10D5  0858               	movf	___fldiv@bexp,w
 15744  10D6  00C8               	movwf	??___fldiv
 15745  10D7  01C9               	clrf	??___fldiv+1
 15746  10D8  0849               	movf	??___fldiv+1,w
 15747  10D9  00CB               	movwf	??___fldiv+3
 15748  10DA  0859               	movf	___fldiv@aexp,w
 15749  10DB  0248               	subwf	??___fldiv,w
 15750  10DC  00CA               	movwf	??___fldiv+2
 15751  10DD  1C03               	skipc
 15752  10DE  03CB               	decf	??___fldiv+3,f
 15753  10DF  084A               	movf	??___fldiv+2,w
 15754  10E0  3E7F               	addlw	127
 15755  10E1  00D2               	movwf	___fldiv@new_exp
 15756  10E2  3000               	movlw	0
 15757  10E3  3D4B               	addwfc	??___fldiv+3,w
 15758  10E4  00D3               	movwf	___fldiv@new_exp+1
 15759  10E5  0847               	movf	___fldiv@b+3,w
 15760  10E6  00D0               	movwf	___fldiv@rem+3
 15761  10E7  0846               	movf	___fldiv@b+2,w
 15762  10E8  00CF               	movwf	___fldiv@rem+2
 15763  10E9  0845               	movf	___fldiv@b+1,w
 15764  10EA  00CE               	movwf	___fldiv@rem+1
 15765  10EB  0844               	movf	___fldiv@b,w
 15766  10EC  00CD               	movwf	___fldiv@rem
 15767  10ED  3000               	movlw	0
 15768  10EE  00C7               	movwf	___fldiv@b+3
 15769  10EF  3000               	movlw	0
 15770  10F0  00C6               	movwf	___fldiv@b+2
 15771  10F1  3000               	movlw	0
 15772  10F2  00C5               	movwf	___fldiv@b+1
 15773  10F3  3000               	movlw	0
 15774  10F4  00C4               	movwf	___fldiv@b
 15775  10F5  3000               	movlw	0
 15776  10F6  00D7               	movwf	___fldiv@grs+3
 15777  10F7  3000               	movlw	0
 15778  10F8  00D6               	movwf	___fldiv@grs+2
 15779  10F9  3000               	movlw	0
 15780  10FA  00D5               	movwf	___fldiv@grs+1
 15781  10FB  3000               	movlw	0
 15782  10FC  00D4               	movwf	___fldiv@grs
 15783  10FD  01D9               	clrf	___fldiv@aexp
 15784  10FE                     l4805:	
 15785  10FE  301A               	movlw	26
 15786  10FF  0259               	subwf	___fldiv@aexp,w
 15787  1100  1803               	btfsc	3,0
 15788  1101  293A               	goto	l4807
 15789  1102  0859               	movf	___fldiv@aexp,w
 15790  1103  1903               	btfsc	3,2
 15791  1104  291C               	goto	l4797
 15792  1105  3001               	movlw	1
 15793  1106                     u6415:	
 15794  1106  35CD               	lslf	___fldiv@rem,f
 15795  1107  0DCE               	rlf	___fldiv@rem+1,f
 15796  1108  0DCF               	rlf	___fldiv@rem+2,f
 15797  1109  0DD0               	rlf	___fldiv@rem+3,f
 15798  110A  0B89               	decfsz	9,f
 15799  110B  2906               	goto	u6415
 15800  110C  3001               	movlw	1
 15801  110D                     u6425:	
 15802  110D  35C4               	lslf	___fldiv@b,f
 15803  110E  0DC5               	rlf	___fldiv@b+1,f
 15804  110F  0DC6               	rlf	___fldiv@b+2,f
 15805  1110  0DC7               	rlf	___fldiv@b+3,f
 15806  1111  0B89               	decfsz	9,f
 15807  1112  290D               	goto	u6425
 15808  1113  1BD7               	btfsc	___fldiv@grs+3,7
 15809  1114  1444               	bsf	___fldiv@b,0
 15810  1115  3001               	movlw	1
 15811  1116                     u6445:	
 15812  1116  35D4               	lslf	___fldiv@grs,f
 15813  1117  0DD5               	rlf	___fldiv@grs+1,f
 15814  1118  0DD6               	rlf	___fldiv@grs+2,f
 15815  1119  0DD7               	rlf	___fldiv@grs+3,f
 15816  111A  0B89               	decfsz	9,f
 15817  111B  2916               	goto	u6445
 15818  111C                     l4797:	
 15819  111C  0843               	movf	___fldiv@a+3,w
 15820  111D  0250               	subwf	___fldiv@rem+3,w
 15821  111E  1D03               	skipz
 15822  111F  292A               	goto	u6455
 15823  1120  0842               	movf	___fldiv@a+2,w
 15824  1121  024F               	subwf	___fldiv@rem+2,w
 15825  1122  1D03               	skipz
 15826  1123  292A               	goto	u6455
 15827  1124  0841               	movf	___fldiv@a+1,w
 15828  1125  024E               	subwf	___fldiv@rem+1,w
 15829  1126  1D03               	skipz
 15830  1127  292A               	goto	u6455
 15831  1128  0840               	movf	___fldiv@a,w
 15832  1129  024D               	subwf	___fldiv@rem,w
 15833  112A                     u6455:	
 15834  112A  1C03               	skipc
 15835  112B  2935               	goto	l4803
 15836  112C  1757               	bsf	___fldiv@grs+3,6
 15837  112D  0840               	movf	___fldiv@a,w
 15838  112E  02CD               	subwf	___fldiv@rem,f
 15839  112F  0841               	movf	___fldiv@a+1,w
 15840  1130  3BCE               	subwfb	___fldiv@rem+1,f
 15841  1131  0842               	movf	___fldiv@a+2,w
 15842  1132  3BCF               	subwfb	___fldiv@rem+2,f
 15843  1133  0843               	movf	___fldiv@a+3,w
 15844  1134  3BD0               	subwfb	___fldiv@rem+3,f
 15845  1135                     l4803:	
 15846  1135  3001               	movlw	1
 15847  1136  00C8               	movwf	??___fldiv
 15848  1137  0848               	movf	??___fldiv,w
 15849  1138  07D9               	addwf	___fldiv@aexp,f
 15850  1139  28FE               	goto	l4805
 15851  113A                     l4807:	
 15852  113A  0850               	movf	___fldiv@rem+3,w
 15853  113B  044F               	iorwf	___fldiv@rem+2,w
 15854  113C  044E               	iorwf	___fldiv@rem+1,w
 15855  113D  044D               	iorwf	___fldiv@rem,w
 15856  113E  1D03               	btfss	3,2
 15857  113F  1454               	bsf	___fldiv@grs,0
 15858  1140                     l4821:	
 15859  1140  1BC6               	btfsc	___fldiv@b+2,7
 15860  1141  2957               	goto	l4823
 15861  1142  3001               	movlw	1
 15862  1143                     u6485:	
 15863  1143  35C4               	lslf	___fldiv@b,f
 15864  1144  0DC5               	rlf	___fldiv@b+1,f
 15865  1145  0DC6               	rlf	___fldiv@b+2,f
 15866  1146  0DC7               	rlf	___fldiv@b+3,f
 15867  1147  0B89               	decfsz	9,f
 15868  1148  2943               	goto	u6485
 15869  1149  1BD7               	btfsc	___fldiv@grs+3,7
 15870  114A  1444               	bsf	___fldiv@b,0
 15871  114B  3001               	movlw	1
 15872  114C                     u6505:	
 15873  114C  35D4               	lslf	___fldiv@grs,f
 15874  114D  0DD5               	rlf	___fldiv@grs+1,f
 15875  114E  0DD6               	rlf	___fldiv@grs+2,f
 15876  114F  0DD7               	rlf	___fldiv@grs+3,f
 15877  1150  0B89               	decfsz	9,f
 15878  1151  294C               	goto	u6505
 15879  1152  30FF               	movlw	255
 15880  1153  07D2               	addwf	___fldiv@new_exp,f
 15881  1154  30FF               	movlw	255
 15882  1155  3DD3               	addwfc	___fldiv@new_exp+1,f
 15883  1156  2940               	goto	l4821
 15884  1157                     l4823:	
 15885  1157  01D9               	clrf	___fldiv@aexp
 15886  1158  1FD7               	btfss	___fldiv@grs+3,7
 15887  1159  2970               	goto	l4833
 15888  115A  30FF               	movlw	255
 15889  115B  0554               	andwf	___fldiv@grs,w
 15890  115C  00C8               	movwf	??___fldiv
 15891  115D  30FF               	movlw	255
 15892  115E  0555               	andwf	___fldiv@grs+1,w
 15893  115F  00C9               	movwf	??___fldiv+1
 15894  1160  30FF               	movlw	255
 15895  1161  0556               	andwf	___fldiv@grs+2,w
 15896  1162  00CA               	movwf	??___fldiv+2
 15897  1163  307F               	movlw	127
 15898  1164  0557               	andwf	___fldiv@grs+3,w
 15899  1165  00CB               	movwf	??___fldiv+3
 15900  1166  084B               	movf	??___fldiv+3,w
 15901  1167  044A               	iorwf	??___fldiv+2,w
 15902  1168  0449               	iorwf	??___fldiv+1,w
 15903  1169  0448               	iorwf	??___fldiv,w
 15904  116A  1903               	skipnz
 15905  116B  1844               	btfsc	___fldiv@b,0
 15906  116C  296E               	goto	l4829
 15907  116D  2970               	goto	l4833
 15908  116E                     l4829:	
 15909  116E  01D9               	clrf	___fldiv@aexp
 15910  116F  0AD9               	incf	___fldiv@aexp,f
 15911  1170                     l4833:	
 15912  1170  0859               	movf	___fldiv@aexp,w
 15913  1171  1903               	btfsc	3,2
 15914  1172  2999               	goto	l4843
 15915  1173  3001               	movlw	1
 15916  1174  07C4               	addwf	___fldiv@b,f
 15917  1175  3000               	movlw	0
 15918  1176  3DC5               	addwfc	___fldiv@b+1,f
 15919  1177  3000               	movlw	0
 15920  1178  3DC6               	addwfc	___fldiv@b+2,f
 15921  1179  3000               	movlw	0
 15922  117A  3DC7               	addwfc	___fldiv@b+3,f
 15923  117B  1C47               	btfss	___fldiv@b+3,0
 15924  117C  2999               	goto	l4843
 15925  117D  0844               	movf	___fldiv@b,w
 15926  117E  00C8               	movwf	??___fldiv
 15927  117F  0845               	movf	___fldiv@b+1,w
 15928  1180  00C9               	movwf	??___fldiv+1
 15929  1181  0846               	movf	___fldiv@b+2,w
 15930  1182  00CA               	movwf	??___fldiv+2
 15931  1183  0847               	movf	___fldiv@b+3,w
 15932  1184  00CB               	movwf	??___fldiv+3
 15933  1185  3001               	movlw	1
 15934  1186  00CC               	movwf	??___fldiv+4
 15935  1187                     u6575:	
 15936  1187  37CB               	asrf	??___fldiv+3,f
 15937  1188  0CCA               	rrf	??___fldiv+2,f
 15938  1189  0CC9               	rrf	??___fldiv+1,f
 15939  118A  0CC8               	rrf	??___fldiv,f
 15940  118B  0BCC               	decfsz	??___fldiv+4,f
 15941  118C  2987               	goto	u6575
 15942  118D  084B               	movf	??___fldiv+3,w
 15943  118E  00C7               	movwf	___fldiv@b+3
 15944  118F  084A               	movf	??___fldiv+2,w
 15945  1190  00C6               	movwf	___fldiv@b+2
 15946  1191  0849               	movf	??___fldiv+1,w
 15947  1192  00C5               	movwf	___fldiv@b+1
 15948  1193  0848               	movf	??___fldiv,w
 15949  1194  00C4               	movwf	___fldiv@b
 15950  1195  3001               	movlw	1
 15951  1196  07D2               	addwf	___fldiv@new_exp,f
 15952  1197  3000               	movlw	0
 15953  1198  3DD3               	addwfc	___fldiv@new_exp+1,f
 15954  1199                     l4843:	
 15955  1199  0853               	movf	___fldiv@new_exp+1,w
 15956  119A  3A80               	xorlw	128
 15957  119B  00C8               	movwf	??___fldiv
 15958  119C  3080               	movlw	128
 15959  119D  0248               	subwf	??___fldiv,w
 15960  119E  1D03               	skipz
 15961  119F  29A2               	goto	u6585
 15962  11A0  30FF               	movlw	255
 15963  11A1  0252               	subwf	___fldiv@new_exp,w
 15964  11A2                     u6585:	
 15965  11A2  1C03               	skipc
 15966  11A3  29B1               	goto	l1197
 15967  11A4  30FF               	movlw	255
 15968  11A5  0020               	movlb	0	; select bank0
 15969  11A6  00D2               	movwf	___fldiv@new_exp
 15970  11A7  3000               	movlw	0
 15971  11A8  00D3               	movwf	___fldiv@new_exp+1
 15972  11A9  3000               	movlw	0
 15973  11AA  00C7               	movwf	___fldiv@b+3
 15974  11AB  3000               	movlw	0
 15975  11AC  00C6               	movwf	___fldiv@b+2
 15976  11AD  3000               	movlw	0
 15977  11AE  00C5               	movwf	___fldiv@b+1
 15978  11AF  3000               	movlw	0
 15979  11B0  00C4               	movwf	___fldiv@b
 15980  11B1                     l1197:	
 15981  11B1  0020               	movlb	0	; select bank0
 15982  11B2  0853               	movf	___fldiv@new_exp+1,w
 15983  11B3  3A80               	xorlw	128
 15984  11B4  00C8               	movwf	??___fldiv
 15985  11B5  3080               	movlw	128
 15986  11B6  0248               	subwf	??___fldiv,w
 15987  11B7  1D03               	skipz
 15988  11B8  29BB               	goto	u6595
 15989  11B9  3001               	movlw	1
 15990  11BA  0252               	subwf	___fldiv@new_exp,w
 15991  11BB                     u6595:	
 15992  11BB  1803               	skipnc
 15993  11BC  29C9               	goto	l1198
 15994  11BD  0020               	movlb	0	; select bank0
 15995  11BE  01D2               	clrf	___fldiv@new_exp
 15996  11BF  01D3               	clrf	___fldiv@new_exp+1
 15997  11C0  3000               	movlw	0
 15998  11C1  00C7               	movwf	___fldiv@b+3
 15999  11C2  3000               	movlw	0
 16000  11C3  00C6               	movwf	___fldiv@b+2
 16001  11C4  3000               	movlw	0
 16002  11C5  00C5               	movwf	___fldiv@b+1
 16003  11C6  3000               	movlw	0
 16004  11C7  00C4               	movwf	___fldiv@b
 16005  11C8  01D1               	clrf	___fldiv@sign
 16006  11C9                     l1198:	
 16007  11C9  0020               	movlb	0	; select bank0
 16008  11CA  0852               	movf	___fldiv@new_exp,w
 16009  11CB  00C8               	movwf	??___fldiv
 16010  11CC  0848               	movf	??___fldiv,w
 16011  11CD  00D8               	movwf	___fldiv@bexp
 16012  11CE  1C58               	btfss	___fldiv@bexp,0
 16013  11CF  29D2               	goto	l4857
 16014  11D0  17C6               	bsf	___fldiv@b+2,7
 16015  11D1  29D6               	goto	l1200
 16016  11D2                     l4857:	
 16017  11D2  307F               	movlw	127
 16018  11D3  00C8               	movwf	??___fldiv
 16019  11D4  0848               	movf	??___fldiv,w
 16020  11D5  05C6               	andwf	___fldiv@b+2,f
 16021  11D6                     l1200:	
 16022  11D6  3658               	lsrf	___fldiv@bexp,w
 16023  11D7  00C8               	movwf	??___fldiv
 16024  11D8  0848               	movf	??___fldiv,w
 16025  11D9  00C7               	movwf	___fldiv@b+3
 16026  11DA  28BC               	goto	L14
 16027  11DB                     __end_of___fldiv:	
 16028                           
 16029                           	psect	text52
 16030  224B                     __ptext52:	
 16031 ;; *************** function _beginAFEcommunication *****************
 16032 ;; Defined at:
 16033 ;;		line 25 in file "BQ76920.c"
 16034 ;; Parameters:    Size  Location     Type
 16035 ;;		None
 16036 ;; Auto vars:     Size  Location     Type
 16037 ;;  i               2   13[BANK0 ] int 
 16038 ;;  commSuccess     2   11[BANK0 ] int 
 16039 ;; Return value:  Size  Location     Type
 16040 ;;                  2    0[BANK0 ] int 
 16041 ;; Registers used:
 16042 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16043 ;; Tracked objects:
 16044 ;;		On entry : 0/0
 16045 ;;		On exit  : 0/0
 16046 ;;		Unchanged: 0/0
 16047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16048 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16049 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16050 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16051 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16052 ;;Total ram usage:       15 bytes
 16053 ;; Hardware stack levels used:    1
 16054 ;; Hardware stack levels required when called:    3
 16055 ;; This function calls:
 16056 ;;		_I2C_writeRegister
 16057 ;;		_readRegister
 16058 ;; This function is called by:
 16059 ;;		_statemachine
 16060 ;; This function uses a non-reentrant model
 16061 ;;
 16062                           
 16063                           
 16064                           ;psect for function _beginAFEcommunication
 16065  224B                     _beginAFEcommunication:	
 16066                           
 16067                           ;BQ76920.c: 27:     int commSuccess = 0;
 16068                           
 16069                           ;incstack = 0
 16070                           ; Regs used in _beginAFEcommunication: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 16071  224B  0020               	movlb	0	; select bank0
 16072  224C  01AB               	clrf	beginAFEcommunication@commSuccess
 16073  224D  01AC               	clrf	beginAFEcommunication@commSuccess+1
 16074                           
 16075                           ;BQ76920.c: 30:     for (int i = 0; i < 4; i++) {
 16076  224E  01AD               	clrf	beginAFEcommunication@i
 16077  224F  01AE               	clrf	beginAFEcommunication@i+1
 16078  2250                     l7995:	
 16079                           
 16080                           ;BQ76920.c: 31:         cellVoltages[i] = 0;
 16081  2250  0020               	movlb	0	; select bank0
 16082  2251  352D               	lslf	beginAFEcommunication@i,w
 16083  2252  3EA0               	addlw	(low (_cellVoltages| (0+256)))& (0+255)
 16084  2253  0086               	movwf	6
 16085  2254  3001               	movlw	1	; select bank3/4
 16086  2255  0087               	movwf	7
 16087  2256  3000               	movlw	0
 16088  2257  3FC0               	movwi [0]fsr1
 16089  2258  3FC1               	movwi [1]fsr1
 16090                           
 16091                           ;BQ76920.c: 32:     }
 16092  2259  3001               	movlw	1
 16093  225A  07AD               	addwf	beginAFEcommunication@i,f
 16094  225B  3000               	movlw	0
 16095  225C  3DAE               	addwfc	beginAFEcommunication@i+1,f
 16096  225D  082E               	movf	beginAFEcommunication@i+1,w
 16097  225E  3A80               	xorlw	128
 16098  225F  00A2               	movwf	??_beginAFEcommunication
 16099  2260  3080               	movlw	128
 16100  2261  0222               	subwf	??_beginAFEcommunication,w
 16101  2262  1D03               	skipz
 16102  2263  2A66               	goto	u11775
 16103  2264  3004               	movlw	4
 16104  2265  022D               	subwf	beginAFEcommunication@i,w
 16105  2266                     u11775:	
 16106  2266  1C03               	skipc
 16107  2267  2A50               	goto	l7995
 16108                           
 16109                           ;BQ76920.c: 35:     I2C_writeRegister(0x18, 0x0B, 0x19);
 16110  2268  3018               	movlw	24
 16111  2269  00F5               	movwf	I2C_writeRegister@slaveAddress
 16112  226A  3000               	movlw	0
 16113  226B  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16114  226C  300B               	movlw	11
 16115  226D  00F7               	movwf	I2C_writeRegister@regAddress
 16116  226E  3000               	movlw	0
 16117  226F  00F8               	movwf	I2C_writeRegister@regAddress+1
 16118  2270  3019               	movlw	25
 16119  2271  00F9               	movwf	I2C_writeRegister@data
 16120  2272  3000               	movlw	0
 16121  2273  00FA               	movwf	I2C_writeRegister@data+1
 16122  2274  31A8  201B  31A2   	fcall	_I2C_writeRegister
 16123                           
 16124                           ;BQ76920.c: 37:     if (readRegister(0x18, 0x0B) == 0x19) {
 16125  2277  3018               	movlw	24
 16126  2278  00F5               	movwf	readRegister@slaveAddress
 16127  2279  3000               	movlw	0
 16128  227A  00F6               	movwf	readRegister@slaveAddress+1
 16129  227B  300B               	movlw	11
 16130  227C  00F7               	movwf	readRegister@regAddress
 16131  227D  3000               	movlw	0
 16132  227E  00F8               	movwf	readRegister@regAddress+1
 16133  227F  31A9  21FF  31A2   	fcall	_readRegister
 16134  2282  3019               	movlw	25
 16135  2283  0675               	xorwf	?_readRegister,w
 16136  2284  0476               	iorwf	?_readRegister+1,w
 16137  2285  1D03               	btfss	3,2
 16138  2286  2AF9               	goto	l368
 16139                           
 16140                           ;BQ76920.c: 38:         commSuccess = 1;
 16141  2287  3001               	movlw	1
 16142  2288  0020               	movlb	0	; select bank0
 16143  2289  00AB               	movwf	beginAFEcommunication@commSuccess
 16144  228A  3000               	movlw	0
 16145  228B  00AC               	movwf	beginAFEcommunication@commSuccess+1
 16146                           
 16147                           ;BQ76920.c: 42:         I2C_writeRegister(0x18, 0x04, 0x18);
 16148  228C  3018               	movlw	24
 16149  228D  00F5               	movwf	I2C_writeRegister@slaveAddress
 16150  228E  3000               	movlw	0
 16151  228F  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16152  2290  3004               	movlw	4
 16153  2291  00F7               	movwf	I2C_writeRegister@regAddress
 16154  2292  3000               	movlw	0
 16155  2293  00F8               	movwf	I2C_writeRegister@regAddress+1
 16156  2294  3018               	movlw	24
 16157  2295  00F9               	movwf	I2C_writeRegister@data
 16158  2296  3000               	movlw	0
 16159  2297  00FA               	movwf	I2C_writeRegister@data+1
 16160  2298  31A8  201B  31A2   	fcall	_I2C_writeRegister
 16161                           
 16162                           ;BQ76920.c: 43:         I2C_writeRegister(0x18, 0x05, 0x40);
 16163  229B  3018               	movlw	24
 16164  229C  00F5               	movwf	I2C_writeRegister@slaveAddress
 16165  229D  3000               	movlw	0
 16166  229E  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16167  229F  3005               	movlw	5
 16168  22A0  00F7               	movwf	I2C_writeRegister@regAddress
 16169  22A1  3000               	movlw	0
 16170  22A2  00F8               	movwf	I2C_writeRegister@regAddress+1
 16171  22A3  3040               	movlw	64
 16172  22A4  00F9               	movwf	I2C_writeRegister@data
 16173  22A5  3000               	movlw	0
 16174  22A6  00FA               	movwf	I2C_writeRegister@data+1
 16175  22A7  31A8  201B  31A2   	fcall	_I2C_writeRegister
 16176                           
 16177                           ;BQ76920.c: 46:         adcOffset = (signed int) readRegister(0x18, 0x51);
 16178  22AA  3018               	movlw	24
 16179  22AB  00F5               	movwf	readRegister@slaveAddress
 16180  22AC  3000               	movlw	0
 16181  22AD  00F6               	movwf	readRegister@slaveAddress+1
 16182  22AE  3051               	movlw	81
 16183  22AF  00F7               	movwf	readRegister@regAddress
 16184  22B0  3000               	movlw	0
 16185  22B1  00F8               	movwf	readRegister@regAddress+1
 16186  22B2  31A9  21FF  31A2   	fcall	_readRegister
 16187  22B5  0876               	movf	?_readRegister+1,w
 16188  22B6  0023               	movlb	3	; select bank3
 16189  22B7  00CD               	movwf	(_adcOffset+1)^(0+384)
 16190  22B8  0875               	movf	?_readRegister,w
 16191  22B9  00CC               	movwf	_adcOffset^(0+384)
 16192                           
 16193                           ;BQ76920.c: 47:         adcGain = 365 + (((readRegister(0x18, 0x50) & 0x0C) << 1) |
 16194  22BA  3018               	movlw	24
 16195  22BB  00F5               	movwf	readRegister@slaveAddress
 16196  22BC  3000               	movlw	0
 16197  22BD  00F6               	movwf	readRegister@slaveAddress+1
 16198  22BE  3059               	movlw	89
 16199  22BF  00F7               	movwf	readRegister@regAddress
 16200  22C0  3000               	movlw	0
 16201  22C1  00F8               	movwf	readRegister@regAddress+1
 16202  22C2  31A9  21FF  31A2   	fcall	_readRegister
 16203  22C5  0875               	movf	?_readRegister,w
 16204  22C6  0020               	movlb	0	; select bank0
 16205  22C7  00A2               	movwf	??_beginAFEcommunication
 16206  22C8  0876               	movf	?_readRegister+1,w
 16207  22C9  00A3               	movwf	??_beginAFEcommunication+1
 16208  22CA  3005               	movlw	5
 16209  22CB  00A4               	movwf	??_beginAFEcommunication+2
 16210  22CC                     u11795:	
 16211  22CC  0D23               	rlf	??_beginAFEcommunication+1,w
 16212  22CD  0CA3               	rrf	??_beginAFEcommunication+1,f
 16213  22CE  0CA2               	rrf	??_beginAFEcommunication,f
 16214  22CF  0BA4               	decfsz	??_beginAFEcommunication+2,f
 16215  22D0  2ACC               	goto	u11795
 16216  22D1  3007               	movlw	7
 16217  22D2  0522               	andwf	??_beginAFEcommunication,w
 16218  22D3  00A5               	movwf	??_beginAFEcommunication+3
 16219  22D4  3000               	movlw	0
 16220  22D5  0523               	andwf	??_beginAFEcommunication+1,w
 16221  22D6  00A6               	movwf	??_beginAFEcommunication+4
 16222  22D7  3018               	movlw	24
 16223  22D8  00F5               	movwf	readRegister@slaveAddress
 16224  22D9  3000               	movlw	0
 16225  22DA  00F6               	movwf	readRegister@slaveAddress+1
 16226  22DB  3050               	movlw	80
 16227  22DC  00F7               	movwf	readRegister@regAddress
 16228  22DD  3000               	movlw	0
 16229  22DE  00F8               	movwf	readRegister@regAddress+1
 16230  22DF  31A9  21FF         	fcall	_readRegister
 16231  22E1  300C               	movlw	12
 16232  22E2  0575               	andwf	?_readRegister,w
 16233  22E3  0020               	movlb	0	; select bank0
 16234  22E4  00A7               	movwf	??_beginAFEcommunication+5
 16235  22E5  3000               	movlw	0
 16236  22E6  0576               	andwf	?_readRegister+1,w
 16237  22E7  00A8               	movwf	??_beginAFEcommunication+6
 16238  22E8  35A7               	lslf	??_beginAFEcommunication+5,f
 16239  22E9  0DA8               	rlf	??_beginAFEcommunication+6,f
 16240  22EA  0825               	movf	??_beginAFEcommunication+3,w
 16241  22EB  0427               	iorwf	??_beginAFEcommunication+5,w
 16242  22EC  00A9               	movwf	??_beginAFEcommunication+7
 16243  22ED  0826               	movf	??_beginAFEcommunication+4,w
 16244  22EE  0428               	iorwf	??_beginAFEcommunication+6,w
 16245  22EF  00AA               	movwf	??_beginAFEcommunication+8
 16246  22F0  0829               	movf	??_beginAFEcommunication+7,w
 16247  22F1  3E6D               	addlw	109
 16248  22F2  0023               	movlb	3	; select bank3
 16249  22F3  00CE               	movwf	_adcGain^(0+384)
 16250  22F4  3001               	movlw	1
 16251  22F5  0020               	movlb	0	; select bank0
 16252  22F6  3D2A               	addwfc	??_beginAFEcommunication+8,w
 16253  22F7  0023               	movlb	3	; select bank3
 16254  22F8  00CF               	movwf	(_adcGain+1)^(0+384)
 16255  22F9                     l368:	
 16256                           ;BQ76920.c: 50:     }
 16257                           
 16258                           
 16259                           ;BQ76920.c: 54:     return commSuccess;
 16260  22F9  0020               	movlb	0	; select bank0
 16261  22FA  082C               	movf	beginAFEcommunication@commSuccess+1,w
 16262  22FB  00A1               	movwf	?_beginAFEcommunication+1
 16263  22FC  082B               	movf	beginAFEcommunication@commSuccess,w
 16264  22FD  00A0               	movwf	?_beginAFEcommunication
 16265  22FE  0008               	return
 16266  22FF                     __end_of_beginAFEcommunication:	
 16267                           
 16268                           	psect	text53
 16269  29FF                     __ptext53:	
 16270 ;; *************** function _readRegister *****************
 16271 ;; Defined at:
 16272 ;;		line 129 in file "I2C.c"
 16273 ;; Parameters:    Size  Location     Type
 16274 ;;  slaveAddress    2    5[COMMON] int 
 16275 ;;  regAddress      2    7[COMMON] int 
 16276 ;; Auto vars:     Size  Location     Type
 16277 ;;  recievedData    2    9[COMMON] int 
 16278 ;; Return value:  Size  Location     Type
 16279 ;;                  2    5[COMMON] int 
 16280 ;; Registers used:
 16281 ;;		wreg, status,2, status,0, pclath, cstack
 16282 ;; Tracked objects:
 16283 ;;		On entry : 0/0
 16284 ;;		On exit  : 0/0
 16285 ;;		Unchanged: 0/0
 16286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16287 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16288 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16290 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16291 ;;Total ram usage:        6 bytes
 16292 ;; Hardware stack levels used:    1
 16293 ;; Hardware stack levels required when called:    2
 16294 ;; This function calls:
 16295 ;;		_read_I2C_data
 16296 ;;		_send_I2C_NACK
 16297 ;;		_send_I2C_controlByte
 16298 ;;		_send_I2C_data
 16299 ;;		_send_I2C_startBit
 16300 ;;		_send_I2C_stopBit
 16301 ;; This function is called by:
 16302 ;;		_beginAFEcommunication
 16303 ;; This function uses a non-reentrant model
 16304 ;;
 16305                           
 16306                           
 16307                           ;psect for function _readRegister
 16308  29FF                     _readRegister:	
 16309                           
 16310                           ;I2C.c: 130:     int recievedData;;I2C.c: 131:     send_I2C_startBit();
 16311                           
 16312                           ;incstack = 0
 16313                           ; Regs used in _readRegister: [wreg+status,2+status,0+pclath+cstack]
 16314  29FF  31B6  26A5  31A9   	fcall	_send_I2C_startBit
 16315                           
 16316                           ;I2C.c: 132:     send_I2C_controlByte(slaveAddress, 0);
 16317  2A02  0876               	movf	readRegister@slaveAddress+1,w
 16318  2A03  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 16319  2A04  0875               	movf	readRegister@slaveAddress,w
 16320  2A05  00F1               	movwf	send_I2C_controlByte@BlockAddress
 16321  2A06  3000               	movlw	0
 16322  2A07  00F3               	movwf	send_I2C_controlByte@RW_bit
 16323  2A08  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 16324  2A09  31B6  26E3  31A9   	fcall	_send_I2C_controlByte
 16325                           
 16326                           ;I2C.c: 133:     send_I2C_data(regAddress);
 16327  2A0C  0878               	movf	readRegister@regAddress+1,w
 16328  2A0D  00F2               	movwf	send_I2C_data@databyte+1
 16329  2A0E  0877               	movf	readRegister@regAddress,w
 16330  2A0F  00F1               	movwf	send_I2C_data@databyte
 16331  2A10  31B6  26BE  31A9   	fcall	_send_I2C_data
 16332                           
 16333                           ;I2C.c: 134:     send_I2C_stopBit();
 16334  2A13  31B6  26AD  31A9   	fcall	_send_I2C_stopBit
 16335                           
 16336                           ;I2C.c: 135:     send_I2C_startBit();
 16337  2A16  31B6  26A5  31A9   	fcall	_send_I2C_startBit
 16338                           
 16339                           ;I2C.c: 136:     send_I2C_controlByte(slaveAddress, 1);
 16340  2A19  0876               	movf	readRegister@slaveAddress+1,w
 16341  2A1A  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 16342  2A1B  0875               	movf	readRegister@slaveAddress,w
 16343  2A1C  00F1               	movwf	send_I2C_controlByte@BlockAddress
 16344  2A1D  3001               	movlw	1
 16345  2A1E  00F3               	movwf	send_I2C_controlByte@RW_bit
 16346  2A1F  3000               	movlw	0
 16347  2A20  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 16348  2A21  31B6  26E3  31A9   	fcall	_send_I2C_controlByte
 16349                           
 16350                           ;I2C.c: 137:     recievedData = read_I2C_data();
 16351  2A24  3187  27EE  31A9   	fcall	_read_I2C_data
 16352  2A27  0872               	movf	?_read_I2C_data+1,w
 16353  2A28  00FA               	movwf	readRegister@recievedData+1
 16354  2A29  0871               	movf	?_read_I2C_data,w
 16355  2A2A  00F9               	movwf	readRegister@recievedData
 16356                           
 16357                           ;I2C.c: 138:     send_I2C_NACK();
 16358  2A2B  31B6  26C7  31A9   	fcall	_send_I2C_NACK
 16359                           
 16360                           ;I2C.c: 139:     send_I2C_stopBit();
 16361  2A2E  31B6  26AD         	fcall	_send_I2C_stopBit
 16362                           
 16363                           ;I2C.c: 140:     return recievedData;
 16364  2A30  087A               	movf	readRegister@recievedData+1,w
 16365  2A31  00F6               	movwf	?_readRegister+1
 16366  2A32  0879               	movf	readRegister@recievedData,w
 16367  2A33  00F5               	movwf	?_readRegister
 16368  2A34  0008               	return
 16369  2A35                     __end_of_readRegister:	
 16370                           
 16371                           	psect	text54
 16372  36C7                     __ptext54:	
 16373 ;; *************** function _send_I2C_NACK *****************
 16374 ;; Defined at:
 16375 ;;		line 83 in file "I2C.c"
 16376 ;; Parameters:    Size  Location     Type
 16377 ;;		None
 16378 ;; Auto vars:     Size  Location     Type
 16379 ;;		None
 16380 ;; Return value:  Size  Location     Type
 16381 ;;                  1    wreg      void 
 16382 ;; Registers used:
 16383 ;;		None
 16384 ;; Tracked objects:
 16385 ;;		On entry : 0/0
 16386 ;;		On exit  : 0/0
 16387 ;;		Unchanged: 0/0
 16388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16393 ;;Total ram usage:        0 bytes
 16394 ;; Hardware stack levels used:    1
 16395 ;; Hardware stack levels required when called:    1
 16396 ;; This function calls:
 16397 ;;		Nothing
 16398 ;; This function is called by:
 16399 ;;		_readRegister
 16400 ;; This function uses a non-reentrant model
 16401 ;;
 16402                           
 16403                           
 16404                           ;psect for function _send_I2C_NACK
 16405  36C7                     _send_I2C_NACK:	
 16406                           
 16407                           ;I2C.c: 84:     PIR1bits.SSP1IF = 0;
 16408                           
 16409                           ;incstack = 0
 16410                           ; Regs used in _send_I2C_NACK: []
 16411  36C7  0020               	movlb	0	; select bank0
 16412  36C8  1191               	bcf	17,3	;volatile
 16413                           
 16414                           ;I2C.c: 85:     SSPCON2bits.ACKDT = 1;
 16415  36C9  0024               	movlb	4	; select bank4
 16416  36CA  1696               	bsf	22,5	;volatile
 16417                           
 16418                           ;I2C.c: 86:     SSPCON2bits.ACKEN = 1;
 16419  36CB  1616               	bsf	22,4	;volatile
 16420  36CC                     l284:	
 16421                           ;I2C.c: 87:     while (!PIR1bits.SSP1IF);
 16422                           
 16423  36CC  0020               	movlb	0	; select bank0
 16424  36CD  1991               	btfsc	17,3	;volatile
 16425  36CE  0008               	return
 16426  36CF  2ECC               	goto	l284
 16427  36D0                     __end_of_send_I2C_NACK:	
 16428                           
 16429                           	psect	text55
 16430  07EE                     __ptext55:	
 16431 ;; *************** function _read_I2C_data *****************
 16432 ;; Defined at:
 16433 ;;		line 42 in file "I2C.c"
 16434 ;; Parameters:    Size  Location     Type
 16435 ;;		None
 16436 ;; Auto vars:     Size  Location     Type
 16437 ;;		None
 16438 ;; Return value:  Size  Location     Type
 16439 ;;                  2    1[COMMON] unsigned int 
 16440 ;; Registers used:
 16441 ;;		wreg
 16442 ;; Tracked objects:
 16443 ;;		On entry : 0/0
 16444 ;;		On exit  : 0/0
 16445 ;;		Unchanged: 0/0
 16446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16447 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16449 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16450 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16451 ;;Total ram usage:        4 bytes
 16452 ;; Hardware stack levels used:    1
 16453 ;; Hardware stack levels required when called:    1
 16454 ;; This function calls:
 16455 ;;		Nothing
 16456 ;; This function is called by:
 16457 ;;		_readRegister
 16458 ;; This function uses a non-reentrant model
 16459 ;;
 16460                           
 16461                           
 16462                           ;psect for function _read_I2C_data
 16463  07EE                     _read_I2C_data:	
 16464                           
 16465                           ;I2C.c: 43:     PIR1bits.SSP1IF = 0;
 16466                           
 16467                           ;incstack = 0
 16468                           ; Regs used in _read_I2C_data: [wreg]
 16469  07EE  0020               	movlb	0	; select bank0
 16470  07EF  1191               	bcf	17,3	;volatile
 16471                           
 16472                           ;I2C.c: 44:     SSPCON2bits.RCEN = 1;
 16473  07F0  0024               	movlb	4	; select bank4
 16474  07F1  1596               	bsf	22,3	;volatile
 16475  07F2                     l254:	
 16476                           ;I2C.c: 45:     while (!PIR1bits.SSP1IF);
 16477                           
 16478  07F2  0020               	movlb	0	; select bank0
 16479  07F3  1D91               	btfss	17,3	;volatile
 16480  07F4  2FF2               	goto	l254
 16481                           
 16482                           ;I2C.c: 46:     return (SSPBUF);
 16483  07F5  0024               	movlb	4	; select bank4
 16484  07F6  0811               	movf	17,w	;volatile
 16485  07F7  00F3               	movwf	??_read_I2C_data
 16486  07F8  01F4               	clrf	??_read_I2C_data+1
 16487  07F9  0873               	movf	??_read_I2C_data,w
 16488  07FA  00F1               	movwf	?_read_I2C_data
 16489  07FB  0874               	movf	??_read_I2C_data+1,w
 16490  07FC  00F2               	movwf	?_read_I2C_data+1
 16491  07FD  0008               	return
 16492  07FE                     __end_of_read_I2C_data:	
 16493                           
 16494                           	psect	text56
 16495  281B                     __ptext56:	
 16496 ;; *************** function _I2C_writeRegister *****************
 16497 ;; Defined at:
 16498 ;;		line 118 in file "I2C.c"
 16499 ;; Parameters:    Size  Location     Type
 16500 ;;  slaveAddress    2    5[COMMON] int 
 16501 ;;  regAddress      2    7[COMMON] int 
 16502 ;;  data            2    9[COMMON] int 
 16503 ;; Auto vars:     Size  Location     Type
 16504 ;;		None
 16505 ;; Return value:  Size  Location     Type
 16506 ;;                  1    wreg      void 
 16507 ;; Registers used:
 16508 ;;		wreg, status,2, status,0, pclath, cstack
 16509 ;; Tracked objects:
 16510 ;;		On entry : 0/0
 16511 ;;		On exit  : 0/0
 16512 ;;		Unchanged: 0/0
 16513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16514 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16517 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16518 ;;Total ram usage:        6 bytes
 16519 ;; Hardware stack levels used:    1
 16520 ;; Hardware stack levels required when called:    2
 16521 ;; This function calls:
 16522 ;;		_send_I2C_controlByte
 16523 ;;		_send_I2C_data
 16524 ;;		_send_I2C_startBit
 16525 ;;		_send_I2C_stopBit
 16526 ;; This function is called by:
 16527 ;;		_beginAFEcommunication
 16528 ;; This function uses a non-reentrant model
 16529 ;;
 16530                           
 16531                           
 16532                           ;psect for function _I2C_writeRegister
 16533  281B                     _I2C_writeRegister:	
 16534                           
 16535                           ;I2C.c: 119:     send_I2C_startBit();
 16536                           
 16537                           ;incstack = 0
 16538                           ; Regs used in _I2C_writeRegister: [wreg+status,2+status,0+pclath+cstack]
 16539  281B  31B6  26A5  31A8   	fcall	_send_I2C_startBit
 16540                           
 16541                           ;I2C.c: 120:     send_I2C_controlByte(slaveAddress, 0);
 16542  281E  0876               	movf	I2C_writeRegister@slaveAddress+1,w
 16543  281F  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 16544  2820  0875               	movf	I2C_writeRegister@slaveAddress,w
 16545  2821  00F1               	movwf	send_I2C_controlByte@BlockAddress
 16546  2822  3000               	movlw	0
 16547  2823  00F3               	movwf	send_I2C_controlByte@RW_bit
 16548  2824  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 16549  2825  31B6  26E3  31A8   	fcall	_send_I2C_controlByte
 16550                           
 16551                           ;I2C.c: 121:     send_I2C_data(regAddress);
 16552  2828  0878               	movf	I2C_writeRegister@regAddress+1,w
 16553  2829  00F2               	movwf	send_I2C_data@databyte+1
 16554  282A  0877               	movf	I2C_writeRegister@regAddress,w
 16555  282B  00F1               	movwf	send_I2C_data@databyte
 16556  282C  31B6  26BE  31A8   	fcall	_send_I2C_data
 16557                           
 16558                           ;I2C.c: 122:     send_I2C_data(data);
 16559  282F  087A               	movf	I2C_writeRegister@data+1,w
 16560  2830  00F2               	movwf	send_I2C_data@databyte+1
 16561  2831  0879               	movf	I2C_writeRegister@data,w
 16562  2832  00F1               	movwf	send_I2C_data@databyte
 16563  2833  31B6  26BE  31A8   	fcall	_send_I2C_data
 16564                           
 16565                           ;I2C.c: 123:     send_I2C_stopBit();
 16566  2836  31B6  26AD         	fcall	_send_I2C_stopBit
 16567  2838  0008               	return
 16568  2839                     __end_of_I2C_writeRegister:	
 16569                           
 16570                           	psect	text57
 16571  36AD                     __ptext57:	
 16572 ;; *************** function _send_I2C_stopBit *****************
 16573 ;; Defined at:
 16574 ;;		line 70 in file "I2C.c"
 16575 ;; Parameters:    Size  Location     Type
 16576 ;;		None
 16577 ;; Auto vars:     Size  Location     Type
 16578 ;;		None
 16579 ;; Return value:  Size  Location     Type
 16580 ;;                  1    wreg      void 
 16581 ;; Registers used:
 16582 ;;		None
 16583 ;; Tracked objects:
 16584 ;;		On entry : 0/0
 16585 ;;		On exit  : 0/0
 16586 ;;		Unchanged: 0/0
 16587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16592 ;;Total ram usage:        0 bytes
 16593 ;; Hardware stack levels used:    1
 16594 ;; Hardware stack levels required when called:    1
 16595 ;; This function calls:
 16596 ;;		Nothing
 16597 ;; This function is called by:
 16598 ;;		_I2C_writeRegister
 16599 ;;		_readRegister
 16600 ;;		_retrieve_data_ATmega328
 16601 ;; This function uses a non-reentrant model
 16602 ;;
 16603                           
 16604                           
 16605                           ;psect for function _send_I2C_stopBit
 16606  36AD                     _send_I2C_stopBit:	
 16607                           
 16608                           ;I2C.c: 71:     PIR1bits.SSP1IF = 0;
 16609                           
 16610                           ;incstack = 0
 16611                           ; Regs used in _send_I2C_stopBit: []
 16612  36AD  0020               	movlb	0	; select bank0
 16613  36AE  1191               	bcf	17,3	;volatile
 16614                           
 16615                           ;I2C.c: 72:     SSPCON2bits.PEN = 1;
 16616  36AF  0024               	movlb	4	; select bank4
 16617  36B0  1516               	bsf	22,2	;volatile
 16618  36B1                     l272:	
 16619                           ;I2C.c: 73:     while (!PIR1bits.SSP1IF);
 16620                           
 16621  36B1  0020               	movlb	0	; select bank0
 16622  36B2  1991               	btfsc	17,3	;volatile
 16623  36B3  0008               	return
 16624  36B4  2EB1               	goto	l272
 16625  36B5                     __end_of_send_I2C_stopBit:	
 16626                           
 16627                           	psect	text58
 16628  36A5                     __ptext58:	
 16629 ;; *************** function _send_I2C_startBit *****************
 16630 ;; Defined at:
 16631 ;;		line 64 in file "I2C.c"
 16632 ;; Parameters:    Size  Location     Type
 16633 ;;		None
 16634 ;; Auto vars:     Size  Location     Type
 16635 ;;		None
 16636 ;; Return value:  Size  Location     Type
 16637 ;;                  1    wreg      void 
 16638 ;; Registers used:
 16639 ;;		None
 16640 ;; Tracked objects:
 16641 ;;		On entry : 0/0
 16642 ;;		On exit  : 0/0
 16643 ;;		Unchanged: 0/0
 16644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16649 ;;Total ram usage:        0 bytes
 16650 ;; Hardware stack levels used:    1
 16651 ;; Hardware stack levels required when called:    1
 16652 ;; This function calls:
 16653 ;;		Nothing
 16654 ;; This function is called by:
 16655 ;;		_I2C_writeRegister
 16656 ;;		_readRegister
 16657 ;;		_retrieve_data_ATmega328
 16658 ;; This function uses a non-reentrant model
 16659 ;;
 16660                           
 16661                           
 16662                           ;psect for function _send_I2C_startBit
 16663  36A5                     _send_I2C_startBit:	
 16664                           
 16665                           ;I2C.c: 65:     PIR1bits.SSP1IF = 0;
 16666                           
 16667                           ;incstack = 0
 16668                           ; Regs used in _send_I2C_startBit: []
 16669  36A5  0020               	movlb	0	; select bank0
 16670  36A6  1191               	bcf	17,3	;volatile
 16671                           
 16672                           ;I2C.c: 66:     SSPCON2bits.SEN = 1;
 16673  36A7  0024               	movlb	4	; select bank4
 16674  36A8  1416               	bsf	22,0	;volatile
 16675  36A9                     l266:	
 16676                           ;I2C.c: 67:     while (!PIR1bits.SSP1IF);
 16677                           
 16678  36A9  0020               	movlb	0	; select bank0
 16679  36AA  1991               	btfsc	17,3	;volatile
 16680  36AB  0008               	return
 16681  36AC  2EA9               	goto	l266
 16682  36AD                     __end_of_send_I2C_startBit:	
 16683                           
 16684                           	psect	text59
 16685  36BE                     __ptext59:	
 16686 ;; *************** function _send_I2C_data *****************
 16687 ;; Defined at:
 16688 ;;		line 33 in file "I2C.c"
 16689 ;; Parameters:    Size  Location     Type
 16690 ;;  databyte        2    1[COMMON] unsigned int 
 16691 ;; Auto vars:     Size  Location     Type
 16692 ;;		None
 16693 ;; Return value:  Size  Location     Type
 16694 ;;                  1    wreg      void 
 16695 ;; Registers used:
 16696 ;;		wreg
 16697 ;; Tracked objects:
 16698 ;;		On entry : 0/0
 16699 ;;		On exit  : 0/0
 16700 ;;		Unchanged: 0/0
 16701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16702 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16705 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16706 ;;Total ram usage:        2 bytes
 16707 ;; Hardware stack levels used:    1
 16708 ;; Hardware stack levels required when called:    1
 16709 ;; This function calls:
 16710 ;;		Nothing
 16711 ;; This function is called by:
 16712 ;;		_I2C_writeRegister
 16713 ;;		_readRegister
 16714 ;; This function uses a non-reentrant model
 16715 ;;
 16716                           
 16717                           
 16718                           ;psect for function _send_I2C_data
 16719  36BE                     _send_I2C_data:	
 16720                           
 16721                           ;I2C.c: 34:     PIR1bits.SSP1IF = 0;
 16722                           
 16723                           ;incstack = 0
 16724                           ; Regs used in _send_I2C_data: [wreg]
 16725  36BE  0020               	movlb	0	; select bank0
 16726  36BF  1191               	bcf	17,3	;volatile
 16727                           
 16728                           ;I2C.c: 35:     SSPBUF = databyte;
 16729  36C0  0871               	movf	send_I2C_data@databyte,w
 16730  36C1  0024               	movlb	4	; select bank4
 16731  36C2  0091               	movwf	17	;volatile
 16732  36C3                     l248:	
 16733                           ;I2C.c: 36:     while (!PIR1bits.SSP1IF);
 16734                           
 16735  36C3  0020               	movlb	0	; select bank0
 16736  36C4  1991               	btfsc	17,3	;volatile
 16737  36C5  0008               	return
 16738  36C6  2EC3               	goto	l248
 16739  36C7                     __end_of_send_I2C_data:	
 16740                           
 16741                           	psect	text60
 16742  36E3                     __ptext60:	
 16743 ;; *************** function _send_I2C_controlByte *****************
 16744 ;; Defined at:
 16745 ;;		line 52 in file "I2C.c"
 16746 ;; Parameters:    Size  Location     Type
 16747 ;;  BlockAddress    2    1[COMMON] unsigned int 
 16748 ;;  RW_bit          2    3[COMMON] unsigned int 
 16749 ;; Auto vars:     Size  Location     Type
 16750 ;;		None
 16751 ;; Return value:  Size  Location     Type
 16752 ;;                  1    wreg      void 
 16753 ;; Registers used:
 16754 ;;		wreg, status,2, status,0
 16755 ;; Tracked objects:
 16756 ;;		On entry : 0/0
 16757 ;;		On exit  : 0/0
 16758 ;;		Unchanged: 0/0
 16759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16760 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16763 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16764 ;;Total ram usage:        4 bytes
 16765 ;; Hardware stack levels used:    1
 16766 ;; Hardware stack levels required when called:    1
 16767 ;; This function calls:
 16768 ;;		Nothing
 16769 ;; This function is called by:
 16770 ;;		_I2C_writeRegister
 16771 ;;		_readRegister
 16772 ;;		_retrieve_data_ATmega328
 16773 ;; This function uses a non-reentrant model
 16774 ;;
 16775                           
 16776                           
 16777                           ;psect for function _send_I2C_controlByte
 16778  36E3                     _send_I2C_controlByte:	
 16779                           
 16780                           ;I2C.c: 53:     PIR1bits.SSP1IF = 0;
 16781                           
 16782                           ;incstack = 0
 16783                           ; Regs used in _send_I2C_controlByte: [wreg+status,2+status,0]
 16784  36E3  0020               	movlb	0	; select bank0
 16785  36E4  1191               	bcf	17,3	;volatile
 16786                           
 16787                           ;I2C.c: 59:     SSPBUF = (((0b0000 << 4) | (BlockAddress << 1)) + RW_bit);
 16788  36E5  3571               	lslf	send_I2C_controlByte@BlockAddress,w
 16789  36E6  0773               	addwf	send_I2C_controlByte@RW_bit,w
 16790  36E7  0024               	movlb	4	; select bank4
 16791  36E8  0091               	movwf	17	;volatile
 16792  36E9                     l260:	
 16793                           ;I2C.c: 61:     while (!PIR1bits.SSP1IF);
 16794                           
 16795  36E9  0020               	movlb	0	; select bank0
 16796  36EA  1991               	btfsc	17,3	;volatile
 16797  36EB  0008               	return
 16798  36EC  2EE9               	goto	l260
 16799  36ED                     __end_of_send_I2C_controlByte:	
 16800                           
 16801                           	psect	text61
 16802  28B7                     __ptext61:	
 16803 ;; *************** function _RGB_AWAIT_AFE_CONN *****************
 16804 ;; Defined at:
 16805 ;;		line 43 in file "RGB.c"
 16806 ;; Parameters:    Size  Location     Type
 16807 ;;		None
 16808 ;; Auto vars:     Size  Location     Type
 16809 ;;		None
 16810 ;; Return value:  Size  Location     Type
 16811 ;;                  1    wreg      void 
 16812 ;; Registers used:
 16813 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 16814 ;; Tracked objects:
 16815 ;;		On entry : 0/0
 16816 ;;		On exit  : 0/0
 16817 ;;		Unchanged: 0/0
 16818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16821 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16822 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16823 ;;Total ram usage:        1 bytes
 16824 ;; Hardware stack levels used:    1
 16825 ;; Hardware stack levels required when called:    2
 16826 ;; This function calls:
 16827 ;;		_RGB_color
 16828 ;; This function is called by:
 16829 ;;		_statemachine
 16830 ;; This function uses a non-reentrant model
 16831 ;;
 16832                           
 16833                           
 16834                           ;psect for function _RGB_AWAIT_AFE_CONN
 16835  28B7                     _RGB_AWAIT_AFE_CONN:	
 16836                           
 16837                           ;RGB.c: 45:     if (toggleColor) {
 16838                           
 16839                           ;incstack = 0
 16840                           ; Regs used in _RGB_AWAIT_AFE_CONN: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 16841  28B7  087C               	movf	_toggleColor,w
 16842  28B8  1903               	btfsc	3,2
 16843  28B9  28C9               	goto	l6299
 16844                           
 16845                           ;RGB.c: 46:         toggleColor = !toggleColor;
 16846  28BA  087C               	movf	_toggleColor,w
 16847  28BB  1D03               	btfss	3,2
 16848  28BC  28BF               	goto	u9040
 16849  28BD  3001               	movlw	1
 16850  28BE  28C0               	goto	u9050
 16851  28BF                     u9040:	
 16852  28BF  3000               	movlw	0
 16853  28C0                     u9050:	
 16854  28C0  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 16855  28C1  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 16856  28C2  00FC               	movwf	_toggleColor
 16857                           
 16858                           ;RGB.c: 47:         RGB_color(0);
 16859  28C3  3000               	movlw	0
 16860  28C4  00F1               	movwf	RGB_color@color
 16861  28C5  00F2               	movwf	RGB_color@color+1
 16862  28C6  31A8  2096         	fcall	_RGB_color
 16863                           
 16864                           ;RGB.c: 48:     } else {
 16865  28C8  0008               	return
 16866  28C9                     l6299:	
 16867                           
 16868                           ;RGB.c: 49:         toggleColor = !toggleColor;
 16869  28C9  087C               	movf	_toggleColor,w
 16870  28CA  1D03               	btfss	3,2
 16871  28CB  28CE               	goto	u9060
 16872  28CC  3001               	movlw	1
 16873  28CD  28CF               	goto	u9070
 16874  28CE                     u9060:	
 16875  28CE  3000               	movlw	0
 16876  28CF                     u9070:	
 16877  28CF  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 16878  28D0  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 16879  28D1  00FC               	movwf	_toggleColor
 16880                           
 16881                           ;RGB.c: 50:         RGB_color(1);
 16882  28D2  3001               	movlw	1
 16883  28D3  00F1               	movwf	RGB_color@color
 16884  28D4  3000               	movlw	0
 16885  28D5  00F2               	movwf	RGB_color@color+1
 16886  28D6  31A8  2096         	fcall	_RGB_color
 16887  28D8  0008               	return
 16888  28D9                     __end_of_RGB_AWAIT_AFE_CONN:	
 16889                           
 16890                           	psect	text62
 16891  2896                     __ptext62:	
 16892 ;; *************** function _RGB_color *****************
 16893 ;; Defined at:
 16894 ;;		line 17 in file "RGB.c"
 16895 ;; Parameters:    Size  Location     Type
 16896 ;;  color           2    1[COMMON] int 
 16897 ;; Auto vars:     Size  Location     Type
 16898 ;;		None
 16899 ;; Return value:  Size  Location     Type
 16900 ;;                  1    wreg      void 
 16901 ;; Registers used:
 16902 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 16903 ;; Tracked objects:
 16904 ;;		On entry : 0/0
 16905 ;;		On exit  : 0/0
 16906 ;;		Unchanged: 0/0
 16907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16908 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16911 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16912 ;;Total ram usage:        2 bytes
 16913 ;; Hardware stack levels used:    1
 16914 ;; Hardware stack levels required when called:    1
 16915 ;; This function calls:
 16916 ;;		Nothing
 16917 ;; This function is called by:
 16918 ;;		_statemachine
 16919 ;;		_RGB_AWAIT_AFE_CONN
 16920 ;; This function uses a non-reentrant model
 16921 ;;
 16922                           
 16923                           
 16924                           ;psect for function _RGB_color
 16925  2896                     _RGB_color:	
 16926                           
 16927                           ;RGB.c: 19:     switch (color) {
 16928                           
 16929                           ;incstack = 0
 16930                           ; Regs used in _RGB_color: [wreg-fsr0h+status,2+status,0]
 16931  2896  28A6               	goto	l6183
 16932  2897                     l309:	
 16933                           ;RGB.c: 20:         case 0:
 16934                           
 16935                           
 16936                           ;RGB.c: 21:             LATAbits.LATA4 = 0;
 16937  2897  0022               	movlb	2	; select bank2
 16938  2898  120C               	bcf	12,4	;volatile
 16939                           
 16940                           ;RGB.c: 22:             LATAbits.LATA5 = 1;
 16941  2899  168C               	bsf	12,5	;volatile
 16942                           
 16943                           ;RGB.c: 23:             LATEbits.LATE0 = 1;
 16944  289A  1410               	bsf	16,0	;volatile
 16945                           
 16946                           ;RGB.c: 24:             break;
 16947  289B  0008               	return
 16948  289C                     l311:	
 16949                           ;RGB.c: 25:         case 1:
 16950                           
 16951                           
 16952                           ;RGB.c: 26:             LATAbits.LATA4 = 1;
 16953  289C  0022               	movlb	2	; select bank2
 16954  289D  160C               	bsf	12,4	;volatile
 16955                           
 16956                           ;RGB.c: 27:             LATAbits.LATA5 = 0;
 16957  289E  128C               	bcf	12,5	;volatile
 16958                           
 16959                           ;RGB.c: 28:             LATEbits.LATE0 = 1;
 16960  289F  1410               	bsf	16,0	;volatile
 16961                           
 16962                           ;RGB.c: 29:             break;
 16963  28A0  0008               	return
 16964  28A1                     l312:	
 16965                           ;RGB.c: 30:         case 2:
 16966                           
 16967                           
 16968                           ;RGB.c: 31:             LATAbits.LATA4 = 1;
 16969  28A1  0022               	movlb	2	; select bank2
 16970  28A2  160C               	bsf	12,4	;volatile
 16971                           
 16972                           ;RGB.c: 32:             LATAbits.LATA5 = 1;
 16973  28A3  168C               	bsf	12,5	;volatile
 16974                           
 16975                           ;RGB.c: 33:             LATEbits.LATE0 = 0;
 16976  28A4  1010               	bcf	16,0	;volatile
 16977                           
 16978                           ;RGB.c: 34:             break;
 16979  28A5  0008               	return
 16980  28A6                     l6183:	
 16981                           
 16982                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16983                           ; Switch size 1, requested type "simple"
 16984                           ; Number of cases is 1, Range of values is 0 to 0
 16985                           ; switch strategies available:
 16986                           ; Name         Instructions Cycles
 16987                           ; simple_byte            4     3 (average)
 16988                           ; direct_byte            8     6 (fixed)
 16989                           ; jumptable            260     6 (fixed)
 16990                           ;	Chosen strategy is simple_byte
 16991  28A6  0872               	movf	RGB_color@color+1,w
 16992  28A7  3A00               	xorlw	0	; case 0
 16993  28A8  1903               	skipnz
 16994  28A9  28AB               	goto	l8205
 16995  28AA  28B6               	goto	l313
 16996  28AB                     l8205:	
 16997                           
 16998                           ; Switch size 1, requested type "simple"
 16999                           ; Number of cases is 3, Range of values is 0 to 2
 17000                           ; switch strategies available:
 17001                           ; Name         Instructions Cycles
 17002                           ; simple_byte           10     6 (average)
 17003                           ; direct_byte           12     6 (fixed)
 17004                           ; jumptable            260     6 (fixed)
 17005                           ;	Chosen strategy is simple_byte
 17006  28AB  0871               	movf	RGB_color@color,w
 17007  28AC  3A00               	xorlw	0	; case 0
 17008  28AD  1903               	skipnz
 17009  28AE  2897               	goto	l309
 17010  28AF  3A01               	xorlw	1	; case 1
 17011  28B0  1903               	skipnz
 17012  28B1  289C               	goto	l311
 17013  28B2  3A03               	xorlw	3	; case 2
 17014  28B3  1903               	skipnz
 17015  28B4  28A1               	goto	l312
 17016  28B5  28B6               	goto	l313
 17017  28B6                     l313:	
 17018  28B6  0008               	return
 17019  28B7                     __end_of_RGB_color:	
 17020                           
 17021                           	psect	text63
 17022  3792                     __ptext63:	
 17023 ;; *************** function _EUSART_Write_Text *****************
 17024 ;; Defined at:
 17025 ;;		line 75 in file "EUSART.c"
 17026 ;; Parameters:    Size  Location     Type
 17027 ;;  text            2    2[COMMON] PTR unsigned char 
 17028 ;;		 -> STR_9(45), STR_8(42), STR_5(3), STR_4(53), 
 17029 ;;		 -> messageBuffer(127), STR_2(46), STR_1(40), 
 17030 ;; Auto vars:     Size  Location     Type
 17031 ;;  i               2    5[COMMON] int 
 17032 ;; Return value:  Size  Location     Type
 17033 ;;                  1    wreg      void 
 17034 ;; Registers used:
 17035 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17036 ;; Tracked objects:
 17037 ;;		On entry : 0/0
 17038 ;;		On exit  : 0/0
 17039 ;;		Unchanged: 0/0
 17040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17041 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17042 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17043 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17044 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17045 ;;Total ram usage:        5 bytes
 17046 ;; Hardware stack levels used:    1
 17047 ;; Hardware stack levels required when called:    2
 17048 ;; This function calls:
 17049 ;;		_EUSART_Write
 17050 ;; This function is called by:
 17051 ;;		_statemachine
 17052 ;; This function uses a non-reentrant model
 17053 ;;
 17054                           
 17055                           
 17056                           ;psect for function _EUSART_Write_Text
 17057  3792                     _EUSART_Write_Text:	
 17058                           
 17059                           ;EUSART.c: 75: void EUSART_Write_Text(char *text);EUSART.c: 76: {;EUSART.c: 77:   int i;
      +                          ;EUSART.c: 78:   for(i=0;text[i]!='\0';i++)
 17060                           
 17061                           ;incstack = 0
 17062                           ; Regs used in _EUSART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17063  3792  01F5               	clrf	EUSART_Write_Text@i
 17064  3793  01F6               	clrf	EUSART_Write_Text@i+1
 17065  3794                     l6335:	
 17066  3794  0872               	movf	EUSART_Write_Text@text,w
 17067  3795  0775               	addwf	EUSART_Write_Text@i,w
 17068  3796  0084               	movwf	4
 17069  3797  0873               	movf	EUSART_Write_Text@text+1,w
 17070  3798  3D76               	addwfc	EUSART_Write_Text@i+1,w
 17071  3799  0085               	movwf	5
 17072  379A  0012               	moviw fsr0++
 17073  379B  1903               	btfsc	3,2
 17074  379C  0008               	return
 17075                           
 17076                           ;EUSART.c: 79:    EUSART_Write(text[i]);
 17077  379D  0872               	movf	EUSART_Write_Text@text,w
 17078  379E  0775               	addwf	EUSART_Write_Text@i,w
 17079  379F  0084               	movwf	4
 17080  37A0  0873               	movf	EUSART_Write_Text@text+1,w
 17081  37A1  3D76               	addwfc	EUSART_Write_Text@i+1,w
 17082  37A2  0085               	movwf	5
 17083  37A3  0800               	movf	0,w	;code access
 17084  37A4  31B6  269D  31B7   	fcall	_EUSART_Write
 17085  37A7  3001               	movlw	1
 17086  37A8  07F5               	addwf	EUSART_Write_Text@i,f
 17087  37A9  3000               	movlw	0
 17088  37AA  3DF6               	addwfc	EUSART_Write_Text@i+1,f
 17089  37AB  2F94               	goto	l6335
 17090  37AC                     __end_of_EUSART_Write_Text:	
 17091                           
 17092                           	psect	text64
 17093  369D                     __ptext64:	
 17094 ;; *************** function _EUSART_Write *****************
 17095 ;; Defined at:
 17096 ;;		line 56 in file "EUSART.c"
 17097 ;; Parameters:    Size  Location     Type
 17098 ;;  txData          1    wreg     unsigned char 
 17099 ;; Auto vars:     Size  Location     Type
 17100 ;;  txData          1    1[COMMON] unsigned char 
 17101 ;; Return value:  Size  Location     Type
 17102 ;;                  1    wreg      void 
 17103 ;; Registers used:
 17104 ;;		wreg
 17105 ;; Tracked objects:
 17106 ;;		On entry : 0/0
 17107 ;;		On exit  : 0/0
 17108 ;;		Unchanged: 0/0
 17109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17111 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17113 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17114 ;;Total ram usage:        1 bytes
 17115 ;; Hardware stack levels used:    1
 17116 ;; Hardware stack levels required when called:    1
 17117 ;; This function calls:
 17118 ;;		Nothing
 17119 ;; This function is called by:
 17120 ;;		_EUSART_Write_Text
 17121 ;; This function uses a non-reentrant model
 17122 ;;
 17123                           
 17124                           
 17125                           ;psect for function _EUSART_Write
 17126  369D                     _EUSART_Write:	
 17127                           
 17128                           ;incstack = 0
 17129                           ; Regs used in _EUSART_Write: [wreg]
 17130                           ;EUSART_Write@txData stored from wreg
 17131  369D  00F1               	movwf	EUSART_Write@txData
 17132  369E                     l213:	
 17133                           ;EUSART.c: 59:     {;EUSART.c: 60:     }
 17134                           
 17135                           
 17136                           ;EUSART.c: 58:     while(0 == PIR1bits.TXIF)
 17137  369E  0020               	movlb	0	; select bank0
 17138  369F  1E11               	btfss	17,4	;volatile
 17139  36A0  2E9E               	goto	l213
 17140                           
 17141                           ;EUSART.c: 62:     TX1REG = txData;
 17142  36A1  0871               	movf	EUSART_Write@txData,w
 17143  36A2  0023               	movlb	3	; select bank3
 17144  36A3  009A               	movwf	26	;volatile
 17145  36A4  0008               	return
 17146  36A5                     __end_of_EUSART_Write:	
 17147                           
 17148                           	psect	text65
 17149  37AC                     __ptext65:	
 17150 ;; *************** function _AFE_getSetShortCircuitCurrent *****************
 17151 ;; Defined at:
 17152 ;;		line 128 in file "BQ76920.c"
 17153 ;; Parameters:    Size  Location     Type
 17154 ;;		None
 17155 ;; Auto vars:     Size  Location     Type
 17156 ;;		None
 17157 ;; Return value:  Size  Location     Type
 17158 ;;                  4    1[COMMON] long 
 17159 ;; Registers used:
 17160 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 17161 ;; Tracked objects:
 17162 ;;		On entry : 0/0
 17163 ;;		On exit  : 0/0
 17164 ;;		Unchanged: 0/0
 17165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17166 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17168 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17169 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17170 ;;Total ram usage:        8 bytes
 17171 ;; Hardware stack levels used:    1
 17172 ;; Hardware stack levels required when called:    1
 17173 ;; This function calls:
 17174 ;;		Nothing
 17175 ;; This function is called by:
 17176 ;;		_statemachine
 17177 ;; This function uses a non-reentrant model
 17178 ;;
 17179                           
 17180                           
 17181                           ;psect for function _AFE_getSetShortCircuitCurrent
 17182  37AC                     _AFE_getSetShortCircuitCurrent:	
 17183                           
 17184                           ;BQ76920.c: 129:         return (long) SCD_threshold_setting[protect1.bits.SCD_THRESH];
 17185                           
 17186                           ;incstack = 0
 17187                           ; Regs used in _AFE_getSetShortCircuitCurrent: [wreg-fsr0h+status,2+status,0+pclath]
 17188  37AC  0023               	movlb	3	; select bank3
 17189  37AD  0850               	movf	_protect1^(0+384),w
 17190  37AE  3907               	andlw	7
 17191  37AF  00F5               	movwf	??_AFE_getSetShortCircuitCurrent
 17192  37B0  01F6               	clrf	??_AFE_getSetShortCircuitCurrent+1
 17193  37B1  35F5               	lslf	??_AFE_getSetShortCircuitCurrent,f
 17194  37B2  0DF6               	rlf	??_AFE_getSetShortCircuitCurrent+1,f
 17195  37B3  3010               	movlw	low (_SCD_threshold_setting| (0+32768))
 17196  37B4  0775               	addwf	??_AFE_getSetShortCircuitCurrent,w
 17197  37B5  0084               	movwf	4
 17198  37B6  30B8               	movlw	high (_SCD_threshold_setting| (0+32768))
 17199  37B7  3D76               	addwfc	??_AFE_getSetShortCircuitCurrent+1,w
 17200  37B8  0085               	movwf	5
 17201  37B9  3F00               	moviw [0]fsr0
 17202  37BA  00F7               	movwf	??_AFE_getSetShortCircuitCurrent+2
 17203  37BB  3F01               	moviw [1]fsr0
 17204  37BC  00F8               	movwf	??_AFE_getSetShortCircuitCurrent+3
 17205  37BD  0877               	movf	??_AFE_getSetShortCircuitCurrent+2,w
 17206  37BE  00F1               	movwf	?_AFE_getSetShortCircuitCurrent
 17207  37BF  0878               	movf	??_AFE_getSetShortCircuitCurrent+3,w
 17208  37C0  00F2               	movwf	?_AFE_getSetShortCircuitCurrent+1
 17209  37C1  0D89               	rlf	9,f
 17210  37C2  3B89               	subwfb	9,f
 17211  37C3  0989               	comf	9,f
 17212  37C4  00F3               	movwf	?_AFE_getSetShortCircuitCurrent+2
 17213  37C5  00F4               	movwf	?_AFE_getSetShortCircuitCurrent+3
 17214  37C6  0008               	return
 17215  37C7                     __end_of_AFE_getSetShortCircuitCurrent:	
 17216                           
 17217                           	psect	text66
 17218  36D9                     __ptext66:	
 17219 ;; *************** function _AFE_getSetCurrentSenseRes *****************
 17220 ;; Defined at:
 17221 ;;		line 117 in file "BQ76920.c"
 17222 ;; Parameters:    Size  Location     Type
 17223 ;;		None
 17224 ;; Auto vars:     Size  Location     Type
 17225 ;;		None
 17226 ;; Return value:  Size  Location     Type
 17227 ;;                  4    1[COMMON] float 
 17228 ;; Registers used:
 17229 ;;		wreg
 17230 ;; Tracked objects:
 17231 ;;		On entry : 0/0
 17232 ;;		On exit  : 0/0
 17233 ;;		Unchanged: 0/0
 17234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17235 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17238 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17239 ;;Total ram usage:        4 bytes
 17240 ;; Hardware stack levels used:    1
 17241 ;; Hardware stack levels required when called:    1
 17242 ;; This function calls:
 17243 ;;		Nothing
 17244 ;; This function is called by:
 17245 ;;		_statemachine
 17246 ;; This function uses a non-reentrant model
 17247 ;;
 17248                           
 17249                           
 17250                           ;psect for function _AFE_getSetCurrentSenseRes
 17251  36D9                     _AFE_getSetCurrentSenseRes:	
 17252                           
 17253                           ;BQ76920.c: 118:         return (float) shuntResistorValue_mOhm;
 17254                           
 17255                           ;incstack = 0
 17256                           ; Regs used in _AFE_getSetCurrentSenseRes: [wreg]
 17257  36D9  0023               	movlb	3	; select bank3
 17258  36DA  0835               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 17259  36DB  00F4               	movwf	?_AFE_getSetCurrentSenseRes+3
 17260  36DC  0834               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 17261  36DD  00F3               	movwf	?_AFE_getSetCurrentSenseRes+2
 17262  36DE  0833               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 17263  36DF  00F2               	movwf	?_AFE_getSetCurrentSenseRes+1
 17264  36E0  0832               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 17265  36E1  00F1               	movwf	?_AFE_getSetCurrentSenseRes
 17266  36E2  0008               	return
 17267  36E3                     __end_of_AFE_getSetCurrentSenseRes:	
 17268                           
 17269                           	psect	text67
 17270  2001                     __ptext67:	
 17271 ;; *************** function _init_TMR1 *****************
 17272 ;; Defined at:
 17273 ;;		line 165 in file "main.c"
 17274 ;; Parameters:    Size  Location     Type
 17275 ;;		None
 17276 ;; Auto vars:     Size  Location     Type
 17277 ;;		None
 17278 ;; Return value:  Size  Location     Type
 17279 ;;                  1    wreg      void 
 17280 ;; Registers used:
 17281 ;;		wreg, status,2, status,0
 17282 ;; Tracked objects:
 17283 ;;		On entry : 0/0
 17284 ;;		On exit  : 0/0
 17285 ;;		Unchanged: 0/0
 17286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17291 ;;Total ram usage:        0 bytes
 17292 ;; Hardware stack levels used:    1
 17293 ;; Hardware stack levels required when called:    1
 17294 ;; This function calls:
 17295 ;;		Nothing
 17296 ;; This function is called by:
 17297 ;;		_main
 17298 ;; This function uses a non-reentrant model
 17299 ;;
 17300                           
 17301                           
 17302                           ;psect for function _init_TMR1
 17303  2001                     _init_TMR1:	
 17304                           
 17305                           ;main.c: 168:     T1CONbits.T1CKPS = 0b00;
 17306                           
 17307                           ;incstack = 0
 17308                           ; Regs used in _init_TMR1: [wreg+status,2+status,0]
 17309  2001  30CF               	movlw	-49
 17310  2002  0020               	movlb	0	; select bank0
 17311  2003  0598               	andwf	24,f	;volatile
 17312                           
 17313                           ;main.c: 170:     TMR1 = 0;
 17314  2004  0196               	clrf	22	;volatile
 17315  2005  0197               	clrf	23	;volatile
 17316                           
 17317                           ;main.c: 172:     T1CONbits.TMR1ON = 1;
 17318  2006  1418               	bsf	24,0	;volatile
 17319                           
 17320                           ;main.c: 174:     PIE1bits.TMR1IE = 1;
 17321  2007  0021               	movlb	1	; select bank1
 17322  2008  1411               	bsf	17,0	;volatile
 17323                           
 17324                           ;main.c: 176:     INTCONbits.PEIE = 1;
 17325  2009  170B               	bsf	11,6	;volatile
 17326                           
 17327                           ;main.c: 178:     (INTCONbits.GIE = 1);
 17328  200A  178B               	bsf	11,7	;volatile
 17329  200B  0008               	return
 17330  200C                     __end_of_init_TMR1:	
 17331                           
 17332                           	psect	text68
 17333  1801                     __ptext68:	
 17334 ;; *************** function _init_RGB *****************
 17335 ;; Defined at:
 17336 ;;		line 6 in file "RGB.c"
 17337 ;; Parameters:    Size  Location     Type
 17338 ;;		None
 17339 ;; Auto vars:     Size  Location     Type
 17340 ;;		None
 17341 ;; Return value:  Size  Location     Type
 17342 ;;                  1    wreg      void 
 17343 ;; Registers used:
 17344 ;;		None
 17345 ;; Tracked objects:
 17346 ;;		On entry : 0/0
 17347 ;;		On exit  : 0/0
 17348 ;;		Unchanged: 0/0
 17349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17354 ;;Total ram usage:        0 bytes
 17355 ;; Hardware stack levels used:    1
 17356 ;; Hardware stack levels required when called:    1
 17357 ;; This function calls:
 17358 ;;		Nothing
 17359 ;; This function is called by:
 17360 ;;		_main
 17361 ;; This function uses a non-reentrant model
 17362 ;;
 17363                           
 17364                           
 17365                           ;psect for function _init_RGB
 17366  1801                     _init_RGB:	
 17367                           
 17368                           ;RGB.c: 8:     LATAbits.LATA4 = 1;
 17369                           
 17370                           ;incstack = 0
 17371                           ; Regs used in _init_RGB: []
 17372  1801  0022               	movlb	2	; select bank2
 17373  1802  160C               	bsf	12,4	;volatile
 17374                           
 17375                           ;RGB.c: 9:     LATAbits.LATA5 = 1;
 17376  1803  168C               	bsf	12,5	;volatile
 17377                           
 17378                           ;RGB.c: 10:     LATEbits.LATE0 = 1;
 17379  1804  1410               	bsf	16,0	;volatile
 17380  1805  0008               	return
 17381  1806                     __end_of_init_RGB:	
 17382                           
 17383                           	psect	text69
 17384  36F7                     __ptext69:	
 17385 ;; *************** function _init_I2C *****************
 17386 ;; Defined at:
 17387 ;;		line 10 in file "I2C.c"
 17388 ;; Parameters:    Size  Location     Type
 17389 ;;		None
 17390 ;; Auto vars:     Size  Location     Type
 17391 ;;		None
 17392 ;; Return value:  Size  Location     Type
 17393 ;;                  1    wreg      void 
 17394 ;; Registers used:
 17395 ;;		wreg, status,2, status,0
 17396 ;; Tracked objects:
 17397 ;;		On entry : 0/0
 17398 ;;		On exit  : 0/0
 17399 ;;		Unchanged: 0/0
 17400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17403 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17404 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17405 ;;Total ram usage:        1 bytes
 17406 ;; Hardware stack levels used:    1
 17407 ;; Hardware stack levels required when called:    1
 17408 ;; This function calls:
 17409 ;;		Nothing
 17410 ;; This function is called by:
 17411 ;;		_main
 17412 ;; This function uses a non-reentrant model
 17413 ;;
 17414                           
 17415                           
 17416                           ;psect for function _init_I2C
 17417  36F7                     _init_I2C:	
 17418                           
 17419                           ;I2C.c: 14:     SSPCONbits.SSPM = 0x08;
 17420                           
 17421                           ;incstack = 0
 17422                           ; Regs used in _init_I2C: [wreg+status,2+status,0]
 17423  36F7  0024               	movlb	4	; select bank4
 17424  36F8  0815               	movf	21,w	;volatile
 17425  36F9  39F0               	andlw	-16
 17426  36FA  3808               	iorlw	8
 17427  36FB  0095               	movwf	21	;volatile
 17428                           
 17429                           ;I2C.c: 15:     SSPCONbits.SSPEN = 1;
 17430  36FC  1695               	bsf	21,5	;volatile
 17431                           
 17432                           ;I2C.c: 24:     SSPADD = 39;
 17433  36FD  3027               	movlw	39
 17434  36FE  0092               	movwf	18	;volatile
 17435                           
 17436                           ;I2C.c: 27:     _delay((unsigned long)((10)*(16000000/4000.0)));
 17437  36FF  3034               	movlw	52
 17438  3700  00F1               	movwf	??_init_I2C
 17439  3701  30F2               	movlw	242
 17440  3702                     u11857:	
 17441  3702  0B89               	decfsz	9,f
 17442  3703  2F02               	goto	u11857
 17443  3704  0BF1               	decfsz	??_init_I2C,f
 17444  3705  2F02               	goto	u11857
 17445  3706  0008               	return
 17446  3707                     __end_of_init_I2C:	
 17447                           
 17448                           	psect	text70
 17449  0807                     __ptext70:	
 17450 ;; *************** function _init_GPIO *****************
 17451 ;; Defined at:
 17452 ;;		line 182 in file "main.c"
 17453 ;; Parameters:    Size  Location     Type
 17454 ;;		None
 17455 ;; Auto vars:     Size  Location     Type
 17456 ;;		None
 17457 ;; Return value:  Size  Location     Type
 17458 ;;                  1    wreg      void 
 17459 ;; Registers used:
 17460 ;;		wreg, status,2, status,0
 17461 ;; Tracked objects:
 17462 ;;		On entry : 0/0
 17463 ;;		On exit  : 0/0
 17464 ;;		Unchanged: 0/0
 17465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17470 ;;Total ram usage:        0 bytes
 17471 ;; Hardware stack levels used:    1
 17472 ;; Hardware stack levels required when called:    1
 17473 ;; This function calls:
 17474 ;;		Nothing
 17475 ;; This function is called by:
 17476 ;;		_main
 17477 ;; This function uses a non-reentrant model
 17478 ;;
 17479                           
 17480                           
 17481                           ;psect for function _init_GPIO
 17482  0807                     _init_GPIO:	
 17483                           
 17484                           ;main.c: 188:     TRISBbits.TRISB2 = 0;
 17485                           
 17486                           ;incstack = 0
 17487                           ; Regs used in _init_GPIO: [wreg+status,2+status,0]
 17488  0807  0021               	movlb	1	; select bank1
 17489  0808  110D               	bcf	13,2	;volatile
 17490                           
 17491                           ;main.c: 189:     ANSELBbits.ANSB2 = 0;
 17492  0809  0023               	movlb	3	; select bank3
 17493  080A  110D               	bcf	13,2	;volatile
 17494                           
 17495                           ;main.c: 190:     TRISBbits.TRISB3 = 1;
 17496  080B  0021               	movlb	1	; select bank1
 17497  080C  158D               	bsf	13,3	;volatile
 17498                           
 17499                           ;main.c: 191:     ANSELBbits.ANSB3 = 0;
 17500  080D  0023               	movlb	3	; select bank3
 17501  080E  118D               	bcf	13,3	;volatile
 17502                           
 17503                           ;main.c: 196:     ANSELCbits.ANSC4 = 0;
 17504  080F  120E               	bcf	14,4	;volatile
 17505                           
 17506                           ;main.c: 197:     ANSELCbits.ANSC5 = 0;
 17507  0810  128E               	bcf	14,5	;volatile
 17508                           
 17509                           ;main.c: 198:     TRISCbits.TRISC4 = 1;
 17510  0811  0021               	movlb	1	; select bank1
 17511  0812  160E               	bsf	14,4	;volatile
 17512                           
 17513                           ;main.c: 199:     TRISCbits.TRISC5 = 1;
 17514  0813  168E               	bsf	14,5	;volatile
 17515                           
 17516                           ;main.c: 208:     TRISAbits.TRISA4 = 0;
 17517  0814  120C               	bcf	12,4	;volatile
 17518                           
 17519                           ;main.c: 209:     TRISAbits.TRISA5 = 0;
 17520  0815  128C               	bcf	12,5	;volatile
 17521                           
 17522                           ;main.c: 210:     TRISEbits.TRISE0 = 0;
 17523  0816  1010               	bcf	16,0	;volatile
 17524                           
 17525                           ;main.c: 216:     PPSLOCK = 0x55;
 17526  0817  3055               	movlw	85
 17527  0818  003C               	movlb	28	; select bank28
 17528  0819  008F               	movwf	15	;volsfr
 17529                           
 17530                           ;main.c: 217:     PPSLOCK = 0xAA;
 17531  081A  30AA               	movlw	170
 17532  081B  008F               	movwf	15	;volsfr
 17533                           
 17534                           ;main.c: 218:     PPSLOCKbits.PPSLOCKED = 0x00;
 17535  081C  100F               	bcf	15,0	;volsfr
 17536                           
 17537                           ;main.c: 222:     RC4PPSbits.RC4PPS = 0x0011;
 17538  081D  003D               	movlb	29	; select bank29
 17539  081E  0824               	movf	36,w	;volatile
 17540  081F  39E0               	andlw	-32
 17541  0820  3811               	iorlw	17
 17542  0821  00A4               	movwf	36	;volatile
 17543                           
 17544                           ;main.c: 223:     SSPDATPPSbits.SSPDATPPS = 0x0014;
 17545  0822  003C               	movlb	28	; select bank28
 17546  0823  0821               	movf	33,w	;volatile
 17547  0824  39E0               	andlw	-32
 17548  0825  3814               	iorlw	20
 17549  0826  00A1               	movwf	33	;volatile
 17550                           
 17551                           ;main.c: 224:     SSPCLKPPSbits.SSPCLKPPS = 0x0015;
 17552  0827  0820               	movf	32,w	;volatile
 17553  0828  39E0               	andlw	-32
 17554  0829  3815               	iorlw	21
 17555  082A  00A0               	movwf	32	;volatile
 17556                           
 17557                           ;main.c: 225:     RC5PPSbits.RC5PPS = 0x0010;
 17558  082B  003D               	movlb	29	; select bank29
 17559  082C  0825               	movf	37,w	;volatile
 17560  082D  39E0               	andlw	-32
 17561  082E  3810               	iorlw	16
 17562  082F  00A5               	movwf	37	;volatile
 17563                           
 17564                           ;main.c: 228:     RB2PPSbits.RB2PPS = 0x14;
 17565  0830  081A               	movf	26,w	;volatile
 17566  0831  39E0               	andlw	-32
 17567  0832  3814               	iorlw	20
 17568  0833  009A               	movwf	26	;volatile
 17569                           
 17570                           ;main.c: 229:     RXPPSbits.RXPPS = 0x0B;
 17571  0834  003C               	movlb	28	; select bank28
 17572  0835  0824               	movf	36,w	;volatile
 17573  0836  39E0               	andlw	-32
 17574  0837  380B               	iorlw	11
 17575  0838  00A4               	movwf	36	;volatile
 17576                           
 17577                           ;main.c: 231:     PPSLOCK = 0x55;
 17578  0839  3055               	movlw	85
 17579  083A  008F               	movwf	15	;volsfr
 17580                           
 17581                           ;main.c: 232:     PPSLOCK = 0xAA;
 17582  083B  30AA               	movlw	170
 17583  083C  008F               	movwf	15	;volsfr
 17584                           
 17585                           ;main.c: 233:     PPSLOCKbits.PPSLOCKED = 0x01;
 17586  083D  140F               	bsf	15,0	;volsfr
 17587  083E  0008               	return
 17588  083F                     __end_of_init_GPIO:	
 17589                           
 17590                           	psect	text71
 17591  369A                     __ptext71:	
 17592 ;; *************** function _initClock *****************
 17593 ;; Defined at:
 17594 ;;		line 156 in file "main.c"
 17595 ;; Parameters:    Size  Location     Type
 17596 ;;		None
 17597 ;; Auto vars:     Size  Location     Type
 17598 ;;		None
 17599 ;; Return value:  Size  Location     Type
 17600 ;;                  1    wreg      void 
 17601 ;; Registers used:
 17602 ;;		status,2, status,0, pclath, cstack
 17603 ;; Tracked objects:
 17604 ;;		On entry : 0/0
 17605 ;;		On exit  : 0/0
 17606 ;;		Unchanged: 0/0
 17607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17612 ;;Total ram usage:        0 bytes
 17613 ;; Hardware stack levels used:    1
 17614 ;; Hardware stack levels required when called:    2
 17615 ;; This function calls:
 17616 ;;		_internal_16
 17617 ;; This function is called by:
 17618 ;;		_main
 17619 ;; This function uses a non-reentrant model
 17620 ;;
 17621                           
 17622                           
 17623                           ;psect for function _initClock
 17624  369A                     _initClock:	
 17625                           
 17626                           ;main.c: 158:     internal_16();
 17627                           
 17628                           ;incstack = 0
 17629                           ; Regs used in _initClock: [status,2+status,0+pclath+cstack]
 17630  369A  31B6  26B5         	fcall	_internal_16
 17631  369C  0008               	return
 17632  369D                     __end_of_initClock:	
 17633                           
 17634                           	psect	text72
 17635  36B5                     __ptext72:	
 17636 ;; *************** function _internal_16 *****************
 17637 ;; Defined at:
 17638 ;;		line 26 in file "pic16f1719_internals.c"
 17639 ;; Parameters:    Size  Location     Type
 17640 ;;		None
 17641 ;; Auto vars:     Size  Location     Type
 17642 ;;		None
 17643 ;; Return value:  Size  Location     Type
 17644 ;;                  1    wreg      void 
 17645 ;; Registers used:
 17646 ;;		None
 17647 ;; Tracked objects:
 17648 ;;		On entry : 0/0
 17649 ;;		On exit  : 0/0
 17650 ;;		Unchanged: 0/0
 17651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17656 ;;Total ram usage:        0 bytes
 17657 ;; Hardware stack levels used:    1
 17658 ;; Hardware stack levels required when called:    1
 17659 ;; This function calls:
 17660 ;;		Nothing
 17661 ;; This function is called by:
 17662 ;;		_initClock
 17663 ;; This function uses a non-reentrant model
 17664 ;;
 17665                           
 17666                           
 17667                           ;psect for function _internal_16
 17668  36B5                     _internal_16:	
 17669                           
 17670                           ;pic16f1719_internals.c: 28: SCS0 = 0;
 17671                           
 17672                           ;incstack = 0
 17673                           ; Regs used in _internal_16: []
 17674  36B5  0021               	movlb	1	; select bank1
 17675  36B6  1019               	bcf	25,0	;volatile
 17676                           
 17677                           ;pic16f1719_internals.c: 29: SCS1 = 0;
 17678  36B7  1099               	bcf	25,1	;volatile
 17679                           
 17680                           ;pic16f1719_internals.c: 31: IRCF0 = 1;
 17681  36B8  1599               	bsf	25,3	;volatile
 17682                           
 17683                           ;pic16f1719_internals.c: 32: IRCF1 = 1;
 17684  36B9  1619               	bsf	25,4	;volatile
 17685                           
 17686                           ;pic16f1719_internals.c: 33: IRCF2 = 1;
 17687  36BA  1699               	bsf	25,5	;volatile
 17688                           
 17689                           ;pic16f1719_internals.c: 34: IRCF3 = 1;
 17690  36BB  1719               	bsf	25,6	;volatile
 17691                           
 17692                           ;pic16f1719_internals.c: 36: SPLLEN = 0;
 17693  36BC  1399               	bcf	25,7	;volatile
 17694  36BD  0008               	return
 17695  36BE                     __end_of_internal_16:	
 17696                           
 17697                           	psect	text73
 17698  21A3                     __ptext73:	
 17699 ;; *************** function _EUSART_Initialize *****************
 17700 ;; Defined at:
 17701 ;;		line 6 in file "EUSART.c"
 17702 ;; Parameters:    Size  Location     Type
 17703 ;;  baudrate        4    6[BANK0 ] const long 
 17704 ;; Auto vars:     Size  Location     Type
 17705 ;;  x               2   10[COMMON] unsigned int 
 17706 ;; Return value:  Size  Location     Type
 17707 ;;                  1    wreg      unsigned char 
 17708 ;; Registers used:
 17709 ;;		wreg, status,2, status,0, pclath, cstack
 17710 ;; Tracked objects:
 17711 ;;		On entry : 0/0
 17712 ;;		On exit  : 0/0
 17713 ;;		Unchanged: 0/0
 17714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17715 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17716 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17717 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17718 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17719 ;;Total ram usage:       18 bytes
 17720 ;; Hardware stack levels used:    1
 17721 ;; Hardware stack levels required when called:    2
 17722 ;; This function calls:
 17723 ;;		___aldiv
 17724 ;; This function is called by:
 17725 ;;		_main
 17726 ;; This function uses a non-reentrant model
 17727 ;;
 17728                           
 17729                           
 17730                           ;psect for function _EUSART_Initialize
 17731  21A3                     _EUSART_Initialize:	
 17732                           
 17733                           ;EUSART.c: 6: char EUSART_Initialize(const long int baudrate);EUSART.c: 7: {;EUSART.c: 8
      +                          :  unsigned int x;;EUSART.c: 9:  x = (16000000 - baudrate*64)/(baudrate*64);
 17734                           
 17735                           ;incstack = 0
 17736                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17737  21A3  0020               	movlb	0	; select bank0
 17738  21A4  0826               	movf	EUSART_Initialize@baudrate,w
 17739  21A5  00AA               	movwf	??_EUSART_Initialize
 17740  21A6  0827               	movf	EUSART_Initialize@baudrate+1,w
 17741  21A7  00AB               	movwf	??_EUSART_Initialize+1
 17742  21A8  0828               	movf	EUSART_Initialize@baudrate+2,w
 17743  21A9  00AC               	movwf	??_EUSART_Initialize+2
 17744  21AA  0829               	movf	EUSART_Initialize@baudrate+3,w
 17745  21AB  00AD               	movwf	??_EUSART_Initialize+3
 17746  21AC  3006               	movlw	6
 17747  21AD                     u9225:	
 17748  21AD  35AA               	lslf	??_EUSART_Initialize,f
 17749  21AE  0DAB               	rlf	??_EUSART_Initialize+1,f
 17750  21AF  0DAC               	rlf	??_EUSART_Initialize+2,f
 17751  21B0  0DAD               	rlf	??_EUSART_Initialize+3,f
 17752  21B1  0B89               	decfsz	9,f
 17753  21B2  29AD               	goto	u9225
 17754  21B3  082D               	movf	??_EUSART_Initialize+3,w
 17755  21B4  00F4               	movwf	___aldiv@divisor+3
 17756  21B5  082C               	movf	??_EUSART_Initialize+2,w
 17757  21B6  00F3               	movwf	___aldiv@divisor+2
 17758  21B7  082B               	movf	??_EUSART_Initialize+1,w
 17759  21B8  00F2               	movwf	___aldiv@divisor+1
 17760  21B9  082A               	movf	??_EUSART_Initialize,w
 17761  21BA  00F1               	movwf	___aldiv@divisor
 17762  21BB  0826               	movf	EUSART_Initialize@baudrate,w
 17763  21BC  00AE               	movwf	??_EUSART_Initialize+4
 17764  21BD  0827               	movf	EUSART_Initialize@baudrate+1,w
 17765  21BE  00AF               	movwf	??_EUSART_Initialize+5
 17766  21BF  0828               	movf	EUSART_Initialize@baudrate+2,w
 17767  21C0  00B0               	movwf	??_EUSART_Initialize+6
 17768  21C1  0829               	movf	EUSART_Initialize@baudrate+3,w
 17769  21C2  00B1               	movwf	??_EUSART_Initialize+7
 17770  21C3  3006               	movlw	6
 17771  21C4                     u9235:	
 17772  21C4  35AE               	lslf	??_EUSART_Initialize+4,f
 17773  21C5  0DAF               	rlf	??_EUSART_Initialize+5,f
 17774  21C6  0DB0               	rlf	??_EUSART_Initialize+6,f
 17775  21C7  0DB1               	rlf	??_EUSART_Initialize+7,f
 17776  21C8  0B89               	decfsz	9,f
 17777  21C9  29C4               	goto	u9235
 17778  21CA  3000               	movlw	0
 17779  21CB  00B2               	movwf	??_EUSART_Initialize+8
 17780  21CC  3024               	movlw	36
 17781  21CD  00B3               	movwf	??_EUSART_Initialize+9
 17782  21CE  30F4               	movlw	244
 17783  21CF  00B4               	movwf	??_EUSART_Initialize+10
 17784  21D0  3000               	movlw	0
 17785  21D1  00B5               	movwf	??_EUSART_Initialize+11
 17786  21D2  082E               	movf	??_EUSART_Initialize+4,w
 17787  21D3  02B2               	subwf	??_EUSART_Initialize+8,f
 17788  21D4  082F               	movf	??_EUSART_Initialize+5,w
 17789  21D5  3BB3               	subwfb	??_EUSART_Initialize+9,f
 17790  21D6  0830               	movf	??_EUSART_Initialize+6,w
 17791  21D7  3BB4               	subwfb	??_EUSART_Initialize+10,f
 17792  21D8  0831               	movf	??_EUSART_Initialize+7,w
 17793  21D9  3BB5               	subwfb	??_EUSART_Initialize+11,f
 17794  21DA  0835               	movf	??_EUSART_Initialize+11,w
 17795  21DB  00F8               	movwf	___aldiv@dividend+3
 17796  21DC  0834               	movf	??_EUSART_Initialize+10,w
 17797  21DD  00F7               	movwf	___aldiv@dividend+2
 17798  21DE  0833               	movf	??_EUSART_Initialize+9,w
 17799  21DF  00F6               	movwf	___aldiv@dividend+1
 17800  21E0  0832               	movf	??_EUSART_Initialize+8,w
 17801  21E1  00F5               	movwf	___aldiv@dividend
 17802  21E2  31AE  2665  31A1   	fcall	___aldiv
 17803  21E5  0872               	movf	?___aldiv+1,w
 17804  21E6  00FB               	movwf	EUSART_Initialize@x+1
 17805  21E7  0871               	movf	?___aldiv,w
 17806  21E8  00FA               	movwf	EUSART_Initialize@x
 17807                           
 17808                           ;EUSART.c: 10:  if(x>255)
 17809  21E9  3001               	movlw	1
 17810  21EA  027B               	subwf	EUSART_Initialize@x+1,w
 17811  21EB  3000               	movlw	0
 17812  21EC  1903               	skipnz
 17813  21ED  027A               	subwf	EUSART_Initialize@x,w
 17814  21EE  1C03               	skipc
 17815  21EF  2A38               	goto	l6403
 17816                           
 17817                           ;EUSART.c: 11:  {;EUSART.c: 12:   x = (16000000 - baudrate*16)/(baudrate*16);
 17818  21F0  0020               	movlb	0	; select bank0
 17819  21F1  0826               	movf	EUSART_Initialize@baudrate,w
 17820  21F2  00AA               	movwf	??_EUSART_Initialize
 17821  21F3  0827               	movf	EUSART_Initialize@baudrate+1,w
 17822  21F4  00AB               	movwf	??_EUSART_Initialize+1
 17823  21F5  0828               	movf	EUSART_Initialize@baudrate+2,w
 17824  21F6  00AC               	movwf	??_EUSART_Initialize+2
 17825  21F7  0829               	movf	EUSART_Initialize@baudrate+3,w
 17826  21F8  00AD               	movwf	??_EUSART_Initialize+3
 17827  21F9  3004               	movlw	4
 17828  21FA                     u9255:	
 17829  21FA  35AA               	lslf	??_EUSART_Initialize,f
 17830  21FB  0DAB               	rlf	??_EUSART_Initialize+1,f
 17831  21FC  0DAC               	rlf	??_EUSART_Initialize+2,f
 17832  21FD  0DAD               	rlf	??_EUSART_Initialize+3,f
 17833  21FE  0B89               	decfsz	9,f
 17834  21FF  29FA               	goto	u9255
 17835  2200  082D               	movf	??_EUSART_Initialize+3,w
 17836  2201  00F4               	movwf	___aldiv@divisor+3
 17837  2202  082C               	movf	??_EUSART_Initialize+2,w
 17838  2203  00F3               	movwf	___aldiv@divisor+2
 17839  2204  082B               	movf	??_EUSART_Initialize+1,w
 17840  2205  00F2               	movwf	___aldiv@divisor+1
 17841  2206  082A               	movf	??_EUSART_Initialize,w
 17842  2207  00F1               	movwf	___aldiv@divisor
 17843  2208  0826               	movf	EUSART_Initialize@baudrate,w
 17844  2209  00AE               	movwf	??_EUSART_Initialize+4
 17845  220A  0827               	movf	EUSART_Initialize@baudrate+1,w
 17846  220B  00AF               	movwf	??_EUSART_Initialize+5
 17847  220C  0828               	movf	EUSART_Initialize@baudrate+2,w
 17848  220D  00B0               	movwf	??_EUSART_Initialize+6
 17849  220E  0829               	movf	EUSART_Initialize@baudrate+3,w
 17850  220F  00B1               	movwf	??_EUSART_Initialize+7
 17851  2210  3004               	movlw	4
 17852  2211                     u9265:	
 17853  2211  35AE               	lslf	??_EUSART_Initialize+4,f
 17854  2212  0DAF               	rlf	??_EUSART_Initialize+5,f
 17855  2213  0DB0               	rlf	??_EUSART_Initialize+6,f
 17856  2214  0DB1               	rlf	??_EUSART_Initialize+7,f
 17857  2215  0B89               	decfsz	9,f
 17858  2216  2A11               	goto	u9265
 17859  2217  3000               	movlw	0
 17860  2218  00B2               	movwf	??_EUSART_Initialize+8
 17861  2219  3024               	movlw	36
 17862  221A  00B3               	movwf	??_EUSART_Initialize+9
 17863  221B  30F4               	movlw	244
 17864  221C  00B4               	movwf	??_EUSART_Initialize+10
 17865  221D  3000               	movlw	0
 17866  221E  00B5               	movwf	??_EUSART_Initialize+11
 17867  221F  082E               	movf	??_EUSART_Initialize+4,w
 17868  2220  02B2               	subwf	??_EUSART_Initialize+8,f
 17869  2221  082F               	movf	??_EUSART_Initialize+5,w
 17870  2222  3BB3               	subwfb	??_EUSART_Initialize+9,f
 17871  2223  0830               	movf	??_EUSART_Initialize+6,w
 17872  2224  3BB4               	subwfb	??_EUSART_Initialize+10,f
 17873  2225  0831               	movf	??_EUSART_Initialize+7,w
 17874  2226  3BB5               	subwfb	??_EUSART_Initialize+11,f
 17875  2227  0835               	movf	??_EUSART_Initialize+11,w
 17876  2228  00F8               	movwf	___aldiv@dividend+3
 17877  2229  0834               	movf	??_EUSART_Initialize+10,w
 17878  222A  00F7               	movwf	___aldiv@dividend+2
 17879  222B  0833               	movf	??_EUSART_Initialize+9,w
 17880  222C  00F6               	movwf	___aldiv@dividend+1
 17881  222D  0832               	movf	??_EUSART_Initialize+8,w
 17882  222E  00F5               	movwf	___aldiv@dividend
 17883  222F  31AE  2665  31A1   	fcall	___aldiv
 17884  2232  0872               	movf	?___aldiv+1,w
 17885  2233  00FB               	movwf	EUSART_Initialize@x+1
 17886  2234  0871               	movf	?___aldiv,w
 17887  2235  00FA               	movwf	EUSART_Initialize@x
 17888                           
 17889                           ;EUSART.c: 13:   BRGH = 1;
 17890  2236  0023               	movlb	3	; select bank3
 17891  2237  151E               	bsf	30,2	;volatile
 17892  2238                     l6403:	
 17893                           
 17894                           ;EUSART.c: 15:  if(x<256)
 17895  2238  3001               	movlw	1
 17896  2239  027B               	subwf	EUSART_Initialize@x+1,w
 17897  223A  3000               	movlw	0
 17898  223B  1903               	skipnz
 17899  223C  027A               	subwf	EUSART_Initialize@x,w
 17900  223D  1803               	skipnc
 17901  223E  0008               	return
 17902                           
 17903                           ;EUSART.c: 16:  {;EUSART.c: 17:    SPBRG = x;
 17904  223F  087A               	movf	EUSART_Initialize@x,w
 17905  2240  0023               	movlb	3	; select bank3
 17906  2241  009B               	movwf	27	;volatile
 17907                           
 17908                           ;EUSART.c: 18:    SYNC = 0;
 17909  2242  121E               	bcf	30,4	;volatile
 17910                           
 17911                           ;EUSART.c: 19:    SPEN = 1;
 17912  2243  179D               	bsf	29,7	;volatile
 17913                           
 17914                           ;EUSART.c: 20:           TRISC7 = 1;
 17915  2244  0021               	movlb	1	; select bank1
 17916  2245  178E               	bsf	14,7	;volatile
 17917                           
 17918                           ;EUSART.c: 21:           TRISC6 = 1;
 17919  2246  170E               	bsf	14,6	;volatile
 17920                           
 17921                           ;EUSART.c: 22:           CREN = 1;
 17922  2247  0023               	movlb	3	; select bank3
 17923  2248  161D               	bsf	29,4	;volatile
 17924                           
 17925                           ;EUSART.c: 23:           TXEN = 1;
 17926  2249  169E               	bsf	30,5	;volatile
 17927  224A  0008               	return
 17928  224B                     __end_of_EUSART_Initialize:	
 17929                           
 17930                           	psect	text74
 17931  2E65                     __ptext74:	
 17932 ;; *************** function ___aldiv *****************
 17933 ;; Defined at:
 17934 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
 17935 ;; Parameters:    Size  Location     Type
 17936 ;;  divisor         4    1[COMMON] long 
 17937 ;;  dividend        4    5[COMMON] long 
 17938 ;; Auto vars:     Size  Location     Type
 17939 ;;  quotient        4    2[BANK0 ] long 
 17940 ;;  sign            1    1[BANK0 ] unsigned char 
 17941 ;;  counter         1    0[BANK0 ] unsigned char 
 17942 ;; Return value:  Size  Location     Type
 17943 ;;                  4    1[COMMON] long 
 17944 ;; Registers used:
 17945 ;;		wreg, status,2, status,0
 17946 ;; Tracked objects:
 17947 ;;		On entry : 0/0
 17948 ;;		On exit  : 0/0
 17949 ;;		Unchanged: 0/0
 17950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17951 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17952 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17953 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17954 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17955 ;;Total ram usage:       15 bytes
 17956 ;; Hardware stack levels used:    1
 17957 ;; Hardware stack levels required when called:    1
 17958 ;; This function calls:
 17959 ;;		Nothing
 17960 ;; This function is called by:
 17961 ;;		_EUSART_Initialize
 17962 ;; This function uses a non-reentrant model
 17963 ;;
 17964                           
 17965                           
 17966                           ;psect for function ___aldiv
 17967  2E65                     ___aldiv:	
 17968                           
 17969                           ;incstack = 0
 17970                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 17971  2E65  0020               	movlb	0	; select bank0
 17972  2E66  01A1               	clrf	___aldiv@sign
 17973  2E67  1FF4               	btfss	___aldiv@divisor+3,7
 17974  2E68  2E76               	goto	l884
 17975  2E69  09F1               	comf	___aldiv@divisor,f
 17976  2E6A  09F2               	comf	___aldiv@divisor+1,f
 17977  2E6B  09F3               	comf	___aldiv@divisor+2,f
 17978  2E6C  09F4               	comf	___aldiv@divisor+3,f
 17979  2E6D  0AF1               	incf	___aldiv@divisor,f
 17980  2E6E  1903               	skipnz
 17981  2E6F  0AF2               	incf	___aldiv@divisor+1,f
 17982  2E70  1903               	skipnz
 17983  2E71  0AF3               	incf	___aldiv@divisor+2,f
 17984  2E72  1903               	skipnz
 17985  2E73  0AF4               	incf	___aldiv@divisor+3,f
 17986  2E74  01A1               	clrf	___aldiv@sign
 17987  2E75  0AA1               	incf	___aldiv@sign,f
 17988  2E76                     l884:	
 17989  2E76  1FF8               	btfss	___aldiv@dividend+3,7
 17990  2E77  2E87               	goto	l6365
 17991  2E78  09F5               	comf	___aldiv@dividend,f
 17992  2E79  09F6               	comf	___aldiv@dividend+1,f
 17993  2E7A  09F7               	comf	___aldiv@dividend+2,f
 17994  2E7B  09F8               	comf	___aldiv@dividend+3,f
 17995  2E7C  0AF5               	incf	___aldiv@dividend,f
 17996  2E7D  1903               	skipnz
 17997  2E7E  0AF6               	incf	___aldiv@dividend+1,f
 17998  2E7F  1903               	skipnz
 17999  2E80  0AF7               	incf	___aldiv@dividend+2,f
 18000  2E81  1903               	skipnz
 18001  2E82  0AF8               	incf	___aldiv@dividend+3,f
 18002  2E83  3001               	movlw	1
 18003  2E84  00F9               	movwf	??___aldiv
 18004  2E85  0879               	movf	??___aldiv,w
 18005  2E86  06A1               	xorwf	___aldiv@sign,f
 18006  2E87                     l6365:	
 18007  2E87  3000               	movlw	0
 18008  2E88  00A5               	movwf	___aldiv@quotient+3
 18009  2E89  3000               	movlw	0
 18010  2E8A  00A4               	movwf	___aldiv@quotient+2
 18011  2E8B  3000               	movlw	0
 18012  2E8C  00A3               	movwf	___aldiv@quotient+1
 18013  2E8D  3000               	movlw	0
 18014  2E8E  00A2               	movwf	___aldiv@quotient
 18015  2E8F  0874               	movf	___aldiv@divisor+3,w
 18016  2E90  0473               	iorwf	___aldiv@divisor+2,w
 18017  2E91  0472               	iorwf	___aldiv@divisor+1,w
 18018  2E92  0471               	iorwf	___aldiv@divisor,w
 18019  2E93  1903               	skipnz
 18020  2E94  2ED0               	goto	l6387
 18021  2E95  01A0               	clrf	___aldiv@counter
 18022  2E96  0AA0               	incf	___aldiv@counter,f
 18023  2E97                     l6373:	
 18024  2E97  1BF4               	btfsc	___aldiv@divisor+3,7
 18025  2E98  2EA5               	goto	l6375
 18026  2E99  3001               	movlw	1
 18027  2E9A                     u9155:	
 18028  2E9A  35F1               	lslf	___aldiv@divisor,f
 18029  2E9B  0DF2               	rlf	___aldiv@divisor+1,f
 18030  2E9C  0DF3               	rlf	___aldiv@divisor+2,f
 18031  2E9D  0DF4               	rlf	___aldiv@divisor+3,f
 18032  2E9E  0B89               	decfsz	9,f
 18033  2E9F  2E9A               	goto	u9155
 18034  2EA0  3001               	movlw	1
 18035  2EA1  00F9               	movwf	??___aldiv
 18036  2EA2  0879               	movf	??___aldiv,w
 18037  2EA3  07A0               	addwf	___aldiv@counter,f
 18038  2EA4  2E97               	goto	l6373
 18039  2EA5                     l6375:	
 18040  2EA5  3001               	movlw	1
 18041  2EA6                     u9175:	
 18042  2EA6  35A2               	lslf	___aldiv@quotient,f
 18043  2EA7  0DA3               	rlf	___aldiv@quotient+1,f
 18044  2EA8  0DA4               	rlf	___aldiv@quotient+2,f
 18045  2EA9  0DA5               	rlf	___aldiv@quotient+3,f
 18046  2EAA  0B89               	decfsz	9,f
 18047  2EAB  2EA6               	goto	u9175
 18048  2EAC  0874               	movf	___aldiv@divisor+3,w
 18049  2EAD  0278               	subwf	___aldiv@dividend+3,w
 18050  2EAE  1D03               	skipz
 18051  2EAF  2EBA               	goto	u9185
 18052  2EB0  0873               	movf	___aldiv@divisor+2,w
 18053  2EB1  0277               	subwf	___aldiv@dividend+2,w
 18054  2EB2  1D03               	skipz
 18055  2EB3  2EBA               	goto	u9185
 18056  2EB4  0872               	movf	___aldiv@divisor+1,w
 18057  2EB5  0276               	subwf	___aldiv@dividend+1,w
 18058  2EB6  1D03               	skipz
 18059  2EB7  2EBA               	goto	u9185
 18060  2EB8  0871               	movf	___aldiv@divisor,w
 18061  2EB9  0275               	subwf	___aldiv@dividend,w
 18062  2EBA                     u9185:	
 18063  2EBA  1C03               	skipc
 18064  2EBB  2EC5               	goto	l6383
 18065  2EBC  0871               	movf	___aldiv@divisor,w
 18066  2EBD  02F5               	subwf	___aldiv@dividend,f
 18067  2EBE  0872               	movf	___aldiv@divisor+1,w
 18068  2EBF  3BF6               	subwfb	___aldiv@dividend+1,f
 18069  2EC0  0873               	movf	___aldiv@divisor+2,w
 18070  2EC1  3BF7               	subwfb	___aldiv@dividend+2,f
 18071  2EC2  0874               	movf	___aldiv@divisor+3,w
 18072  2EC3  3BF8               	subwfb	___aldiv@dividend+3,f
 18073  2EC4  1422               	bsf	___aldiv@quotient,0
 18074  2EC5                     l6383:	
 18075  2EC5  3001               	movlw	1
 18076  2EC6                     u9195:	
 18077  2EC6  36F4               	lsrf	___aldiv@divisor+3,f
 18078  2EC7  0CF3               	rrf	___aldiv@divisor+2,f
 18079  2EC8  0CF2               	rrf	___aldiv@divisor+1,f
 18080  2EC9  0CF1               	rrf	___aldiv@divisor,f
 18081  2ECA  0B89               	decfsz	9,f
 18082  2ECB  2EC6               	goto	u9195
 18083  2ECC  3001               	movlw	1
 18084  2ECD  02A0               	subwf	___aldiv@counter,f
 18085  2ECE  1D03               	btfss	3,2
 18086  2ECF  2EA5               	goto	l6375
 18087  2ED0                     l6387:	
 18088  2ED0  0821               	movf	___aldiv@sign,w
 18089  2ED1  1903               	btfsc	3,2
 18090  2ED2  2EDE               	goto	l6391
 18091  2ED3  09A2               	comf	___aldiv@quotient,f
 18092  2ED4  09A3               	comf	___aldiv@quotient+1,f
 18093  2ED5  09A4               	comf	___aldiv@quotient+2,f
 18094  2ED6  09A5               	comf	___aldiv@quotient+3,f
 18095  2ED7  0AA2               	incf	___aldiv@quotient,f
 18096  2ED8  1903               	skipnz
 18097  2ED9  0AA3               	incf	___aldiv@quotient+1,f
 18098  2EDA  1903               	skipnz
 18099  2EDB  0AA4               	incf	___aldiv@quotient+2,f
 18100  2EDC  1903               	skipnz
 18101  2EDD  0AA5               	incf	___aldiv@quotient+3,f
 18102  2EDE                     l6391:	
 18103  2EDE  0825               	movf	___aldiv@quotient+3,w
 18104  2EDF  00F4               	movwf	?___aldiv+3
 18105  2EE0  0824               	movf	___aldiv@quotient+2,w
 18106  2EE1  00F3               	movwf	?___aldiv+2
 18107  2EE2  0823               	movf	___aldiv@quotient+1,w
 18108  2EE3  00F2               	movwf	?___aldiv+1
 18109  2EE4  0822               	movf	___aldiv@quotient,w
 18110  2EE5  00F1               	movwf	?___aldiv
 18111  2EE6  0008               	return
 18112  2EE7                     __end_of___aldiv:	
 18113                           
 18114                           	psect	intentry
 18115  0004                     __pintentry:	
 18116 ;; *************** function _myIsr *****************
 18117 ;; Defined at:
 18118 ;;		line 57 in file "main.c"
 18119 ;; Parameters:    Size  Location     Type
 18120 ;;		None
 18121 ;; Auto vars:     Size  Location     Type
 18122 ;;		None
 18123 ;; Return value:  Size  Location     Type
 18124 ;;                  1    wreg      void 
 18125 ;; Registers used:
 18126 ;;		wreg, status,2, status,0
 18127 ;; Tracked objects:
 18128 ;;		On entry : 0/0
 18129 ;;		On exit  : 0/0
 18130 ;;		Unchanged: 0/0
 18131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18134 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18135 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18136 ;;Total ram usage:        1 bytes
 18137 ;; Hardware stack levels used:    1
 18138 ;; This function calls:
 18139 ;;		Nothing
 18140 ;; This function is called by:
 18141 ;;		Interrupt level 1
 18142 ;; This function uses a non-reentrant model
 18143 ;;
 18144                           
 18145  0004                     _myIsr:	
 18146                           
 18147                           ;incstack = 0
 18148  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 18149                           
 18150                           ; Regs used in _myIsr: [wreg+status,2+status,0]
 18151  0005  3180               	pagesel	$
 18152                           
 18153                           ;main.c: 59:     static uint8_t count = 0;;main.c: 61:     if (PIR1bits.TMR1IF && PIE1bi
      +                          ts.TMR1IE) {
 18154  0006  0020               	movlb	0	; select bank0
 18155  0007  1C11               	btfss	17,0	;volatile
 18156  0008  281C               	goto	i1l119
 18157  0009  0021               	movlb	1	; select bank1
 18158  000A  1C11               	btfss	17,0	;volatile
 18159  000B  281C               	goto	i1l119
 18160                           
 18161                           ;main.c: 62:         PIR1bits.TMR1IF = 0;
 18162  000C  0020               	movlb	0	; select bank0
 18163  000D  1011               	bcf	17,0	;volatile
 18164                           
 18165                           ;main.c: 63:         count++;
 18166  000E  3001               	movlw	1
 18167  000F  00F0               	movwf	??_myIsr
 18168  0010  0870               	movf	??_myIsr,w
 18169  0011  0023               	movlb	3	; select bank3
 18170  0012  07D1               	addwf	myIsr@count^(0+384),f
 18171                           
 18172                           ;main.c: 66:         if (count == 61) {
 18173  0013  303D               	movlw	61
 18174  0014  0651               	xorwf	myIsr@count^(0+384),w
 18175  0015  1D03               	btfss	3,2
 18176  0016  281C               	goto	i1l119
 18177                           
 18178                           ;main.c: 67:             tmr1_flag = 1;
 18179  0017  3001               	movlw	1
 18180  0018  00F0               	movwf	??_myIsr
 18181  0019  0870               	movf	??_myIsr,w
 18182  001A  00D2               	movwf	_tmr1_flag^(0+384)	;volatile
 18183                           
 18184                           ;main.c: 68:             count = 0;
 18185  001B  01D1               	clrf	myIsr@count^(0+384)
 18186  001C                     i1l119:	
 18187  001C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 18188  001D  0009               	retfie
 18189  001E                     __end_of_myIsr:	
 18190  007E                     btemp	set	126	;btemp
 18191  007E                     int$flags	set	126
 18192  007E                     wtemp0	set	126
 18193  2771                     
 18194                           	psect	text5_split_1
 18195  2EE7                     l7577:	
 18196                           
 18197                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
 18198  2EE7  0021               	movlb	1	; select bank1
 18199  2EE8  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 18200  2EE9  0086               	movwf	6
 18201  2EEA  0187               	clrf	7
 18202  2EEB  3F40               	moviw [0]fsr1
 18203  2EEC  00F1               	movwf	strncmp@_l
 18204  2EED  3F41               	moviw [1]fsr1
 18205  2EEE  00F2               	movwf	strncmp@_l+1
 18206  2EEF  3044               	movlw	low (STR_18| (0+32768))
 18207  2EF0  00F3               	movwf	strncmp@_r
 18208  2EF1  30B8               	movlw	high (STR_18| (0+32768))
 18209  2EF2  00F4               	movwf	strncmp@_r+1
 18210  2EF3  3003               	movlw	3
 18211  2EF4  00F5               	movwf	strncmp@n
 18212  2EF5  3000               	movlw	0
 18213  2EF6  00F6               	movwf	strncmp@n+1
 18214  2EF7  31A0  200C  31AE   	fcall	_strncmp
 18215  2EFA  0871               	movf	?_strncmp,w
 18216  2EFB  0472               	iorwf	?_strncmp+1,w
 18217  2EFC  1903               	btfsc	3,2
 18218  2EFD  2F15               	goto	l7581
 18219  2EFE  0021               	movlb	1	; select bank1
 18220  2EFF  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 18221  2F00  0086               	movwf	6
 18222  2F01  0187               	clrf	7
 18223  2F02  3F40               	moviw [0]fsr1
 18224  2F03  00F1               	movwf	strncmp@_l
 18225  2F04  3F41               	moviw [1]fsr1
 18226  2F05  00F2               	movwf	strncmp@_l+1
 18227  2F06  304C               	movlw	low (STR_22| (0+32768))
 18228  2F07  00F3               	movwf	strncmp@_r
 18229  2F08  30B8               	movlw	high (STR_22| (0+32768))
 18230  2F09  00F4               	movwf	strncmp@_r+1
 18231  2F0A  3003               	movlw	3
 18232  2F0B  00F5               	movwf	strncmp@n
 18233  2F0C  3000               	movlw	0
 18234  2F0D  00F6               	movwf	strncmp@n+1
 18235  2F0E  31A0  200C  31AE   	fcall	_strncmp
 18236  2F11  0871               	movf	?_strncmp,w
 18237  2F12  0472               	iorwf	?_strncmp+1,w
 18238  2F13  1D03               	btfss	3,2
 18239  2F14  2F68               	goto	L18
 18240  2F15                     l7581:	
 18241                           
 18242                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
 18243  2F15  0021               	movlb	1	; select bank1
 18244  2F16  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 18245  2F17  0086               	movwf	6
 18246  2F18  0187               	clrf	7
 18247  2F19  3003               	movlw	3
 18248  2F1A  0781               	addwf	1,f
 18249  2F1B  3141               	addfsr 1,1
 18250  2F1C  1803               	skipnc
 18251  2F1D  0A81               	incf	1,f
 18252                           
 18253                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
 18254  2F1E  0866               	movf	vfpfcnvrt@ap^(0+128),w
 18255  2F1F  0086               	movwf	6
 18256  2F20  3001               	movlw	1	; select bank2/3
 18257  2F21  0087               	movwf	7
 18258  2F22  0801               	movf	1,w
 18259  2F23  0084               	movwf	4
 18260  2F24  3001               	movlw	1	; select bank2/3
 18261  2F25  0085               	movwf	5
 18262  2F26  3002               	movlw	2
 18263  2F27  0781               	addwf	1,f
 18264  2F28  0800               	movf	0,w
 18265  2F29  0022               	movlb	2	; select bank2
 18266  2F2A  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 18267  2F2B  3980               	andlw	128
 18268  2F2C  1D03               	skipz
 18269  2F2D  30FF               	movlw	255
 18270  2F2E  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 18271  2F2F  00BE               	movwf	(vfpfcnvrt@ll+2)^(0+256)
 18272  2F30  00BF               	movwf	(vfpfcnvrt@ll+3)^(0+256)
 18273  2F31  00C0               	movwf	(vfpfcnvrt@ll+4)^(0+256)
 18274  2F32  00C1               	movwf	(vfpfcnvrt@ll+5)^(0+256)
 18275  2F33  00C2               	movwf	(vfpfcnvrt@ll+6)^(0+256)
 18276  2F34  00C3               	movwf	(vfpfcnvrt@ll+7)^(0+256)
 18277                           
 18278                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
 18279  2F35  0021               	movlb	1	; select bank1
 18280  2F36  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 18281  2F37  0020               	movlb	0	; select bank0
 18282  2F38  00B1               	movwf	dtoa@fp+1
 18283  2F39  0021               	movlb	1	; select bank1
 18284  2F3A  0863               	movf	vfpfcnvrt@fp^(0+128),w
 18285  2F3B  0020               	movlb	0	; select bank0
 18286  2F3C  00B0               	movwf	dtoa@fp
 18287  2F3D  0022               	movlb	2	; select bank2
 18288  2F3E  083C               	movf	vfpfcnvrt@ll^(0+256),w
 18289  2F3F  0020               	movlb	0	; select bank0
 18290  2F40  00B2               	movwf	dtoa@d
 18291  2F41  0022               	movlb	2	; select bank2
 18292  2F42  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 18293  2F43  0020               	movlb	0	; select bank0
 18294  2F44  00B3               	movwf	dtoa@d+1
 18295  2F45  0022               	movlb	2	; select bank2
 18296  2F46  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 18297  2F47  0020               	movlb	0	; select bank0
 18298  2F48  00B4               	movwf	dtoa@d+2
 18299  2F49  0022               	movlb	2	; select bank2
 18300  2F4A  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 18301  2F4B  0020               	movlb	0	; select bank0
 18302  2F4C  00B5               	movwf	dtoa@d+3
 18303  2F4D  0022               	movlb	2	; select bank2
 18304  2F4E  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 18305  2F4F  0020               	movlb	0	; select bank0
 18306  2F50  00B6               	movwf	dtoa@d+4
 18307  2F51  0022               	movlb	2	; select bank2
 18308  2F52  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 18309  2F53  0020               	movlb	0	; select bank0
 18310  2F54  00B7               	movwf	dtoa@d+5
 18311  2F55  0022               	movlb	2	; select bank2
 18312  2F56  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 18313  2F57  0020               	movlb	0	; select bank0
 18314  2F58  00B8               	movwf	dtoa@d+6
 18315  2F59  0022               	movlb	2	; select bank2
 18316  2F5A  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 18317  2F5B  0020               	movlb	0	; select bank0
 18318  2F5C  00B9               	movwf	dtoa@d+7
 18319  2F5D  319D  2554         	fcall	_dtoa
 18320  2F5F  0020               	movlb	0	; select bank0
 18321  2F60  0831               	movf	?_dtoa+1,w
 18322  2F61  0021               	movlb	1	; select bank1
 18323  2F62  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 18324  2F63  0020               	movlb	0	; select bank0
 18325  2F64  0830               	movf	?_dtoa,w
 18326  2F65  0021               	movlb	1	; select bank1
 18327  2F66  00E3               	movwf	?_vfpfcnvrt^(0+128)
 18328  2F67  0008               	return
 18329  2F68                     L18:	
 18330  2F68                     L17:	
 18331  2F68  3198  2806         	ljmp	l7589
 18332                           
 18333                           	psect	text5_split_2
 18334  1806                     l7589:	
 18335                           
 18336                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
 18337  1806  0021               	movlb	1	; select bank1
 18338  1807  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 18339  1808  0086               	movwf	6
 18340  1809  0187               	clrf	7
 18341  180A  3F40               	moviw [0]fsr1
 18342  180B  00F1               	movwf	strncmp@_l
 18343  180C  3F41               	moviw [1]fsr1
 18344  180D  00F2               	movwf	strncmp@_l+1
 18345  180E  3045               	movlw	low ((STR_18+1)| (0+32768))
 18346  180F  00F3               	movwf	strncmp@_r
 18347  1810  30B8               	movlw	high ((STR_18+1)| (0+32768))
 18348  1811  00F4               	movwf	strncmp@_r+1
 18349  1812  3002               	movlw	2
 18350  1813  00F5               	movwf	strncmp@n
 18351  1814  3000               	movlw	0
 18352  1815  00F6               	movwf	strncmp@n+1
 18353  1816  31A0  200C  3198   	fcall	_strncmp
 18354  1819  0871               	movf	?_strncmp,w
 18355  181A  0472               	iorwf	?_strncmp+1,w
 18356  181B  1903               	btfsc	3,2
 18357  181C  2834               	goto	l7593
 18358  181D  0021               	movlb	1	; select bank1
 18359  181E  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 18360  181F  0086               	movwf	6
 18361  1820  0187               	clrf	7
 18362  1821  3F40               	moviw [0]fsr1
 18363  1822  00F1               	movwf	strncmp@_l
 18364  1823  3F41               	moviw [1]fsr1
 18365  1824  00F2               	movwf	strncmp@_l+1
 18366  1825  304D               	movlw	low ((STR_22+1)| (0+32768))
 18367  1826  00F3               	movwf	strncmp@_r
 18368  1827  30B8               	movlw	high ((STR_22+1)| (0+32768))
 18369  1828  00F4               	movwf	strncmp@_r+1
 18370  1829  3002               	movlw	2
 18371  182A  00F5               	movwf	strncmp@n
 18372  182B  3000               	movlw	0
 18373  182C  00F6               	movwf	strncmp@n+1
 18374  182D  31A0  200C  3198   	fcall	_strncmp
 18375  1830  0871               	movf	?_strncmp,w
 18376  1831  0472               	iorwf	?_strncmp+1,w
 18377  1832  1D03               	btfss	3,2
 18378  1833  288C               	goto	L20
 18379  1834                     l7593:	
 18380                           
 18381                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
 18382  1834  0021               	movlb	1	; select bank1
 18383  1835  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 18384  1836  0086               	movwf	6
 18385  1837  0187               	clrf	7
 18386  1838  3002               	movlw	2
 18387  1839  0781               	addwf	1,f
 18388  183A  3141               	addfsr 1,1
 18389  183B  1803               	skipnc
 18390  183C  0A81               	incf	1,f
 18391                           
 18392                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
 18393  183D  0866               	movf	vfpfcnvrt@ap^(0+128),w
 18394  183E  0086               	movwf	6
 18395  183F  3001               	movlw	1	; select bank2/3
 18396  1840  0087               	movwf	7
 18397  1841  0801               	movf	1,w
 18398  1842  0084               	movwf	4
 18399  1843  3001               	movlw	1	; select bank2/3
 18400  1844  0085               	movwf	5
 18401  1845  3002               	movlw	2
 18402  1846  0781               	addwf	1,f
 18403  1847  3F00               	moviw [0]fsr0
 18404  1848  0022               	movlb	2	; select bank2
 18405  1849  00A0               	movwf	??_vfpfcnvrt^(0+256)
 18406  184A  3F01               	moviw [1]fsr0
 18407  184B  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 18408  184C  0820               	movf	??_vfpfcnvrt^(0+256),w
 18409  184D  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 18410  184E  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 18411  184F  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 18412  1850  0D89               	rlf	9,f
 18413  1851  3B89               	subwfb	9,f
 18414  1852  0989               	comf	9,f
 18415  1853  00BE               	movwf	(vfpfcnvrt@ll+2)^(0+256)
 18416  1854  00BF               	movwf	(vfpfcnvrt@ll+3)^(0+256)
 18417  1855  00C0               	movwf	(vfpfcnvrt@ll+4)^(0+256)
 18418  1856  00C1               	movwf	(vfpfcnvrt@ll+5)^(0+256)
 18419  1857  00C2               	movwf	(vfpfcnvrt@ll+6)^(0+256)
 18420  1858  00C3               	movwf	(vfpfcnvrt@ll+7)^(0+256)
 18421                           
 18422                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 820:       
      +                                return dtoa(fp, ll);
 18423  1859  0021               	movlb	1	; select bank1
 18424  185A  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 18425  185B  0020               	movlb	0	; select bank0
 18426  185C  00B1               	movwf	dtoa@fp+1
 18427  185D  0021               	movlb	1	; select bank1
 18428  185E  0863               	movf	vfpfcnvrt@fp^(0+128),w
 18429  185F  0020               	movlb	0	; select bank0
 18430  1860  00B0               	movwf	dtoa@fp
 18431  1861  0022               	movlb	2	; select bank2
 18432  1862  083C               	movf	vfpfcnvrt@ll^(0+256),w
 18433  1863  0020               	movlb	0	; select bank0
 18434  1864  00B2               	movwf	dtoa@d
 18435  1865  0022               	movlb	2	; select bank2
 18436  1866  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 18437  1867  0020               	movlb	0	; select bank0
 18438  1868  00B3               	movwf	dtoa@d+1
 18439  1869  0022               	movlb	2	; select bank2
 18440  186A  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 18441  186B  0020               	movlb	0	; select bank0
 18442  186C  00B4               	movwf	dtoa@d+2
 18443  186D  0022               	movlb	2	; select bank2
 18444  186E  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 18445  186F  0020               	movlb	0	; select bank0
 18446  1870  00B5               	movwf	dtoa@d+3
 18447  1871  0022               	movlb	2	; select bank2
 18448  1872  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 18449  1873  0020               	movlb	0	; select bank0
 18450  1874  00B6               	movwf	dtoa@d+4
 18451  1875  0022               	movlb	2	; select bank2
 18452  1876  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 18453  1877  0020               	movlb	0	; select bank0
 18454  1878  00B7               	movwf	dtoa@d+5
 18455  1879  0022               	movlb	2	; select bank2
 18456  187A  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 18457  187B  0020               	movlb	0	; select bank0
 18458  187C  00B8               	movwf	dtoa@d+6
 18459  187D  0022               	movlb	2	; select bank2
 18460  187E  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 18461  187F  0020               	movlb	0	; select bank0
 18462  1880  00B9               	movwf	dtoa@d+7
 18463  1881  319D  2554         	fcall	_dtoa
 18464  1883  0020               	movlb	0	; select bank0
 18465  1884  0831               	movf	?_dtoa+1,w
 18466  1885  0021               	movlb	1	; select bank1
 18467  1886  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 18468  1887  0020               	movlb	0	; select bank0
 18469  1888  0830               	movf	?_dtoa,w
 18470  1889  0021               	movlb	1	; select bank1
 18471  188A  00E3               	movwf	?_vfpfcnvrt^(0+128)
 18472  188B  0008               	return
 18473  188C                     L20:	
 18474  188C                     L19:	
 18475  188C  319C  2C4C         	ljmp	l7601
 18476                           
 18477                           	psect	text5_split_3
 18478  1C4C                     l7601:	
 18479                           
 18480                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 18481  1C4C  0021               	movlb	1	; select bank1
 18482  1C4D  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 18483  1C4E  0086               	movwf	6
 18484  1C4F  0187               	clrf	7
 18485  1C50  3F40               	moviw [0]fsr1
 18486  1C51  0022               	movlb	2	; select bank2
 18487  1C52  00A0               	movwf	??_vfpfcnvrt^(0+256)
 18488  1C53  3F41               	moviw [1]fsr1
 18489  1C54  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 18490  1C55  0820               	movf	??_vfpfcnvrt^(0+256),w
 18491  1C56  0084               	movwf	4
 18492  1C57  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 18493  1C58  0085               	movwf	5
 18494  1C59  0012               	moviw fsr0++
 18495  1C5A  3A64               	xorlw	100
 18496  1C5B  1903               	btfsc	3,2
 18497  1C5C  2C6E               	goto	l7605
 18498  1C5D  0021               	movlb	1	; select bank1
 18499  1C5E  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 18500  1C5F  0086               	movwf	6
 18501  1C60  0187               	clrf	7
 18502  1C61  3F40               	moviw [0]fsr1
 18503  1C62  0022               	movlb	2	; select bank2
 18504  1C63  00A0               	movwf	??_vfpfcnvrt^(0+256)
 18505  1C64  3F41               	moviw [1]fsr1
 18506  1C65  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 18507  1C66  0820               	movf	??_vfpfcnvrt^(0+256),w
 18508  1C67  0084               	movwf	4
 18509  1C68  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 18510  1C69  0085               	movwf	5
 18511  1C6A  0012               	moviw fsr0++
 18512  1C6B  3A69               	xorlw	105
 18513  1C6C  1D03               	btfss	3,2
 18514  1C6D  2CC6               	goto	l7613
 18515  1C6E                     l7605:	
 18516                           
 18517                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 18518  1C6E  0021               	movlb	1	; select bank1
 18519  1C6F  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 18520  1C70  0086               	movwf	6
 18521  1C71  0187               	clrf	7
 18522  1C72  3001               	movlw	1
 18523  1C73  0781               	addwf	1,f
 18524  1C74  3141               	addfsr 1,1
 18525  1C75  1803               	skipnc
 18526  1C76  0A81               	incf	1,f
 18527                           
 18528                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 18529  1C77  0866               	movf	vfpfcnvrt@ap^(0+128),w
 18530  1C78  0086               	movwf	6
 18531  1C79  3001               	movlw	1	; select bank2/3
 18532  1C7A  0087               	movwf	7
 18533  1C7B  0801               	movf	1,w
 18534  1C7C  0084               	movwf	4
 18535  1C7D  3001               	movlw	1	; select bank2/3
 18536  1C7E  0085               	movwf	5
 18537  1C7F  3002               	movlw	2
 18538  1C80  0781               	addwf	1,f
 18539  1C81  3F00               	moviw [0]fsr0
 18540  1C82  0022               	movlb	2	; select bank2
 18541  1C83  00A0               	movwf	??_vfpfcnvrt^(0+256)
 18542  1C84  3F01               	moviw [1]fsr0
 18543  1C85  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 18544  1C86  0820               	movf	??_vfpfcnvrt^(0+256),w
 18545  1C87  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 18546  1C88  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 18547  1C89  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 18548  1C8A  0D89               	rlf	9,f
 18549  1C8B  3B89               	subwfb	9,f
 18550  1C8C  0989               	comf	9,f
 18551  1C8D  00BE               	movwf	(vfpfcnvrt@ll+2)^(0+256)
 18552  1C8E  00BF               	movwf	(vfpfcnvrt@ll+3)^(0+256)
 18553  1C8F  00C0               	movwf	(vfpfcnvrt@ll+4)^(0+256)
 18554  1C90  00C1               	movwf	(vfpfcnvrt@ll+5)^(0+256)
 18555  1C91  00C2               	movwf	(vfpfcnvrt@ll+6)^(0+256)
 18556  1C92  00C3               	movwf	(vfpfcnvrt@ll+7)^(0+256)
 18557                           
 18558                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 18559  1C93  0021               	movlb	1	; select bank1
 18560  1C94  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 18561  1C95  0020               	movlb	0	; select bank0
 18562  1C96  00B1               	movwf	dtoa@fp+1
 18563  1C97  0021               	movlb	1	; select bank1
 18564  1C98  0863               	movf	vfpfcnvrt@fp^(0+128),w
 18565  1C99  0020               	movlb	0	; select bank0
 18566  1C9A  00B0               	movwf	dtoa@fp
 18567  1C9B  0022               	movlb	2	; select bank2
 18568  1C9C  083C               	movf	vfpfcnvrt@ll^(0+256),w
 18569  1C9D  0020               	movlb	0	; select bank0
 18570  1C9E  00B2               	movwf	dtoa@d
 18571  1C9F  0022               	movlb	2	; select bank2
 18572  1CA0  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 18573  1CA1  0020               	movlb	0	; select bank0
 18574  1CA2  00B3               	movwf	dtoa@d+1
 18575  1CA3  0022               	movlb	2	; select bank2
 18576  1CA4  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 18577  1CA5  0020               	movlb	0	; select bank0
 18578  1CA6  00B4               	movwf	dtoa@d+2
 18579  1CA7  0022               	movlb	2	; select bank2
 18580  1CA8  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 18581  1CA9  0020               	movlb	0	; select bank0
 18582  1CAA  00B5               	movwf	dtoa@d+3
 18583  1CAB  0022               	movlb	2	; select bank2
 18584  1CAC  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 18585  1CAD  0020               	movlb	0	; select bank0
 18586  1CAE  00B6               	movwf	dtoa@d+4
 18587  1CAF  0022               	movlb	2	; select bank2
 18588  1CB0  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 18589  1CB1  0020               	movlb	0	; select bank0
 18590  1CB2  00B7               	movwf	dtoa@d+5
 18591  1CB3  0022               	movlb	2	; select bank2
 18592  1CB4  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 18593  1CB5  0020               	movlb	0	; select bank0
 18594  1CB6  00B8               	movwf	dtoa@d+6
 18595  1CB7  0022               	movlb	2	; select bank2
 18596  1CB8  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 18597  1CB9  0020               	movlb	0	; select bank0
 18598  1CBA  00B9               	movwf	dtoa@d+7
 18599  1CBB  319D  2554         	fcall	_dtoa
 18600  1CBD  0020               	movlb	0	; select bank0
 18601  1CBE  0831               	movf	?_dtoa+1,w
 18602  1CBF  0021               	movlb	1	; select bank1
 18603  1CC0  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 18604  1CC1  0020               	movlb	0	; select bank0
 18605  1CC2  0830               	movf	?_dtoa,w
 18606  1CC3  0021               	movlb	1	; select bank1
 18607  1CC4  00E3               	movwf	?_vfpfcnvrt^(0+128)
 18608  1CC5  0008               	return
 18609  1CC6                     l7613:	
 18610                           
 18611                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 835:       
      +                            if (!strncmp(*fmt, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", (
      +                          (sizeof("li")/sizeof("li"[0]))-1))) {
 18612  1CC6  0021               	movlb	1	; select bank1
 18613  1CC7  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 18614  1CC8  0086               	movwf	6
 18615  1CC9  0187               	clrf	7
 18616  1CCA  3F40               	moviw [0]fsr1
 18617  1CCB  00F1               	movwf	strncmp@_l
 18618  1CCC  3F41               	moviw [1]fsr1
 18619  1CCD  00F2               	movwf	strncmp@_l+1
 18620  1CCE  306A               	movlw	low (STR_36| (0+32768))
 18621  1CCF  00F3               	movwf	strncmp@_r
 18622  1CD0  30B8               	movlw	high (STR_36| (0+32768))
 18623  1CD1  00F4               	movwf	strncmp@_r+1
 18624  1CD2  3002               	movlw	2
 18625  1CD3  00F5               	movwf	strncmp@n
 18626  1CD4  3000               	movlw	0
 18627  1CD5  00F6               	movwf	strncmp@n+1
 18628  1CD6  31A0  200C  319C   	fcall	_strncmp
 18629  1CD9  0871               	movf	?_strncmp,w
 18630  1CDA  0472               	iorwf	?_strncmp+1,w
 18631  1CDB  1903               	btfsc	3,2
 18632  1CDC  2CF4               	goto	l7617
 18633  1CDD  0021               	movlb	1	; select bank1
 18634  1CDE  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 18635  1CDF  0086               	movwf	6
 18636  1CE0  0187               	clrf	7
 18637  1CE1  3F40               	moviw [0]fsr1
 18638  1CE2  00F1               	movwf	strncmp@_l
 18639  1CE3  3F41               	moviw [1]fsr1
 18640  1CE4  00F2               	movwf	strncmp@_l+1
 18641  1CE5  3073               	movlw	low (STR_40| (0+32768))
 18642  1CE6  00F3               	movwf	strncmp@_r
 18643  1CE7  30B8               	movlw	high (STR_40| (0+32768))
 18644  1CE8  00F4               	movwf	strncmp@_r+1
 18645  1CE9  3002               	movlw	2
 18646  1CEA  00F5               	movwf	strncmp@n
 18647  1CEB  3000               	movlw	0
 18648  1CEC  00F6               	movwf	strncmp@n+1
 18649  1CED  31A0  200C  319C   	fcall	_strncmp
 18650  1CF0  0871               	movf	?_strncmp,w
 18651  1CF1  0472               	iorwf	?_strncmp+1,w
 18652  1CF2  1D03               	btfss	3,2
 18653  1CF3  2D52               	goto	L22
 18654  1CF4                     l7617:	
 18655                           
 18656                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 836: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 838:             
      +                          *fmt += ((sizeof("ld")/sizeof("ld"[0]))-1);
 18657  1CF4  0021               	movlb	1	; select bank1
 18658  1CF5  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 18659  1CF6  0086               	movwf	6
 18660  1CF7  0187               	clrf	7
 18661  1CF8  3002               	movlw	2
 18662  1CF9  0781               	addwf	1,f
 18663  1CFA  3141               	addfsr 1,1
 18664  1CFB  1803               	skipnc
 18665  1CFC  0A81               	incf	1,f
 18666                           
 18667                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 839:       
      +                                ll = (long long)(*(long *)__va_arg(*(long **)ap, (long)0));
 18668  1CFD  0866               	movf	vfpfcnvrt@ap^(0+128),w
 18669  1CFE  0086               	movwf	6
 18670  1CFF  3001               	movlw	1	; select bank2/3
 18671  1D00  0087               	movwf	7
 18672  1D01  0801               	movf	1,w
 18673  1D02  0084               	movwf	4
 18674  1D03  3001               	movlw	1	; select bank2/3
 18675  1D04  0085               	movwf	5
 18676  1D05  3004               	movlw	4
 18677  1D06  0781               	addwf	1,f
 18678  1D07  3F00               	moviw [0]fsr0
 18679  1D08  0022               	movlb	2	; select bank2
 18680  1D09  00A0               	movwf	??_vfpfcnvrt^(0+256)
 18681  1D0A  3F01               	moviw [1]fsr0
 18682  1D0B  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 18683  1D0C  3F02               	moviw [2]fsr0
 18684  1D0D  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 18685  1D0E  3F03               	moviw [3]fsr0
 18686  1D0F  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 18687  1D10  0820               	movf	??_vfpfcnvrt^(0+256),w
 18688  1D11  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 18689  1D12  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 18690  1D13  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 18691  1D14  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 18692  1D15  00BE               	movwf	(vfpfcnvrt@ll+2)^(0+256)
 18693  1D16  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 18694  1D17  00BF               	movwf	(vfpfcnvrt@ll+3)^(0+256)
 18695  1D18  3000               	movlw	0
 18696  1D19  1BBF               	btfsc	(vfpfcnvrt@ll+3)^(0+256),7
 18697  1D1A  30FF               	movlw	255
 18698  1D1B  00C0               	movwf	(vfpfcnvrt@ll+4)^(0+256)
 18699  1D1C  00C1               	movwf	(vfpfcnvrt@ll+5)^(0+256)
 18700  1D1D  00C2               	movwf	(vfpfcnvrt@ll+6)^(0+256)
 18701  1D1E  00C3               	movwf	(vfpfcnvrt@ll+7)^(0+256)
 18702                           
 18703                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 841:       
      +                                return dtoa(fp, ll);
 18704  1D1F  0021               	movlb	1	; select bank1
 18705  1D20  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 18706  1D21  0020               	movlb	0	; select bank0
 18707  1D22  00B1               	movwf	dtoa@fp+1
 18708  1D23  0021               	movlb	1	; select bank1
 18709  1D24  0863               	movf	vfpfcnvrt@fp^(0+128),w
 18710  1D25  0020               	movlb	0	; select bank0
 18711  1D26  00B0               	movwf	dtoa@fp
 18712  1D27  0022               	movlb	2	; select bank2
 18713  1D28  083C               	movf	vfpfcnvrt@ll^(0+256),w
 18714  1D29  0020               	movlb	0	; select bank0
 18715  1D2A  00B2               	movwf	dtoa@d
 18716  1D2B  0022               	movlb	2	; select bank2
 18717  1D2C  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 18718  1D2D  0020               	movlb	0	; select bank0
 18719  1D2E  00B3               	movwf	dtoa@d+1
 18720  1D2F  0022               	movlb	2	; select bank2
 18721  1D30  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 18722  1D31  0020               	movlb	0	; select bank0
 18723  1D32  00B4               	movwf	dtoa@d+2
 18724  1D33  0022               	movlb	2	; select bank2
 18725  1D34  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 18726  1D35  0020               	movlb	0	; select bank0
 18727  1D36  00B5               	movwf	dtoa@d+3
 18728  1D37  0022               	movlb	2	; select bank2
 18729  1D38  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 18730  1D39  0020               	movlb	0	; select bank0
 18731  1D3A  00B6               	movwf	dtoa@d+4
 18732  1D3B  0022               	movlb	2	; select bank2
 18733  1D3C  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 18734  1D3D  0020               	movlb	0	; select bank0
 18735  1D3E  00B7               	movwf	dtoa@d+5
 18736  1D3F  0022               	movlb	2	; select bank2
 18737  1D40  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 18738  1D41  0020               	movlb	0	; select bank0
 18739  1D42  00B8               	movwf	dtoa@d+6
 18740  1D43  0022               	movlb	2	; select bank2
 18741  1D44  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 18742  1D45  0020               	movlb	0	; select bank0
 18743  1D46  00B9               	movwf	dtoa@d+7
 18744  1D47  319D  2554         	fcall	_dtoa
 18745  1D49  0020               	movlb	0	; select bank0
 18746  1D4A  0831               	movf	?_dtoa+1,w
 18747  1D4B  0021               	movlb	1	; select bank1
 18748  1D4C  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 18749  1D4D  0020               	movlb	0	; select bank0
 18750  1D4E  0830               	movf	?_dtoa,w
 18751  1D4F  0021               	movlb	1	; select bank1
 18752  1D50  00E3               	movwf	?_vfpfcnvrt^(0+128)
 18753  1D51  0008               	return
 18754  1D52                     L22:	
 18755  1D52                     L21:	
 18756  1D52  31A4  2C95         	ljmp	l7625
 18757                           
 18758                           	psect	text5_split_4
 18759  2495                     l7625:	
 18760                           
 18761                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
 18762  2495  0021               	movlb	1	; select bank1
 18763  2496  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 18764  2497  0086               	movwf	6
 18765  2498  0187               	clrf	7
 18766  2499  3F40               	moviw [0]fsr1
 18767  249A  00F1               	movwf	strncmp@_l
 18768  249B  3F41               	moviw [1]fsr1
 18769  249C  00F2               	movwf	strncmp@_l+1
 18770  249D  306D               	movlw	low (STR_45| (0+32768))
 18771  249E  00F3               	movwf	strncmp@_r
 18772  249F  30B8               	movlw	high (STR_45| (0+32768))
 18773  24A0  00F4               	movwf	strncmp@_r+1
 18774  24A1  3002               	movlw	2
 18775  24A2  00F5               	movwf	strncmp@n
 18776  24A3  3000               	movlw	0
 18777  24A4  00F6               	movwf	strncmp@n+1
 18778  24A5  31A0  200C  31A4   	fcall	_strncmp
 18779  24A8  0871               	movf	?_strncmp,w
 18780  24A9  0472               	iorwf	?_strncmp+1,w
 18781  24AA  1903               	btfsc	3,2
 18782  24AB  2CC3               	goto	l7629
 18783  24AC  0021               	movlb	1	; select bank1
 18784  24AD  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 18785  24AE  0086               	movwf	6
 18786  24AF  0187               	clrf	7
 18787  24B0  3F40               	moviw [0]fsr1
 18788  24B1  00F1               	movwf	strncmp@_l
 18789  24B2  3F41               	moviw [1]fsr1
 18790  24B3  00F2               	movwf	strncmp@_l+1
 18791  24B4  3076               	movlw	low (STR_49| (0+32768))
 18792  24B5  00F3               	movwf	strncmp@_r
 18793  24B6  30B8               	movlw	high (STR_49| (0+32768))
 18794  24B7  00F4               	movwf	strncmp@_r+1
 18795  24B8  3002               	movlw	2
 18796  24B9  00F5               	movwf	strncmp@n
 18797  24BA  3000               	movlw	0
 18798  24BB  00F6               	movwf	strncmp@n+1
 18799  24BC  31A0  200C  31A4   	fcall	_strncmp
 18800  24BF  0871               	movf	?_strncmp,w
 18801  24C0  0472               	iorwf	?_strncmp+1,w
 18802  24C1  1D03               	btfss	3,2
 18803  24C2  2D14               	goto	l7637
 18804  24C3                     l7629:	
 18805                           
 18806                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
 18807  24C3  0021               	movlb	1	; select bank1
 18808  24C4  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 18809  24C5  0086               	movwf	6
 18810  24C6  0187               	clrf	7
 18811  24C7  3002               	movlw	2
 18812  24C8  0781               	addwf	1,f
 18813  24C9  3141               	addfsr 1,1
 18814  24CA  1803               	skipnc
 18815  24CB  0A81               	incf	1,f
 18816                           
 18817                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 18818  24CC  0866               	movf	vfpfcnvrt@ap^(0+128),w
 18819  24CD  0086               	movwf	6
 18820  24CE  3001               	movlw	1	; select bank2/3
 18821  24CF  0087               	movwf	7
 18822  24D0  0801               	movf	1,w
 18823  24D1  0084               	movwf	4
 18824  24D2  3001               	movlw	1	; select bank2/3
 18825  24D3  0085               	movwf	5
 18826  24D4  3002               	movlw	2
 18827  24D5  0781               	addwf	1,f
 18828  24D6  3F00               	moviw [0]fsr0
 18829  24D7  0022               	movlb	2	; select bank2
 18830  24D8  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 18831  24D9  3F01               	moviw [1]fsr0
 18832  24DA  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 18833  24DB  01BE               	clrf	(vfpfcnvrt@ll+2)^(0+256)
 18834  24DC  01BF               	clrf	(vfpfcnvrt@ll+3)^(0+256)
 18835  24DD  01C0               	clrf	(vfpfcnvrt@ll+4)^(0+256)
 18836  24DE  01C1               	clrf	(vfpfcnvrt@ll+5)^(0+256)
 18837  24DF  01C2               	clrf	(vfpfcnvrt@ll+6)^(0+256)
 18838  24E0  01C3               	clrf	(vfpfcnvrt@ll+7)^(0+256)
 18839                           
 18840                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 889:       
      +                                return dtoa(fp, ll);
 18841  24E1  0021               	movlb	1	; select bank1
 18842  24E2  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 18843  24E3  0020               	movlb	0	; select bank0
 18844  24E4  00B1               	movwf	dtoa@fp+1
 18845  24E5  0021               	movlb	1	; select bank1
 18846  24E6  0863               	movf	vfpfcnvrt@fp^(0+128),w
 18847  24E7  0020               	movlb	0	; select bank0
 18848  24E8  00B0               	movwf	dtoa@fp
 18849  24E9  0022               	movlb	2	; select bank2
 18850  24EA  083C               	movf	vfpfcnvrt@ll^(0+256),w
 18851  24EB  0020               	movlb	0	; select bank0
 18852  24EC  00B2               	movwf	dtoa@d
 18853  24ED  0022               	movlb	2	; select bank2
 18854  24EE  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 18855  24EF  0020               	movlb	0	; select bank0
 18856  24F0  00B3               	movwf	dtoa@d+1
 18857  24F1  0022               	movlb	2	; select bank2
 18858  24F2  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 18859  24F3  0020               	movlb	0	; select bank0
 18860  24F4  00B4               	movwf	dtoa@d+2
 18861  24F5  0022               	movlb	2	; select bank2
 18862  24F6  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 18863  24F7  0020               	movlb	0	; select bank0
 18864  24F8  00B5               	movwf	dtoa@d+3
 18865  24F9  0022               	movlb	2	; select bank2
 18866  24FA  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 18867  24FB  0020               	movlb	0	; select bank0
 18868  24FC  00B6               	movwf	dtoa@d+4
 18869  24FD  0022               	movlb	2	; select bank2
 18870  24FE  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 18871  24FF  0020               	movlb	0	; select bank0
 18872  2500  00B7               	movwf	dtoa@d+5
 18873  2501  0022               	movlb	2	; select bank2
 18874  2502  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 18875  2503  0020               	movlb	0	; select bank0
 18876  2504  00B8               	movwf	dtoa@d+6
 18877  2505  0022               	movlb	2	; select bank2
 18878  2506  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 18879  2507  0020               	movlb	0	; select bank0
 18880  2508  00B9               	movwf	dtoa@d+7
 18881  2509  319D  2554         	fcall	_dtoa
 18882  250B  0020               	movlb	0	; select bank0
 18883  250C  0831               	movf	?_dtoa+1,w
 18884  250D  0021               	movlb	1	; select bank1
 18885  250E  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 18886  250F  0020               	movlb	0	; select bank0
 18887  2510  0830               	movf	?_dtoa,w
 18888  2511  0021               	movlb	1	; select bank1
 18889  2512  00E3               	movwf	?_vfpfcnvrt^(0+128)
 18890  2513  0008               	return
 18891  2514                     l7637:	
 18892                           
 18893                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
 18894  2514  3066               	movlw	102
 18895  2515  0022               	movlb	2	; select bank2
 18896  2516  0635               	xorwf	vfpfcnvrt@ct^(0+256),w
 18897  2517  1D03               	btfss	3,2
 18898  2518  2D69               	goto	L24
 18899                           
 18900                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
 18901  2519  0021               	movlb	1	; select bank1
 18902  251A  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 18903  251B  0086               	movwf	6
 18904  251C  0187               	clrf	7
 18905  251D  3F40               	moviw [0]fsr1
 18906  251E  0022               	movlb	2	; select bank2
 18907  251F  00A0               	movwf	??_vfpfcnvrt^(0+256)
 18908  2520  3F41               	moviw [1]fsr1
 18909  2521  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 18910  2522  0820               	movf	??_vfpfcnvrt^(0+256),w
 18911  2523  0084               	movwf	4
 18912  2524  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 18913  2525  0085               	movwf	5
 18914  2526  0800               	movf	0,w	;code access
 18915  2527  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 18916  2528  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 18917  2529  00C5               	movwf	vfpfcnvrt@c^(0+256)
 18918                           
 18919                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
 18920  252A  0021               	movlb	1	; select bank1
 18921  252B  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 18922  252C  0086               	movwf	6
 18923  252D  0187               	clrf	7
 18924  252E  3001               	movlw	1
 18925  252F  0781               	addwf	1,f
 18926  2530  3141               	addfsr 1,1
 18927  2531  1803               	skipnc
 18928  2532  0A81               	incf	1,f
 18929                           
 18930                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 18931  2533  0866               	movf	vfpfcnvrt@ap^(0+128),w
 18932  2534  0086               	movwf	6
 18933  2535  3001               	movlw	1	; select bank2/3
 18934  2536  0087               	movwf	7
 18935  2537  0801               	movf	1,w
 18936  2538  0084               	movwf	4
 18937  2539  3001               	movlw	1	; select bank2/3
 18938  253A  0085               	movwf	5
 18939  253B  3004               	movlw	4
 18940  253C  0781               	addwf	1,f
 18941  253D  3F00               	moviw [0]fsr0
 18942  253E  0022               	movlb	2	; select bank2
 18943  253F  00B8               	movwf	vfpfcnvrt@f^(0+256)
 18944  2540  3F01               	moviw [1]fsr0
 18945  2541  00B9               	movwf	(vfpfcnvrt@f+1)^(0+256)
 18946  2542  3F02               	moviw [2]fsr0
 18947  2543  00BA               	movwf	(vfpfcnvrt@f+2)^(0+256)
 18948  2544  3F03               	moviw [3]fsr0
 18949  2545  00BB               	movwf	(vfpfcnvrt@f+3)^(0+256)
 18950                           
 18951                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
 18952  2546  0021               	movlb	1	; select bank1
 18953  2547  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 18954  2548  00A1               	movwf	(efgtoa@fp+1)^(0+128)
 18955  2549  0863               	movf	vfpfcnvrt@fp^(0+128),w
 18956  254A  00A0               	movwf	efgtoa@fp^(0+128)
 18957  254B  0022               	movlb	2	; select bank2
 18958  254C  083B               	movf	(vfpfcnvrt@f+3)^(0+256),w
 18959  254D  0021               	movlb	1	; select bank1
 18960  254E  00A5               	movwf	(efgtoa@f+3)^(0+128)
 18961  254F  0022               	movlb	2	; select bank2
 18962  2550  083A               	movf	(vfpfcnvrt@f+2)^(0+256),w
 18963  2551  0021               	movlb	1	; select bank1
 18964  2552  00A4               	movwf	(efgtoa@f+2)^(0+128)
 18965  2553  0022               	movlb	2	; select bank2
 18966  2554  0839               	movf	(vfpfcnvrt@f+1)^(0+256),w
 18967  2555  0021               	movlb	1	; select bank1
 18968  2556  00A3               	movwf	(efgtoa@f+1)^(0+128)
 18969  2557  0022               	movlb	2	; select bank2
 18970  2558  0838               	movf	vfpfcnvrt@f^(0+256),w
 18971  2559  0021               	movlb	1	; select bank1
 18972  255A  00A2               	movwf	efgtoa@f^(0+128)
 18973  255B  0022               	movlb	2	; select bank2
 18974  255C  0845               	movf	vfpfcnvrt@c^(0+256),w
 18975  255D  00A0               	movwf	??_vfpfcnvrt^(0+256)
 18976  255E  0820               	movf	??_vfpfcnvrt^(0+256),w
 18977  255F  0021               	movlb	1	; select bank1
 18978  2560  00A6               	movwf	efgtoa@c^(0+128)
 18979  2561  3180  2058         	fcall	_efgtoa
 18980  2563  0021               	movlb	1	; select bank1
 18981  2564  0821               	movf	(?_efgtoa+1)^(0+128),w
 18982  2565  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 18983  2566  0820               	movf	?_efgtoa^(0+128),w
 18984  2567  00E3               	movwf	?_vfpfcnvrt^(0+128)
 18985  2568  0008               	return
 18986  2569                     L24:	
 18987  2569                     L23:	
 18988  2569  31A0  28FF         	ljmp	l7649
 18989                           
 18990                           	psect	text5_split_5
 18991  20FF                     l7649:	
 18992                           
 18993                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 18994  20FF  3035               	movlw	low vfpfcnvrt@ct
 18995  2100  00F1               	movwf	strncmp@_l
 18996  2101  3001               	movlw	high vfpfcnvrt@ct
 18997  2102  00F2               	movwf	strncmp@_l+1
 18998  2103  3070               	movlw	low (STR_54| (0+32768))
 18999  2104  00F3               	movwf	strncmp@_r
 19000  2105  30B8               	movlw	high (STR_54| (0+32768))
 19001  2106  00F4               	movwf	strncmp@_r+1
 19002  2107  3002               	movlw	2
 19003  2108  00F5               	movwf	strncmp@n
 19004  2109  3000               	movlw	0
 19005  210A  00F6               	movwf	strncmp@n+1
 19006  210B  31A0  200C  31A0   	fcall	_strncmp
 19007  210E  0871               	movf	?_strncmp,w
 19008  210F  0472               	iorwf	?_strncmp+1,w
 19009  2110  1D03               	btfss	3,2
 19010  2111  29A1               	goto	L26
 19011                           
 19012                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 19013  2112  0021               	movlb	1	; select bank1
 19014  2113  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19015  2114  0086               	movwf	6
 19016  2115  0187               	clrf	7
 19017  2116  3F40               	moviw [0]fsr1
 19018  2117  0022               	movlb	2	; select bank2
 19019  2118  00A0               	movwf	??_vfpfcnvrt^(0+256)
 19020  2119  3F41               	moviw [1]fsr1
 19021  211A  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 19022  211B  3001               	movlw	1
 19023  211C  0720               	addwf	??_vfpfcnvrt^(0+256),w
 19024  211D  0084               	movwf	4
 19025  211E  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 19026  211F  1803               	skipnc
 19027  2120  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 19028  2121  0085               	movwf	5
 19029  2122  0800               	movf	0,w	;code access
 19030  2123  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 19031  2124  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 19032  2125  00C5               	movwf	vfpfcnvrt@c^(0+256)
 19033  2126  0021               	movlb	1	; select bank1
 19034  2127  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19035  2128  0086               	movwf	6
 19036  2129  0187               	clrf	7
 19037  212A  3F40               	moviw [0]fsr1
 19038  212B  0022               	movlb	2	; select bank2
 19039  212C  00A0               	movwf	??_vfpfcnvrt^(0+256)
 19040  212D  3F41               	moviw [1]fsr1
 19041  212E  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 19042  212F  0820               	movf	??_vfpfcnvrt^(0+256),w
 19043  2130  0084               	movwf	4
 19044  2131  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 19045  2132  0085               	movwf	5
 19046  2133  0800               	movf	0,w	;code access
 19047  2134  3EBF               	addlw	191
 19048  2135  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 19049  2136  30FF               	movlw	255
 19050  2137  1803               	skipnc
 19051  2138  3000               	movlw	0
 19052  2139  00A3               	movwf	((??_vfpfcnvrt+2)^(0+256)+1)
 19053  213A  3000               	movlw	0
 19054  213B  0223               	subwf	(??_vfpfcnvrt+3)^(0+256),w
 19055  213C  301A               	movlw	26
 19056  213D  1903               	skipnz
 19057  213E  0222               	subwf	(??_vfpfcnvrt+2)^(0+256),w
 19058  213F  1803               	btfsc	3,0
 19059  2140  2943               	goto	u11400
 19060  2141  3001               	movlw	1
 19061  2142  2944               	goto	u11410
 19062  2143                     u11400:	
 19063  2143  3000               	movlw	0
 19064  2144                     u11410:	
 19065  2144  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
 19066  2145  01A5               	clrf	((??_vfpfcnvrt+4)^(0+256)+1)
 19067  2146  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
 19068  2147  00B3               	movwf	_vfpfcnvrt$1045^(0+256)
 19069  2148  0825               	movf	(??_vfpfcnvrt+5)^(0+256),w
 19070  2149  00B4               	movwf	(_vfpfcnvrt$1045+1)^(0+256)
 19071  214A  0833               	movf	_vfpfcnvrt$1045^(0+256),w
 19072  214B  0434               	iorwf	(_vfpfcnvrt$1045+1)^(0+256),w
 19073  214C  1903               	btfsc	3,2
 19074  214D  2962               	goto	l7659
 19075                           
 19076                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
 19077  214E  0021               	movlb	1	; select bank1
 19078  214F  0866               	movf	vfpfcnvrt@ap^(0+128),w
 19079  2150  0086               	movwf	6
 19080  2151  3001               	movlw	1	; select bank2/3
 19081  2152  0087               	movwf	7
 19082  2153  0801               	movf	1,w
 19083  2154  0084               	movwf	4
 19084  2155  3001               	movlw	1	; select bank2/3
 19085  2156  0085               	movwf	5
 19086  2157  3004               	movlw	4
 19087  2158  0781               	addwf	1,f
 19088  2159  3F00               	moviw [0]fsr0
 19089  215A  0022               	movlb	2	; select bank2
 19090  215B  00B8               	movwf	vfpfcnvrt@f^(0+256)
 19091  215C  3F01               	moviw [1]fsr0
 19092  215D  00B9               	movwf	(vfpfcnvrt@f+1)^(0+256)
 19093  215E  3F02               	moviw [2]fsr0
 19094  215F  00BA               	movwf	(vfpfcnvrt@f+2)^(0+256)
 19095  2160  3F03               	moviw [3]fsr0
 19096  2161  2975               	goto	L1
 19097  2162                     l7659:	
 19098                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
 19099                           
 19100                           
 19101                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 19102  2162  0021               	movlb	1	; select bank1
 19103  2163  0866               	movf	vfpfcnvrt@ap^(0+128),w
 19104  2164  0086               	movwf	6
 19105  2165  3001               	movlw	1	; select bank2/3
 19106  2166  0087               	movwf	7
 19107  2167  0801               	movf	1,w
 19108  2168  0084               	movwf	4
 19109  2169  3001               	movlw	1	; select bank2/3
 19110  216A  0085               	movwf	5
 19111  216B  3004               	movlw	4
 19112  216C  0781               	addwf	1,f
 19113  216D  3F00               	moviw [0]fsr0
 19114  216E  0022               	movlb	2	; select bank2
 19115  216F  00B8               	movwf	vfpfcnvrt@f^(0+256)
 19116  2170  3F01               	moviw [1]fsr0
 19117  2171  00B9               	movwf	(vfpfcnvrt@f+1)^(0+256)
 19118  2172  3F02               	moviw [2]fsr0
 19119  2173  00BA               	movwf	(vfpfcnvrt@f+2)^(0+256)
 19120  2174  3F03               	moviw [3]fsr0
 19121  2175                     L1:	
 19122  2175  00BB               	movwf	(vfpfcnvrt@f+3)^(0+256)
 19123                           
 19124                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
 19125  2176  0021               	movlb	1	; select bank1
 19126  2177  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19127  2178  0086               	movwf	6
 19128  2179  0187               	clrf	7
 19129  217A  3002               	movlw	2
 19130  217B  0781               	addwf	1,f
 19131  217C  3141               	addfsr 1,1
 19132  217D  1803               	skipnc
 19133  217E  0A81               	incf	1,f
 19134                           
 19135                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 938:       
      +                                return efgtoa(fp, f, c);
 19136  217F  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 19137  2180  00A1               	movwf	(efgtoa@fp+1)^(0+128)
 19138  2181  0863               	movf	vfpfcnvrt@fp^(0+128),w
 19139  2182  00A0               	movwf	efgtoa@fp^(0+128)
 19140  2183  0022               	movlb	2	; select bank2
 19141  2184  083B               	movf	(vfpfcnvrt@f+3)^(0+256),w
 19142  2185  0021               	movlb	1	; select bank1
 19143  2186  00A5               	movwf	(efgtoa@f+3)^(0+128)
 19144  2187  0022               	movlb	2	; select bank2
 19145  2188  083A               	movf	(vfpfcnvrt@f+2)^(0+256),w
 19146  2189  0021               	movlb	1	; select bank1
 19147  218A  00A4               	movwf	(efgtoa@f+2)^(0+128)
 19148  218B  0022               	movlb	2	; select bank2
 19149  218C  0839               	movf	(vfpfcnvrt@f+1)^(0+256),w
 19150  218D  0021               	movlb	1	; select bank1
 19151  218E  00A3               	movwf	(efgtoa@f+1)^(0+128)
 19152  218F  0022               	movlb	2	; select bank2
 19153  2190  0838               	movf	vfpfcnvrt@f^(0+256),w
 19154  2191  0021               	movlb	1	; select bank1
 19155  2192  00A2               	movwf	efgtoa@f^(0+128)
 19156  2193  0022               	movlb	2	; select bank2
 19157  2194  0845               	movf	vfpfcnvrt@c^(0+256),w
 19158  2195  00A0               	movwf	??_vfpfcnvrt^(0+256)
 19159  2196  0820               	movf	??_vfpfcnvrt^(0+256),w
 19160  2197  0021               	movlb	1	; select bank1
 19161  2198  00A6               	movwf	efgtoa@c^(0+128)
 19162  2199  3180  2058         	fcall	_efgtoa
 19163  219B  0021               	movlb	1	; select bank1
 19164  219C  0821               	movf	(?_efgtoa+1)^(0+128),w
 19165  219D  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 19166  219E  0820               	movf	?_efgtoa^(0+128),w
 19167  219F  00E3               	movwf	?_vfpfcnvrt^(0+128)
 19168  21A0  0008               	return
 19169  21A1                     L26:	
 19170  21A1                     L25:	
 19171  21A1  31A3  2BC4         	ljmp	l7667
 19172                           
 19173                           	psect	text5_split_6
 19174  23C4                     l7667:	
 19175                           
 19176                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
 19177  23C4  0021               	movlb	1	; select bank1
 19178  23C5  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19179  23C6  0086               	movwf	6
 19180  23C7  0187               	clrf	7
 19181  23C8  3F40               	moviw [0]fsr1
 19182  23C9  00F1               	movwf	strncmp@_l
 19183  23CA  3F41               	moviw [1]fsr1
 19184  23CB  00F2               	movwf	strncmp@_l+1
 19185  23CC  3058               	movlw	low (STR_59| (0+32768))
 19186  23CD  00F3               	movwf	strncmp@_r
 19187  23CE  30B8               	movlw	high (STR_59| (0+32768))
 19188  23CF  00F4               	movwf	strncmp@_r+1
 19189  23D0  3003               	movlw	3
 19190  23D1  00F5               	movwf	strncmp@n
 19191  23D2  3000               	movlw	0
 19192  23D3  00F6               	movwf	strncmp@n+1
 19193  23D4  31A0  200C  31A3   	fcall	_strncmp
 19194  23D7  0871               	movf	?_strncmp,w
 19195  23D8  0472               	iorwf	?_strncmp+1,w
 19196  23D9  1D03               	btfss	3,2
 19197  23DA  2C2B               	goto	l7677
 19198                           
 19199                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
 19200  23DB  0021               	movlb	1	; select bank1
 19201  23DC  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19202  23DD  0086               	movwf	6
 19203  23DE  0187               	clrf	7
 19204  23DF  3003               	movlw	3
 19205  23E0  0781               	addwf	1,f
 19206  23E1  3141               	addfsr 1,1
 19207  23E2  1803               	skipnc
 19208  23E3  0A81               	incf	1,f
 19209                           
 19210                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 19211  23E4  0866               	movf	vfpfcnvrt@ap^(0+128),w
 19212  23E5  0086               	movwf	6
 19213  23E6  3001               	movlw	1	; select bank2/3
 19214  23E7  0087               	movwf	7
 19215  23E8  0801               	movf	1,w
 19216  23E9  0084               	movwf	4
 19217  23EA  3001               	movlw	1	; select bank2/3
 19218  23EB  0085               	movwf	5
 19219  23EC  3002               	movlw	2
 19220  23ED  0781               	addwf	1,f
 19221  23EE  0800               	movf	0,w
 19222  23EF  0022               	movlb	2	; select bank2
 19223  23F0  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 19224  23F1  01C7               	clrf	(vfpfcnvrt@llu+1)^(0+256)
 19225  23F2  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 19226  23F3  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 19227  23F4  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 19228  23F5  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 19229  23F6  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 19230  23F7  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 19231                           
 19232                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
 19233  23F8  0021               	movlb	1	; select bank1
 19234  23F9  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 19235  23FA  0020               	movlb	0	; select bank0
 19236  23FB  00B1               	movwf	otoa@fp+1
 19237  23FC  0021               	movlb	1	; select bank1
 19238  23FD  0863               	movf	vfpfcnvrt@fp^(0+128),w
 19239  23FE  0020               	movlb	0	; select bank0
 19240  23FF  00B0               	movwf	otoa@fp
 19241  2400  0022               	movlb	2	; select bank2
 19242  2401  0846               	movf	vfpfcnvrt@llu^(0+256),w
 19243  2402  0020               	movlb	0	; select bank0
 19244  2403  00B2               	movwf	otoa@d
 19245  2404  0022               	movlb	2	; select bank2
 19246  2405  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 19247  2406  0020               	movlb	0	; select bank0
 19248  2407  00B3               	movwf	otoa@d+1
 19249  2408  0022               	movlb	2	; select bank2
 19250  2409  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 19251  240A  0020               	movlb	0	; select bank0
 19252  240B  00B4               	movwf	otoa@d+2
 19253  240C  0022               	movlb	2	; select bank2
 19254  240D  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 19255  240E  0020               	movlb	0	; select bank0
 19256  240F  00B5               	movwf	otoa@d+3
 19257  2410  0022               	movlb	2	; select bank2
 19258  2411  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 19259  2412  0020               	movlb	0	; select bank0
 19260  2413  00B6               	movwf	otoa@d+4
 19261  2414  0022               	movlb	2	; select bank2
 19262  2415  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 19263  2416  0020               	movlb	0	; select bank0
 19264  2417  00B7               	movwf	otoa@d+5
 19265  2418  0022               	movlb	2	; select bank2
 19266  2419  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 19267  241A  0020               	movlb	0	; select bank0
 19268  241B  00B8               	movwf	otoa@d+6
 19269  241C  0022               	movlb	2	; select bank2
 19270  241D  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 19271  241E  0020               	movlb	0	; select bank0
 19272  241F  00B9               	movwf	otoa@d+7
 19273  2420  3199  2174         	fcall	_otoa
 19274  2422  0020               	movlb	0	; select bank0
 19275  2423  0831               	movf	?_otoa+1,w
 19276  2424  0021               	movlb	1	; select bank1
 19277  2425  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 19278  2426  0020               	movlb	0	; select bank0
 19279  2427  0830               	movf	?_otoa,w
 19280  2428  0021               	movlb	1	; select bank1
 19281  2429  00E3               	movwf	?_vfpfcnvrt^(0+128)
 19282  242A  0008               	return
 19283  242B                     l7677:	
 19284                           
 19285                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
 19286  242B  0021               	movlb	1	; select bank1
 19287  242C  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19288  242D  0086               	movwf	6
 19289  242E  0187               	clrf	7
 19290  242F  3F40               	moviw [0]fsr1
 19291  2430  00F1               	movwf	strncmp@_l
 19292  2431  3F41               	moviw [1]fsr1
 19293  2432  00F2               	movwf	strncmp@_l+1
 19294  2433  3059               	movlw	low ((STR_59+1)| (0+32768))
 19295  2434  00F3               	movwf	strncmp@_r
 19296  2435  30B8               	movlw	high ((STR_59+1)| (0+32768))
 19297  2436  00F4               	movwf	strncmp@_r+1
 19298  2437  3002               	movlw	2
 19299  2438  00F5               	movwf	strncmp@n
 19300  2439  3000               	movlw	0
 19301  243A  00F6               	movwf	strncmp@n+1
 19302  243B  31A0  200C  31A3   	fcall	_strncmp
 19303  243E  0871               	movf	?_strncmp,w
 19304  243F  0472               	iorwf	?_strncmp+1,w
 19305  2440  1D03               	btfss	3,2
 19306  2441  2C93               	goto	L28
 19307                           
 19308                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
 19309  2442  0021               	movlb	1	; select bank1
 19310  2443  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19311  2444  0086               	movwf	6
 19312  2445  0187               	clrf	7
 19313  2446  3002               	movlw	2
 19314  2447  0781               	addwf	1,f
 19315  2448  3141               	addfsr 1,1
 19316  2449  1803               	skipnc
 19317  244A  0A81               	incf	1,f
 19318                           
 19319                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
 19320  244B  0866               	movf	vfpfcnvrt@ap^(0+128),w
 19321  244C  0086               	movwf	6
 19322  244D  3001               	movlw	1	; select bank2/3
 19323  244E  0087               	movwf	7
 19324  244F  0801               	movf	1,w
 19325  2450  0084               	movwf	4
 19326  2451  3001               	movlw	1	; select bank2/3
 19327  2452  0085               	movwf	5
 19328  2453  3002               	movlw	2
 19329  2454  0781               	addwf	1,f
 19330  2455  3F00               	moviw [0]fsr0
 19331  2456  0022               	movlb	2	; select bank2
 19332  2457  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 19333  2458  3F01               	moviw [1]fsr0
 19334  2459  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 19335  245A  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 19336  245B  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 19337  245C  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 19338  245D  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 19339  245E  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 19340  245F  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 19341                           
 19342                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 985:       
      +                                return otoa(fp, llu);
 19343  2460  0021               	movlb	1	; select bank1
 19344  2461  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 19345  2462  0020               	movlb	0	; select bank0
 19346  2463  00B1               	movwf	otoa@fp+1
 19347  2464  0021               	movlb	1	; select bank1
 19348  2465  0863               	movf	vfpfcnvrt@fp^(0+128),w
 19349  2466  0020               	movlb	0	; select bank0
 19350  2467  00B0               	movwf	otoa@fp
 19351  2468  0022               	movlb	2	; select bank2
 19352  2469  0846               	movf	vfpfcnvrt@llu^(0+256),w
 19353  246A  0020               	movlb	0	; select bank0
 19354  246B  00B2               	movwf	otoa@d
 19355  246C  0022               	movlb	2	; select bank2
 19356  246D  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 19357  246E  0020               	movlb	0	; select bank0
 19358  246F  00B3               	movwf	otoa@d+1
 19359  2470  0022               	movlb	2	; select bank2
 19360  2471  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 19361  2472  0020               	movlb	0	; select bank0
 19362  2473  00B4               	movwf	otoa@d+2
 19363  2474  0022               	movlb	2	; select bank2
 19364  2475  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 19365  2476  0020               	movlb	0	; select bank0
 19366  2477  00B5               	movwf	otoa@d+3
 19367  2478  0022               	movlb	2	; select bank2
 19368  2479  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 19369  247A  0020               	movlb	0	; select bank0
 19370  247B  00B6               	movwf	otoa@d+4
 19371  247C  0022               	movlb	2	; select bank2
 19372  247D  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 19373  247E  0020               	movlb	0	; select bank0
 19374  247F  00B7               	movwf	otoa@d+5
 19375  2480  0022               	movlb	2	; select bank2
 19376  2481  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 19377  2482  0020               	movlb	0	; select bank0
 19378  2483  00B8               	movwf	otoa@d+6
 19379  2484  0022               	movlb	2	; select bank2
 19380  2485  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 19381  2486  0020               	movlb	0	; select bank0
 19382  2487  00B9               	movwf	otoa@d+7
 19383  2488  3199  2174         	fcall	_otoa
 19384  248A  0020               	movlb	0	; select bank0
 19385  248B  0831               	movf	?_otoa+1,w
 19386  248C  0021               	movlb	1	; select bank1
 19387  248D  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 19388  248E  0020               	movlb	0	; select bank0
 19389  248F  0830               	movf	?_otoa,w
 19390  2490  0021               	movlb	1	; select bank1
 19391  2491  00E3               	movwf	?_vfpfcnvrt^(0+128)
 19392  2492  0008               	return
 19393  2493                     L28:	
 19394  2493                     L27:	
 19395  2493  3198  288E         	ljmp	l7687
 19396                           
 19397                           	psect	text5_split_7
 19398  188E                     l7687:	
 19399                           
 19400                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
 19401  188E  0021               	movlb	1	; select bank1
 19402  188F  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19403  1890  0086               	movwf	6
 19404  1891  0187               	clrf	7
 19405  1892  3F40               	moviw [0]fsr1
 19406  1893  0022               	movlb	2	; select bank2
 19407  1894  00A0               	movwf	??_vfpfcnvrt^(0+256)
 19408  1895  3F41               	moviw [1]fsr1
 19409  1896  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 19410  1897  0820               	movf	??_vfpfcnvrt^(0+256),w
 19411  1898  0084               	movwf	4
 19412  1899  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 19413  189A  0085               	movwf	5
 19414  189B  0012               	moviw fsr0++
 19415  189C  3A6F               	xorlw	111
 19416  189D  1D03               	btfss	3,2
 19417  189E  28F0               	goto	l7697
 19418                           
 19419                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
 19420  189F  0021               	movlb	1	; select bank1
 19421  18A0  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19422  18A1  0086               	movwf	6
 19423  18A2  0187               	clrf	7
 19424  18A3  3001               	movlw	1
 19425  18A4  0781               	addwf	1,f
 19426  18A5  3141               	addfsr 1,1
 19427  18A6  1803               	skipnc
 19428  18A7  0A81               	incf	1,f
 19429                           
 19430                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
 19431  18A8  0866               	movf	vfpfcnvrt@ap^(0+128),w
 19432  18A9  0086               	movwf	6
 19433  18AA  3001               	movlw	1	; select bank2/3
 19434  18AB  0087               	movwf	7
 19435  18AC  0801               	movf	1,w
 19436  18AD  0084               	movwf	4
 19437  18AE  3001               	movlw	1	; select bank2/3
 19438  18AF  0085               	movwf	5
 19439  18B0  3002               	movlw	2
 19440  18B1  0781               	addwf	1,f
 19441  18B2  3F00               	moviw [0]fsr0
 19442  18B3  0022               	movlb	2	; select bank2
 19443  18B4  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 19444  18B5  3F01               	moviw [1]fsr0
 19445  18B6  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 19446  18B7  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 19447  18B8  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 19448  18B9  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 19449  18BA  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 19450  18BB  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 19451  18BC  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 19452                           
 19453                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 995:       
      +                                return otoa(fp, llu);
 19454  18BD  0021               	movlb	1	; select bank1
 19455  18BE  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 19456  18BF  0020               	movlb	0	; select bank0
 19457  18C0  00B1               	movwf	otoa@fp+1
 19458  18C1  0021               	movlb	1	; select bank1
 19459  18C2  0863               	movf	vfpfcnvrt@fp^(0+128),w
 19460  18C3  0020               	movlb	0	; select bank0
 19461  18C4  00B0               	movwf	otoa@fp
 19462  18C5  0022               	movlb	2	; select bank2
 19463  18C6  0846               	movf	vfpfcnvrt@llu^(0+256),w
 19464  18C7  0020               	movlb	0	; select bank0
 19465  18C8  00B2               	movwf	otoa@d
 19466  18C9  0022               	movlb	2	; select bank2
 19467  18CA  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 19468  18CB  0020               	movlb	0	; select bank0
 19469  18CC  00B3               	movwf	otoa@d+1
 19470  18CD  0022               	movlb	2	; select bank2
 19471  18CE  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 19472  18CF  0020               	movlb	0	; select bank0
 19473  18D0  00B4               	movwf	otoa@d+2
 19474  18D1  0022               	movlb	2	; select bank2
 19475  18D2  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 19476  18D3  0020               	movlb	0	; select bank0
 19477  18D4  00B5               	movwf	otoa@d+3
 19478  18D5  0022               	movlb	2	; select bank2
 19479  18D6  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 19480  18D7  0020               	movlb	0	; select bank0
 19481  18D8  00B6               	movwf	otoa@d+4
 19482  18D9  0022               	movlb	2	; select bank2
 19483  18DA  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 19484  18DB  0020               	movlb	0	; select bank0
 19485  18DC  00B7               	movwf	otoa@d+5
 19486  18DD  0022               	movlb	2	; select bank2
 19487  18DE  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 19488  18DF  0020               	movlb	0	; select bank0
 19489  18E0  00B8               	movwf	otoa@d+6
 19490  18E1  0022               	movlb	2	; select bank2
 19491  18E2  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 19492  18E3  0020               	movlb	0	; select bank0
 19493  18E4  00B9               	movwf	otoa@d+7
 19494  18E5  3199  2174         	fcall	_otoa
 19495  18E7  0020               	movlb	0	; select bank0
 19496  18E8  0831               	movf	?_otoa+1,w
 19497  18E9  0021               	movlb	1	; select bank1
 19498  18EA  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 19499  18EB  0020               	movlb	0	; select bank0
 19500  18EC  0830               	movf	?_otoa,w
 19501  18ED  0021               	movlb	1	; select bank1
 19502  18EE  00E3               	movwf	?_vfpfcnvrt^(0+128)
 19503  18EF  0008               	return
 19504  18F0                     l7697:	
 19505                           
 19506                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1000:      
      +                             if (!strncmp(*fmt, "lo", ((sizeof("lo")/sizeof("lo"[0]))-1))) {
 19507  18F0  0021               	movlb	1	; select bank1
 19508  18F1  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19509  18F2  0086               	movwf	6
 19510  18F3  0187               	clrf	7
 19511  18F4  3F40               	moviw [0]fsr1
 19512  18F5  00F1               	movwf	strncmp@_l
 19513  18F6  3F41               	moviw [1]fsr1
 19514  18F7  00F2               	movwf	strncmp@_l+1
 19515  18F8  307F               	movlw	low (STR_69| (0+32768))
 19516  18F9  00F3               	movwf	strncmp@_r
 19517  18FA  30B8               	movlw	high (STR_69| (0+32768))
 19518  18FB  00F4               	movwf	strncmp@_r+1
 19519  18FC  3002               	movlw	2
 19520  18FD  00F5               	movwf	strncmp@n
 19521  18FE  3000               	movlw	0
 19522  18FF  00F6               	movwf	strncmp@n+1
 19523  1900  31A0  200C  3198   	fcall	_strncmp
 19524  1903  0871               	movf	?_strncmp,w
 19525  1904  0472               	iorwf	?_strncmp+1,w
 19526  1905  1D03               	btfss	3,2
 19527  1906  2972               	goto	L30
 19528                           
 19529                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1002:      
      +                                 *fmt += ((sizeof("lo")/sizeof("lo"[0]))-1);
 19530  1907  0021               	movlb	1	; select bank1
 19531  1908  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19532  1909  0086               	movwf	6
 19533  190A  0187               	clrf	7
 19534  190B  3002               	movlw	2
 19535  190C  0781               	addwf	1,f
 19536  190D  3141               	addfsr 1,1
 19537  190E  1803               	skipnc
 19538  190F  0A81               	incf	1,f
 19539                           
 19540                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1003:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
 19541  1910  0866               	movf	vfpfcnvrt@ap^(0+128),w
 19542  1911  0086               	movwf	6
 19543  1912  3001               	movlw	1	; select bank2/3
 19544  1913  0087               	movwf	7
 19545  1914  0801               	movf	1,w
 19546  1915  0084               	movwf	4
 19547  1916  3001               	movlw	1	; select bank2/3
 19548  1917  0085               	movwf	5
 19549  1918  3004               	movlw	4
 19550  1919  0781               	addwf	1,f
 19551  191A  3F00               	moviw [0]fsr0
 19552  191B  0022               	movlb	2	; select bank2
 19553  191C  00A0               	movwf	??_vfpfcnvrt^(0+256)
 19554  191D  3F01               	moviw [1]fsr0
 19555  191E  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 19556  191F  3F02               	moviw [2]fsr0
 19557  1920  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 19558  1921  3F03               	moviw [3]fsr0
 19559  1922  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 19560  1923  0820               	movf	??_vfpfcnvrt^(0+256),w
 19561  1924  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
 19562  1925  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 19563  1926  00A5               	movwf	((??_vfpfcnvrt+4)^(0+256)+1)
 19564  1927  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 19565  1928  00A6               	movwf	((??_vfpfcnvrt+4)^(0+256)+2)
 19566  1929  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 19567  192A  00A7               	movwf	((??_vfpfcnvrt+4)^(0+256)+3)
 19568  192B  01A8               	clrf	((??_vfpfcnvrt+4)^(0+256)+4)
 19569  192C  01A9               	clrf	((??_vfpfcnvrt+4)^(0+256)+5)
 19570  192D  01AA               	clrf	((??_vfpfcnvrt+4)^(0+256)+6)
 19571  192E  01AB               	clrf	((??_vfpfcnvrt+4)^(0+256)+7)
 19572  192F  082B               	movf	((??_vfpfcnvrt+4)^(0+256)+7),w
 19573  1930  00CD               	movwf	(vfpfcnvrt@llu+7)^(0+256)
 19574  1931  082A               	movf	((??_vfpfcnvrt+4)^(0+256)+6),w
 19575  1932  00CC               	movwf	(vfpfcnvrt@llu+6)^(0+256)
 19576  1933  0829               	movf	((??_vfpfcnvrt+4)^(0+256)+5),w
 19577  1934  00CB               	movwf	(vfpfcnvrt@llu+5)^(0+256)
 19578  1935  0828               	movf	((??_vfpfcnvrt+4)^(0+256)+4),w
 19579  1936  00CA               	movwf	(vfpfcnvrt@llu+4)^(0+256)
 19580  1937  0827               	movf	((??_vfpfcnvrt+4)^(0+256)+3),w
 19581  1938  00C9               	movwf	(vfpfcnvrt@llu+3)^(0+256)
 19582  1939  0826               	movf	((??_vfpfcnvrt+4)^(0+256)+2),w
 19583  193A  00C8               	movwf	(vfpfcnvrt@llu+2)^(0+256)
 19584  193B  0825               	movf	((??_vfpfcnvrt+4)^(0+256)+1),w
 19585  193C  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 19586  193D  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
 19587  193E  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 19588                           
 19589                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1005:      
      +                                 return otoa(fp, llu);
 19590  193F  0021               	movlb	1	; select bank1
 19591  1940  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 19592  1941  0020               	movlb	0	; select bank0
 19593  1942  00B1               	movwf	otoa@fp+1
 19594  1943  0021               	movlb	1	; select bank1
 19595  1944  0863               	movf	vfpfcnvrt@fp^(0+128),w
 19596  1945  0020               	movlb	0	; select bank0
 19597  1946  00B0               	movwf	otoa@fp
 19598  1947  0022               	movlb	2	; select bank2
 19599  1948  0846               	movf	vfpfcnvrt@llu^(0+256),w
 19600  1949  0020               	movlb	0	; select bank0
 19601  194A  00B2               	movwf	otoa@d
 19602  194B  0022               	movlb	2	; select bank2
 19603  194C  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 19604  194D  0020               	movlb	0	; select bank0
 19605  194E  00B3               	movwf	otoa@d+1
 19606  194F  0022               	movlb	2	; select bank2
 19607  1950  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 19608  1951  0020               	movlb	0	; select bank0
 19609  1952  00B4               	movwf	otoa@d+2
 19610  1953  0022               	movlb	2	; select bank2
 19611  1954  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 19612  1955  0020               	movlb	0	; select bank0
 19613  1956  00B5               	movwf	otoa@d+3
 19614  1957  0022               	movlb	2	; select bank2
 19615  1958  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 19616  1959  0020               	movlb	0	; select bank0
 19617  195A  00B6               	movwf	otoa@d+4
 19618  195B  0022               	movlb	2	; select bank2
 19619  195C  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 19620  195D  0020               	movlb	0	; select bank0
 19621  195E  00B7               	movwf	otoa@d+5
 19622  195F  0022               	movlb	2	; select bank2
 19623  1960  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 19624  1961  0020               	movlb	0	; select bank0
 19625  1962  00B8               	movwf	otoa@d+6
 19626  1963  0022               	movlb	2	; select bank2
 19627  1964  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 19628  1965  0020               	movlb	0	; select bank0
 19629  1966  00B9               	movwf	otoa@d+7
 19630  1967  3199  2174         	fcall	_otoa
 19631  1969  0020               	movlb	0	; select bank0
 19632  196A  0831               	movf	?_otoa+1,w
 19633  196B  0021               	movlb	1	; select bank1
 19634  196C  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 19635  196D  0020               	movlb	0	; select bank0
 19636  196E  0830               	movf	?_otoa,w
 19637  196F  0021               	movlb	1	; select bank1
 19638  1970  00E3               	movwf	?_vfpfcnvrt^(0+128)
 19639  1971  0008               	return
 19640  1972                     L30:	
 19641  1972                     L29:	
 19642  1972  3188  283F         	ljmp	l7707
 19643                           
 19644                           	psect	text5_split_8
 19645  083F                     l7707:	
 19646                           
 19647                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
 19648  083F  0021               	movlb	1	; select bank1
 19649  0840  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19650  0841  0086               	movwf	6
 19651  0842  0187               	clrf	7
 19652  0843  3F40               	moviw [0]fsr1
 19653  0844  00F1               	movwf	strncmp@_l
 19654  0845  3F41               	moviw [1]fsr1
 19655  0846  00F2               	movwf	strncmp@_l+1
 19656  0847  3082               	movlw	low (STR_74| (0+32768))
 19657  0848  00F3               	movwf	strncmp@_r
 19658  0849  30B8               	movlw	high (STR_74| (0+32768))
 19659  084A  00F4               	movwf	strncmp@_r+1
 19660  084B  3002               	movlw	2
 19661  084C  00F5               	movwf	strncmp@n
 19662  084D  3000               	movlw	0
 19663  084E  00F6               	movwf	strncmp@n+1
 19664  084F  31A0  200C  3188   	fcall	_strncmp
 19665  0852  0871               	movf	?_strncmp,w
 19666  0853  0472               	iorwf	?_strncmp+1,w
 19667  0854  1D03               	btfss	3,2
 19668  0855  28A7               	goto	l7717
 19669                           
 19670                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
 19671  0856  0021               	movlb	1	; select bank1
 19672  0857  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19673  0858  0086               	movwf	6
 19674  0859  0187               	clrf	7
 19675  085A  3002               	movlw	2
 19676  085B  0781               	addwf	1,f
 19677  085C  3141               	addfsr 1,1
 19678  085D  1803               	skipnc
 19679  085E  0A81               	incf	1,f
 19680                           
 19681                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 19682  085F  0866               	movf	vfpfcnvrt@ap^(0+128),w
 19683  0860  0086               	movwf	6
 19684  0861  3001               	movlw	1	; select bank2/3
 19685  0862  0087               	movwf	7
 19686  0863  0801               	movf	1,w
 19687  0864  0084               	movwf	4
 19688  0865  3001               	movlw	1	; select bank2/3
 19689  0866  0085               	movwf	5
 19690  0867  3002               	movlw	2
 19691  0868  0781               	addwf	1,f
 19692  0869  3F00               	moviw [0]fsr0
 19693  086A  0022               	movlb	2	; select bank2
 19694  086B  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 19695  086C  3F01               	moviw [1]fsr0
 19696  086D  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 19697  086E  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 19698  086F  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 19699  0870  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 19700  0871  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 19701  0872  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 19702  0873  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 19703                           
 19704                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1049:      
      +                                 return otoa(fp, llu);
 19705  0874  0021               	movlb	1	; select bank1
 19706  0875  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 19707  0876  0020               	movlb	0	; select bank0
 19708  0877  00B1               	movwf	otoa@fp+1
 19709  0878  0021               	movlb	1	; select bank1
 19710  0879  0863               	movf	vfpfcnvrt@fp^(0+128),w
 19711  087A  0020               	movlb	0	; select bank0
 19712  087B  00B0               	movwf	otoa@fp
 19713  087C  0022               	movlb	2	; select bank2
 19714  087D  0846               	movf	vfpfcnvrt@llu^(0+256),w
 19715  087E  0020               	movlb	0	; select bank0
 19716  087F  00B2               	movwf	otoa@d
 19717  0880  0022               	movlb	2	; select bank2
 19718  0881  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 19719  0882  0020               	movlb	0	; select bank0
 19720  0883  00B3               	movwf	otoa@d+1
 19721  0884  0022               	movlb	2	; select bank2
 19722  0885  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 19723  0886  0020               	movlb	0	; select bank0
 19724  0887  00B4               	movwf	otoa@d+2
 19725  0888  0022               	movlb	2	; select bank2
 19726  0889  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 19727  088A  0020               	movlb	0	; select bank0
 19728  088B  00B5               	movwf	otoa@d+3
 19729  088C  0022               	movlb	2	; select bank2
 19730  088D  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 19731  088E  0020               	movlb	0	; select bank0
 19732  088F  00B6               	movwf	otoa@d+4
 19733  0890  0022               	movlb	2	; select bank2
 19734  0891  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 19735  0892  0020               	movlb	0	; select bank0
 19736  0893  00B7               	movwf	otoa@d+5
 19737  0894  0022               	movlb	2	; select bank2
 19738  0895  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 19739  0896  0020               	movlb	0	; select bank0
 19740  0897  00B8               	movwf	otoa@d+6
 19741  0898  0022               	movlb	2	; select bank2
 19742  0899  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 19743  089A  0020               	movlb	0	; select bank0
 19744  089B  00B9               	movwf	otoa@d+7
 19745  089C  3199  2174         	fcall	_otoa
 19746  089E  0020               	movlb	0	; select bank0
 19747  089F  0831               	movf	?_otoa+1,w
 19748  08A0  0021               	movlb	1	; select bank1
 19749  08A1  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 19750  08A2  0020               	movlb	0	; select bank0
 19751  08A3  0830               	movf	?_otoa,w
 19752  08A4  0021               	movlb	1	; select bank1
 19753  08A5  00E3               	movwf	?_vfpfcnvrt^(0+128)
 19754  08A6  0008               	return
 19755  08A7                     l7717:	
 19756                           
 19757                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
 19758  08A7  0021               	movlb	1	; select bank1
 19759  08A8  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19760  08A9  0086               	movwf	6
 19761  08AA  0187               	clrf	7
 19762  08AB  3F40               	moviw [0]fsr1
 19763  08AC  00F1               	movwf	strncmp@_l
 19764  08AD  3F41               	moviw [1]fsr1
 19765  08AE  00F2               	movwf	strncmp@_l+1
 19766  08AF  3054               	movlw	low (STR_79| (0+32768))
 19767  08B0  00F3               	movwf	strncmp@_r
 19768  08B1  30B8               	movlw	high (STR_79| (0+32768))
 19769  08B2  00F4               	movwf	strncmp@_r+1
 19770  08B3  3003               	movlw	3
 19771  08B4  00F5               	movwf	strncmp@n
 19772  08B5  3000               	movlw	0
 19773  08B6  00F6               	movwf	strncmp@n+1
 19774  08B7  31A0  200C  3188   	fcall	_strncmp
 19775  08BA  0871               	movf	?_strncmp,w
 19776  08BB  0472               	iorwf	?_strncmp+1,w
 19777  08BC  1D03               	btfss	3,2
 19778  08BD  2977               	goto	l7729
 19779                           
 19780                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
 19781  08BE  0021               	movlb	1	; select bank1
 19782  08BF  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19783  08C0  0086               	movwf	6
 19784  08C1  0187               	clrf	7
 19785  08C2  3003               	movlw	3
 19786  08C3  0781               	addwf	1,f
 19787  08C4  3141               	addfsr 1,1
 19788  08C5  1803               	skipnc
 19789  08C6  0A81               	incf	1,f
 19790                           
 19791                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
 19792  08C7  0866               	movf	vfpfcnvrt@ap^(0+128),w
 19793  08C8  0086               	movwf	6
 19794  08C9  3001               	movlw	1	; select bank2/3
 19795  08CA  0087               	movwf	7
 19796  08CB  3F40               	moviw [0]fsr1
 19797  08CC  0084               	movwf	4
 19798  08CD  3001               	movlw	1	; select bank2/3
 19799  08CE  0085               	movwf	5
 19800  08CF  0A81               	incf	1,f
 19801  08D0  0800               	movf	0,w
 19802  08D1  0022               	movlb	2	; select bank2
 19803  08D2  00A0               	movwf	??_vfpfcnvrt^(0+256)
 19804  08D3  0820               	movf	??_vfpfcnvrt^(0+256),w
 19805  08D4  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 19806                           
 19807                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
 19808  08D5  0023               	movlb	3	; select bank3
 19809  08D6  083C               	movf	_nout^(0+384),w
 19810  08D7  0022               	movlb	2	; select bank2
 19811  08D8  00A0               	movwf	??_vfpfcnvrt^(0+256)
 19812  08D9  0844               	movf	vfpfcnvrt@vp^(0+256),w
 19813  08DA  0086               	movwf	6
 19814  08DB  3001               	movlw	1	; select bank2/3
 19815  08DC  0087               	movwf	7
 19816  08DD  0820               	movf	??_vfpfcnvrt^(0+256),w
 19817  08DE  0081               	movwf	1
 19818  08DF  2973               	goto	l7725
 19819  08E0                     l7731:	
 19820                           
 19821                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
 19822  08E0  0021               	movlb	1	; select bank1
 19823  08E1  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19824  08E2  0086               	movwf	6
 19825  08E3  0187               	clrf	7
 19826  08E4  3002               	movlw	2
 19827  08E5  0781               	addwf	1,f
 19828  08E6  3141               	addfsr 1,1
 19829  08E7  1803               	skipnc
 19830  08E8  0A81               	incf	1,f
 19831                           
 19832                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
 19833  08E9  0866               	movf	vfpfcnvrt@ap^(0+128),w
 19834  08EA  0086               	movwf	6
 19835  08EB  3001               	movlw	1	; select bank2/3
 19836  08EC  0087               	movwf	7
 19837  08ED  3F40               	moviw [0]fsr1
 19838  08EE  0084               	movwf	4
 19839  08EF  3001               	movlw	1	; select bank2/3
 19840  08F0  0085               	movwf	5
 19841  08F1  0A81               	incf	1,f
 19842  08F2  0800               	movf	0,w
 19843  08F3  0022               	movlb	2	; select bank2
 19844  08F4  00A0               	movwf	??_vfpfcnvrt^(0+256)
 19845  08F5  0820               	movf	??_vfpfcnvrt^(0+256),w
 19846  08F6  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 19847                           
 19848                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
 19849  08F7  0844               	movf	vfpfcnvrt@vp^(0+256),w
 19850  08F8  0086               	movwf	6
 19851  08F9  3001               	movlw	1	; select bank2/3
 19852  08FA  0087               	movwf	7
 19853  08FB  0023               	movlb	3	; select bank3
 19854  08FC  083C               	movf	_nout^(0+384),w
 19855  08FD  3FC0               	movwi [0]fsr1
 19856  08FE  083D               	movf	(_nout+1)^(0+384),w
 19857  08FF  3FC1               	movwi [1]fsr1
 19858  0900  2973               	goto	l7725
 19859  0901                     l7743:	
 19860                           
 19861                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
 19862  0901  0021               	movlb	1	; select bank1
 19863  0902  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19864  0903  0086               	movwf	6
 19865  0904  0187               	clrf	7
 19866  0905  3001               	movlw	1
 19867  0906  0781               	addwf	1,f
 19868  0907  3141               	addfsr 1,1
 19869  0908  1803               	skipnc
 19870  0909  0A81               	incf	1,f
 19871                           
 19872                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
 19873  090A  0866               	movf	vfpfcnvrt@ap^(0+128),w
 19874  090B  0086               	movwf	6
 19875  090C  3001               	movlw	1	; select bank2/3
 19876  090D  0087               	movwf	7
 19877  090E  3F40               	moviw [0]fsr1
 19878  090F  0084               	movwf	4
 19879  0910  3001               	movlw	1	; select bank2/3
 19880  0911  0085               	movwf	5
 19881  0912  0A81               	incf	1,f
 19882  0913  0800               	movf	0,w
 19883  0914  0022               	movlb	2	; select bank2
 19884  0915  00A0               	movwf	??_vfpfcnvrt^(0+256)
 19885  0916  0820               	movf	??_vfpfcnvrt^(0+256),w
 19886  0917  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 19887                           
 19888                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
 19889  0918  0844               	movf	vfpfcnvrt@vp^(0+256),w
 19890  0919  0086               	movwf	6
 19891  091A  3001               	movlw	1	; select bank2/3
 19892  091B  0087               	movwf	7
 19893  091C  0023               	movlb	3	; select bank3
 19894  091D  083C               	movf	_nout^(0+384),w
 19895  091E  3FC0               	movwi [0]fsr1
 19896  091F  083D               	movf	(_nout+1)^(0+384),w
 19897  0920  3FC1               	movwi [1]fsr1
 19898  0921  2973               	goto	l7725
 19899  0922                     l7755:	
 19900                           
 19901                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1087:      
      +                                 *fmt += ((sizeof("ln")/sizeof("ln"[0]))-1);
 19902  0922  0021               	movlb	1	; select bank1
 19903  0923  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19904  0924  0086               	movwf	6
 19905  0925  0187               	clrf	7
 19906  0926  3002               	movlw	2
 19907  0927  0781               	addwf	1,f
 19908  0928  3141               	addfsr 1,1
 19909  0929  1803               	skipnc
 19910  092A  0A81               	incf	1,f
 19911                           
 19912                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1088:      
      +                                 vp = (void *)(*(long * *)__va_arg(*(long * **)ap, (long *)0));
 19913  092B  0866               	movf	vfpfcnvrt@ap^(0+128),w
 19914  092C  0086               	movwf	6
 19915  092D  3001               	movlw	1	; select bank2/3
 19916  092E  0087               	movwf	7
 19917  092F  3F40               	moviw [0]fsr1
 19918  0930  0084               	movwf	4
 19919  0931  3001               	movlw	1	; select bank2/3
 19920  0932  0085               	movwf	5
 19921  0933  0A81               	incf	1,f
 19922  0934  0800               	movf	0,w
 19923  0935  0022               	movlb	2	; select bank2
 19924  0936  00A0               	movwf	??_vfpfcnvrt^(0+256)
 19925  0937  0820               	movf	??_vfpfcnvrt^(0+256),w
 19926  0938  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 19927                           
 19928                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1089:      
      +                                 *(long *)vp = (long)nout;
 19929  0939  0023               	movlb	3	; select bank3
 19930  093A  083C               	movf	_nout^(0+384),w
 19931  093B  0022               	movlb	2	; select bank2
 19932  093C  00A0               	movwf	??_vfpfcnvrt^(0+256)
 19933  093D  0023               	movlb	3	; select bank3
 19934  093E  083D               	movf	(_nout+1)^(0+384),w
 19935  093F  0022               	movlb	2	; select bank2
 19936  0940  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 19937  0941  3000               	movlw	0
 19938  0942  1BA1               	btfsc	(??_vfpfcnvrt^(0+256)+1),7
 19939  0943  30FF               	movlw	255
 19940  0944  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 19941  0945  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 19942  0946  0844               	movf	vfpfcnvrt@vp^(0+256),w
 19943  0947  0086               	movwf	6
 19944  0948  3001               	movlw	1	; select bank2/3
 19945  0949  0087               	movwf	7
 19946  094A  0820               	movf	??_vfpfcnvrt^(0+256),w
 19947  094B  3FC0               	movwi [0]fsr1
 19948  094C  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 19949  094D  3FC1               	movwi [1]fsr1
 19950  094E  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 19951  094F  3FC2               	movwi [2]fsr1
 19952  0950  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 19953  0951  3FC3               	movwi [3]fsr1
 19954  0952  2973               	goto	l7725
 19955  0953                     l7767:	
 19956                           
 19957                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
 19958  0953  0021               	movlb	1	; select bank1
 19959  0954  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19960  0955  0086               	movwf	6
 19961  0956  0187               	clrf	7
 19962  0957  3002               	movlw	2
 19963  0958  0781               	addwf	1,f
 19964  0959  3141               	addfsr 1,1
 19965  095A  1803               	skipnc
 19966  095B  0A81               	incf	1,f
 19967                           
 19968                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
 19969  095C  0866               	movf	vfpfcnvrt@ap^(0+128),w
 19970  095D  0086               	movwf	6
 19971  095E  3001               	movlw	1	; select bank2/3
 19972  095F  0087               	movwf	7
 19973  0960  3F40               	moviw [0]fsr1
 19974  0961  0084               	movwf	4
 19975  0962  3001               	movlw	1	; select bank2/3
 19976  0963  0085               	movwf	5
 19977  0964  0A81               	incf	1,f
 19978  0965  0800               	movf	0,w
 19979  0966  0022               	movlb	2	; select bank2
 19980  0967  00A0               	movwf	??_vfpfcnvrt^(0+256)
 19981  0968  0820               	movf	??_vfpfcnvrt^(0+256),w
 19982  0969  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 19983                           
 19984                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
 19985  096A  0844               	movf	vfpfcnvrt@vp^(0+256),w
 19986  096B  0086               	movwf	6
 19987  096C  3001               	movlw	1	; select bank2/3
 19988  096D  0087               	movwf	7
 19989  096E  0023               	movlb	3	; select bank3
 19990  096F  083C               	movf	_nout^(0+384),w
 19991  0970  3FC0               	movwi [0]fsr1
 19992  0971  083D               	movf	(_nout+1)^(0+384),w
 19993  0972  3FC1               	movwi [1]fsr1
 19994  0973                     l7725:	
 19995                           
 19996                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
 19997  0973  0021               	movlb	1	; select bank1
 19998  0974  01E3               	clrf	?_vfpfcnvrt^(0+128)
 19999  0975  01E4               	clrf	(?_vfpfcnvrt+1)^(0+128)
 20000  0976  0008               	return
 20001  0977                     l7729:	
 20002                           
 20003                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
 20004  0977  0021               	movlb	1	; select bank1
 20005  0978  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20006  0979  0086               	movwf	6
 20007  097A  0187               	clrf	7
 20008  097B  3F40               	moviw [0]fsr1
 20009  097C  00F1               	movwf	strncmp@_l
 20010  097D  3F41               	moviw [1]fsr1
 20011  097E  00F2               	movwf	strncmp@_l+1
 20012  097F  3055               	movlw	low ((STR_79+1)| (0+32768))
 20013  0980  00F3               	movwf	strncmp@_r
 20014  0981  30B8               	movlw	high ((STR_79+1)| (0+32768))
 20015  0982  00F4               	movwf	strncmp@_r+1
 20016  0983  3002               	movlw	2
 20017  0984  00F5               	movwf	strncmp@n
 20018  0985  3000               	movlw	0
 20019  0986  00F6               	movwf	strncmp@n+1
 20020  0987  31A0  200C  3188   	fcall	_strncmp
 20021  098A  0871               	movf	?_strncmp,w
 20022  098B  0472               	iorwf	?_strncmp+1,w
 20023  098C  1903               	btfsc	3,2
 20024  098D  28E0               	goto	l7731
 20025                           
 20026                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
 20027  098E  0021               	movlb	1	; select bank1
 20028  098F  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20029  0990  0086               	movwf	6
 20030  0991  0187               	clrf	7
 20031  0992  3F40               	moviw [0]fsr1
 20032  0993  0022               	movlb	2	; select bank2
 20033  0994  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20034  0995  3F41               	moviw [1]fsr1
 20035  0996  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 20036  0997  0820               	movf	??_vfpfcnvrt^(0+256),w
 20037  0998  0084               	movwf	4
 20038  0999  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 20039  099A  0085               	movwf	5
 20040  099B  0012               	moviw fsr0++
 20041  099C  3A6E               	xorlw	110
 20042  099D  1903               	btfsc	3,2
 20043  099E  2901               	goto	l7743
 20044                           
 20045                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1085:      
      +                             if (!strncmp(*fmt, "ln", ((sizeof("ln")/sizeof("ln"[0]))-1))) {
 20046  099F  0021               	movlb	1	; select bank1
 20047  09A0  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20048  09A1  0086               	movwf	6
 20049  09A2  0187               	clrf	7
 20050  09A3  3F40               	moviw [0]fsr1
 20051  09A4  00F1               	movwf	strncmp@_l
 20052  09A5  3F41               	moviw [1]fsr1
 20053  09A6  00F2               	movwf	strncmp@_l+1
 20054  09A7  3079               	movlw	low (STR_89| (0+32768))
 20055  09A8  00F3               	movwf	strncmp@_r
 20056  09A9  30B8               	movlw	high (STR_89| (0+32768))
 20057  09AA  00F4               	movwf	strncmp@_r+1
 20058  09AB  3002               	movlw	2
 20059  09AC  00F5               	movwf	strncmp@n
 20060  09AD  3000               	movlw	0
 20061  09AE  00F6               	movwf	strncmp@n+1
 20062  09AF  31A0  200C  3188   	fcall	_strncmp
 20063  09B2  0871               	movf	?_strncmp,w
 20064  09B3  0472               	iorwf	?_strncmp+1,w
 20065  09B4  1903               	btfsc	3,2
 20066  09B5  2922               	goto	l7755
 20067                           
 20068                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
 20069  09B6  0021               	movlb	1	; select bank1
 20070  09B7  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20071  09B8  0086               	movwf	6
 20072  09B9  0187               	clrf	7
 20073  09BA  3F40               	moviw [0]fsr1
 20074  09BB  00F1               	movwf	strncmp@_l
 20075  09BC  3F41               	moviw [1]fsr1
 20076  09BD  00F2               	movwf	strncmp@_l+1
 20077  09BE  307C               	movlw	low (STR_94| (0+32768))
 20078  09BF  00F3               	movwf	strncmp@_r
 20079  09C0  30B8               	movlw	high (STR_94| (0+32768))
 20080  09C1  00F4               	movwf	strncmp@_r+1
 20081  09C2  3002               	movlw	2
 20082  09C3  00F5               	movwf	strncmp@n
 20083  09C4  3000               	movlw	0
 20084  09C5  00F6               	movwf	strncmp@n+1
 20085  09C6  31A0  200C  3188   	fcall	_strncmp
 20086  09C9  0871               	movf	?_strncmp,w
 20087  09CA  0472               	iorwf	?_strncmp+1,w
 20088  09CB  1903               	btfsc	3,2
 20089  09CC  2953               	goto	l7767
 20090                           
 20091                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
 20092  09CD  0021               	movlb	1	; select bank1
 20093  09CE  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20094  09CF  0086               	movwf	6
 20095  09D0  0187               	clrf	7
 20096  09D1  3F40               	moviw [0]fsr1
 20097  09D2  0022               	movlb	2	; select bank2
 20098  09D3  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20099  09D4  3F41               	moviw [1]fsr1
 20100  09D5  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 20101  09D6  0820               	movf	??_vfpfcnvrt^(0+256),w
 20102  09D7  0084               	movwf	4
 20103  09D8  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 20104  09D9  0085               	movwf	5
 20105  09DA  0012               	moviw fsr0++
 20106  09DB  3A70               	xorlw	112
 20107  09DC  1D03               	btfss	3,2
 20108  09DD  2A43               	goto	l7787
 20109                           
 20110                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
 20111  09DE  0021               	movlb	1	; select bank1
 20112  09DF  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20113  09E0  0086               	movwf	6
 20114  09E1  0187               	clrf	7
 20115  09E2  3001               	movlw	1
 20116  09E3  0781               	addwf	1,f
 20117  09E4  3141               	addfsr 1,1
 20118  09E5  1803               	skipnc
 20119  09E6  0A81               	incf	1,f
 20120                           
 20121                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
 20122  09E7  0866               	movf	vfpfcnvrt@ap^(0+128),w
 20123  09E8  0086               	movwf	6
 20124  09E9  3001               	movlw	1	; select bank2/3
 20125  09EA  0087               	movwf	7
 20126  09EB  3F40               	moviw [0]fsr1
 20127  09EC  0084               	movwf	4
 20128  09ED  3001               	movlw	1	; select bank2/3
 20129  09EE  0085               	movwf	5
 20130  09EF  0A81               	incf	1,f
 20131  09F0  0800               	movf	0,w
 20132  09F1  0022               	movlb	2	; select bank2
 20133  09F2  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20134  09F3  01A1               	clrf	(??_vfpfcnvrt^(0+256)+1)
 20135  09F4  01A2               	clrf	(??_vfpfcnvrt^(0+256)+2)
 20136  09F5  01A3               	clrf	(??_vfpfcnvrt^(0+256)+3)
 20137  09F6  01A4               	clrf	(??_vfpfcnvrt^(0+256)+4)
 20138  09F7  01A5               	clrf	(??_vfpfcnvrt^(0+256)+5)
 20139  09F8  01A6               	clrf	(??_vfpfcnvrt^(0+256)+6)
 20140  09F9  01A7               	clrf	(??_vfpfcnvrt^(0+256)+7)
 20141  09FA  0827               	movf	(??_vfpfcnvrt^(0+256)+7),w
 20142  09FB  00CD               	movwf	(vfpfcnvrt@llu+7)^(0+256)
 20143  09FC  0826               	movf	(??_vfpfcnvrt^(0+256)+6),w
 20144  09FD  00CC               	movwf	(vfpfcnvrt@llu+6)^(0+256)
 20145  09FE  0825               	movf	(??_vfpfcnvrt^(0+256)+5),w
 20146  09FF  00CB               	movwf	(vfpfcnvrt@llu+5)^(0+256)
 20147  0A00  0824               	movf	(??_vfpfcnvrt^(0+256)+4),w
 20148  0A01  00CA               	movwf	(vfpfcnvrt@llu+4)^(0+256)
 20149  0A02  0823               	movf	(??_vfpfcnvrt^(0+256)+3),w
 20150  0A03  00C9               	movwf	(vfpfcnvrt@llu+3)^(0+256)
 20151  0A04  0822               	movf	(??_vfpfcnvrt^(0+256)+2),w
 20152  0A05  00C8               	movwf	(vfpfcnvrt@llu+2)^(0+256)
 20153  0A06  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 20154  0A07  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 20155  0A08  0820               	movf	??_vfpfcnvrt^(0+256),w
 20156  0A09  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 20157                           
 20158                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
 20159  0A0A  0021               	movlb	1	; select bank1
 20160  0A0B  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 20161  0A0C  0020               	movlb	0	; select bank0
 20162  0A0D  00B1               	movwf	xtoa@fp+1
 20163  0A0E  0021               	movlb	1	; select bank1
 20164  0A0F  0863               	movf	vfpfcnvrt@fp^(0+128),w
 20165  0A10  0020               	movlb	0	; select bank0
 20166  0A11  00B0               	movwf	xtoa@fp
 20167  0A12  0022               	movlb	2	; select bank2
 20168  0A13  0846               	movf	vfpfcnvrt@llu^(0+256),w
 20169  0A14  0020               	movlb	0	; select bank0
 20170  0A15  00B2               	movwf	xtoa@d
 20171  0A16  0022               	movlb	2	; select bank2
 20172  0A17  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 20173  0A18  0020               	movlb	0	; select bank0
 20174  0A19  00B3               	movwf	xtoa@d+1
 20175  0A1A  0022               	movlb	2	; select bank2
 20176  0A1B  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 20177  0A1C  0020               	movlb	0	; select bank0
 20178  0A1D  00B4               	movwf	xtoa@d+2
 20179  0A1E  0022               	movlb	2	; select bank2
 20180  0A1F  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 20181  0A20  0020               	movlb	0	; select bank0
 20182  0A21  00B5               	movwf	xtoa@d+3
 20183  0A22  0022               	movlb	2	; select bank2
 20184  0A23  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 20185  0A24  0020               	movlb	0	; select bank0
 20186  0A25  00B6               	movwf	xtoa@d+4
 20187  0A26  0022               	movlb	2	; select bank2
 20188  0A27  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 20189  0A28  0020               	movlb	0	; select bank0
 20190  0A29  00B7               	movwf	xtoa@d+5
 20191  0A2A  0022               	movlb	2	; select bank2
 20192  0A2B  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 20193  0A2C  0020               	movlb	0	; select bank0
 20194  0A2D  00B8               	movwf	xtoa@d+6
 20195  0A2E  0022               	movlb	2	; select bank2
 20196  0A2F  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 20197  0A30  0020               	movlb	0	; select bank0
 20198  0A31  00B9               	movwf	xtoa@d+7
 20199  0A32  3078               	movlw	120
 20200  0A33  0022               	movlb	2	; select bank2
 20201  0A34  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20202  0A35  0820               	movf	??_vfpfcnvrt^(0+256),w
 20203  0A36  0020               	movlb	0	; select bank0
 20204  0A37  00BA               	movwf	xtoa@x
 20205  0A38  319E  26A7         	fcall	_xtoa
 20206  0A3A  0020               	movlb	0	; select bank0
 20207  0A3B  0831               	movf	?_xtoa+1,w
 20208  0A3C  0021               	movlb	1	; select bank1
 20209  0A3D  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 20210  0A3E  0020               	movlb	0	; select bank0
 20211  0A3F  0830               	movf	?_xtoa,w
 20212  0A40  0021               	movlb	1	; select bank1
 20213  0A41  00E3               	movwf	?_vfpfcnvrt^(0+128)
 20214  0A42  0008               	return
 20215  0A43                     l7787:	
 20216                           
 20217                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 20218  0A43  0021               	movlb	1	; select bank1
 20219  0A44  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20220  0A45  0086               	movwf	6
 20221  0A46  0187               	clrf	7
 20222  0A47  3F40               	moviw [0]fsr1
 20223  0A48  0022               	movlb	2	; select bank2
 20224  0A49  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20225  0A4A  3F41               	moviw [1]fsr1
 20226  0A4B  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 20227  0A4C  0820               	movf	??_vfpfcnvrt^(0+256),w
 20228  0A4D  0084               	movwf	4
 20229  0A4E  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 20230  0A4F  0085               	movwf	5
 20231  0A50  0012               	moviw fsr0++
 20232  0A51  3A73               	xorlw	115
 20233  0A52  1D03               	btfss	3,2
 20234  0A53  2A84               	goto	l7797
 20235                           
 20236                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 20237  0A54  0021               	movlb	1	; select bank1
 20238  0A55  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20239  0A56  0086               	movwf	6
 20240  0A57  0187               	clrf	7
 20241  0A58  3001               	movlw	1
 20242  0A59  0781               	addwf	1,f
 20243  0A5A  3141               	addfsr 1,1
 20244  0A5B  1803               	skipnc
 20245  0A5C  0A81               	incf	1,f
 20246                           
 20247                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 20248  0A5D  0866               	movf	vfpfcnvrt@ap^(0+128),w
 20249  0A5E  0086               	movwf	6
 20250  0A5F  3001               	movlw	1	; select bank2/3
 20251  0A60  0087               	movwf	7
 20252  0A61  3F40               	moviw [0]fsr1
 20253  0A62  0084               	movwf	4
 20254  0A63  3001               	movlw	1	; select bank2/3
 20255  0A64  0085               	movwf	5
 20256  0A65  0A81               	incf	1,f
 20257  0A66  0800               	movf	0,w
 20258  0A67  0022               	movlb	2	; select bank2
 20259  0A68  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20260  0A69  0820               	movf	??_vfpfcnvrt^(0+256),w
 20261  0A6A  00AC               	movwf	vfpfcnvrt@cp^(0+256)
 20262                           
 20263                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 20264  0A6B  0021               	movlb	1	; select bank1
 20265  0A6C  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 20266  0A6D  0020               	movlb	0	; select bank0
 20267  0A6E  00A1               	movwf	stoa@fp+1
 20268  0A6F  0021               	movlb	1	; select bank1
 20269  0A70  0863               	movf	vfpfcnvrt@fp^(0+128),w
 20270  0A71  0020               	movlb	0	; select bank0
 20271  0A72  00A0               	movwf	stoa@fp
 20272  0A73  0022               	movlb	2	; select bank2
 20273  0A74  082C               	movf	vfpfcnvrt@cp^(0+256),w
 20274  0A75  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20275  0A76  0820               	movf	??_vfpfcnvrt^(0+256),w
 20276  0A77  0020               	movlb	0	; select bank0
 20277  0A78  00A2               	movwf	stoa@s
 20278  0A79  31A2  22FF         	fcall	_stoa
 20279  0A7B  0020               	movlb	0	; select bank0
 20280  0A7C  0821               	movf	?_stoa+1,w
 20281  0A7D  0021               	movlb	1	; select bank1
 20282  0A7E  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 20283  0A7F  0020               	movlb	0	; select bank0
 20284  0A80  0820               	movf	?_stoa,w
 20285  0A81  0021               	movlb	1	; select bank1
 20286  0A82  00E3               	movwf	?_vfpfcnvrt^(0+128)
 20287  0A83  0008               	return
 20288  0A84                     l7797:	
 20289                           
 20290                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
 20291  0A84  0021               	movlb	1	; select bank1
 20292  0A85  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20293  0A86  0086               	movwf	6
 20294  0A87  0187               	clrf	7
 20295  0A88  3F40               	moviw [0]fsr1
 20296  0A89  00F1               	movwf	strncmp@_l
 20297  0A8A  3F41               	moviw [1]fsr1
 20298  0A8B  00F2               	movwf	strncmp@_l+1
 20299  0A8C  305C               	movlw	low (STR_99| (0+32768))
 20300  0A8D  00F3               	movwf	strncmp@_r
 20301  0A8E  30B8               	movlw	high (STR_99| (0+32768))
 20302  0A8F  00F4               	movwf	strncmp@_r+1
 20303  0A90  3003               	movlw	3
 20304  0A91  00F5               	movwf	strncmp@n
 20305  0A92  3000               	movlw	0
 20306  0A93  00F6               	movwf	strncmp@n+1
 20307  0A94  31A0  200C  3188   	fcall	_strncmp
 20308  0A97  0871               	movf	?_strncmp,w
 20309  0A98  0472               	iorwf	?_strncmp+1,w
 20310  0A99  1D03               	btfss	3,2
 20311  0A9A  2AEB               	goto	l7807
 20312                           
 20313                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
 20314  0A9B  0021               	movlb	1	; select bank1
 20315  0A9C  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20316  0A9D  0086               	movwf	6
 20317  0A9E  0187               	clrf	7
 20318  0A9F  3003               	movlw	3
 20319  0AA0  0781               	addwf	1,f
 20320  0AA1  3141               	addfsr 1,1
 20321  0AA2  1803               	skipnc
 20322  0AA3  0A81               	incf	1,f
 20323                           
 20324                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 20325  0AA4  0866               	movf	vfpfcnvrt@ap^(0+128),w
 20326  0AA5  0086               	movwf	6
 20327  0AA6  3001               	movlw	1	; select bank2/3
 20328  0AA7  0087               	movwf	7
 20329  0AA8  0801               	movf	1,w
 20330  0AA9  0084               	movwf	4
 20331  0AAA  3001               	movlw	1	; select bank2/3
 20332  0AAB  0085               	movwf	5
 20333  0AAC  3002               	movlw	2
 20334  0AAD  0781               	addwf	1,f
 20335  0AAE  0800               	movf	0,w
 20336  0AAF  0022               	movlb	2	; select bank2
 20337  0AB0  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 20338  0AB1  01C7               	clrf	(vfpfcnvrt@llu+1)^(0+256)
 20339  0AB2  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 20340  0AB3  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 20341  0AB4  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 20342  0AB5  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 20343  0AB6  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 20344  0AB7  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 20345                           
 20346                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
 20347  0AB8  0021               	movlb	1	; select bank1
 20348  0AB9  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 20349  0ABA  0020               	movlb	0	; select bank0
 20350  0ABB  00B1               	movwf	utoa@fp+1
 20351  0ABC  0021               	movlb	1	; select bank1
 20352  0ABD  0863               	movf	vfpfcnvrt@fp^(0+128),w
 20353  0ABE  0020               	movlb	0	; select bank0
 20354  0ABF  00B0               	movwf	utoa@fp
 20355  0AC0  0022               	movlb	2	; select bank2
 20356  0AC1  0846               	movf	vfpfcnvrt@llu^(0+256),w
 20357  0AC2  0020               	movlb	0	; select bank0
 20358  0AC3  00B2               	movwf	utoa@d
 20359  0AC4  0022               	movlb	2	; select bank2
 20360  0AC5  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 20361  0AC6  0020               	movlb	0	; select bank0
 20362  0AC7  00B3               	movwf	utoa@d+1
 20363  0AC8  0022               	movlb	2	; select bank2
 20364  0AC9  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 20365  0ACA  0020               	movlb	0	; select bank0
 20366  0ACB  00B4               	movwf	utoa@d+2
 20367  0ACC  0022               	movlb	2	; select bank2
 20368  0ACD  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 20369  0ACE  0020               	movlb	0	; select bank0
 20370  0ACF  00B5               	movwf	utoa@d+3
 20371  0AD0  0022               	movlb	2	; select bank2
 20372  0AD1  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 20373  0AD2  0020               	movlb	0	; select bank0
 20374  0AD3  00B6               	movwf	utoa@d+4
 20375  0AD4  0022               	movlb	2	; select bank2
 20376  0AD5  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 20377  0AD6  0020               	movlb	0	; select bank0
 20378  0AD7  00B7               	movwf	utoa@d+5
 20379  0AD8  0022               	movlb	2	; select bank2
 20380  0AD9  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 20381  0ADA  0020               	movlb	0	; select bank0
 20382  0ADB  00B8               	movwf	utoa@d+6
 20383  0ADC  0022               	movlb	2	; select bank2
 20384  0ADD  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 20385  0ADE  0020               	movlb	0	; select bank0
 20386  0ADF  00B9               	movwf	utoa@d+7
 20387  0AE0  31A7  271F         	fcall	_utoa
 20388  0AE2  0020               	movlb	0	; select bank0
 20389  0AE3  0831               	movf	?_utoa+1,w
 20390  0AE4  0021               	movlb	1	; select bank1
 20391  0AE5  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 20392  0AE6  0020               	movlb	0	; select bank0
 20393  0AE7  0830               	movf	?_utoa,w
 20394  0AE8  0021               	movlb	1	; select bank1
 20395  0AE9  00E3               	movwf	?_vfpfcnvrt^(0+128)
 20396  0AEA  0008               	return
 20397  0AEB                     l7807:	
 20398                           
 20399                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
 20400  0AEB  0021               	movlb	1	; select bank1
 20401  0AEC  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20402  0AED  0086               	movwf	6
 20403  0AEE  0187               	clrf	7
 20404  0AEF  3F40               	moviw [0]fsr1
 20405  0AF0  00F1               	movwf	strncmp@_l
 20406  0AF1  3F41               	moviw [1]fsr1
 20407  0AF2  00F2               	movwf	strncmp@_l+1
 20408  0AF3  305D               	movlw	low ((STR_99+1)| (0+32768))
 20409  0AF4  00F3               	movwf	strncmp@_r
 20410  0AF5  30B8               	movlw	high ((STR_99+1)| (0+32768))
 20411  0AF6  00F4               	movwf	strncmp@_r+1
 20412  0AF7  3002               	movlw	2
 20413  0AF8  00F5               	movwf	strncmp@n
 20414  0AF9  3000               	movlw	0
 20415  0AFA  00F6               	movwf	strncmp@n+1
 20416  0AFB  31A0  200C  3188   	fcall	_strncmp
 20417  0AFE  0871               	movf	?_strncmp,w
 20418  0AFF  0472               	iorwf	?_strncmp+1,w
 20419  0B00  1D03               	btfss	3,2
 20420  0B01  2B53               	goto	l7817
 20421                           
 20422                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
 20423  0B02  0021               	movlb	1	; select bank1
 20424  0B03  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20425  0B04  0086               	movwf	6
 20426  0B05  0187               	clrf	7
 20427  0B06  3002               	movlw	2
 20428  0B07  0781               	addwf	1,f
 20429  0B08  3141               	addfsr 1,1
 20430  0B09  1803               	skipnc
 20431  0B0A  0A81               	incf	1,f
 20432                           
 20433                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 20434  0B0B  0866               	movf	vfpfcnvrt@ap^(0+128),w
 20435  0B0C  0086               	movwf	6
 20436  0B0D  3001               	movlw	1	; select bank2/3
 20437  0B0E  0087               	movwf	7
 20438  0B0F  0801               	movf	1,w
 20439  0B10  0084               	movwf	4
 20440  0B11  3001               	movlw	1	; select bank2/3
 20441  0B12  0085               	movwf	5
 20442  0B13  3002               	movlw	2
 20443  0B14  0781               	addwf	1,f
 20444  0B15  3F00               	moviw [0]fsr0
 20445  0B16  0022               	movlb	2	; select bank2
 20446  0B17  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 20447  0B18  3F01               	moviw [1]fsr0
 20448  0B19  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 20449  0B1A  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 20450  0B1B  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 20451  0B1C  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 20452  0B1D  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 20453  0B1E  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 20454  0B1F  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 20455                           
 20456                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1177:      
      +                                 return utoa(fp, llu);
 20457  0B20  0021               	movlb	1	; select bank1
 20458  0B21  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 20459  0B22  0020               	movlb	0	; select bank0
 20460  0B23  00B1               	movwf	utoa@fp+1
 20461  0B24  0021               	movlb	1	; select bank1
 20462  0B25  0863               	movf	vfpfcnvrt@fp^(0+128),w
 20463  0B26  0020               	movlb	0	; select bank0
 20464  0B27  00B0               	movwf	utoa@fp
 20465  0B28  0022               	movlb	2	; select bank2
 20466  0B29  0846               	movf	vfpfcnvrt@llu^(0+256),w
 20467  0B2A  0020               	movlb	0	; select bank0
 20468  0B2B  00B2               	movwf	utoa@d
 20469  0B2C  0022               	movlb	2	; select bank2
 20470  0B2D  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 20471  0B2E  0020               	movlb	0	; select bank0
 20472  0B2F  00B3               	movwf	utoa@d+1
 20473  0B30  0022               	movlb	2	; select bank2
 20474  0B31  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 20475  0B32  0020               	movlb	0	; select bank0
 20476  0B33  00B4               	movwf	utoa@d+2
 20477  0B34  0022               	movlb	2	; select bank2
 20478  0B35  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 20479  0B36  0020               	movlb	0	; select bank0
 20480  0B37  00B5               	movwf	utoa@d+3
 20481  0B38  0022               	movlb	2	; select bank2
 20482  0B39  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 20483  0B3A  0020               	movlb	0	; select bank0
 20484  0B3B  00B6               	movwf	utoa@d+4
 20485  0B3C  0022               	movlb	2	; select bank2
 20486  0B3D  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 20487  0B3E  0020               	movlb	0	; select bank0
 20488  0B3F  00B7               	movwf	utoa@d+5
 20489  0B40  0022               	movlb	2	; select bank2
 20490  0B41  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 20491  0B42  0020               	movlb	0	; select bank0
 20492  0B43  00B8               	movwf	utoa@d+6
 20493  0B44  0022               	movlb	2	; select bank2
 20494  0B45  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 20495  0B46  0020               	movlb	0	; select bank0
 20496  0B47  00B9               	movwf	utoa@d+7
 20497  0B48  31A7  271F         	fcall	_utoa
 20498  0B4A  0020               	movlb	0	; select bank0
 20499  0B4B  0831               	movf	?_utoa+1,w
 20500  0B4C  0021               	movlb	1	; select bank1
 20501  0B4D  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 20502  0B4E  0020               	movlb	0	; select bank0
 20503  0B4F  0830               	movf	?_utoa,w
 20504  0B50  0021               	movlb	1	; select bank1
 20505  0B51  00E3               	movwf	?_vfpfcnvrt^(0+128)
 20506  0B52  0008               	return
 20507  0B53                     l7817:	
 20508                           
 20509                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 20510  0B53  0021               	movlb	1	; select bank1
 20511  0B54  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20512  0B55  0086               	movwf	6
 20513  0B56  0187               	clrf	7
 20514  0B57  3F40               	moviw [0]fsr1
 20515  0B58  0022               	movlb	2	; select bank2
 20516  0B59  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20517  0B5A  3F41               	moviw [1]fsr1
 20518  0B5B  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 20519  0B5C  0820               	movf	??_vfpfcnvrt^(0+256),w
 20520  0B5D  0084               	movwf	4
 20521  0B5E  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 20522  0B5F  0085               	movwf	5
 20523  0B60  0012               	moviw fsr0++
 20524  0B61  3A75               	xorlw	117
 20525  0B62  1D03               	btfss	3,2
 20526  0B63  2BB5               	goto	l7827
 20527                           
 20528                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 20529  0B64  0021               	movlb	1	; select bank1
 20530  0B65  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20531  0B66  0086               	movwf	6
 20532  0B67  0187               	clrf	7
 20533  0B68  3001               	movlw	1
 20534  0B69  0781               	addwf	1,f
 20535  0B6A  3141               	addfsr 1,1
 20536  0B6B  1803               	skipnc
 20537  0B6C  0A81               	incf	1,f
 20538                           
 20539                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 20540  0B6D  0866               	movf	vfpfcnvrt@ap^(0+128),w
 20541  0B6E  0086               	movwf	6
 20542  0B6F  3001               	movlw	1	; select bank2/3
 20543  0B70  0087               	movwf	7
 20544  0B71  0801               	movf	1,w
 20545  0B72  0084               	movwf	4
 20546  0B73  3001               	movlw	1	; select bank2/3
 20547  0B74  0085               	movwf	5
 20548  0B75  3002               	movlw	2
 20549  0B76  0781               	addwf	1,f
 20550  0B77  3F00               	moviw [0]fsr0
 20551  0B78  0022               	movlb	2	; select bank2
 20552  0B79  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 20553  0B7A  3F01               	moviw [1]fsr0
 20554  0B7B  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 20555  0B7C  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 20556  0B7D  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 20557  0B7E  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 20558  0B7F  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 20559  0B80  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 20560  0B81  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 20561                           
 20562                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
 20563  0B82  0021               	movlb	1	; select bank1
 20564  0B83  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 20565  0B84  0020               	movlb	0	; select bank0
 20566  0B85  00B1               	movwf	utoa@fp+1
 20567  0B86  0021               	movlb	1	; select bank1
 20568  0B87  0863               	movf	vfpfcnvrt@fp^(0+128),w
 20569  0B88  0020               	movlb	0	; select bank0
 20570  0B89  00B0               	movwf	utoa@fp
 20571  0B8A  0022               	movlb	2	; select bank2
 20572  0B8B  0846               	movf	vfpfcnvrt@llu^(0+256),w
 20573  0B8C  0020               	movlb	0	; select bank0
 20574  0B8D  00B2               	movwf	utoa@d
 20575  0B8E  0022               	movlb	2	; select bank2
 20576  0B8F  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 20577  0B90  0020               	movlb	0	; select bank0
 20578  0B91  00B3               	movwf	utoa@d+1
 20579  0B92  0022               	movlb	2	; select bank2
 20580  0B93  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 20581  0B94  0020               	movlb	0	; select bank0
 20582  0B95  00B4               	movwf	utoa@d+2
 20583  0B96  0022               	movlb	2	; select bank2
 20584  0B97  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 20585  0B98  0020               	movlb	0	; select bank0
 20586  0B99  00B5               	movwf	utoa@d+3
 20587  0B9A  0022               	movlb	2	; select bank2
 20588  0B9B  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 20589  0B9C  0020               	movlb	0	; select bank0
 20590  0B9D  00B6               	movwf	utoa@d+4
 20591  0B9E  0022               	movlb	2	; select bank2
 20592  0B9F  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 20593  0BA0  0020               	movlb	0	; select bank0
 20594  0BA1  00B7               	movwf	utoa@d+5
 20595  0BA2  0022               	movlb	2	; select bank2
 20596  0BA3  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 20597  0BA4  0020               	movlb	0	; select bank0
 20598  0BA5  00B8               	movwf	utoa@d+6
 20599  0BA6  0022               	movlb	2	; select bank2
 20600  0BA7  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 20601  0BA8  0020               	movlb	0	; select bank0
 20602  0BA9  00B9               	movwf	utoa@d+7
 20603  0BAA  31A7  271F         	fcall	_utoa
 20604  0BAC  0020               	movlb	0	; select bank0
 20605  0BAD  0831               	movf	?_utoa+1,w
 20606  0BAE  0021               	movlb	1	; select bank1
 20607  0BAF  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 20608  0BB0  0020               	movlb	0	; select bank0
 20609  0BB1  0830               	movf	?_utoa,w
 20610  0BB2  0021               	movlb	1	; select bank1
 20611  0BB3  00E3               	movwf	?_vfpfcnvrt^(0+128)
 20612  0BB4  0008               	return
 20613  0BB5                     l7827:	
 20614                           
 20615                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1192:      
      +                             if (!strncmp(*fmt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 20616  0BB5  0021               	movlb	1	; select bank1
 20617  0BB6  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20618  0BB7  0086               	movwf	6
 20619  0BB8  0187               	clrf	7
 20620  0BB9  3F40               	moviw [0]fsr1
 20621  0BBA  00F1               	movwf	strncmp@_l
 20622  0BBB  3F41               	moviw [1]fsr1
 20623  0BBC  00F2               	movwf	strncmp@_l+1
 20624  0BBD  3085               	movlw	low (STR_109| (0+32768))
 20625  0BBE  00F3               	movwf	strncmp@_r
 20626  0BBF  30B8               	movlw	high (STR_109| (0+32768))
 20627  0BC0  00F4               	movwf	strncmp@_r+1
 20628  0BC1  3002               	movlw	2
 20629  0BC2  00F5               	movwf	strncmp@n
 20630  0BC3  3000               	movlw	0
 20631  0BC4  00F6               	movwf	strncmp@n+1
 20632  0BC5  31A0  200C  3188   	fcall	_strncmp
 20633  0BC8  0871               	movf	?_strncmp,w
 20634  0BC9  0472               	iorwf	?_strncmp+1,w
 20635  0BCA  1D03               	btfss	3,2
 20636  0BCB  2C37               	goto	l7837
 20637                           
 20638                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1194:      
      +                                 *fmt += ((sizeof("lu")/sizeof("lu"[0]))-1);
 20639  0BCC  0021               	movlb	1	; select bank1
 20640  0BCD  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20641  0BCE  0086               	movwf	6
 20642  0BCF  0187               	clrf	7
 20643  0BD0  3002               	movlw	2
 20644  0BD1  0781               	addwf	1,f
 20645  0BD2  3141               	addfsr 1,1
 20646  0BD3  1803               	skipnc
 20647  0BD4  0A81               	incf	1,f
 20648                           
 20649                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1195:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
 20650  0BD5  0866               	movf	vfpfcnvrt@ap^(0+128),w
 20651  0BD6  0086               	movwf	6
 20652  0BD7  3001               	movlw	1	; select bank2/3
 20653  0BD8  0087               	movwf	7
 20654  0BD9  0801               	movf	1,w
 20655  0BDA  0084               	movwf	4
 20656  0BDB  3001               	movlw	1	; select bank2/3
 20657  0BDC  0085               	movwf	5
 20658  0BDD  3004               	movlw	4
 20659  0BDE  0781               	addwf	1,f
 20660  0BDF  3F00               	moviw [0]fsr0
 20661  0BE0  0022               	movlb	2	; select bank2
 20662  0BE1  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20663  0BE2  3F01               	moviw [1]fsr0
 20664  0BE3  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 20665  0BE4  3F02               	moviw [2]fsr0
 20666  0BE5  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 20667  0BE6  3F03               	moviw [3]fsr0
 20668  0BE7  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 20669  0BE8  0820               	movf	??_vfpfcnvrt^(0+256),w
 20670  0BE9  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
 20671  0BEA  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 20672  0BEB  00A5               	movwf	((??_vfpfcnvrt+4)^(0+256)+1)
 20673  0BEC  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 20674  0BED  00A6               	movwf	((??_vfpfcnvrt+4)^(0+256)+2)
 20675  0BEE  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 20676  0BEF  00A7               	movwf	((??_vfpfcnvrt+4)^(0+256)+3)
 20677  0BF0  01A8               	clrf	((??_vfpfcnvrt+4)^(0+256)+4)
 20678  0BF1  01A9               	clrf	((??_vfpfcnvrt+4)^(0+256)+5)
 20679  0BF2  01AA               	clrf	((??_vfpfcnvrt+4)^(0+256)+6)
 20680  0BF3  01AB               	clrf	((??_vfpfcnvrt+4)^(0+256)+7)
 20681  0BF4  082B               	movf	((??_vfpfcnvrt+4)^(0+256)+7),w
 20682  0BF5  00CD               	movwf	(vfpfcnvrt@llu+7)^(0+256)
 20683  0BF6  082A               	movf	((??_vfpfcnvrt+4)^(0+256)+6),w
 20684  0BF7  00CC               	movwf	(vfpfcnvrt@llu+6)^(0+256)
 20685  0BF8  0829               	movf	((??_vfpfcnvrt+4)^(0+256)+5),w
 20686  0BF9  00CB               	movwf	(vfpfcnvrt@llu+5)^(0+256)
 20687  0BFA  0828               	movf	((??_vfpfcnvrt+4)^(0+256)+4),w
 20688  0BFB  00CA               	movwf	(vfpfcnvrt@llu+4)^(0+256)
 20689  0BFC  0827               	movf	((??_vfpfcnvrt+4)^(0+256)+3),w
 20690  0BFD  00C9               	movwf	(vfpfcnvrt@llu+3)^(0+256)
 20691  0BFE  0826               	movf	((??_vfpfcnvrt+4)^(0+256)+2),w
 20692  0BFF  00C8               	movwf	(vfpfcnvrt@llu+2)^(0+256)
 20693  0C00  0825               	movf	((??_vfpfcnvrt+4)^(0+256)+1),w
 20694  0C01  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 20695  0C02  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
 20696  0C03  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 20697                           
 20698                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1197:      
      +                                 return utoa(fp, llu);
 20699  0C04  0021               	movlb	1	; select bank1
 20700  0C05  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 20701  0C06  0020               	movlb	0	; select bank0
 20702  0C07  00B1               	movwf	utoa@fp+1
 20703  0C08  0021               	movlb	1	; select bank1
 20704  0C09  0863               	movf	vfpfcnvrt@fp^(0+128),w
 20705  0C0A  0020               	movlb	0	; select bank0
 20706  0C0B  00B0               	movwf	utoa@fp
 20707  0C0C  0022               	movlb	2	; select bank2
 20708  0C0D  0846               	movf	vfpfcnvrt@llu^(0+256),w
 20709  0C0E  0020               	movlb	0	; select bank0
 20710  0C0F  00B2               	movwf	utoa@d
 20711  0C10  0022               	movlb	2	; select bank2
 20712  0C11  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 20713  0C12  0020               	movlb	0	; select bank0
 20714  0C13  00B3               	movwf	utoa@d+1
 20715  0C14  0022               	movlb	2	; select bank2
 20716  0C15  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 20717  0C16  0020               	movlb	0	; select bank0
 20718  0C17  00B4               	movwf	utoa@d+2
 20719  0C18  0022               	movlb	2	; select bank2
 20720  0C19  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 20721  0C1A  0020               	movlb	0	; select bank0
 20722  0C1B  00B5               	movwf	utoa@d+3
 20723  0C1C  0022               	movlb	2	; select bank2
 20724  0C1D  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 20725  0C1E  0020               	movlb	0	; select bank0
 20726  0C1F  00B6               	movwf	utoa@d+4
 20727  0C20  0022               	movlb	2	; select bank2
 20728  0C21  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 20729  0C22  0020               	movlb	0	; select bank0
 20730  0C23  00B7               	movwf	utoa@d+5
 20731  0C24  0022               	movlb	2	; select bank2
 20732  0C25  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 20733  0C26  0020               	movlb	0	; select bank0
 20734  0C27  00B8               	movwf	utoa@d+6
 20735  0C28  0022               	movlb	2	; select bank2
 20736  0C29  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 20737  0C2A  0020               	movlb	0	; select bank0
 20738  0C2B  00B9               	movwf	utoa@d+7
 20739  0C2C  31A7  271F         	fcall	_utoa
 20740  0C2E  0020               	movlb	0	; select bank0
 20741  0C2F  0831               	movf	?_utoa+1,w
 20742  0C30  0021               	movlb	1	; select bank1
 20743  0C31  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 20744  0C32  0020               	movlb	0	; select bank0
 20745  0C33  0830               	movf	?_utoa,w
 20746  0C34  0021               	movlb	1	; select bank1
 20747  0C35  00E3               	movwf	?_vfpfcnvrt^(0+128)
 20748  0C36  0008               	return
 20749  0C37                     l7837:	
 20750                           
 20751                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
 20752  0C37  0021               	movlb	1	; select bank1
 20753  0C38  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20754  0C39  0086               	movwf	6
 20755  0C3A  0187               	clrf	7
 20756  0C3B  3F40               	moviw [0]fsr1
 20757  0C3C  00F1               	movwf	strncmp@_l
 20758  0C3D  3F41               	moviw [1]fsr1
 20759  0C3E  00F2               	movwf	strncmp@_l+1
 20760  0C3F  3088               	movlw	low (STR_114| (0+32768))
 20761  0C40  00F3               	movwf	strncmp@_r
 20762  0C41  30B8               	movlw	high (STR_114| (0+32768))
 20763  0C42  00F4               	movwf	strncmp@_r+1
 20764  0C43  3002               	movlw	2
 20765  0C44  00F5               	movwf	strncmp@n
 20766  0C45  3000               	movlw	0
 20767  0C46  00F6               	movwf	strncmp@n+1
 20768  0C47  31A0  200C  3188   	fcall	_strncmp
 20769  0C4A  0871               	movf	?_strncmp,w
 20770  0C4B  0472               	iorwf	?_strncmp+1,w
 20771  0C4C  1D03               	btfss	3,2
 20772  0C4D  2C9F               	goto	l7847
 20773                           
 20774                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
 20775  0C4E  0021               	movlb	1	; select bank1
 20776  0C4F  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20777  0C50  0086               	movwf	6
 20778  0C51  0187               	clrf	7
 20779  0C52  3002               	movlw	2
 20780  0C53  0781               	addwf	1,f
 20781  0C54  3141               	addfsr 1,1
 20782  0C55  1803               	skipnc
 20783  0C56  0A81               	incf	1,f
 20784                           
 20785                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 20786  0C57  0866               	movf	vfpfcnvrt@ap^(0+128),w
 20787  0C58  0086               	movwf	6
 20788  0C59  3001               	movlw	1	; select bank2/3
 20789  0C5A  0087               	movwf	7
 20790  0C5B  0801               	movf	1,w
 20791  0C5C  0084               	movwf	4
 20792  0C5D  3001               	movlw	1	; select bank2/3
 20793  0C5E  0085               	movwf	5
 20794  0C5F  3002               	movlw	2
 20795  0C60  0781               	addwf	1,f
 20796  0C61  3F00               	moviw [0]fsr0
 20797  0C62  0022               	movlb	2	; select bank2
 20798  0C63  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 20799  0C64  3F01               	moviw [1]fsr0
 20800  0C65  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 20801  0C66  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 20802  0C67  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 20803  0C68  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 20804  0C69  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 20805  0C6A  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 20806  0C6B  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 20807                           
 20808                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1241:      
      +                                 return utoa(fp, llu);
 20809  0C6C  0021               	movlb	1	; select bank1
 20810  0C6D  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 20811  0C6E  0020               	movlb	0	; select bank0
 20812  0C6F  00B1               	movwf	utoa@fp+1
 20813  0C70  0021               	movlb	1	; select bank1
 20814  0C71  0863               	movf	vfpfcnvrt@fp^(0+128),w
 20815  0C72  0020               	movlb	0	; select bank0
 20816  0C73  00B0               	movwf	utoa@fp
 20817  0C74  0022               	movlb	2	; select bank2
 20818  0C75  0846               	movf	vfpfcnvrt@llu^(0+256),w
 20819  0C76  0020               	movlb	0	; select bank0
 20820  0C77  00B2               	movwf	utoa@d
 20821  0C78  0022               	movlb	2	; select bank2
 20822  0C79  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 20823  0C7A  0020               	movlb	0	; select bank0
 20824  0C7B  00B3               	movwf	utoa@d+1
 20825  0C7C  0022               	movlb	2	; select bank2
 20826  0C7D  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 20827  0C7E  0020               	movlb	0	; select bank0
 20828  0C7F  00B4               	movwf	utoa@d+2
 20829  0C80  0022               	movlb	2	; select bank2
 20830  0C81  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 20831  0C82  0020               	movlb	0	; select bank0
 20832  0C83  00B5               	movwf	utoa@d+3
 20833  0C84  0022               	movlb	2	; select bank2
 20834  0C85  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 20835  0C86  0020               	movlb	0	; select bank0
 20836  0C87  00B6               	movwf	utoa@d+4
 20837  0C88  0022               	movlb	2	; select bank2
 20838  0C89  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 20839  0C8A  0020               	movlb	0	; select bank0
 20840  0C8B  00B7               	movwf	utoa@d+5
 20841  0C8C  0022               	movlb	2	; select bank2
 20842  0C8D  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 20843  0C8E  0020               	movlb	0	; select bank0
 20844  0C8F  00B8               	movwf	utoa@d+6
 20845  0C90  0022               	movlb	2	; select bank2
 20846  0C91  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 20847  0C92  0020               	movlb	0	; select bank0
 20848  0C93  00B9               	movwf	utoa@d+7
 20849  0C94  31A7  271F         	fcall	_utoa
 20850  0C96  0020               	movlb	0	; select bank0
 20851  0C97  0831               	movf	?_utoa+1,w
 20852  0C98  0021               	movlb	1	; select bank1
 20853  0C99  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 20854  0C9A  0020               	movlb	0	; select bank0
 20855  0C9B  0830               	movf	?_utoa,w
 20856  0C9C  0021               	movlb	1	; select bank1
 20857  0C9D  00E3               	movwf	?_vfpfcnvrt^(0+128)
 20858  0C9E  0008               	return
 20859  0C9F                     l7847:	
 20860                           
 20861                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
 20862  0C9F  0021               	movlb	1	; select bank1
 20863  0CA0  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20864  0CA1  0086               	movwf	6
 20865  0CA2  0187               	clrf	7
 20866  0CA3  3F40               	moviw [0]fsr1
 20867  0CA4  00F1               	movwf	strncmp@_l
 20868  0CA5  3F41               	moviw [1]fsr1
 20869  0CA6  00F2               	movwf	strncmp@_l+1
 20870  0CA7  3060               	movlw	low (STR_119| (0+32768))
 20871  0CA8  00F3               	movwf	strncmp@_r
 20872  0CA9  30B8               	movlw	high (STR_119| (0+32768))
 20873  0CAA  00F4               	movwf	strncmp@_r+1
 20874  0CAB  3003               	movlw	3
 20875  0CAC  00F5               	movwf	strncmp@n
 20876  0CAD  3000               	movlw	0
 20877  0CAE  00F6               	movwf	strncmp@n+1
 20878  0CAF  31A0  200C  3188   	fcall	_strncmp
 20879  0CB2  0871               	movf	?_strncmp,w
 20880  0CB3  0472               	iorwf	?_strncmp+1,w
 20881  0CB4  1903               	btfsc	3,2
 20882  0CB5  2CCD               	goto	l7851
 20883  0CB6  0021               	movlb	1	; select bank1
 20884  0CB7  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20885  0CB8  0086               	movwf	6
 20886  0CB9  0187               	clrf	7
 20887  0CBA  3F40               	moviw [0]fsr1
 20888  0CBB  00F1               	movwf	strncmp@_l
 20889  0CBC  3F41               	moviw [1]fsr1
 20890  0CBD  00F2               	movwf	strncmp@_l+1
 20891  0CBE  3040               	movlw	low (STR_123| (0+32768))
 20892  0CBF  00F3               	movwf	strncmp@_r
 20893  0CC0  30B8               	movlw	high (STR_123| (0+32768))
 20894  0CC1  00F4               	movwf	strncmp@_r+1
 20895  0CC2  3003               	movlw	3
 20896  0CC3  00F5               	movwf	strncmp@n
 20897  0CC4  3000               	movlw	0
 20898  0CC5  00F6               	movwf	strncmp@n+1
 20899  0CC6  31A0  200C  3188   	fcall	_strncmp
 20900  0CC9  0871               	movf	?_strncmp,w
 20901  0CCA  0472               	iorwf	?_strncmp+1,w
 20902  0CCB  1D03               	btfss	3,2
 20903  0CCC  2D37               	goto	l7861
 20904  0CCD                     l7851:	
 20905                           
 20906                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
 20907  0CCD  0021               	movlb	1	; select bank1
 20908  0CCE  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20909  0CCF  0086               	movwf	6
 20910  0CD0  0187               	clrf	7
 20911  0CD1  3F40               	moviw [0]fsr1
 20912  0CD2  0022               	movlb	2	; select bank2
 20913  0CD3  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20914  0CD4  3F41               	moviw [1]fsr1
 20915  0CD5  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 20916  0CD6  3002               	movlw	2
 20917  0CD7  0720               	addwf	??_vfpfcnvrt^(0+256),w
 20918  0CD8  0084               	movwf	4
 20919  0CD9  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 20920  0CDA  1803               	skipnc
 20921  0CDB  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 20922  0CDC  0085               	movwf	5
 20923  0CDD  0800               	movf	0,w	;code access
 20924  0CDE  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 20925  0CDF  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 20926  0CE0  00C5               	movwf	vfpfcnvrt@c^(0+256)
 20927                           
 20928                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
 20929  0CE1  0021               	movlb	1	; select bank1
 20930  0CE2  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20931  0CE3  0086               	movwf	6
 20932  0CE4  0187               	clrf	7
 20933  0CE5  3003               	movlw	3
 20934  0CE6  0781               	addwf	1,f
 20935  0CE7  3141               	addfsr 1,1
 20936  0CE8  1803               	skipnc
 20937  0CE9  0A81               	incf	1,f
 20938                           
 20939                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 20940  0CEA  0866               	movf	vfpfcnvrt@ap^(0+128),w
 20941  0CEB  0086               	movwf	6
 20942  0CEC  3001               	movlw	1	; select bank2/3
 20943  0CED  0087               	movwf	7
 20944  0CEE  0801               	movf	1,w
 20945  0CEF  0084               	movwf	4
 20946  0CF0  3001               	movlw	1	; select bank2/3
 20947  0CF1  0085               	movwf	5
 20948  0CF2  3002               	movlw	2
 20949  0CF3  0781               	addwf	1,f
 20950  0CF4  0800               	movf	0,w
 20951  0CF5  0022               	movlb	2	; select bank2
 20952  0CF6  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 20953  0CF7  01C7               	clrf	(vfpfcnvrt@llu+1)^(0+256)
 20954  0CF8  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 20955  0CF9  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 20956  0CFA  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 20957  0CFB  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 20958  0CFC  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 20959  0CFD  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 20960                           
 20961                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
 20962  0CFE  0021               	movlb	1	; select bank1
 20963  0CFF  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 20964  0D00  0020               	movlb	0	; select bank0
 20965  0D01  00B1               	movwf	xtoa@fp+1
 20966  0D02  0021               	movlb	1	; select bank1
 20967  0D03  0863               	movf	vfpfcnvrt@fp^(0+128),w
 20968  0D04  0020               	movlb	0	; select bank0
 20969  0D05  00B0               	movwf	xtoa@fp
 20970  0D06  0022               	movlb	2	; select bank2
 20971  0D07  0846               	movf	vfpfcnvrt@llu^(0+256),w
 20972  0D08  0020               	movlb	0	; select bank0
 20973  0D09  00B2               	movwf	xtoa@d
 20974  0D0A  0022               	movlb	2	; select bank2
 20975  0D0B  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 20976  0D0C  0020               	movlb	0	; select bank0
 20977  0D0D  00B3               	movwf	xtoa@d+1
 20978  0D0E  0022               	movlb	2	; select bank2
 20979  0D0F  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 20980  0D10  0020               	movlb	0	; select bank0
 20981  0D11  00B4               	movwf	xtoa@d+2
 20982  0D12  0022               	movlb	2	; select bank2
 20983  0D13  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 20984  0D14  0020               	movlb	0	; select bank0
 20985  0D15  00B5               	movwf	xtoa@d+3
 20986  0D16  0022               	movlb	2	; select bank2
 20987  0D17  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 20988  0D18  0020               	movlb	0	; select bank0
 20989  0D19  00B6               	movwf	xtoa@d+4
 20990  0D1A  0022               	movlb	2	; select bank2
 20991  0D1B  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 20992  0D1C  0020               	movlb	0	; select bank0
 20993  0D1D  00B7               	movwf	xtoa@d+5
 20994  0D1E  0022               	movlb	2	; select bank2
 20995  0D1F  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 20996  0D20  0020               	movlb	0	; select bank0
 20997  0D21  00B8               	movwf	xtoa@d+6
 20998  0D22  0022               	movlb	2	; select bank2
 20999  0D23  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 21000  0D24  0020               	movlb	0	; select bank0
 21001  0D25  00B9               	movwf	xtoa@d+7
 21002  0D26  0022               	movlb	2	; select bank2
 21003  0D27  0845               	movf	vfpfcnvrt@c^(0+256),w
 21004  0D28  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21005  0D29  0820               	movf	??_vfpfcnvrt^(0+256),w
 21006  0D2A  0020               	movlb	0	; select bank0
 21007  0D2B  00BA               	movwf	xtoa@x
 21008  0D2C  319E  26A7         	fcall	_xtoa
 21009  0D2E  0020               	movlb	0	; select bank0
 21010  0D2F  0831               	movf	?_xtoa+1,w
 21011  0D30  0021               	movlb	1	; select bank1
 21012  0D31  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 21013  0D32  0020               	movlb	0	; select bank0
 21014  0D33  0830               	movf	?_xtoa,w
 21015  0D34  0021               	movlb	1	; select bank1
 21016  0D35  00E3               	movwf	?_vfpfcnvrt^(0+128)
 21017  0D36  0008               	return
 21018  0D37                     l7861:	
 21019                           
 21020                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
 21021  0D37  0021               	movlb	1	; select bank1
 21022  0D38  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21023  0D39  0086               	movwf	6
 21024  0D3A  0187               	clrf	7
 21025  0D3B  3F40               	moviw [0]fsr1
 21026  0D3C  00F1               	movwf	strncmp@_l
 21027  0D3D  3F41               	moviw [1]fsr1
 21028  0D3E  00F2               	movwf	strncmp@_l+1
 21029  0D3F  3061               	movlw	low ((STR_119+1)| (0+32768))
 21030  0D40  00F3               	movwf	strncmp@_r
 21031  0D41  30B8               	movlw	high ((STR_119+1)| (0+32768))
 21032  0D42  00F4               	movwf	strncmp@_r+1
 21033  0D43  3002               	movlw	2
 21034  0D44  00F5               	movwf	strncmp@n
 21035  0D45  3000               	movlw	0
 21036  0D46  00F6               	movwf	strncmp@n+1
 21037  0D47  31A0  200C  3188   	fcall	_strncmp
 21038  0D4A  0871               	movf	?_strncmp,w
 21039  0D4B  0472               	iorwf	?_strncmp+1,w
 21040  0D4C  1903               	btfsc	3,2
 21041  0D4D  2D65               	goto	l7865
 21042  0D4E  0021               	movlb	1	; select bank1
 21043  0D4F  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21044  0D50  0086               	movwf	6
 21045  0D51  0187               	clrf	7
 21046  0D52  3F40               	moviw [0]fsr1
 21047  0D53  00F1               	movwf	strncmp@_l
 21048  0D54  3F41               	moviw [1]fsr1
 21049  0D55  00F2               	movwf	strncmp@_l+1
 21050  0D56  3041               	movlw	low ((STR_123+1)| (0+32768))
 21051  0D57  00F3               	movwf	strncmp@_r
 21052  0D58  30B8               	movlw	high ((STR_123+1)| (0+32768))
 21053  0D59  00F4               	movwf	strncmp@_r+1
 21054  0D5A  3002               	movlw	2
 21055  0D5B  00F5               	movwf	strncmp@n
 21056  0D5C  3000               	movlw	0
 21057  0D5D  00F6               	movwf	strncmp@n+1
 21058  0D5E  31A0  200C  3188   	fcall	_strncmp
 21059  0D61  0871               	movf	?_strncmp,w
 21060  0D62  0472               	iorwf	?_strncmp+1,w
 21061  0D63  1D03               	btfss	3,2
 21062  0D64  2DD0               	goto	l7875
 21063  0D65                     l7865:	
 21064                           
 21065                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
 21066  0D65  0021               	movlb	1	; select bank1
 21067  0D66  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21068  0D67  0086               	movwf	6
 21069  0D68  0187               	clrf	7
 21070  0D69  3F40               	moviw [0]fsr1
 21071  0D6A  0022               	movlb	2	; select bank2
 21072  0D6B  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21073  0D6C  3F41               	moviw [1]fsr1
 21074  0D6D  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21075  0D6E  3001               	movlw	1
 21076  0D6F  0720               	addwf	??_vfpfcnvrt^(0+256),w
 21077  0D70  0084               	movwf	4
 21078  0D71  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 21079  0D72  1803               	skipnc
 21080  0D73  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 21081  0D74  0085               	movwf	5
 21082  0D75  0800               	movf	0,w	;code access
 21083  0D76  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 21084  0D77  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 21085  0D78  00C5               	movwf	vfpfcnvrt@c^(0+256)
 21086                           
 21087                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
 21088  0D79  0021               	movlb	1	; select bank1
 21089  0D7A  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21090  0D7B  0086               	movwf	6
 21091  0D7C  0187               	clrf	7
 21092  0D7D  3002               	movlw	2
 21093  0D7E  0781               	addwf	1,f
 21094  0D7F  3141               	addfsr 1,1
 21095  0D80  1803               	skipnc
 21096  0D81  0A81               	incf	1,f
 21097                           
 21098                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 21099  0D82  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21100  0D83  0086               	movwf	6
 21101  0D84  3001               	movlw	1	; select bank2/3
 21102  0D85  0087               	movwf	7
 21103  0D86  0801               	movf	1,w
 21104  0D87  0084               	movwf	4
 21105  0D88  3001               	movlw	1	; select bank2/3
 21106  0D89  0085               	movwf	5
 21107  0D8A  3002               	movlw	2
 21108  0D8B  0781               	addwf	1,f
 21109  0D8C  3F00               	moviw [0]fsr0
 21110  0D8D  0022               	movlb	2	; select bank2
 21111  0D8E  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 21112  0D8F  3F01               	moviw [1]fsr0
 21113  0D90  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 21114  0D91  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 21115  0D92  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 21116  0D93  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 21117  0D94  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 21118  0D95  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 21119  0D96  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 21120                           
 21121                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1269:      
      +                                 return xtoa(fp, llu, c);
 21122  0D97  0021               	movlb	1	; select bank1
 21123  0D98  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21124  0D99  0020               	movlb	0	; select bank0
 21125  0D9A  00B1               	movwf	xtoa@fp+1
 21126  0D9B  0021               	movlb	1	; select bank1
 21127  0D9C  0863               	movf	vfpfcnvrt@fp^(0+128),w
 21128  0D9D  0020               	movlb	0	; select bank0
 21129  0D9E  00B0               	movwf	xtoa@fp
 21130  0D9F  0022               	movlb	2	; select bank2
 21131  0DA0  0846               	movf	vfpfcnvrt@llu^(0+256),w
 21132  0DA1  0020               	movlb	0	; select bank0
 21133  0DA2  00B2               	movwf	xtoa@d
 21134  0DA3  0022               	movlb	2	; select bank2
 21135  0DA4  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 21136  0DA5  0020               	movlb	0	; select bank0
 21137  0DA6  00B3               	movwf	xtoa@d+1
 21138  0DA7  0022               	movlb	2	; select bank2
 21139  0DA8  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 21140  0DA9  0020               	movlb	0	; select bank0
 21141  0DAA  00B4               	movwf	xtoa@d+2
 21142  0DAB  0022               	movlb	2	; select bank2
 21143  0DAC  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 21144  0DAD  0020               	movlb	0	; select bank0
 21145  0DAE  00B5               	movwf	xtoa@d+3
 21146  0DAF  0022               	movlb	2	; select bank2
 21147  0DB0  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 21148  0DB1  0020               	movlb	0	; select bank0
 21149  0DB2  00B6               	movwf	xtoa@d+4
 21150  0DB3  0022               	movlb	2	; select bank2
 21151  0DB4  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 21152  0DB5  0020               	movlb	0	; select bank0
 21153  0DB6  00B7               	movwf	xtoa@d+5
 21154  0DB7  0022               	movlb	2	; select bank2
 21155  0DB8  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 21156  0DB9  0020               	movlb	0	; select bank0
 21157  0DBA  00B8               	movwf	xtoa@d+6
 21158  0DBB  0022               	movlb	2	; select bank2
 21159  0DBC  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 21160  0DBD  0020               	movlb	0	; select bank0
 21161  0DBE  00B9               	movwf	xtoa@d+7
 21162  0DBF  0022               	movlb	2	; select bank2
 21163  0DC0  0845               	movf	vfpfcnvrt@c^(0+256),w
 21164  0DC1  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21165  0DC2  0820               	movf	??_vfpfcnvrt^(0+256),w
 21166  0DC3  0020               	movlb	0	; select bank0
 21167  0DC4  00BA               	movwf	xtoa@x
 21168  0DC5  319E  26A7         	fcall	_xtoa
 21169  0DC7  0020               	movlb	0	; select bank0
 21170  0DC8  0831               	movf	?_xtoa+1,w
 21171  0DC9  0021               	movlb	1	; select bank1
 21172  0DCA  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 21173  0DCB  0020               	movlb	0	; select bank0
 21174  0DCC  0830               	movf	?_xtoa,w
 21175  0DCD  0021               	movlb	1	; select bank1
 21176  0DCE  00E3               	movwf	?_vfpfcnvrt^(0+128)
 21177  0DCF  0008               	return
 21178  0DD0                     l7875:	
 21179                           
 21180                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 21181  0DD0  0021               	movlb	1	; select bank1
 21182  0DD1  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21183  0DD2  0086               	movwf	6
 21184  0DD3  0187               	clrf	7
 21185  0DD4  3F40               	moviw [0]fsr1
 21186  0DD5  0022               	movlb	2	; select bank2
 21187  0DD6  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21188  0DD7  3F41               	moviw [1]fsr1
 21189  0DD8  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21190  0DD9  0820               	movf	??_vfpfcnvrt^(0+256),w
 21191  0DDA  0084               	movwf	4
 21192  0DDB  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 21193  0DDC  0085               	movwf	5
 21194  0DDD  0012               	moviw fsr0++
 21195  0DDE  3A78               	xorlw	120
 21196  0DDF  1903               	btfsc	3,2
 21197  0DE0  2DF2               	goto	l7879
 21198  0DE1  0021               	movlb	1	; select bank1
 21199  0DE2  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21200  0DE3  0086               	movwf	6
 21201  0DE4  0187               	clrf	7
 21202  0DE5  3F40               	moviw [0]fsr1
 21203  0DE6  0022               	movlb	2	; select bank2
 21204  0DE7  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21205  0DE8  3F41               	moviw [1]fsr1
 21206  0DE9  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21207  0DEA  0820               	movf	??_vfpfcnvrt^(0+256),w
 21208  0DEB  0084               	movwf	4
 21209  0DEC  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 21210  0DED  0085               	movwf	5
 21211  0DEE  0012               	moviw fsr0++
 21212  0DEF  3A58               	xorlw	88
 21213  0DF0  1D03               	btfss	3,2
 21214  0DF1  2E5A               	goto	l7889
 21215  0DF2                     l7879:	
 21216                           
 21217                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 21218  0DF2  0021               	movlb	1	; select bank1
 21219  0DF3  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21220  0DF4  0086               	movwf	6
 21221  0DF5  0187               	clrf	7
 21222  0DF6  3F40               	moviw [0]fsr1
 21223  0DF7  0022               	movlb	2	; select bank2
 21224  0DF8  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21225  0DF9  3F41               	moviw [1]fsr1
 21226  0DFA  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21227  0DFB  0820               	movf	??_vfpfcnvrt^(0+256),w
 21228  0DFC  0084               	movwf	4
 21229  0DFD  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 21230  0DFE  0085               	movwf	5
 21231  0DFF  0800               	movf	0,w	;code access
 21232  0E00  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 21233  0E01  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 21234  0E02  00C5               	movwf	vfpfcnvrt@c^(0+256)
 21235                           
 21236                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 21237  0E03  0021               	movlb	1	; select bank1
 21238  0E04  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21239  0E05  0086               	movwf	6
 21240  0E06  0187               	clrf	7
 21241  0E07  3001               	movlw	1
 21242  0E08  0781               	addwf	1,f
 21243  0E09  3141               	addfsr 1,1
 21244  0E0A  1803               	skipnc
 21245  0E0B  0A81               	incf	1,f
 21246                           
 21247                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 21248  0E0C  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21249  0E0D  0086               	movwf	6
 21250  0E0E  3001               	movlw	1	; select bank2/3
 21251  0E0F  0087               	movwf	7
 21252  0E10  0801               	movf	1,w
 21253  0E11  0084               	movwf	4
 21254  0E12  3001               	movlw	1	; select bank2/3
 21255  0E13  0085               	movwf	5
 21256  0E14  3002               	movlw	2
 21257  0E15  0781               	addwf	1,f
 21258  0E16  3F00               	moviw [0]fsr0
 21259  0E17  0022               	movlb	2	; select bank2
 21260  0E18  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 21261  0E19  3F01               	moviw [1]fsr0
 21262  0E1A  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 21263  0E1B  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 21264  0E1C  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 21265  0E1D  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 21266  0E1E  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 21267  0E1F  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 21268  0E20  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 21269                           
 21270                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 21271  0E21  0021               	movlb	1	; select bank1
 21272  0E22  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21273  0E23  0020               	movlb	0	; select bank0
 21274  0E24  00B1               	movwf	xtoa@fp+1
 21275  0E25  0021               	movlb	1	; select bank1
 21276  0E26  0863               	movf	vfpfcnvrt@fp^(0+128),w
 21277  0E27  0020               	movlb	0	; select bank0
 21278  0E28  00B0               	movwf	xtoa@fp
 21279  0E29  0022               	movlb	2	; select bank2
 21280  0E2A  0846               	movf	vfpfcnvrt@llu^(0+256),w
 21281  0E2B  0020               	movlb	0	; select bank0
 21282  0E2C  00B2               	movwf	xtoa@d
 21283  0E2D  0022               	movlb	2	; select bank2
 21284  0E2E  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 21285  0E2F  0020               	movlb	0	; select bank0
 21286  0E30  00B3               	movwf	xtoa@d+1
 21287  0E31  0022               	movlb	2	; select bank2
 21288  0E32  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 21289  0E33  0020               	movlb	0	; select bank0
 21290  0E34  00B4               	movwf	xtoa@d+2
 21291  0E35  0022               	movlb	2	; select bank2
 21292  0E36  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 21293  0E37  0020               	movlb	0	; select bank0
 21294  0E38  00B5               	movwf	xtoa@d+3
 21295  0E39  0022               	movlb	2	; select bank2
 21296  0E3A  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 21297  0E3B  0020               	movlb	0	; select bank0
 21298  0E3C  00B6               	movwf	xtoa@d+4
 21299  0E3D  0022               	movlb	2	; select bank2
 21300  0E3E  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 21301  0E3F  0020               	movlb	0	; select bank0
 21302  0E40  00B7               	movwf	xtoa@d+5
 21303  0E41  0022               	movlb	2	; select bank2
 21304  0E42  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 21305  0E43  0020               	movlb	0	; select bank0
 21306  0E44  00B8               	movwf	xtoa@d+6
 21307  0E45  0022               	movlb	2	; select bank2
 21308  0E46  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 21309  0E47  0020               	movlb	0	; select bank0
 21310  0E48  00B9               	movwf	xtoa@d+7
 21311  0E49  0022               	movlb	2	; select bank2
 21312  0E4A  0845               	movf	vfpfcnvrt@c^(0+256),w
 21313  0E4B  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21314  0E4C  0820               	movf	??_vfpfcnvrt^(0+256),w
 21315  0E4D  0020               	movlb	0	; select bank0
 21316  0E4E  00BA               	movwf	xtoa@x
 21317  0E4F  319E  26A7         	fcall	_xtoa
 21318  0E51  0020               	movlb	0	; select bank0
 21319  0E52  0831               	movf	?_xtoa+1,w
 21320  0E53  0021               	movlb	1	; select bank1
 21321  0E54  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 21322  0E55  0020               	movlb	0	; select bank0
 21323  0E56  0830               	movf	?_xtoa,w
 21324  0E57  0021               	movlb	1	; select bank1
 21325  0E58  00E3               	movwf	?_vfpfcnvrt^(0+128)
 21326  0E59  0008               	return
 21327  0E5A                     l7889:	
 21328                           
 21329                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1285:      
      +                             if (!strncmp(*fmt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", 
      +                          ((sizeof("lX")/sizeof("lX"[0]))-1))) {
 21330  0E5A  0021               	movlb	1	; select bank1
 21331  0E5B  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21332  0E5C  0086               	movwf	6
 21333  0E5D  0187               	clrf	7
 21334  0E5E  3F40               	moviw [0]fsr1
 21335  0E5F  00F1               	movwf	strncmp@_l
 21336  0E60  3F41               	moviw [1]fsr1
 21337  0E61  00F2               	movwf	strncmp@_l+1
 21338  0E62  308B               	movlw	low (STR_137| (0+32768))
 21339  0E63  00F3               	movwf	strncmp@_r
 21340  0E64  30B8               	movlw	high (STR_137| (0+32768))
 21341  0E65  00F4               	movwf	strncmp@_r+1
 21342  0E66  3002               	movlw	2
 21343  0E67  00F5               	movwf	strncmp@n
 21344  0E68  3000               	movlw	0
 21345  0E69  00F6               	movwf	strncmp@n+1
 21346  0E6A  31A0  200C  3188   	fcall	_strncmp
 21347  0E6D  0871               	movf	?_strncmp,w
 21348  0E6E  0472               	iorwf	?_strncmp+1,w
 21349  0E6F  1903               	btfsc	3,2
 21350  0E70  2E88               	goto	l7893
 21351  0E71  0021               	movlb	1	; select bank1
 21352  0E72  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21353  0E73  0086               	movwf	6
 21354  0E74  0187               	clrf	7
 21355  0E75  3F40               	moviw [0]fsr1
 21356  0E76  00F1               	movwf	strncmp@_l
 21357  0E77  3F41               	moviw [1]fsr1
 21358  0E78  00F2               	movwf	strncmp@_l+1
 21359  0E79  3064               	movlw	low (STR_141| (0+32768))
 21360  0E7A  00F3               	movwf	strncmp@_r
 21361  0E7B  30B8               	movlw	high (STR_141| (0+32768))
 21362  0E7C  00F4               	movwf	strncmp@_r+1
 21363  0E7D  3002               	movlw	2
 21364  0E7E  00F5               	movwf	strncmp@n
 21365  0E7F  3000               	movlw	0
 21366  0E80  00F6               	movwf	strncmp@n+1
 21367  0E81  31A0  200C  3188   	fcall	_strncmp
 21368  0E84  0871               	movf	?_strncmp,w
 21369  0E85  0472               	iorwf	?_strncmp+1,w
 21370  0E86  1D03               	btfss	3,2
 21371  0E87  2F0D               	goto	l7903
 21372  0E88                     l7893:	
 21373                           
 21374                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1286: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1288:           
      +                            c = (*fmt)[1];
 21375  0E88  0021               	movlb	1	; select bank1
 21376  0E89  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21377  0E8A  0086               	movwf	6
 21378  0E8B  0187               	clrf	7
 21379  0E8C  3F40               	moviw [0]fsr1
 21380  0E8D  0022               	movlb	2	; select bank2
 21381  0E8E  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21382  0E8F  3F41               	moviw [1]fsr1
 21383  0E90  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21384  0E91  3001               	movlw	1
 21385  0E92  0720               	addwf	??_vfpfcnvrt^(0+256),w
 21386  0E93  0084               	movwf	4
 21387  0E94  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 21388  0E95  1803               	skipnc
 21389  0E96  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 21390  0E97  0085               	movwf	5
 21391  0E98  0800               	movf	0,w	;code access
 21392  0E99  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 21393  0E9A  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 21394  0E9B  00C5               	movwf	vfpfcnvrt@c^(0+256)
 21395                           
 21396                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1289:      
      +                                 *fmt += ((sizeof("lx")/sizeof("lx"[0]))-1);
 21397  0E9C  0021               	movlb	1	; select bank1
 21398  0E9D  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21399  0E9E  0086               	movwf	6
 21400  0E9F  0187               	clrf	7
 21401  0EA0  3002               	movlw	2
 21402  0EA1  0781               	addwf	1,f
 21403  0EA2  3141               	addfsr 1,1
 21404  0EA3  1803               	skipnc
 21405  0EA4  0A81               	incf	1,f
 21406                           
 21407                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1290:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
 21408  0EA5  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21409  0EA6  0086               	movwf	6
 21410  0EA7  3001               	movlw	1	; select bank2/3
 21411  0EA8  0087               	movwf	7
 21412  0EA9  0801               	movf	1,w
 21413  0EAA  0084               	movwf	4
 21414  0EAB  3001               	movlw	1	; select bank2/3
 21415  0EAC  0085               	movwf	5
 21416  0EAD  3004               	movlw	4
 21417  0EAE  0781               	addwf	1,f
 21418  0EAF  3F00               	moviw [0]fsr0
 21419  0EB0  0022               	movlb	2	; select bank2
 21420  0EB1  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21421  0EB2  3F01               	moviw [1]fsr0
 21422  0EB3  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21423  0EB4  3F02               	moviw [2]fsr0
 21424  0EB5  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 21425  0EB6  3F03               	moviw [3]fsr0
 21426  0EB7  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 21427  0EB8  0820               	movf	??_vfpfcnvrt^(0+256),w
 21428  0EB9  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
 21429  0EBA  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 21430  0EBB  00A5               	movwf	((??_vfpfcnvrt+4)^(0+256)+1)
 21431  0EBC  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 21432  0EBD  00A6               	movwf	((??_vfpfcnvrt+4)^(0+256)+2)
 21433  0EBE  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 21434  0EBF  00A7               	movwf	((??_vfpfcnvrt+4)^(0+256)+3)
 21435  0EC0  01A8               	clrf	((??_vfpfcnvrt+4)^(0+256)+4)
 21436  0EC1  01A9               	clrf	((??_vfpfcnvrt+4)^(0+256)+5)
 21437  0EC2  01AA               	clrf	((??_vfpfcnvrt+4)^(0+256)+6)
 21438  0EC3  01AB               	clrf	((??_vfpfcnvrt+4)^(0+256)+7)
 21439  0EC4  082B               	movf	((??_vfpfcnvrt+4)^(0+256)+7),w
 21440  0EC5  00CD               	movwf	(vfpfcnvrt@llu+7)^(0+256)
 21441  0EC6  082A               	movf	((??_vfpfcnvrt+4)^(0+256)+6),w
 21442  0EC7  00CC               	movwf	(vfpfcnvrt@llu+6)^(0+256)
 21443  0EC8  0829               	movf	((??_vfpfcnvrt+4)^(0+256)+5),w
 21444  0EC9  00CB               	movwf	(vfpfcnvrt@llu+5)^(0+256)
 21445  0ECA  0828               	movf	((??_vfpfcnvrt+4)^(0+256)+4),w
 21446  0ECB  00CA               	movwf	(vfpfcnvrt@llu+4)^(0+256)
 21447  0ECC  0827               	movf	((??_vfpfcnvrt+4)^(0+256)+3),w
 21448  0ECD  00C9               	movwf	(vfpfcnvrt@llu+3)^(0+256)
 21449  0ECE  0826               	movf	((??_vfpfcnvrt+4)^(0+256)+2),w
 21450  0ECF  00C8               	movwf	(vfpfcnvrt@llu+2)^(0+256)
 21451  0ED0  0825               	movf	((??_vfpfcnvrt+4)^(0+256)+1),w
 21452  0ED1  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 21453  0ED2  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
 21454  0ED3  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 21455                           
 21456                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1292:      
      +                                 return xtoa(fp, llu, c);
 21457  0ED4  0021               	movlb	1	; select bank1
 21458  0ED5  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21459  0ED6  0020               	movlb	0	; select bank0
 21460  0ED7  00B1               	movwf	xtoa@fp+1
 21461  0ED8  0021               	movlb	1	; select bank1
 21462  0ED9  0863               	movf	vfpfcnvrt@fp^(0+128),w
 21463  0EDA  0020               	movlb	0	; select bank0
 21464  0EDB  00B0               	movwf	xtoa@fp
 21465  0EDC  0022               	movlb	2	; select bank2
 21466  0EDD  0846               	movf	vfpfcnvrt@llu^(0+256),w
 21467  0EDE  0020               	movlb	0	; select bank0
 21468  0EDF  00B2               	movwf	xtoa@d
 21469  0EE0  0022               	movlb	2	; select bank2
 21470  0EE1  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 21471  0EE2  0020               	movlb	0	; select bank0
 21472  0EE3  00B3               	movwf	xtoa@d+1
 21473  0EE4  0022               	movlb	2	; select bank2
 21474  0EE5  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 21475  0EE6  0020               	movlb	0	; select bank0
 21476  0EE7  00B4               	movwf	xtoa@d+2
 21477  0EE8  0022               	movlb	2	; select bank2
 21478  0EE9  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 21479  0EEA  0020               	movlb	0	; select bank0
 21480  0EEB  00B5               	movwf	xtoa@d+3
 21481  0EEC  0022               	movlb	2	; select bank2
 21482  0EED  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 21483  0EEE  0020               	movlb	0	; select bank0
 21484  0EEF  00B6               	movwf	xtoa@d+4
 21485  0EF0  0022               	movlb	2	; select bank2
 21486  0EF1  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 21487  0EF2  0020               	movlb	0	; select bank0
 21488  0EF3  00B7               	movwf	xtoa@d+5
 21489  0EF4  0022               	movlb	2	; select bank2
 21490  0EF5  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 21491  0EF6  0020               	movlb	0	; select bank0
 21492  0EF7  00B8               	movwf	xtoa@d+6
 21493  0EF8  0022               	movlb	2	; select bank2
 21494  0EF9  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 21495  0EFA  0020               	movlb	0	; select bank0
 21496  0EFB  00B9               	movwf	xtoa@d+7
 21497  0EFC  0022               	movlb	2	; select bank2
 21498  0EFD  0845               	movf	vfpfcnvrt@c^(0+256),w
 21499  0EFE  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21500  0EFF  0820               	movf	??_vfpfcnvrt^(0+256),w
 21501  0F00  0020               	movlb	0	; select bank0
 21502  0F01  00BA               	movwf	xtoa@x
 21503  0F02  319E  26A7         	fcall	_xtoa
 21504  0F04  0020               	movlb	0	; select bank0
 21505  0F05  0831               	movf	?_xtoa+1,w
 21506  0F06  0021               	movlb	1	; select bank1
 21507  0F07  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 21508  0F08  0020               	movlb	0	; select bank0
 21509  0F09  0830               	movf	?_xtoa,w
 21510  0F0A  0021               	movlb	1	; select bank1
 21511  0F0B  00E3               	movwf	?_vfpfcnvrt^(0+128)
 21512  0F0C  0008               	return
 21513  0F0D                     l7903:	
 21514                           
 21515                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
 21516  0F0D  0021               	movlb	1	; select bank1
 21517  0F0E  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21518  0F0F  0086               	movwf	6
 21519  0F10  0187               	clrf	7
 21520  0F11  3F40               	moviw [0]fsr1
 21521  0F12  00F1               	movwf	strncmp@_l
 21522  0F13  3F41               	moviw [1]fsr1
 21523  0F14  00F2               	movwf	strncmp@_l+1
 21524  0F15  308E               	movlw	low (STR_146| (0+32768))
 21525  0F16  00F3               	movwf	strncmp@_r
 21526  0F17  30B8               	movlw	high (STR_146| (0+32768))
 21527  0F18  00F4               	movwf	strncmp@_r+1
 21528  0F19  3002               	movlw	2
 21529  0F1A  00F5               	movwf	strncmp@n
 21530  0F1B  3000               	movlw	0
 21531  0F1C  00F6               	movwf	strncmp@n+1
 21532  0F1D  31A0  200C  3188   	fcall	_strncmp
 21533  0F20  0871               	movf	?_strncmp,w
 21534  0F21  0472               	iorwf	?_strncmp+1,w
 21535  0F22  1903               	btfsc	3,2
 21536  0F23  2F3B               	goto	l7907
 21537  0F24  0021               	movlb	1	; select bank1
 21538  0F25  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21539  0F26  0086               	movwf	6
 21540  0F27  0187               	clrf	7
 21541  0F28  3F40               	moviw [0]fsr1
 21542  0F29  00F1               	movwf	strncmp@_l
 21543  0F2A  3F41               	moviw [1]fsr1
 21544  0F2B  00F2               	movwf	strncmp@_l+1
 21545  0F2C  3067               	movlw	low (STR_150| (0+32768))
 21546  0F2D  00F3               	movwf	strncmp@_r
 21547  0F2E  30B8               	movlw	high (STR_150| (0+32768))
 21548  0F2F  00F4               	movwf	strncmp@_r+1
 21549  0F30  3002               	movlw	2
 21550  0F31  00F5               	movwf	strncmp@n
 21551  0F32  3000               	movlw	0
 21552  0F33  00F6               	movwf	strncmp@n+1
 21553  0F34  31A0  200C  3188   	fcall	_strncmp
 21554  0F37  0871               	movf	?_strncmp,w
 21555  0F38  0472               	iorwf	?_strncmp+1,w
 21556  0F39  1D03               	btfss	3,2
 21557  0F3A  2FA6               	goto	l7917
 21558  0F3B                     l7907:	
 21559                           
 21560                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
 21561  0F3B  0021               	movlb	1	; select bank1
 21562  0F3C  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21563  0F3D  0086               	movwf	6
 21564  0F3E  0187               	clrf	7
 21565  0F3F  3F40               	moviw [0]fsr1
 21566  0F40  0022               	movlb	2	; select bank2
 21567  0F41  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21568  0F42  3F41               	moviw [1]fsr1
 21569  0F43  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21570  0F44  3001               	movlw	1
 21571  0F45  0720               	addwf	??_vfpfcnvrt^(0+256),w
 21572  0F46  0084               	movwf	4
 21573  0F47  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 21574  0F48  1803               	skipnc
 21575  0F49  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 21576  0F4A  0085               	movwf	5
 21577  0F4B  0800               	movf	0,w	;code access
 21578  0F4C  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 21579  0F4D  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 21580  0F4E  00C5               	movwf	vfpfcnvrt@c^(0+256)
 21581                           
 21582                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
 21583  0F4F  0021               	movlb	1	; select bank1
 21584  0F50  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21585  0F51  0086               	movwf	6
 21586  0F52  0187               	clrf	7
 21587  0F53  3002               	movlw	2
 21588  0F54  0781               	addwf	1,f
 21589  0F55  3141               	addfsr 1,1
 21590  0F56  1803               	skipnc
 21591  0F57  0A81               	incf	1,f
 21592                           
 21593                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 21594  0F58  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21595  0F59  0086               	movwf	6
 21596  0F5A  3001               	movlw	1	; select bank2/3
 21597  0F5B  0087               	movwf	7
 21598  0F5C  0801               	movf	1,w
 21599  0F5D  0084               	movwf	4
 21600  0F5E  3001               	movlw	1	; select bank2/3
 21601  0F5F  0085               	movwf	5
 21602  0F60  3002               	movlw	2
 21603  0F61  0781               	addwf	1,f
 21604  0F62  3F00               	moviw [0]fsr0
 21605  0F63  0022               	movlb	2	; select bank2
 21606  0F64  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 21607  0F65  3F01               	moviw [1]fsr0
 21608  0F66  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 21609  0F67  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 21610  0F68  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 21611  0F69  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 21612  0F6A  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 21613  0F6B  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 21614  0F6C  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 21615                           
 21616                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1344:      
      +                                 return xtoa(fp, llu, c);
 21617  0F6D  0021               	movlb	1	; select bank1
 21618  0F6E  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21619  0F6F  0020               	movlb	0	; select bank0
 21620  0F70  00B1               	movwf	xtoa@fp+1
 21621  0F71  0021               	movlb	1	; select bank1
 21622  0F72  0863               	movf	vfpfcnvrt@fp^(0+128),w
 21623  0F73  0020               	movlb	0	; select bank0
 21624  0F74  00B0               	movwf	xtoa@fp
 21625  0F75  0022               	movlb	2	; select bank2
 21626  0F76  0846               	movf	vfpfcnvrt@llu^(0+256),w
 21627  0F77  0020               	movlb	0	; select bank0
 21628  0F78  00B2               	movwf	xtoa@d
 21629  0F79  0022               	movlb	2	; select bank2
 21630  0F7A  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 21631  0F7B  0020               	movlb	0	; select bank0
 21632  0F7C  00B3               	movwf	xtoa@d+1
 21633  0F7D  0022               	movlb	2	; select bank2
 21634  0F7E  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 21635  0F7F  0020               	movlb	0	; select bank0
 21636  0F80  00B4               	movwf	xtoa@d+2
 21637  0F81  0022               	movlb	2	; select bank2
 21638  0F82  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 21639  0F83  0020               	movlb	0	; select bank0
 21640  0F84  00B5               	movwf	xtoa@d+3
 21641  0F85  0022               	movlb	2	; select bank2
 21642  0F86  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 21643  0F87  0020               	movlb	0	; select bank0
 21644  0F88  00B6               	movwf	xtoa@d+4
 21645  0F89  0022               	movlb	2	; select bank2
 21646  0F8A  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 21647  0F8B  0020               	movlb	0	; select bank0
 21648  0F8C  00B7               	movwf	xtoa@d+5
 21649  0F8D  0022               	movlb	2	; select bank2
 21650  0F8E  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 21651  0F8F  0020               	movlb	0	; select bank0
 21652  0F90  00B8               	movwf	xtoa@d+6
 21653  0F91  0022               	movlb	2	; select bank2
 21654  0F92  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 21655  0F93  0020               	movlb	0	; select bank0
 21656  0F94  00B9               	movwf	xtoa@d+7
 21657  0F95  0022               	movlb	2	; select bank2
 21658  0F96  0845               	movf	vfpfcnvrt@c^(0+256),w
 21659  0F97  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21660  0F98  0820               	movf	??_vfpfcnvrt^(0+256),w
 21661  0F99  0020               	movlb	0	; select bank0
 21662  0F9A  00BA               	movwf	xtoa@x
 21663  0F9B  319E  26A7         	fcall	_xtoa
 21664  0F9D  0020               	movlb	0	; select bank0
 21665  0F9E  0831               	movf	?_xtoa+1,w
 21666  0F9F  0021               	movlb	1	; select bank1
 21667  0FA0  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 21668  0FA1  0020               	movlb	0	; select bank0
 21669  0FA2  0830               	movf	?_xtoa,w
 21670  0FA3  0021               	movlb	1	; select bank1
 21671  0FA4  00E3               	movwf	?_vfpfcnvrt^(0+128)
 21672  0FA5  0008               	return
 21673  0FA6                     l7917:	
 21674                           
 21675                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 21676  0FA6  0021               	movlb	1	; select bank1
 21677  0FA7  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21678  0FA8  0086               	movwf	6
 21679  0FA9  0187               	clrf	7
 21680  0FAA  3F40               	moviw [0]fsr1
 21681  0FAB  0022               	movlb	2	; select bank2
 21682  0FAC  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21683  0FAD  3F41               	moviw [1]fsr1
 21684  0FAE  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21685  0FAF  0820               	movf	??_vfpfcnvrt^(0+256),w
 21686  0FB0  0084               	movwf	4
 21687  0FB1  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 21688  0FB2  0085               	movwf	5
 21689  0FB3  0012               	moviw fsr0++
 21690  0FB4  3A25               	xorlw	37
 21691  0FB5  1D03               	btfss	3,2
 21692  0FB6  2FD0               	goto	l7927
 21693                           
 21694                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 21695  0FB7  0021               	movlb	1	; select bank1
 21696  0FB8  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21697  0FB9  0086               	movwf	6
 21698  0FBA  0187               	clrf	7
 21699  0FBB  3001               	movlw	1
 21700  0FBC  0781               	addwf	1,f
 21701  0FBD  3141               	addfsr 1,1
 21702  0FBE  1803               	skipnc
 21703  0FBF  0A81               	incf	1,f
 21704                           
 21705                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 21706  0FC0  3025               	movlw	37
 21707  0FC1  00F1               	movwf	fputc@c
 21708  0FC2  3000               	movlw	0
 21709  0FC3  00F2               	movwf	fputc@c+1
 21710  0FC4  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21711  0FC5  00F4               	movwf	fputc@fp+1
 21712  0FC6  0863               	movf	vfpfcnvrt@fp^(0+128),w
 21713  0FC7  00F3               	movwf	fputc@fp
 21714  0FC8  3190  200D         	fcall	_fputc
 21715  0FCA                     l7923:	
 21716                           
 21717                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 21718  0FCA  3001               	movlw	1
 21719  0FCB  0021               	movlb	1	; select bank1
 21720  0FCC  00E3               	movwf	?_vfpfcnvrt^(0+128)
 21721  0FCD  3000               	movlw	0
 21722  0FCE  00E4               	movwf	(?_vfpfcnvrt^(0+128)+1)
 21723  0FCF  0008               	return
 21724  0FD0                     l7927:	
 21725                           
 21726                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 21727  0FD0  0021               	movlb	1	; select bank1
 21728  0FD1  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21729  0FD2  0086               	movwf	6
 21730  0FD3  0187               	clrf	7
 21731  0FD4  3001               	movlw	1
 21732  0FD5  0781               	addwf	1,f
 21733  0FD6  3141               	addfsr 1,1
 21734  0FD7  1803               	skipnc
 21735  0FD8  0A81               	incf	1,f
 21736  0FD9  2973               	goto	l7725
 21737  0FDA                     l7933:	
 21738                           
 21739                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 21740  0FDA  0021               	movlb	1	; select bank1
 21741  0FDB  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21742  0FDC  0086               	movwf	6
 21743  0FDD  0187               	clrf	7
 21744  0FDE  3F40               	moviw [0]fsr1
 21745  0FDF  0022               	movlb	2	; select bank2
 21746  0FE0  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21747  0FE1  3F41               	moviw [1]fsr1
 21748  0FE2  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21749  0FE3  0820               	movf	??_vfpfcnvrt^(0+256),w
 21750  0FE4  0084               	movwf	4
 21751  0FE5  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 21752  0FE6  0085               	movwf	5
 21753  0FE7  0800               	movf	0,w	;code access
 21754  0FE8  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 21755  0FE9  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
 21756  0FEA  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 21757  0FEB  00F1               	movwf	fputc@c
 21758  0FEC  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 21759  0FED  00F2               	movwf	fputc@c+1
 21760  0FEE  0021               	movlb	1	; select bank1
 21761  0FEF  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21762  0FF0  00F4               	movwf	fputc@fp+1
 21763  0FF1  0863               	movf	vfpfcnvrt@fp^(0+128),w
 21764  0FF2  00F3               	movwf	fputc@fp
 21765  0FF3  3190  200D  3188   	fcall	_fputc
 21766                           
 21767                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 21768  0FF6  0021               	movlb	1	; select bank1
 21769  0FF7  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21770  0FF8  0086               	movwf	6
 21771  0FF9  0187               	clrf	7
 21772  0FFA  3001               	movlw	1
 21773  0FFB  0781               	addwf	1,f
 21774  0FFC  3141               	addfsr 1,1
 21775  0FFD  1803               	skipnc
 21776  0FFE  0A81               	incf	1,f
 21777  0FFF  2FCA               	goto	l7923
 21778  1000                     __end_of_vfpfcnvrt:	


Data Sizes:
    Strings     444
    Constant    90
    Data        7
    BSS         133
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80     80      80
    BANK3            80      1      60
    BANK4            80      0      80
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           65      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    vsnprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK2[1]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 44
		 -> STR_7(CODE[44]), STR_6(CODE[42]), STR_3(CODE[43]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_152(CODE[3]), STR_148(CODE[3]), STR_143(CODE[3]), STR_139(CODE[3]), 
		 -> STR_134(CODE[3]), STR_130(CODE[3]), STR_125(CODE[4]), STR_121(CODE[4]), 
		 -> STR_116(CODE[3]), STR_111(CODE[3]), STR_106(CODE[3]), STR_101(CODE[4]), 
		 -> STR_96(CODE[3]), STR_91(CODE[3]), STR_86(CODE[3]), STR_81(CODE[4]), 
		 -> STR_76(CODE[3]), STR_71(CODE[3]), STR_66(CODE[3]), STR_61(CODE[4]), 
		 -> STR_56(CODE[3]), STR_51(CODE[3]), STR_47(CODE[3]), STR_42(CODE[3]), 
		 -> STR_38(CODE[3]), STR_33(CODE[3]), STR_29(CODE[3]), STR_24(CODE[4]), 
		 -> STR_20(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_152(CODE[3]), STR_148(CODE[3]), STR_143(CODE[3]), STR_139(CODE[3]), 
		 -> STR_134(CODE[3]), STR_130(CODE[3]), STR_125(CODE[4]), STR_121(CODE[4]), 
		 -> STR_116(CODE[3]), STR_111(CODE[3]), STR_106(CODE[3]), STR_101(CODE[4]), 
		 -> STR_96(CODE[3]), STR_91(CODE[3]), STR_86(CODE[3]), STR_81(CODE[4]), 
		 -> STR_76(CODE[3]), STR_71(CODE[3]), STR_66(CODE[3]), STR_61(CODE[4]), 
		 -> STR_56(CODE[3]), STR_51(CODE[3]), STR_47(CODE[3]), STR_42(CODE[3]), 
		 -> STR_38(CODE[3]), STR_33(CODE[3]), STR_29(CODE[3]), STR_24(CODE[4]), 
		 -> STR_20(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 44
		 -> vfpfcnvrt@ct(BANK2[3]), STR_7(CODE[44]), STR_6(CODE[42]), STR_3(CODE[43]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 44
		 -> vfpfcnvrt@ct(BANK2[3]), STR_7(CODE[44]), STR_6(CODE[42]), STR_3(CODE[43]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_snprintf(BANK2[2]), stoa@nuls(BANK0[7]), dbuf(BANK4[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_snprintf(BANK2[2]), stoa@nuls(BANK0[7]), dbuf(BANK4[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), 
		 -> dbuf(BANK4[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), 
		 -> dbuf(BANK4[80]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 44
		 -> STR_7(CODE[44]), STR_6(CODE[42]), STR_3(CODE[43]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    snprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_snprintf(BANK2[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    S1525_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 44
		 -> STR_7(CODE[44]), STR_6(CODE[42]), STR_3(CODE[43]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK2[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 44
		 -> STR_7(CODE[44]), STR_6(CODE[42]), STR_3(CODE[43]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 44
		 -> STR_7(CODE[44]), STR_6(CODE[42]), STR_3(CODE[43]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 2
		 -> ?_snprintf(BANK2[2]), 

    vfpfcnvrt@vp	PTR void  size(1) Largest target is 2
		 -> ?_snprintf(BANK2[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK2[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    stoa@s	PTR unsigned char  size(1) Largest target is 2
		 -> ?_snprintf(BANK2[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(BANK2[2]), stoa@nuls(BANK0[7]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    EUSART_Write_Text@text	PTR unsigned char  size(2) Largest target is 127
		 -> STR_9(CODE[45]), STR_8(CODE[42]), STR_5(CODE[3]), STR_4(CODE[53]), 
		 -> messageBuffer(BIGRAM[127]), STR_2(CODE[46]), STR_1(CODE[40]), 


Critical Paths under _main in COMMON

    _main->_EUSART_Initialize
    _vfpfcnvrt->_stoa
    _vfpfcnvrt->_strncmp
    _toupper->_islower
    _stoa->_fputc
    _efgtoa->___fltol
    _tolower->_isupper
    _dtoa->___aodiv
    _abs->___aomod
    _pad->_fputs
    _fputs->_fputc
    _atoi->___wmul
    _atoi->_isdigit
    _setTemperatureLimitsint->___wmul
    _setShortCircuitProtection->___fltol
    ___flmul->__Umul8_16
    _beginAFEcommunication->_I2C_writeRegister
    _beginAFEcommunication->_readRegister
    _readRegister->_read_I2C_data
    _readRegister->_send_I2C_controlByte
    _I2C_writeRegister->_send_I2C_controlByte
    _RGB_AWAIT_AFE_CONN->_RGB_color
    _EUSART_Write_Text->_EUSART_Write
    _EUSART_Initialize->___aldiv

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    _vsnprintf->_vfprintf
    _xtoa->_pad
    _utoa->___lodiv
    _utoa->___lomod
    _utoa->_pad
    _otoa->_pad
    _efgtoa->_floorf
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _dtoa->___aodiv
    _dtoa->___aomod
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _init_AFE->_setShortCircuitProtection
    _setShortCircuitProtection->___fltol
    ___fltol->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _EUSART_Initialize->___aldiv

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _init_AFE->_setShortCircuitProtection

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_statemachine
    _statemachine->_snprintf
    _snprintf->_vsnprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _myIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _myIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _myIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _myIsr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _myIsr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _myIsr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _myIsr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _myIsr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _myIsr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _myIsr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _myIsr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _myIsr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _myIsr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _myIsr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  103186
                                              0 BANK3      1     1      0
                  _EUSART_Initialize
                          _initClock
                          _init_GPIO
                           _init_I2C
                           _init_RGB
                          _init_TMR1
                       _statemachine
 ---------------------------------------------------------------------------------
 (1) _statemachine                                         3     3      0  102350
                                             77 BANK2      3     3      0
          _AFE_getSetCurrentSenseRes
      _AFE_getSetShortCircuitCurrent
                  _EUSART_Write_Text
                 _RGB_AWAIT_AFE_CONN
                          _RGB_color
              _beginAFEcommunication
                           _init_AFE
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _snprintf                                            14     4     10   89475
                                             63 BANK2     14     4     10
          _AFE_getSetCurrentSenseRes (ARG)
      _AFE_getSetShortCircuitCurrent (ARG)
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (3) _vsnprintf                                           19    12      7   88330
                                             78 BANK1      2     2      0
                                             46 BANK2     17    10      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             9     4      5   87293
                                             78 BANK0      2     2      0
                                             71 BANK1      7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           52    48      4   86431
                                             67 BANK1      4     0      4
                                              0 BANK2     46    46      0
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _otoa
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                39    28     11    9106
                                             16 BANK0     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              8     6      2     512
                                              7 COMMON     4     2      2
                                              0 BANK0      4     4      0
                            _islower
 ---------------------------------------------------------------------------------
 (8) _islower                                              6     4      2     191
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              8     6      2     161
                                              1 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (6) _utoa                                                25    15     10    7249
                                             16 BANK0     25    15     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lomod                                             18     2     16     311
                                              1 COMMON     2     2      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___lodiv                                             26    10     16     314
                                              1 COMMON    10    10      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6    6837
                                              1 COMMON    11     5      6
 ---------------------------------------------------------------------------------
 (6) _stoa                                                22    19      3    2280
                                             10 COMMON     2     2      0
                                              0 BANK0     20    17      3
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _otoa                                                34    24     10    6729
                                             16 BANK0     34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              67    60      7   28067
                                              0 BANK1     67    60      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2    1232
                                              7 COMMON     4     2      2
                                              0 BANK0      4     4      0
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     641
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                               8     6      2     641
                                              1 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     490
                                             58 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       16    12      4     287
                                              1 COMMON    10     6      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    3727
                                             32 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             20    12      8    3302
                                              1 COMMON     8     0      8
                                              0 BANK0     12    12      0
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     121
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8     790
                                             32 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     490
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              7     3      4     448
                                              1 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              9     5      4     452
                                              1 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                31    21     10    7932
                                             16 BANK0     31    21     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                              4 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             19     3     16     448
                                              1 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             27    11     16     452
                                              1 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 8     5      3    5680
                                             16 BANK0      6     3      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 10     5      5    5420
                                              6 BANK0     10     5      5
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     164
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                8     6      2    1605
                                             10 COMMON     2     0      2
                                              0 BANK0      6     6      0
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1290
                                              1 COMMON     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    2025
                                              7 COMMON     2     0      2
                                              0 BANK0     13    13      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              5     3      2     207
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     313
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (2) _init_AFE                                             0     0      0    8006
          _setShortCircuitProtection
              _setShuntResistorValue
            _setTemperatureLimitsint
 ---------------------------------------------------------------------------------
 (3) _setTemperatureLimitsint                              8     0      8    1244
                                              0 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     852
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _setShuntResistorValue                                4     0      4      98
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) _setShortCircuitProtection                           25    19      6    6664
                                             67 BANK0      9     3      6
                                              0 BANK1     16    16      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     398
                                              1 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             11     7      4     457
                                             10 COMMON     2     2      0
                                             58 BANK0      9     5      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             26    18      8    3329
                                              6 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) __Umul8_16                                            9     7      2     799
                                              1 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             26    18      8    2033
                                             32 BANK0     26    18      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _beginAFEcommunication                               15    13      2    3387
                                              0 BANK0     15    13      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _readRegister                                         6     2      4    1599
                                              5 COMMON     6     2      4
                      _read_I2C_data
                      _send_I2C_NACK
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (4) _send_I2C_NACK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _read_I2C_data                                        4     2      2       0
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (3) _I2C_writeRegister                                    6     0      6    1652
                                              5 COMMON     6     0      6
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (4) _send_I2C_stopBit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _send_I2C_startBit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _send_I2C_data                                        2     0      2     250
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _send_I2C_controlByte                                 4     0      4     652
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) _RGB_AWAIT_AFE_CONN                                   1     1      0     326
                                              3 COMMON     1     1      0
                          _RGB_color
 ---------------------------------------------------------------------------------
 (2) _RGB_color                                            2     0      2     326
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write_Text                                    5     3      2     796
                                              2 COMMON     5     3      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _AFE_getSetShortCircuitCurrent                        8     4      4       0
                                              1 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _AFE_getSetCurrentSenseRes                            4     0      4       0
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _init_TMR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_RGB                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_I2C                                             1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_GPIO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initClock                                            0     0      0       0
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Initialize                                   18    14      4     836
                                             10 COMMON     2     2      0
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     604
                                              1 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _myIsr                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Initialize
     ___aldiv
   _initClock
     _internal_16
   _init_GPIO
   _init_I2C
   _init_RGB
   _init_TMR1
   _statemachine
     _AFE_getSetCurrentSenseRes
     _AFE_getSetShortCircuitCurrent
     _EUSART_Write_Text
       _EUSART_Write
     _RGB_AWAIT_AFE_CONN
       _RGB_color
     _RGB_color
     _beginAFEcommunication
       _I2C_writeRegister
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _readRegister
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
     _init_AFE
       _setShortCircuitProtection
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
         ___xxtofl
       _setShuntResistorValue
       _setTemperatureLimitsint
         ___wmul
     _snprintf
       _AFE_getSetCurrentSenseRes (ARG)
       _AFE_getSetShortCircuitCurrent (ARG)
       _vsnprintf (ARG)
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
               ___fleq
               ___flge
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
               ___flmul
                 __Umul8_16
                 ___xxtofl (ARG)
               ___flneg
               ___flsub
                 ___fladd
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
               ___fltol
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
             _isdigit
             _isupper
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     50      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      1      3C      11       75.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      50      13      100.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     189      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     189      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              41      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Dec 25 01:21:18 2019

       __end_of_setShortCircuitProtection 07EE                     __end_of_send_I2C_data 36C7  
                            ___fldiv@aexp 0059                              ___fldiv@bexp 0058  
                            ___fldiv@sign 0051                               __CFG_CP$OFF 0000  
                            ___awdiv@sign 0077                       ___wmul@multiplicand 0073  
                   _setShuntResistorValue 36ED                       __Umul8_16@word_mpld 0077  
                                     l213 369E                                       l311 289C  
                                     l312 28A1                                       l313 28B6  
                                     l137 1C4B                                       l260 36E9  
                                     l309 2897                                       l501 2B1D  
                                     l254 07F2                                       l248 36C3  
                                     l272 36B1                                       l504 2B3D  
                                     l521 1DBB                                       l601 048A  
                                     l266 36A9                                       l522 1DCF  
                                     l284 36CC                                       l516 1D99  
                                     l525 1E65                                       l517 1DA0  
                                     l368 22F9                                       l712 1FCC  
                                     l633 197B                                       l721 13E4  
                                     l723 13F0                                       l572 0293  
                                     l644 1A36                                       l724 13F3  
                                     l573 0280                                       l637 1996  
                                     l725 13F6                                       l638 1A2B  
                                     l726 13F9                                       l583 02C7  
                                     l655 2341                                       l664 239C  
                                     l672 2726                                       l728 142C  
                                     l819 2808                                       l691 1EC9  
                                     l932 270D                                       l676 2741  
                                     l919 1B46                                       l687 1EAE  
                                     l884 2E76                                       l988 2AD9  
                                     l989 2AF3                                       l997 2D0B  
                                     _abs 3735                            RGB_color@color 0071  
                                     _pad 2B07                              ___awmod@sign 0077  
                            __CFG_BORV$LO 0000                                       wreg 0009  
                            __CFG_IESO$ON 0000                              ___flmul@aexp 0038  
                            ___flmul@bexp 0039                              ___flmul@sign 0033  
                            ___flmul@temp 003E                              ___flmul@prod 003A  
                            _statemachine 1B58                              __CFG_LVP$OFF 0000  
                            ___fltol@exp1 007B                                      l1000 2D59  
                                    l1020 2BF3                                      l1200 11D6  
                                    l1120 1228                                      ?_abs 0074  
                                    l1124 12BB                                      l1052 2DD7  
                                    l1141 133E                                      l1126 129E  
                                    l1062 2C67                                      l1305 20C7  
                                    l1162 13B5                                      l1154 139D  
                                    l1228 17F3                                      l1260 2FBE  
                                    l1254 2F88                                      l1176 10AA  
                                    l1328 263A                                      l1267 2FD2  
                                    l1268 2FDC                                      l1197 11B1  
                                    l1198 11C9                                      l1438 2849  
                                    l4105 3722                                      l5011 37DB  
                                    l4107 372E                                      l4313 2843  
                                    l4081 1015                                      l4083 1019  
                                    l4411 2604                                      l4501 2694  
                                    l4087 1040                                      l4511 26B0  
                                    l4415 261D                                      l4441 2802  
                                    l4409 25F3                                      l4099 2921  
                                    l4515 26E0                                      l4363 2CC3  
                                    l6141 2F80                                      l4509 26A1  
                                    l4517 26EC                                      l4621 2D25  
                                    l4373 2CEB                                      l7101 0439  
                                    ?_pad 0026                                      l6151 2F9B  
                                    l4463 1AB6                                      l4535 2B6D  
                                    l4367 2CC8                                      l7031 020A  
                                    l4711 2C2B                                      l6161 2FD0  
                                    l6153 2FAB                                      l4465 1ABA  
                                    l4561 2BA4                                      l4553 2B93  
                                    l4545 2B75                                      l4529 2B62  
                                    l4625 2D3F                                      l7025 01A0  
                                    l7009 0151                                      l7017 017F  
                                    l6403 2238                                      l4803 1135  
                                    l6163 2FC3                                      l6147 2F97  
                                    l4475 1AD1                                      l4459 1A8F  
                                    l4547 2B81                                      l4379 2880  
                                    l7115 0488                                      l7107 045A  
                                    l7035 023A                                      l4715 2C5B  
                                    l4821 1140                                      l4805 10FE  
                                    l4741 107E                                      l4645 2BB3  
                                    l6245 0795                                      l6237 06E6  
                                    l4485 1B19                                      l4477 1AE0  
                                    l4557 2B9C                                      l4573 2A83  
                                    l7205 0619                                      l7117 0491  
                                    l7029 01D0                                      l7037 025F  
                                    l4709 2C1C                                      l6335 3794  
                                    l6183 28A6                                      l4823 1157  
                                    l4807 113A                                      l4743 1086  
                                    l6175 2FF7                                      l6255 07AF  
                                    l6247 07A7                                      l4487 1B25  
                                    l4591 2AA8                                      l7231 0699  
                                    l7215 0667                                      l7207 0651  
                                    l7151 0531                                      l7071 02D4  
                                    l7063 02C2                                      l7055 029E  
                                    l7047 028D                                      l5631 2021  
                                    l8023 1B59                                      l4833 1170  
                                    l4761 10A2                                      l4737 107B  
                                    l4665 2BE1                                      l4649 2BBC  
                                    l4497 266D                                      l4585 2A90  
                                    l4577 2A8A                                      l7129 04FC  
                                    l7081 02E8                                      l7073 02D8  
                                    l7049 0296                                      l7313 2363  
                                    l8201 141A                                      l4843 1199  
                                    l4771 10C9                                      l4907 1629  
                                    l4675 2C00                                      l4667 2BEF  
                                    l6259 07DB                                      l8203 20A0  
                                    l4587 2A9C                                      l4595 2AB1  
                                    l7331 23B1                                      l7323 2373  
                                    l7315 2370                                      l4691 2D92  
                                    l6373 2E97                                      l6365 2E87  
                                    l8205 28AB                                      l4829 116E  
                                    l4757 109F                                      l7149 0517  
                                    l7157 0543                                      l7165 05C5  
                                    l7085 02F0                                      l7333 23BE  
                                    l7309 2352                                      l5637 204D  
                                    l5629 2046                                      l8053 1BC2  
                                    l6391 2EDE                                      l6383 2EC5  
                                    l6375 2EA5                                      l4599 2AB9  
                                    l7239 06B4                                      l7095 0302  
                                    l7327 23A0                                      l7343 2739  
                                    l7503 13FC                                      l4857 11D2  
                                    l4777 10D5                                      l4961 1772  
                                    l4881 15F8                                      l7441 2063  
                                    l6641 1200                                      l7193 0615  
                                    l7177 05F3                                      l7169 05DD  
                                    l7097 03E6                                      l7257 19DD  
                                    l7249 198E                                      l4689 2D83  
                                    l7361 2760                                      l7433 1FEA  
                                    l7409 1F59                                      l7417 1F9B  
                                    l7601 1C4C                                      l7513 1433  
                                    l6387 2ED0                                      l6299 28C9  
                                    l4971 178B                                      l6707 12A6  
                                    l6635 11F5                                      l7195 061D  
                                    l7283 1A4F                                      l7267 19B8  
                                    l4699 2DCB                                      l4797 111C  
                                    l4981 17B4                                      l4877 15EE  
                                    l6805 13AD                                      l6733 12DB  
                                    l6725 12C9                                      l6709 12A8  
                                    l6717 12B6                                      l7349 2784  
                                    l7613 1CC6                                      l7605 1C6E  
                                    l7525 1465                                      l7509 1400  
                                    l8077 1C36                                      l4991 17E0  
                                    l4967 1789                                      l4959 175B  
                                    l4895 1611                                      l4879 15F0  
                                    l7463 20CB                                      l7455 208F  
                                    l6823 2B13                                      l6911 1DCA  
                                    l6735 12DD                                      l6743 12EC  
                                    l6663 1220                                      l6639 11F8  
                                    l7295 231A                                      l7359 27E5  
                                    l7551 1507                                      l7527 1476  
                                    l7535 14A7                                      l8095 295E  
                                    l4985 17C9                                      l4897 1613  
                                    l7473 20FA                                      l7457 2094  
                                    l7449 207F                                      l6833 2B1F  
                                    l6905 1DB3                                      l6809 13B1  
                                    l6761 1350                                      l6753 1336  
                                    l7369 27EA                                      l7393 1F0B  
                                    l7385 1ED9                                      l7625 2495  
                                    l7617 1CF4                                      l7529 147F  
                                    l4899 161B                                      l7459 20A8  
                                    l6827 2B1B                                      l6915 1DFC  
                                    l6659 121D                                      l7379 1EC1  
                                    l7731 08E0                                      l7707 083F  
                                    l7547 14ED                                      l6837 2B49  
                                    l6925 1DD7                                      l6933 1E71  
                                    l6669 1232                                      l7389 1EF1  
                                    l7725 0973                                      l7717 08A7  
                                    l7637 2514                                      l7629 24C3  
                                    l7581 2F15                                      l7549 14FE  
                                    l7557 152F                                      l7493 13E6  
                                    l6943 1E84                                      l6783 136F  
                                    l6775 1364                                      l7903 0F0D  
                                    l7807 0AEB                                      l7743 0901  
                                    l7567 158F                                      l8199 1C40  
                                    l6937 1E79                                      l6769 135D  
                                    l6777 1366                                      l6961 0098  
                                    l7817 0B53                                      l7729 0977  
                                    l7649 20FF                                      l7593 1834  
                                    l7577 2EE7                                      l6883 29A6  
                                    l6947 1E91                                      l6787 1371  
                                    l6699 126E                                      l7923 0FCA  
                                    l7907 0F3B                                      l7851 0CCD  
                                    l7827 0BB5                                      l7755 0922  
                                    l7659 2162                                      l7667 23C4  
                                    l6885 29AF                                      l6869 2B05  
                                    l6973 00B1                                      l6981 00C3  
                                    l7917 0FA6                                      l7861 0D37  
                                    l7837 0C37                                      l7677 242B  
                                    l7589 1806                                      l7933 0FDA  
                                    l6991 00F3                                      l7927 0FD0  
                                    l7847 0C9F                                      l7767 0953  
                                    l7687 188E                                      l7951 29D2  
                                    l6969 00AA                                      l7865 0D65  
                                    l7697 18F0                                      l7953 29F6  
                                    l7875 0DD0                                      l7787 0A43  
                                    l7971 2E17                                      l7963 2DFB  
                                    l7893 0E88                                      l7797 0A84  
                                    l7981 2E55                                      l6999 0121  
                                    l7879 0DF2                                      l7983 2E59  
                                    l7889 0E5A                                      l7985 2E60  
                                    l7969 2E0F                                      l7995 2250  
                                    STR_1 313D                                      STR_2 3037  
                                    STR_3 30BE                                      STR_4 3002  
                                    STR_5 3062                                      STR_6 3113  
                                    STR_7 3092                                      STR_8 30E9  
                                    STR_9 3065                                      _BRGH 0CF2  
                                    _CREN 0CEC                                      u6005 2AA2  
                                    u5215 284A                                      u6015 2AA9  
                                    u5305 2C99                                      u6205 2BF7  
                                    u5325 2CB2                                      u6230 2D73  
                                    u5360 2CE3                                      u6145 2BC5  
                                    u5425 258C                                      u6305 2C49  
                                    u5370 2CE4                                      u5450 25BA  
                                    u5530 37F8                                      u5355 2CD5  
                                    u5515 2626                                      u5435 25A7  
                                    u5540 37F9                                      u4725 103E  
                                    u6415 1106                                      u6175 2BE2  
                                    u5615 2809                                      u5295 373E  
                                    u5455 25B6                                      u6505 114C  
                                    u6425 110D                                      u5625 280E  
                                    u6265 2DB8                                      _SCS0 04C8  
                                    u5715 1B06                                      u5475 25DF  
                                    _SCS1 04C9                                      u5580 3716  
                                    u6445 1116                                      u5590 3717  
                                    u6455 112A                                      u5815 26CE  
                                    u5495 260D                                      u9040 28BF  
                                    u5680 1AC1                                      u6705 16CE  
                                    u5905 2B82                                      u9050 28C0  
                                    u6715 1724                                      u5915 2B8C  
                                    u9060 28CE                                      u6485 1143  
                                    u6725 173B                                      u5925 2B94  
                                    u9070 28CF                                      u6575 1187  
                                    u6735 174A                                      u9225 21AD  
                                    u6585 11A2                                      u6745 175E  
                                    u9330 375B                                      u9155 2E9A  
                                    u9235 21C4                                      u6595 11BB  
                                    u6835 17A2                                      u9340 375C  
                                    u6845 17BD                                      u6765 1767  
                                    u5885 2B78                                      u9175 2EA6  
                                    u9255 21FA                                      u6855 17D3  
                                    u6695 169F                                      u9185 2EBA  
                                    u9265 2211                                      u5985 2A93  
                                    u9450 128C                                      u9195 2EC6  
                                    u9460 128D                                      u9445 1282  
                                    u9615 1351                                      u8905 2FE4  
                                    u8825 2FA4                                      u9715 1388  
                                    u8845 2FB8                                      u9573 12FE  
                                    u9565 12E1                                      u9495 12AC  
                                    u9840 28E9                                      u8865 2FCA  
                                    u8945 0785                                      u9825 2B29  
                                    u9850 28EA                                      u8955 07A5  
                                    u9940 1D6F                                      u9780 3772  
                                    u8965 07C9                                      u9925 2B01  
                                    u9950 1D70                                      u9790 3773  
                                    u9870 290B                                      u8975 07EB  
                                    u9880 290C                                      _TMR1 0016  
                                    _SPEN 0CEF                                      u9995 1DAB  
                                    _TXEN 0CF5                                      _SYNC 0CF4  
                            __CFG_WRT$OFF 0000                                      abs@a 0074  
                                    _dbuf 0220                                      _atoi 205E  
                                    _ctoa 2999                                      _main 2943  
                                    _dtoa 1D54                                      _prec 01C0  
                                    _otoa 1974                                      _nout 01BC  
                                    pad@i 002C                                      pad@p 0029  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    pad@w 002E                                      _stoa 22FF  
                                    btemp 007E                                      _utoa 271F  
                                    _xtoa 1EA7                             ___fpclassifyf 2C78  
                                    start 001E                           ___fldiv@new_exp 0052  
                            _tolower$1595 0079                  __end_of_send_I2C_stopBit 36B5  
                                   ??_abs 0076                                     ??_pad 002B  
                    _send_I2C_controlByte 36E3                             ?_EUSART_Write 0070  
                           ___fltol@sign1 007A                           __end_of___aldiv 2EE7  
                         __end_of___aodiv 1B58                                     ?_atoi 0077  
                                   ?_ctoa 0030                           __end_of___fladd 13BD  
                                   ?_main 0070                                     ?_dtoa 0030  
                         __end_of___aomod 271F             I2C_writeRegister@slaveAddress 0075  
                         __end_of___fldiv 11DB                           __end_of___awdiv 2BA9  
                         __end_of___flneg 36D9                                     STR_10 3838  
                                   STR_11 3848                                     STR_20 3844  
                                   STR_22 384C                                     STR_14 383C  
                                   STR_15 3850                                     STR_24 384C  
                                   STR_40 3873                                     STR_33 384D  
                           __CFG_WDTE$OFF 0000                                     STR_42 3873  
                                   STR_18 3844                                     STR_51 3876  
                                   STR_36 386A                           __end_of___awmod 2ABE  
                                   STR_29 3845                                     STR_61 3858  
                                   STR_45 386D                                     STR_38 386A  
                                   STR_54 3870                                     STR_47 386D  
                                   STR_71 387F                                     STR_56 3870  
                                   STR_81 3854                                     STR_49 3876  
                                   STR_66 3859                                     STR_74 3882  
                                   STR_91 3879                                     STR_59 3858  
                                   STR_76 3882                                     STR_69 387F  
                                   STR_86 3855                                     STR_94 387C  
                                   STR_79 3854                                     STR_96 387C  
                         __end_of___flmul 1800                                     STR_89 3879  
                                   ?_otoa 0030                                     STR_99 385C  
                         __end_of___flsub 2877                           __end_of___fltol 2C0F  
                                   ?_stoa 0020                                     ?_utoa 0030  
                                   u10200 0143                                     u10025 1E6F  
                                   u10045 1DEB                                     u10150 00E4  
                                   u10055 1DF7                                     u11015 1FBB  
                                   u10160 00E5                                     u10305 02AB  
                                   u11025 1FC7                                     u10315 02BE  
                                   u11220 1524                                     u10190 0142  
                                   u11230 1525                                     u11080 20DF  
                                   u10600 068D                                     u11400 2143  
                                   u10505 05CF                                     u11090 20E0  
                                   u11410 2144                                     u11170 149C  
                                   u10515 05DB                                     u10275 028B  
                         __end_of___lodiv 2DE8                                     u11180 149D  
                         ___awdiv@divisor 0071                                     ?_xtoa 0030  
                                   u10720 2309                                     u10385 030C  
                                   u10635 1986                                     u10645 1A0F  
                                   u10805 23BC                                     u10590 068C  
                                   u10575 065A                                     u10655 1A34  
                                   u10920 1F22                                     u10825 2731  
                                   u10930 1F23                                     u10675 19CC  
                                   u10755 233A                                     u10915 1F05  
                                   u10685 19D8                                     u10950 1F42  
                                   u10775 236E                                     u10855 2773  
                                   u10960 1F43                                     u10785 237D  
                                   u10865 277F                                     u11827 2965  
                                   u11765 2E4C                                     u11837 1B85  
                                   u11775 2266                                     u10895 1EB9  
                                   u11847 1BC9                                     u11857 3702  
                         __end_of___lomod 2C78                                     u10985 1F7F  
                                   u11795 22CC                                     u10995 1FA5  
                                   _IRCF0 04CB                                     _IRCF1 04CC  
                                   _IRCF2 04CD                                     _IRCF3 04CE  
                  __size_of_read_I2C_data 0010                                     i1l119 001C  
                         ___awdiv@counter 0076                              vfpfcnvrt@fmt 00E5  
                            vfpfcnvrt@llu 0146                                     _SPBRG 019B  
                      __size_of_RGB_color 0021                            __CFG_FCMEN$OFF 0000  
                                   _flags 01C2                                     _errno 01BA  
                                   _fputc 100D                           __end_of_isalpha 3800  
                                   _fputs 291D                                     _myIsr 0004  
                         __end_of_isdigit 371E                                     atoi@n 002B  
                                   pad@fp 0026                                     atoi@s 0077  
                                   _width 01BE                                     ctoa@c 0032  
                                   _putch 07FE                                     ctoa@w 0034  
                                   dtoa@d 0032                                     dtoa@i 004D  
                                   dtoa@n 0045                                     dtoa@p 003F  
                                   dtoa@s 0043                                     dtoa@w 0041  
                         __end_of_islower 377A                           __end_of_isspace 37E3  
                          __CFG_BOREN$OFF 0000                           __end_of_isupper 3763  
                                   otoa@d 0032                                     otoa@i 0050  
                                   otoa@n 0048                                     otoa@p 0042  
                                   otoa@t 0044                                     otoa@w 0046  
                                   stoa@i 002A                                     stoa@l 0032  
                                   stoa@p 0030                                     stoa@s 0022  
                                   stoa@w 002C                                     utoa@d 0032  
                                   utoa@i 0047                                     utoa@n 003F  
                                   utoa@p 003B                                     utoa@w 003D  
                                   status 0003                                     wtemp0 007E  
                          ?___fpclassifyf 0071                           __end_of_tolower 28FB  
                                   xtoa@c 0055                                     xtoa@d 0032  
                                   xtoa@i 0053                                     xtoa@n 004B  
                                   xtoa@p 0047                                     xtoa@w 0049  
                                   xtoa@x 003A                         _SCD_delay_setting 3830  
                         __end_of_strncmp 205E                           __end_of_toupper 291D  
                        ___lodiv@dividend 0028                              ?_internal_16 0070  
                            _toupper$1610 0079                            __CFG_MCLRE$OFF 0000  
                         __initialization 0020     setTemperatureLimitsint@maxCharge_degC 0026  
                            __end_of_atoi 20FF                              __end_of_ctoa 29CA  
                            __end_of_main 296B                              __end_of_dtoa 1EA7  
                            __end_of_otoa 1A65                              __end_of_stoa 23C4  
                            __end_of_utoa 2800                              __end_of_xtoa 2000  
                __end_of_UV_delay_setting 3830                    ?_setShuntResistorValue 0071  
                  beginAFEcommunication@i 002D                     ?_send_I2C_controlByte 0071  
                          ??_EUSART_Write 0071                            __CFG_LPBOR$OFF 0000  
                       _ATmega328_address 3000                                    ??_atoi 0020  
                                  ??_ctoa 0033                                    ??_main 01DB  
                                  ??_dtoa 003A                                    ??_otoa 003A  
                                  ??_stoa 007A                                    ??_utoa 003A  
                                  ??_xtoa 003B                            __CFG_PLLEN$OFF 0000  
                        ___lodiv@quotient 0072                             ?_readRegister 0075  
                                  ?_fputc 0071                                    STR_101 385C  
                                  ?_fputs 007A                                    STR_111 3885  
                                  STR_121 3860                                    STR_106 385D  
                                  STR_130 3861                                    STR_114 3888  
                                  STR_123 3840                                    ?_myIsr 0070  
                                  STR_116 3888                                    STR_125 3840  
                                  STR_109 3885                                    STR_141 3864  
                                  STR_134 3841                                    STR_150 3867  
                                  STR_143 3864                                    STR_119 3860  
                                  STR_152 3867                                    STR_137 388B  
                                  STR_146 388E                                    STR_139 388B  
                                  STR_148 388E                          ___awdiv@dividend 0073  
                          __CFG_ZCDDIS$ON 0000                                    ?_putch 0070  
           __end_of_OCD_threshold_setting 3185                                    _RC1REG 0199  
               __end_of_SCD_delay_setting 3838                             vfpfcnvrt@done 012D  
                                  _TX1REG 019A                                    _SPLLEN 04CF  
                                  _SSPADD 0212                                    _TRISC6 0476  
                                  _TRISC7 0477                                    _SSPBUF 0211  
                                  u565lld 1A8D                                    u576lld 266B  
                           _read_I2C_data 07EE                          __end_of___xxtofl 3000  
                          __CFG_PWRTE$OFF 0000                         __end_of_RGB_color 28B7  
                            vfprintf@cfmt 00EC                                    ___flge 2CF0  
                                  ___fleq 2ABE                                 ??___aldiv 0079  
                               ??___aodiv 0071                                 ??___fladd 0020  
                               ??___aomod 0071                                    ___wmul 2800  
                               ??___fldiv 0048                                 ??___awdiv 0075  
                               ??___flneg 0075                            __CFG_STVREN$ON 0000  
                               ??___awmod 0075                                 ??___flmul 002E  
                               ??___flsub 007A                                 ??___fltol 005E  
                               ??___lodiv 0071                          __end_of_init_I2C 3707  
                               ??___lomod 0071                          __end_of_init_AFE 2999  
                                  _efgtoa 0058                          __end_of_init_RGB 1806  
               __end_of_ATmega328_address 3002                                    _floorf 256B  
                        ___awdiv@quotient 0078                     _beginAFEcommunication 224B  
                         ___awmod@divisor 0071                           ___awmod@counter 0076  
                                  pad@buf 0028                                    ctoa@fp 0030  
                                  dtoa@fp 0030                                    _strcpy 2877  
                                  _strlen 371E                                    fputc@c 0071  
                                  fputs@c 0022                                    fputs@i 0023  
                                  fputs@s 0025                                 ??_isalpha 0073  
                               ??_isdigit 0073                        __size_of__Umul8_16 001F  
                         ___fpclassifyf@e 0020                           ___fpclassifyf@u 0022  
                         ___fpclassifyf@x 0071                                 ??_islower 0073  
                               ??_isspace 0073                                    otoa@fp 0030  
                          ??_readRegister 0079                                 ??_isupper 0073  
                                  stoa@cp 002E                                    stoa@fp 0020  
                                  putch@c 0070                          __end_of_vfprintf 29FF  
                                  utoa@fp 0030                          __end_of_snprintf 3792  
                               ??_tolower 0020                                    xtoa@fp 0030  
                               ??_strncmp 0077                                 ??_toupper 0020  
                              ___flge@ff1 0040                                ___flge@ff2 0044  
                         ??___fpclassifyf 0075                              ___xxtofl@arg 0022  
                            ___xxtofl@exp 0021                              ___xxtofl@val 0071  
                              ___fleq@ff1 0071                                ___fleq@ff2 0075  
                 __end_of__initialization 0054                            ?_read_I2C_data 0071  
                              ___flneg@f1 0071                                ___fltol@f1 005A  
                ?_setTemperatureLimitsint 0020  setTemperatureLimitsint@minDischarge_degC 0020  
                          __pcstackCOMMON 0070                    ??_send_I2C_controlByte 0075  
                            __pidataBANK3 0800                             __end_of_fputc 1061  
                           __end_of_fputs 2943                             __end_of_myIsr 001E  
                            _cellVoltages 01A0                             __end_of_putch 07FF  
                      _RGB_AWAIT_AFE_CONN 28B7                       ?_RGB_AWAIT_AFE_CONN 0070  
                                 ??_fputc 0075                                   ??_fputs 0020  
                                 ??_myIsr 0070                                   ??_putch 0071  
       setShortCircuitProtection@delay_us 0067                                __pbssBANK3 01A0  
                              __pbssBANK4 0220                      __end_of_EUSART_Write 36A5  
                      __size_of_init_GPIO 0038                        __size_of_initClock 0003  
                      __size_of_init_TMR1 000B                       statemachine@success 016F  
                       __end_of__Umul8_16 2858                                _efgtoa$961 00B3  
                              _efgtoa$956 00AF                                _efgtoa$965 00B5  
                              _efgtoa$957 00B1                                _efgtoa$966 00B7  
                              _efgtoa$967 00B9                                __pmaintext 2943  
                    ??_RGB_AWAIT_AFE_CONN 0073                      __size_of_internal_16 0009  
         setShortCircuitProtection@scaler 00A2                                   ?___flge 0040  
                                 ?___fleq 0071                         ?_send_I2C_stopBit 0070  
                                 ?___wmul 0071     setTemperatureLimitsint@minCharge_degC 0024  
                         __CFG_PPS1WAY$ON 0000                ?_setShortCircuitProtection 0063  
                              __pintentry 0004                                   ?_efgtoa 00A0  
                  ?_beginAFEcommunication 0020                                   ?_floorf 005A  
                      ??_send_I2C_stopBit 0071                                   ?_strcpy 0071  
                                 ?_strlen 0071                   _shuntResistorValue_mOhm 01B6  
                               ?___xxtofl 0071            setShortCircuitProtection@i_792 00AE  
                      __size_of_vfpfcnvrt FC43                                   _PPSLOCK 0E0F  
                  __size_of_send_I2C_NACK 0009            setShortCircuitProtection@value 00AA  
                        ___lomod@dividend 0028                           ??_read_I2C_data 0073  
                  __size_of_send_I2C_data 0009                                 ?_init_I2C 0070  
                               ?_init_AFE 0070                                 ?_init_RGB 0070  
                readRegister@recievedData 0079                   ??_setShuntResistorValue 0075  
                      __size_of_vsnprintf 007D                      __end_of_readRegister 2A35  
                                 ___aldiv 2E65                                   _adcGain 01CE  
                         __size_of___flge 007C                           __size_of___fleq 0049  
                                 ___aodiv 1A65                                   ___fladd 11DB  
                                 ___aomod 2643                                   ___fldiv 1061  
                                 ___awdiv 2B58                                   ___flneg 36D0  
                                 ___awmod 2A79                                   ___flmul 15D4  
                                 ___flsub 2858                                   ___fltol 2BA9  
                         __size_of___wmul 001B                                   ___lodiv 2D6C  
                                 ___lomod 2C0F                                 ?_vfprintf 00E7  
                         __size_of_efgtoa 067D                                 ?_snprintf 015F  
                           _messageBuffer 2771           ??_AFE_getSetShortCircuitCurrent 0075  
                         __size_of_floorf 00D8                                   __ptext1 1B58  
                                 __ptext2 377A                                   __ptext3 2DE8  
                                 __ptext4 29CA                                   __ptext5 13BD  
                                 __ptext6 1EA7                                   __ptext7 28FB  
                                 __ptext8 3763                                   __ptext9 37E3  
                       __end_of_init_GPIO 083F                         __end_of_initClock 369D  
                       __end_of_init_TMR1 200C                           __size_of_strcpy 001F  
                         __size_of_strlen 0017                                 _T1CONbits 0018  
                            __size_of_abs 0017        __size_of_AFE_getSetCurrentSenseRes 000A  
                            __size_of_pad 0051                                   _isalpha 37E3  
                                 _isdigit 3707                                ??___xxtofl 0075  
                        ___awmod@dividend 0073                ?_AFE_getSetCurrentSenseRes 0071  
                        ___aldiv@dividend 0075                                   _islower 3763  
                                 _isspace 37C7                                   _isupper 374C  
                                 efgtoa@c 00A6                                   efgtoa@d 00C3  
                                 efgtoa@e 00DB                                   efgtoa@f 00A2  
                                 efgtoa@g 00D7                                   efgtoa@h 00CD  
                                 efgtoa@i 00D5                                   efgtoa@l 00D1  
                                 efgtoa@m 00BF                                   efgtoa@n 00DD  
                                 efgtoa@p 00C7                                   efgtoa@t 00BB  
                                 efgtoa@u 00DF                                   efgtoa@w 00CA  
                                 atoi@neg 0024                                   _tolower 28D9  
                                 clrloop0 1002                                   _strncmp 200C  
                                 _toupper 28FB                      end_of_initialization 0054  
                                 floorf@e 0068                                   floorf@m 0064  
                                 floorf@u 006A                                   floorf@x 005A  
                              ??_init_I2C 0071                                ??_init_AFE 007C  
                              ??_init_RGB 0071                                   fputc@fp 0073  
                                 fputs@fp 007A                         _EUSART_Initialize 21A3  
                      ?_EUSART_Initialize 0026                         __end_of_vfpfcnvrt 1000  
                              efgtoa@mode 00CC                                efgtoa@sign 00C5  
                           _send_I2C_NACK 36C7                          ___aldiv@quotient 0022  
              send_I2C_controlByte@RW_bit 0073                                   psplit$0 3C0083  
                                 psplit$1 830084                                   psplit$2 840085  
                                 psplit$3 850086                                   psplit$4 860087  
                                 psplit$5 870088                                   psplit$6 880089  
                                 psplit$7 89008A                             _send_I2C_data 36BE  
                               _RGB_color 2896                                ??_vfprintf 006E  
                      EUSART_Initialize@x 007A                                ??_snprintf 0169  
                                 strcpy@d 0077                                   strlen@a 0073  
                                 strcpy@s 0075                                   strlen@s 0071  
                     ??_EUSART_Initialize 002A                               ___fladd@grs 002B  
                        __CFG_FOSC$INTOSC 0000                             ___xxtofl@sign 0020  
                               _TRISAbits 008C                                 _TRISBbits 008D  
                               _TRISCbits 008E                                 _TRISEbits 0090  
                   __size_of_EUSART_Write 0008         __end_of_AFE_getSetCurrentSenseRes 36E3  
                       __end_of_vsnprintf 2E65                               ___fldiv@grs 0054  
                             ___fldiv@rem 004D             __end_of_SCD_threshold_setting 3820  
                               _RXPPSbits 0E24                         _I2C_writeRegister 281B  
                             ___flmul@grs 0034                 __end_of_EUSART_Initialize 224B  
                   _OCD_threshold_setting 3165                        ?_I2C_writeRegister 0075  
        beginAFEcommunication@commSuccess 002B                            ?_send_I2C_NACK 0070  
                readRegister@slaveAddress 0075                            ?_send_I2C_data 0071  
                     ??_I2C_writeRegister 007B                                ?_RGB_color 0071  
                          __end_of___flge 2D6C                            __end_of___fleq 2B07  
                             vfpfcnvrt@ap 00E6                               vfpfcnvrt@cp 012C  
                             vfpfcnvrt@ct 0135                               vfpfcnvrt@fp 00E3  
                             vfpfcnvrt@ll 013C                            __end_of___wmul 281B  
                             vfpfcnvrt@vp 0144                            __end_of_efgtoa 06D5  
                            _EUSART_Write 369D                            __end_of_floorf 2643  
             I2C_writeRegister@regAddress 0077                                floorf@F524 01AA  
           setShuntResistorValue@res_mOhm 0071          __size_of_setTemperatureLimitsint 0044  
                          __end_of_strcpy 2896                            __end_of_strlen 3735  
   __end_of_AFE_getSetShortCircuitCurrent 37C7    __size_of_AFE_getSetShortCircuitCurrent 001B  
           _AFE_getSetShortCircuitCurrent 37AC                       start_initialization 0020  
                         ___lodiv@divisor 0020                           ___lodiv@counter 007A  
                       pnum$text5_split_1 0083                         pnum$text5_split_2 0084  
                       pnum$text5_split_3 0085                         pnum$text5_split_4 0086  
                       pnum$text5_split_5 0087                         pnum$text5_split_6 0088  
                       pnum$text5_split_7 0089                         pnum$text5_split_8 008A  
                           ?_statemachine 0070                               __end_of_abs 374C  
                             __end_of_pad 2B58                         _minCellTempCharge 01CA  
                    _maxCellTempDischarge 01C4                      _minCellTempDischarge 01C8  
               __end_of_I2C_writeRegister 2839                     __end_of___fpclassifyf 2CF0  
                       _EUSART_Write_Text 3792                     __size_of_readRegister 0036  
                      ?_EUSART_Write_Text 0072                   ??_beginAFEcommunication 0022  
                             vfprintf@fmt 00E9                                  ??___flge 0048  
                                ??___fleq 0020                                  ??___wmul 0075  
                                ??_efgtoa 00A7                                 __Umul8_16 2839  
             ??_setShortCircuitProtection 0069                               __pdataBANK3 01D4  
                                ??_floorf 005E                       ??_EUSART_Write_Text 0074  
           __size_of_send_I2C_controlByte 000A                                  ??_strcpy 0073  
                                ??_strlen 0073                                 ___fladd@a 0075  
                               ___fladd@b 0071                              vsnprintf@cnt 0157  
                            vsnprintf@fmt 0152                                 ___fldiv@a 0040  
                               ___fldiv@b 0044                               __pbssBIGRAM 2771  
                               _adcOffset 01CC                                 ___flmul@a 002A  
                               ___flmul@b 0026                               __pbssCOMMON 007C  
                               ___flsub@a 0040                                 ___flsub@b 0044  
                          ??_statemachine 016D                                 ___latbits 0003  
        send_I2C_controlByte@BlockAddress 0071                                myIsr@count 01D1  
                           __pcstackBANK0 0020                             __pcstackBANK1 00A0  
                           __pcstackBANK2 0120                             __pcstackBANK3 01DB  
                        ___aodiv@dividend 0028                 __size_of_send_I2C_stopBit 0008  
                             snprintf@fmt 0163                         __size_of___xxtofl 0096  
                            _readRegister 29FF  setTemperatureLimitsint@maxDischarge_degC 0022  
               __end_of_EUSART_Write_Text 37AC                __size_of_EUSART_Initialize 00A8  
                           ??_internal_16 0071                                 _atoi$1472 0026  
                               _atoi$1473 002A                                 _atoi$1474 0028  
                        _OV_delay_setting 3820                         __size_of_init_I2C 0010  
                   I2C_writeRegister@data 0079                           ??_send_I2C_NACK 0071  
                       __size_of_init_AFE 002E                         __size_of_init_RGB 0005  
                       _send_I2C_startBit 36A5                           ??_send_I2C_data 0073  
             __size_of_RGB_AWAIT_AFE_CONN 0022            __size_of_setShuntResistorValue 000A  
                                ?___aldiv 0071                                  ?___aodiv 0020  
                      ?_send_I2C_startBit 0070                                  ?___fladd 0071  
           __end_of_setShuntResistorValue 36F7                                  ?___aomod 0020  
                                ?___fldiv 0040                                  ?___awdiv 0071  
                        ___aodiv@quotient 0074                                  ?___flneg 0071  
                                ?___awmod 0071                                  ?___flmul 0026  
                                ?___flsub 0040                                  ?___fltol 005A  
                                ?___lodiv 0020                                  ?___lomod 0020  
                             ??_RGB_color 0073                                ?__Umul8_16 0071  
               EUSART_Initialize@baudrate 0026             setShortCircuitProtection@temp 00A0  
                       __size_of_vfprintf 0035                       ??_send_I2C_startBit 0071  
                       __size_of_snprintf 0018            BQ76920@shuntResistorValue_mOhm 01B2  
                         ___lomod@divisor 0020                           ___lomod@counter 0072  
                                ?_isalpha 0071                                  ?_isdigit 0071  
                                ?_islower 0071                                  ?_isspace 0071  
             ??_AFE_getSetCurrentSenseRes 0075                                 _init_GPIO 0807  
                                ?_isupper 0071                                 _initClock 369A  
                               _init_TMR1 2001                                 _currState 01D3  
                                ?_tolower 0077                 _setShortCircuitProtection 06D5  
              __size_of_I2C_writeRegister 001E                            __size_of_fputc 0054  
                          __size_of_fputs 0026                            __size_of_myIsr 001A  
                                ?_strncmp 0071            ?_AFE_getSetShortCircuitCurrent 0071  
                                ?_toupper 0077                            __size_of_putch 0001  
                         ___aldiv@divisor 0071                     __end_of_read_I2C_data 07FE  
                         ___aldiv@counter 0020                            ___wmul@product 0075  
                                _LATAbits 010C                                  _LATEbits 0110  
               __end_of_send_I2C_startBit 36AD                                 clear_ram0 1001  
                               _tmr1_flag 01D2                                  _PIE1bits 0091  
                                _PIR1bits 0011                setShortCircuitProtection@i 00AC  
                     __end_of_internal_16 36BE                                 _vfpfcnvrt 13BD  
                               _xtoa$1003 0043                                 _xtoa$1004 0045  
                       ___wmul@multiplier 0071                   _setTemperatureLimitsint 2A35  
                              ?_init_GPIO 0070                                ?_initClock 0070  
                              ?_init_TMR1 0070                              _isspace$1512 0075  
                   send_I2C_data@databyte 0071                                vfpfcnvrt@c 0145  
                              vfpfcnvrt@f 0138                __size_of_EUSART_Write_Text 001A  
                               _vsnprintf 2DE8                         _OCD_delay_setting 3800  
               _AFE_getSetCurrentSenseRes 36D9                      __end_of_statemachine 1C4C  
                              vfprintf@ap 00EB                                vfprintf@fp 00E7  
                             ??__Umul8_16 0073                          __size_of___aldiv 0082  
                        __size_of___aodiv 00F3                          __size_of___fladd 01E2  
                        __size_of___aomod 00DC                          __size_of___fldiv 017A  
                        __size_of___awdiv 0051                          __size_of___flneg 0009  
          _setShortCircuitProtection$1844 00A6                          __size_of___awmod 0045  
                             vsnprintf@ap 0154                          __size_of___flmul 022C  
                        __size_of___flsub 001F                          __size_of___fltol 0066  
                  readRegister@regAddress 0077                          __size_of___lodiv 007C  
                        __size_of___lomod 0069                                ?_vfpfcnvrt 00E3  
                              snprintf@ap 016C                           ___aodiv@divisor 0020  
                         ___aodiv@counter 0072                                _ANSELBbits 018D  
                              _ANSELCbits 018E                        ___fpclassifyf@F463 01AE  
                                ___xxtofl 2F6A                          __size_of_isalpha 001D  
                        __size_of_isdigit 0017                                  _dtoa$933 003D  
                        _send_I2C_stopBit 36AD                          __size_of_islower 0017  
                        __size_of_isspace 001C                                  __ptext10 271F  
                                __ptext11 2C0F                                  __ptext20 256B  
                                __ptext12 2D6C                                  __ptext21 2C78  
                                __ptext13 200C                                  __ptext30 3735  
                                __ptext22 2858                                  __ptext14 22FF  
                                __ptext31 2643                                  __ptext23 11DB  
                                __ptext15 1974                                  __ptext40 37C7  
                                __ptext32 1A65                                  __ptext24 36D0  
                                __ptext16 0058                                  __ptext41 3707  
                                __ptext33 2999                                  __ptext25 2CF0  
                                __ptext17 28D9                                  __ptext50 2839  
                                __ptext42 296B                                  __ptext34 2B07  
                                __ptext26 2ABE                                  __ptext18 374C  
                                __ptext51 1061                                  __ptext43 2A35  
                                __ptext35 371E                                  __ptext27 2A79  
                                __ptext19 2877                                  __ptext60 36E3  
                                __ptext52 224B                                  __ptext44 2800  
                                __ptext36 291D                                  __ptext28 2B58  
                                __ptext61 28B7                                  __ptext53 29FF  
                                __ptext45 36ED                                  __ptext37 100D  
                                __ptext29 1D54                                  __ptext70 0807  
                                __ptext62 2896                                  __ptext54 36C7  
                                __ptext46 06D5                                  __ptext38 07FE  
                                __ptext71 369A                                  __ptext63 3792  
                                __ptext55 07EE                                  __ptext47 2F6A  
                                __ptext39 205E                                  __ptext72 36B5  
                                __ptext64 369D                                  __ptext56 281B  
                                __ptext48 2BA9                                  __ptext73 21A3  
                                __ptext65 37AC                                  __ptext57 36AD  
                                __ptext49 15D4                                  __ptext74 2E65  
                                __ptext66 36D9                                  __ptext58 36A5  
                                __ptext67 2001                                  __ptext59 36BE  
                                __ptext68 1801                                  __ptext69 36F7  
                        __size_of_isupper 0017                          __size_of_tolower 0022  
               __end_of_OCD_delay_setting 3810                                strcpy@dest 0078  
                        __size_of_strncmp 0052                          __size_of_toupper 0022  
                              ?_vsnprintf 014E                                  _init_I2C 36F7  
                                _init_AFE 296B                                  _init_RGB 1801  
                           __size_of_atoi 00A1                             __size_of_ctoa 0031  
                           __size_of_main 0028                             __size_of_dtoa 0153  
                           _SSPDATPPSbits 0E21                                 pnum$text5 003C  
                           __size_of_otoa 00F1                     _SCD_threshold_setting 3810  
                           __size_of_stoa 00C5                             __size_of_utoa 00E1  
              __size_of_send_I2C_startBit 0008                             __size_of_xtoa 0159  
                             _internal_16 36B5                                _RB2PPSbits 0E9A  
                              _RC1STAbits 019D                                  efgtoa@fp 00A0  
                                efgtoa@ne 00C1                                  efgtoa@pp 00BD  
                                efgtoa@ou 00AB                                 stoa@F1174 01D4  
                              _RC4PPSbits 0EA4            __size_of_beginAFEcommunication 00B4  
                           _SSPCLKPPSbits 0E20             __end_of_beginAFEcommunication 22FF  
                                int$flags 007E                                _RC5PPSbits 0EA5  
                                _protect1 01D0                 ??_setTemperatureLimitsint 0077  
                                _vfprintf 29CA                                  _snprintf 377A  
                        ___aomod@dividend 0028                  __end_of_OV_delay_setting 3828  
                          _vfpfcnvrt$1018 012F                            _vfpfcnvrt$1019 0131  
                          _vfpfcnvrt$1045 0133                                _INTCONbits 000B  
                             ??_init_GPIO 0071                               ??_initClock 0071  
                             ??_init_TMR1 0071                            __pstringtext10 3092  
                          __pstringtext11 30BE                            __pstringtext20 384C  
                          __pstringtext12 30E9                            __pstringtext21 3850  
                          __pstringtext13 3113                            __pstringtext30 3870  
                          __pstringtext22 3854                            __pstringtext14 313D  
                          __pstringtext31 3873                            __pstringtext23 3858  
                          __pstringtext15 3838                            __pstringtext40 388E  
                          __pstringtext32 3876                            __pstringtext24 385C  
                          __pstringtext16 383C                            __pstringtext41 0000  
                          __pstringtext33 3879                            __pstringtext25 3860  
                          __pstringtext17 3840                            __pstringtext34 387C  
                          __pstringtext26 3864                            __pstringtext18 3844  
                          __pstringtext35 387F                            __pstringtext27 3867  
                          __pstringtext19 3848                            __pstringtext36 3882  
                          __pstringtext28 386A                            __pstringtext37 3885  
                          __pstringtext29 386D                            __pstringtext38 3888  
                          __pstringtext39 388B                                  isalpha@c 0071  
                                isdigit@c 0071                                vsnprintf@f 0159  
                              vsnprintf@n 0150                                vsnprintf@s 014E  
                        _UV_delay_setting 3828                                 snprintf@n 0161  
                               snprintf@s 015F              __end_of_send_I2C_controlByte 36ED  
                                intlevel1 0000       setShortCircuitProtection@current_mA 0063  
                                islower@c 0071                                  isspace@c 0071  
                       __CFG_CLKOUTEN$OFF 0000                                 strcpy@src 0071  
                             _PPSLOCKbits 0E0F                                  isupper@c 0071  
      __size_of_setShortCircuitProtection 0119                                 strncmp@_l 0071  
                               strncmp@_r 0073                               efgtoa@nmode 00C9  
                       _maxCellTempCharge 01C6                           ___aomod@divisor 0020  
                             ??_vfpfcnvrt 0120                                  stoa@nuls 0023  
                         ___aomod@counter 0072                             __pstringtext1 3165  
                           __pstringtext2 3800                             __pstringtext3 3810  
                           __pstringtext4 3820                             __pstringtext5 3828  
                           __pstringtext6 3830                             __pstringtext7 3000  
                           __pstringtext8 3037                             __pstringtext9 3065  
                  __Umul8_16@multiplicand 0071                                  tolower@c 0077  
                          _vsnprintf$1647 0155                    __size_of___fpclassifyf 0078  
                                strncmp@l 0078                                  strncmp@n 0075  
                                strncmp@r 007A                                  toupper@c 0077  
                   EUSART_Write_Text@text 0072                              ___aldiv@sign 0021  
                             _SSPCON2bits 0216                             ___fladd@signs 0028  
         __end_of_setTemperatureLimitsint 2A79                        EUSART_Write@txData 0071  
                            ___aodiv@sign 0073                               ??_vsnprintf 00EE  
                            ___fladd@aexp 0029                              ___fladd@bexp 002A  
                   __size_of_statemachine 00F4                               _toggleColor 007C  
                    __Umul8_16@multiplier 0079                                _SSPCONbits 0215  
              __end_of_RGB_AWAIT_AFE_CONN 28D9                              ___aomod@sign 0073  
                      EUSART_Write_Text@i 0075                     __end_of_send_I2C_NACK 36D0  
                       __Umul8_16@product 0075  
